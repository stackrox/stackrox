central.backup.short = Create a backup of the StackRox database and certificates.
central.backup.long = Create a backup of the StackRox database, certificates and keys (.zip file). You can use it to restore central service and the database.

central.cert.short = Download certificate chain for the Central service.
central.cert.long = Download certificate chain for the Central service or its associated ingress or load balancer, if one exists.

central.db.backup.short = Create a backup of the StackRox database.
central.db.backup.long = Create a backup of the StackRox database (.zip file). You can use it to restore the database.

central.db.restore.short = Restore the StackRox database from a previous backup.
central.db.restore.long = Restore the StackRox database from a backup (.zip file) that you created by using the `roxctl central db backup` command.

central.db.restore.cancel.short = Cancel the ongoing database restore process.
central.db.restore.cancel.long = Cancel the ongoing database restore process.

central.db.restore.status.short = Show information about the ongoing database restore process.
central.db.restore.status.long = Show information such as start time, state, and transfer progress about the ongoing database restore process if one exists.

central.db.short = Commands that control the database operations.
central.db.long =

central.debug.log.short = Display and control the log level.
central.debug.log.long = Display and control the log level. Use `log` to display the current log level, and `log --level=<level>` to set the log level.

central.debug.download-diagnostics.short = Download a bundle containing a snapshot of diagnostic information about the platform.
central.debug.download-diagnostics.long = Download a bundle containing a snapshot of diagnostic information such as logs from Central and Secured Clusters and other non-sensitive configuration data about the platform.

central.debug.dump.short = Download a bundle containing debug information for Central.
central.debug.dump.long = Download a bundle containing debug information for Central such as log files, memory, and CPU profiles. Bundle generation takes a few minutes.

central.debug.authz-trace.short = Stream built-in authorizer traces for all incoming requests.
central.debug.authz-trace.long = Stream built-in authorizer traces for all incoming requests. The command blocks for the given number of minutes and collects the authorization trace log for all incoming API requests to the Central service.

central.debug.short = Commands for debugging the Central Service.
central.debug.long =

central.generate.k8s.short = Generate the required YAML configuration files to deploy StackRox Central into a Kubernetes cluster.
central.generate.k8s.long = Generate the required YAML configuration files to deploy StackRox Central into a Kubernetes cluster.

central.generate.openshift.short = Generate the required YAML configuration files to deploy StackRox Central into an OpenShift cluster.
central.generate.openshift.long = Generate the required YAML configuration files to deploy StackRox Central into an OpenShift cluster.

central.init-bundles.short = Commands for managing cluster init bundle
central.init-bundles.long =

central.init-bundles.generate.short = Generate a new cluster init bundle
central.init-bundles.generate.long = Generate a new init bundle for bootstrapping a new StackRox secured cluster

central.init-bundles.list.short = List cluster init bundles
central.init-bundles.list.long = List all previously generated init bundles for bootstrapping new StackRox secured clusters

central.init-bundles.revoke.short = Revoke a cluster init bundle
central.init-bundles.revoke.long = Revoke an init bundle for bootstrapping new StackRox secured clusters

central.init-bundles.fetch-ca.short = Fetch the StackRox CA Configuration to be used with Helm
central.init-bundles.fetch-ca.long = Fetch the StackRox CA Configuration to be used with Helm (use this if you are pre-creating secrets rather than using an init bundle)

# Intentionally empty values
central.generate.k8s.hostpath.short =
central.generate.k8s.hostpath.long =

central.generate.k8s.pvc.short =
central.generate.k8s.pvc.long =

central.generate.k8s.none.short =
central.generate.k8s.none.long =

central.generate.openshift.hostpath.short =
central.generate.openshift.hostpath.long =

central.generate.openshift.pvc.short =
central.generate.openshift.pvc.long =

central.generate.openshift.none.short =
central.generate.openshift.none.long =

central.generate.short = Generate the required YAML configuration files containing the orchestrator objects to deploy StackRox Central.
central.generate.long =

central.generate.interactive.short = Run the command in interactive mode where it prompts you to provide additional information.
central.generate.interactive.long = Run the command in interactive mode where it prompts you to provide additional information. You can press `Enter` to accept the default value for the prompts.

central.short = Commands related to the Central service.
central.long =

central.db.short = Commands related to the StackRox database.
central.db.long =

central.userpki.delete.short = Delete a user certificate authentication provider.
central.userpki.delete.long = Delete a configured user certificate authentication provider and its associated group mappings.

central.userpki.create.short = Create a new user certificate authentication provider.
central.userpki.create.long = Create a new user certificate authentication provider by using the provided PEM-encoded root certificate files.

central.userpki.list.short = Display all user certificate authentication providers.
central.userpki.list.long = Display all configured user certificate authentication providers in a human-readable or JSON format.

central.userpki.short = Commands for managing user certificate authorization providers.
central.userpki.long =

central.whoami.short = Display information about the current user and their authentication method.
central.whoami.long = Display information about the current user and their authentication method.

cluster.delete.short = Remove a Sensor from Central.
cluster.delete.long = Remove a Sensor from Central, without deleting any orchestrator objects.

cluster.short = Commands related to a cluster.
cluster.long =

collector.support-packages.upload.short = Upload files from a collector support package to Central.
collector.support-packages.upload.long =

collector.support-packages.short = Commands to upload support packages for Collector.
collector.support-packages.long =

collector.short = Commands related to the Collector service.
collector.long =

deployment.check.short = Check deployments for deploy time policy violations.
deployment.check.long = Check deployments for deploy time policy violations, and exit with an non-zero code if at least one of the violated policies has deploy time enforcement turned on.

deployment.short = Commands related to deployments.
deployment.long =

image.check.short = Check images for build time policy violations, and report them.
image.check.long = Check images for build time policy violations, and report them.

image.scan.short = Scan the specified image, and return scan results.
image.scan.long = Scan the specified image and return the fully enriched image. Optionally, force a rescan of the image. You must have write permissions for the `Image` resource.

image.short = Commands that you can run on a specific image.
image.long =

log-convert.short =
log-convert.long =

scanner.generate.short = Generate the required YAML configuration files to deploy StackRox Scanner
scanner.generate.long = Generate the required YAML configuration files to deploy StackRox Scanner

scanner.upload-db.short = Upload a vulnerability database for the StackRox Scanner.
scanner.upload-db.long = Upload a vulnerability database for the StackRox Scanner.

scanner.short = Commands related to the Scanner service.
scanner.long =

sensor.generate.k8s.short = Generate the required files to deploy StackRox services into a Kubernetes cluster.
sensor.generate.k8s.long = Generate the required YAML configuration files to deploy StackRox Sensor, Collector, and Admission controller (optional) into a Kubernetes cluster.

sensor.generate.openshift.short = Generate the required files to deploy StackRox services into an OpenShift cluster.
sensor.generate.openshift.long = Generate the required YAML configuration files to deploy StackRox Sensor and Collector into an OpenShift cluster.

sensor.get-bundle.short = Download a bundle with the files to deploy StackRox services into a cluster.
sensor.get-bundle.long = Download a bundle with the required YAML configuration files to deploy StackRox Sensor, Collector, and Admission controller (optional).

sensor.generate-certs.short = Download a YAML file with renewed certificates for StackRox Sensor, Collector, and Admission controller (if deployed).
sensor.generate-certs.long =

sensor.generate.short = Commands that generate files to deploy StackRox services into secured clusters.
sensor.generate.long =

sensor.short = Commands related to deploying StackRox services in secured clusters.
sensor.long =

# Helm Commands

helm.short = Commands related to StackRox Helm Charts.
helm.long =

helm.output.short = Output a Helm Chart.
helm.output.long =

helm.derive-local-values.short = Derive local Helm values from cluster configuration.
helm.derive-local-values.long =

generate.short = Commands related to generating different resources.
generate.long =

generate.netpol.short = Recommend Network Policies based on deployment information.
generate.netpol.long = Based on a given folder containing deployment YAMLs, will generate a list of recommended Network Policies. Will write to stdout if no output flags are provided.

version.short = Display the current roxctl version.
version.long = Display the current roxctl version.

completion.short = Generate shell completion scripts.
