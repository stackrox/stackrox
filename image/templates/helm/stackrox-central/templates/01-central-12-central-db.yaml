{{- include "srox.init" . -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: central-db
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "srox.labels" (list . "deployment" "central-db") | nindent 4 }}
    app: central-db
  annotations:
    {{- include "srox.annotations" (list . "deployment" "central-db") | nindent 4 }}
spec:
  replicas: 1
  minReadySeconds: 15
  selector:
    matchLabels:
      app: central-db
  strategy:
    type: Recreate
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      labels:
        app: central-db
        {{- include "srox.podLabels" (list . "deployment" "central-db") | nindent 8 }}
      annotations:
        {{- include "srox.podAnnotations" (list . "deployment" "central-db") | nindent 8 }}
    spec:
      imagePullSecrets:
      {{- range $secretName := ._rox.imagePullSecrets._names }}
      - name: {{ quote $secretName }}
      {{- end }}
      containers:
      - name: central-db
        image: stackrox/sandbox:postgres-14-stat-wal3
        env:
        # Very not production
        - name: POSTGRES_HOST_AUTH_METHOD
          value: "password"
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        ports:
        - containerPort: 5432
          name: postgresql
          protocol: TCP
        resources:
          limits:
            cpu: "2"
            memory: 4Gi
          requests:
            cpu: 200m
            memory: 200Mi
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: disk
      volumes:
      - name: disk
        {{ if ._rox.central.persistence._pvcCfg -}}
        persistentVolumeClaim:
          claimName: central-db
        {{ else }}
        emptyDir: {}
        {{- end }}
