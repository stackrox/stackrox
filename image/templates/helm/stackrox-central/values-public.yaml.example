# StackRox Kubernetes Security Platform - Central Services Chart
# PUBLIC configuration file.
#
# This file contains general configuration values relevant for the deployment of the
# StackRox Kubernetes Platform Central Services components, which do not contain or reference
# sensitive data. This file can and should be stored in a source code management system
# and should be referenced on each `helm upgrade`.
#
# Most of the values in this file are optional, and you only should need to make modifications
# if the default deployment configuration is not sufficient for you for whatever reason.
# The most notable exception is the `imagePullSecrets` section, which needs to be configured
# according to the registry access in your environment.
#
# Other than that, the following are sections that are the most likely to require custom
# configuration:
# - `image.registry`: if you are pulling images from a registry other than `stackrox.io`.
# - `env.offlineMode`: if you want to run StackRox in offline mode.
# - `central.disableTelemetry`: if you want to opt out of the transmission of telemetry and
#   diagnostic data.
# - `central.endpointsConfig`: if you want to expose additional endpoints (such as endpoints
#   without TLS) in Central.
# - `central.resources`: if the default resource configuration for Central is not adequate
#   for your environment.
# - `central.persistence`: for configuring where Central stores its database volume.
#

# # BEGIN CONFIGURATION VALUES SECTION

# imagePullSecrets:
#   # allowNone=true indicates that no image pull secrets are required to be configured
#   # upon initial deployment. Use this setting if you are using a cluster-private registry
#   # that does not require authentication.
#   allowNone: false
#
#   # useExisting specifies a list of existing Kubernetes image pull secrets in the target
#   # namespace that should be used for trying to pull StackRox images. Use this if you have
#   # your custom way of injecting image pull secrets.
#   useExisting:
#   - secret1
#   - secret2
#
#   # useFromDefaultServiceAccount=true will instruct the deployment logic to use any
#   # image pull secrets referenced by the default service account in the target namespace.
#   # This is a common way to grant namespace-wide access to a Docker image registry.
#   # This behavior is the default, set the value to `false` if you do not want this.
#   useFromDefaultServiceAccount: true
#
# image:
#   # The registry relative to which all image references are resolved, if no more
#   # specify registry is specified for the workloads (see `central.image`, `scanner.image`,
#   # and `scanner.dbImage` below).
#   # This can be just a registry hostname such as `stackrox.io`, or a registry hostname with
#   # a "remote" component such as `us.gcr.io/my-stackrox-mirror`.
#   registry: stackrox.io
#
# env:
#   # Treat the environment as an OpenShift cluster. Leave this unset to use auto-detection
#   # based on available API resources on the server.
#   # Set it to true to auto-detect the OpenShift version, otherwise set it explicitly.
#   # Possible values: null, false, true, 3, 4
#   openshift: false
#
#   # Whether the target cluster is an Istio-enabled cluster. If you deploy via `helm install`,
#   # this can typically be determined automatically, so we recommend to not set a value here.
#   # Set to true or false explicitly to override the auto-sensing logic only.
#   istio: false
#
#   # The "platform" of the target cluster into which StackRox is being deployed. This can
#   # be the name of an infrastructure provider or product, and will tailor the StackRox
#   # deployment to the respective target environment. Currently, the only supported platforms
#   # are "default" and "gke".
#   # If you deploy via `helm install`, the environment can typically be determined automatically,
#   # choose a fixed value here only if you want to override the auto-sensing logic.
#   platform: default
#
#   # offlineMode=true instructs StackRox to not attempt any outgoing connections to the
#   # internet. Use this in air-gapped environments, where it's important that workloads do
#   # not even try to make outbound connections. Defaults to `false` when omitted.
#   offlineMode: false
#
# # Additional certificate authorities (CAs) to trust, besides system roots.
# # Use this setting if Central or Scanner need to reach out to services that use certificates
# # issued by an authority in your organization, but are NOT globally trusted. In these cases,
# # specify the root CA certificate of your organization.
# additionalCAs:
#   acme-labs-ca.crt: |
#     -----BEGIN CERTIFICATE-----
#     [... base64 (PEM) encoded certificate data ...]
#     -----END CERTIFICATE-----
#
# # Public configuration options for the StackRox Central deployment.
# central:
#   # disableTelemetry=true will opt out of transmitting telemetry data to StackRox.
#   # This only has an effect upon initial deployment.
#   disableTelemetry: false
#
#   # General configuration options for the Central deployment.
#   # See the `config/central/config.yaml.default` file that is shipped with this chart
#   # for a fully documented version.
#   config: |
#     maintenance:
#       safeMode: false
#       compaction:
#         enabled: true
#         bucketFillFraction: .5
#         freeFractionThreshold: 0.75
#       # Configuration option for rolling back to a previous version after an upgrade has been completed.
#       # Default to none.
#       # By default, the user may initiate a rollback if upgrade fails before Central has started.
#       # Users may rollback to their previous version once Central has started, but this may result in data loss,
#       # so users must explicitly specify the version they are rolling back to in order to acknowledge the effects.
#       forceRollbackVersion: 3.0.58.0
#
#   # Additional endpoints configuration for the Central deployment.
#   # See the `config/central/endpoints.yaml.default` file that is shipped with this chart
#   # for a fully documented version.
#   endpointsConfig: |
#     endpoints:
#     - listen: ":8080"
#       protocols:
#       - http
#       tls:
#         disable: true
#
#   # If you want to use a monitoring solution such as Prometheus, set the following value to
#   # "true" to make a /metrics endpoint for Central available on port 9090.
#   exposeMonitoring: true
#
#   # If you want to enforce StackRox Central to only run on certain nodes, you can specify
#   # a node selector here to make sure Central can only be scheduled on Nodes with the
#   # given label. This is particular relevant for the "hostPath" persistence type.
#   nodeSelector:
#     # This can contain arbitrary `label-key: label-value` pairs.
#     role: stackrox-central
#
#   If the nodes selected by the node selector are tainted, you can specify the corresponding taint tolerations here.
#   tolerations:
#     - effect: NoSchedule
#       key: infra
#       value: reserved
#     - effect: NoExecute
#       key: infra
#       value: reserved
#
#   # Configures the Central image to be used. Most users will only need to configure a
#   # custom registry (if any) at the global scope, and do not require any settings here.
#   image:
#     # A custom registry that will override the global `image.registry` setting for the
#     # Central image.
#     registry: us.gcr.io/stackrox-central-repo
#
#     # A custom image name that will override the default `main`.
#     name: custom-main
#
#     # A custom image tag that will override the default tag based on the current
#     # StackRox version.
#     # IMPORTANT: If you set a value here, you will lose the ability to simply upgrade
#     # by running `helm upgrade` against a more recent chart version. You MUST increment
#     # the version referenced in this tag for every upgrade. It is therefore strongly
#     # recommended that if you choose to mirror StackRox images in your own registry,
#     # you preserve all image tags as-is.
#     tag: custom-version
#
#     # A full image name override that will be used as-is for the StackRox Central image.
#     # This is only required in very rare circumstances, and its use is strongly discouraged.
#     # If set, all other image-related values will be ignored for the StackRox Central image.
#     # The following example value lists the full image ref that would be constructed from
#     # the above components.
#     fullRef: "us.gcr.io/stackrox-central-repo/custom-main:custom-version"
#
#   # Custom resource overrides for the Central deployment. Use this if your environment is
#   # very large or very small, and the default resource configuration does not provide
#   # satisfactory performance.
#   resources:
#     requests:
#       memory: "4Gi"
#       cpu: "1500m"
#     limits:
#       memory: "8Gi"
#       cpu: "4000m"
#
#   # Persistence configuration for the StackRox database volume.
#   # Exactly ONE of the nested values should be specified. If none is specified,
#   # the StackRox deployment will be configured with the default PVC-based persistence.
#   persistence:
#     # The path on the node where to store the StackRox database volume
#     # when using host path persistence.
#     hostPath: /var/lib/stackrox
#
#     # The persistent volume claim details when storing the StackRox database
#     # on a persistent volume managed by a Kubernetes persistent volume claim (PVC).
#     persistentVolumeClaim:
#       # The name of the claim. This defaults to stackrox-db if not set.
#       claimName: stackrox-db
#
#       # Whether to create the claim upon deployment. The default is true; set this to false
#       # if you have a pre-existing persistent volume claim that you want to use.
#       createClaim: true
#
#       # The size of the persistent volume managed by the claim, in Gigabytes (or with an
#       # explicit unit, such as "1Ti"). Defaults to 100Gi.
#       size: 100
#
#       # If you want to bind a preexisting persistent volume, you can specify it here.
#       volume:
#         volumeSpec:
#           # The section includes volume type specific config, the volume type can be:
#           # gcePersistentDisk, hostpath, filestore(nfs) etc.
#           gcePersistentDisk:
#             # Type specific parameters. The specified persistent volume should have
#             # been created.
#             pdName: gke-pv
#
#   # Configuration for exposing the StackRox Central deployment for external access.
#   # Generally, only ONE of the nested values should be specified. If none is specified,
#   # the Central deployment will not be exposed, and you must either manually expose it,
#   # or access it via port-forwarding.
#   exposure:
#     # Exposure via a Kubernetes LoadBalancer service.
#     loadBalancer:
#       enabled: true
#       # The port on which to expose StackRox Central. Defaults to 443.
#       port: 443
#       # The static IP to assign to the load balancer. Defaults to dynamic.
#       ip: 10.0.0.0
#
#     # Exposure via a Kubernetes NodePort service.
#     nodePort:
#       enabled: true
#       # The port on the node under which to expose the service. Omit this for
#       # letting Kubernetes automatically select a node port (recommended).
#       port: 32000
#
#     # Exposure via an OpenShift route. Only available for OpenShift clusters
#     route:
#       enabled: true
#
#     # Additional volume mounts for the Central container. Only few people will require this.
#     extraMounts:
#     - name: my-configmap  # the name of the volume
#       # The source of the volume. This will be embedded as-is in the `volume:` section of the
#       # pod spec.
#       source:
#         configMap:
#           name: my-configmap
#       # The mount point of the volume. This will be embedded as-is in the `volumeMounts:` section
#       # of the pod spec.
#       mount:
#         mountPath: /etc/my-config-data
#
# # Public configuration options for the StackRox Scanner.
# scanner:
#   # disable=true will cause the StackRox Kubernetes Security Platform to be
#   # deployed without the StackRox Scanner, meaning that certain functionalities
#   # may not be available. If this setting is changed prior to a `helm upgrade`
#   # invocation, the existing StackRox scanner deployment will be removed.
#   disable: false
#
#   # The number of replicas for the Scanner deployment. If autoscaling is enabled (see below),
#   # this determines the initial number of replicas.
#   replicas: 3
#
#   # The log level for the scanner deployment. This typically does not need to be changed.
#   logLevel: INFO
#
#   # If you want to enforce StackRox Scanner to only run on certain nodes, you can specify
#   # a node selector here to make sure Scanner can only be scheduled on Nodes with the
#   # given label.
#   nodeSelector:
#     # This can contain arbitrary `label-key: label-value` pairs.
#     role: stackrox-scanner
#
#   If the nodes selected by the node selector are tainted, you can specify the corresponding taint tolerations here.
#   tolerations:
#     - effect: NoSchedule
#       key: infra
#       value: reserved
#     - effect: NoExecute
#       key: infra
#       value: reserved
#
#   # If you want to enforce StackRox Scanner DB to only run on certain nodes, you can specify
#   # a node selector here to make sure Scanner DB can only be scheduled on Nodes with the
#   # given label.
#   dbNodeSelector:
#     # This can contain arbitrary `label-key: label-value` pairs.
#     role: stackrox-scanner-db
#
#   If the nodes selected by the node selector are tainted, you can specify the corresponding taint tolerations here.
#   dbTolerations:
#     - effect: NoSchedule
#       key: infra
#       value: reserved
#     - effect: NoExecute
#       key: infra
#       value: reserved
#
#   # Configuration for autoscaling the Scanner deployment.
#   autoscaling:
#     # disable=true causes autoscaling to be disabled. All other settings in this section
#     # will have no effect.
#     disable: false
#     # The minimum number of replicas for autoscaling. The following value is the default.
#     minReplicas: 2
#     # The maximum number of replicas for autoscaling. The following value is the default.
#     maxReplicas: 5
#
#   # Custom resource overrides for the Scanner deployment.
#   resources:
#     requests:
#       memory: "1500Mi"
#       cpu: "1000m"
#     limits:
#       memory: "4Gi"
#       cpu: "2000m"
#
#   # Custom resource overrides for the Scanner DB deployment.
#   dbResources:
#     limits:
#       cpu: "2000m"
#       memory: "4Gi"
#     requests:
#       cpu: "200m"
#       memory: "200Mi"
#
#   # Custom configuration of the image to be used for the Scanner deployment.
#   # See `central.image` for a full example.
#   image:
#     registry: us.gcr.io/stackrox-scanner-repo
#     name: scanner  # "scanner" is the default
#
#   dbImage:
#     registry: us.gcr.io/stackrox-scanner-db-repo
#     name: scanner-db  # "scanner-db" is the default
#
#
# # Customization Settings.
# # The following allows specifying custom Kubernetes metadata (labels and annotations)
# # for all objects instantiated by this Helm chart, as well as additional pod labels,
# # pod annotations, and container environment variables for workloads.
# # The configuration is hierarchical, in the sense that metadata that is defined at a more
# # generic scope (e.g., for all objects) can be overridden by metadata defined at a narrower
# # scope (e.g., only for the central deployment).
# customize:
#   # Extra metadata for all objects.
#   labels:
#     my-label-key: my-label-value
#   annotations:
#     my-annotation-key: my-annotation-value
#
#   # Extra pod metadata for all objects (only has an effect for workloads, i.e., deployments).
#   podLabels:
#     my-pod-label-key: my-pod-label-value
#   podAnnotations:
#     my-pod-annotation-key: my-pod-annotation-value
#
#   # Extra environment variables for all containers in all objects.
#   envVars:
#     MY_ENV_VAR_NAME: MY_ENV_VAR_VALUE
#
#   # Extra metadata for the central deployment only.
#   central:
#     labels: {}
#     annotations: {}
#     podLabels: {}
#     podAnnotations: {}
#     envVars: {}
#
#   # Extra metadata for the scanner deployment only.
#   scanner:
#     labels: {}
#     annotations: {}
#     podLabels: {}
#     podAnnotations: {}
#     envVars: {}
#
#   # Extra metadata for the scanner-db deployment only.
#   scanner-db:
#     labels: {}
#     annotations: {}
#     podLabels: {}
#     podAnnotations: {}
#     envVars: {}
#
#   # Extra metadata for all other objects. The keys in the following map can be
#   # an object name of the form "service/central-loadbalancer", or a reference to all
#   # objects of a given type in the form "service/*". The values under each key
#   # are the five metadata overrides (labels, annotations, podLabels, podAnnotations, envVars)
#   # as specified above, though only the first two will be relevant for non-workload
#   # object types.
#   other:
#     "service/*":
#       labels: {}
#       annotations: {}
#
# # EXPERT SETTINGS
# # The following settings should only be changed if you know very well what you are doing.
# # The scenarios in which these are required are generally not supported.
#
# # Set allowNonstandardNamespace=true if you are deploying into a namespace other than
# # "stackrox". This has been observed to work in some case, but is not generally supported.
# allowNonstandardNamespace: false
#
# # Set allowNonstandardReleaseName=true if you are deploying with a release name other than
# # the default "stackrox-central-services". This has been observed to work in some cases,
# # but is not generally supported.
# allowNonstandardReleaseName: false
