{{- include "srox.init" . -}}

{{- if not ._rox.scanner.disable -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner
  namespace: {{ .Release.Namespace }}
  labels:
    app: scanner
    {{- include "srox.labels" (list . "deployment" "scanner") | nindent 4 }}
  annotations:
    {{- include "srox.annotations" (list . "deployment" "scanner") | nindent 4 }}
spec:
  replicas: {{ ._rox.scanner.replicas }}
  minReadySeconds: 15
  selector:
    matchLabels:
      app: scanner
  strategy:
    type: Recreate
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      labels:
        app: scanner
        {{- include "srox.podLabels" (list . "deployment" "scanner") | nindent 8 }}
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "8080,8443"
        {{- include "srox.podAnnotations" (list . "deployment" "scanner") | nindent 8 }}
        {{- if eq ._rox.env.openshift 4 }}
        openshift.io/required-scc: nonroot-v2
        {{- end }}
    spec:
      {{- if ._rox.scanner._nodeSelector }}
      nodeSelector:
        {{- ._rox.scanner._nodeSelector | nindent 8 }}
      {{- end }}
      {{- if ._rox.scanner.tolerations }}
      tolerations:
        {{- toYaml ._rox.scanner.tolerations | nindent 8 }}
      {{- end }}
      affinity:
        {{- toYaml ._rox.scanner.affinity | nindent 8 }}
      containers:
      - name: scanner
        {{ if eq ._rox.scanner.mode "slim" -}}
        image: {{ ._rox.scanner.slimImage.fullRef | quote }}
        {{ else }}
        image: {{ ._rox.scanner.image.fullRef | quote }}
        {{ end -}}
        env:
        - name: ROX_MEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
        - name: GOMAXPROCS
          valueFrom:
            resourceFieldRef:
              resource: limits.cpu
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- if ._rox.env.openshift }}
        - name: ROX_OPENSHIFT_API
          value: "true"
        {{- end}}
        {{- include "srox.envVars" (list . "deployment" "scanner" "scanner") | nindent 8 }}
        resources:
          {{- ._rox.scanner._resources | nindent 10 }}
        command:
        - /entrypoint.sh
        ports:
        - name: https
          containerPort: 8080
        - name: grpc
          containerPort: 8443
        {{ if ._rox.scanner.exposeMonitoring -}}
        - name: monitoring
          containerPort: 9090
        {{- end}}
        securityContext:
          capabilities:
            drop: ["NET_RAW"]
          runAsUser: 65534
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /scanner/ping
            port: 8080
          timeoutSeconds: 10
          periodSeconds: 10
          failureThreshold: 6
          successThreshold: 1
        volumeMounts:
        - name: scanner-etc-ssl-volume
          mountPath: /etc/ssl
        - name: scanner-etc-pki-volume
          mountPath: /etc/pki/ca-trust
        - name: additional-ca-volume
          mountPath: /usr/local/share/ca-certificates/
          readOnly: true
        - name: scanner-config-volume
          mountPath: /etc/scanner
          readOnly: true
        - name: scanner-tls-volume
          mountPath: /run/secrets/stackrox.io/certs/
          readOnly: true
        - name: vuln-temp-db
          mountPath: /var/lib/stackrox
        - name: proxy-config-volume
          mountPath: /run/secrets/stackrox.io/proxy-config/
          readOnly: true
        - name: scanner-db-password
          mountPath: /run/secrets/stackrox.io/secrets
          readOnly: true
        {{- include "srox.injectedCABundleVolumeMount" . | nindent 8 }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: scanner
      volumes:
      - name: additional-ca-volume
        secret:
          defaultMode: 420
          optional: true
          {{- if eq ._rox.scanner.mode "slim" }}
          secretName: additional-ca-sensor
          {{- else }}
          secretName: additional-ca
          {{- end }}
      - name: scanner-etc-ssl-volume
        emptyDir: {}
      - name: scanner-etc-pki-volume
        emptyDir: {}
      - name: scanner-config-volume
        configMap:
          name: scanner-config
      - name: scanner-tls-volume
        secret:
          secretName: scanner-tls
      - name: vuln-temp-db
        emptyDir: {}
      - name: proxy-config-volume
        secret:
          secretName: proxy-config
          optional: true
      - name: scanner-db-password
        secret:
          secretName: scanner-db-password
      {{- include "srox.injectedCABundleVolume" . | nindent 6 }}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: scanner-db
  namespace: {{ .Release.Namespace }}
  labels:
    app: scanner-db
    {{- include "srox.labels" (list . "deployment" "scanner-db") | nindent 4 }}
  annotations:
    {{- include "srox.annotations" (list . "deployment" "scanner-db") | nindent 4 }}
spec:
  replicas: 1
  minReadySeconds: 15
  selector:
    matchLabels:
      app: scanner-db
  strategy:
    type: Recreate
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      labels:
        app: scanner-db
        {{- include "srox.podLabels" (list . "deployment" "scanner-db") | nindent 8 }}
      annotations:
        traffic.sidecar.istio.io/excludeInboundPorts: "5432"
        {{- include "srox.podAnnotations" (list . "deployment" "scanner-db") | nindent 8 }}
        {{- if eq ._rox.env.openshift 4 }}
        openshift.io/required-scc: nonroot-v2
        {{- end }}
    spec:
      {{- if ._rox.scanner._dbNodeSelector }}
      nodeSelector:
        {{- ._rox.scanner._dbNodeSelector | nindent 8 }}
      {{- end }}
      {{- if ._rox.scanner.dbTolerations }}
      tolerations:
        {{- toYaml ._rox.scanner.dbTolerations | nindent 8 }}
      {{- end }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            # ScannerDB is single-homed, so avoid preemptible nodes.
            - weight: 100
              preference:
                matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: NotIn
                    values:
                    - "true"
            - weight: 50
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/infra
                    operator: Exists
            - weight: 25
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/compute
                    operator: Exists
            # From v1.20 node-role.kubernetes.io/control-plane replaces node-role.kubernetes.io/master (removed in
            # v1.25). We apply both because our goal is not to run pods on control plane nodes for any version of k8s.
            - weight: 100
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: DoesNotExist
            - weight: 100
              preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
      initContainers:
        - name: init-db
          {{ if eq ._rox.scanner.mode "slim" -}}
          image: {{ ._rox.scanner.slimDBImage.fullRef | quote }}
          {{ else -}}
          image: {{ ._rox.scanner.dbImage.fullRef | quote }}
          {{ end -}}
          env:
            - name: POSTGRES_PASSWORD_FILE
              value: "/run/secrets/stackrox.io/secrets/password"
            - name: ROX_SCANNER_DB_INIT
              value: "true"
          resources:
            {{- ._rox.scanner._dbResources | nindent 12 }}
          volumeMounts:
            - name: scanner-db-data
              mountPath: /var/lib/postgresql/data
            - name: scanner-db-tls-volume
              mountPath: /run/secrets/stackrox.io/certs
              readOnly: true
            - name: scanner-db-password
              mountPath: /run/secrets/stackrox.io/secrets
              readOnly: true
      containers:
      - name: db
        {{ if eq ._rox.scanner.mode "slim" -}}
        image: {{ ._rox.scanner.slimDBImage.fullRef | quote }}
        {{ else -}}
        image: {{ ._rox.scanner.dbImage.fullRef | quote }}
        {{ end -}}
        env:
          {{- include "srox.envVars" (list . "deployment" "scanner-db" "db") | nindent 10 }}
        ports:
        - name: tcp-postgresql
          protocol: TCP
          containerPort: 5432
        resources:
          {{- ._rox.scanner._dbResources | nindent 10 }}
        volumeMounts:
          - name: scanner-db-data
            mountPath: /var/lib/postgresql/data
          - name: scanner-db-tls-volume
            mountPath: /run/secrets/stackrox.io/certs
            readOnly: true
      serviceAccountName: scanner
      securityContext:
        fsGroup: 70
        runAsGroup: 70
        runAsNonRoot: true
        runAsUser: 70
      volumes:
      - name: scanner-config-volume
        configMap:
          name: scanner-config
      - name: scanner-tls-volume
        secret:
          secretName: scanner-tls
      - name: scanner-db-tls-volume
        secret:
          secretName: scanner-db-tls
          defaultMode: 0640
          items:
          - key: cert.pem
            path: server.crt
          - key: key.pem
            path: server.key
          - key: ca.pem
            path: root.crt
      - name: scanner-db-data
        emptyDir: {}
      - name: scanner-db-password
        secret:
          secretName: scanner-db-password

{{ end -}}
