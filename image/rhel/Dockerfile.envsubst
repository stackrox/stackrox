ARG BASE_REGISTRY=registry.access.redhat.com
ARG BASE_IMAGE=ubi8-minimal
ARG BASE_TAG=8.6

FROM ${BASE_REGISTRY}/${BASE_IMAGE}:${BASE_TAG} AS extracted_bundle

COPY bundle.tar.gz /
WORKDIR /bundle
RUN microdnf install tar gzip && tar -zxf /bundle.tar.gz

FROM ${BASE_REGISTRY}/${BASE_IMAGE}:${BASE_TAG}

LABEL name="main" \
      vendor="StackRox" \
      maintainer="support@stackrox.com" \
      summary="The StackRox Kubernetes Security Platform" \
      description="This image contains components required to operate the StackRox Kubernetes Security Platform." \
      version="${LABEL_VERSION}" \
      release="${LABEL_RELEASE}" \
      quay.expires-after="${QUAY_TAG_EXPIRATION}"

ARG ROX_IMAGE_FLAVOR
ARG ROX_PRODUCT_BRANDING
ARG TARGET_ARCH=amd64

ENV PATH="/stackrox:$PATH" \
    ROX_ROXCTL_IN_MAIN_IMAGE="true" \
    ROX_IMAGE_FLAVOR=${ROX_IMAGE_FLAVOR} \
    ROX_PRODUCT_BRANDING=${ROX_PRODUCT_BRANDING}

COPY signatures/RPM-GPG-KEY-CentOS-Official /
COPY scripts /stackrox/
COPY --from=extracted_bundle /bundle/assets/ /assets/
COPY --from=extracted_bundle /bundle/stackrox/ /stackrox/
COPY --from=extracted_bundle /bundle/THIRD_PARTY_NOTICES/ /THIRD_PARTY_NOTICES/
COPY --from=extracted_bundle /bundle/ui/ /ui/
COPY --from=extracted_bundle /bundle/usr/local/bin/ldb /usr/local/bin/
COPY --from=extracted_bundle /bundle/snappy.rpm /tmp/
COPY --from=extracted_bundle /bundle/postgres-libs.rpm /tmp/
COPY --from=extracted_bundle /bundle/postgres.rpm /tmp/
COPY --from=extracted_bundle /bundle/go/ /go/

RUN ln -s entrypoint-wrapper.sh /stackrox/admission-control && \
    ln -s entrypoint-wrapper.sh /stackrox/compliance && \
    ln -s entrypoint-wrapper.sh /stackrox/kubernetes-sensor && \
    ln -s entrypoint-wrapper.sh /stackrox/sensor-upgrader && \
    ln -s /assets/downloads/cli/roxctl-linux-${TARGET_ARCH} /stackrox/roxctl && \
    ln -s /assets/downloads/cli/roxctl-linux-amd64 /assets/downloads/cli/roxctl-linux && \
    rpm --import RPM-GPG-KEY-CentOS-Official && \
    microdnf upgrade && \
    rpm -i /tmp/snappy.rpm && \
    rpm -i --nodeps /tmp/postgres-libs.rpm && \
    rpm -i --nodeps /tmp/postgres.rpm && \
    microdnf install lz4 bzip2 util-linux && \
    microdnf clean all && \
    rm /tmp/snappy.rpm /tmp/postgres.rpm /tmp/postgres-libs.rpm RPM-GPG-KEY-CentOS-Official && \
    # (Optional) Remove line below to keep package management utilities
    rpm -e --nodeps $(rpm -qa curl '*rpm*' '*dnf*' '*libsolv*' '*hawkey*' 'yum*') && \
    rm -rf /var/cache/dnf /var/cache/yum && \
    # The contents of paths mounted as emptyDir volumes in Kubernetes are saved
    # by the script `save-dir-contents` during the image build. The directory
    # contents are then restored by the script `restore-all-dir-contents`
    # during the container start.
    chown -R 4000:4000 /etc/pki /etc/ssl && save-dir-contents /etc/pki/ca-trust /etc/ssl && \
    mkdir -p /var/lib/stackrox && chown -R 4000:4000 /var/lib/stackrox && \
    mkdir -p /var/log/stackrox && chown -R 4000:4000 /var/log/stackrox && \
    mkdir -p /var/cache/stackrox && chown -R 4000:4000 /var/cache/stackrox && \
    chown -R 4000:4000 /tmp

EXPOSE 8443

USER 4000:4000

ENTRYPOINT ["/stackrox/roxctl"]

HEALTHCHECK CMD curl --insecure --fail https://127.0.0.1:8443/v1/ping
