{
  "definitions": [
    {
      "protopath": ".proto:/:protoc-osx-x86_64-22.0:/:include:/:google:/:protobuf:/:any.proto",
      "def": {
        "messages": [
          {
            "name": "Any",
            "fields": [
              {
                "id": 1,
                "name": "type_url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-22.0:/:include:/:google:/:protobuf:/:api.proto",
      "def": {
        "messages": [
          {
            "name": "Api",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "methods",
                "type": "Method",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "source_context",
                "type": "SourceContext"
              },
              {
                "id": 6,
                "name": "mixins",
                "type": "Mixin",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "Method",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "request_type_url",
                "type": "string"
              },
              {
                "id": 3,
                "name": "request_streaming",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "response_type_url",
                "type": "string"
              },
              {
                "id": 5,
                "name": "response_streaming",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "Mixin",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "root",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/source_context.proto"
          },
          {
            "path": "google/protobuf/type.proto"
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-22.0:/:include:/:google:/:protobuf:/:compiler:/:plugin.proto",
      "def": {
        "enums": [
          {
            "name": "CodeGeneratorResponse.Feature",
            "enum_fields": [
              {
                "name": "FEATURE_NONE"
              },
              {
                "name": "FEATURE_PROTO3_OPTIONAL",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Version",
            "fields": [
              {
                "id": 1,
                "name": "major",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "minor",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "patch",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "suffix",
                "type": "string"
              }
            ]
          },
          {
            "name": "CodeGeneratorRequest",
            "fields": [
              {
                "id": 1,
                "name": "file_to_generate",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "parameter",
                "type": "string"
              },
              {
                "id": 15,
                "name": "proto_file",
                "type": "FileDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "compiler_version",
                "type": "Version"
              }
            ]
          },
          {
            "name": "CodeGeneratorResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "string"
              },
              {
                "id": 2,
                "name": "supported_features",
                "type": "uint64"
              },
              {
                "id": 15,
                "name": "file",
                "type": "File",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "File",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "insertion_point",
                    "type": "string"
                  },
                  {
                    "id": 15,
                    "name": "content",
                    "type": "string"
                  },
                  {
                    "id": 16,
                    "name": "generated_code_info",
                    "type": "GeneratedCodeInfo"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.protobuf.compiler"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-22.0:/:include:/:google:/:protobuf:/:descriptor.proto",
      "def": {
        "enums": [
          {
            "name": "FieldDescriptorProto.Type",
            "enum_fields": [
              {
                "name": "TYPE_DOUBLE",
                "integer": 1
              },
              {
                "name": "TYPE_FLOAT",
                "integer": 2
              },
              {
                "name": "TYPE_INT64",
                "integer": 3
              },
              {
                "name": "TYPE_UINT64",
                "integer": 4
              },
              {
                "name": "TYPE_INT32",
                "integer": 5
              },
              {
                "name": "TYPE_FIXED64",
                "integer": 6
              },
              {
                "name": "TYPE_FIXED32",
                "integer": 7
              },
              {
                "name": "TYPE_BOOL",
                "integer": 8
              },
              {
                "name": "TYPE_STRING",
                "integer": 9
              },
              {
                "name": "TYPE_GROUP",
                "integer": 10
              },
              {
                "name": "TYPE_MESSAGE",
                "integer": 11
              },
              {
                "name": "TYPE_BYTES",
                "integer": 12
              },
              {
                "name": "TYPE_UINT32",
                "integer": 13
              },
              {
                "name": "TYPE_ENUM",
                "integer": 14
              },
              {
                "name": "TYPE_SFIXED32",
                "integer": 15
              },
              {
                "name": "TYPE_SFIXED64",
                "integer": 16
              },
              {
                "name": "TYPE_SINT32",
                "integer": 17
              },
              {
                "name": "TYPE_SINT64",
                "integer": 18
              }
            ]
          },
          {
            "name": "FieldDescriptorProto.Label",
            "enum_fields": [
              {
                "name": "LABEL_OPTIONAL",
                "integer": 1
              },
              {
                "name": "LABEL_REQUIRED",
                "integer": 2
              },
              {
                "name": "LABEL_REPEATED",
                "integer": 3
              }
            ]
          },
          {
            "name": "FileOptions.OptimizeMode",
            "enum_fields": [
              {
                "name": "SPEED",
                "integer": 1
              },
              {
                "name": "CODE_SIZE",
                "integer": 2
              },
              {
                "name": "LITE_RUNTIME",
                "integer": 3
              }
            ]
          },
          {
            "name": "FieldOptions.CType",
            "enum_fields": [
              {
                "name": "STRING"
              },
              {
                "name": "CORD",
                "integer": 1
              },
              {
                "name": "STRING_PIECE",
                "integer": 2
              }
            ]
          },
          {
            "name": "FieldOptions.JSType",
            "enum_fields": [
              {
                "name": "JS_NORMAL"
              },
              {
                "name": "JS_STRING",
                "integer": 1
              },
              {
                "name": "JS_NUMBER",
                "integer": 2
              }
            ]
          },
          {
            "name": "FieldOptions.OptionRetention",
            "enum_fields": [
              {
                "name": "RETENTION_UNKNOWN"
              },
              {
                "name": "RETENTION_RUNTIME",
                "integer": 1
              },
              {
                "name": "RETENTION_SOURCE",
                "integer": 2
              }
            ]
          },
          {
            "name": "FieldOptions.OptionTargetType",
            "enum_fields": [
              {
                "name": "TARGET_TYPE_UNKNOWN"
              },
              {
                "name": "TARGET_TYPE_FILE",
                "integer": 1
              },
              {
                "name": "TARGET_TYPE_EXTENSION_RANGE",
                "integer": 2
              },
              {
                "name": "TARGET_TYPE_MESSAGE",
                "integer": 3
              },
              {
                "name": "TARGET_TYPE_FIELD",
                "integer": 4
              },
              {
                "name": "TARGET_TYPE_ONEOF",
                "integer": 5
              },
              {
                "name": "TARGET_TYPE_ENUM",
                "integer": 6
              },
              {
                "name": "TARGET_TYPE_ENUM_ENTRY",
                "integer": 7
              },
              {
                "name": "TARGET_TYPE_SERVICE",
                "integer": 8
              },
              {
                "name": "TARGET_TYPE_METHOD",
                "integer": 9
              }
            ]
          },
          {
            "name": "MethodOptions.IdempotencyLevel",
            "enum_fields": [
              {
                "name": "IDEMPOTENCY_UNKNOWN"
              },
              {
                "name": "NO_SIDE_EFFECTS",
                "integer": 1
              },
              {
                "name": "IDEMPOTENT",
                "integer": 2
              }
            ]
          },
          {
            "name": "Annotation.Semantic",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "SET",
                "integer": 1
              },
              {
                "name": "ALIAS",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "FileDescriptorSet",
            "fields": [
              {
                "id": 1,
                "name": "file",
                "type": "FileDescriptorProto",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FileDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "package",
                "type": "string"
              },
              {
                "id": 3,
                "name": "dependency",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "public_dependency",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "weak_dependency",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "message_type",
                "type": "DescriptorProto",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "enum_type",
                "type": "EnumDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "service",
                "type": "ServiceDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "extension",
                "type": "FieldDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "options",
                "type": "FileOptions"
              },
              {
                "id": 9,
                "name": "source_code_info",
                "type": "SourceCodeInfo"
              },
              {
                "id": 12,
                "name": "syntax",
                "type": "string"
              },
              {
                "id": 13,
                "name": "edition",
                "type": "string"
              }
            ]
          },
          {
            "name": "DescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "field",
                "type": "FieldDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "extension",
                "type": "FieldDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "nested_type",
                "type": "DescriptorProto",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "enum_type",
                "type": "EnumDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "extension_range",
                "type": "ExtensionRange",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "oneof_decl",
                "type": "OneofDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "options",
                "type": "MessageOptions"
              },
              {
                "id": 9,
                "name": "reserved_range",
                "type": "ReservedRange",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "reserved_name",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ExtensionRange",
                "fields": [
                  {
                    "id": 1,
                    "name": "start",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "end",
                    "type": "int32"
                  },
                  {
                    "id": 3,
                    "name": "options",
                    "type": "ExtensionRangeOptions"
                  }
                ]
              },
              {
                "name": "ReservedRange",
                "fields": [
                  {
                    "id": 1,
                    "name": "start",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "end",
                    "type": "int32"
                  }
                ]
              }
            ]
          },
          {
            "name": "ExtensionRangeOptions",
            "fields": [
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FieldDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "label",
                "type": "Label"
              },
              {
                "id": 5,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 6,
                "name": "type_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "extendee",
                "type": "string"
              },
              {
                "id": 7,
                "name": "default_value",
                "type": "string"
              },
              {
                "id": 9,
                "name": "oneof_index",
                "type": "int32"
              },
              {
                "id": 10,
                "name": "json_name",
                "type": "string"
              },
              {
                "id": 8,
                "name": "options",
                "type": "FieldOptions"
              },
              {
                "id": 17,
                "name": "proto3_optional",
                "type": "bool"
              }
            ]
          },
          {
            "name": "OneofDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "options",
                "type": "OneofOptions"
              }
            ]
          },
          {
            "name": "EnumDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "EnumValueDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "EnumOptions"
              },
              {
                "id": 4,
                "name": "reserved_range",
                "type": "EnumReservedRange",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "reserved_name",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "EnumReservedRange",
                "fields": [
                  {
                    "id": 1,
                    "name": "start",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "end",
                    "type": "int32"
                  }
                ]
              }
            ]
          },
          {
            "name": "EnumValueDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "options",
                "type": "EnumValueOptions"
              }
            ]
          },
          {
            "name": "ServiceDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "method",
                "type": "MethodDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "ServiceOptions"
              }
            ]
          },
          {
            "name": "MethodDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "input_type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "output_type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "options",
                "type": "MethodOptions"
              },
              {
                "id": 5,
                "name": "client_streaming",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 6,
                "name": "server_streaming",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              }
            ]
          },
          {
            "name": "FileOptions",
            "fields": [
              {
                "id": 1,
                "name": "java_package",
                "type": "string"
              },
              {
                "id": 8,
                "name": "java_outer_classname",
                "type": "string"
              },
              {
                "id": 10,
                "name": "java_multiple_files",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 20,
                "name": "java_generate_equals_and_hash",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 27,
                "name": "java_string_check_utf8",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 9,
                "name": "optimize_for",
                "type": "OptimizeMode",
                "options": [
                  {
                    "name": "default",
                    "value": "SPEED"
                  }
                ]
              },
              {
                "id": 11,
                "name": "go_package",
                "type": "string"
              },
              {
                "id": 16,
                "name": "cc_generic_services",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 17,
                "name": "java_generic_services",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 18,
                "name": "py_generic_services",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 42,
                "name": "php_generic_services",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 23,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 31,
                "name": "cc_enable_arenas",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 36,
                "name": "objc_class_prefix",
                "type": "string"
              },
              {
                "id": 37,
                "name": "csharp_namespace",
                "type": "string"
              },
              {
                "id": 39,
                "name": "swift_prefix",
                "type": "string"
              },
              {
                "id": 40,
                "name": "php_class_prefix",
                "type": "string"
              },
              {
                "id": 41,
                "name": "php_namespace",
                "type": "string"
              },
              {
                "id": 44,
                "name": "php_metadata_namespace",
                "type": "string"
              },
              {
                "id": 45,
                "name": "ruby_package",
                "type": "string"
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              38
            ]
          },
          {
            "name": "MessageOptions",
            "fields": [
              {
                "id": 1,
                "name": "message_set_wire_format",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 2,
                "name": "no_standard_descriptor_accessor",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 3,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 7,
                "name": "map_entry",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "deprecated_legacy_json_field_conflicts",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              4,
              5,
              6,
              8,
              9
            ]
          },
          {
            "name": "FieldOptions",
            "fields": [
              {
                "id": 1,
                "name": "ctype",
                "type": "CType",
                "options": [
                  {
                    "name": "default",
                    "value": "STRING"
                  }
                ]
              },
              {
                "id": 2,
                "name": "packed",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "jstype",
                "type": "JSType",
                "options": [
                  {
                    "name": "default",
                    "value": "JS_NORMAL"
                  }
                ]
              },
              {
                "id": 5,
                "name": "lazy",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 15,
                "name": "unverified_lazy",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 3,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 10,
                "name": "weak",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 16,
                "name": "debug_redact",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 17,
                "name": "retention",
                "type": "OptionRetention"
              },
              {
                "id": 18,
                "name": "target",
                "type": "OptionTargetType"
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "OneofOptions",
            "fields": [
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EnumOptions",
            "fields": [
              {
                "id": 2,
                "name": "allow_alias",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 6,
                "name": "deprecated_legacy_json_field_conflicts",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "EnumValueOptions",
            "fields": [
              {
                "id": 1,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServiceOptions",
            "fields": [
              {
                "id": 33,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MethodOptions",
            "fields": [
              {
                "id": 33,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 34,
                "name": "idempotency_level",
                "type": "IdempotencyLevel",
                "options": [
                  {
                    "name": "default",
                    "value": "IDEMPOTENCY_UNKNOWN"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UninterpretedOption",
            "fields": [
              {
                "id": 2,
                "name": "name",
                "type": "NamePart",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "identifier_value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "positive_int_value",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "negative_int_value",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "double_value",
                "type": "double"
              },
              {
                "id": 7,
                "name": "string_value",
                "type": "bytes"
              },
              {
                "id": 8,
                "name": "aggregate_value",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "NamePart",
                "fields": [
                  {
                    "id": 1,
                    "name": "name_part",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "is_extension",
                    "type": "bool"
                  }
                ]
              }
            ]
          },
          {
            "name": "SourceCodeInfo",
            "fields": [
              {
                "id": 1,
                "name": "location",
                "type": "Location",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Location",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "int32",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "packed",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "span",
                    "type": "int32",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "packed",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 3,
                    "name": "leading_comments",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "trailing_comments",
                    "type": "string"
                  },
                  {
                    "id": 6,
                    "name": "leading_detached_comments",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "GeneratedCodeInfo",
            "fields": [
              {
                "id": 1,
                "name": "annotation",
                "type": "Annotation",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Annotation",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "int32",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "packed",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "source_file",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "begin",
                    "type": "int32"
                  },
                  {
                    "id": 4,
                    "name": "end",
                    "type": "int32"
                  },
                  {
                    "id": 5,
                    "name": "semantic",
                    "type": "Semantic"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-22.0:/:include:/:google:/:protobuf:/:duration.proto",
      "def": {
        "messages": [
          {
            "name": "Duration",
            "fields": [
              {
                "id": 1,
                "name": "seconds",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "nanos",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-22.0:/:include:/:google:/:protobuf:/:empty.proto",
      "def": {
        "messages": [
          {
            "name": "Empty"
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-22.0:/:include:/:google:/:protobuf:/:field_mask.proto",
      "def": {
        "messages": [
          {
            "name": "FieldMask",
            "fields": [
              {
                "id": 1,
                "name": "paths",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-22.0:/:include:/:google:/:protobuf:/:source_context.proto",
      "def": {
        "messages": [
          {
            "name": "SourceContext",
            "fields": [
              {
                "id": 1,
                "name": "file_name",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-22.0:/:include:/:google:/:protobuf:/:struct.proto",
      "def": {
        "enums": [
          {
            "name": "NullValue",
            "enum_fields": [
              {
                "name": "NULL_VALUE"
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Struct",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "fields",
                  "type": "Value"
                }
              }
            ]
          },
          {
            "name": "Value",
            "fields": [
              {
                "id": 1,
                "name": "null_value",
                "type": "NullValue"
              },
              {
                "id": 2,
                "name": "number_value",
                "type": "double"
              },
              {
                "id": 3,
                "name": "string_value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "bool_value",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "struct_value",
                "type": "Struct"
              },
              {
                "id": 6,
                "name": "list_value",
                "type": "ListValue"
              }
            ]
          },
          {
            "name": "ListValue",
            "fields": [
              {
                "id": 1,
                "name": "values",
                "type": "Value",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-22.0:/:include:/:google:/:protobuf:/:timestamp.proto",
      "def": {
        "messages": [
          {
            "name": "Timestamp",
            "fields": [
              {
                "id": 1,
                "name": "seconds",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "nanos",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-22.0:/:include:/:google:/:protobuf:/:type.proto",
      "def": {
        "enums": [
          {
            "name": "Field.Kind",
            "enum_fields": [
              {
                "name": "TYPE_UNKNOWN"
              },
              {
                "name": "TYPE_DOUBLE",
                "integer": 1
              },
              {
                "name": "TYPE_FLOAT",
                "integer": 2
              },
              {
                "name": "TYPE_INT64",
                "integer": 3
              },
              {
                "name": "TYPE_UINT64",
                "integer": 4
              },
              {
                "name": "TYPE_INT32",
                "integer": 5
              },
              {
                "name": "TYPE_FIXED64",
                "integer": 6
              },
              {
                "name": "TYPE_FIXED32",
                "integer": 7
              },
              {
                "name": "TYPE_BOOL",
                "integer": 8
              },
              {
                "name": "TYPE_STRING",
                "integer": 9
              },
              {
                "name": "TYPE_GROUP",
                "integer": 10
              },
              {
                "name": "TYPE_MESSAGE",
                "integer": 11
              },
              {
                "name": "TYPE_BYTES",
                "integer": 12
              },
              {
                "name": "TYPE_UINT32",
                "integer": 13
              },
              {
                "name": "TYPE_ENUM",
                "integer": 14
              },
              {
                "name": "TYPE_SFIXED32",
                "integer": 15
              },
              {
                "name": "TYPE_SFIXED64",
                "integer": 16
              },
              {
                "name": "TYPE_SINT32",
                "integer": 17
              },
              {
                "name": "TYPE_SINT64",
                "integer": 18
              }
            ]
          },
          {
            "name": "Field.Cardinality",
            "enum_fields": [
              {
                "name": "CARDINALITY_UNKNOWN"
              },
              {
                "name": "CARDINALITY_OPTIONAL",
                "integer": 1
              },
              {
                "name": "CARDINALITY_REQUIRED",
                "integer": 2
              },
              {
                "name": "CARDINALITY_REPEATED",
                "integer": 3
              }
            ]
          },
          {
            "name": "Syntax",
            "enum_fields": [
              {
                "name": "SYNTAX_PROTO2"
              },
              {
                "name": "SYNTAX_PROTO3",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Type",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "fields",
                "type": "Field",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "oneofs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "source_context",
                "type": "SourceContext"
              },
              {
                "id": 6,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "Field",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "Kind"
              },
              {
                "id": 2,
                "name": "cardinality",
                "type": "Cardinality"
              },
              {
                "id": 3,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "type_url",
                "type": "string"
              },
              {
                "id": 7,
                "name": "oneof_index",
                "type": "int32"
              },
              {
                "id": 8,
                "name": "packed",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "json_name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "default_value",
                "type": "string"
              }
            ]
          },
          {
            "name": "Enum",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "enumvalue",
                "type": "EnumValue",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "source_context",
                "type": "SourceContext"
              },
              {
                "id": 5,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "EnumValue",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Option",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "Any"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/source_context.proto"
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-22.0:/:include:/:google:/:protobuf:/:wrappers.proto",
      "def": {
        "messages": [
          {
            "name": "DoubleValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "double"
              }
            ]
          },
          {
            "name": "FloatValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "float"
              }
            ]
          },
          {
            "name": "Int64Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "int64"
              }
            ]
          },
          {
            "name": "UInt64Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "Int32Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "int32"
              }
            ]
          },
          {
            "name": "UInt32Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "BoolValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "bool"
              }
            ]
          },
          {
            "name": "StringValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "BytesValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-25.3:/:include:/:google:/:protobuf:/:any.proto",
      "def": {
        "messages": [
          {
            "name": "Any",
            "fields": [
              {
                "id": 1,
                "name": "type_url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-25.3:/:include:/:google:/:protobuf:/:api.proto",
      "def": {
        "messages": [
          {
            "name": "Api",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "methods",
                "type": "Method",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "source_context",
                "type": "SourceContext"
              },
              {
                "id": 6,
                "name": "mixins",
                "type": "Mixin",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "Method",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "request_type_url",
                "type": "string"
              },
              {
                "id": 3,
                "name": "request_streaming",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "response_type_url",
                "type": "string"
              },
              {
                "id": 5,
                "name": "response_streaming",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "Mixin",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "root",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/source_context.proto"
          },
          {
            "path": "google/protobuf/type.proto"
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-25.3:/:include:/:google:/:protobuf:/:compiler:/:plugin.proto",
      "def": {
        "enums": [
          {
            "name": "CodeGeneratorResponse.Feature",
            "enum_fields": [
              {
                "name": "FEATURE_NONE"
              },
              {
                "name": "FEATURE_PROTO3_OPTIONAL",
                "integer": 1
              },
              {
                "name": "FEATURE_SUPPORTS_EDITIONS",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Version",
            "fields": [
              {
                "id": 1,
                "name": "major",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "minor",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "patch",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "suffix",
                "type": "string"
              }
            ]
          },
          {
            "name": "CodeGeneratorRequest",
            "fields": [
              {
                "id": 1,
                "name": "file_to_generate",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "parameter",
                "type": "string"
              },
              {
                "id": 15,
                "name": "proto_file",
                "type": "FileDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 17,
                "name": "source_file_descriptors",
                "type": "FileDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "compiler_version",
                "type": "Version"
              }
            ]
          },
          {
            "name": "CodeGeneratorResponse",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "string"
              },
              {
                "id": 2,
                "name": "supported_features",
                "type": "uint64"
              },
              {
                "id": 15,
                "name": "file",
                "type": "File",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "File",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "insertion_point",
                    "type": "string"
                  },
                  {
                    "id": 15,
                    "name": "content",
                    "type": "string"
                  },
                  {
                    "id": 16,
                    "name": "generated_code_info",
                    "type": "GeneratedCodeInfo"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.protobuf.compiler"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-25.3:/:include:/:google:/:protobuf:/:descriptor.proto",
      "def": {
        "enums": [
          {
            "name": "Edition",
            "enum_fields": [
              {
                "name": "EDITION_UNKNOWN"
              },
              {
                "name": "EDITION_PROTO2",
                "integer": 998
              },
              {
                "name": "EDITION_PROTO3",
                "integer": 999
              },
              {
                "name": "EDITION_2023",
                "integer": 1000
              },
              {
                "name": "EDITION_1_TEST_ONLY",
                "integer": 1
              },
              {
                "name": "EDITION_2_TEST_ONLY",
                "integer": 2
              },
              {
                "name": "EDITION_99997_TEST_ONLY",
                "integer": 99997
              },
              {
                "name": "EDITION_99998_TEST_ONLY",
                "integer": 99998
              },
              {
                "name": "EDITION_99999_TEST_ONLY",
                "integer": 99999
              }
            ]
          },
          {
            "name": "ExtensionRangeOptions.VerificationState",
            "enum_fields": [
              {
                "name": "DECLARATION"
              },
              {
                "name": "UNVERIFIED",
                "integer": 1
              }
            ]
          },
          {
            "name": "FieldDescriptorProto.Type",
            "enum_fields": [
              {
                "name": "TYPE_DOUBLE",
                "integer": 1
              },
              {
                "name": "TYPE_FLOAT",
                "integer": 2
              },
              {
                "name": "TYPE_INT64",
                "integer": 3
              },
              {
                "name": "TYPE_UINT64",
                "integer": 4
              },
              {
                "name": "TYPE_INT32",
                "integer": 5
              },
              {
                "name": "TYPE_FIXED64",
                "integer": 6
              },
              {
                "name": "TYPE_FIXED32",
                "integer": 7
              },
              {
                "name": "TYPE_BOOL",
                "integer": 8
              },
              {
                "name": "TYPE_STRING",
                "integer": 9
              },
              {
                "name": "TYPE_GROUP",
                "integer": 10
              },
              {
                "name": "TYPE_MESSAGE",
                "integer": 11
              },
              {
                "name": "TYPE_BYTES",
                "integer": 12
              },
              {
                "name": "TYPE_UINT32",
                "integer": 13
              },
              {
                "name": "TYPE_ENUM",
                "integer": 14
              },
              {
                "name": "TYPE_SFIXED32",
                "integer": 15
              },
              {
                "name": "TYPE_SFIXED64",
                "integer": 16
              },
              {
                "name": "TYPE_SINT32",
                "integer": 17
              },
              {
                "name": "TYPE_SINT64",
                "integer": 18
              }
            ]
          },
          {
            "name": "FieldDescriptorProto.Label",
            "enum_fields": [
              {
                "name": "LABEL_OPTIONAL",
                "integer": 1
              },
              {
                "name": "LABEL_REPEATED",
                "integer": 3
              },
              {
                "name": "LABEL_REQUIRED",
                "integer": 2
              }
            ]
          },
          {
            "name": "FileOptions.OptimizeMode",
            "enum_fields": [
              {
                "name": "SPEED",
                "integer": 1
              },
              {
                "name": "CODE_SIZE",
                "integer": 2
              },
              {
                "name": "LITE_RUNTIME",
                "integer": 3
              }
            ]
          },
          {
            "name": "FieldOptions.CType",
            "enum_fields": [
              {
                "name": "STRING"
              },
              {
                "name": "CORD",
                "integer": 1
              },
              {
                "name": "STRING_PIECE",
                "integer": 2
              }
            ]
          },
          {
            "name": "FieldOptions.JSType",
            "enum_fields": [
              {
                "name": "JS_NORMAL"
              },
              {
                "name": "JS_STRING",
                "integer": 1
              },
              {
                "name": "JS_NUMBER",
                "integer": 2
              }
            ]
          },
          {
            "name": "FieldOptions.OptionRetention",
            "enum_fields": [
              {
                "name": "RETENTION_UNKNOWN"
              },
              {
                "name": "RETENTION_RUNTIME",
                "integer": 1
              },
              {
                "name": "RETENTION_SOURCE",
                "integer": 2
              }
            ]
          },
          {
            "name": "FieldOptions.OptionTargetType",
            "enum_fields": [
              {
                "name": "TARGET_TYPE_UNKNOWN"
              },
              {
                "name": "TARGET_TYPE_FILE",
                "integer": 1
              },
              {
                "name": "TARGET_TYPE_EXTENSION_RANGE",
                "integer": 2
              },
              {
                "name": "TARGET_TYPE_MESSAGE",
                "integer": 3
              },
              {
                "name": "TARGET_TYPE_FIELD",
                "integer": 4
              },
              {
                "name": "TARGET_TYPE_ONEOF",
                "integer": 5
              },
              {
                "name": "TARGET_TYPE_ENUM",
                "integer": 6
              },
              {
                "name": "TARGET_TYPE_ENUM_ENTRY",
                "integer": 7
              },
              {
                "name": "TARGET_TYPE_SERVICE",
                "integer": 8
              },
              {
                "name": "TARGET_TYPE_METHOD",
                "integer": 9
              }
            ]
          },
          {
            "name": "MethodOptions.IdempotencyLevel",
            "enum_fields": [
              {
                "name": "IDEMPOTENCY_UNKNOWN"
              },
              {
                "name": "NO_SIDE_EFFECTS",
                "integer": 1
              },
              {
                "name": "IDEMPOTENT",
                "integer": 2
              }
            ]
          },
          {
            "name": "FeatureSet.FieldPresence",
            "enum_fields": [
              {
                "name": "FIELD_PRESENCE_UNKNOWN"
              },
              {
                "name": "EXPLICIT",
                "integer": 1
              },
              {
                "name": "IMPLICIT",
                "integer": 2
              },
              {
                "name": "LEGACY_REQUIRED",
                "integer": 3
              }
            ]
          },
          {
            "name": "FeatureSet.EnumType",
            "enum_fields": [
              {
                "name": "ENUM_TYPE_UNKNOWN"
              },
              {
                "name": "OPEN",
                "integer": 1
              },
              {
                "name": "CLOSED",
                "integer": 2
              }
            ]
          },
          {
            "name": "FeatureSet.RepeatedFieldEncoding",
            "enum_fields": [
              {
                "name": "REPEATED_FIELD_ENCODING_UNKNOWN"
              },
              {
                "name": "PACKED",
                "integer": 1
              },
              {
                "name": "EXPANDED",
                "integer": 2
              }
            ]
          },
          {
            "name": "FeatureSet.Utf8Validation",
            "enum_fields": [
              {
                "name": "UTF8_VALIDATION_UNKNOWN"
              },
              {
                "name": "NONE",
                "integer": 1
              },
              {
                "name": "VERIFY",
                "integer": 2
              }
            ]
          },
          {
            "name": "FeatureSet.MessageEncoding",
            "enum_fields": [
              {
                "name": "MESSAGE_ENCODING_UNKNOWN"
              },
              {
                "name": "LENGTH_PREFIXED",
                "integer": 1
              },
              {
                "name": "DELIMITED",
                "integer": 2
              }
            ]
          },
          {
            "name": "FeatureSet.JsonFormat",
            "enum_fields": [
              {
                "name": "JSON_FORMAT_UNKNOWN"
              },
              {
                "name": "ALLOW",
                "integer": 1
              },
              {
                "name": "LEGACY_BEST_EFFORT",
                "integer": 2
              }
            ]
          },
          {
            "name": "Annotation.Semantic",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "SET",
                "integer": 1
              },
              {
                "name": "ALIAS",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "FileDescriptorSet",
            "fields": [
              {
                "id": 1,
                "name": "file",
                "type": "FileDescriptorProto",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FileDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "package",
                "type": "string"
              },
              {
                "id": 3,
                "name": "dependency",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "public_dependency",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "weak_dependency",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "message_type",
                "type": "DescriptorProto",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "enum_type",
                "type": "EnumDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "service",
                "type": "ServiceDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "extension",
                "type": "FieldDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "options",
                "type": "FileOptions"
              },
              {
                "id": 9,
                "name": "source_code_info",
                "type": "SourceCodeInfo"
              },
              {
                "id": 12,
                "name": "syntax",
                "type": "string"
              },
              {
                "id": 14,
                "name": "edition",
                "type": "Edition"
              }
            ]
          },
          {
            "name": "DescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "field",
                "type": "FieldDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "extension",
                "type": "FieldDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "nested_type",
                "type": "DescriptorProto",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "enum_type",
                "type": "EnumDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "extension_range",
                "type": "ExtensionRange",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "oneof_decl",
                "type": "OneofDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "options",
                "type": "MessageOptions"
              },
              {
                "id": 9,
                "name": "reserved_range",
                "type": "ReservedRange",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "reserved_name",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ExtensionRange",
                "fields": [
                  {
                    "id": 1,
                    "name": "start",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "end",
                    "type": "int32"
                  },
                  {
                    "id": 3,
                    "name": "options",
                    "type": "ExtensionRangeOptions"
                  }
                ]
              },
              {
                "name": "ReservedRange",
                "fields": [
                  {
                    "id": 1,
                    "name": "start",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "end",
                    "type": "int32"
                  }
                ]
              }
            ]
          },
          {
            "name": "ExtensionRangeOptions",
            "fields": [
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "declaration",
                "type": "Declaration",
                "is_repeated": true,
                "options": [
                  {
                    "name": "retention",
                    "value": "RETENTION_SOURCE"
                  }
                ]
              },
              {
                "id": 50,
                "name": "features",
                "type": "FeatureSet"
              },
              {
                "id": 3,
                "name": "verification",
                "type": "VerificationState",
                "options": [
                  {
                    "name": "default",
                    "value": "UNVERIFIED"
                  }
                ]
              }
            ],
            "messages": [
              {
                "name": "Declaration",
                "fields": [
                  {
                    "id": 1,
                    "name": "number",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "full_name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "reserved",
                    "type": "bool"
                  },
                  {
                    "id": 6,
                    "name": "repeated",
                    "type": "bool"
                  }
                ],
                "reserved_ids": [
                  4
                ]
              }
            ]
          },
          {
            "name": "FieldDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "label",
                "type": "Label"
              },
              {
                "id": 5,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 6,
                "name": "type_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "extendee",
                "type": "string"
              },
              {
                "id": 7,
                "name": "default_value",
                "type": "string"
              },
              {
                "id": 9,
                "name": "oneof_index",
                "type": "int32"
              },
              {
                "id": 10,
                "name": "json_name",
                "type": "string"
              },
              {
                "id": 8,
                "name": "options",
                "type": "FieldOptions"
              },
              {
                "id": 17,
                "name": "proto3_optional",
                "type": "bool"
              }
            ]
          },
          {
            "name": "OneofDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "options",
                "type": "OneofOptions"
              }
            ]
          },
          {
            "name": "EnumDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "EnumValueDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "EnumOptions"
              },
              {
                "id": 4,
                "name": "reserved_range",
                "type": "EnumReservedRange",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "reserved_name",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "EnumReservedRange",
                "fields": [
                  {
                    "id": 1,
                    "name": "start",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "end",
                    "type": "int32"
                  }
                ]
              }
            ]
          },
          {
            "name": "EnumValueDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "options",
                "type": "EnumValueOptions"
              }
            ]
          },
          {
            "name": "ServiceDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "method",
                "type": "MethodDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "ServiceOptions"
              }
            ]
          },
          {
            "name": "MethodDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "input_type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "output_type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "options",
                "type": "MethodOptions"
              },
              {
                "id": 5,
                "name": "client_streaming",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 6,
                "name": "server_streaming",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              }
            ]
          },
          {
            "name": "FileOptions",
            "fields": [
              {
                "id": 1,
                "name": "java_package",
                "type": "string"
              },
              {
                "id": 8,
                "name": "java_outer_classname",
                "type": "string"
              },
              {
                "id": 10,
                "name": "java_multiple_files",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 20,
                "name": "java_generate_equals_and_hash",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 27,
                "name": "java_string_check_utf8",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 9,
                "name": "optimize_for",
                "type": "OptimizeMode",
                "options": [
                  {
                    "name": "default",
                    "value": "SPEED"
                  }
                ]
              },
              {
                "id": 11,
                "name": "go_package",
                "type": "string"
              },
              {
                "id": 16,
                "name": "cc_generic_services",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 17,
                "name": "java_generic_services",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 18,
                "name": "py_generic_services",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 42,
                "name": "php_generic_services",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 23,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 31,
                "name": "cc_enable_arenas",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 36,
                "name": "objc_class_prefix",
                "type": "string"
              },
              {
                "id": 37,
                "name": "csharp_namespace",
                "type": "string"
              },
              {
                "id": 39,
                "name": "swift_prefix",
                "type": "string"
              },
              {
                "id": 40,
                "name": "php_class_prefix",
                "type": "string"
              },
              {
                "id": 41,
                "name": "php_namespace",
                "type": "string"
              },
              {
                "id": 44,
                "name": "php_metadata_namespace",
                "type": "string"
              },
              {
                "id": 45,
                "name": "ruby_package",
                "type": "string"
              },
              {
                "id": 50,
                "name": "features",
                "type": "FeatureSet"
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              38
            ]
          },
          {
            "name": "MessageOptions",
            "fields": [
              {
                "id": 1,
                "name": "message_set_wire_format",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 2,
                "name": "no_standard_descriptor_accessor",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 3,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 7,
                "name": "map_entry",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "deprecated_legacy_json_field_conflicts",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 12,
                "name": "features",
                "type": "FeatureSet"
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              4,
              5,
              6,
              8,
              9
            ]
          },
          {
            "name": "FieldOptions",
            "fields": [
              {
                "id": 1,
                "name": "ctype",
                "type": "CType",
                "options": [
                  {
                    "name": "default",
                    "value": "STRING"
                  }
                ]
              },
              {
                "id": 2,
                "name": "packed",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "jstype",
                "type": "JSType",
                "options": [
                  {
                    "name": "default",
                    "value": "JS_NORMAL"
                  }
                ]
              },
              {
                "id": 5,
                "name": "lazy",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 15,
                "name": "unverified_lazy",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 3,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 10,
                "name": "weak",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 16,
                "name": "debug_redact",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 17,
                "name": "retention",
                "type": "OptionRetention"
              },
              {
                "id": 19,
                "name": "targets",
                "type": "OptionTargetType",
                "is_repeated": true
              },
              {
                "id": 20,
                "name": "edition_defaults",
                "type": "EditionDefault",
                "is_repeated": true
              },
              {
                "id": 21,
                "name": "features",
                "type": "FeatureSet"
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              4,
              18
            ],
            "messages": [
              {
                "name": "EditionDefault",
                "fields": [
                  {
                    "id": 3,
                    "name": "edition",
                    "type": "Edition"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "OneofOptions",
            "fields": [
              {
                "id": 1,
                "name": "features",
                "type": "FeatureSet"
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EnumOptions",
            "fields": [
              {
                "id": 2,
                "name": "allow_alias",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 6,
                "name": "deprecated_legacy_json_field_conflicts",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 7,
                "name": "features",
                "type": "FeatureSet"
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "EnumValueOptions",
            "fields": [
              {
                "id": 1,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 2,
                "name": "features",
                "type": "FeatureSet"
              },
              {
                "id": 3,
                "name": "debug_redact",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServiceOptions",
            "fields": [
              {
                "id": 34,
                "name": "features",
                "type": "FeatureSet"
              },
              {
                "id": 33,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MethodOptions",
            "fields": [
              {
                "id": 33,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 34,
                "name": "idempotency_level",
                "type": "IdempotencyLevel",
                "options": [
                  {
                    "name": "default",
                    "value": "IDEMPOTENCY_UNKNOWN"
                  }
                ]
              },
              {
                "id": 35,
                "name": "features",
                "type": "FeatureSet"
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UninterpretedOption",
            "fields": [
              {
                "id": 2,
                "name": "name",
                "type": "NamePart",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "identifier_value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "positive_int_value",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "negative_int_value",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "double_value",
                "type": "double"
              },
              {
                "id": 7,
                "name": "string_value",
                "type": "bytes"
              },
              {
                "id": 8,
                "name": "aggregate_value",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "NamePart",
                "fields": [
                  {
                    "id": 1,
                    "name": "name_part",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "is_extension",
                    "type": "bool"
                  }
                ]
              }
            ]
          },
          {
            "name": "FeatureSet",
            "fields": [
              {
                "id": 1,
                "name": "field_presence",
                "type": "FieldPresence",
                "options": [
                  {
                    "name": "retention",
                    "value": "RETENTION_RUNTIME"
                  },
                  {
                    "name": "targets",
                    "value": "TARGET_TYPE_FIELD"
                  },
                  {
                    "name": "targets",
                    "value": "TARGET_TYPE_FILE"
                  },
                  {
                    "name": "edition_defaults",
                    "aggregated": [
                      {
                        "name": "edition",
                        "value": "EDITION_PROTO2"
                      },
                      {
                        "name": "value",
                        "value": "EXPLICIT"
                      }
                    ]
                  },
                  {
                    "name": "edition_defaults",
                    "aggregated": [
                      {
                        "name": "edition",
                        "value": "EDITION_PROTO3"
                      },
                      {
                        "name": "value",
                        "value": "IMPLICIT"
                      }
                    ]
                  },
                  {
                    "name": "edition_defaults",
                    "aggregated": [
                      {
                        "name": "edition",
                        "value": "EDITION_2023"
                      },
                      {
                        "name": "value",
                        "value": "EXPLICIT"
                      }
                    ]
                  }
                ]
              },
              {
                "id": 2,
                "name": "enum_type",
                "type": "EnumType",
                "options": [
                  {
                    "name": "retention",
                    "value": "RETENTION_RUNTIME"
                  },
                  {
                    "name": "targets",
                    "value": "TARGET_TYPE_ENUM"
                  },
                  {
                    "name": "targets",
                    "value": "TARGET_TYPE_FILE"
                  },
                  {
                    "name": "edition_defaults",
                    "aggregated": [
                      {
                        "name": "edition",
                        "value": "EDITION_PROTO2"
                      },
                      {
                        "name": "value",
                        "value": "CLOSED"
                      }
                    ]
                  },
                  {
                    "name": "edition_defaults",
                    "aggregated": [
                      {
                        "name": "edition",
                        "value": "EDITION_PROTO3"
                      },
                      {
                        "name": "value",
                        "value": "OPEN"
                      }
                    ]
                  }
                ]
              },
              {
                "id": 3,
                "name": "repeated_field_encoding",
                "type": "RepeatedFieldEncoding",
                "options": [
                  {
                    "name": "retention",
                    "value": "RETENTION_RUNTIME"
                  },
                  {
                    "name": "targets",
                    "value": "TARGET_TYPE_FIELD"
                  },
                  {
                    "name": "targets",
                    "value": "TARGET_TYPE_FILE"
                  },
                  {
                    "name": "edition_defaults",
                    "aggregated": [
                      {
                        "name": "edition",
                        "value": "EDITION_PROTO2"
                      },
                      {
                        "name": "value",
                        "value": "EXPANDED"
                      }
                    ]
                  },
                  {
                    "name": "edition_defaults",
                    "aggregated": [
                      {
                        "name": "edition",
                        "value": "EDITION_PROTO3"
                      },
                      {
                        "name": "value",
                        "value": "PACKED"
                      }
                    ]
                  }
                ]
              },
              {
                "id": 4,
                "name": "utf8_validation",
                "type": "Utf8Validation",
                "options": [
                  {
                    "name": "retention",
                    "value": "RETENTION_RUNTIME"
                  },
                  {
                    "name": "targets",
                    "value": "TARGET_TYPE_FIELD"
                  },
                  {
                    "name": "targets",
                    "value": "TARGET_TYPE_FILE"
                  },
                  {
                    "name": "edition_defaults",
                    "aggregated": [
                      {
                        "name": "edition",
                        "value": "EDITION_PROTO2"
                      },
                      {
                        "name": "value",
                        "value": "NONE"
                      }
                    ]
                  },
                  {
                    "name": "edition_defaults",
                    "aggregated": [
                      {
                        "name": "edition",
                        "value": "EDITION_PROTO3"
                      },
                      {
                        "name": "value",
                        "value": "VERIFY"
                      }
                    ]
                  }
                ]
              },
              {
                "id": 5,
                "name": "message_encoding",
                "type": "MessageEncoding",
                "options": [
                  {
                    "name": "retention",
                    "value": "RETENTION_RUNTIME"
                  },
                  {
                    "name": "targets",
                    "value": "TARGET_TYPE_FIELD"
                  },
                  {
                    "name": "targets",
                    "value": "TARGET_TYPE_FILE"
                  },
                  {
                    "name": "edition_defaults",
                    "aggregated": [
                      {
                        "name": "edition",
                        "value": "EDITION_PROTO2"
                      },
                      {
                        "name": "value",
                        "value": "LENGTH_PREFIXED"
                      }
                    ]
                  }
                ]
              },
              {
                "id": 6,
                "name": "json_format",
                "type": "JsonFormat",
                "options": [
                  {
                    "name": "retention",
                    "value": "RETENTION_RUNTIME"
                  },
                  {
                    "name": "targets",
                    "value": "TARGET_TYPE_MESSAGE"
                  },
                  {
                    "name": "targets",
                    "value": "TARGET_TYPE_ENUM"
                  },
                  {
                    "name": "targets",
                    "value": "TARGET_TYPE_FILE"
                  },
                  {
                    "name": "edition_defaults",
                    "aggregated": [
                      {
                        "name": "edition",
                        "value": "EDITION_PROTO2"
                      },
                      {
                        "name": "value",
                        "value": "LEGACY_BEST_EFFORT"
                      }
                    ]
                  },
                  {
                    "name": "edition_defaults",
                    "aggregated": [
                      {
                        "name": "edition",
                        "value": "EDITION_PROTO3"
                      },
                      {
                        "name": "value",
                        "value": "ALLOW"
                      }
                    ]
                  }
                ]
              }
            ],
            "reserved_ids": [
              999
            ]
          },
          {
            "name": "FeatureSetDefaults",
            "fields": [
              {
                "id": 1,
                "name": "defaults",
                "type": "FeatureSetEditionDefault",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "minimum_edition",
                "type": "Edition"
              },
              {
                "id": 5,
                "name": "maximum_edition",
                "type": "Edition"
              }
            ],
            "messages": [
              {
                "name": "FeatureSetEditionDefault",
                "fields": [
                  {
                    "id": 3,
                    "name": "edition",
                    "type": "Edition"
                  },
                  {
                    "id": 2,
                    "name": "features",
                    "type": "FeatureSet"
                  }
                ]
              }
            ]
          },
          {
            "name": "SourceCodeInfo",
            "fields": [
              {
                "id": 1,
                "name": "location",
                "type": "Location",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Location",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "int32",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "packed",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "span",
                    "type": "int32",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "packed",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 3,
                    "name": "leading_comments",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "trailing_comments",
                    "type": "string"
                  },
                  {
                    "id": 6,
                    "name": "leading_detached_comments",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "GeneratedCodeInfo",
            "fields": [
              {
                "id": 1,
                "name": "annotation",
                "type": "Annotation",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Annotation",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "int32",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "packed",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "source_file",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "begin",
                    "type": "int32"
                  },
                  {
                    "id": 4,
                    "name": "end",
                    "type": "int32"
                  },
                  {
                    "id": 5,
                    "name": "semantic",
                    "type": "Semantic"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-25.3:/:include:/:google:/:protobuf:/:duration.proto",
      "def": {
        "messages": [
          {
            "name": "Duration",
            "fields": [
              {
                "id": 1,
                "name": "seconds",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "nanos",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-25.3:/:include:/:google:/:protobuf:/:empty.proto",
      "def": {
        "messages": [
          {
            "name": "Empty"
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-25.3:/:include:/:google:/:protobuf:/:field_mask.proto",
      "def": {
        "messages": [
          {
            "name": "FieldMask",
            "fields": [
              {
                "id": 1,
                "name": "paths",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-25.3:/:include:/:google:/:protobuf:/:source_context.proto",
      "def": {
        "messages": [
          {
            "name": "SourceContext",
            "fields": [
              {
                "id": 1,
                "name": "file_name",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-25.3:/:include:/:google:/:protobuf:/:struct.proto",
      "def": {
        "enums": [
          {
            "name": "NullValue",
            "enum_fields": [
              {
                "name": "NULL_VALUE"
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Struct",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "fields",
                  "type": "Value"
                }
              }
            ]
          },
          {
            "name": "Value",
            "fields": [
              {
                "id": 1,
                "name": "null_value",
                "type": "NullValue"
              },
              {
                "id": 2,
                "name": "number_value",
                "type": "double"
              },
              {
                "id": 3,
                "name": "string_value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "bool_value",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "struct_value",
                "type": "Struct"
              },
              {
                "id": 6,
                "name": "list_value",
                "type": "ListValue"
              }
            ]
          },
          {
            "name": "ListValue",
            "fields": [
              {
                "id": 1,
                "name": "values",
                "type": "Value",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-25.3:/:include:/:google:/:protobuf:/:timestamp.proto",
      "def": {
        "messages": [
          {
            "name": "Timestamp",
            "fields": [
              {
                "id": 1,
                "name": "seconds",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "nanos",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-25.3:/:include:/:google:/:protobuf:/:type.proto",
      "def": {
        "enums": [
          {
            "name": "Field.Kind",
            "enum_fields": [
              {
                "name": "TYPE_UNKNOWN"
              },
              {
                "name": "TYPE_DOUBLE",
                "integer": 1
              },
              {
                "name": "TYPE_FLOAT",
                "integer": 2
              },
              {
                "name": "TYPE_INT64",
                "integer": 3
              },
              {
                "name": "TYPE_UINT64",
                "integer": 4
              },
              {
                "name": "TYPE_INT32",
                "integer": 5
              },
              {
                "name": "TYPE_FIXED64",
                "integer": 6
              },
              {
                "name": "TYPE_FIXED32",
                "integer": 7
              },
              {
                "name": "TYPE_BOOL",
                "integer": 8
              },
              {
                "name": "TYPE_STRING",
                "integer": 9
              },
              {
                "name": "TYPE_GROUP",
                "integer": 10
              },
              {
                "name": "TYPE_MESSAGE",
                "integer": 11
              },
              {
                "name": "TYPE_BYTES",
                "integer": 12
              },
              {
                "name": "TYPE_UINT32",
                "integer": 13
              },
              {
                "name": "TYPE_ENUM",
                "integer": 14
              },
              {
                "name": "TYPE_SFIXED32",
                "integer": 15
              },
              {
                "name": "TYPE_SFIXED64",
                "integer": 16
              },
              {
                "name": "TYPE_SINT32",
                "integer": 17
              },
              {
                "name": "TYPE_SINT64",
                "integer": 18
              }
            ]
          },
          {
            "name": "Field.Cardinality",
            "enum_fields": [
              {
                "name": "CARDINALITY_UNKNOWN"
              },
              {
                "name": "CARDINALITY_OPTIONAL",
                "integer": 1
              },
              {
                "name": "CARDINALITY_REQUIRED",
                "integer": 2
              },
              {
                "name": "CARDINALITY_REPEATED",
                "integer": 3
              }
            ]
          },
          {
            "name": "Syntax",
            "enum_fields": [
              {
                "name": "SYNTAX_PROTO2"
              },
              {
                "name": "SYNTAX_PROTO3",
                "integer": 1
              },
              {
                "name": "SYNTAX_EDITIONS",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Type",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "fields",
                "type": "Field",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "oneofs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "source_context",
                "type": "SourceContext"
              },
              {
                "id": 6,
                "name": "syntax",
                "type": "Syntax"
              },
              {
                "id": 7,
                "name": "edition",
                "type": "string"
              }
            ]
          },
          {
            "name": "Field",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "Kind"
              },
              {
                "id": 2,
                "name": "cardinality",
                "type": "Cardinality"
              },
              {
                "id": 3,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "type_url",
                "type": "string"
              },
              {
                "id": 7,
                "name": "oneof_index",
                "type": "int32"
              },
              {
                "id": 8,
                "name": "packed",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "json_name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "default_value",
                "type": "string"
              }
            ]
          },
          {
            "name": "Enum",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "enumvalue",
                "type": "EnumValue",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "source_context",
                "type": "SourceContext"
              },
              {
                "id": 5,
                "name": "syntax",
                "type": "Syntax"
              },
              {
                "id": 6,
                "name": "edition",
                "type": "string"
              }
            ]
          },
          {
            "name": "EnumValue",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Option",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "Any"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/source_context.proto"
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": ".proto:/:protoc-osx-x86_64-25.3:/:include:/:google:/:protobuf:/:wrappers.proto",
      "def": {
        "messages": [
          {
            "name": "DoubleValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "double"
              }
            ]
          },
          {
            "name": "FloatValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "float"
              }
            ]
          },
          {
            "name": "Int64Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "int64"
              }
            ]
          },
          {
            "name": "UInt64Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "Int32Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "int32"
              }
            ]
          },
          {
            "name": "UInt32Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "BoolValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "bool"
              }
            ]
          },
          {
            "name": "StringValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "BytesValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:common:/:extended_rpc_status.proto",
      "def": {
        "messages": [
          {
            "name": "ExtendedRpcStatus",
            "fields": [
              {
                "id": 1,
                "name": "code",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              },
              {
                "id": 3,
                "name": "details",
                "type": "google.protobuf.Any",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "error",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "common"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:integrations:/:splunk_service.proto",
      "def": {
        "enums": [
          {
            "name": "ViolationInfo.ViolationType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "GENERIC",
                "integer": 1
              },
              {
                "name": "K8S_EVENT",
                "integer": 2
              },
              {
                "name": "PROCESS_EVENT",
                "integer": 3
              },
              {
                "name": "NETWORK_FLOW",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "SplunkViolationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "violations",
                "type": "SplunkViolation",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "new_checkpoint",
                "type": "string"
              }
            ]
          },
          {
            "name": "SplunkViolation",
            "fields": [
              {
                "id": 1,
                "name": "violation_info",
                "type": "ViolationInfo"
              },
              {
                "id": 2,
                "name": "alert_info",
                "type": "AlertInfo"
              },
              {
                "id": 3,
                "name": "process_info",
                "type": "ProcessInfo"
              },
              {
                "id": 4,
                "name": "deployment_info",
                "type": "DeploymentInfo"
              },
              {
                "id": 10,
                "name": "resource_info",
                "type": "ResourceInfo"
              },
              {
                "id": 5,
                "name": "policy_info",
                "type": "PolicyInfo"
              },
              {
                "id": 6,
                "name": "network_flow_info",
                "type": "storage.Alert.Violation.NetworkFlowInfo"
              }
            ],
            "messages": [
              {
                "name": "ViolationInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "violation_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "violation_message",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "violation_message_attributes",
                    "type": "storage.Alert.Violation.KeyValueAttrs.KeyValueAttr",
                    "is_repeated": true
                  },
                  {
                    "id": 4,
                    "name": "violation_type",
                    "type": "ViolationType"
                  },
                  {
                    "id": 5,
                    "name": "violation_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 102,
                    "name": "pod_id",
                    "type": "string"
                  },
                  {
                    "id": 103,
                    "name": "pod_uid",
                    "type": "string"
                  },
                  {
                    "id": 104,
                    "name": "container_name",
                    "type": "string"
                  },
                  {
                    "id": 105,
                    "name": "container_start_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 106,
                    "name": "container_id",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "AlertInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "alert_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "lifecycle_stage",
                    "type": "storage.LifecycleStage"
                  },
                  {
                    "id": 4,
                    "name": "alert_first_occurred",
                    "type": "google.protobuf.Timestamp"
                  }
                ],
                "reserved_ids": [
                  3
                ]
              },
              {
                "name": "ProcessInfo",
                "fields": [
                  {
                    "id": 101,
                    "name": "process_violation_id",
                    "type": "string"
                  },
                  {
                    "id": 202,
                    "name": "process_signal_id",
                    "type": "string"
                  },
                  {
                    "id": 203,
                    "name": "process_creation_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 204,
                    "name": "process_name",
                    "type": "string"
                  },
                  {
                    "id": 205,
                    "name": "process_args",
                    "type": "string"
                  },
                  {
                    "id": 206,
                    "name": "exec_file_path",
                    "type": "string"
                  },
                  {
                    "id": 207,
                    "name": "pid",
                    "type": "google.protobuf.UInt32Value"
                  },
                  {
                    "id": 208,
                    "name": "process_uid",
                    "type": "google.protobuf.UInt32Value"
                  },
                  {
                    "id": 209,
                    "name": "process_gid",
                    "type": "google.protobuf.UInt32Value"
                  },
                  {
                    "id": 210,
                    "name": "process_lineage_info",
                    "type": "storage.ProcessSignal.LineageInfo",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "DeploymentInfo",
                "fields": [
                  {
                    "id": 101,
                    "name": "deployment_id",
                    "type": "string"
                  },
                  {
                    "id": 102,
                    "name": "deployment_name",
                    "type": "string"
                  },
                  {
                    "id": 103,
                    "name": "deployment_type",
                    "type": "string"
                  },
                  {
                    "id": 104,
                    "name": "deployment_namespace",
                    "type": "string"
                  },
                  {
                    "id": 105,
                    "name": "deployment_namespace_id",
                    "type": "string"
                  },
                  {
                    "id": 107,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 108,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 109,
                    "name": "deployment_containers",
                    "type": "storage.Alert.Deployment.Container",
                    "is_repeated": true
                  },
                  {
                    "id": 201,
                    "name": "deployment_image",
                    "type": "storage.ContainerImage"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 106,
                      "name": "deployment_labels",
                      "type": "string"
                    }
                  },
                  {
                    "key_type": "string",
                    "field": {
                      "id": 110,
                      "name": "deployment_annotations",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "ResourceInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "resource_type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "namespace",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "PolicyInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "policy_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "policy_name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "policy_description",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "policy_rationale",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "policy_categories",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 6,
                    "name": "policy_lifecycle_stages",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 7,
                    "name": "policy_severity",
                    "type": "string"
                  },
                  {
                    "id": 8,
                    "name": "policy_version",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          },
          {
            "path": "storage/alert.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "integrations"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:administration_events_service.proto",
      "def": {
        "enums": [
          {
            "name": "AdministrationEventType",
            "enum_fields": [
              {
                "name": "ADMINISTRATION_EVENT_TYPE_UNKNOWN"
              },
              {
                "name": "ADMINISTRATION_EVENT_TYPE_GENERIC",
                "integer": 1
              },
              {
                "name": "ADMINISTRATION_EVENT_TYPE_LOG_MESSAGE",
                "integer": 2
              }
            ]
          },
          {
            "name": "AdministrationEventLevel",
            "enum_fields": [
              {
                "name": "ADMINISTRATION_EVENT_LEVEL_UNKNOWN"
              },
              {
                "name": "ADMINISTRATION_EVENT_LEVEL_INFO",
                "integer": 1
              },
              {
                "name": "ADMINISTRATION_EVENT_LEVEL_SUCCESS",
                "integer": 2
              },
              {
                "name": "ADMINISTRATION_EVENT_LEVEL_WARNING",
                "integer": 3
              },
              {
                "name": "ADMINISTRATION_EVENT_LEVEL_ERROR",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "AdministrationEvent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "AdministrationEventType"
              },
              {
                "id": 3,
                "name": "level",
                "type": "AdministrationEventLevel"
              },
              {
                "id": 4,
                "name": "message",
                "type": "string"
              },
              {
                "id": 5,
                "name": "hint",
                "type": "string"
              },
              {
                "id": 6,
                "name": "domain",
                "type": "string"
              },
              {
                "id": 7,
                "name": "resource",
                "type": "Resource"
              },
              {
                "id": 8,
                "name": "num_occurrences",
                "type": "int64"
              },
              {
                "id": 9,
                "name": "last_occurred_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "messages": [
              {
                "name": "Resource",
                "fields": [
                  {
                    "id": 1,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "AdministrationEventsFilter",
            "fields": [
              {
                "id": 1,
                "name": "from",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "until",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "domain",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "resource_type",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "type",
                "type": "AdministrationEventType",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "level",
                "type": "AdministrationEventLevel",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountAdministrationEventsRequest",
            "fields": [
              {
                "id": 1,
                "name": "filter",
                "type": "AdministrationEventsFilter"
              }
            ]
          },
          {
            "name": "CountAdministrationEventsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "GetAdministrationEventResponse",
            "fields": [
              {
                "id": 1,
                "name": "event",
                "type": "AdministrationEvent"
              }
            ]
          },
          {
            "name": "ListAdministrationEventsRequest",
            "fields": [
              {
                "id": 1,
                "name": "pagination",
                "type": "Pagination"
              },
              {
                "id": 2,
                "name": "filter",
                "type": "AdministrationEventsFilter"
              }
            ]
          },
          {
            "name": "ListAdministrationEventsResponse",
            "fields": [
              {
                "id": 1,
                "name": "events",
                "type": "AdministrationEvent",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AdministrationEventService",
            "rpcs": [
              {
                "name": "CountAdministrationEvents",
                "in_type": "CountAdministrationEventsRequest",
                "out_type": "CountAdministrationEventsResponse"
              },
              {
                "name": "GetAdministrationEvent",
                "in_type": "ResourceByID",
                "out_type": "GetAdministrationEventResponse"
              },
              {
                "name": "ListAdministrationEvents",
                "in_type": "ListAdministrationEventsRequest",
                "out_type": "ListAdministrationEventsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/pagination.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:administration_usage_service.proto",
      "def": {
        "messages": [
          {
            "name": "TimeRange",
            "fields": [
              {
                "id": 1,
                "name": "from",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "to",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "SecuredUnitsUsageResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_nodes",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "num_cpu_units",
                "type": "int64"
              }
            ]
          },
          {
            "name": "MaxSecuredUnitsUsageResponse",
            "fields": [
              {
                "id": 1,
                "name": "max_nodes_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "max_nodes",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "max_cpu_units_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "max_cpu_units",
                "type": "int64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AdministrationUsageService",
            "rpcs": [
              {
                "name": "GetCurrentSecuredUnitsUsage",
                "in_type": "v1.Empty",
                "out_type": "SecuredUnitsUsageResponse"
              },
              {
                "name": "GetMaxSecuredUnitsUsage",
                "in_type": "TimeRange",
                "out_type": "MaxSecuredUnitsUsageResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:alert_service.proto",
      "def": {
        "enums": [
          {
            "name": "GetAlertsCountsRequest.RequestGroup",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "CATEGORY",
                "integer": 1
              },
              {
                "name": "CLUSTER",
                "integer": 2
              }
            ]
          },
          {
            "name": "Type",
            "enum_fields": [
              {
                "name": "CREATED"
              },
              {
                "name": "REMOVED",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CountAlertsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ListAlertsRequest",
            "fields": [
              {
                "id": 10,
                "name": "query",
                "type": "string"
              },
              {
                "id": 11,
                "name": "pagination",
                "type": "Pagination"
              }
            ],
            "reserved_ids": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9
            ]
          },
          {
            "name": "ResolveAlertRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "whitelist",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 3,
                "name": "add_to_baseline",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ResolveAlertsRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "SnoozeAlertRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "snooze_till",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ListAlertsResponse",
            "fields": [
              {
                "id": 1,
                "name": "alerts",
                "type": "storage.ListAlert",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeleteAlertsRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              },
              {
                "id": 2,
                "name": "confirm",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteAlertsResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_deleted",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "dry_run",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetAlertsGroupResponse",
            "fields": [
              {
                "id": 1,
                "name": "alerts_by_policies",
                "type": "PolicyGroup",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "PolicyGroup",
                "fields": [
                  {
                    "id": 1,
                    "name": "policy",
                    "type": "storage.ListAlertPolicy"
                  },
                  {
                    "id": 2,
                    "name": "num_alerts",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetAlertsCountsRequest",
            "fields": [
              {
                "id": 1,
                "name": "request",
                "type": "ListAlertsRequest"
              },
              {
                "id": 2,
                "name": "group_by",
                "type": "RequestGroup"
              }
            ]
          },
          {
            "name": "GetAlertsCountsResponse",
            "fields": [
              {
                "id": 1,
                "name": "groups",
                "type": "AlertGroup",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "AlertGroup",
                "fields": [
                  {
                    "id": 1,
                    "name": "group",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "counts",
                    "type": "AlertCounts",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "AlertCounts",
                    "fields": [
                      {
                        "id": 1,
                        "name": "severity",
                        "type": "storage.Severity"
                      },
                      {
                        "id": 2,
                        "name": "count",
                        "type": "int64"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "AlertEvent",
            "fields": [
              {
                "id": 1,
                "name": "time",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 3,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetAlertTimeseriesResponse",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "ClusterAlerts",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ClusterAlerts",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "severities",
                    "type": "AlertEvents",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "AlertEvents",
                    "fields": [
                      {
                        "id": 1,
                        "name": "severity",
                        "type": "storage.Severity"
                      },
                      {
                        "id": 2,
                        "name": "events",
                        "type": "AlertEvent",
                        "is_repeated": true
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AlertService",
            "rpcs": [
              {
                "name": "GetAlert",
                "in_type": "ResourceByID",
                "out_type": "storage.Alert"
              },
              {
                "name": "CountAlerts",
                "in_type": "RawQuery",
                "out_type": "CountAlertsResponse"
              },
              {
                "name": "ListAlerts",
                "in_type": "ListAlertsRequest",
                "out_type": "ListAlertsResponse"
              },
              {
                "name": "GetAlertsGroup",
                "in_type": "ListAlertsRequest",
                "out_type": "GetAlertsGroupResponse"
              },
              {
                "name": "GetAlertsCounts",
                "in_type": "GetAlertsCountsRequest",
                "out_type": "GetAlertsCountsResponse"
              },
              {
                "name": "GetAlertTimeseries",
                "in_type": "ListAlertsRequest",
                "out_type": "GetAlertTimeseriesResponse"
              },
              {
                "name": "ResolveAlert",
                "in_type": "ResolveAlertRequest",
                "out_type": "Empty"
              },
              {
                "name": "ResolveAlerts",
                "in_type": "ResolveAlertsRequest",
                "out_type": "Empty"
              },
              {
                "name": "SnoozeAlert",
                "in_type": "SnoozeAlertRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeleteAlerts",
                "in_type": "DeleteAlertsRequest",
                "out_type": "DeleteAlertsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/pagination.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/alert.proto"
          },
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:api_token_service.proto",
      "def": {
        "messages": [
          {
            "name": "GenerateTokenRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "role",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 3,
                "name": "roles",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "expiration",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "GenerateTokenResponse",
            "fields": [
              {
                "id": 1,
                "name": "token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "metadata",
                "type": "storage.TokenMetadata"
              }
            ]
          },
          {
            "name": "GetAPITokensRequest",
            "fields": [
              {
                "id": 1,
                "name": "revoked",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetAPITokensResponse",
            "fields": [
              {
                "id": 1,
                "name": "tokens",
                "type": "storage.TokenMetadata",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListAllowedTokenRolesResponse",
            "fields": [
              {
                "id": 1,
                "name": "roleNames",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "APITokenService",
            "rpcs": [
              {
                "name": "GetAPIToken",
                "in_type": "ResourceByID",
                "out_type": "storage.TokenMetadata"
              },
              {
                "name": "GetAPITokens",
                "in_type": "GetAPITokensRequest",
                "out_type": "GetAPITokensResponse"
              },
              {
                "name": "GenerateToken",
                "in_type": "GenerateTokenRequest",
                "out_type": "GenerateTokenResponse"
              },
              {
                "name": "RevokeToken",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "ListAllowedTokenRoles",
                "in_type": "Empty",
                "out_type": "ListAllowedTokenRolesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/api_token.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:audit.proto",
      "def": {
        "enums": [
          {
            "name": "Audit.RequestStatus",
            "enum_fields": [
              {
                "name": "UNKNOWN_STATUS"
              },
              {
                "name": "REQUEST_SUCCEEDED",
                "integer": 1
              },
              {
                "name": "AUTH_FAILED",
                "integer": 2
              },
              {
                "name": "REQUEST_FAILED",
                "integer": 3
              }
            ]
          },
          {
            "name": "Audit.Interaction",
            "enum_fields": [
              {
                "name": "UNKNOWN_INTERACTION"
              },
              {
                "name": "CREATE",
                "integer": 1
              },
              {
                "name": "UPDATE",
                "integer": 2
              },
              {
                "name": "DELETE",
                "integer": 3
              }
            ]
          },
          {
            "name": "Audit.AccessMethod",
            "enum_fields": [
              {
                "name": "UNKNOWN_METHOD"
              },
              {
                "name": "CLI",
                "integer": 1
              },
              {
                "name": "UI",
                "integer": 2
              },
              {
                "name": "API",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Audit",
            "messages": [
              {
                "name": "Message",
                "fields": [
                  {
                    "id": 1,
                    "name": "time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 2,
                    "name": "status",
                    "type": "RequestStatus"
                  },
                  {
                    "id": 3,
                    "name": "status_reason",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "user",
                    "type": "storage.UserInfo"
                  },
                  {
                    "id": 5,
                    "name": "request",
                    "type": "Request"
                  },
                  {
                    "id": 6,
                    "name": "method",
                    "type": "AccessMethod"
                  },
                  {
                    "id": 7,
                    "name": "interaction",
                    "type": "Interaction"
                  }
                ],
                "messages": [
                  {
                    "name": "Request",
                    "fields": [
                      {
                        "id": 1,
                        "name": "endpoint",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "method",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "payload",
                        "type": "google.protobuf.Any"
                      },
                      {
                        "id": 4,
                        "name": "source_headers",
                        "type": "SourceHeaders"
                      },
                      {
                        "id": 5,
                        "name": "source_ip",
                        "type": "string"
                      }
                    ],
                    "messages": [
                      {
                        "name": "SourceHeaders",
                        "fields": [
                          {
                            "id": 1,
                            "name": "x_forwarded_for",
                            "type": "string"
                          },
                          {
                            "id": 2,
                            "name": "remote_addr",
                            "type": "string"
                          },
                          {
                            "id": 3,
                            "name": "request_addr",
                            "type": "string"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:auth_service.proto",
      "def": {
        "enums": [
          {
            "name": "AuthMachineToMachineConfig.Type",
            "enum_fields": [
              {
                "name": "GENERIC"
              },
              {
                "name": "GITHUB_ACTIONS",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "UserAttribute",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AuthStatus",
            "fields": [
              {
                "id": 1,
                "name": "user_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "service_id",
                "type": "storage.ServiceIdentity"
              },
              {
                "id": 3,
                "name": "expires",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "refresh_url",
                "type": "string"
              },
              {
                "id": 5,
                "name": "auth_provider",
                "type": "storage.AuthProvider"
              },
              {
                "id": 6,
                "name": "user_info",
                "type": "storage.UserInfo"
              },
              {
                "id": 7,
                "name": "user_attributes",
                "type": "UserAttribute",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "idp_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "AuthMachineToMachineConfig",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 3,
                "name": "token_expiration_duration",
                "type": "string"
              },
              {
                "id": 4,
                "name": "mappings",
                "type": "Mapping",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "issuer",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Mapping",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "value_expression",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "role",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListAuthMachineToMachineConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "configs",
                "type": "AuthMachineToMachineConfig",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetAuthMachineToMachineConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "AuthMachineToMachineConfig"
              }
            ]
          },
          {
            "name": "AddAuthMachineToMachineConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "AuthMachineToMachineConfig"
              }
            ]
          },
          {
            "name": "AddAuthMachineToMachineConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "AuthMachineToMachineConfig"
              }
            ]
          },
          {
            "name": "UpdateAuthMachineToMachineConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "AuthMachineToMachineConfig"
              }
            ]
          },
          {
            "name": "ExchangeAuthMachineToMachineTokenRequest",
            "fields": [
              {
                "id": 1,
                "name": "id_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExchangeAuthMachineToMachineTokenResponse",
            "fields": [
              {
                "id": 1,
                "name": "access_token",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AuthService",
            "rpcs": [
              {
                "name": "GetAuthStatus",
                "in_type": "Empty",
                "out_type": "AuthStatus"
              },
              {
                "name": "ListAuthMachineToMachineConfigs",
                "in_type": "Empty",
                "out_type": "ListAuthMachineToMachineConfigResponse"
              },
              {
                "name": "GetAuthMachineToMachineConfig",
                "in_type": "ResourceByID",
                "out_type": "GetAuthMachineToMachineConfigResponse"
              },
              {
                "name": "AddAuthMachineToMachineConfig",
                "in_type": "AddAuthMachineToMachineConfigRequest",
                "out_type": "AddAuthMachineToMachineConfigResponse"
              },
              {
                "name": "UpdateAuthMachineToMachineConfig",
                "in_type": "UpdateAuthMachineToMachineConfigRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeleteAuthMachineToMachineConfig",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "ExchangeAuthMachineToMachineToken",
                "in_type": "ExchangeAuthMachineToMachineTokenRequest",
                "out_type": "ExchangeAuthMachineToMachineTokenResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/auth_provider.proto"
          },
          {
            "path": "storage/service_identity.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:authprovider_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetAuthProviderRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetAuthProvidersRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetLoginAuthProvidersResponse",
            "fields": [
              {
                "id": 1,
                "name": "auth_providers",
                "type": "LoginAuthProvider",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "LoginAuthProvider",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "login_url",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetAuthProvidersResponse",
            "fields": [
              {
                "id": 1,
                "name": "auth_providers",
                "type": "storage.AuthProvider",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PostAuthProviderRequest",
            "fields": [
              {
                "id": 1,
                "name": "provider",
                "type": "storage.AuthProvider"
              }
            ]
          },
          {
            "name": "UpdateAuthProviderRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "enabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ExchangeTokenRequest",
            "fields": [
              {
                "id": 1,
                "name": "external_token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "state",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExchangeTokenResponse",
            "fields": [
              {
                "id": 1,
                "name": "token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "client_state",
                "type": "string"
              },
              {
                "id": 3,
                "name": "test",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "user",
                "type": "v1.AuthStatus"
              }
            ]
          },
          {
            "name": "AvailableProviderTypesResponse",
            "fields": [
              {
                "id": 1,
                "name": "auth_provider_types",
                "type": "AuthProviderType",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "AuthProviderType",
                "fields": [
                  {
                    "id": 1,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "suggested_attributes",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AuthProviderService",
            "rpcs": [
              {
                "name": "ListAvailableProviderTypes",
                "in_type": "Empty",
                "out_type": "AvailableProviderTypesResponse"
              },
              {
                "name": "GetAuthProvider",
                "in_type": "GetAuthProviderRequest",
                "out_type": "storage.AuthProvider"
              },
              {
                "name": "GetLoginAuthProviders",
                "in_type": "Empty",
                "out_type": "GetLoginAuthProvidersResponse"
              },
              {
                "name": "GetAuthProviders",
                "in_type": "GetAuthProvidersRequest",
                "out_type": "GetAuthProvidersResponse"
              },
              {
                "name": "PostAuthProvider",
                "in_type": "PostAuthProviderRequest",
                "out_type": "storage.AuthProvider"
              },
              {
                "name": "UpdateAuthProvider",
                "in_type": "UpdateAuthProviderRequest",
                "out_type": "storage.AuthProvider"
              },
              {
                "name": "PutAuthProvider",
                "in_type": "storage.AuthProvider",
                "out_type": "storage.AuthProvider"
              },
              {
                "name": "DeleteAuthProvider",
                "in_type": "DeleteByIDWithForce",
                "out_type": "Empty"
              },
              {
                "name": "ExchangeToken",
                "in_type": "ExchangeTokenRequest",
                "out_type": "ExchangeTokenResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/auth_service.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/auth_provider.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:backup_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetExternalBackupsResponse",
            "fields": [
              {
                "id": 1,
                "name": "external_backups",
                "type": "storage.ExternalBackup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateExternalBackupRequest",
            "fields": [
              {
                "id": 1,
                "name": "external_backup",
                "type": "storage.ExternalBackup"
              },
              {
                "id": 2,
                "name": "update_password",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ExternalBackupService",
            "rpcs": [
              {
                "name": "GetExternalBackup",
                "in_type": "ResourceByID",
                "out_type": "storage.ExternalBackup"
              },
              {
                "name": "GetExternalBackups",
                "in_type": "Empty",
                "out_type": "GetExternalBackupsResponse"
              },
              {
                "name": "PostExternalBackup",
                "in_type": "storage.ExternalBackup",
                "out_type": "storage.ExternalBackup"
              },
              {
                "name": "PutExternalBackup",
                "in_type": "storage.ExternalBackup",
                "out_type": "storage.ExternalBackup"
              },
              {
                "name": "TestExternalBackup",
                "in_type": "storage.ExternalBackup",
                "out_type": "Empty"
              },
              {
                "name": "DeleteExternalBackup",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "TriggerExternalBackup",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "UpdateExternalBackup",
                "in_type": "UpdateExternalBackupRequest",
                "out_type": "storage.ExternalBackup"
              },
              {
                "name": "TestUpdatedExternalBackup",
                "in_type": "UpdateExternalBackupRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/external_backup.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:central_health_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetUpgradeStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "upgradeStatus",
                "type": "CentralUpgradeStatus"
              }
            ]
          },
          {
            "name": "CentralUpgradeStatus",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "force_rollback_to",
                "type": "string"
              },
              {
                "id": 3,
                "name": "can_rollback_after_upgrade",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "space_required_for_rollback_after_upgrade",
                "type": "int64",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 5,
                "name": "space_available_for_rollback_after_upgrade",
                "type": "int64",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CentralHealthService",
            "rpcs": [
              {
                "name": "GetUpgradeStatus",
                "in_type": "Empty",
                "out_type": "GetUpgradeStatusResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:cloud_source_service.proto",
      "def": {
        "enums": [
          {
            "name": "CloudSource.Type",
            "enum_fields": [
              {
                "name": "TYPE_UNSPECIFIED"
              },
              {
                "name": "TYPE_PALADIN_CLOUD",
                "integer": 1
              },
              {
                "name": "TYPE_OCM",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CloudSource",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 4,
                "name": "credentials",
                "type": "Credentials"
              },
              {
                "id": 5,
                "name": "skip_test_integration",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "paladin_cloud",
                "type": "PaladinCloudConfig"
              },
              {
                "id": 7,
                "name": "ocm",
                "type": "OCMConfig"
              }
            ],
            "messages": [
              {
                "name": "Credentials",
                "fields": [
                  {
                    "id": 1,
                    "name": "secret",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "PaladinCloudConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              }
            ]
          },
          {
            "name": "OCMConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              }
            ]
          },
          {
            "name": "CloudSourcesFilter",
            "fields": [
              {
                "id": 1,
                "name": "names",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "types",
                "type": "CloudSource.Type",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountCloudSourcesRequest",
            "fields": [
              {
                "id": 1,
                "name": "filter",
                "type": "CloudSourcesFilter"
              }
            ]
          },
          {
            "name": "CountCloudSourcesResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "GetCloudSourceRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetCloudSourceResponse",
            "fields": [
              {
                "id": 1,
                "name": "cloud_source",
                "type": "CloudSource"
              }
            ]
          },
          {
            "name": "ListCloudSourcesRequest",
            "fields": [
              {
                "id": 1,
                "name": "pagination",
                "type": "Pagination"
              },
              {
                "id": 2,
                "name": "filter",
                "type": "CloudSourcesFilter"
              }
            ]
          },
          {
            "name": "ListCloudSourcesResponse",
            "fields": [
              {
                "id": 1,
                "name": "cloud_sources",
                "type": "CloudSource",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CreateCloudSourceRequest",
            "fields": [
              {
                "id": 1,
                "name": "cloud_source",
                "type": "CloudSource"
              }
            ]
          },
          {
            "name": "CreateCloudSourceResponse",
            "fields": [
              {
                "id": 1,
                "name": "cloud_source",
                "type": "CloudSource"
              }
            ]
          },
          {
            "name": "UpdateCloudSourceRequest",
            "fields": [
              {
                "id": 1,
                "name": "cloud_source",
                "type": "CloudSource"
              },
              {
                "id": 2,
                "name": "update_credentials",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteCloudSourceRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestCloudSourceRequest",
            "fields": [
              {
                "id": 1,
                "name": "cloud_source",
                "type": "CloudSource"
              },
              {
                "id": 2,
                "name": "update_credentials",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CloudSourcesService",
            "rpcs": [
              {
                "name": "CountCloudSources",
                "in_type": "CountCloudSourcesRequest",
                "out_type": "CountCloudSourcesResponse"
              },
              {
                "name": "GetCloudSource",
                "in_type": "GetCloudSourceRequest",
                "out_type": "GetCloudSourceResponse"
              },
              {
                "name": "ListCloudSources",
                "in_type": "ListCloudSourcesRequest",
                "out_type": "ListCloudSourcesResponse"
              },
              {
                "name": "CreateCloudSource",
                "in_type": "CreateCloudSourceRequest",
                "out_type": "CreateCloudSourceResponse"
              },
              {
                "name": "UpdateCloudSource",
                "in_type": "UpdateCloudSourceRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeleteCloudSource",
                "in_type": "DeleteCloudSourceRequest",
                "out_type": "Empty"
              },
              {
                "name": "TestCloudSource",
                "in_type": "TestCloudSourceRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/pagination.proto"
          },
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:cluster_init_service.proto",
      "def": {
        "messages": [
          {
            "name": "InitBundleMeta",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "impacted_clusters",
                "type": "ImpactedCluster",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "created_by",
                "type": "storage.User"
              },
              {
                "id": 5,
                "name": "expires_at",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "messages": [
              {
                "name": "ImpactedCluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "InitBundleGenResponse",
            "fields": [
              {
                "id": 1,
                "name": "meta",
                "type": "InitBundleMeta"
              },
              {
                "id": 2,
                "name": "helm_values_bundle",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "kubectl_bundle",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "GetCAConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "helm_values_bundle",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "InitBundleMetasResponse",
            "fields": [
              {
                "id": 1,
                "name": "items",
                "type": "InitBundleMeta",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "InitBundleGenRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "InitBundleRevokeRequest",
            "fields": [
              {
                "id": 1,
                "name": "ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "confirm_impacted_clusters_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "InitBundleRevokeResponse",
            "fields": [
              {
                "id": 2,
                "name": "init_bundle_revocation_errors",
                "type": "InitBundleRevocationError",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "init_bundle_revoked_ids",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "InitBundleRevocationError",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "error",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "impacted_clusters",
                    "type": "InitBundleMeta.ImpactedCluster",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ClusterInitService",
            "rpcs": [
              {
                "name": "RevokeInitBundle",
                "in_type": "InitBundleRevokeRequest",
                "out_type": "InitBundleRevokeResponse"
              },
              {
                "name": "GetCAConfig",
                "in_type": "Empty",
                "out_type": "GetCAConfigResponse"
              },
              {
                "name": "GetInitBundles",
                "in_type": "Empty",
                "out_type": "InitBundleMetasResponse"
              },
              {
                "name": "GenerateInitBundle",
                "in_type": "InitBundleGenRequest",
                "out_type": "InitBundleGenResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:cluster_service.proto",
      "def": {
        "enums": [
          {
            "name": "DeploymentFormat",
            "enum_fields": [
              {
                "name": "KUBECTL"
              },
              {
                "name": "HELM",
                "integer": 1
              },
              {
                "name": "HELM_VALUES",
                "integer": 2
              }
            ]
          },
          {
            "name": "LoadBalancerType",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "LOAD_BALANCER",
                "integer": 1
              },
              {
                "name": "NODE_PORT",
                "integer": 2
              },
              {
                "name": "ROUTE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DecommissionedClusterRetentionInfo",
            "fields": [
              {
                "id": 1,
                "name": "is_excluded",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "days_until_deletion",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ClusterResponse",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "storage.Cluster"
              },
              {
                "id": 2,
                "name": "cluster_retention_info",
                "type": "DecommissionedClusterRetentionInfo"
              }
            ]
          },
          {
            "name": "ClusterDefaultsResponse",
            "fields": [
              {
                "id": 1,
                "name": "main_image_repository",
                "type": "string"
              },
              {
                "id": 2,
                "name": "collector_image_repository",
                "type": "string"
              },
              {
                "id": 3,
                "name": "kernel_support_available",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ClustersList",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "storage.Cluster",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "cluster_id_to_retention_info",
                  "type": "DecommissionedClusterRetentionInfo"
                }
              }
            ]
          },
          {
            "name": "GetClustersRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "KernelSupportAvailableResponse",
            "fields": [
              {
                "id": 1,
                "name": "kernel_support_available",
                "type": "bool"
              }
            ],
            "options": [
              {
                "name": "deprecated",
                "value": "true"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ClustersService",
            "rpcs": [
              {
                "name": "GetClusters",
                "in_type": "GetClustersRequest",
                "out_type": "ClustersList"
              },
              {
                "name": "GetCluster",
                "in_type": "ResourceByID",
                "out_type": "ClusterResponse"
              },
              {
                "name": "PostCluster",
                "in_type": "storage.Cluster",
                "out_type": "ClusterResponse"
              },
              {
                "name": "PutCluster",
                "in_type": "storage.Cluster",
                "out_type": "ClusterResponse"
              },
              {
                "name": "DeleteCluster",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetKernelSupportAvailable",
                "in_type": "Empty",
                "out_type": "KernelSupportAvailableResponse"
              },
              {
                "name": "GetClusterDefaultValues",
                "in_type": "Empty",
                "out_type": "ClusterDefaultsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:common.proto",
      "def": {
        "messages": [
          {
            "name": "ResourceByID",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeleteByIDWithForce",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:compliance_management_service.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceRun.State",
            "enum_fields": [
              {
                "name": "INVALID"
              },
              {
                "name": "READY",
                "integer": 1
              },
              {
                "name": "STARTED",
                "integer": 2
              },
              {
                "name": "WAIT_FOR_DATA",
                "integer": 3
              },
              {
                "name": "EVALUTING_CHECKS",
                "integer": 4
              },
              {
                "name": "FINISHED",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceRunSelection",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetActiveComplianceRunsRequest",
            "fields": [
              {
                "id": 1,
                "name": "selection",
                "type": "ComplianceRunSelection"
              }
            ]
          },
          {
            "name": "GetActiveComplianceRunsResponse",
            "fields": [
              {
                "id": 1,
                "name": "active_runs",
                "type": "ComplianceRun",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComplianceRun",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "finish_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "state",
                "type": "State"
              },
              {
                "id": 8,
                "name": "error_message",
                "type": "string"
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "GetRecentComplianceRunsRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "since",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "GetRecentComplianceRunsResponse",
            "fields": [
              {
                "id": 1,
                "name": "compliance_runs",
                "type": "ComplianceRun",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TriggerComplianceRunRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "TriggerComplianceRunResponse",
            "fields": [
              {
                "id": 1,
                "name": "started_run",
                "type": "ComplianceRun"
              }
            ]
          },
          {
            "name": "TriggerComplianceRunsRequest",
            "fields": [
              {
                "id": 1,
                "name": "selection",
                "type": "ComplianceRunSelection"
              }
            ]
          },
          {
            "name": "TriggerComplianceRunsResponse",
            "fields": [
              {
                "id": 1,
                "name": "started_runs",
                "type": "ComplianceRun",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetComplianceRunStatusesRequest",
            "fields": [
              {
                "id": 1,
                "name": "run_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "latest",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetComplianceRunStatusesResponse",
            "fields": [
              {
                "id": 1,
                "name": "invalid_run_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "runs",
                "type": "ComplianceRun",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceManagementService",
            "rpcs": [
              {
                "name": "GetRecentRuns",
                "in_type": "GetRecentComplianceRunsRequest",
                "out_type": "GetRecentComplianceRunsResponse"
              },
              {
                "name": "TriggerRuns",
                "in_type": "TriggerComplianceRunsRequest",
                "out_type": "TriggerComplianceRunsResponse"
              },
              {
                "name": "GetRunStatuses",
                "in_type": "GetComplianceRunStatusesRequest",
                "out_type": "GetComplianceRunStatusesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:compliance_service.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceStandardMetadata.Scope",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "CLUSTER",
                "integer": 1
              },
              {
                "name": "NAMESPACE",
                "integer": 2
              },
              {
                "name": "DEPLOYMENT",
                "integer": 3
              },
              {
                "name": "NODE",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceAggregationRequest",
            "fields": [
              {
                "id": 1,
                "name": "group_by",
                "type": "storage.ComplianceAggregation.Scope",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "unit",
                "type": "storage.ComplianceAggregation.Scope"
              },
              {
                "id": 3,
                "name": "where",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "ComplianceStandardMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "num_implemented_checks",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "scopes",
                "type": "Scope",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "dynamic",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "hideScanResults",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ComplianceControlGroup",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "num_implemented_checks",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ComplianceControl",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "group_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "description",
                "type": "string"
              },
              {
                "id": 6,
                "name": "implemented",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "interpretation_text",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceStandard",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "ComplianceStandardMetadata"
              },
              {
                "id": 2,
                "name": "groups",
                "type": "ComplianceControlGroup",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "controls",
                "type": "ComplianceControl",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetComplianceStandardResponse",
            "fields": [
              {
                "id": 1,
                "name": "standard",
                "type": "ComplianceStandard"
              }
            ]
          },
          {
            "name": "GetComplianceStandardsResponse",
            "fields": [
              {
                "id": 1,
                "name": "standards",
                "type": "ComplianceStandardMetadata",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateComplianceRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "hideScanResults",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetComplianceRunResultsRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "run_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetComplianceRunResultsResponse",
            "fields": [
              {
                "id": 1,
                "name": "results",
                "type": "storage.ComplianceRunResults"
              },
              {
                "id": 2,
                "name": "failed_runs",
                "type": "storage.ComplianceRunMetadata",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceService",
            "rpcs": [
              {
                "name": "GetStandards",
                "in_type": "Empty",
                "out_type": "GetComplianceStandardsResponse"
              },
              {
                "name": "GetStandard",
                "in_type": "ResourceByID",
                "out_type": "GetComplianceStandardResponse"
              },
              {
                "name": "GetRunResults",
                "in_type": "GetComplianceRunResultsRequest",
                "out_type": "GetComplianceRunResultsResponse"
              },
              {
                "name": "GetAggregatedResults",
                "in_type": "ComplianceAggregationRequest",
                "out_type": "storage.ComplianceAggregation.Response"
              },
              {
                "name": "UpdateComplianceStandardConfig",
                "in_type": "UpdateComplianceRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/compliance.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:config_service.proto",
      "def": {
        "messages": [
          {
            "name": "PutConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.Config"
              }
            ]
          },
          {
            "name": "DayOption",
            "fields": [
              {
                "id": 1,
                "name": "num_days",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "enabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "VulnerabilityExceptionConfig",
            "fields": [
              {
                "id": 1,
                "name": "expiry_options",
                "type": "ExpiryOptions"
              }
            ],
            "messages": [
              {
                "name": "FixableCVEOptions",
                "fields": [
                  {
                    "id": 1,
                    "name": "all_fixable",
                    "type": "bool"
                  },
                  {
                    "id": 2,
                    "name": "any_fixable",
                    "type": "bool"
                  }
                ]
              },
              {
                "name": "ExpiryOptions",
                "fields": [
                  {
                    "id": 1,
                    "name": "day_options",
                    "type": "DayOption",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "fixable_cve_options",
                    "type": "FixableCVEOptions"
                  },
                  {
                    "id": 3,
                    "name": "custom_date",
                    "type": "bool"
                  },
                  {
                    "id": 4,
                    "name": "indefinite",
                    "type": "bool"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetVulnerabilityExceptionConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "VulnerabilityExceptionConfig"
              }
            ]
          },
          {
            "name": "UpdateVulnerabilityExceptionConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "VulnerabilityExceptionConfig"
              }
            ]
          },
          {
            "name": "UpdateVulnerabilityExceptionConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "VulnerabilityExceptionConfig"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ConfigService",
            "rpcs": [
              {
                "name": "GetPublicConfig",
                "in_type": "Empty",
                "out_type": "storage.PublicConfig"
              },
              {
                "name": "GetPrivateConfig",
                "in_type": "Empty",
                "out_type": "storage.PrivateConfig"
              },
              {
                "name": "GetVulnerabilityExceptionConfig",
                "in_type": "Empty",
                "out_type": "GetVulnerabilityExceptionConfigResponse"
              },
              {
                "name": "UpdateVulnerabilityExceptionConfig",
                "in_type": "UpdateVulnerabilityExceptionConfigRequest",
                "out_type": "UpdateVulnerabilityExceptionConfigResponse"
              },
              {
                "name": "GetConfig",
                "in_type": "Empty",
                "out_type": "storage.Config"
              },
              {
                "name": "PutConfig",
                "in_type": "PutConfigRequest",
                "out_type": "storage.Config"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/config.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:credential_expiry_service.proto",
      "def": {
        "enums": [
          {
            "name": "GetCertExpiry.Component",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "CENTRAL",
                "integer": 1
              },
              {
                "name": "SCANNER",
                "integer": 2
              },
              {
                "name": "SCANNER_V4",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetCertExpiry",
            "messages": [
              {
                "name": "Request",
                "fields": [
                  {
                    "id": 1,
                    "name": "component",
                    "type": "Component"
                  }
                ]
              },
              {
                "name": "Response",
                "fields": [
                  {
                    "id": 1,
                    "name": "expiry",
                    "type": "google.protobuf.Timestamp"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CredentialExpiryService",
            "rpcs": [
              {
                "name": "GetCertExpiry",
                "in_type": "GetCertExpiry.Request",
                "out_type": "GetCertExpiry.Response"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:cve_service.proto",
      "def": {
        "messages": [
          {
            "name": "SuppressCVERequest",
            "fields": [
              {
                "id": 1,
                "name": "cves",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "duration",
                "type": "google.protobuf.Duration"
              }
            ],
            "reserved_ids": [
              2
            ]
          },
          {
            "name": "UnsuppressCVERequest",
            "fields": [
              {
                "id": 1,
                "name": "cves",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImageCVEService",
            "rpcs": [
              {
                "name": "SuppressCVEs",
                "in_type": "SuppressCVERequest",
                "out_type": "Empty"
              },
              {
                "name": "UnsuppressCVEs",
                "in_type": "UnsuppressCVERequest",
                "out_type": "Empty"
              }
            ]
          },
          {
            "name": "NodeCVEService",
            "rpcs": [
              {
                "name": "SuppressCVEs",
                "in_type": "SuppressCVERequest",
                "out_type": "Empty"
              },
              {
                "name": "UnsuppressCVEs",
                "in_type": "UnsuppressCVERequest",
                "out_type": "Empty"
              }
            ]
          },
          {
            "name": "ClusterCVEService",
            "rpcs": [
              {
                "name": "SuppressCVEs",
                "in_type": "SuppressCVERequest",
                "out_type": "Empty"
              },
              {
                "name": "UnsuppressCVEs",
                "in_type": "UnsuppressCVERequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:db_service.proto",
      "def": {
        "enums": [
          {
            "name": "DBRestoreProcessStatus.State",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "NOT_STARTED",
                "integer": 1
              },
              {
                "name": "IN_PROGRESS",
                "integer": 2
              },
              {
                "name": "PAUSED",
                "integer": 3
              },
              {
                "name": "COMPLETED",
                "integer": 4
              }
            ]
          },
          {
            "name": "DBExportManifest.EncodingType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "UNCOMPREESSED",
                "integer": 1
              },
              {
                "name": "DEFLATED",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DBRestoreRequestHeader",
            "fields": [
              {
                "id": 1,
                "name": "format_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "manifest",
                "type": "DBExportManifest"
              },
              {
                "id": 3,
                "name": "local_file",
                "type": "LocalFileInfo"
              }
            ],
            "messages": [
              {
                "name": "LocalFileInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "bytes_size",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "DBRestoreProcessMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "header",
                "type": "DBRestoreRequestHeader"
              },
              {
                "id": 3,
                "name": "start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "initiating_user_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "DBRestoreProcessStatus",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "DBRestoreProcessMetadata"
              },
              {
                "id": 2,
                "name": "attempt_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "state",
                "type": "State"
              },
              {
                "id": 4,
                "name": "resume_info",
                "type": "ResumeInfo"
              },
              {
                "id": 5,
                "name": "error",
                "type": "string"
              },
              {
                "id": 6,
                "name": "bytes_read",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "files_processed",
                "type": "int64"
              }
            ],
            "messages": [
              {
                "name": "ResumeInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "pos",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "DBExportManifest",
            "fields": [
              {
                "id": 1,
                "name": "files",
                "type": "File",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "File",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "encoding",
                    "type": "EncodingType"
                  },
                  {
                    "id": 3,
                    "name": "encoded_size",
                    "type": "int64"
                  },
                  {
                    "id": 4,
                    "name": "decoded_size",
                    "type": "int64"
                  },
                  {
                    "id": 5,
                    "name": "decoded_crc32",
                    "type": "fixed32"
                  }
                ]
              }
            ]
          },
          {
            "name": "DBExportFormat",
            "fields": [
              {
                "id": 1,
                "name": "format_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "files",
                "type": "File",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "File",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "optional",
                    "type": "bool"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetDBExportCapabilitiesResponse",
            "fields": [
              {
                "id": 1,
                "name": "formats",
                "type": "DBExportFormat",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "supported_encodings",
                "type": "DBExportManifest.EncodingType",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetActiveDBRestoreProcessResponse",
            "fields": [
              {
                "id": 1,
                "name": "active_status",
                "type": "DBRestoreProcessStatus"
              }
            ]
          },
          {
            "name": "InterruptDBRestoreProcessRequest",
            "fields": [
              {
                "id": 1,
                "name": "process_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "attempt_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "InterruptDBRestoreProcessResponse",
            "fields": [
              {
                "id": 1,
                "name": "resume_info",
                "type": "DBRestoreProcessStatus.ResumeInfo"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DBService",
            "rpcs": [
              {
                "name": "GetExportCapabilities",
                "in_type": "Empty",
                "out_type": "GetDBExportCapabilitiesResponse"
              },
              {
                "name": "GetActiveRestoreProcess",
                "in_type": "Empty",
                "out_type": "GetActiveDBRestoreProcessResponse"
              },
              {
                "name": "InterruptRestoreProcess",
                "in_type": "InterruptDBRestoreProcessRequest",
                "out_type": "InterruptDBRestoreProcessResponse"
              },
              {
                "name": "CancelRestoreProcess",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:debug_service.proto",
      "def": {
        "enums": [
          {
            "name": "Response.Status",
            "enum_fields": [
              {
                "name": "UNKNOWN_STATUS"
              },
              {
                "name": "SUCCESS",
                "integer": 1
              },
              {
                "name": "FAILURE",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetLogLevelRequest",
            "fields": [
              {
                "id": 1,
                "name": "modules",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LogLevelRequest",
            "fields": [
              {
                "id": 1,
                "name": "level",
                "type": "string"
              },
              {
                "id": 2,
                "name": "modules",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ModuleLevel",
            "fields": [
              {
                "id": 1,
                "name": "module",
                "type": "string"
              },
              {
                "id": 2,
                "name": "level",
                "type": "string"
              }
            ]
          },
          {
            "name": "LogLevelResponse",
            "fields": [
              {
                "id": 1,
                "name": "level",
                "type": "string"
              },
              {
                "id": 2,
                "name": "module_levels",
                "type": "ModuleLevel",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AuthorizationTraceResponse",
            "fields": [
              {
                "id": 1,
                "name": "arrived_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "processed_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "request",
                "type": "Request"
              },
              {
                "id": 4,
                "name": "response",
                "type": "Response"
              },
              {
                "id": 5,
                "name": "user",
                "type": "User"
              },
              {
                "id": 6,
                "name": "trace",
                "type": "Trace"
              }
            ],
            "messages": [
              {
                "name": "Request",
                "fields": [
                  {
                    "id": 1,
                    "name": "endpoint",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "method",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Response",
                "fields": [
                  {
                    "id": 1,
                    "name": "status",
                    "type": "Status"
                  },
                  {
                    "id": 2,
                    "name": "error",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "User",
                "fields": [
                  {
                    "id": 1,
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "friendly_name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "roles",
                    "type": "Role",
                    "is_repeated": true
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "aggregated_permissions",
                      "type": "storage.Access"
                    }
                  }
                ],
                "messages": [
                  {
                    "name": "Role",
                    "fields": [
                      {
                        "id": 1,
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "access_scope_name",
                        "type": "string"
                      },
                      {
                        "id": 4,
                        "name": "access_scope",
                        "type": "storage.SimpleAccessScope.Rules"
                      }
                    ],
                    "maps": [
                      {
                        "key_type": "string",
                        "field": {
                          "id": 2,
                          "name": "permissions",
                          "type": "storage.Access"
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Trace",
                "fields": [
                  {
                    "id": 1,
                    "name": "scope_checker_type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "built_in",
                    "type": "BuiltInAuthorizer"
                  }
                ],
                "messages": [
                  {
                    "name": "BuiltInAuthorizer",
                    "fields": [
                      {
                        "id": 1,
                        "name": "clusters_total_num",
                        "type": "int32"
                      },
                      {
                        "id": 2,
                        "name": "namespaces_total_num",
                        "type": "int32"
                      }
                    ],
                    "maps": [
                      {
                        "key_type": "string",
                        "field": {
                          "id": 3,
                          "name": "denied_authz_decisions",
                          "type": "int32"
                        }
                      },
                      {
                        "key_type": "string",
                        "field": {
                          "id": 4,
                          "name": "allowed_authz_decisions",
                          "type": "int32"
                        }
                      },
                      {
                        "key_type": "string",
                        "field": {
                          "id": 5,
                          "name": "effective_access_scopes",
                          "type": "string"
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DebugService",
            "rpcs": [
              {
                "name": "GetLogLevel",
                "in_type": "GetLogLevelRequest",
                "out_type": "LogLevelResponse"
              },
              {
                "name": "SetLogLevel",
                "in_type": "LogLevelRequest",
                "out_type": "google.protobuf.Empty"
              },
              {
                "name": "StreamAuthzTraces",
                "in_type": "v1.Empty",
                "out_type": "AuthorizationTraceResponse",
                "out_streamed": true
              },
              {
                "name": "ResetDBStats",
                "in_type": "v1.Empty",
                "out_type": "v1.Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/empty.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/role.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:declarative_config_health_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetDeclarativeConfigHealthsResponse",
            "fields": [
              {
                "id": 1,
                "name": "healths",
                "type": "storage.DeclarativeConfigHealth",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DeclarativeConfigHealthService",
            "rpcs": [
              {
                "name": "GetDeclarativeConfigHealths",
                "in_type": "Empty",
                "out_type": "GetDeclarativeConfigHealthsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/declarative_config_health.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:delegated_registry_config_service.proto",
      "def": {
        "enums": [
          {
            "name": "DelegatedRegistryConfig.EnabledFor",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "ALL",
                "integer": 1
              },
              {
                "name": "SPECIFIC",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DelegatedRegistryClustersResponse",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "DelegatedRegistryCluster",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DelegatedRegistryCluster",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "is_valid",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DelegatedRegistryConfig",
            "fields": [
              {
                "id": 1,
                "name": "enabled_for",
                "type": "EnabledFor"
              },
              {
                "id": 2,
                "name": "default_cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "registries",
                "type": "DelegatedRegistry",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "DelegatedRegistry",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "cluster_id",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DelegatedRegistryConfigService",
            "rpcs": [
              {
                "name": "GetConfig",
                "in_type": "Empty",
                "out_type": "DelegatedRegistryConfig"
              },
              {
                "name": "GetClusters",
                "in_type": "Empty",
                "out_type": "DelegatedRegistryClustersResponse"
              },
              {
                "name": "UpdateConfig",
                "in_type": "DelegatedRegistryConfig",
                "out_type": "DelegatedRegistryConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:deployment_service.proto",
      "def": {
        "messages": [
          {
            "name": "DeploymentLabelsResponse",
            "fields": [
              {
                "id": 2,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "labels",
                  "type": "LabelValues"
                }
              }
            ],
            "messages": [
              {
                "name": "LabelValues",
                "fields": [
                  {
                    "id": 1,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ListDeploymentsResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployments",
                "type": "storage.ListDeployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountDeploymentsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ListDeploymentsWithProcessInfoResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployments",
                "type": "DeploymentWithProcessInfo",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "DeploymentWithProcessInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "deployment",
                    "type": "storage.ListDeployment"
                  },
                  {
                    "id": 3,
                    "name": "baseline_statuses",
                    "type": "storage.ContainerNameAndBaselineStatus",
                    "is_repeated": true
                  }
                ],
                "reserved_ids": [
                  2
                ]
              }
            ]
          },
          {
            "name": "GetDeploymentWithRiskResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 2,
                "name": "risk",
                "type": "storage.Risk"
              }
            ]
          },
          {
            "name": "ExportDeploymentRequest",
            "fields": [
              {
                "id": 1,
                "name": "timeout",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExportDeploymentResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployment",
                "type": "storage.Deployment"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DeploymentService",
            "rpcs": [
              {
                "name": "GetDeployment",
                "in_type": "ResourceByID",
                "out_type": "storage.Deployment"
              },
              {
                "name": "GetDeploymentWithRisk",
                "in_type": "ResourceByID",
                "out_type": "GetDeploymentWithRiskResponse"
              },
              {
                "name": "CountDeployments",
                "in_type": "RawQuery",
                "out_type": "CountDeploymentsResponse"
              },
              {
                "name": "ListDeployments",
                "in_type": "RawQuery",
                "out_type": "ListDeploymentsResponse"
              },
              {
                "name": "ListDeploymentsWithProcessInfo",
                "in_type": "RawQuery",
                "out_type": "ListDeploymentsWithProcessInfoResponse"
              },
              {
                "name": "GetLabels",
                "in_type": "Empty",
                "out_type": "DeploymentLabelsResponse"
              },
              {
                "name": "ExportDeployments",
                "in_type": "ExportDeploymentRequest",
                "out_type": "ExportDeploymentResponse",
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/process_baseline.proto"
          },
          {
            "path": "storage/risk.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:detection_service.proto",
      "def": {
        "messages": [
          {
            "name": "BuildDetectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.ContainerImage"
              },
              {
                "id": 3,
                "name": "image_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "no_external_metadata",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "send_notifications",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "force",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "policy_categories",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "cluster",
                "type": "string"
              }
            ]
          },
          {
            "name": "BuildDetectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "alerts",
                "type": "storage.Alert",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeployDetectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 2,
                "name": "no_external_metadata",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "enforcement_only",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeployYAMLDetectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "yaml",
                "type": "string"
              },
              {
                "id": 2,
                "name": "no_external_metadata",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "enforcement_only",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "force",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "policy_categories",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "cluster",
                "type": "string"
              },
              {
                "id": 7,
                "name": "namespace",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeployDetectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "runs",
                "type": "Run",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "ignored_object_refs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "remarks",
                "type": "DeployDetectionRemark",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Run",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "alerts",
                    "type": "storage.Alert",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "DeployDetectionRemark",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "permission_level",
                "type": "string"
              },
              {
                "id": 3,
                "name": "applied_network_policies",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ResultAggregation",
            "fields": [
              {
                "id": 1,
                "name": "alerts",
                "type": "storage.Alert",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "remarks",
                "type": "DeployDetectionRemark",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DetectionService",
            "rpcs": [
              {
                "name": "DetectBuildTime",
                "in_type": "BuildDetectionRequest",
                "out_type": "BuildDetectionResponse"
              },
              {
                "name": "DetectDeployTime",
                "in_type": "DeployDetectionRequest",
                "out_type": "DeployDetectionResponse"
              },
              {
                "name": "DetectDeployTimeFromYAML",
                "in_type": "DeployYAMLDetectionRequest",
                "out_type": "DeployDetectionResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/alert.proto"
          },
          {
            "path": "storage/deployment.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:discovered_cluster_service.proto",
      "def": {
        "enums": [
          {
            "name": "Metadata.Type",
            "enum_fields": [
              {
                "name": "UNSPECIFIED"
              },
              {
                "name": "AKS",
                "integer": 1
              },
              {
                "name": "ARO",
                "integer": 2
              },
              {
                "name": "EKS",
                "integer": 3
              },
              {
                "name": "GKE",
                "integer": 4
              },
              {
                "name": "OCP",
                "integer": 5
              },
              {
                "name": "OSD",
                "integer": 6
              },
              {
                "name": "ROSA",
                "integer": 7
              }
            ]
          },
          {
            "name": "Metadata.ProviderType",
            "enum_fields": [
              {
                "name": "PROVIDER_TYPE_UNSPECIFIED"
              },
              {
                "name": "PROVIDER_TYPE_AWS",
                "integer": 1
              },
              {
                "name": "PROVIDER_TYPE_GCP",
                "integer": 2
              },
              {
                "name": "PROVIDER_TYPE_AZURE",
                "integer": 3
              }
            ]
          },
          {
            "name": "DiscoveredCluster.Status",
            "enum_fields": [
              {
                "name": "STATUS_UNSPECIFIED"
              },
              {
                "name": "STATUS_SECURED",
                "integer": 1
              },
              {
                "name": "STATUS_UNSECURED",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DiscoveredCluster",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "metadata",
                "type": "Metadata"
              },
              {
                "id": 3,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 4,
                "name": "source",
                "type": "CloudSource"
              }
            ],
            "messages": [
              {
                "name": "Metadata",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "type",
                    "type": "Type"
                  },
                  {
                    "id": 4,
                    "name": "provider_type",
                    "type": "ProviderType"
                  },
                  {
                    "id": 5,
                    "name": "region",
                    "type": "string"
                  },
                  {
                    "id": 6,
                    "name": "first_discovered_at",
                    "type": "google.protobuf.Timestamp"
                  }
                ]
              },
              {
                "name": "CloudSource",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "DiscoveredClustersFilter",
            "fields": [
              {
                "id": 1,
                "name": "names",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "types",
                "type": "DiscoveredCluster.Metadata.Type",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "statuses",
                "type": "DiscoveredCluster.Status",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "source_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountDiscoveredClustersRequest",
            "fields": [
              {
                "id": 1,
                "name": "filter",
                "type": "DiscoveredClustersFilter"
              }
            ]
          },
          {
            "name": "CountDiscoveredClustersResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "GetDiscoveredClusterRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetDiscoveredClusterResponse",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "DiscoveredCluster"
              }
            ]
          },
          {
            "name": "ListDiscoveredClustersRequest",
            "fields": [
              {
                "id": 1,
                "name": "pagination",
                "type": "Pagination"
              },
              {
                "id": 2,
                "name": "filter",
                "type": "DiscoveredClustersFilter"
              }
            ]
          },
          {
            "name": "ListDiscoveredClustersResponse",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "DiscoveredCluster",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DiscoveredClustersService",
            "rpcs": [
              {
                "name": "CountDiscoveredClusters",
                "in_type": "CountDiscoveredClustersRequest",
                "out_type": "CountDiscoveredClustersResponse"
              },
              {
                "name": "GetDiscoveredCluster",
                "in_type": "GetDiscoveredClusterRequest",
                "out_type": "GetDiscoveredClusterResponse"
              },
              {
                "name": "ListDiscoveredClusters",
                "in_type": "ListDiscoveredClustersRequest",
                "out_type": "ListDiscoveredClustersResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/pagination.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:empty.proto",
      "def": {
        "messages": [
          {
            "name": "Empty"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:feature_flag_service.proto",
      "def": {
        "messages": [
          {
            "name": "FeatureFlag",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "env_var",
                "type": "string"
              },
              {
                "id": 3,
                "name": "enabled",
                "type": "bool"
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "GetFeatureFlagsResponse",
            "fields": [
              {
                "id": 1,
                "name": "feature_flags",
                "type": "FeatureFlag",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "FeatureFlagService",
            "rpcs": [
              {
                "name": "GetFeatureFlags",
                "in_type": "Empty",
                "out_type": "GetFeatureFlagsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:group_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetGroupsRequest",
            "fields": [
              {
                "id": 1,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetGroupsResponse",
            "fields": [
              {
                "id": 1,
                "name": "groups",
                "type": "storage.Group",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GroupBatchUpdateRequest",
            "fields": [
              {
                "id": 1,
                "name": "previous_groups",
                "type": "storage.Group",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "required_groups",
                "type": "storage.Group",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "force",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteGroupRequest",
            "fields": [
              {
                "id": 1,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "force",
                "type": "bool"
              }
            ]
          },
          {
            "name": "UpdateGroupRequest",
            "fields": [
              {
                "id": 1,
                "name": "group",
                "type": "storage.Group"
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "GroupService",
            "rpcs": [
              {
                "name": "GetGroups",
                "in_type": "GetGroupsRequest",
                "out_type": "GetGroupsResponse"
              },
              {
                "name": "GetGroup",
                "in_type": "storage.GroupProperties",
                "out_type": "storage.Group"
              },
              {
                "name": "BatchUpdate",
                "in_type": "GroupBatchUpdateRequest",
                "out_type": "Empty"
              },
              {
                "name": "CreateGroup",
                "in_type": "storage.Group",
                "out_type": "Empty"
              },
              {
                "name": "UpdateGroup",
                "in_type": "UpdateGroupRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeleteGroup",
                "in_type": "DeleteGroupRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/group.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:grpc_preference_service.proto",
      "def": {
        "messages": [
          {
            "name": "Preferences",
            "fields": [
              {
                "id": 1,
                "name": "max_grpc_receive_size_bytes",
                "type": "uint64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "GRPCPreferencesService",
            "rpcs": [
              {
                "name": "Get",
                "in_type": "Empty",
                "out_type": "Preferences"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:image_integration_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetImageIntegrationsRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetImageIntegrationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "integrations",
                "type": "storage.ImageIntegration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateImageIntegrationRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.ImageIntegration"
              },
              {
                "id": 2,
                "name": "updatePassword",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImageIntegrationService",
            "rpcs": [
              {
                "name": "GetImageIntegration",
                "in_type": "ResourceByID",
                "out_type": "storage.ImageIntegration"
              },
              {
                "name": "GetImageIntegrations",
                "in_type": "GetImageIntegrationsRequest",
                "out_type": "GetImageIntegrationsResponse"
              },
              {
                "name": "PostImageIntegration",
                "in_type": "storage.ImageIntegration",
                "out_type": "storage.ImageIntegration"
              },
              {
                "name": "PutImageIntegration",
                "in_type": "storage.ImageIntegration",
                "out_type": "Empty"
              },
              {
                "name": "TestImageIntegration",
                "in_type": "storage.ImageIntegration",
                "out_type": "Empty"
              },
              {
                "name": "DeleteImageIntegration",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "UpdateImageIntegration",
                "in_type": "UpdateImageIntegrationRequest",
                "out_type": "Empty"
              },
              {
                "name": "TestUpdatedImageIntegration",
                "in_type": "UpdateImageIntegrationRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/image_integration.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:image_service.proto",
      "def": {
        "enums": [
          {
            "name": "WatchImageResponse.ErrorType",
            "enum_fields": [
              {
                "name": "NO_ERROR"
              },
              {
                "name": "INVALID_IMAGE_NAME",
                "integer": 1
              },
              {
                "name": "NO_VALID_INTEGRATION",
                "integer": 2
              },
              {
                "name": "SCAN_FAILED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "include_snoozed",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "strip_description",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ListImagesResponse",
            "fields": [
              {
                "id": 1,
                "name": "images",
                "type": "storage.ListImage",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountImagesResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ScanImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "include_snoozed",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "cluster",
                "type": "string"
              }
            ]
          },
          {
            "name": "ScanImageInternalRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.ContainerImage"
              },
              {
                "id": 3,
                "name": "cached_only",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "source",
                "type": "Source"
              }
            ],
            "reserved_ids": [
              2
            ],
            "messages": [
              {
                "name": "Source",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "image_pull_secrets",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ScanImageInternalResponse",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.Image"
              }
            ]
          },
          {
            "name": "GetImageVulnerabilitiesInternalRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image_name",
                "type": "storage.ImageName"
              },
              {
                "id": 3,
                "name": "metadata",
                "type": "storage.ImageMetadata"
              },
              {
                "id": 6,
                "name": "is_cluster_local",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "components",
                "type": "scannerV1.Components"
              },
              {
                "id": 5,
                "name": "notes",
                "type": "scannerV1.Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EnrichLocalImageInternalRequest",
            "fields": [
              {
                "id": 12,
                "name": "indexer_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "image_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image_name",
                "type": "storage.ImageName"
              },
              {
                "id": 3,
                "name": "metadata",
                "type": "storage.ImageMetadata"
              },
              {
                "id": 4,
                "name": "image_signature",
                "type": "storage.ImageSignature"
              },
              {
                "id": 5,
                "name": "components",
                "type": "scannerV1.Components"
              },
              {
                "id": 6,
                "name": "notes",
                "type": "scannerV1.Note",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "image_notes",
                "type": "storage.Image.Note",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "error",
                "type": "string"
              },
              {
                "id": 9,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 10,
                "name": "force",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "v4_contents",
                "type": "scanner.v4.Contents"
              }
            ]
          },
          {
            "name": "UpdateLocalScanStatusInternalRequest",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeleteImagesRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              },
              {
                "id": 2,
                "name": "confirm",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteImagesResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_deleted",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "dry_run",
                "type": "bool"
              }
            ]
          },
          {
            "name": "WatchImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "WatchImageResponse",
            "fields": [
              {
                "id": 1,
                "name": "normalized_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "error_type",
                "type": "ErrorType"
              },
              {
                "id": 3,
                "name": "error_message",
                "type": "string"
              }
            ]
          },
          {
            "name": "UnwatchImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetWatchedImagesResponse",
            "fields": [
              {
                "id": 1,
                "name": "watched_images",
                "type": "storage.WatchedImage",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScanImageInternalResponseDetails",
            "messages": [
              {
                "name": "TooManyParallelScans"
              }
            ]
          },
          {
            "name": "ExportImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "timeout",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExportImageResponse",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.Image"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImageService",
            "rpcs": [
              {
                "name": "GetImage",
                "in_type": "GetImageRequest",
                "out_type": "storage.Image"
              },
              {
                "name": "CountImages",
                "in_type": "RawQuery",
                "out_type": "CountImagesResponse"
              },
              {
                "name": "ListImages",
                "in_type": "RawQuery",
                "out_type": "ListImagesResponse"
              },
              {
                "name": "ScanImage",
                "in_type": "ScanImageRequest",
                "out_type": "storage.Image"
              },
              {
                "name": "ScanImageInternal",
                "in_type": "ScanImageInternalRequest",
                "out_type": "ScanImageInternalResponse"
              },
              {
                "name": "GetImageVulnerabilitiesInternal",
                "in_type": "GetImageVulnerabilitiesInternalRequest",
                "out_type": "ScanImageInternalResponse"
              },
              {
                "name": "EnrichLocalImageInternal",
                "in_type": "EnrichLocalImageInternalRequest",
                "out_type": "ScanImageInternalResponse"
              },
              {
                "name": "UpdateLocalScanStatusInternal",
                "in_type": "UpdateLocalScanStatusInternalRequest",
                "out_type": "Empty"
              },
              {
                "name": "InvalidateScanAndRegistryCaches",
                "in_type": "Empty",
                "out_type": "Empty"
              },
              {
                "name": "DeleteImages",
                "in_type": "DeleteImagesRequest",
                "out_type": "DeleteImagesResponse"
              },
              {
                "name": "WatchImage",
                "in_type": "WatchImageRequest",
                "out_type": "WatchImageResponse"
              },
              {
                "name": "UnwatchImage",
                "in_type": "UnwatchImageRequest",
                "out_type": "Empty"
              },
              {
                "name": "GetWatchedImages",
                "in_type": "Empty",
                "out_type": "GetWatchedImagesResponse"
              },
              {
                "name": "ExportImages",
                "in_type": "ExportImageRequest",
                "out_type": "ExportImageResponse",
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "internalapi/scanner/v4/common.proto"
          },
          {
            "path": "scanner/api/v1/component.proto"
          },
          {
            "path": "scanner/api/v1/note.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:integration_health_service.proto",
      "def": {
        "enums": [
          {
            "name": "VulnDefinitionsInfoRequest.Component",
            "enum_fields": [
              {
                "name": "SCANNER"
              },
              {
                "name": "SCANNER_V4",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetIntegrationHealthResponse",
            "fields": [
              {
                "id": 1,
                "name": "integrationHealth",
                "type": "storage.IntegrationHealth",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "VulnDefinitionsInfoRequest",
            "fields": [
              {
                "id": 1,
                "name": "component",
                "type": "Component"
              }
            ]
          },
          {
            "name": "VulnDefinitionsInfo",
            "fields": [
              {
                "id": 1,
                "name": "last_updated_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "IntegrationHealthService",
            "rpcs": [
              {
                "name": "GetImageIntegrations",
                "in_type": "Empty",
                "out_type": "GetIntegrationHealthResponse"
              },
              {
                "name": "GetNotifiers",
                "in_type": "Empty",
                "out_type": "GetIntegrationHealthResponse"
              },
              {
                "name": "GetBackupPlugins",
                "in_type": "Empty",
                "out_type": "GetIntegrationHealthResponse"
              },
              {
                "name": "GetDeclarativeConfigs",
                "in_type": "Empty",
                "out_type": "GetIntegrationHealthResponse"
              },
              {
                "name": "GetVulnDefinitionsInfo",
                "in_type": "VulnDefinitionsInfoRequest",
                "out_type": "VulnDefinitionsInfo"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/integration_health.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:metadata_service.proto",
      "def": {
        "enums": [
          {
            "name": "Metadata.LicenseStatus",
            "enum_fields": [
              {
                "name": "NONE",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "name": "INVALID",
                "integer": 1,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "name": "EXPIRED",
                "integer": 2,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "name": "RESTARTING",
                "integer": 3,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "name": "VALID",
                "integer": 4
              }
            ]
          },
          {
            "name": "DatabaseStatus.DatabaseType",
            "enum_fields": [
              {
                "name": "Hidden"
              },
              {
                "name": "RocksDB",
                "integer": 1
              },
              {
                "name": "PostgresDB",
                "integer": 2
              }
            ]
          },
          {
            "name": "CentralServicesCapabilities.CapabilityStatus",
            "enum_fields": [
              {
                "name": "CapabilityAvailable"
              },
              {
                "name": "CapabilityDisabled",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Metadata",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "build_flavor",
                "type": "string"
              },
              {
                "id": 3,
                "name": "release_build",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "license_status",
                "type": "LicenseStatus",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          },
          {
            "name": "TrustInfo",
            "fields": [
              {
                "id": 1,
                "name": "cert_chain",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "sensor_challenge",
                "type": "string"
              },
              {
                "id": 3,
                "name": "central_challenge",
                "type": "string"
              },
              {
                "id": 4,
                "name": "additional_cas",
                "type": "bytes",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TLSChallengeResponse",
            "fields": [
              {
                "id": 1,
                "name": "trust_info_serialized",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "signature",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "TLSChallengeRequest",
            "fields": [
              {
                "id": 1,
                "name": "challenge_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "DatabaseStatus",
            "fields": [
              {
                "id": 1,
                "name": "database_available",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "database_type",
                "type": "DatabaseType"
              },
              {
                "id": 3,
                "name": "database_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "DatabaseBackupStatus",
            "fields": [
              {
                "id": 1,
                "name": "backup_info",
                "type": "storage.BackupInfo"
              }
            ]
          },
          {
            "name": "CentralServicesCapabilities",
            "fields": [
              {
                "id": 1,
                "name": "central_scanning_can_use_container_iam_role_for_ecr",
                "type": "CapabilityStatus"
              },
              {
                "id": 2,
                "name": "central_can_use_cloud_backup_integrations",
                "type": "CapabilityStatus"
              },
              {
                "id": 3,
                "name": "central_can_display_declarative_config_health",
                "type": "CapabilityStatus"
              },
              {
                "id": 4,
                "name": "central_can_update_cert",
                "type": "CapabilityStatus"
              },
              {
                "id": 5,
                "name": "central_can_use_acscs_email_integration",
                "type": "CapabilityStatus"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "MetadataService",
            "rpcs": [
              {
                "name": "GetMetadata",
                "in_type": "Empty",
                "out_type": "Metadata"
              },
              {
                "name": "TLSChallenge",
                "in_type": "TLSChallengeRequest",
                "out_type": "TLSChallengeResponse"
              },
              {
                "name": "GetDatabaseStatus",
                "in_type": "Empty",
                "out_type": "DatabaseStatus"
              },
              {
                "name": "GetDatabaseBackupStatus",
                "in_type": "Empty",
                "out_type": "DatabaseBackupStatus"
              },
              {
                "name": "GetCentralCapabilities",
                "in_type": "Empty",
                "out_type": "CentralServicesCapabilities"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/system_info.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:mitre_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListMitreAttackVectorsResponse",
            "fields": [
              {
                "id": 1,
                "name": "mitre_attack_vectors",
                "type": "storage.MitreAttackVector",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetMitreVectorResponse",
            "fields": [
              {
                "id": 1,
                "name": "mitre_attack_vector",
                "type": "storage.MitreAttackVector"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "MitreAttackService",
            "rpcs": [
              {
                "name": "ListMitreAttackVectors",
                "in_type": "Empty",
                "out_type": "ListMitreAttackVectorsResponse"
              },
              {
                "name": "GetMitreAttackVector",
                "in_type": "ResourceByID",
                "out_type": "GetMitreVectorResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/mitre.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:namespace_service.proto",
      "def": {
        "messages": [
          {
            "name": "Namespace",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "storage.NamespaceMetadata"
              },
              {
                "id": 2,
                "name": "num_deployments",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "num_secrets",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "num_network_policies",
                "type": "int32"
              }
            ]
          },
          {
            "name": "GetNamespacesResponse",
            "fields": [
              {
                "id": 1,
                "name": "namespaces",
                "type": "Namespace",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNamespaceRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NamespaceService",
            "rpcs": [
              {
                "name": "GetNamespaces",
                "in_type": "GetNamespaceRequest",
                "out_type": "GetNamespacesResponse"
              },
              {
                "name": "GetNamespace",
                "in_type": "ResourceByID",
                "out_type": "Namespace"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/namespace_metadata.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:network_baseline_service.proto",
      "def": {
        "enums": [
          {
            "name": "NetworkBaselinePeerStatus.Status",
            "enum_fields": [
              {
                "name": "BASELINE"
              },
              {
                "name": "ANOMALOUS",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "NetworkBaselinePeerEntity",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "storage.NetworkEntityInfo.Type"
              }
            ]
          },
          {
            "name": "NetworkBaselineStatusPeer",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "NetworkBaselinePeerEntity"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "storage.L4Protocol"
              },
              {
                "id": 4,
                "name": "ingress",
                "type": "bool"
              }
            ]
          },
          {
            "name": "NetworkBaselinePeerStatus",
            "fields": [
              {
                "id": 1,
                "name": "peer",
                "type": "NetworkBaselineStatusPeer"
              },
              {
                "id": 2,
                "name": "status",
                "type": "Status"
              }
            ]
          },
          {
            "name": "NetworkBaselineStatusRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "peers",
                "type": "NetworkBaselineStatusPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkBaselineStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "statuses",
                "type": "NetworkBaselinePeerStatus",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ModifyBaselineStatusForPeersRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "peers",
                "type": "NetworkBaselinePeerStatus",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NetworkBaselineService",
            "rpcs": [
              {
                "name": "GetNetworkBaselineStatusForFlows",
                "in_type": "NetworkBaselineStatusRequest",
                "out_type": "NetworkBaselineStatusResponse"
              },
              {
                "name": "GetNetworkBaseline",
                "in_type": "ResourceByID",
                "out_type": "storage.NetworkBaseline"
              },
              {
                "name": "ModifyBaselineStatusForPeers",
                "in_type": "ModifyBaselineStatusForPeersRequest",
                "out_type": "Empty"
              },
              {
                "name": "LockNetworkBaseline",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "UnlockNetworkBaseline",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/network_baseline.proto"
          },
          {
            "path": "storage/network_flow.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:network_graph_service.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkGraphScope",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkEdgeProperties",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "storage.L4Protocol"
              },
              {
                "id": 3,
                "name": "last_active_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NetworkEdgePropertiesBundle",
            "fields": [
              {
                "id": 1,
                "name": "properties",
                "type": "NetworkEdgeProperties",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkNode",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "storage.NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "internet_access",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "policy_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "non_isolated_ingress",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "non_isolated_egress",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "query_match",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "int32",
                "field": {
                  "id": 4,
                  "name": "out_edges",
                  "type": "NetworkEdgePropertiesBundle"
                }
              }
            ]
          },
          {
            "name": "NetworkGraphRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "since",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "include_ports",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "scope",
                "type": "NetworkGraphScope"
              },
              {
                "id": 6,
                "name": "include_policies",
                "type": "bool"
              }
            ]
          },
          {
            "name": "NetworkGraph",
            "fields": [
              {
                "id": 1,
                "name": "epoch",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "nodes",
                "type": "NetworkNode",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CreateNetworkEntityRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "entity",
                "type": "storage.NetworkEntityInfo.ExternalSource"
              }
            ]
          },
          {
            "name": "PatchNetworkEntityRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetExternalNetworkEntitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetExternalNetworkEntitiesResponse",
            "fields": [
              {
                "id": 1,
                "name": "entities",
                "type": "storage.NetworkEntity",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PutNetworkGraphConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.NetworkGraphConfig"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NetworkGraphService",
            "rpcs": [
              {
                "name": "GetNetworkGraph",
                "in_type": "NetworkGraphRequest",
                "out_type": "NetworkGraph"
              },
              {
                "name": "GetExternalNetworkEntities",
                "in_type": "GetExternalNetworkEntitiesRequest",
                "out_type": "GetExternalNetworkEntitiesResponse"
              },
              {
                "name": "CreateExternalNetworkEntity",
                "in_type": "CreateNetworkEntityRequest",
                "out_type": "storage.NetworkEntity"
              },
              {
                "name": "PatchExternalNetworkEntity",
                "in_type": "PatchNetworkEntityRequest",
                "out_type": "storage.NetworkEntity"
              },
              {
                "name": "DeleteExternalNetworkEntity",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetNetworkGraphConfig",
                "in_type": "Empty",
                "out_type": "storage.NetworkGraphConfig"
              },
              {
                "name": "PutNetworkGraphConfig",
                "in_type": "PutNetworkGraphConfigRequest",
                "out_type": "storage.NetworkGraphConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/network_graph_config.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:network_policy_service.proto",
      "def": {
        "enums": [
          {
            "name": "NetworkPolicyInSimulation.Status",
            "enum_fields": [
              {
                "name": "INVALID"
              },
              {
                "name": "UNCHANGED",
                "integer": 1
              },
              {
                "name": "MODIFIED",
                "integer": 2
              },
              {
                "name": "ADDED",
                "integer": 3
              },
              {
                "name": "DELETED",
                "integer": 4
              }
            ]
          },
          {
            "name": "GenerateNetworkPoliciesRequest.DeleteExistingPoliciesMode",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "NONE",
                "integer": 1
              },
              {
                "name": "GENERATED_ONLY",
                "integer": 2
              },
              {
                "name": "ALL",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetNetworkPoliciesRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "deployment_query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "network_policies",
                "type": "storage.NetworkPolicy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SendNetworkPolicyYamlRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "notifier_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetNetworkGraphRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "include_ports",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "scope",
                "type": "NetworkGraphScope"
              }
            ]
          },
          {
            "name": "SimulateNetworkGraphRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              },
              {
                "id": 4,
                "name": "include_ports",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "include_node_diff",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "scope",
                "type": "NetworkGraphScope"
              }
            ]
          },
          {
            "name": "ApplyNetworkPolicyYamlRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetUndoModificationRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetUndoModificationResponse",
            "fields": [
              {
                "id": 1,
                "name": "undo_record",
                "type": "storage.NetworkPolicyApplicationUndoRecord"
              }
            ]
          },
          {
            "name": "NetworkPolicyInSimulation",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "storage.NetworkPolicy"
              },
              {
                "id": 2,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 3,
                "name": "old_policy",
                "type": "storage.NetworkPolicy"
              }
            ]
          },
          {
            "name": "NetworkNodeDiff",
            "fields": [
              {
                "id": 1,
                "name": "policy_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "non_isolated_ingress",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "non_isolated_egress",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "int32",
                "field": {
                  "id": 2,
                  "name": "DEPRECATED_out_edges",
                  "type": "NetworkEdgePropertiesBundle",
                  "options": [
                    {
                      "name": "deprecated",
                      "value": "true"
                    }
                  ]
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "out_edges",
                  "type": "NetworkEdgePropertiesBundle"
                }
              }
            ]
          },
          {
            "name": "NetworkGraphDiff",
            "maps": [
              {
                "key_type": "int32",
                "field": {
                  "id": 1,
                  "name": "DEPRECATED_node_diffs",
                  "type": "NetworkNodeDiff",
                  "options": [
                    {
                      "name": "deprecated",
                      "value": "true"
                    }
                  ]
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "node_diffs",
                  "type": "NetworkNodeDiff"
                }
              }
            ]
          },
          {
            "name": "SimulateNetworkGraphResponse",
            "fields": [
              {
                "id": 1,
                "name": "simulated_graph",
                "type": "NetworkGraph"
              },
              {
                "id": 2,
                "name": "policies",
                "type": "NetworkPolicyInSimulation",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "added",
                "type": "NetworkGraphDiff"
              },
              {
                "id": 4,
                "name": "removed",
                "type": "NetworkGraphDiff"
              }
            ]
          },
          {
            "name": "GetNetworkGraphEpochRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkGraphEpoch",
            "fields": [
              {
                "id": 1,
                "name": "epoch",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "GenerateNetworkPoliciesRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "delete_existing",
                "type": "DeleteExistingPoliciesMode"
              },
              {
                "id": 4,
                "name": "network_data_since",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "include_ports",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GenerateNetworkPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetBaselineGeneratedPolicyForDeploymentRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "delete_existing",
                "type": "GenerateNetworkPoliciesRequest.DeleteExistingPoliciesMode"
              },
              {
                "id": 3,
                "name": "include_ports",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetBaselineGeneratedPolicyForDeploymentResponse",
            "fields": [
              {
                "id": 1,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetAllowedPeersFromCurrentPolicyForDeploymentResponse",
            "fields": [
              {
                "id": 1,
                "name": "allowed_peers",
                "type": "NetworkBaselineStatusPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ApplyNetworkPolicyYamlForDeploymentRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetUndoModificationForDeploymentResponse",
            "fields": [
              {
                "id": 1,
                "name": "undo_record",
                "type": "storage.NetworkPolicyApplicationUndoRecord"
              }
            ]
          },
          {
            "name": "GetDiffFlowsReconciledFlow",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "storage.NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "added",
                "type": "storage.NetworkBaselineConnectionProperties",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "removed",
                "type": "storage.NetworkBaselineConnectionProperties",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "unchanged",
                "type": "storage.NetworkBaselineConnectionProperties",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetDiffFlowsGroupedFlow",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "storage.NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "properties",
                "type": "storage.NetworkBaselineConnectionProperties",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetDiffFlowsResponse",
            "fields": [
              {
                "id": 1,
                "name": "added",
                "type": "GetDiffFlowsGroupedFlow",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "removed",
                "type": "GetDiffFlowsGroupedFlow",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "reconciled",
                "type": "GetDiffFlowsReconciledFlow",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NetworkPolicyService",
            "rpcs": [
              {
                "name": "GetNetworkPolicy",
                "in_type": "ResourceByID",
                "out_type": "storage.NetworkPolicy"
              },
              {
                "name": "GetNetworkPolicies",
                "in_type": "GetNetworkPoliciesRequest",
                "out_type": "NetworkPoliciesResponse"
              },
              {
                "name": "GetNetworkGraph",
                "in_type": "GetNetworkGraphRequest",
                "out_type": "NetworkGraph"
              },
              {
                "name": "GetNetworkGraphEpoch",
                "in_type": "GetNetworkGraphEpochRequest",
                "out_type": "NetworkGraphEpoch"
              },
              {
                "name": "ApplyNetworkPolicy",
                "in_type": "ApplyNetworkPolicyYamlRequest",
                "out_type": "Empty"
              },
              {
                "name": "GetUndoModification",
                "in_type": "GetUndoModificationRequest",
                "out_type": "GetUndoModificationResponse"
              },
              {
                "name": "SimulateNetworkGraph",
                "in_type": "SimulateNetworkGraphRequest",
                "out_type": "SimulateNetworkGraphResponse"
              },
              {
                "name": "SendNetworkPolicyYAML",
                "in_type": "SendNetworkPolicyYamlRequest",
                "out_type": "Empty"
              },
              {
                "name": "GenerateNetworkPolicies",
                "in_type": "GenerateNetworkPoliciesRequest",
                "out_type": "GenerateNetworkPoliciesResponse"
              },
              {
                "name": "GetBaselineGeneratedNetworkPolicyForDeployment",
                "in_type": "GetBaselineGeneratedPolicyForDeploymentRequest",
                "out_type": "GetBaselineGeneratedPolicyForDeploymentResponse"
              },
              {
                "name": "GetAllowedPeersFromCurrentPolicyForDeployment",
                "in_type": "ResourceByID",
                "out_type": "GetAllowedPeersFromCurrentPolicyForDeploymentResponse"
              },
              {
                "name": "ApplyNetworkPolicyYamlForDeployment",
                "in_type": "ApplyNetworkPolicyYamlForDeploymentRequest",
                "out_type": "Empty"
              },
              {
                "name": "GetUndoModificationForDeployment",
                "in_type": "ResourceByID",
                "out_type": "GetUndoModificationForDeploymentResponse"
              },
              {
                "name": "GetDiffFlowsBetweenPolicyAndBaselineForDeployment",
                "in_type": "ResourceByID",
                "out_type": "GetDiffFlowsResponse"
              },
              {
                "name": "GetDiffFlowsFromUndoModificationForDeployment",
                "in_type": "ResourceByID",
                "out_type": "GetDiffFlowsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/network_baseline_service.proto"
          },
          {
            "path": "api/v1/network_graph_service.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_baseline.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/network_policy.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:node_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListNodesRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListNodesResponse",
            "fields": [
              {
                "id": 1,
                "name": "nodes",
                "type": "storage.Node",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNodeRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "node_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExportNodeRequest",
            "fields": [
              {
                "id": 1,
                "name": "timeout",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExportNodeResponse",
            "fields": [
              {
                "id": 1,
                "name": "node",
                "type": "storage.Node"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NodeService",
            "rpcs": [
              {
                "name": "ListNodes",
                "in_type": "ListNodesRequest",
                "out_type": "ListNodesResponse"
              },
              {
                "name": "GetNode",
                "in_type": "GetNodeRequest",
                "out_type": "storage.Node"
              },
              {
                "name": "ExportNodes",
                "in_type": "ExportNodeRequest",
                "out_type": "ExportNodeResponse",
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/node.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:notifications.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkPolicyNotification",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "string"
              },
              {
                "id": 2,
                "name": "yaml",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:notifier_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetNotifiersRequest",
            "reserved_ids": [
              1,
              2
            ]
          },
          {
            "name": "GetNotifiersResponse",
            "fields": [
              {
                "id": 1,
                "name": "notifiers",
                "type": "storage.Notifier",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeleteNotifierRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool"
              }
            ]
          },
          {
            "name": "UpdateNotifierRequest",
            "fields": [
              {
                "id": 1,
                "name": "notifier",
                "type": "storage.Notifier"
              },
              {
                "id": 2,
                "name": "update_password",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NotifierService",
            "rpcs": [
              {
                "name": "GetNotifier",
                "in_type": "ResourceByID",
                "out_type": "storage.Notifier"
              },
              {
                "name": "GetNotifiers",
                "in_type": "GetNotifiersRequest",
                "out_type": "GetNotifiersResponse"
              },
              {
                "name": "PutNotifier",
                "in_type": "storage.Notifier",
                "out_type": "Empty"
              },
              {
                "name": "PostNotifier",
                "in_type": "storage.Notifier",
                "out_type": "storage.Notifier"
              },
              {
                "name": "TestNotifier",
                "in_type": "storage.Notifier",
                "out_type": "Empty"
              },
              {
                "name": "DeleteNotifier",
                "in_type": "DeleteNotifierRequest",
                "out_type": "Empty"
              },
              {
                "name": "UpdateNotifier",
                "in_type": "UpdateNotifierRequest",
                "out_type": "Empty"
              },
              {
                "name": "TestUpdatedNotifier",
                "in_type": "UpdateNotifierRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/notifier.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:pagination.proto",
      "def": {
        "enums": [
          {
            "name": "Aggregation",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "COUNT",
                "integer": 1
              },
              {
                "name": "MIN",
                "integer": 2
              },
              {
                "name": "MAX",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "AggregateBy",
            "fields": [
              {
                "id": 1,
                "name": "aggrFunc",
                "type": "Aggregation"
              },
              {
                "id": 2,
                "name": "distinct",
                "type": "bool"
              }
            ]
          },
          {
            "name": "SortOption",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "string"
              },
              {
                "id": 2,
                "name": "reversed",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "aggregate_by",
                "type": "AggregateBy"
              }
            ]
          },
          {
            "name": "Pagination",
            "fields": [
              {
                "id": 1,
                "name": "limit",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "offset",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "sort_option",
                "type": "SortOption"
              },
              {
                "id": 4,
                "name": "sort_options",
                "type": "SortOption",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:ping_service.proto",
      "def": {
        "messages": [
          {
            "name": "PongMessage",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PingService",
            "rpcs": [
              {
                "name": "Ping",
                "in_type": "Empty",
                "out_type": "PongMessage"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:pod_service.proto",
      "def": {
        "messages": [
          {
            "name": "PodsResponse",
            "fields": [
              {
                "id": 1,
                "name": "pods",
                "type": "storage.Pod",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ExportPodRequest",
            "fields": [
              {
                "id": 1,
                "name": "timeout",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExportPodResponse",
            "fields": [
              {
                "id": 1,
                "name": "pod",
                "type": "storage.Pod"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PodService",
            "rpcs": [
              {
                "name": "GetPods",
                "in_type": "RawQuery",
                "out_type": "PodsResponse"
              },
              {
                "name": "ExportPods",
                "in_type": "ExportPodRequest",
                "out_type": "ExportPodResponse",
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/deployment.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:policy_category_service.proto",
      "def": {
        "messages": [
          {
            "name": "PolicyCategory",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "isDefault",
                "type": "bool"
              }
            ]
          },
          {
            "name": "PostPolicyCategoryRequest",
            "fields": [
              {
                "id": 1,
                "name": "policyCategory",
                "type": "v1.PolicyCategory"
              }
            ]
          },
          {
            "name": "GetPolicyCategoriesResponse",
            "fields": [
              {
                "id": 1,
                "name": "categories",
                "type": "v1.PolicyCategory",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RenamePolicyCategoryRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "new_category_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeletePolicyCategoryRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PolicyCategoryService",
            "rpcs": [
              {
                "name": "GetPolicyCategory",
                "in_type": "ResourceByID",
                "out_type": "v1.PolicyCategory"
              },
              {
                "name": "GetPolicyCategories",
                "in_type": "RawQuery",
                "out_type": "GetPolicyCategoriesResponse"
              },
              {
                "name": "PostPolicyCategory",
                "in_type": "PostPolicyCategoryRequest",
                "out_type": "v1.PolicyCategory"
              },
              {
                "name": "RenamePolicyCategory",
                "in_type": "RenamePolicyCategoryRequest",
                "out_type": "v1.PolicyCategory"
              },
              {
                "name": "DeletePolicyCategory",
                "in_type": "DeletePolicyCategoryRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:policy_service.proto",
      "def": {
        "messages": [
          {
            "name": "DryRunResponse",
            "fields": [
              {
                "id": 1,
                "name": "alerts",
                "type": "Alert",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Alert",
                "fields": [
                  {
                    "id": 1,
                    "name": "deployment",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "violations",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "JobId",
            "fields": [
              {
                "id": 1,
                "name": "job_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "DryRunJobStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "pending",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "result",
                "type": "DryRunResponse"
              }
            ]
          },
          {
            "name": "PolicyCategoriesResponse",
            "fields": [
              {
                "id": 1,
                "name": "categories",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EnableDisablePolicyNotificationRequest",
            "fields": [
              {
                "id": 1,
                "name": "policy_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "notifier_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "disable",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ListPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "storage.ListPolicy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PostPolicyRequest",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "storage.Policy"
              },
              {
                "id": 2,
                "name": "enable_strict_validation",
                "type": "bool"
              }
            ]
          },
          {
            "name": "PatchPolicyRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "disabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ExportPoliciesRequest",
            "fields": [
              {
                "id": 1,
                "name": "policy_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyError",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExportPolicyError",
            "fields": [
              {
                "id": 1,
                "name": "policy_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "error",
                "type": "PolicyError"
              }
            ]
          },
          {
            "name": "ExportPoliciesErrorList",
            "fields": [
              {
                "id": 1,
                "name": "errors",
                "type": "ExportPolicyError",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyFromSearchRequest",
            "fields": [
              {
                "id": 1,
                "name": "search_params",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImportPoliciesMetadata",
            "fields": [
              {
                "id": 1,
                "name": "overwrite",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ImportPoliciesRequest",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "ImportPoliciesMetadata"
              },
              {
                "id": 2,
                "name": "policies",
                "type": "storage.Policy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ImportPolicyError",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "duplicate_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "validation_error",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImportPolicyResponse",
            "fields": [
              {
                "id": 1,
                "name": "succeeded",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "policy",
                "type": "storage.Policy"
              },
              {
                "id": 3,
                "name": "errors",
                "type": "ImportPolicyError",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ImportPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "responses",
                "type": "ImportPolicyResponse",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "all_succeeded",
                "type": "bool"
              }
            ]
          },
          {
            "name": "PolicyFromSearchResponse",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "storage.Policy"
              },
              {
                "id": 2,
                "name": "altered_search_terms",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "has_nested_fields",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetPolicyMitreVectorsRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "options",
                "type": "Options"
              }
            ],
            "messages": [
              {
                "name": "Options",
                "fields": [
                  {
                    "id": 1,
                    "name": "exclude_policy",
                    "type": "bool"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetPolicyMitreVectorsResponse",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "storage.Policy"
              },
              {
                "id": 2,
                "name": "vectors",
                "type": "storage.MitreAttackVector",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PolicyService",
            "rpcs": [
              {
                "name": "GetPolicy",
                "in_type": "ResourceByID",
                "out_type": "storage.Policy"
              },
              {
                "name": "GetPolicyMitreVectors",
                "in_type": "GetPolicyMitreVectorsRequest",
                "out_type": "GetPolicyMitreVectorsResponse"
              },
              {
                "name": "ListPolicies",
                "in_type": "RawQuery",
                "out_type": "ListPoliciesResponse"
              },
              {
                "name": "PostPolicy",
                "in_type": "PostPolicyRequest",
                "out_type": "storage.Policy"
              },
              {
                "name": "PutPolicy",
                "in_type": "storage.Policy",
                "out_type": "Empty"
              },
              {
                "name": "PatchPolicy",
                "in_type": "PatchPolicyRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeletePolicy",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "EnableDisablePolicyNotification",
                "in_type": "EnableDisablePolicyNotificationRequest",
                "out_type": "Empty"
              },
              {
                "name": "ReassessPolicies",
                "in_type": "Empty",
                "out_type": "Empty"
              },
              {
                "name": "DryRunPolicy",
                "in_type": "storage.Policy",
                "out_type": "DryRunResponse"
              },
              {
                "name": "SubmitDryRunPolicyJob",
                "in_type": "storage.Policy",
                "out_type": "JobId"
              },
              {
                "name": "QueryDryRunJobStatus",
                "in_type": "JobId",
                "out_type": "DryRunJobStatusResponse"
              },
              {
                "name": "CancelDryRunJob",
                "in_type": "JobId",
                "out_type": "Empty"
              },
              {
                "name": "GetPolicyCategories",
                "in_type": "Empty",
                "out_type": "PolicyCategoriesResponse"
              },
              {
                "name": "ExportPolicies",
                "in_type": "ExportPoliciesRequest",
                "out_type": "storage.ExportPoliciesResponse"
              },
              {
                "name": "PolicyFromSearch",
                "in_type": "PolicyFromSearchRequest",
                "out_type": "PolicyFromSearchResponse"
              },
              {
                "name": "ImportPolicies",
                "in_type": "ImportPoliciesRequest",
                "out_type": "ImportPoliciesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/mitre.proto"
          },
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:probe_upload_service.proto",
      "def": {
        "messages": [
          {
            "name": "ProbeUploadManifest",
            "fields": [
              {
                "id": 1,
                "name": "files",
                "type": "File",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "File",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "size",
                    "type": "int64"
                  },
                  {
                    "id": 3,
                    "name": "crc32",
                    "type": "uint32"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetExistingProbesRequest",
            "fields": [
              {
                "id": 1,
                "name": "files_to_check",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetExistingProbesResponse",
            "fields": [
              {
                "id": 1,
                "name": "existing_files",
                "type": "ProbeUploadManifest.File",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ProbeUploadService",
            "rpcs": [
              {
                "name": "GetExistingProbes",
                "in_type": "GetExistingProbesRequest",
                "out_type": "GetExistingProbesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:process_baseline_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetProcessBaselineRequest",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "storage.ProcessBaselineKey"
              }
            ]
          },
          {
            "name": "UpdateProcessBaselinesRequest",
            "fields": [
              {
                "id": 1,
                "name": "keys",
                "type": "storage.ProcessBaselineKey",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "add_elements",
                "type": "storage.BaselineItem",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "remove_elements",
                "type": "storage.BaselineItem",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessBaselinesResponse",
            "fields": [
              {
                "id": 1,
                "name": "baselines",
                "type": "storage.ProcessBaseline",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessBaselineUpdateError",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "storage.ProcessBaselineKey"
              }
            ]
          },
          {
            "name": "UpdateProcessBaselinesResponse",
            "fields": [
              {
                "id": 1,
                "name": "baselines",
                "type": "storage.ProcessBaseline",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "errors",
                "type": "ProcessBaselineUpdateError",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LockProcessBaselinesRequest",
            "fields": [
              {
                "id": 1,
                "name": "keys",
                "type": "storage.ProcessBaselineKey",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "locked",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteProcessBaselinesRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              },
              {
                "id": 2,
                "name": "confirm",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteProcessBaselinesResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_deleted",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "dry_run",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ProcessBaselineService",
            "rpcs": [
              {
                "name": "GetProcessBaseline",
                "in_type": "GetProcessBaselineRequest",
                "out_type": "storage.ProcessBaseline"
              },
              {
                "name": "UpdateProcessBaselines",
                "in_type": "UpdateProcessBaselinesRequest",
                "out_type": "UpdateProcessBaselinesResponse"
              },
              {
                "name": "LockProcessBaselines",
                "in_type": "LockProcessBaselinesRequest",
                "out_type": "UpdateProcessBaselinesResponse"
              },
              {
                "name": "DeleteProcessBaselines",
                "in_type": "DeleteProcessBaselinesRequest",
                "out_type": "DeleteProcessBaselinesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/process_baseline.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:process_listening_on_port_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetProcessesListeningOnPortsRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetProcessesListeningOnPortsResponse",
            "fields": [
              {
                "id": 1,
                "name": "listening_endpoints",
                "type": "storage.ProcessListeningOnPort",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ListeningEndpointsService",
            "rpcs": [
              {
                "name": "GetListeningEndpoints",
                "in_type": "GetProcessesListeningOnPortsRequest",
                "out_type": "GetProcessesListeningOnPortsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/process_listening_on_port.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:process_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetProcessesByDeploymentRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetProcessesResponse",
            "fields": [
              {
                "id": 1,
                "name": "processes",
                "type": "storage.ProcessIndicator",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessGroup",
            "fields": [
              {
                "id": 1,
                "name": "args",
                "type": "string"
              },
              {
                "id": 2,
                "name": "signals",
                "type": "storage.ProcessIndicator",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessNameGroup",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "times_executed",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "groups",
                "type": "ProcessGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetGroupedProcessesResponse",
            "fields": [
              {
                "id": 3,
                "name": "groups",
                "type": "ProcessNameGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessNameAndContainerNameGroup",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "times_executed",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "groups",
                "type": "ProcessGroup",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "suspicious",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetGroupedProcessesWithContainerResponse",
            "fields": [
              {
                "id": 3,
                "name": "groups",
                "type": "ProcessNameAndContainerNameGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountProcessesResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ProcessService",
            "rpcs": [
              {
                "name": "CountProcesses",
                "in_type": "RawQuery",
                "out_type": "CountProcessesResponse"
              },
              {
                "name": "GetProcessesByDeployment",
                "in_type": "GetProcessesByDeploymentRequest",
                "out_type": "GetProcessesResponse"
              },
              {
                "name": "GetGroupedProcessByDeployment",
                "in_type": "GetProcessesByDeploymentRequest",
                "out_type": "GetGroupedProcessesResponse"
              },
              {
                "name": "GetGroupedProcessByDeploymentAndContainer",
                "in_type": "GetProcessesByDeploymentRequest",
                "out_type": "GetGroupedProcessesWithContainerResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:rbac_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListRolesResponse",
            "fields": [
              {
                "id": 1,
                "name": "roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetRoleResponse",
            "fields": [
              {
                "id": 1,
                "name": "role",
                "type": "storage.K8sRole"
              }
            ]
          },
          {
            "name": "ListRoleBindingsResponse",
            "fields": [
              {
                "id": 1,
                "name": "bindings",
                "type": "storage.K8sRoleBinding",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetRoleBindingResponse",
            "fields": [
              {
                "id": 1,
                "name": "binding",
                "type": "storage.K8sRoleBinding"
              }
            ]
          },
          {
            "name": "ListSubjectsResponse",
            "fields": [
              {
                "id": 1,
                "name": "subject_and_roles",
                "type": "SubjectAndRoles",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SubjectAndRoles",
            "fields": [
              {
                "id": 1,
                "name": "subject",
                "type": "storage.Subject"
              },
              {
                "id": 2,
                "name": "roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetSubjectResponse",
            "fields": [
              {
                "id": 1,
                "name": "subject",
                "type": "storage.Subject"
              },
              {
                "id": 2,
                "name": "cluster_roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "scoped_roles",
                "type": "ScopedRoles",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScopedRoles",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 2,
                "name": "roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "RbacService",
            "rpcs": [
              {
                "name": "GetRole",
                "in_type": "ResourceByID",
                "out_type": "GetRoleResponse"
              },
              {
                "name": "ListRoles",
                "in_type": "RawQuery",
                "out_type": "ListRolesResponse"
              },
              {
                "name": "GetRoleBinding",
                "in_type": "ResourceByID",
                "out_type": "GetRoleBindingResponse"
              },
              {
                "name": "ListRoleBindings",
                "in_type": "RawQuery",
                "out_type": "ListRoleBindingsResponse"
              },
              {
                "name": "GetSubject",
                "in_type": "ResourceByID",
                "out_type": "GetSubjectResponse"
              },
              {
                "name": "ListSubjects",
                "in_type": "RawQuery",
                "out_type": "ListSubjectsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/rbac.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:report_configuration_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetReportConfigurationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "report_configs",
                "type": "storage.ReportConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetReportConfigurationResponse",
            "fields": [
              {
                "id": 1,
                "name": "report_config",
                "type": "storage.ReportConfiguration"
              }
            ]
          },
          {
            "name": "PostReportConfigurationResponse",
            "fields": [
              {
                "id": 1,
                "name": "report_config",
                "type": "storage.ReportConfiguration"
              }
            ]
          },
          {
            "name": "PostReportConfigurationRequest",
            "fields": [
              {
                "id": 1,
                "name": "report_config",
                "type": "storage.ReportConfiguration"
              }
            ]
          },
          {
            "name": "UpdateReportConfigurationRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "report_config",
                "type": "storage.ReportConfiguration"
              }
            ]
          },
          {
            "name": "CountReportConfigurationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ReportConfigurationService",
            "rpcs": [
              {
                "name": "GetReportConfigurations",
                "in_type": "RawQuery",
                "out_type": "GetReportConfigurationsResponse"
              },
              {
                "name": "GetReportConfiguration",
                "in_type": "ResourceByID",
                "out_type": "GetReportConfigurationResponse"
              },
              {
                "name": "PostReportConfiguration",
                "in_type": "PostReportConfigurationRequest",
                "out_type": "PostReportConfigurationResponse"
              },
              {
                "name": "UpdateReportConfiguration",
                "in_type": "UpdateReportConfigurationRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeleteReportConfiguration",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "CountReportConfigurations",
                "in_type": "RawQuery",
                "out_type": "CountReportConfigurationsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/report_configuration.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:report_service.proto",
      "def": {
        "services": [
          {
            "name": "ReportService",
            "rpcs": [
              {
                "name": "RunReport",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:resource_collection_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListCollectionSelectorsResponse",
            "fields": [
              {
                "id": 1,
                "name": "selectors",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetCollectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "options",
                "type": "CollectionDeploymentMatchOptions"
              }
            ]
          },
          {
            "name": "CollectionDeploymentMatchOptions",
            "fields": [
              {
                "id": 1,
                "name": "with_matches",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "filter_query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "GetCollectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "collection",
                "type": "storage.ResourceCollection"
              },
              {
                "id": 2,
                "name": "deployments",
                "type": "storage.ListDeployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetCollectionCountRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "GetCollectionCountResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "CreateCollectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "description",
                "type": "string"
              },
              {
                "id": 3,
                "name": "resource_selectors",
                "type": "storage.ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "embedded_collection_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CreateCollectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "collection",
                "type": "storage.ResourceCollection"
              }
            ]
          },
          {
            "name": "UpdateCollectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "resource_selectors",
                "type": "storage.ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "embedded_collection_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateCollectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "collection",
                "type": "storage.ResourceCollection"
              }
            ]
          },
          {
            "name": "DryRunCollectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "resource_selectors",
                "type": "storage.ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "embedded_collection_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "options",
                "type": "CollectionDeploymentMatchOptions"
              }
            ]
          },
          {
            "name": "DryRunCollectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployments",
                "type": "storage.ListDeployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListCollectionsRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "ListCollectionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "collections",
                "type": "storage.ResourceCollection",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CollectionService",
            "rpcs": [
              {
                "name": "ListCollectionSelectors",
                "in_type": "Empty",
                "out_type": "ListCollectionSelectorsResponse"
              },
              {
                "name": "GetCollection",
                "in_type": "GetCollectionRequest",
                "out_type": "GetCollectionResponse"
              },
              {
                "name": "GetCollectionCount",
                "in_type": "GetCollectionCountRequest",
                "out_type": "GetCollectionCountResponse"
              },
              {
                "name": "CreateCollection",
                "in_type": "CreateCollectionRequest",
                "out_type": "CreateCollectionResponse"
              },
              {
                "name": "UpdateCollection",
                "in_type": "UpdateCollectionRequest",
                "out_type": "UpdateCollectionResponse"
              },
              {
                "name": "ListCollections",
                "in_type": "ListCollectionsRequest",
                "out_type": "ListCollectionsResponse"
              },
              {
                "name": "DeleteCollection",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "DryRunCollection",
                "in_type": "DryRunCollectionRequest",
                "out_type": "DryRunCollectionResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/resource_collection.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:role_service.proto",
      "def": {
        "enums": [
          {
            "name": "ComputeEffectiveAccessScopeRequest.Detail",
            "enum_fields": [
              {
                "name": "STANDARD"
              },
              {
                "name": "MINIMAL",
                "integer": 1
              },
              {
                "name": "HIGH",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Permission",
            "fields": [
              {
                "id": 1,
                "name": "resource",
                "type": "string"
              },
              {
                "id": 2,
                "name": "access",
                "type": "storage.Access"
              }
            ]
          },
          {
            "name": "GetRolesResponse",
            "fields": [
              {
                "id": 1,
                "name": "roles",
                "type": "storage.Role",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetPermissionsResponse",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "resource_to_access",
                  "type": "storage.Access"
                }
              }
            ],
            "reserved_ids": [
              1,
              2
            ]
          },
          {
            "name": "GetResourcesResponse",
            "fields": [
              {
                "id": 1,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListPermissionSetsResponse",
            "fields": [
              {
                "id": 1,
                "name": "permission_sets",
                "type": "storage.PermissionSet",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListSimpleAccessScopesResponse",
            "fields": [
              {
                "id": 1,
                "name": "access_scopes",
                "type": "storage.SimpleAccessScope",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScopeObject",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetClustersForPermissionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "ScopeObject",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNamespacesForClusterAndPermissionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "namespaces",
                "type": "ScopeObject",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComputeEffectiveAccessScopeRequest",
            "fields": [
              {
                "id": 1,
                "name": "detail",
                "type": "Detail"
              },
              {
                "id": 2,
                "name": "access_scope",
                "type": "Payload"
              }
            ],
            "messages": [
              {
                "name": "Payload",
                "fields": [
                  {
                    "id": 1,
                    "name": "simple_rules",
                    "type": "storage.SimpleAccessScope.Rules"
                  }
                ]
              }
            ]
          },
          {
            "name": "CreateRoleRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "role",
                "type": "storage.Role"
              }
            ]
          },
          {
            "name": "GetClustersForPermissionsRequest",
            "fields": [
              {
                "id": 1,
                "name": "pagination",
                "type": "Pagination"
              },
              {
                "id": 2,
                "name": "permissions",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNamespaceForClusterAndPermissionsRequest",
            "fields": [
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "permissions",
                "type": "string",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              1
            ]
          }
        ],
        "services": [
          {
            "name": "RoleService",
            "rpcs": [
              {
                "name": "GetRoles",
                "in_type": "Empty",
                "out_type": "GetRolesResponse"
              },
              {
                "name": "GetRole",
                "in_type": "ResourceByID",
                "out_type": "storage.Role"
              },
              {
                "name": "GetMyPermissions",
                "in_type": "Empty",
                "out_type": "GetPermissionsResponse"
              },
              {
                "name": "CreateRole",
                "in_type": "CreateRoleRequest",
                "out_type": "Empty"
              },
              {
                "name": "UpdateRole",
                "in_type": "storage.Role",
                "out_type": "Empty"
              },
              {
                "name": "DeleteRole",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetResources",
                "in_type": "Empty",
                "out_type": "GetResourcesResponse"
              },
              {
                "name": "GetPermissionSet",
                "in_type": "ResourceByID",
                "out_type": "storage.PermissionSet"
              },
              {
                "name": "ListPermissionSets",
                "in_type": "Empty",
                "out_type": "ListPermissionSetsResponse"
              },
              {
                "name": "PostPermissionSet",
                "in_type": "storage.PermissionSet",
                "out_type": "storage.PermissionSet"
              },
              {
                "name": "PutPermissionSet",
                "in_type": "storage.PermissionSet",
                "out_type": "Empty"
              },
              {
                "name": "DeletePermissionSet",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetSimpleAccessScope",
                "in_type": "ResourceByID",
                "out_type": "storage.SimpleAccessScope"
              },
              {
                "name": "ListSimpleAccessScopes",
                "in_type": "Empty",
                "out_type": "ListSimpleAccessScopesResponse"
              },
              {
                "name": "PostSimpleAccessScope",
                "in_type": "storage.SimpleAccessScope",
                "out_type": "storage.SimpleAccessScope"
              },
              {
                "name": "PutSimpleAccessScope",
                "in_type": "storage.SimpleAccessScope",
                "out_type": "Empty"
              },
              {
                "name": "DeleteSimpleAccessScope",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "ComputeEffectiveAccessScope",
                "in_type": "ComputeEffectiveAccessScopeRequest",
                "out_type": "storage.EffectiveAccessScope"
              },
              {
                "name": "GetClustersForPermissions",
                "in_type": "GetClustersForPermissionsRequest",
                "out_type": "GetClustersForPermissionsResponse"
              },
              {
                "name": "GetNamespacesForClusterAndPermissions",
                "in_type": "GetNamespaceForClusterAndPermissionsRequest",
                "out_type": "GetNamespacesForClusterAndPermissionsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/pagination.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/role.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:search_service.proto",
      "def": {
        "enums": [
          {
            "name": "SearchCategory",
            "enum_fields": [
              {
                "name": "SEARCH_UNSET"
              },
              {
                "name": "ALERTS",
                "integer": 1
              },
              {
                "name": "IMAGES",
                "integer": 2
              },
              {
                "name": "IMAGE_COMPONENTS",
                "integer": 20
              },
              {
                "name": "IMAGE_VULN_EDGE",
                "integer": 27
              },
              {
                "name": "IMAGE_COMPONENT_EDGE",
                "integer": 23
              },
              {
                "name": "POLICIES",
                "integer": 3
              },
              {
                "name": "DEPLOYMENTS",
                "integer": 4
              },
              {
                "name": "ACTIVE_COMPONENT",
                "integer": 30
              },
              {
                "name": "PODS",
                "integer": 25
              },
              {
                "name": "SECRETS",
                "integer": 5
              },
              {
                "name": "PROCESS_INDICATORS",
                "integer": 6
              },
              {
                "name": "COMPLIANCE",
                "integer": 7
              },
              {
                "name": "CLUSTERS",
                "integer": 8
              },
              {
                "name": "NAMESPACES",
                "integer": 9
              },
              {
                "name": "NODES",
                "integer": 10
              },
              {
                "name": "NODE_COMPONENTS",
                "integer": 38
              },
              {
                "name": "NODE_VULN_EDGE",
                "integer": 28
              },
              {
                "name": "NODE_COMPONENT_EDGE",
                "integer": 29
              },
              {
                "name": "NODE_COMPONENT_CVE_EDGE",
                "integer": 33
              },
              {
                "name": "COMPLIANCE_STANDARD",
                "integer": 11
              },
              {
                "name": "COMPLIANCE_CONTROL_GROUP",
                "integer": 12
              },
              {
                "name": "COMPLIANCE_CONTROL",
                "integer": 13
              },
              {
                "name": "SERVICE_ACCOUNTS",
                "integer": 14
              },
              {
                "name": "ROLES",
                "integer": 15
              },
              {
                "name": "ROLEBINDINGS",
                "integer": 16
              },
              {
                "name": "REPORT_CONFIGURATIONS",
                "integer": 37
              },
              {
                "name": "PROCESS_BASELINES",
                "integer": 17
              },
              {
                "name": "SUBJECTS",
                "integer": 18
              },
              {
                "name": "RISKS",
                "integer": 19
              },
              {
                "name": "VULNERABILITIES",
                "integer": 21
              },
              {
                "name": "CLUSTER_VULNERABILITIES",
                "integer": 34
              },
              {
                "name": "IMAGE_VULNERABILITIES",
                "integer": 35
              },
              {
                "name": "NODE_VULNERABILITIES",
                "integer": 36
              },
              {
                "name": "COMPONENT_VULN_EDGE",
                "integer": 22
              },
              {
                "name": "CLUSTER_VULN_EDGE",
                "integer": 24
              },
              {
                "name": "NETWORK_ENTITY",
                "integer": 26
              },
              {
                "name": "VULN_REQUEST",
                "integer": 32
              },
              {
                "name": "NETWORK_BASELINE",
                "integer": 39
              },
              {
                "name": "NETWORK_POLICIES",
                "integer": 40
              },
              {
                "name": "PROCESS_BASELINE_RESULTS",
                "integer": 41
              },
              {
                "name": "COMPLIANCE_METADATA",
                "integer": 42
              },
              {
                "name": "COMPLIANCE_RESULTS",
                "integer": 43
              },
              {
                "name": "COMPLIANCE_DOMAIN",
                "integer": 44
              },
              {
                "name": "CLUSTER_HEALTH",
                "integer": 45
              },
              {
                "name": "POLICY_CATEGORIES",
                "integer": 46
              },
              {
                "name": "IMAGE_INTEGRATIONS",
                "integer": 47
              },
              {
                "name": "COLLECTIONS",
                "integer": 48
              },
              {
                "name": "POLICY_CATEGORY_EDGE",
                "integer": 49
              },
              {
                "name": "PROCESS_LISTENING_ON_PORT",
                "integer": 50
              },
              {
                "name": "API_TOKEN",
                "integer": 51
              },
              {
                "name": "REPORT_METADATA",
                "integer": 52
              },
              {
                "name": "REPORT_SNAPSHOT",
                "integer": 53
              },
              {
                "name": "COMPLIANCE_INTEGRATIONS",
                "integer": 54
              },
              {
                "name": "COMPLIANCE_SCAN_CONFIG",
                "integer": 55
              },
              {
                "name": "COMPLIANCE_SCAN",
                "integer": 56
              },
              {
                "name": "COMPLIANCE_CHECK_RESULTS",
                "integer": 57
              },
              {
                "name": "BLOB",
                "integer": 58
              },
              {
                "name": "ADMINISTRATION_EVENTS",
                "integer": 60
              },
              {
                "name": "COMPLIANCE_SCAN_CONFIG_STATUS",
                "integer": 61
              },
              {
                "name": "ADMINISTRATION_USAGE",
                "integer": 62
              },
              {
                "name": "COMPLIANCE_PROFILES",
                "integer": 63
              },
              {
                "name": "COMPLIANCE_RULES",
                "integer": 65
              },
              {
                "name": "COMPLIANCE_SCAN_SETTING_BINDINGS",
                "integer": 66
              },
              {
                "name": "COMPLIANCE_SUITES",
                "integer": 67
              },
              {
                "name": "CLOUD_SOURCES",
                "integer": 68
              },
              {
                "name": "DISCOVERED_CLUSTERS",
                "integer": 69
              },
              {
                "name": "COMPLIANCE_REMEDIATIONS",
                "integer": 70
              },
              {
                "name": "COMPLIANCE_BENCHMARKS",
                "integer": 71
              }
            ],
            "reserved_ids": [
              59,
              64
            ]
          },
          {
            "name": "SearchDataType",
            "enum_fields": [
              {
                "name": "SEARCH_BOOL"
              },
              {
                "name": "SEARCH_NUMERIC",
                "integer": 1
              },
              {
                "name": "SEARCH_STRING",
                "integer": 2
              },
              {
                "name": "SEARCH_DATETIME",
                "integer": 3
              },
              {
                "name": "SEARCH_MAP",
                "integer": 4
              },
              {
                "name": "SEARCH_ENUM",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "RawQuery",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              },
              {
                "id": 2,
                "name": "pagination",
                "type": "Pagination"
              }
            ]
          },
          {
            "name": "RawSearchRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              },
              {
                "id": 2,
                "name": "categories",
                "type": "SearchCategory",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "QuerySortOption",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "string"
              },
              {
                "id": 2,
                "name": "reversed",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "search_after",
                "type": "string"
              },
              {
                "id": 4,
                "name": "aggregate_by",
                "type": "AggregateBy"
              }
            ]
          },
          {
            "name": "QueryField",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "aggregate_func",
                "type": "string"
              },
              {
                "id": 3,
                "name": "distinct",
                "type": "bool"
              }
            ]
          },
          {
            "name": "QuerySelectFilter",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "Query"
              }
            ]
          },
          {
            "name": "QuerySelect",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "QueryField"
              },
              {
                "id": 2,
                "name": "filter",
                "type": "QuerySelectFilter"
              }
            ]
          },
          {
            "name": "QueryGroupBy",
            "fields": [
              {
                "id": 1,
                "name": "fields",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "QueryPagination",
            "fields": [
              {
                "id": 1,
                "name": "limit",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "offset",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "sort_options",
                "type": "QuerySortOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BooleanQuery",
            "fields": [
              {
                "id": 1,
                "name": "must",
                "type": "ConjunctionQuery"
              },
              {
                "id": 2,
                "name": "must_not",
                "type": "DisjunctionQuery"
              }
            ]
          },
          {
            "name": "Query",
            "fields": [
              {
                "id": 1,
                "name": "conjunction",
                "type": "ConjunctionQuery"
              },
              {
                "id": 2,
                "name": "disjunction",
                "type": "DisjunctionQuery"
              },
              {
                "id": 3,
                "name": "base_query",
                "type": "BaseQuery"
              },
              {
                "id": 6,
                "name": "boolean_query",
                "type": "BooleanQuery"
              },
              {
                "id": 8,
                "name": "selects",
                "type": "QuerySelect",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "group_by",
                "type": "QueryGroupBy"
              },
              {
                "id": 4,
                "name": "pagination",
                "type": "QueryPagination"
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "StringQuery",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "MatchFieldQuery",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "highlight",
                "type": "bool"
              }
            ]
          },
          {
            "name": "MatchLinkedFieldsQuery",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "MatchFieldQuery",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DocIDQuery",
            "fields": [
              {
                "id": 1,
                "name": "ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BaseQuery",
            "fields": [
              {
                "id": 2,
                "name": "match_field_query",
                "type": "MatchFieldQuery"
              },
              {
                "id": 3,
                "name": "match_linked_fields_query",
                "type": "MatchLinkedFieldsQuery"
              },
              {
                "id": 4,
                "name": "doc_id_query",
                "type": "DocIDQuery"
              },
              {
                "id": 5,
                "name": "match_none_query",
                "type": "MatchNoneQuery"
              }
            ]
          },
          {
            "name": "ConjunctionQuery",
            "fields": [
              {
                "id": 1,
                "name": "queries",
                "type": "Query",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DisjunctionQuery",
            "fields": [
              {
                "id": 1,
                "name": "queries",
                "type": "Query",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MatchNoneQuery"
          },
          {
            "name": "SearchResult",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "category",
                "type": "SearchCategory"
              },
              {
                "id": 5,
                "name": "score",
                "type": "double"
              },
              {
                "id": 6,
                "name": "location",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "field_to_matches",
                  "type": "Matches"
                }
              }
            ],
            "messages": [
              {
                "name": "Matches",
                "fields": [
                  {
                    "id": 1,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "SearchResponse",
            "fields": [
              {
                "id": 1,
                "name": "results",
                "type": "SearchResult",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "counts",
                "type": "Count",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Count",
                "fields": [
                  {
                    "id": 1,
                    "name": "category",
                    "type": "SearchCategory"
                  },
                  {
                    "id": 2,
                    "name": "count",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "SearchOptionsRequest",
            "fields": [
              {
                "id": 1,
                "name": "categories",
                "type": "SearchCategory",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SearchOptionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "options",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AutocompleteResponse",
            "fields": [
              {
                "id": 1,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SearchService",
            "rpcs": [
              {
                "name": "Search",
                "in_type": "RawSearchRequest",
                "out_type": "SearchResponse"
              },
              {
                "name": "Options",
                "in_type": "SearchOptionsRequest",
                "out_type": "SearchOptionsResponse"
              },
              {
                "name": "Autocomplete",
                "in_type": "RawSearchRequest",
                "out_type": "AutocompleteResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/pagination.proto"
          },
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:secret_service.proto",
      "def": {
        "messages": [
          {
            "name": "SecretList",
            "fields": [
              {
                "id": 1,
                "name": "secrets",
                "type": "storage.Secret",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListSecretsResponse",
            "fields": [
              {
                "id": 1,
                "name": "secrets",
                "type": "storage.ListSecret",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountSecretsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SecretService",
            "rpcs": [
              {
                "name": "GetSecret",
                "in_type": "ResourceByID",
                "out_type": "storage.Secret"
              },
              {
                "name": "CountSecrets",
                "in_type": "RawQuery",
                "out_type": "CountSecretsResponse"
              },
              {
                "name": "ListSecrets",
                "in_type": "RawQuery",
                "out_type": "ListSecretsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/secret.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:sensor_upgrade_service.proto",
      "def": {
        "enums": [
          {
            "name": "GetSensorUpgradeConfigResponse.SensorAutoUpgradeFeatureStatus",
            "enum_fields": [
              {
                "name": "NOT_SUPPORTED"
              },
              {
                "name": "SUPPORTED",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "UpdateSensorUpgradeConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.SensorUpgradeConfig"
              }
            ]
          },
          {
            "name": "GetSensorUpgradeConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "UpgradeConfig"
              }
            ],
            "messages": [
              {
                "name": "UpgradeConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "enable_auto_upgrade",
                    "type": "bool"
                  },
                  {
                    "id": 2,
                    "name": "auto_upgrade_feature",
                    "type": "SensorAutoUpgradeFeatureStatus"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SensorUpgradeService",
            "rpcs": [
              {
                "name": "GetSensorUpgradeConfig",
                "in_type": "Empty",
                "out_type": "GetSensorUpgradeConfigResponse"
              },
              {
                "name": "UpdateSensorUpgradeConfig",
                "in_type": "UpdateSensorUpgradeConfigRequest",
                "out_type": "Empty"
              },
              {
                "name": "TriggerSensorUpgrade",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "TriggerSensorCertRotation",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/sensor_upgrade.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:service_account_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListServiceAccountResponse",
            "fields": [
              {
                "id": 1,
                "name": "sa_and_roles",
                "type": "ServiceAccountAndRoles",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServiceAccountAndRoles",
            "fields": [
              {
                "id": 1,
                "name": "service_account",
                "type": "storage.ServiceAccount"
              },
              {
                "id": 2,
                "name": "cluster_roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "scoped_roles",
                "type": "ScopedRoles",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "deployment_relationships",
                "type": "SADeploymentRelationship",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetServiceAccountResponse",
            "fields": [
              {
                "id": 1,
                "name": "sa_and_role",
                "type": "ServiceAccountAndRoles"
              }
            ]
          },
          {
            "name": "SADeploymentRelationship",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ServiceAccountService",
            "rpcs": [
              {
                "name": "GetServiceAccount",
                "in_type": "ResourceByID",
                "out_type": "GetServiceAccountResponse"
              },
              {
                "name": "ListServiceAccounts",
                "in_type": "RawQuery",
                "out_type": "ListServiceAccountResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/rbac_service.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/rbac.proto"
          },
          {
            "path": "storage/service_account.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:service_identity_service.proto",
      "def": {
        "messages": [
          {
            "name": "ServiceIdentityResponse",
            "fields": [
              {
                "id": 1,
                "name": "identities",
                "type": "storage.ServiceIdentity",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CreateServiceIdentityRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "storage.ServiceType"
              }
            ]
          },
          {
            "name": "CreateServiceIdentityResponse",
            "fields": [
              {
                "id": 1,
                "name": "identity",
                "type": "storage.ServiceIdentity"
              },
              {
                "id": 2,
                "name": "certificate_pem",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "private_key_pem",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Authority",
            "fields": [
              {
                "id": 1,
                "name": "certificate_pem",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Authorities",
            "fields": [
              {
                "id": 1,
                "name": "authorities",
                "type": "Authority",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ServiceIdentityService",
            "rpcs": [
              {
                "name": "GetServiceIdentities",
                "in_type": "Empty",
                "out_type": "ServiceIdentityResponse"
              },
              {
                "name": "CreateServiceIdentity",
                "in_type": "CreateServiceIdentityRequest",
                "out_type": "CreateServiceIdentityResponse"
              },
              {
                "name": "GetAuthorities",
                "in_type": "Empty",
                "out_type": "Authorities"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/service_identity.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:signal.proto",
      "def": {
        "messages": [
          {
            "name": "Signal",
            "fields": [
              {
                "id": 1,
                "name": "process_signal",
                "type": "storage.ProcessSignal"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:signature_integration_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListSignatureIntegrationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "integrations",
                "type": "storage.SignatureIntegration",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SignatureIntegrationService",
            "rpcs": [
              {
                "name": "ListSignatureIntegrations",
                "in_type": "Empty",
                "out_type": "ListSignatureIntegrationsResponse"
              },
              {
                "name": "GetSignatureIntegration",
                "in_type": "ResourceByID",
                "out_type": "storage.SignatureIntegration"
              },
              {
                "name": "PostSignatureIntegration",
                "in_type": "storage.SignatureIntegration",
                "out_type": "storage.SignatureIntegration"
              },
              {
                "name": "PutSignatureIntegration",
                "in_type": "storage.SignatureIntegration",
                "out_type": "Empty"
              },
              {
                "name": "DeleteSignatureIntegration",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/signature_integration.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:summary_service.proto",
      "def": {
        "messages": [
          {
            "name": "SummaryCountsResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_alerts",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "num_clusters",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "num_deployments",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "num_images",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "num_secrets",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "num_nodes",
                "type": "int64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SummaryService",
            "rpcs": [
              {
                "name": "GetSummaryCounts",
                "in_type": "Empty",
                "out_type": "SummaryCountsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:telemetry_service.proto",
      "def": {
        "messages": [
          {
            "name": "ConfigureTelemetryRequest",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "TelemetryService",
            "rpcs": [
              {
                "name": "GetTelemetryConfiguration",
                "in_type": "Empty",
                "out_type": "storage.TelemetryConfiguration"
              },
              {
                "name": "ConfigureTelemetry",
                "in_type": "ConfigureTelemetryRequest",
                "out_type": "storage.TelemetryConfiguration"
              },
              {
                "name": "GetConfig",
                "in_type": "Empty",
                "out_type": "central.TelemetryConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "internalapi/central/telemetry.proto"
          },
          {
            "path": "storage/telemetry.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:user_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetUsersResponse",
            "fields": [
              {
                "id": 1,
                "name": "users",
                "type": "storage.User",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UserAttributeTuple",
            "fields": [
              {
                "id": 1,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetUsersAttributesResponse",
            "fields": [
              {
                "id": 1,
                "name": "users_attributes",
                "type": "UserAttributeTuple",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "UserService",
            "rpcs": [
              {
                "name": "GetUsers",
                "in_type": "Empty",
                "out_type": "GetUsersResponse"
              },
              {
                "name": "GetUser",
                "in_type": "ResourceByID",
                "out_type": "storage.User"
              },
              {
                "name": "GetUsersAttributes",
                "in_type": "Empty",
                "out_type": "GetUsersAttributesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:vuln_mgmt_req_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetVulnerabilityRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "ListVulnerabilityRequestsResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_infos",
                "type": "storage.VulnerabilityRequest",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeferVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "cve",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              },
              {
                "id": 3,
                "name": "scope",
                "type": "storage.VulnerabilityRequest.Scope"
              },
              {
                "id": 4,
                "name": "expires_when_fixed",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "expires_on",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "DeferVulnResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "FalsePositiveVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "cve",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scope",
                "type": "storage.VulnerabilityRequest.Scope"
              },
              {
                "id": 3,
                "name": "comment",
                "type": "string"
              }
            ]
          },
          {
            "name": "FalsePositiveVulnResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "ApproveVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              }
            ]
          },
          {
            "name": "ApproveVulnRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "DenyVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              }
            ]
          },
          {
            "name": "DenyVulnRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "UpdateVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              },
              {
                "id": 3,
                "name": "expiry",
                "type": "storage.RequestExpiry"
              }
            ]
          },
          {
            "name": "UpdateVulnRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "UndoVulnRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "VulnerabilityRequestService",
            "rpcs": [
              {
                "name": "GetVulnerabilityRequest",
                "in_type": "ResourceByID",
                "out_type": "GetVulnerabilityRequestResponse"
              },
              {
                "name": "ListVulnerabilityRequests",
                "in_type": "RawQuery",
                "out_type": "ListVulnerabilityRequestsResponse"
              },
              {
                "name": "DeferVulnerability",
                "in_type": "DeferVulnRequest",
                "out_type": "DeferVulnResponse"
              },
              {
                "name": "FalsePositiveVulnerability",
                "in_type": "FalsePositiveVulnRequest",
                "out_type": "FalsePositiveVulnResponse"
              },
              {
                "name": "ApproveVulnerabilityRequest",
                "in_type": "ApproveVulnRequest",
                "out_type": "ApproveVulnRequestResponse"
              },
              {
                "name": "DenyVulnerabilityRequest",
                "in_type": "DenyVulnRequest",
                "out_type": "DenyVulnRequestResponse"
              },
              {
                "name": "UpdateVulnerabilityRequest",
                "in_type": "UpdateVulnRequest",
                "out_type": "UpdateVulnRequestResponse"
              },
              {
                "name": "UndoVulnerabilityRequest",
                "in_type": "ResourceByID",
                "out_type": "UndoVulnRequestResponse"
              },
              {
                "name": "DeleteVulnerabilityRequest",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/vuln_requests.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v1:/:vuln_mgmt_service.proto",
      "def": {
        "messages": [
          {
            "name": "VulnMgmtExportWorkloadsRequest",
            "fields": [
              {
                "id": 1,
                "name": "timeout",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "VulnMgmtExportWorkloadsResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 2,
                "name": "images",
                "type": "storage.Image",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "VulnMgmtService",
            "rpcs": [
              {
                "name": "VulnMgmtExportWorkloads",
                "in_type": "VulnMgmtExportWorkloadsRequest",
                "out_type": "VulnMgmtExportWorkloadsResponse",
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v2:/:common.proto",
      "def": {
        "enums": [
          {
            "name": "Schedule.IntervalType",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "WEEKLY",
                "integer": 1
              },
              {
                "name": "MONTHLY",
                "integer": 2
              },
              {
                "name": "DAILY",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ResourceByID",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "Empty"
          },
          {
            "name": "Schedule",
            "fields": [
              {
                "id": 1,
                "name": "interval_type",
                "type": "IntervalType"
              },
              {
                "id": 2,
                "name": "hour",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "minute",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "days_of_week",
                "type": "DaysOfWeek"
              },
              {
                "id": 5,
                "name": "days_of_month",
                "type": "DaysOfMonth"
              }
            ],
            "messages": [
              {
                "name": "DaysOfWeek",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "DaysOfMonth",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "v2"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v2:/:compliance_common.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceCheckStatus",
            "enum_fields": [
              {
                "name": "UNSET_CHECK_STATUS"
              },
              {
                "name": "PASS",
                "integer": 1
              },
              {
                "name": "FAIL",
                "integer": 2
              },
              {
                "name": "ERROR",
                "integer": 3
              },
              {
                "name": "INFO",
                "integer": 4
              },
              {
                "name": "MANUAL",
                "integer": 5
              },
              {
                "name": "NOT_APPLICABLE",
                "integer": 6
              },
              {
                "name": "INCONSISTENT",
                "integer": 7
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceRule",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "rule_type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "severity",
                "type": "string"
              },
              {
                "id": 5,
                "name": "standard",
                "type": "string"
              },
              {
                "id": 6,
                "name": "control",
                "type": "string"
              },
              {
                "id": 7,
                "name": "title",
                "type": "string"
              },
              {
                "id": 8,
                "name": "description",
                "type": "string"
              },
              {
                "id": 9,
                "name": "rationale",
                "type": "string"
              },
              {
                "id": 10,
                "name": "fixes",
                "type": "Fix",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "id",
                "type": "string"
              },
              {
                "id": 12,
                "name": "rule_id",
                "type": "string"
              },
              {
                "id": 13,
                "name": "parent_rule",
                "type": "string"
              },
              {
                "id": 14,
                "name": "instructions",
                "type": "string"
              },
              {
                "id": 15,
                "name": "warning",
                "type": "string"
              }
            ],
            "reserved_ids": [
              2
            ],
            "messages": [
              {
                "name": "Fix",
                "fields": [
                  {
                    "id": 1,
                    "name": "platform",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "disruption",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceScanCluster",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceCheckStatusCount",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "status",
                "type": "ComplianceCheckStatus"
              }
            ]
          },
          {
            "name": "ComplianceCheckResultStatusCount",
            "fields": [
              {
                "id": 1,
                "name": "check_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "rationale",
                "type": "string"
              },
              {
                "id": 3,
                "name": "rule_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "check_stats",
                "type": "ComplianceCheckStatusCount",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "controls",
                "type": "ComplianceControl",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComplianceControl",
            "fields": [
              {
                "id": 1,
                "name": "standard",
                "type": "string"
              },
              {
                "id": 2,
                "name": "control",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceBenchmark",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "provider",
                "type": "string"
              },
              {
                "id": 5,
                "name": "short_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListComplianceProfileResults",
            "fields": [
              {
                "id": 1,
                "name": "profile_results",
                "type": "ComplianceCheckResultStatusCount",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "profile_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "total_count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ComplianceClusterOverallStats",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "ComplianceScanCluster"
              },
              {
                "id": 2,
                "name": "check_stats",
                "type": "ComplianceCheckStatusCount",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "cluster_errors",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "last_scan_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ListComplianceClusterOverallStatsResponse",
            "fields": [
              {
                "id": 1,
                "name": "scan_stats",
                "type": "ComplianceClusterOverallStats",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "total_count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ComplianceProfileResultsRequest",
            "fields": [
              {
                "id": 1,
                "name": "profile_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "ComplianceProfileCheckRequest",
            "fields": [
              {
                "id": 1,
                "name": "profile_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "check_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "ComplianceProfileSummary",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "product_type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "title",
                "type": "string"
              },
              {
                "id": 5,
                "name": "rule_count",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "profile_version",
                "type": "string"
              },
              {
                "id": 7,
                "name": "standards",
                "type": "ComplianceBenchmark",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v2/search_query.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v2"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v2:/:compliance_integration_service.proto",
      "def": {
        "enums": [
          {
            "name": "COStatus",
            "enum_fields": [
              {
                "name": "HEALTHY"
              },
              {
                "name": "UNHEALTHY",
                "integer": 1
              }
            ]
          },
          {
            "name": "ClusterProviderType",
            "enum_fields": [
              {
                "name": "UNSPECIFIED"
              },
              {
                "name": "AKS",
                "integer": 1
              },
              {
                "name": "ARO",
                "integer": 2
              },
              {
                "name": "EKS",
                "integer": 3
              },
              {
                "name": "GKE",
                "integer": 4
              },
              {
                "name": "OCP",
                "integer": 5
              },
              {
                "name": "OSD",
                "integer": 6
              },
              {
                "name": "ROSA",
                "integer": 7
              }
            ]
          },
          {
            "name": "ClusterPlatformType",
            "enum_fields": [
              {
                "name": "GENERIC_CLUSTER"
              },
              {
                "name": "KUBERNETES_CLUSTER",
                "integer": 1
              },
              {
                "name": "OPENSHIFT_CLUSTER",
                "integer": 2
              },
              {
                "name": "OPENSHIFT4_CLUSTER",
                "integer": 5
              }
            ],
            "reserved_ids": [
              3,
              4
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 6,
                "name": "status_errors",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "operator_installed",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "status",
                "type": "COStatus"
              },
              {
                "id": 9,
                "name": "cluster_platform_type",
                "type": "ClusterPlatformType"
              },
              {
                "id": 10,
                "name": "cluster_provider_type",
                "type": "ClusterProviderType"
              }
            ]
          },
          {
            "name": "ComplianceIntegrationStatusRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListComplianceIntegrationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "integrations",
                "type": "ComplianceIntegration",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "total_count",
                "type": "int32"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceIntegrationService",
            "rpcs": [
              {
                "name": "ListComplianceIntegrations",
                "in_type": "RawQuery",
                "out_type": "ListComplianceIntegrationsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v2/search_query.proto"
          },
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v2"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v2:/:compliance_profile_service.proto",
      "def": {
        "messages": [
          {
            "name": "ComplianceProfile",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "profile_version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "product_type",
                "type": "string"
              },
              {
                "id": 6,
                "name": "description",
                "type": "string"
              },
              {
                "id": 7,
                "name": "rules",
                "type": "ComplianceRule",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "product",
                "type": "string"
              },
              {
                "id": 9,
                "name": "title",
                "type": "string"
              },
              {
                "id": 10,
                "name": "values",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "standards",
                "type": "ComplianceBenchmark",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "ListComplianceProfilesResponse",
            "fields": [
              {
                "id": 1,
                "name": "profiles",
                "type": "ComplianceProfile",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "total_count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ListComplianceProfileSummaryResponse",
            "fields": [
              {
                "id": 1,
                "name": "profiles",
                "type": "ComplianceProfileSummary",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "total_count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ProfilesForClusterRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "ClustersProfileSummaryRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceProfileService",
            "rpcs": [
              {
                "name": "GetComplianceProfile",
                "in_type": "ResourceByID",
                "out_type": "ComplianceProfile"
              },
              {
                "name": "ListComplianceProfiles",
                "in_type": "ProfilesForClusterRequest",
                "out_type": "ListComplianceProfilesResponse"
              },
              {
                "name": "ListProfileSummaries",
                "in_type": "ClustersProfileSummaryRequest",
                "out_type": "ListComplianceProfileSummaryResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v2/common.proto"
          },
          {
            "path": "api/v2/compliance_common.proto"
          },
          {
            "path": "api/v2/search_query.proto"
          },
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v2"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v2:/:compliance_results_service.proto",
      "def": {
        "messages": [
          {
            "name": "ClusterCheckStatus",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "ComplianceScanCluster"
              },
              {
                "id": 2,
                "name": "status",
                "type": "ComplianceCheckStatus"
              },
              {
                "id": 3,
                "name": "created_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "check_uid",
                "type": "string"
              },
              {
                "id": 5,
                "name": "last_scan_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ComplianceCheckResult",
            "fields": [
              {
                "id": 1,
                "name": "check_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "check_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "check_uid",
                "type": "string"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "instructions",
                "type": "string"
              },
              {
                "id": 8,
                "name": "rationale",
                "type": "string"
              },
              {
                "id": 9,
                "name": "valuesUsed",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "warnings",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "status",
                "type": "ComplianceCheckStatus"
              },
              {
                "id": 12,
                "name": "rule_name",
                "type": "string"
              },
              {
                "id": 15,
                "name": "controls",
                "type": "ComplianceControl",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 13,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 14,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "reserved_ids": [
              6,
              7
            ]
          },
          {
            "name": "ComplianceCheckData",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scan_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "result",
                "type": "ComplianceCheckResult"
              }
            ]
          },
          {
            "name": "ComplianceClusterCheckStatus",
            "fields": [
              {
                "id": 1,
                "name": "check_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "check_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "clusters",
                "type": "ClusterCheckStatus",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "instructions",
                "type": "string"
              },
              {
                "id": 8,
                "name": "rationale",
                "type": "string"
              },
              {
                "id": 9,
                "name": "valuesUsed",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "warnings",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 13,
                "name": "controls",
                "type": "ComplianceControl",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 11,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 12,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "reserved_ids": [
              6,
              7
            ]
          },
          {
            "name": "ComplianceScanResult",
            "fields": [
              {
                "id": 1,
                "name": "scan_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "profile_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "check_results",
                "type": "ComplianceClusterCheckStatus",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "scan_config_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListComplianceScanResultsResponse",
            "fields": [
              {
                "id": 1,
                "name": "scan_results",
                "type": "ComplianceScanResult",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListComplianceResultsResponse",
            "fields": [
              {
                "id": 1,
                "name": "scan_results",
                "type": "ComplianceCheckData",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "total_count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ListComplianceCheckClusterResponse",
            "fields": [
              {
                "id": 1,
                "name": "check_results",
                "type": "ClusterCheckStatus",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "profile_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "check_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "total_count",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "controls",
                "type": "ComplianceControl",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListComplianceCheckResultResponse",
            "fields": [
              {
                "id": 1,
                "name": "check_results",
                "type": "ComplianceCheckResult",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "profile_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "total_count",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "last_scan_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ComplianceScanResultsRequest",
            "fields": [
              {
                "id": 1,
                "name": "scan_config_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "ComplianceProfileClusterRequest",
            "fields": [
              {
                "id": 1,
                "name": "profile_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "ComplianceCheckDetailRequest",
            "fields": [
              {
                "id": 1,
                "name": "profile_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "check_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceResultsService",
            "rpcs": [
              {
                "name": "GetComplianceScanCheckResult",
                "in_type": "ResourceByID",
                "out_type": "ComplianceClusterCheckStatus"
              },
              {
                "name": "GetComplianceScanResults",
                "in_type": "RawQuery",
                "out_type": "ListComplianceResultsResponse"
              },
              {
                "name": "GetComplianceScanConfigurationResults",
                "in_type": "ComplianceScanResultsRequest",
                "out_type": "ListComplianceResultsResponse"
              },
              {
                "name": "GetComplianceProfileResults",
                "in_type": "ComplianceProfileResultsRequest",
                "out_type": "ListComplianceProfileResults"
              },
              {
                "name": "GetComplianceProfileCheckResult",
                "in_type": "ComplianceProfileCheckRequest",
                "out_type": "ListComplianceCheckClusterResponse"
              },
              {
                "name": "GetComplianceProfileClusterResults",
                "in_type": "ComplianceProfileClusterRequest",
                "out_type": "ListComplianceCheckResultResponse"
              },
              {
                "name": "GetComplianceProfileCheckDetails",
                "in_type": "ComplianceCheckDetailRequest",
                "out_type": "ComplianceClusterCheckStatus"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v2/common.proto"
          },
          {
            "path": "api/v2/compliance_common.proto"
          },
          {
            "path": "api/v2/search_query.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v2"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v2:/:compliance_results_stats_service.proto",
      "def": {
        "messages": [
          {
            "name": "ComplianceScanStatsShim",
            "fields": [
              {
                "id": 1,
                "name": "scan_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "check_stats",
                "type": "ComplianceCheckStatusCount",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "last_scan",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "scan_config_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceProfileScanStats",
            "fields": [
              {
                "id": 1,
                "name": "check_stats",
                "type": "ComplianceCheckStatusCount",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "profile_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "title",
                "type": "string"
              },
              {
                "id": 4,
                "name": "version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "benchmarks",
                "type": "ComplianceBenchmark",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComplianceClusterScanStats",
            "fields": [
              {
                "id": 1,
                "name": "scan_stats",
                "type": "ComplianceScanStatsShim"
              },
              {
                "id": 2,
                "name": "cluster",
                "type": "ComplianceScanCluster"
              }
            ]
          },
          {
            "name": "ComplianceScanClusterRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "ListComplianceProfileScanStatsResponse",
            "fields": [
              {
                "id": 1,
                "name": "scan_stats",
                "type": "ComplianceProfileScanStats",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "total_count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ListComplianceClusterProfileStatsResponse",
            "fields": [
              {
                "id": 1,
                "name": "scan_stats",
                "type": "ComplianceProfileScanStats",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "total_count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ListComplianceClusterScanStatsResponse",
            "fields": [
              {
                "id": 1,
                "name": "scan_stats",
                "type": "ComplianceClusterScanStats",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "total_count",
                "type": "int32"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceResultsStatsService",
            "rpcs": [
              {
                "name": "GetComplianceProfileStats",
                "in_type": "ComplianceProfileResultsRequest",
                "out_type": "ListComplianceProfileScanStatsResponse"
              },
              {
                "name": "GetComplianceProfilesStats",
                "in_type": "RawQuery",
                "out_type": "ListComplianceProfileScanStatsResponse"
              },
              {
                "name": "GetComplianceProfilesClusterStats",
                "in_type": "ComplianceScanClusterRequest",
                "out_type": "ListComplianceClusterProfileStatsResponse"
              },
              {
                "name": "GetComplianceProfileCheckStats",
                "in_type": "ComplianceProfileCheckRequest",
                "out_type": "ListComplianceProfileResults"
              },
              {
                "name": "GetComplianceClusterScanStats",
                "in_type": "ComplianceScanClusterRequest",
                "out_type": "ListComplianceClusterScanStatsResponse"
              },
              {
                "name": "GetComplianceOverallClusterStats",
                "in_type": "RawQuery",
                "out_type": "ListComplianceClusterOverallStatsResponse"
              },
              {
                "name": "GetComplianceClusterStats",
                "in_type": "ComplianceProfileResultsRequest",
                "out_type": "ListComplianceClusterOverallStatsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v2/compliance_common.proto"
          },
          {
            "path": "api/v2/search_query.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v2"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v2:/:compliance_rule_service.proto",
      "def": {
        "messages": [
          {
            "name": "RuleRequest",
            "fields": [
              {
                "id": 1,
                "name": "rule_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceRuleService",
            "rpcs": [
              {
                "name": "GetComplianceRule",
                "in_type": "RuleRequest",
                "out_type": "ComplianceRule"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v2/compliance_common.proto"
          },
          {
            "path": "api/v2/search_query.proto"
          },
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v2"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v2:/:compliance_scan_configuration_service.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceRunReportResponse.RunState",
            "enum_fields": [
              {
                "name": "SUBMITTED"
              },
              {
                "name": "ERROR",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ClusterScanStatus",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "errors",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "suite_status",
                "type": "SuiteStatus"
              }
            ],
            "messages": [
              {
                "name": "SuiteStatus",
                "fields": [
                  {
                    "id": 1,
                    "name": "phase",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "result",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "error_message",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "last_transition_time",
                    "type": "google.protobuf.Timestamp"
                  }
                ]
              }
            ]
          },
          {
            "name": "BaseComplianceScanConfigurationSettings",
            "fields": [
              {
                "id": 1,
                "name": "one_time_scan",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "profiles",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "scan_schedule",
                "type": "Schedule"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "notifiers",
                "type": "NotifierConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComplianceScanConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scan_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "scan_config",
                "type": "BaseComplianceScanConfigurationSettings"
              },
              {
                "id": 4,
                "name": "clusters",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComplianceScanConfigurationStatus",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scan_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "scan_config",
                "type": "BaseComplianceScanConfigurationSettings"
              },
              {
                "id": 4,
                "name": "cluster_status",
                "type": "ClusterScanStatus",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "created_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "last_updated_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "modified_by",
                "type": "SlimUser"
              },
              {
                "id": 8,
                "name": "last_executed_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ComplianceConfigClusterProfileRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "ListComplianceScanConfigurationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "configurations",
                "type": "ComplianceScanConfigurationStatus",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "total_count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ComplianceRunReportRequest",
            "fields": [
              {
                "id": 1,
                "name": "scan_config_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceRunReportResponse",
            "fields": [
              {
                "id": 1,
                "name": "run_state",
                "type": "RunState"
              },
              {
                "id": 2,
                "name": "submitted_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "error_msg",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListComplianceScanConfigsProfileResponse",
            "fields": [
              {
                "id": 1,
                "name": "profiles",
                "type": "ComplianceProfileSummary",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "total_count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ListComplianceScanConfigsClusterProfileResponse",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "profiles",
                "type": "ComplianceProfileSummary",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "total_count",
                "type": "int32"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceScanConfigurationService",
            "rpcs": [
              {
                "name": "ListComplianceScanConfigurations",
                "in_type": "RawQuery",
                "out_type": "ListComplianceScanConfigurationsResponse"
              },
              {
                "name": "GetComplianceScanConfiguration",
                "in_type": "ResourceByID",
                "out_type": "ComplianceScanConfigurationStatus"
              },
              {
                "name": "CreateComplianceScanConfiguration",
                "in_type": "ComplianceScanConfiguration",
                "out_type": "ComplianceScanConfiguration"
              },
              {
                "name": "UpdateComplianceScanConfiguration",
                "in_type": "ComplianceScanConfiguration",
                "out_type": "Empty"
              },
              {
                "name": "DeleteComplianceScanConfiguration",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "RunComplianceScanConfiguration",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "RunReport",
                "in_type": "ComplianceRunReportRequest",
                "out_type": "ComplianceRunReportResponse"
              },
              {
                "name": "ListComplianceScanConfigProfiles",
                "in_type": "RawQuery",
                "out_type": "ListComplianceScanConfigsProfileResponse"
              },
              {
                "name": "ListComplianceScanConfigClusterProfiles",
                "in_type": "ComplianceConfigClusterProfileRequest",
                "out_type": "ListComplianceScanConfigsClusterProfileResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v2/common.proto"
          },
          {
            "path": "api/v2/compliance_common.proto"
          },
          {
            "path": "api/v2/report_service.proto"
          },
          {
            "path": "api/v2/search_query.proto"
          },
          {
            "path": "api/v2/user.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v2"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v2:/:pagination.proto",
      "def": {
        "enums": [
          {
            "name": "Aggregation",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "COUNT",
                "integer": 1
              },
              {
                "name": "MIN",
                "integer": 2
              },
              {
                "name": "MAX",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "AggregateBy",
            "fields": [
              {
                "id": 1,
                "name": "aggrFunc",
                "type": "Aggregation"
              },
              {
                "id": 2,
                "name": "distinct",
                "type": "bool"
              }
            ]
          },
          {
            "name": "SortOption",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "string"
              },
              {
                "id": 2,
                "name": "reversed",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "aggregate_by",
                "type": "AggregateBy"
              }
            ]
          },
          {
            "name": "Pagination",
            "fields": [
              {
                "id": 1,
                "name": "limit",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "offset",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "sort_option",
                "type": "SortOption"
              },
              {
                "id": 4,
                "name": "sort_options",
                "type": "SortOption",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "v2"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v2:/:report_service.proto",
      "def": {
        "enums": [
          {
            "name": "ReportConfiguration.ReportType",
            "enum_fields": [
              {
                "name": "VULNERABILITY"
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.Fixability",
            "enum_fields": [
              {
                "name": "BOTH"
              },
              {
                "name": "FIXABLE",
                "integer": 1
              },
              {
                "name": "NOT_FIXABLE",
                "integer": 2
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.VulnerabilitySeverity",
            "enum_fields": [
              {
                "name": "UNKNOWN_VULNERABILITY_SEVERITY"
              },
              {
                "name": "LOW_VULNERABILITY_SEVERITY",
                "integer": 1
              },
              {
                "name": "MODERATE_VULNERABILITY_SEVERITY",
                "integer": 2
              },
              {
                "name": "IMPORTANT_VULNERABILITY_SEVERITY",
                "integer": 3
              },
              {
                "name": "CRITICAL_VULNERABILITY_SEVERITY",
                "integer": 4
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.ImageType",
            "enum_fields": [
              {
                "name": "DEPLOYED"
              },
              {
                "name": "WATCHED",
                "integer": 1
              }
            ]
          },
          {
            "name": "ReportSchedule.IntervalType",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "WEEKLY",
                "integer": 1
              },
              {
                "name": "MONTHLY",
                "integer": 2
              }
            ]
          },
          {
            "name": "ReportStatus.RunState",
            "enum_fields": [
              {
                "name": "WAITING"
              },
              {
                "name": "PREPARING",
                "integer": 1
              },
              {
                "name": "GENERATED",
                "integer": 2
              },
              {
                "name": "DELIVERED",
                "integer": 3
              },
              {
                "name": "FAILURE",
                "integer": 4
              }
            ]
          },
          {
            "name": "ReportStatus.ReportMethod",
            "enum_fields": [
              {
                "name": "ON_DEMAND"
              },
              {
                "name": "SCHEDULED",
                "integer": 1
              }
            ]
          },
          {
            "name": "NotificationMethod",
            "enum_fields": [
              {
                "name": "EMAIL"
              },
              {
                "name": "DOWNLOAD",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ReportConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "ReportType"
              },
              {
                "id": 5,
                "name": "vuln_report_filters",
                "type": "VulnerabilityReportFilters"
              },
              {
                "id": 6,
                "name": "schedule",
                "type": "ReportSchedule"
              },
              {
                "id": 7,
                "name": "resource_scope",
                "type": "ResourceScope"
              },
              {
                "id": 8,
                "name": "notifiers",
                "type": "NotifierConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters",
            "fields": [
              {
                "id": 1,
                "name": "fixability",
                "type": "Fixability"
              },
              {
                "id": 2,
                "name": "severities",
                "type": "VulnerabilitySeverity",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "image_types",
                "type": "ImageType",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "all_vuln",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "since_last_sent_scheduled_report",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "since_start_date",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ReportSchedule",
            "fields": [
              {
                "id": 1,
                "name": "interval_type",
                "type": "IntervalType"
              },
              {
                "id": 2,
                "name": "hour",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "minute",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "days_of_week",
                "type": "DaysOfWeek"
              },
              {
                "id": 5,
                "name": "days_of_month",
                "type": "DaysOfMonth"
              }
            ],
            "messages": [
              {
                "name": "DaysOfWeek",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "DaysOfMonth",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ResourceScope",
            "fields": [
              {
                "id": 1,
                "name": "collection_scope",
                "type": "CollectionReference"
              }
            ]
          },
          {
            "name": "CollectionReference",
            "fields": [
              {
                "id": 1,
                "name": "collection_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "collection_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "NotifierConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "email_config",
                "type": "EmailNotifierConfiguration"
              },
              {
                "id": 2,
                "name": "notifier_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "EmailNotifierConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "notifier_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "mailing_lists",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "custom_subject",
                "type": "string"
              },
              {
                "id": 4,
                "name": "custom_body",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListReportConfigurationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "report_configs",
                "type": "ReportConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountReportConfigurationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "GetReportHistoryRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "report_param_query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "ReportHistoryResponse",
            "fields": [
              {
                "id": 1,
                "name": "report_snapshots",
                "type": "ReportSnapshot",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReportStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "ReportStatus"
              }
            ]
          },
          {
            "name": "CollectionSnapshot",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ReportSnapshot",
            "fields": [
              {
                "id": 1,
                "name": "report_config_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "report_job_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "vuln_report_filters",
                "type": "VulnerabilityReportFilters"
              },
              {
                "id": 6,
                "name": "collection_snapshot",
                "type": "CollectionSnapshot"
              },
              {
                "id": 7,
                "name": "schedule",
                "type": "ReportSchedule"
              },
              {
                "id": 8,
                "name": "report_status",
                "type": "ReportStatus"
              },
              {
                "id": 9,
                "name": "notifiers",
                "type": "NotifierConfiguration",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "user",
                "type": "SlimUser"
              },
              {
                "id": 11,
                "name": "is_download_available",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ReportStatus",
            "fields": [
              {
                "id": 1,
                "name": "run_state",
                "type": "RunState"
              },
              {
                "id": 2,
                "name": "completed_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "error_msg",
                "type": "string"
              },
              {
                "id": 4,
                "name": "report_request_type",
                "type": "ReportMethod"
              },
              {
                "id": 5,
                "name": "report_notification_method",
                "type": "NotificationMethod"
              }
            ]
          },
          {
            "name": "RunReportRequest",
            "fields": [
              {
                "id": 1,
                "name": "report_config_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "report_notification_method",
                "type": "NotificationMethod"
              }
            ]
          },
          {
            "name": "RunReportResponse",
            "fields": [
              {
                "id": 1,
                "name": "report_config_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "report_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeleteReportRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ReportService",
            "rpcs": [
              {
                "name": "PostReportConfiguration",
                "in_type": "ReportConfiguration",
                "out_type": "ReportConfiguration"
              },
              {
                "name": "UpdateReportConfiguration",
                "in_type": "ReportConfiguration",
                "out_type": "Empty"
              },
              {
                "name": "ListReportConfigurations",
                "in_type": "RawQuery",
                "out_type": "ListReportConfigurationsResponse"
              },
              {
                "name": "CountReportConfigurations",
                "in_type": "RawQuery",
                "out_type": "CountReportConfigurationsResponse"
              },
              {
                "name": "GetReportConfiguration",
                "in_type": "ResourceByID",
                "out_type": "ReportConfiguration"
              },
              {
                "name": "DeleteReportConfiguration",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetReportStatus",
                "in_type": "ResourceByID",
                "out_type": "ReportStatusResponse"
              },
              {
                "name": "GetReportHistory",
                "in_type": "GetReportHistoryRequest",
                "out_type": "ReportHistoryResponse"
              },
              {
                "name": "GetMyReportHistory",
                "in_type": "GetReportHistoryRequest",
                "out_type": "ReportHistoryResponse"
              },
              {
                "name": "RunReport",
                "in_type": "RunReportRequest",
                "out_type": "RunReportResponse"
              },
              {
                "name": "CancelReport",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "DeleteReport",
                "in_type": "DeleteReportRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v2/common.proto"
          },
          {
            "path": "api/v2/search_query.proto"
          },
          {
            "path": "api/v2/user.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v2"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v2:/:search_query.proto",
      "def": {
        "messages": [
          {
            "name": "RawQuery",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              },
              {
                "id": 2,
                "name": "pagination",
                "type": "Pagination"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v2/pagination.proto"
          }
        ],
        "package": {
          "name": "v2"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v2:/:user.proto",
      "def": {
        "messages": [
          {
            "name": "SlimUser",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "v2"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v2:/:vuln_exception_service.proto",
      "def": {
        "enums": [
          {
            "name": "ExceptionStatus",
            "enum_fields": [
              {
                "name": "PENDING"
              },
              {
                "name": "APPROVED",
                "integer": 1
              },
              {
                "name": "DENIED",
                "integer": 2
              },
              {
                "name": "APPROVED_PENDING_UPDATE",
                "integer": 3
              }
            ]
          },
          {
            "name": "ExceptionExpiry.ExpiryType",
            "enum_fields": [
              {
                "name": "TIME"
              },
              {
                "name": "ALL_CVE_FIXABLE",
                "integer": 1
              },
              {
                "name": "ANY_CVE_FIXABLE",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Comment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              },
              {
                "id": 3,
                "name": "user",
                "type": "SlimUser"
              },
              {
                "id": 4,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ExceptionExpiry",
            "fields": [
              {
                "id": 1,
                "name": "expiry_type",
                "type": "ExpiryType"
              },
              {
                "id": 2,
                "name": "expires_on",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "DeferralRequest",
            "fields": [
              {
                "id": 1,
                "name": "expiry",
                "type": "ExceptionExpiry"
              }
            ]
          },
          {
            "name": "FalsePositiveRequest"
          },
          {
            "name": "VulnerabilityException",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "target_state",
                "type": "VulnerabilityState"
              },
              {
                "id": 4,
                "name": "status",
                "type": "ExceptionStatus"
              },
              {
                "id": 5,
                "name": "expired",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "requester",
                "type": "SlimUser"
              },
              {
                "id": 7,
                "name": "approvers",
                "type": "SlimUser",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "comments",
                "type": "Comment",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "scope",
                "type": "Scope"
              },
              {
                "id": 12,
                "name": "deferral_request",
                "type": "DeferralRequest"
              },
              {
                "id": 13,
                "name": "false_positive_request",
                "type": "FalsePositiveRequest"
              },
              {
                "id": 14,
                "name": "cves",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 15,
                "name": "deferral_update",
                "type": "DeferralUpdate"
              },
              {
                "id": 16,
                "name": "false_positive_update",
                "type": "FalsePositiveUpdate"
              }
            ],
            "messages": [
              {
                "name": "Scope",
                "fields": [
                  {
                    "id": 1,
                    "name": "image_scope",
                    "type": "Image"
                  }
                ],
                "messages": [
                  {
                    "name": "Image",
                    "fields": [
                      {
                        "id": 1,
                        "name": "registry",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "remote",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "tag",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "DeferralUpdate",
            "fields": [
              {
                "id": 1,
                "name": "cves",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "expiry",
                "type": "ExceptionExpiry"
              }
            ]
          },
          {
            "name": "FalsePositiveUpdate",
            "fields": [
              {
                "id": 1,
                "name": "cves",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetVulnerabilityExceptionResponse",
            "fields": [
              {
                "id": 1,
                "name": "exception",
                "type": "VulnerabilityException"
              }
            ]
          },
          {
            "name": "ListVulnerabilityExceptionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "exceptions",
                "type": "VulnerabilityException",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CreateDeferVulnerabilityExceptionRequest",
            "fields": [
              {
                "id": 1,
                "name": "cves",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              },
              {
                "id": 3,
                "name": "scope",
                "type": "VulnerabilityException.Scope"
              },
              {
                "id": 4,
                "name": "exception_expiry",
                "type": "ExceptionExpiry"
              }
            ]
          },
          {
            "name": "CreateDeferVulnerabilityExceptionResponse",
            "fields": [
              {
                "id": 1,
                "name": "exception",
                "type": "VulnerabilityException"
              }
            ]
          },
          {
            "name": "CreateFalsePositiveVulnerabilityExceptionRequest",
            "fields": [
              {
                "id": 1,
                "name": "cves",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "scope",
                "type": "VulnerabilityException.Scope"
              },
              {
                "id": 3,
                "name": "comment",
                "type": "string"
              }
            ]
          },
          {
            "name": "CreateFalsePositiveVulnerabilityExceptionResponse",
            "fields": [
              {
                "id": 1,
                "name": "exception",
                "type": "VulnerabilityException"
              }
            ]
          },
          {
            "name": "ApproveVulnerabilityExceptionRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              }
            ]
          },
          {
            "name": "ApproveVulnerabilityExceptionResponse",
            "fields": [
              {
                "id": 1,
                "name": "exception",
                "type": "VulnerabilityException"
              }
            ]
          },
          {
            "name": "DenyVulnerabilityExceptionRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              }
            ]
          },
          {
            "name": "DenyVulnerabilityExceptionResponse",
            "fields": [
              {
                "id": 1,
                "name": "exception",
                "type": "VulnerabilityException"
              }
            ]
          },
          {
            "name": "UpdateVulnerabilityExceptionRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deferral_update",
                "type": "DeferralUpdate"
              },
              {
                "id": 4,
                "name": "false_positive_update",
                "type": "FalsePositiveUpdate"
              }
            ]
          },
          {
            "name": "UpdateVulnerabilityExceptionResponse",
            "fields": [
              {
                "id": 1,
                "name": "exception",
                "type": "VulnerabilityException"
              }
            ]
          },
          {
            "name": "CancelVulnerabilityExceptionResponse",
            "fields": [
              {
                "id": 1,
                "name": "exception",
                "type": "VulnerabilityException"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "VulnerabilityExceptionService",
            "rpcs": [
              {
                "name": "GetVulnerabilityException",
                "in_type": "ResourceByID",
                "out_type": "GetVulnerabilityExceptionResponse"
              },
              {
                "name": "ListVulnerabilityExceptions",
                "in_type": "RawQuery",
                "out_type": "ListVulnerabilityExceptionsResponse"
              },
              {
                "name": "CreateDeferVulnerabilityException",
                "in_type": "CreateDeferVulnerabilityExceptionRequest",
                "out_type": "CreateDeferVulnerabilityExceptionResponse"
              },
              {
                "name": "CreateFalsePositiveVulnerabilityException",
                "in_type": "CreateFalsePositiveVulnerabilityExceptionRequest",
                "out_type": "CreateFalsePositiveVulnerabilityExceptionResponse"
              },
              {
                "name": "ApproveVulnerabilityException",
                "in_type": "ApproveVulnerabilityExceptionRequest",
                "out_type": "ApproveVulnerabilityExceptionResponse"
              },
              {
                "name": "DenyVulnerabilityException",
                "in_type": "DenyVulnerabilityExceptionRequest",
                "out_type": "DenyVulnerabilityExceptionResponse"
              },
              {
                "name": "UpdateVulnerabilityException",
                "in_type": "UpdateVulnerabilityExceptionRequest",
                "out_type": "UpdateVulnerabilityExceptionResponse"
              },
              {
                "name": "CancelVulnerabilityException",
                "in_type": "ResourceByID",
                "out_type": "CancelVulnerabilityExceptionResponse"
              },
              {
                "name": "DeleteVulnerabilityException",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v2/common.proto"
          },
          {
            "path": "api/v2/search_query.proto"
          },
          {
            "path": "api/v2/user.proto"
          },
          {
            "path": "api/v2/vuln_state.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v2"
        }
      }
    },
    {
      "protopath": "proto:/:api:/:v2:/:vuln_state.proto",
      "def": {
        "enums": [
          {
            "name": "VulnerabilityState",
            "enum_fields": [
              {
                "name": "OBSERVED"
              },
              {
                "name": "DEFERRED",
                "integer": 1
              },
              {
                "name": "FALSE_POSITIVE",
                "integer": 2
              }
            ]
          }
        ],
        "package": {
          "name": "v2"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:auth.proto",
      "def": {
        "messages": [
          {
            "name": "ServiceCertAuth",
            "fields": [
              {
                "id": 1,
                "name": "cert_der",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "current_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:baseline_sync.proto",
      "def": {
        "messages": [
          {
            "name": "BaselineSync",
            "fields": [
              {
                "id": 1,
                "name": "baselines",
                "type": "storage.ProcessBaseline",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/process_baseline.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:cluster_config.proto",
      "def": {
        "messages": [
          {
            "name": "ClusterConfig",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.DynamicClusterConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:cluster_metrics.proto",
      "def": {
        "messages": [
          {
            "name": "ClusterMetrics",
            "fields": [
              {
                "id": 1,
                "name": "node_count",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "cpu_capacity",
                "type": "int64"
              }
            ]
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:cluster_status.proto",
      "def": {
        "messages": [
          {
            "name": "DeploymentEnvironmentUpdate",
            "fields": [
              {
                "id": 1,
                "name": "environments",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ClusterStatusUpdate",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "storage.ClusterStatus"
              },
              {
                "id": 2,
                "name": "deployment_env_update",
                "type": "DeploymentEnvironmentUpdate"
              }
            ]
          },
          {
            "name": "RawClusterHealthInfo",
            "fields": [
              {
                "id": 1,
                "name": "collector_health_info",
                "type": "storage.CollectorHealthInfo"
              },
              {
                "id": 2,
                "name": "admission_control_health_info",
                "type": "storage.AdmissionControlHealthInfo"
              },
              {
                "id": 3,
                "name": "scanner_health_info",
                "type": "storage.ScannerHealthInfo"
              }
            ]
          },
          {
            "name": "ClusterHealthResponse"
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:compliance_operator.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceOperatorRuleSeverity",
            "enum_fields": [
              {
                "name": "UNSET_RULE_SEVERITY"
              },
              {
                "name": "UNKNOWN_RULE_SEVERITY",
                "integer": 1
              },
              {
                "name": "INFO_RULE_SEVERITY",
                "integer": 2
              },
              {
                "name": "LOW_RULE_SEVERITY",
                "integer": 3
              },
              {
                "name": "MEDIUM_RULE_SEVERITY",
                "integer": 4
              },
              {
                "name": "HIGH_RULE_SEVERITY",
                "integer": 5
              }
            ]
          },
          {
            "name": "ComplianceOperatorCheckResultV2.CheckStatus",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "PASS",
                "integer": 1
              },
              {
                "name": "FAIL",
                "integer": 2
              },
              {
                "name": "ERROR",
                "integer": 3
              },
              {
                "name": "INFO",
                "integer": 4
              },
              {
                "name": "MANUAL",
                "integer": 5
              },
              {
                "name": "NOT_APPLICABLE",
                "integer": 6
              },
              {
                "name": "INCONSISTENT",
                "integer": 7
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceOperatorInfo",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 3,
                "name": "total_desired_pods",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "total_ready_pods",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "status_error",
                "type": "string"
              },
              {
                "id": 6,
                "name": "is_installed",
                "type": "bool"
              }
            ]
          },
          {
            "name": "EnableComplianceRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "DisableComplianceRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "SyncComplianceScanConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "scan_configs",
                "type": "ApplyComplianceScanConfigRequest",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ApplyComplianceScanConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "scheduled_scan",
                "type": "ScheduledScan"
              },
              {
                "id": 4,
                "name": "rerun_scan",
                "type": "RerunScheduledScan"
              },
              {
                "id": 5,
                "name": "suspend_scan",
                "type": "SuspendScheduledScan"
              },
              {
                "id": 6,
                "name": "resume_scan",
                "type": "ResumeScheduledScan"
              },
              {
                "id": 7,
                "name": "update_scan",
                "type": "UpdateScheduledScan"
              }
            ],
            "reserved_ids": [
              2
            ],
            "messages": [
              {
                "name": "BaseScanSettings",
                "fields": [
                  {
                    "id": 1,
                    "name": "db_record_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "scan_name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "profiles",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 4,
                    "name": "show_not_applicable",
                    "type": "bool"
                  },
                  {
                    "id": 5,
                    "name": "strict_node_scan",
                    "type": "bool"
                  },
                  {
                    "id": 6,
                    "name": "auto_apply_remediations",
                    "type": "bool"
                  },
                  {
                    "id": 7,
                    "name": "auto_update_remediations",
                    "type": "bool"
                  }
                ]
              },
              {
                "name": "OneTimeScan",
                "fields": [
                  {
                    "id": 1,
                    "name": "scan_settings",
                    "type": "BaseScanSettings"
                  }
                ]
              },
              {
                "name": "ScheduledScan",
                "fields": [
                  {
                    "id": 1,
                    "name": "scan_settings",
                    "type": "BaseScanSettings"
                  },
                  {
                    "id": 2,
                    "name": "cron",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "RerunScheduledScan",
                "fields": [
                  {
                    "id": 1,
                    "name": "scan_name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "SuspendScheduledScan",
                "fields": [
                  {
                    "id": 1,
                    "name": "scan_name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "ResumeScheduledScan",
                "fields": [
                  {
                    "id": 1,
                    "name": "scan_name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "UpdateScheduledScan",
                "fields": [
                  {
                    "id": 1,
                    "name": "scan_settings",
                    "type": "BaseScanSettings"
                  },
                  {
                    "id": 2,
                    "name": "cron",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "DeleteComplianceScanConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceRequest",
            "fields": [
              {
                "id": 1,
                "name": "enable_compliance",
                "type": "EnableComplianceRequest"
              },
              {
                "id": 2,
                "name": "disable_compliance",
                "type": "DisableComplianceRequest"
              },
              {
                "id": 3,
                "name": "apply_scan_config",
                "type": "ApplyComplianceScanConfigRequest"
              },
              {
                "id": 4,
                "name": "delete_scan_config",
                "type": "DeleteComplianceScanConfigRequest"
              },
              {
                "id": 5,
                "name": "sync_scan_configs",
                "type": "SyncComplianceScanConfigRequest"
              }
            ]
          },
          {
            "name": "ComplianceResponse",
            "fields": [
              {
                "id": 1,
                "name": "enable_compliance_response",
                "type": "EnableComplianceResponse"
              },
              {
                "id": 2,
                "name": "disable_compliance_response",
                "type": "DisableComplianceResponse"
              },
              {
                "id": 3,
                "name": "apply_compliance_scan_config_response",
                "type": "ApplyComplianceScanConfigResponse"
              },
              {
                "id": 4,
                "name": "delete_compliance_scan_config_response",
                "type": "DeleteComplianceScanConfigResponse"
              }
            ],
            "messages": [
              {
                "name": "EnableComplianceResponse",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "error",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "DisableComplianceResponse",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "error",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "ApplyComplianceScanConfigResponse",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "error",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "DeleteComplianceScanConfigResponse",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "error",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceOperatorCheckResultV2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "check_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "check_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "status",
                "type": "CheckStatus"
              },
              {
                "id": 6,
                "name": "severity",
                "type": "ComplianceOperatorRuleSeverity"
              },
              {
                "id": 7,
                "name": "description",
                "type": "string"
              },
              {
                "id": 8,
                "name": "instructions",
                "type": "string"
              },
              {
                "id": 11,
                "name": "created_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 14,
                "name": "scan_name",
                "type": "string"
              },
              {
                "id": 15,
                "name": "suite_name",
                "type": "string"
              },
              {
                "id": 16,
                "name": "rationale",
                "type": "string"
              },
              {
                "id": 17,
                "name": "valuesUsed",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "warnings",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 9,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 10,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "reserved_ids": [
              12,
              13
            ]
          },
          {
            "name": "ComplianceOperatorProfileV2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "profile_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "profile_version",
                "type": "string"
              },
              {
                "id": 7,
                "name": "description",
                "type": "string"
              },
              {
                "id": 8,
                "name": "rules",
                "type": "Rule",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "title",
                "type": "string"
              },
              {
                "id": 10,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Rule",
                "fields": [
                  {
                    "id": 1,
                    "name": "rule_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceOperatorRuleV2",
            "fields": [
              {
                "id": 1,
                "name": "rule_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "rule_type",
                "type": "string"
              },
              {
                "id": 5,
                "name": "severity",
                "type": "ComplianceOperatorRuleSeverity"
              },
              {
                "id": 8,
                "name": "title",
                "type": "string"
              },
              {
                "id": 9,
                "name": "description",
                "type": "string"
              },
              {
                "id": 10,
                "name": "rationale",
                "type": "string"
              },
              {
                "id": 11,
                "name": "fixes",
                "type": "Fix",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "warning",
                "type": "string"
              },
              {
                "id": 13,
                "name": "instructions",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Fix",
                "fields": [
                  {
                    "id": 1,
                    "name": "platform",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "disruption",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceOperatorScanV2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "profile_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "scan_type",
                "type": "string"
              },
              {
                "id": 7,
                "name": "status",
                "type": "ComplianceOperatorScanStatusV2"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ComplianceOperatorScanStatusV2",
            "fields": [
              {
                "id": 1,
                "name": "phase",
                "type": "string"
              },
              {
                "id": 2,
                "name": "result",
                "type": "string"
              },
              {
                "id": 3,
                "name": "error_message",
                "type": "string"
              },
              {
                "id": 4,
                "name": "current_index",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "warnings",
                "type": "string"
              },
              {
                "id": 6,
                "name": "remaining_retries",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "end_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ComplianceOperatorScanSettingBindingV2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "profile_names",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "scan_setting_name",
                "type": "string"
              },
              {
                "id": 8,
                "name": "status",
                "type": "ComplianceOperatorStatus"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "ComplianceOperatorCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "status",
                "type": "string"
              },
              {
                "id": 3,
                "name": "reason",
                "type": "string"
              },
              {
                "id": 4,
                "name": "message",
                "type": "string"
              },
              {
                "id": 5,
                "name": "last_transition_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ComplianceOperatorStatus",
            "fields": [
              {
                "id": 1,
                "name": "phase",
                "type": "string"
              },
              {
                "id": 2,
                "name": "result",
                "type": "string"
              },
              {
                "id": 3,
                "name": "error_message",
                "type": "string"
              },
              {
                "id": 4,
                "name": "conditions",
                "type": "ComplianceOperatorCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComplianceOperatorSuiteV2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "status",
                "type": "ComplianceOperatorStatus"
              }
            ],
            "reserved_ids": [
              3
            ]
          },
          {
            "name": "ComplianceOperatorRemediationV2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "compliance_check_result_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "apply",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "current_object",
                "type": "string"
              },
              {
                "id": 6,
                "name": "outdated_object",
                "type": "string"
              },
              {
                "id": 7,
                "name": "enforcement_type",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:delegated_registry_config.proto",
      "def": {
        "enums": [
          {
            "name": "DelegatedRegistryConfig.EnabledFor",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "ALL",
                "integer": 1
              },
              {
                "name": "SPECIFIC",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DelegatedRegistryConfig",
            "fields": [
              {
                "id": 1,
                "name": "enabled_for",
                "type": "EnabledFor"
              },
              {
                "id": 2,
                "name": "registries",
                "type": "DelegatedRegistry",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "DelegatedRegistry",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:deployment_enhancement.proto",
      "def": {
        "messages": [
          {
            "name": "DeploymentEnhancementMessage",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "deployments",
                "type": "storage.Deployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeploymentEnhancementRequest",
            "fields": [
              {
                "id": 1,
                "name": "msg",
                "type": "DeploymentEnhancementMessage"
              }
            ]
          },
          {
            "name": "DeploymentEnhancementResponse",
            "fields": [
              {
                "id": 1,
                "name": "msg",
                "type": "DeploymentEnhancementMessage"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/deployment.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:development_service.proto",
      "def": {
        "enums": [
          {
            "name": "URLHasValidCertResponse.URLResult",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "CERT_SIGNED_BY_UNKNOWN_AUTHORITY",
                "integer": 1
              },
              {
                "name": "CERT_SIGNING_AUTHORITY_VALID_BUT_OTHER_ERROR",
                "integer": 2
              },
              {
                "name": "OTHER_GET_ERROR",
                "integer": 3
              },
              {
                "name": "REQUEST_SUCCEEDED",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "URLHasValidCertRequest",
            "fields": [
              {
                "id": 1,
                "name": "url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "certPEM",
                "type": "string"
              }
            ]
          },
          {
            "name": "URLHasValidCertResponse",
            "fields": [
              {
                "id": 1,
                "name": "result",
                "type": "URLResult"
              },
              {
                "id": 2,
                "name": "details",
                "type": "string"
              }
            ]
          },
          {
            "name": "RandomDataRequest",
            "fields": [
              {
                "id": 1,
                "name": "size",
                "type": "int32"
              }
            ]
          },
          {
            "name": "RandomDataResponse",
            "fields": [
              {
                "id": 1,
                "name": "data",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "EnvVarsResponse",
            "fields": [
              {
                "id": 1,
                "name": "env_vars",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReconciliationStatsByClusterResponse",
            "fields": [
              {
                "id": 1,
                "name": "stats",
                "type": "ReconciliationStatsForCluster",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ReconciliationStatsForCluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "reconciliation_done",
                    "type": "bool"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "deleted_objects_by_type",
                      "type": "int32"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "ReplicateImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "times",
                "type": "int32"
              }
            ]
          },
          {
            "name": "Empty"
          }
        ],
        "services": [
          {
            "name": "DevelopmentService",
            "rpcs": [
              {
                "name": "ReplicateImage",
                "in_type": "ReplicateImageRequest",
                "out_type": "Empty"
              },
              {
                "name": "URLHasValidCert",
                "in_type": "URLHasValidCertRequest",
                "out_type": "URLHasValidCertResponse"
              },
              {
                "name": "RandomData",
                "in_type": "RandomDataRequest",
                "out_type": "RandomDataResponse"
              },
              {
                "name": "EnvVars",
                "in_type": "Empty",
                "out_type": "EnvVarsResponse"
              },
              {
                "name": "ReconciliationStatsByCluster",
                "in_type": "Empty",
                "out_type": "ReconciliationStatsByClusterResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:hello.proto",
      "def": {
        "enums": [
          {
            "name": "SensorHello.SensorState",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "STARTUP",
                "integer": 1
              },
              {
                "name": "RECONNECT",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "HelmManagedConfigInit",
            "fields": [
              {
                "id": 1,
                "name": "cluster_config",
                "type": "storage.CompleteClusterConfig"
              },
              {
                "id": 2,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "not_helm_managed",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 5,
                "name": "managed_by",
                "type": "storage.ManagerType"
              }
            ]
          },
          {
            "name": "SensorHello",
            "fields": [
              {
                "id": 1,
                "name": "sensor_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "capabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "deployment_identification",
                "type": "storage.SensorDeploymentIdentification"
              },
              {
                "id": 3,
                "name": "helm_managed_config_init",
                "type": "HelmManagedConfigInit"
              },
              {
                "id": 4,
                "name": "policy_version",
                "type": "string"
              },
              {
                "id": 6,
                "name": "sensor_state",
                "type": "SensorState"
              },
              {
                "id": 7,
                "name": "request_deduper_state",
                "type": "bool"
              }
            ]
          },
          {
            "name": "CentralHello",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "managed_central",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "central_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "capabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "send_deduper_state",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "cert_bundle",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:image.proto",
      "def": {
        "messages": [
          {
            "name": "ScanImage",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "force",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImageIntegrations",
            "fields": [
              {
                "id": 1,
                "name": "updated_integrations",
                "type": "storage.ImageIntegration",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "deleted_integration_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/image_integration.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:local_scanner.proto",
      "def": {
        "messages": [
          {
            "name": "LocalScannerCertsIssueError",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "string"
              }
            ]
          },
          {
            "name": "IssueLocalScannerCertsRequest",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "IssueLocalScannerCertsResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "certificates",
                "type": "storage.TypedServiceCertificateSet"
              },
              {
                "id": 3,
                "name": "error",
                "type": "LocalScannerCertsIssueError"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/service_identity.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:network_baseline_sync.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkBaselineSync",
            "fields": [
              {
                "id": 1,
                "name": "network_baselines",
                "type": "storage.NetworkBaseline",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/network_baseline.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:network_flow.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkFlowUpdate",
            "fields": [
              {
                "id": 1,
                "name": "updated",
                "type": "storage.NetworkFlow",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "updated_endpoints",
                "type": "storage.NetworkEndpoint",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "PushNetworkEntitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "entities",
                "type": "storage.NetworkEntityInfo",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "seqID",
                "type": "int64"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_flow.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:policy_sync.proto",
      "def": {
        "messages": [
          {
            "name": "PolicySync",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "storage.Policy",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:process_listening_on_ports_update.proto",
      "def": {
        "messages": [
          {
            "name": "ProcessListeningOnPortsUpdate",
            "fields": [
              {
                "id": 1,
                "name": "processes_listening_on_ports",
                "type": "storage.ProcessListeningOnPortFromSensor",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/process_listening_on_port.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:sensor_events.proto",
      "def": {
        "enums": [
          {
            "name": "ResourceAction",
            "enum_fields": [
              {
                "name": "UNSET_ACTION_RESOURCE"
              },
              {
                "name": "CREATE_RESOURCE",
                "integer": 1
              },
              {
                "name": "REMOVE_RESOURCE",
                "integer": 2
              },
              {
                "name": "UPDATE_RESOURCE",
                "integer": 3
              },
              {
                "name": "SYNC_RESOURCE",
                "integer": 4
              }
            ]
          },
          {
            "name": "AlertResults.Source",
            "enum_fields": [
              {
                "name": "DEPLOYMENT_EVENT"
              },
              {
                "name": "AUDIT_EVENT",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ReprocessDeploymentRisk",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "AlertResults",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "alerts",
                "type": "storage.Alert",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "stage",
                "type": "storage.LifecycleStage"
              },
              {
                "id": 4,
                "name": "source",
                "type": "Source"
              }
            ]
          },
          {
            "name": "Timing",
            "fields": [
              {
                "id": 1,
                "name": "dispatcher",
                "type": "string"
              },
              {
                "id": 2,
                "name": "resource",
                "type": "string"
              },
              {
                "id": 3,
                "name": "nanos",
                "type": "int64"
              }
            ]
          },
          {
            "name": "SensorEvent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "action",
                "type": "ResourceAction"
              },
              {
                "id": 3,
                "name": "timing",
                "type": "Timing"
              },
              {
                "id": 26,
                "name": "sensor_hash",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "network_policy",
                "type": "storage.NetworkPolicy"
              },
              {
                "id": 5,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 19,
                "name": "pod",
                "type": "storage.Pod"
              },
              {
                "id": 6,
                "name": "namespace",
                "type": "storage.NamespaceMetadata"
              },
              {
                "id": 7,
                "name": "secret",
                "type": "storage.Secret"
              },
              {
                "id": 9,
                "name": "node",
                "type": "storage.Node"
              },
              {
                "id": 25,
                "name": "node_inventory",
                "type": "storage.NodeInventory"
              },
              {
                "id": 14,
                "name": "service_account",
                "type": "storage.ServiceAccount"
              },
              {
                "id": 15,
                "name": "role",
                "type": "storage.K8sRole"
              },
              {
                "id": 16,
                "name": "binding",
                "type": "storage.K8sRoleBinding"
              },
              {
                "id": 8,
                "name": "process_indicator",
                "type": "storage.ProcessIndicator"
              },
              {
                "id": 10,
                "name": "provider_metadata",
                "type": "storage.ProviderMetadata"
              },
              {
                "id": 11,
                "name": "synced",
                "type": "ResourcesSynced"
              },
              {
                "id": 12,
                "name": "orchestrator_metadata",
                "type": "storage.OrchestratorMetadata"
              },
              {
                "id": 13,
                "name": "image_integration",
                "type": "storage.ImageIntegration"
              },
              {
                "id": 17,
                "name": "reprocess_deployment",
                "type": "ReprocessDeploymentRisk"
              },
              {
                "id": 18,
                "name": "alert_results",
                "type": "AlertResults"
              },
              {
                "id": 20,
                "name": "compliance_operator_result",
                "type": "storage.ComplianceOperatorCheckResult"
              },
              {
                "id": 21,
                "name": "compliance_operator_profile",
                "type": "storage.ComplianceOperatorProfile"
              },
              {
                "id": 22,
                "name": "compliance_operator_rule",
                "type": "storage.ComplianceOperatorRule"
              },
              {
                "id": 23,
                "name": "compliance_operator_scan_setting_binding",
                "type": "storage.ComplianceOperatorScanSettingBinding"
              },
              {
                "id": 24,
                "name": "compliance_operator_scan",
                "type": "storage.ComplianceOperatorScan"
              },
              {
                "id": 27,
                "name": "compliance_operator_result_v2",
                "type": "ComplianceOperatorCheckResultV2"
              },
              {
                "id": 28,
                "name": "compliance_operator_profile_v2",
                "type": "ComplianceOperatorProfileV2"
              },
              {
                "id": 29,
                "name": "compliance_operator_rule_v2",
                "type": "ComplianceOperatorRuleV2"
              },
              {
                "id": 30,
                "name": "compliance_operator_scan_v2",
                "type": "ComplianceOperatorScanV2"
              },
              {
                "id": 31,
                "name": "compliance_operator_scan_setting_binding_v2",
                "type": "ComplianceOperatorScanSettingBindingV2"
              },
              {
                "id": 32,
                "name": "compliance_operator_suite_v2",
                "type": "ComplianceOperatorSuiteV2"
              },
              {
                "id": 33,
                "name": "compliance_operator_remediation_v2",
                "type": "ComplianceOperatorRemediationV2"
              }
            ],
            "messages": [
              {
                "name": "ResourcesSynced",
                "fields": [
                  {
                    "id": 1,
                    "name": "unchanged_ids",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "SensorEnforcement",
            "fields": [
              {
                "id": 1,
                "name": "enforcement",
                "type": "storage.EnforcementAction"
              },
              {
                "id": 2,
                "name": "deployment",
                "type": "DeploymentEnforcement"
              },
              {
                "id": 3,
                "name": "container_instance",
                "type": "ContainerInstanceEnforcement"
              }
            ]
          },
          {
            "name": "DeploymentEnforcement",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "deployment_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment_type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "alert_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "policy_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ContainerInstanceEnforcement",
            "fields": [
              {
                "id": 2,
                "name": "pod_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment_enforcement",
                "type": "DeploymentEnforcement"
              }
            ]
          },
          {
            "name": "ScrapeCommand",
            "fields": [
              {
                "id": 1,
                "name": "scrape_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "start_scrape",
                "type": "StartScrape"
              },
              {
                "id": 3,
                "name": "kill_scrape",
                "type": "KillScrape"
              }
            ]
          },
          {
            "name": "StartScrape",
            "fields": [
              {
                "id": 1,
                "name": "hostnames",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "standards",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "KillScrape"
          },
          {
            "name": "ScrapeUpdate",
            "fields": [
              {
                "id": 1,
                "name": "scrape_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "compliance_return",
                "type": "compliance.ComplianceReturn"
              },
              {
                "id": 3,
                "name": "scrape_started",
                "type": "ScrapeStarted"
              },
              {
                "id": 4,
                "name": "scrape_killed",
                "type": "ScrapeKilled"
              }
            ]
          },
          {
            "name": "ScrapeStarted",
            "fields": [
              {
                "id": 1,
                "name": "error_message",
                "type": "string"
              }
            ]
          },
          {
            "name": "ScrapeKilled",
            "fields": [
              {
                "id": 1,
                "name": "error_message",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkPoliciesCommand",
            "fields": [
              {
                "id": 1,
                "name": "seq_id",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "payload",
                "type": "Payload"
              }
            ],
            "messages": [
              {
                "name": "Apply",
                "fields": [
                  {
                    "id": 1,
                    "name": "apply_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "modification",
                    "type": "storage.NetworkPolicyModification"
                  }
                ]
              },
              {
                "name": "Payload",
                "fields": [
                  {
                    "id": 1,
                    "name": "apply",
                    "type": "Apply"
                  }
                ]
              }
            ]
          },
          {
            "name": "NetworkPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "seq_id",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "payload",
                "type": "Payload"
              }
            ],
            "messages": [
              {
                "name": "Apply",
                "fields": [
                  {
                    "id": 1,
                    "name": "apply_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "undo_modification",
                    "type": "storage.NetworkPolicyModification"
                  }
                ]
              },
              {
                "name": "Error",
                "fields": [
                  {
                    "id": 1,
                    "name": "message",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Payload",
                "fields": [
                  {
                    "id": 1,
                    "name": "error",
                    "type": "Error"
                  },
                  {
                    "id": 2,
                    "name": "apply",
                    "type": "Apply"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/central/compliance_operator.proto"
          },
          {
            "path": "internalapi/compliance/compliance_data.proto"
          },
          {
            "path": "storage/alert.proto"
          },
          {
            "path": "storage/cluster.proto"
          },
          {
            "path": "storage/compliance_operator.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/image_integration.proto"
          },
          {
            "path": "storage/namespace_metadata.proto"
          },
          {
            "path": "storage/network_policy.proto"
          },
          {
            "path": "storage/node.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          },
          {
            "path": "storage/rbac.proto"
          },
          {
            "path": "storage/secret.proto"
          },
          {
            "path": "storage/service_account.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:sensor_iservice.proto",
      "def": {
        "enums": [
          {
            "name": "NodeInventoryACK.Action",
            "enum_fields": [
              {
                "name": "ACK"
              },
              {
                "name": "NACK",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "MsgFromSensor",
            "fields": [
              {
                "id": 7,
                "name": "hash_key",
                "type": "string"
              },
              {
                "id": 8,
                "name": "dedupe_key",
                "type": "string"
              },
              {
                "id": 15,
                "name": "processing_attempt",
                "type": "int32"
              },
              {
                "id": 1,
                "name": "event",
                "type": "SensorEvent"
              },
              {
                "id": 2,
                "name": "network_flow_update",
                "type": "NetworkFlowUpdate"
              },
              {
                "id": 3,
                "name": "scrape_update",
                "type": "ScrapeUpdate"
              },
              {
                "id": 4,
                "name": "network_policies_response",
                "type": "NetworkPoliciesResponse"
              },
              {
                "id": 5,
                "name": "cluster_status_update",
                "type": "ClusterStatusUpdate"
              },
              {
                "id": 6,
                "name": "telemetry_data_response",
                "type": "PullTelemetryDataResponse"
              },
              {
                "id": 9,
                "name": "cluster_health_info",
                "type": "RawClusterHealthInfo"
              },
              {
                "id": 10,
                "name": "hello",
                "type": "SensorHello"
              },
              {
                "id": 11,
                "name": "audit_log_status_info",
                "type": "AuditLogStatusInfo"
              },
              {
                "id": 12,
                "name": "issue_local_scanner_certs_request",
                "type": "IssueLocalScannerCertsRequest"
              },
              {
                "id": 13,
                "name": "cluster_metrics",
                "type": "ClusterMetrics"
              },
              {
                "id": 14,
                "name": "process_listening_on_port_update",
                "type": "ProcessListeningOnPortsUpdate"
              },
              {
                "id": 16,
                "name": "compliance_operator_info",
                "type": "ComplianceOperatorInfo"
              },
              {
                "id": 17,
                "name": "compliance_response",
                "type": "ComplianceResponse"
              },
              {
                "id": 18,
                "name": "deployment_enhancement_response",
                "type": "DeploymentEnhancementResponse"
              }
            ]
          },
          {
            "name": "ReassessPolicies"
          },
          {
            "name": "ReprocessDeployments"
          },
          {
            "name": "MsgToSensor",
            "fields": [
              {
                "id": 1,
                "name": "enforcement",
                "type": "SensorEnforcement"
              },
              {
                "id": 2,
                "name": "scrape_command",
                "type": "ScrapeCommand"
              },
              {
                "id": 3,
                "name": "network_policies_command",
                "type": "NetworkPoliciesCommand"
              },
              {
                "id": 4,
                "name": "cluster_config",
                "type": "ClusterConfig"
              },
              {
                "id": 5,
                "name": "sensor_upgrade_trigger",
                "type": "SensorUpgradeTrigger"
              },
              {
                "id": 6,
                "name": "telemetry_data_request",
                "type": "PullTelemetryDataRequest"
              },
              {
                "id": 7,
                "name": "policy_sync",
                "type": "PolicySync"
              },
              {
                "id": 8,
                "name": "reassess_policies",
                "type": "ReassessPolicies"
              },
              {
                "id": 9,
                "name": "baseline_sync",
                "type": "BaselineSync"
              },
              {
                "id": 10,
                "name": "cancel_pull_telemetry_data_request",
                "type": "CancelPullTelemetryDataRequest"
              },
              {
                "id": 11,
                "name": "push_network_entities_request",
                "type": "PushNetworkEntitiesRequest"
              },
              {
                "id": 12,
                "name": "hello",
                "type": "CentralHello"
              },
              {
                "id": 13,
                "name": "network_baseline_sync",
                "type": "NetworkBaselineSync"
              },
              {
                "id": 14,
                "name": "audit_log_sync",
                "type": "AuditLogSync"
              },
              {
                "id": 15,
                "name": "reprocess_deployment",
                "type": "ReprocessDeployment"
              },
              {
                "id": 16,
                "name": "invalidate_image_cache",
                "type": "InvalidateImageCache"
              },
              {
                "id": 17,
                "name": "issue_local_scanner_certs_response",
                "type": "IssueLocalScannerCertsResponse"
              },
              {
                "id": 18,
                "name": "updated_image",
                "type": "storage.Image"
              },
              {
                "id": 19,
                "name": "reprocess_deployments",
                "type": "ReprocessDeployments"
              },
              {
                "id": 20,
                "name": "node_inventory_ack",
                "type": "NodeInventoryACK"
              },
              {
                "id": 21,
                "name": "delegated_registry_config",
                "type": "DelegatedRegistryConfig"
              },
              {
                "id": 22,
                "name": "scan_image",
                "type": "ScanImage"
              },
              {
                "id": 23,
                "name": "image_integrations",
                "type": "ImageIntegrations"
              },
              {
                "id": 24,
                "name": "compliance_request",
                "type": "ComplianceRequest"
              },
              {
                "id": 25,
                "name": "cluster_health_response",
                "type": "ClusterHealthResponse"
              },
              {
                "id": 26,
                "name": "deduper_state",
                "type": "DeduperState"
              },
              {
                "id": 27,
                "name": "deployment_enhancement_request",
                "type": "DeploymentEnhancementRequest"
              },
              {
                "id": 28,
                "name": "collector_runtime_config",
                "type": "common.CollectorRuntimeConfig"
              }
            ]
          },
          {
            "name": "DeduperState",
            "fields": [
              {
                "id": 2,
                "name": "current",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "total",
                "type": "int32"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "resource_hashes",
                  "type": "uint64"
                }
              }
            ]
          },
          {
            "name": "NodeInventoryACK",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "action",
                "type": "Action"
              }
            ]
          },
          {
            "name": "AuditLogSync",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "node_audit_log_file_states",
                  "type": "storage.AuditLogFileState"
                }
              }
            ]
          },
          {
            "name": "AuditLogStatusInfo",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "node_audit_log_file_states",
                  "type": "storage.AuditLogFileState"
                }
              }
            ]
          },
          {
            "name": "ReprocessDeployment",
            "fields": [
              {
                "id": 1,
                "name": "deployment_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "InvalidateImageCache",
            "fields": [
              {
                "id": 1,
                "name": "image_keys",
                "type": "ImageKey",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ImageKey",
                "fields": [
                  {
                    "id": 1,
                    "name": "image_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "image_full_name",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SensorService",
            "rpcs": [
              {
                "name": "Communicate",
                "in_type": "MsgFromSensor",
                "out_type": "MsgToSensor",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/central/baseline_sync.proto"
          },
          {
            "path": "internalapi/central/cluster_config.proto"
          },
          {
            "path": "internalapi/central/cluster_metrics.proto"
          },
          {
            "path": "internalapi/central/cluster_status.proto"
          },
          {
            "path": "internalapi/central/compliance_operator.proto"
          },
          {
            "path": "internalapi/central/delegated_registry_config.proto"
          },
          {
            "path": "internalapi/central/deployment_enhancement.proto"
          },
          {
            "path": "internalapi/central/hello.proto"
          },
          {
            "path": "internalapi/central/image.proto"
          },
          {
            "path": "internalapi/central/local_scanner.proto"
          },
          {
            "path": "internalapi/central/network_baseline_sync.proto"
          },
          {
            "path": "internalapi/central/network_flow.proto"
          },
          {
            "path": "internalapi/central/policy_sync.proto"
          },
          {
            "path": "internalapi/central/process_listening_on_ports_update.proto"
          },
          {
            "path": "internalapi/central/sensor_events.proto"
          },
          {
            "path": "internalapi/central/sensor_upgrade.proto"
          },
          {
            "path": "internalapi/central/telemetry.proto"
          },
          {
            "path": "internalapi/common/collector_runtime_config.proto"
          },
          {
            "path": "storage/cluster.proto"
          },
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:sensor_upgrade.proto",
      "def": {
        "messages": [
          {
            "name": "SensorUpgradeTrigger",
            "fields": [
              {
                "id": 1,
                "name": "upgrade_process_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image",
                "type": "string"
              },
              {
                "id": 3,
                "name": "command",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "env_vars",
                "type": "EnvVarDef",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "EnvVarDef",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "source_env_var",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "default_value",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:sensor_upgrade_ctrl_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "UpgradeCheckInFromUpgraderRequest",
            "fields": [
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "upgrade_process_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "current_workflow",
                "type": "string"
              },
              {
                "id": 3,
                "name": "last_executed_stage",
                "type": "string"
              },
              {
                "id": 4,
                "name": "last_executed_stage_error",
                "type": "string"
              }
            ]
          },
          {
            "name": "UpgradeCheckInFromUpgraderResponse",
            "fields": [
              {
                "id": 1,
                "name": "workflow_to_execute",
                "type": "string"
              }
            ]
          },
          {
            "name": "UpgradeCheckInFromSensorRequest",
            "fields": [
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "upgrade_process_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "launch_error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "pod_states",
                "type": "UpgraderPodStates"
              },
              {
                "id": 4,
                "name": "deployment_gone",
                "type": "bool"
              }
            ],
            "messages": [
              {
                "name": "PodErrorCondition",
                "fields": [
                  {
                    "id": 1,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "image_related",
                    "type": "bool"
                  }
                ]
              },
              {
                "name": "UpgraderPodState",
                "fields": [
                  {
                    "id": 1,
                    "name": "pod_name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "started",
                    "type": "bool"
                  },
                  {
                    "id": 3,
                    "name": "error",
                    "type": "PodErrorCondition"
                  }
                ]
              },
              {
                "name": "UpgraderPodStates",
                "fields": [
                  {
                    "id": 1,
                    "name": "states",
                    "type": "UpgraderPodState",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "UpgradeCheckInResponseDetails",
            "messages": [
              {
                "name": "NoUpgradeInProgress"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SensorUpgradeControlService",
            "rpcs": [
              {
                "name": "UpgradeCheckInFromUpgrader",
                "in_type": "UpgradeCheckInFromUpgraderRequest",
                "out_type": "UpgradeCheckInFromUpgraderResponse"
              },
              {
                "name": "UpgradeCheckInFromSensor",
                "in_type": "UpgradeCheckInFromSensorRequest",
                "out_type": "google.protobuf.Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/empty.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:central:/:telemetry.proto",
      "def": {
        "enums": [
          {
            "name": "PullTelemetryDataRequest.TelemetryDataType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "KUBERNETES_INFO",
                "integer": 1
              },
              {
                "name": "CLUSTER_INFO",
                "integer": 2
              },
              {
                "name": "METRICS",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CancelPullTelemetryDataRequest",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "PullTelemetryDataRequest",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "data_type",
                "type": "TelemetryDataType"
              },
              {
                "id": 3,
                "name": "timeout_ms",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "since",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "with_compliance_operator",
                "type": "bool"
              }
            ]
          },
          {
            "name": "TelemetryResponsePayload",
            "fields": [
              {
                "id": 1,
                "name": "end_of_stream",
                "type": "EndOfStream"
              },
              {
                "id": 2,
                "name": "kubernetes_info",
                "type": "KubernetesInfo"
              },
              {
                "id": 3,
                "name": "cluster_info",
                "type": "ClusterInfo"
              },
              {
                "id": 4,
                "name": "metrics_info",
                "type": "KubernetesInfo"
              }
            ],
            "messages": [
              {
                "name": "EndOfStream",
                "fields": [
                  {
                    "id": 1,
                    "name": "error_message",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "KubernetesInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "files",
                    "type": "File",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "File",
                    "fields": [
                      {
                        "id": 1,
                        "name": "path",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "contents",
                        "type": "bytes"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ClusterInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "chunk",
                    "type": "bytes"
                  }
                ]
              }
            ]
          },
          {
            "name": "PullTelemetryDataResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "payload",
                "type": "TelemetryResponsePayload"
              }
            ]
          },
          {
            "name": "TelemetryConfig",
            "fields": [
              {
                "id": 1,
                "name": "user_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 3,
                "name": "storage_key_v1",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:common:/:boolean-operator.proto",
      "def": {
        "enums": [
          {
            "name": "BooleanOperator",
            "enum_fields": [
              {
                "name": "OR"
              },
              {
                "name": "AND",
                "integer": 1
              }
            ]
          }
        ],
        "package": {
          "name": "common"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:common:/:collector_runtime_config.proto",
      "def": {
        "enums": [
          {
            "name": "RuntimeFeature",
            "enum_fields": [
              {
                "name": "PROCESSES"
              },
              {
                "name": "NETWORK_CONNECTIONS",
                "integer": 1
              },
              {
                "name": "NETWORK_ENDPOINTS",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Status",
            "fields": [
              {
                "id": 1,
                "name": "process_status",
                "type": "ProcessStatus"
              },
              {
                "id": 2,
                "name": "network_connection_status",
                "type": "NetworkConnectionStatus"
              },
              {
                "id": 3,
                "name": "network_endpoint_status",
                "type": "NetworkEndpointStatus"
              }
            ],
            "messages": [
              {
                "name": "ProcessStatus",
                "fields": [
                  {
                    "id": 1,
                    "name": "enabled",
                    "type": "bool"
                  }
                ]
              },
              {
                "name": "NetworkConnectionStatus",
                "fields": [
                  {
                    "id": 1,
                    "name": "enabled",
                    "type": "bool"
                  },
                  {
                    "id": 2,
                    "name": "aggregate_external",
                    "type": "bool"
                  }
                ]
              },
              {
                "name": "NetworkEndpointStatus",
                "fields": [
                  {
                    "id": 1,
                    "name": "enabled",
                    "type": "bool"
                  },
                  {
                    "id": 2,
                    "name": "processes_listening_on_port",
                    "type": "bool"
                  }
                ]
              }
            ]
          },
          {
            "name": "RuntimeFeatureConfig",
            "fields": [
              {
                "id": 1,
                "name": "feature",
                "type": "RuntimeFeature"
              },
              {
                "id": 2,
                "name": "default_status",
                "type": "Status"
              },
              {
                "id": 3,
                "name": "rules",
                "type": "RuntimeRule",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "RuntimeRule",
                "fields": [
                  {
                    "id": 1,
                    "name": "resource_collection",
                    "type": "ResourceCollection"
                  },
                  {
                    "id": 2,
                    "name": "status",
                    "type": "Status"
                  }
                ]
              }
            ]
          },
          {
            "name": "CollectorRuntimeConfig",
            "fields": [
              {
                "id": 1,
                "name": "runtime_feature_config",
                "type": "RuntimeFeatureConfig",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/common/resource_collection.proto"
          }
        ],
        "package": {
          "name": "common"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:common:/:resource_collection.proto",
      "def": {
        "enums": [
          {
            "name": "MatchType",
            "enum_fields": [
              {
                "name": "EXACT"
              },
              {
                "name": "REGEX",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ResourceCollection",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "created_by",
                "type": "SlimUser"
              },
              {
                "id": 7,
                "name": "updated_by",
                "type": "SlimUser"
              },
              {
                "id": 8,
                "name": "resource_selectors",
                "type": "ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "embedded_collections",
                "type": "EmbeddedResourceCollection",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "EmbeddedResourceCollection",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ResourceSelector",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "SelectorRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SelectorRule",
            "fields": [
              {
                "id": 1,
                "name": "field_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "operator",
                "type": "BooleanOperator"
              },
              {
                "id": 3,
                "name": "values",
                "type": "RuleValue",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RuleValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              },
              {
                "id": 2,
                "name": "match_type",
                "type": "MatchType"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "internalapi/common/boolean-operator.proto"
          },
          {
            "path": "internalapi/common/slim-user.proto"
          }
        ],
        "package": {
          "name": "common"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:common:/:slim-user.proto",
      "def": {
        "messages": [
          {
            "name": "SlimUser",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "common"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:compliance:/:compliance_data.proto",
      "def": {
        "messages": [
          {
            "name": "GZIPDataChunk",
            "fields": [
              {
                "id": 1,
                "name": "gzip",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "File",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "user",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "user_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "group",
                "type": "uint32"
              },
              {
                "id": 5,
                "name": "group_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "permissions",
                "type": "uint32"
              },
              {
                "id": 7,
                "name": "content",
                "type": "bytes"
              },
              {
                "id": 8,
                "name": "is_dir",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "children",
                "type": "File",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CommandLine",
            "fields": [
              {
                "id": 1,
                "name": "process",
                "type": "string"
              },
              {
                "id": 2,
                "name": "args",
                "type": "Args",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Args",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "file",
                    "type": "File"
                  }
                ]
              }
            ]
          },
          {
            "name": "InsecureRegistriesConfig",
            "fields": [
              {
                "id": 1,
                "name": "insecure_registries",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "insecure_cidrs",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ContainerRuntimeInfo",
            "fields": [
              {
                "id": 1,
                "name": "insecure_registries",
                "type": "InsecureRegistriesConfig"
              }
            ]
          },
          {
            "name": "ComplianceStandardResult",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "node_check_results",
                  "type": "storage.ComplianceResultValue"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "cluster_check_results",
                  "type": "storage.ComplianceResultValue"
                }
              }
            ]
          },
          {
            "name": "ComplianceReturn",
            "fields": [
              {
                "id": 1,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scrape_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "docker_data",
                "type": "GZIPDataChunk"
              },
              {
                "id": 9,
                "name": "container_runtime_info",
                "type": "ContainerRuntimeInfo"
              },
              {
                "id": 7,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "evidence",
                "type": "GZIPDataChunk"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "command_lines",
                  "type": "CommandLine"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "files",
                  "type": "File"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "systemd_files",
                  "type": "File"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/compliance.proto"
          }
        ],
        "package": {
          "name": "compliance"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:scanner:/:v4:/:common.proto",
      "def": {
        "messages": [
          {
            "name": "Contents",
            "fields": [
              {
                "id": 1,
                "name": "packages",
                "type": "Package",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "distributions",
                "type": "Distribution",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "repositories",
                "type": "Repository",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "environments",
                  "type": "Environment.List"
                }
              }
            ]
          },
          {
            "name": "Package",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "normalized_version",
                "type": "NormalizedVersion"
              },
              {
                "id": 5,
                "name": "fixed_in_version",
                "type": "string"
              },
              {
                "id": 6,
                "name": "kind",
                "type": "string"
              },
              {
                "id": 7,
                "name": "source",
                "type": "Package"
              },
              {
                "id": 8,
                "name": "package_db",
                "type": "string"
              },
              {
                "id": 9,
                "name": "repository_hint",
                "type": "string"
              },
              {
                "id": 10,
                "name": "module",
                "type": "string"
              },
              {
                "id": 11,
                "name": "arch",
                "type": "string"
              },
              {
                "id": 12,
                "name": "cpe",
                "type": "string"
              }
            ]
          },
          {
            "name": "NormalizedVersion",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string"
              },
              {
                "id": 2,
                "name": "v",
                "type": "int32",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Distribution",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "did",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "version_code_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "version_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "arch",
                "type": "string"
              },
              {
                "id": 8,
                "name": "cpe",
                "type": "string"
              },
              {
                "id": 9,
                "name": "pretty_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "Repository",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "key",
                "type": "string"
              },
              {
                "id": 4,
                "name": "uri",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cpe",
                "type": "string"
              }
            ]
          },
          {
            "name": "Environment",
            "fields": [
              {
                "id": 1,
                "name": "package_db",
                "type": "string"
              },
              {
                "id": 2,
                "name": "introduced_in",
                "type": "string"
              },
              {
                "id": 3,
                "name": "distribution_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "repository_ids",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "List",
                "fields": [
                  {
                    "id": 1,
                    "name": "environments",
                    "type": "Environment",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "scanner.v4"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:scanner:/:v4:/:index_report.proto",
      "def": {
        "messages": [
          {
            "name": "IndexReport",
            "fields": [
              {
                "id": 1,
                "name": "hash_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "state",
                "type": "string"
              },
              {
                "id": 3,
                "name": "success",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "err",
                "type": "string"
              },
              {
                "id": 5,
                "name": "contents",
                "type": "Contents"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/scanner/v4/common.proto"
          }
        ],
        "package": {
          "name": "scanner.v4"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:scanner:/:v4:/:indexer_service.proto",
      "def": {
        "messages": [
          {
            "name": "ContainerImageLocator",
            "fields": [
              {
                "id": 1,
                "name": "url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "username",
                "type": "string"
              },
              {
                "id": 3,
                "name": "password",
                "type": "string"
              },
              {
                "id": 4,
                "name": "insecure_skip_tls_verify",
                "type": "bool"
              }
            ]
          },
          {
            "name": "CreateIndexReportRequest",
            "fields": [
              {
                "id": 1,
                "name": "hash_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_image",
                "type": "ContainerImageLocator"
              }
            ]
          },
          {
            "name": "GetIndexReportRequest",
            "fields": [
              {
                "id": 1,
                "name": "hash_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "HasIndexReportRequest",
            "fields": [
              {
                "id": 1,
                "name": "hash_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "HasIndexReportResponse",
            "fields": [
              {
                "id": 1,
                "name": "exists",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetOrCreateIndexReportRequest",
            "fields": [
              {
                "id": 1,
                "name": "hash_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_image",
                "type": "ContainerImageLocator"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "Indexer",
            "rpcs": [
              {
                "name": "CreateIndexReport",
                "in_type": "CreateIndexReportRequest",
                "out_type": "IndexReport"
              },
              {
                "name": "GetIndexReport",
                "in_type": "GetIndexReportRequest",
                "out_type": "IndexReport"
              },
              {
                "name": "GetOrCreateIndexReport",
                "in_type": "GetOrCreateIndexReportRequest",
                "out_type": "IndexReport"
              },
              {
                "name": "HasIndexReport",
                "in_type": "HasIndexReportRequest",
                "out_type": "HasIndexReportResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/scanner/v4/index_report.proto"
          }
        ],
        "package": {
          "name": "scanner.v4"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:scanner:/:v4:/:matcher_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetVulnerabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "hash_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "contents",
                "type": "Contents"
              }
            ]
          },
          {
            "name": "Metadata",
            "fields": [
              {
                "id": 1,
                "name": "LastVulnerabilityUpdate",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "Matcher",
            "rpcs": [
              {
                "name": "GetVulnerabilities",
                "in_type": "GetVulnerabilitiesRequest",
                "out_type": "VulnerabilityReport"
              },
              {
                "name": "GetMetadata",
                "in_type": "google.protobuf.Empty",
                "out_type": "Metadata"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/empty.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "internalapi/scanner/v4/common.proto"
          },
          {
            "path": "internalapi/scanner/v4/vulnerability_report.proto"
          }
        ],
        "package": {
          "name": "scanner.v4"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:scanner:/:v4:/:nodeindexer_service.proto",
      "def": {
        "messages": [
          {
            "name": "CreateNodeIndexReportRequest"
          }
        ],
        "services": [
          {
            "name": "NodeIndexer",
            "rpcs": [
              {
                "name": "CreateNodeIndexReport",
                "in_type": "CreateNodeIndexReportRequest",
                "out_type": "IndexReport"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/scanner/v4/index_report.proto"
          }
        ],
        "package": {
          "name": "scanner.v4"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:scanner:/:v4:/:vulnerability_report.proto",
      "def": {
        "enums": [
          {
            "name": "Vulnerability.Severity",
            "enum_fields": [
              {
                "name": "SEVERITY_UNSPECIFIED"
              },
              {
                "name": "SEVERITY_LOW",
                "integer": 1
              },
              {
                "name": "SEVERITY_MODERATE",
                "integer": 2
              },
              {
                "name": "SEVERITY_IMPORTANT",
                "integer": 3
              },
              {
                "name": "SEVERITY_CRITICAL",
                "integer": 4
              }
            ]
          },
          {
            "name": "VulnerabilityReport.Note",
            "enum_fields": [
              {
                "name": "NOTE_UNSPECIFIED"
              },
              {
                "name": "NOTE_OS_UNKNOWN",
                "integer": 1
              },
              {
                "name": "NOTE_OS_UNSUPPORTED",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "VulnerabilityReport",
            "fields": [
              {
                "id": 1,
                "name": "hash_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "contents",
                "type": "Contents"
              },
              {
                "id": 5,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "vulnerabilities",
                  "type": "Vulnerability"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "package_vulnerabilities",
                  "type": "StringList"
                }
              }
            ],
            "messages": [
              {
                "name": "Vulnerability",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "description",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "issued",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 5,
                    "name": "link",
                    "type": "string"
                  },
                  {
                    "id": 6,
                    "name": "severity",
                    "type": "string"
                  },
                  {
                    "id": 7,
                    "name": "normalized_severity",
                    "type": "Severity"
                  },
                  {
                    "id": 8,
                    "name": "package_id",
                    "type": "string"
                  },
                  {
                    "id": 9,
                    "name": "distribution_id",
                    "type": "string"
                  },
                  {
                    "id": 10,
                    "name": "repository_id",
                    "type": "string"
                  },
                  {
                    "id": 11,
                    "name": "fixed_in_version",
                    "type": "string"
                  },
                  {
                    "id": 12,
                    "name": "cvss",
                    "type": "CVSS"
                  }
                ],
                "messages": [
                  {
                    "name": "CVSS",
                    "fields": [
                      {
                        "id": 1,
                        "name": "v2",
                        "type": "V2"
                      },
                      {
                        "id": 2,
                        "name": "v3",
                        "type": "V3"
                      }
                    ],
                    "messages": [
                      {
                        "name": "V2",
                        "fields": [
                          {
                            "id": 1,
                            "name": "base_score",
                            "type": "float"
                          },
                          {
                            "id": 2,
                            "name": "vector",
                            "type": "string"
                          }
                        ]
                      },
                      {
                        "name": "V3",
                        "fields": [
                          {
                            "id": 1,
                            "name": "base_score",
                            "type": "float"
                          },
                          {
                            "id": 2,
                            "name": "vector",
                            "type": "string"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "StringList",
            "fields": [
              {
                "id": 1,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "internalapi/scanner/v4/common.proto"
          }
        ],
        "package": {
          "name": "scanner.v4"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:sensor:/:admission_control.proto",
      "def": {
        "messages": [
          {
            "name": "AdmissionControlSettings",
            "fields": [
              {
                "id": 1,
                "name": "cluster_config",
                "type": "storage.DynamicClusterConfig"
              },
              {
                "id": 2,
                "name": "enforced_deploy_time_policies",
                "type": "storage.PolicyList"
              },
              {
                "id": 3,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "cache_version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "central_endpoint",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "runtime_policies",
                "type": "storage.PolicyList"
              }
            ]
          },
          {
            "name": "AdmissionControlAlerts",
            "fields": [
              {
                "id": 1,
                "name": "alert_results",
                "type": "central.AlertResults",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AdmCtrlUpdateResourceRequest",
            "fields": [
              {
                "id": 1,
                "name": "action",
                "type": "central.ResourceAction"
              },
              {
                "id": 2,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 3,
                "name": "pod",
                "type": "storage.Pod"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "storage.NamespaceMetadata"
              },
              {
                "id": 5,
                "name": "synced",
                "type": "ResourcesSynced"
              }
            ],
            "messages": [
              {
                "name": "ResourcesSynced"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "internalapi/central/sensor_events.proto"
          },
          {
            "path": "storage/cluster.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/namespace_metadata.proto"
          },
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:sensor:/:admission_control_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "MsgFromAdmissionControl"
          },
          {
            "name": "MsgToAdmissionControl",
            "fields": [
              {
                "id": 1,
                "name": "settings_push",
                "type": "AdmissionControlSettings"
              },
              {
                "id": 2,
                "name": "update_resource_request",
                "type": "AdmCtrlUpdateResourceRequest"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AdmissionControlManagementService",
            "rpcs": [
              {
                "name": "Communicate",
                "in_type": "MsgFromAdmissionControl",
                "out_type": "MsgToAdmissionControl",
                "in_streamed": true,
                "out_streamed": true
              },
              {
                "name": "PolicyAlerts",
                "in_type": "AdmissionControlAlerts",
                "out_type": "google.protobuf.Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/empty.proto"
          },
          {
            "path": "internalapi/sensor/admission_control.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:sensor:/:cert_distribution_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "FetchCertificateRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_type",
                "type": "storage.ServiceType"
              },
              {
                "id": 2,
                "name": "service_account_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "FetchCertificateResponse",
            "fields": [
              {
                "id": 1,
                "name": "pem_cert",
                "type": "string"
              },
              {
                "id": 2,
                "name": "pem_key",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CertDistributionService",
            "rpcs": [
              {
                "name": "FetchCertificate",
                "in_type": "FetchCertificateRequest",
                "out_type": "FetchCertificateResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/service_identity.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:sensor:/:collector.proto",
      "def": {
        "messages": [
          {
            "name": "CollectorRegisterRequest",
            "fields": [
              {
                "id": 1,
                "name": "hostname",
                "type": "string"
              },
              {
                "id": 2,
                "name": "instance_id",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:sensor:/:collector_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "MsgToCollector",
            "fields": [
              {
                "id": 1,
                "name": "config_with_cluster",
                "type": "common.CollectorRuntimeConfig"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CollectorService",
            "rpcs": [
              {
                "name": "Communicate",
                "in_type": "google.protobuf.Empty",
                "out_type": "MsgToCollector",
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/empty.proto"
          },
          {
            "path": "internalapi/common/collector_runtime_config.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:sensor:/:compliance_iservice.proto",
      "def": {
        "enums": [
          {
            "name": "NodeInventoryACK.Action",
            "enum_fields": [
              {
                "name": "ACK"
              },
              {
                "name": "NACK",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetScrapeConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scrape_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "AuditEvents",
            "fields": [
              {
                "id": 1,
                "name": "events",
                "type": "storage.KubernetesEvent",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MsgFromCompliance",
            "fields": [
              {
                "id": 1,
                "name": "node",
                "type": "string"
              },
              {
                "id": 2,
                "name": "return",
                "type": "compliance.ComplianceReturn"
              },
              {
                "id": 3,
                "name": "audit_events",
                "type": "AuditEvents"
              },
              {
                "id": 4,
                "name": "node_inventory",
                "type": "storage.NodeInventory"
              }
            ]
          },
          {
            "name": "MsgToCompliance",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "ScrapeConfig"
              },
              {
                "id": 2,
                "name": "trigger",
                "type": "TriggerRun"
              },
              {
                "id": 3,
                "name": "audit_log_collection_request",
                "type": "AuditLogCollectionRequest"
              },
              {
                "id": 4,
                "name": "ack",
                "type": "NodeInventoryACK"
              }
            ],
            "messages": [
              {
                "name": "ScrapeConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "container_runtime",
                    "type": "storage.ContainerRuntime"
                  },
                  {
                    "id": 2,
                    "name": "is_master_node",
                    "type": "bool"
                  }
                ]
              },
              {
                "name": "TriggerRun",
                "fields": [
                  {
                    "id": 1,
                    "name": "scrape_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "standard_ids",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "AuditLogCollectionRequest",
                "fields": [
                  {
                    "id": 1,
                    "name": "start_req",
                    "type": "StartRequest"
                  },
                  {
                    "id": 2,
                    "name": "stop_req",
                    "type": "StopRequest"
                  }
                ],
                "messages": [
                  {
                    "name": "StartRequest",
                    "fields": [
                      {
                        "id": 1,
                        "name": "cluster_id",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "collect_start_state",
                        "type": "storage.AuditLogFileState"
                      }
                    ]
                  },
                  {
                    "name": "StopRequest"
                  }
                ]
              },
              {
                "name": "NodeInventoryACK",
                "fields": [
                  {
                    "id": 1,
                    "name": "action",
                    "type": "Action"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceService",
            "rpcs": [
              {
                "name": "Communicate",
                "in_type": "MsgFromCompliance",
                "out_type": "MsgToCompliance",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/compliance/compliance_data.proto"
          },
          {
            "path": "storage/cluster.proto"
          },
          {
            "path": "storage/container_runtime.proto"
          },
          {
            "path": "storage/kube_event.proto"
          },
          {
            "path": "storage/node.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:sensor:/:deployment_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "GetDeploymentForPodRequest",
            "fields": [
              {
                "id": 1,
                "name": "pod_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DeploymentService",
            "rpcs": [
              {
                "name": "GetDeploymentForPod",
                "in_type": "GetDeploymentForPodRequest",
                "out_type": "storage.Deployment"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/deployment.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:sensor:/:image_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "GetImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.ContainerImage"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scan_inline",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetImageResponse",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.Image"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImageService",
            "rpcs": [
              {
                "name": "GetImage",
                "in_type": "GetImageRequest",
                "out_type": "GetImageResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:sensor:/:network_connection_info.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkConnectionInfo",
            "fields": [
              {
                "id": 1,
                "name": "updated_connections",
                "type": "NetworkConnection",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "updated_endpoints",
                "type": "NetworkEndpoint",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NetworkConnection",
            "fields": [
              {
                "id": 1,
                "name": "socket_family",
                "type": "SocketFamily"
              },
              {
                "id": 2,
                "name": "local_address",
                "type": "NetworkAddress"
              },
              {
                "id": 3,
                "name": "remote_address",
                "type": "NetworkAddress"
              },
              {
                "id": 4,
                "name": "protocol",
                "type": "storage.L4Protocol"
              },
              {
                "id": 5,
                "name": "role",
                "type": "ClientServerRole"
              },
              {
                "id": 6,
                "name": "container_id",
                "type": "string"
              },
              {
                "id": 11,
                "name": "close_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NetworkEndpoint",
            "fields": [
              {
                "id": 1,
                "name": "socket_family",
                "type": "SocketFamily"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "storage.L4Protocol"
              },
              {
                "id": 3,
                "name": "listen_address",
                "type": "NetworkAddress"
              },
              {
                "id": 4,
                "name": "container_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "close_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "originator",
                "type": "storage.NetworkProcessUniqueKey"
              }
            ]
          },
          {
            "name": "NetworkAddress",
            "fields": [
              {
                "id": 1,
                "name": "address_data",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "ip_network",
                "type": "bytes"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "internalapi/sensor/network_enums.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:sensor:/:network_connection_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkConnectionInfoMessage",
            "fields": [
              {
                "id": 1,
                "name": "register",
                "type": "CollectorRegisterRequest"
              },
              {
                "id": 2,
                "name": "info",
                "type": "NetworkConnectionInfo"
              }
            ]
          },
          {
            "name": "NetworkFlowsControlMessage",
            "fields": [
              {
                "id": 1,
                "name": "public_ip_addresses",
                "type": "IPAddressList"
              },
              {
                "id": 2,
                "name": "ip_networks",
                "type": "IPNetworkList"
              }
            ]
          },
          {
            "name": "IPAddressList",
            "fields": [
              {
                "id": 1,
                "name": "ipv4_addresses",
                "type": "fixed32",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "ipv6_addresses",
                "type": "fixed64",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IPNetworkList",
            "fields": [
              {
                "id": 1,
                "name": "ipv4_networks",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "ipv6_networks",
                "type": "bytes"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NetworkConnectionInfoService",
            "rpcs": [
              {
                "name": "PushNetworkConnectionInfo",
                "in_type": "NetworkConnectionInfoMessage",
                "out_type": "NetworkFlowsControlMessage",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/sensor/collector.proto"
          },
          {
            "path": "internalapi/sensor/network_connection_info.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:sensor:/:network_enums.proto",
      "def": {
        "enums": [
          {
            "name": "ClientServerRole",
            "enum_fields": [
              {
                "name": "ROLE_UNKNOWN"
              },
              {
                "name": "ROLE_SERVER",
                "integer": 1
              },
              {
                "name": "ROLE_CLIENT",
                "integer": 2
              }
            ]
          },
          {
            "name": "SocketFamily",
            "enum_fields": [
              {
                "name": "SOCKET_FAMILY_UNKNOWN"
              },
              {
                "name": "SOCKET_FAMILY_IPV4",
                "integer": 1
              },
              {
                "name": "SOCKET_FAMILY_IPV6",
                "integer": 2
              }
            ]
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:sensor:/:signal_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "SignalStreamMessage",
            "fields": [
              {
                "id": 1,
                "name": "collector_register_request",
                "type": "CollectorRegisterRequest"
              },
              {
                "id": 2,
                "name": "signal",
                "type": "v1.Signal"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SignalService",
            "rpcs": [
              {
                "name": "PushSignals",
                "in_type": "SignalStreamMessage",
                "out_type": "v1.Empty",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/signal.proto"
          },
          {
            "path": "internalapi/sensor/collector.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "proto:/:internalapi:/:wrapper:/:splunk_alert.proto",
      "def": {
        "messages": [
          {
            "name": "SplunkEvent",
            "fields": [
              {
                "id": 1,
                "name": "event",
                "type": "google.protobuf.Any"
              },
              {
                "id": 2,
                "name": "source",
                "type": "string"
              },
              {
                "id": 3,
                "name": "sourcetype",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "wrapper"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:active_component.proto",
      "def": {
        "messages": [
          {
            "name": "ActiveComponent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "component_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "active_contexts_slice",
                "type": "ActiveContext",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "DEPRECATED_active_contexts",
                  "type": "ActiveContext"
                }
              }
            ],
            "messages": [
              {
                "name": "ActiveContext",
                "fields": [
                  {
                    "id": 1,
                    "name": "container_name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "image_id",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:administration_event.proto",
      "def": {
        "enums": [
          {
            "name": "AdministrationEventType",
            "enum_fields": [
              {
                "name": "ADMINISTRATION_EVENT_TYPE_UNKNOWN"
              },
              {
                "name": "ADMINISTRATION_EVENT_TYPE_GENERIC",
                "integer": 1
              },
              {
                "name": "ADMINISTRATION_EVENT_TYPE_LOG_MESSAGE",
                "integer": 2
              }
            ]
          },
          {
            "name": "AdministrationEventLevel",
            "enum_fields": [
              {
                "name": "ADMINISTRATION_EVENT_LEVEL_UNKNOWN"
              },
              {
                "name": "ADMINISTRATION_EVENT_LEVEL_INFO",
                "integer": 1
              },
              {
                "name": "ADMINISTRATION_EVENT_LEVEL_SUCCESS",
                "integer": 2
              },
              {
                "name": "ADMINISTRATION_EVENT_LEVEL_WARNING",
                "integer": 3
              },
              {
                "name": "ADMINISTRATION_EVENT_LEVEL_ERROR",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "AdministrationEvent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "AdministrationEventType"
              },
              {
                "id": 3,
                "name": "level",
                "type": "AdministrationEventLevel"
              },
              {
                "id": 4,
                "name": "message",
                "type": "string"
              },
              {
                "id": 5,
                "name": "hint",
                "type": "string"
              },
              {
                "id": 6,
                "name": "domain",
                "type": "string"
              },
              {
                "id": 7,
                "name": "resource",
                "type": "Resource"
              },
              {
                "id": 8,
                "name": "num_occurrences",
                "type": "int64"
              },
              {
                "id": 9,
                "name": "last_occurred_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "messages": [
              {
                "name": "Resource",
                "fields": [
                  {
                    "id": 1,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:administration_usage.proto",
      "def": {
        "messages": [
          {
            "name": "SecuredUnits",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "num_nodes",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "num_cpu_units",
                "type": "int64"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:alert.proto",
      "def": {
        "enums": [
          {
            "name": "Resource.ResourceType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "SECRETS",
                "integer": 1
              },
              {
                "name": "CONFIGMAPS",
                "integer": 2
              },
              {
                "name": "CLUSTER_ROLES",
                "integer": 3
              },
              {
                "name": "CLUSTER_ROLE_BINDINGS",
                "integer": 4
              },
              {
                "name": "NETWORK_POLICIES",
                "integer": 5
              },
              {
                "name": "SECURITY_CONTEXT_CONSTRAINTS",
                "integer": 6
              },
              {
                "name": "EGRESS_FIREWALLS",
                "integer": 7
              }
            ]
          },
          {
            "name": "Violation.Type",
            "enum_fields": [
              {
                "name": "GENERIC"
              },
              {
                "name": "K8S_EVENT",
                "integer": 1
              },
              {
                "name": "NETWORK_FLOW",
                "integer": 2
              },
              {
                "name": "NETWORK_POLICY",
                "integer": 3
              }
            ]
          },
          {
            "name": "ListAlert.ResourceType",
            "enum_fields": [
              {
                "name": "DEPLOYMENT"
              },
              {
                "name": "SECRETS",
                "integer": 1
              },
              {
                "name": "CONFIGMAPS",
                "integer": 2
              },
              {
                "name": "CLUSTER_ROLES",
                "integer": 3
              },
              {
                "name": "CLUSTER_ROLE_BINDINGS",
                "integer": 4
              },
              {
                "name": "NETWORK_POLICIES",
                "integer": 5
              },
              {
                "name": "SECURITY_CONTEXT_CONSTRAINTS",
                "integer": 6
              },
              {
                "name": "EGRESS_FIREWALLS",
                "integer": 7
              }
            ]
          },
          {
            "name": "ViolationState",
            "enum_fields": [
              {
                "name": "ACTIVE"
              },
              {
                "name": "SNOOZED",
                "integer": 1
              },
              {
                "name": "RESOLVED",
                "integer": 2
              },
              {
                "name": "ATTEMPTED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Alert",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "policy",
                "type": "Policy"
              },
              {
                "id": 3,
                "name": "lifecycle_stage",
                "type": "LifecycleStage"
              },
              {
                "id": 18,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 19,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 20,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 21,
                "name": "namespace_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "deployment",
                "type": "Deployment"
              },
              {
                "id": 15,
                "name": "image",
                "type": "ContainerImage"
              },
              {
                "id": 16,
                "name": "resource",
                "type": "Resource"
              },
              {
                "id": 5,
                "name": "violations",
                "type": "Violation",
                "is_repeated": true
              },
              {
                "id": 13,
                "name": "process_violation",
                "type": "ProcessViolation"
              },
              {
                "id": 6,
                "name": "enforcement",
                "type": "Enforcement"
              },
              {
                "id": 7,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "first_occurred",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 17,
                "name": "resolved_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 11,
                "name": "state",
                "type": "ViolationState"
              },
              {
                "id": 12,
                "name": "snooze_till",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "reserved_ids": [
              14
            ],
            "messages": [
              {
                "name": "Deployment",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 16,
                    "name": "namespace_id",
                    "type": "string"
                  },
                  {
                    "id": 9,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 10,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 11,
                    "name": "containers",
                    "type": "Container",
                    "is_repeated": true
                  },
                  {
                    "id": 15,
                    "name": "inactive",
                    "type": "bool"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 7,
                      "name": "labels",
                      "type": "string"
                    }
                  },
                  {
                    "key_type": "string",
                    "field": {
                      "id": 14,
                      "name": "annotations",
                      "type": "string"
                    }
                  }
                ],
                "messages": [
                  {
                    "name": "Container",
                    "fields": [
                      {
                        "id": 3,
                        "name": "image",
                        "type": "ContainerImage"
                      },
                      {
                        "id": 10,
                        "name": "name",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Resource",
                "fields": [
                  {
                    "id": 1,
                    "name": "resource_type",
                    "type": "ResourceType"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 6,
                    "name": "namespace_id",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Violation",
                "fields": [
                  {
                    "id": 1,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "key_value_attrs",
                    "type": "KeyValueAttrs"
                  },
                  {
                    "id": 7,
                    "name": "network_flow_info",
                    "type": "NetworkFlowInfo"
                  },
                  {
                    "id": 5,
                    "name": "type",
                    "type": "Type"
                  },
                  {
                    "id": 6,
                    "name": "time",
                    "type": "google.protobuf.Timestamp"
                  }
                ],
                "reserved_ids": [
                  2,
                  3
                ],
                "messages": [
                  {
                    "name": "KeyValueAttrs",
                    "fields": [
                      {
                        "id": 1,
                        "name": "attrs",
                        "type": "KeyValueAttr",
                        "is_repeated": true
                      }
                    ],
                    "messages": [
                      {
                        "name": "KeyValueAttr",
                        "fields": [
                          {
                            "id": 1,
                            "name": "key",
                            "type": "string"
                          },
                          {
                            "id": 2,
                            "name": "value",
                            "type": "string"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "NetworkFlowInfo",
                    "fields": [
                      {
                        "id": 1,
                        "name": "protocol",
                        "type": "storage.L4Protocol"
                      },
                      {
                        "id": 2,
                        "name": "source",
                        "type": "Entity"
                      },
                      {
                        "id": 3,
                        "name": "destination",
                        "type": "Entity"
                      }
                    ],
                    "messages": [
                      {
                        "name": "Entity",
                        "fields": [
                          {
                            "id": 1,
                            "name": "name",
                            "type": "string"
                          },
                          {
                            "id": 2,
                            "name": "entity_type",
                            "type": "storage.NetworkEntityInfo.Type"
                          },
                          {
                            "id": 3,
                            "name": "deployment_namespace",
                            "type": "string"
                          },
                          {
                            "id": 5,
                            "name": "deployment_type",
                            "type": "string"
                          },
                          {
                            "id": 6,
                            "name": "port",
                            "type": "int32"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ProcessViolation",
                "fields": [
                  {
                    "id": 1,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "processes",
                    "type": "ProcessIndicator",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "Enforcement",
                "fields": [
                  {
                    "id": 1,
                    "name": "action",
                    "type": "storage.EnforcementAction"
                  },
                  {
                    "id": 2,
                    "name": "message",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListAlert",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "lifecycle_stage",
                "type": "LifecycleStage"
              },
              {
                "id": 3,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "policy",
                "type": "ListAlertPolicy"
              },
              {
                "id": 6,
                "name": "state",
                "type": "ViolationState"
              },
              {
                "id": 7,
                "name": "enforcement_count",
                "type": "int32"
              },
              {
                "id": 9,
                "name": "enforcement_action",
                "type": "storage.EnforcementAction"
              },
              {
                "id": 10,
                "name": "common_entity_info",
                "type": "CommonEntityInfo"
              },
              {
                "id": 5,
                "name": "deployment",
                "type": "ListAlertDeployment"
              },
              {
                "id": 11,
                "name": "resource",
                "type": "ResourceEntity"
              }
            ],
            "reserved_ids": [
              8
            ],
            "messages": [
              {
                "name": "CommonEntityInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "namespace_id",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "resource_type",
                    "type": "ResourceType"
                  }
                ]
              },
              {
                "name": "ResourceEntity",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListAlertPolicy",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "severity",
                "type": "Severity"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "categories",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "developer_internal_fields",
                "type": "DevFields"
              }
            ],
            "messages": [
              {
                "name": "DevFields",
                "fields": [
                  {
                    "id": 6,
                    "name": "SORT_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListAlertDeployment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 7,
                "name": "inactive",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "namespace_id",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ],
            "reserved_ids": [
              3
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:api_token.proto",
      "def": {
        "messages": [
          {
            "name": "TokenMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 7,
                "name": "roles",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "issued_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "expiration",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "revoked",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "role",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:auth_machine_to_machine.proto",
      "def": {
        "enums": [
          {
            "name": "AuthMachineToMachineConfig.Type",
            "enum_fields": [
              {
                "name": "GENERIC"
              },
              {
                "name": "GITHUB_ACTIONS",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "AuthMachineToMachineConfig",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 3,
                "name": "token_expiration_duration",
                "type": "string"
              },
              {
                "id": 4,
                "name": "mappings",
                "type": "Mapping",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "issuer",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Mapping",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "value_expression",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "role",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:auth_provider.proto",
      "def": {
        "messages": [
          {
            "name": "AuthProvider",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "ui_endpoint",
                "type": "string"
              },
              {
                "id": 5,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "login_url",
                "type": "string"
              },
              {
                "id": 8,
                "name": "validated",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 9,
                "name": "extra_ui_endpoints",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "active",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "required_attributes",
                "type": "RequiredAttribute",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "traits",
                "type": "Traits"
              },
              {
                "id": 14,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "config",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 13,
                  "name": "claim_mappings",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "RequiredAttribute",
                "fields": [
                  {
                    "id": 1,
                    "name": "attribute_key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "attribute_value",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/traits.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:blob.proto",
      "def": {
        "messages": [
          {
            "name": "Blob",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "oid",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "checksum",
                "type": "string"
              },
              {
                "id": 4,
                "name": "length",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "modified_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:cloud_source.proto",
      "def": {
        "enums": [
          {
            "name": "CloudSource.Type",
            "enum_fields": [
              {
                "name": "TYPE_UNSPECIFIED"
              },
              {
                "name": "TYPE_PALADIN_CLOUD",
                "integer": 1
              },
              {
                "name": "TYPE_OCM",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CloudSource",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 4,
                "name": "credentials",
                "type": "Credentials"
              },
              {
                "id": 5,
                "name": "skip_test_integration",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "paladin_cloud",
                "type": "PaladinCloudConfig"
              },
              {
                "id": 7,
                "name": "ocm",
                "type": "OCMConfig"
              }
            ],
            "messages": [
              {
                "name": "Credentials",
                "fields": [
                  {
                    "id": 1,
                    "name": "secret",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "PaladinCloudConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              }
            ]
          },
          {
            "name": "OCMConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:cluster.proto",
      "def": {
        "enums": [
          {
            "name": "ClusterType",
            "enum_fields": [
              {
                "name": "GENERIC_CLUSTER"
              },
              {
                "name": "KUBERNETES_CLUSTER",
                "integer": 1
              },
              {
                "name": "OPENSHIFT_CLUSTER",
                "integer": 2
              },
              {
                "name": "OPENSHIFT4_CLUSTER",
                "integer": 5
              }
            ],
            "reserved_ids": [
              3,
              4
            ]
          },
          {
            "name": "ClusterMetadata.Type",
            "enum_fields": [
              {
                "name": "UNSPECIFIED"
              },
              {
                "name": "AKS",
                "integer": 1
              },
              {
                "name": "ARO",
                "integer": 2
              },
              {
                "name": "EKS",
                "integer": 3
              },
              {
                "name": "GKE",
                "integer": 4
              },
              {
                "name": "OCP",
                "integer": 5
              },
              {
                "name": "OSD",
                "integer": 6
              },
              {
                "name": "ROSA",
                "integer": 7
              }
            ]
          },
          {
            "name": "CollectionMethod",
            "enum_fields": [
              {
                "name": "UNSET_COLLECTION"
              },
              {
                "name": "NO_COLLECTION",
                "integer": 1
              },
              {
                "name": "KERNEL_MODULE",
                "integer": 2,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "name": "EBPF",
                "integer": 3,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "name": "CORE_BPF",
                "integer": 4
              }
            ]
          },
          {
            "name": "ManagerType",
            "enum_fields": [
              {
                "name": "MANAGER_TYPE_UNKNOWN"
              },
              {
                "name": "MANAGER_TYPE_MANUAL",
                "integer": 1
              },
              {
                "name": "MANAGER_TYPE_HELM_CHART",
                "integer": 2
              },
              {
                "name": "MANAGER_TYPE_KUBERNETES_OPERATOR",
                "integer": 3
              }
            ]
          },
          {
            "name": "ClusterUpgradeStatus.Upgradability",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "UP_TO_DATE",
                "integer": 1
              },
              {
                "name": "MANUAL_UPGRADE_REQUIRED",
                "integer": 2
              },
              {
                "name": "AUTO_UPGRADE_POSSIBLE",
                "integer": 3
              },
              {
                "name": "SENSOR_VERSION_HIGHER",
                "integer": 4
              }
            ]
          },
          {
            "name": "UpgradeProcessStatus.UpgradeProcessType",
            "enum_fields": [
              {
                "name": "UPGRADE"
              },
              {
                "name": "CERT_ROTATION",
                "integer": 1
              }
            ]
          },
          {
            "name": "UpgradeProgress.UpgradeState",
            "enum_fields": [
              {
                "name": "UPGRADE_INITIALIZING"
              },
              {
                "name": "UPGRADER_LAUNCHING",
                "integer": 1
              },
              {
                "name": "UPGRADER_LAUNCHED",
                "integer": 2
              },
              {
                "name": "PRE_FLIGHT_CHECKS_COMPLETE",
                "integer": 3
              },
              {
                "name": "UPGRADE_OPERATIONS_DONE",
                "integer": 4
              },
              {
                "name": "UPGRADE_COMPLETE",
                "integer": 10
              },
              {
                "name": "UPGRADE_INITIALIZATION_ERROR",
                "integer": 11
              },
              {
                "name": "PRE_FLIGHT_CHECKS_FAILED",
                "integer": 12
              },
              {
                "name": "UPGRADE_ERROR_ROLLING_BACK",
                "integer": 13
              },
              {
                "name": "UPGRADE_ERROR_ROLLED_BACK",
                "integer": 14
              },
              {
                "name": "UPGRADE_ERROR_ROLLBACK_FAILED",
                "integer": 15
              },
              {
                "name": "UPGRADE_ERROR_UNKNOWN",
                "integer": 16
              },
              {
                "name": "UPGRADE_TIMED_OUT",
                "integer": 17
              }
            ]
          },
          {
            "name": "ClusterHealthStatus.HealthStatusLabel",
            "enum_fields": [
              {
                "name": "UNINITIALIZED"
              },
              {
                "name": "UNAVAILABLE",
                "integer": 1
              },
              {
                "name": "UNHEALTHY",
                "integer": 2
              },
              {
                "name": "DEGRADED",
                "integer": 3
              },
              {
                "name": "HEALTHY",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ClusterMetadata",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GoogleProviderMetadata",
            "fields": [
              {
                "id": 1,
                "name": "project",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_name",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          },
          {
            "name": "AWSProviderMetadata",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "AzureProviderMetadata",
            "fields": [
              {
                "id": 1,
                "name": "subscription_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProviderMetadata",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "string"
              },
              {
                "id": 2,
                "name": "zone",
                "type": "string"
              },
              {
                "id": 3,
                "name": "google",
                "type": "GoogleProviderMetadata"
              },
              {
                "id": 4,
                "name": "aws",
                "type": "AWSProviderMetadata"
              },
              {
                "id": 5,
                "name": "azure",
                "type": "AzureProviderMetadata"
              },
              {
                "id": 15,
                "name": "verified",
                "type": "bool"
              },
              {
                "id": 16,
                "name": "cluster",
                "type": "ClusterMetadata"
              }
            ]
          },
          {
            "name": "OrchestratorMetadata",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "openshift_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "build_date",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "api_versions",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AdmissionControllerConfig",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "timeout_seconds",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "scan_inline",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "disable_bypass",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "enforce_on_updates",
                "type": "bool"
              }
            ]
          },
          {
            "name": "TolerationsConfig",
            "fields": [
              {
                "id": 1,
                "name": "disabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "StaticClusterConfig",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "ClusterType"
              },
              {
                "id": 2,
                "name": "main_image",
                "type": "string"
              },
              {
                "id": 3,
                "name": "central_api_endpoint",
                "type": "string"
              },
              {
                "id": 4,
                "name": "collection_method",
                "type": "CollectionMethod"
              },
              {
                "id": 5,
                "name": "collector_image",
                "type": "string"
              },
              {
                "id": 6,
                "name": "admission_controller",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "admission_controller_updates",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "tolerations_config",
                "type": "TolerationsConfig"
              },
              {
                "id": 9,
                "name": "slim_collector",
                "type": "bool"
              },
              {
                "id": 10,
                "name": "admission_controller_events",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DynamicClusterConfig",
            "fields": [
              {
                "id": 1,
                "name": "admission_controller_config",
                "type": "AdmissionControllerConfig"
              },
              {
                "id": 2,
                "name": "registry_override",
                "type": "string"
              },
              {
                "id": 3,
                "name": "disable_audit_logs",
                "type": "bool"
              }
            ]
          },
          {
            "name": "CompleteClusterConfig",
            "fields": [
              {
                "id": 1,
                "name": "dynamic_config",
                "type": "DynamicClusterConfig"
              },
              {
                "id": 2,
                "name": "static_config",
                "type": "StaticClusterConfig"
              },
              {
                "id": 3,
                "name": "config_fingerprint",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "cluster_labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "SensorDeploymentIdentification",
            "fields": [
              {
                "id": 1,
                "name": "system_namespace_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "default_namespace_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "app_namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "app_namespace_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "app_serviceaccount_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "k8s_node_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "Cluster",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "ClusterType"
              },
              {
                "id": 4,
                "name": "main_image",
                "type": "string"
              },
              {
                "id": 16,
                "name": "collector_image",
                "type": "string"
              },
              {
                "id": 5,
                "name": "central_api_endpoint",
                "type": "string"
              },
              {
                "id": 7,
                "name": "runtime_support",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 17,
                "name": "collection_method",
                "type": "CollectionMethod"
              },
              {
                "id": 13,
                "name": "admission_controller",
                "type": "bool"
              },
              {
                "id": 21,
                "name": "admission_controller_updates",
                "type": "bool"
              },
              {
                "id": 25,
                "name": "admission_controller_events",
                "type": "bool"
              },
              {
                "id": 15,
                "name": "status",
                "type": "ClusterStatus"
              },
              {
                "id": 18,
                "name": "dynamic_config",
                "type": "DynamicClusterConfig"
              },
              {
                "id": 19,
                "name": "tolerations_config",
                "type": "TolerationsConfig"
              },
              {
                "id": 20,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 22,
                "name": "health_status",
                "type": "ClusterHealthStatus"
              },
              {
                "id": 23,
                "name": "slim_collector",
                "type": "bool"
              },
              {
                "id": 24,
                "name": "helm_config",
                "type": "CompleteClusterConfig"
              },
              {
                "id": 26,
                "name": "most_recent_sensor_id",
                "type": "SensorDeploymentIdentification"
              },
              {
                "id": 29,
                "name": "init_bundle_id",
                "type": "string"
              },
              {
                "id": 30,
                "name": "managed_by",
                "type": "ManagerType"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 27,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 28,
                  "name": "audit_log_state",
                  "type": "AuditLogFileState"
                }
              }
            ],
            "reserved_ids": [
              6,
              8,
              9,
              10,
              11,
              12,
              14
            ]
          },
          {
            "name": "ClusterCertExpiryStatus",
            "fields": [
              {
                "id": 1,
                "name": "sensor_cert_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "sensor_cert_not_before",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ClusterStatus",
            "fields": [
              {
                "id": 1,
                "name": "sensor_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "DEPRECATED_last_contact",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "provider_metadata",
                "type": "ProviderMetadata"
              },
              {
                "id": 4,
                "name": "orchestrator_metadata",
                "type": "OrchestratorMetadata"
              },
              {
                "id": 5,
                "name": "upgrade_status",
                "type": "ClusterUpgradeStatus"
              },
              {
                "id": 6,
                "name": "cert_expiry_status",
                "type": "ClusterCertExpiryStatus"
              }
            ]
          },
          {
            "name": "ClusterUpgradeStatus",
            "fields": [
              {
                "id": 1,
                "name": "upgradability",
                "type": "Upgradability"
              },
              {
                "id": 2,
                "name": "upgradability_status_reason",
                "type": "string"
              },
              {
                "id": 3,
                "name": "most_recent_process",
                "type": "UpgradeProcessStatus"
              }
            ],
            "messages": [
              {
                "name": "UpgradeProcessStatus",
                "fields": [
                  {
                    "id": 1,
                    "name": "active",
                    "type": "bool"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "target_version",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "upgrader_image",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "initiated_at",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 6,
                    "name": "progress",
                    "type": "UpgradeProgress"
                  },
                  {
                    "id": 7,
                    "name": "type",
                    "type": "UpgradeProcessType"
                  }
                ]
              }
            ]
          },
          {
            "name": "UpgradeProgress",
            "fields": [
              {
                "id": 1,
                "name": "upgrade_state",
                "type": "UpgradeState"
              },
              {
                "id": 2,
                "name": "upgrade_status_detail",
                "type": "string"
              },
              {
                "id": 3,
                "name": "since",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "AuditLogFileState",
            "fields": [
              {
                "id": 1,
                "name": "collect_logs_since",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "last_audit_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ClusterHealthStatus",
            "fields": [
              {
                "id": 9,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "collector_health_info",
                "type": "CollectorHealthInfo"
              },
              {
                "id": 8,
                "name": "admission_control_health_info",
                "type": "AdmissionControlHealthInfo"
              },
              {
                "id": 10,
                "name": "scanner_health_info",
                "type": "ScannerHealthInfo"
              },
              {
                "id": 2,
                "name": "sensor_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 3,
                "name": "collector_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 4,
                "name": "overall_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 7,
                "name": "admission_control_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 11,
                "name": "scanner_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 5,
                "name": "last_contact",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "health_info_complete",
                "type": "bool"
              }
            ]
          },
          {
            "name": "CollectorHealthInfo",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "total_desired_pods",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "total_ready_pods",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "total_registered_nodes",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "status_errors",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AdmissionControlHealthInfo",
            "fields": [
              {
                "id": 1,
                "name": "total_desired_pods",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "total_ready_pods",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "status_errors",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScannerHealthInfo",
            "fields": [
              {
                "id": 1,
                "name": "total_desired_analyzer_pods",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "total_ready_analyzer_pods",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "total_desired_db_pods",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "total_ready_db_pods",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "status_errors",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:cluster_init.proto",
      "def": {
        "messages": [
          {
            "name": "InitBundleMeta",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "created_by",
                "type": "User"
              },
              {
                "id": 5,
                "name": "is_revoked",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "expires_at",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:common.proto",
      "def": {
        "messages": [
          {
            "name": "KeyValuePair",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:compliance.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceState",
            "enum_fields": [
              {
                "name": "COMPLIANCE_STATE_UNKNOWN"
              },
              {
                "name": "COMPLIANCE_STATE_SKIP",
                "integer": 1
              },
              {
                "name": "COMPLIANCE_STATE_NOTE",
                "integer": 2
              },
              {
                "name": "COMPLIANCE_STATE_SUCCESS",
                "integer": 3
              },
              {
                "name": "COMPLIANCE_STATE_FAILURE",
                "integer": 4
              },
              {
                "name": "COMPLIANCE_STATE_ERROR",
                "integer": 5
              }
            ]
          },
          {
            "name": "ComplianceAggregation.Scope",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "STANDARD",
                "integer": 1
              },
              {
                "name": "CLUSTER",
                "integer": 2
              },
              {
                "name": "CATEGORY",
                "integer": 3
              },
              {
                "name": "CONTROL",
                "integer": 4
              },
              {
                "name": "NAMESPACE",
                "integer": 5
              },
              {
                "name": "NODE",
                "integer": 6
              },
              {
                "name": "DEPLOYMENT",
                "integer": 7
              },
              {
                "name": "CHECK",
                "integer": 8
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceResource",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "ClusterName"
              },
              {
                "id": 2,
                "name": "deployment",
                "type": "DeploymentName"
              },
              {
                "id": 3,
                "name": "node",
                "type": "NodeName"
              },
              {
                "id": 4,
                "name": "image",
                "type": "ImageName"
              }
            ],
            "messages": [
              {
                "name": "ClusterName",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "DeploymentName",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster",
                    "type": "ClusterName"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "namespace",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "NodeName",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster",
                    "type": "ClusterName"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceResultValue",
            "fields": [
              {
                "id": 1,
                "name": "evidence",
                "type": "Evidence",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "overall_state",
                "type": "ComplianceState"
              }
            ],
            "messages": [
              {
                "name": "Evidence",
                "fields": [
                  {
                    "id": 1,
                    "name": "state",
                    "type": "ComplianceState"
                  },
                  {
                    "id": 2,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "message_id",
                    "type": "int32"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceControlResult",
            "fields": [
              {
                "id": 1,
                "name": "resource",
                "type": "ComplianceResource"
              },
              {
                "id": 2,
                "name": "control_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "ComplianceResultValue"
              }
            ]
          },
          {
            "name": "ComplianceDomain",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "cluster",
                "type": "Cluster"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "nodes",
                  "type": "Node"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "deployments",
                  "type": "Deployment"
                }
              }
            ],
            "messages": [
              {
                "name": "Cluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Node",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "cluster_name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Deployment",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 23,
                    "name": "namespace_id",
                    "type": "string"
                  },
                  {
                    "id": 9,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 10,
                    "name": "cluster_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceRunMetadata",
            "fields": [
              {
                "id": 1,
                "name": "run_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "start_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "finish_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "success",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "error_message",
                "type": "string"
              },
              {
                "id": 8,
                "name": "domain_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceRunResults",
            "fields": [
              {
                "id": 1,
                "name": "domain",
                "type": "ComplianceDomain"
              },
              {
                "id": 2,
                "name": "run_metadata",
                "type": "ComplianceRunMetadata"
              },
              {
                "id": 3,
                "name": "cluster_results",
                "type": "EntityResults"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "node_results",
                  "type": "EntityResults"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "deployment_results",
                  "type": "EntityResults"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "machine_config_results",
                  "type": "EntityResults"
                }
              }
            ],
            "messages": [
              {
                "name": "EntityResults",
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 1,
                      "name": "control_results",
                      "type": "ComplianceResultValue"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceStrings",
            "fields": [
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "strings",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComplianceAggregation",
            "messages": [
              {
                "name": "AggregationKey",
                "fields": [
                  {
                    "id": 1,
                    "name": "scope",
                    "type": "Scope"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Result",
                "fields": [
                  {
                    "id": 1,
                    "name": "aggregation_keys",
                    "type": "AggregationKey",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "unit",
                    "type": "Scope"
                  },
                  {
                    "id": 3,
                    "name": "num_passing",
                    "type": "int32"
                  },
                  {
                    "id": 4,
                    "name": "num_failing",
                    "type": "int32"
                  },
                  {
                    "id": 5,
                    "name": "num_skipped",
                    "type": "int32"
                  }
                ]
              },
              {
                "name": "Source",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "standard_id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "successful_run",
                    "type": "storage.ComplianceRunMetadata"
                  },
                  {
                    "id": 4,
                    "name": "failed_runs",
                    "type": "storage.ComplianceRunMetadata",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "Response",
                "fields": [
                  {
                    "id": 1,
                    "name": "results",
                    "type": "Result",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "sources",
                    "type": "Source",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "error_message",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "PreComputedComplianceAggregation",
            "fields": [
              {
                "id": 1,
                "name": "results",
                "type": "ComplianceAggregation.Result",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "sources",
                "type": "ComplianceAggregation.Source",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "domain_pointers",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:compliance_config.proto",
      "def": {
        "messages": [
          {
            "name": "ComplianceConfig",
            "fields": [
              {
                "id": 1,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "hideScanResults",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:compliance_integration.proto",
      "def": {
        "enums": [
          {
            "name": "COStatus",
            "enum_fields": [
              {
                "name": "HEALTHY"
              },
              {
                "name": "UNHEALTHY",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "compliance_namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "status_errors",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "operator_installed",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "operator_status",
                "type": "COStatus"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:compliance_operator.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceOperatorCheckResult.CheckStatus",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "PASS",
                "integer": 1
              },
              {
                "name": "FAIL",
                "integer": 2
              },
              {
                "name": "ERROR",
                "integer": 3
              },
              {
                "name": "INFO",
                "integer": 4
              },
              {
                "name": "MANUAL",
                "integer": 5
              },
              {
                "name": "NOT_APPLICABLE",
                "integer": 6
              },
              {
                "name": "INCONSISTENT",
                "integer": 7
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceOperatorCheckResult",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "check_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "check_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "status",
                "type": "CheckStatus"
              },
              {
                "id": 6,
                "name": "description",
                "type": "string"
              },
              {
                "id": 7,
                "name": "instructions",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 9,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ComplianceOperatorProfile",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "profile_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "description",
                "type": "string"
              },
              {
                "id": 8,
                "name": "rules",
                "type": "Rule",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Rule",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceOperatorRule",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "rule_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "title",
                "type": "string"
              },
              {
                "id": 8,
                "name": "description",
                "type": "string"
              },
              {
                "id": 9,
                "name": "rationale",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ComplianceOperatorScanSettingBinding",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "profiles",
                "type": "Profile",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Profile",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceOperatorScan",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "profile_id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:compliance_operator_v2.proto",
      "def": {
        "enums": [
          {
            "name": "NodeRole",
            "enum_fields": [
              {
                "name": "INFRA"
              },
              {
                "name": "WORKER",
                "integer": 1
              },
              {
                "name": "MASTER",
                "integer": 2
              }
            ]
          },
          {
            "name": "ScanType",
            "enum_fields": [
              {
                "name": "UNSET_SCAN_TYPE"
              },
              {
                "name": "NODE_SCAN",
                "integer": 1
              },
              {
                "name": "PLATFORM_SCAN",
                "integer": 2
              }
            ]
          },
          {
            "name": "RuleSeverity",
            "enum_fields": [
              {
                "name": "UNSET_RULE_SEVERITY"
              },
              {
                "name": "UNKNOWN_RULE_SEVERITY",
                "integer": 1
              },
              {
                "name": "INFO_RULE_SEVERITY",
                "integer": 2
              },
              {
                "name": "LOW_RULE_SEVERITY",
                "integer": 3
              },
              {
                "name": "MEDIUM_RULE_SEVERITY",
                "integer": 4
              },
              {
                "name": "HIGH_RULE_SEVERITY",
                "integer": 5
              }
            ]
          },
          {
            "name": "ComplianceOperatorCheckResultV2.CheckStatus",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "PASS",
                "integer": 1
              },
              {
                "name": "FAIL",
                "integer": 2
              },
              {
                "name": "ERROR",
                "integer": 3
              },
              {
                "name": "INFO",
                "integer": 4
              },
              {
                "name": "MANUAL",
                "integer": 5
              },
              {
                "name": "NOT_APPLICABLE",
                "integer": 6
              },
              {
                "name": "INCONSISTENT",
                "integer": 7
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ProfileShim",
            "fields": [
              {
                "id": 1,
                "name": "profile_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "profile_ref_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceOperatorProfileV2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "profile_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "profile_version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "product_type",
                "type": "string"
              },
              {
                "id": 6,
                "name": "standard",
                "type": "string"
              },
              {
                "id": 9,
                "name": "description",
                "type": "string"
              },
              {
                "id": 10,
                "name": "rules",
                "type": "Rule",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "product",
                "type": "string"
              },
              {
                "id": 12,
                "name": "title",
                "type": "string"
              },
              {
                "id": 13,
                "name": "values",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 15,
                "name": "profile_ref_id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Rule",
                "fields": [
                  {
                    "id": 1,
                    "name": "rule_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceOperatorRuleV2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "rule_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "rule_type",
                "type": "string"
              },
              {
                "id": 5,
                "name": "severity",
                "type": "RuleSeverity"
              },
              {
                "id": 8,
                "name": "title",
                "type": "string"
              },
              {
                "id": 9,
                "name": "description",
                "type": "string"
              },
              {
                "id": 10,
                "name": "rationale",
                "type": "string"
              },
              {
                "id": 11,
                "name": "fixes",
                "type": "Fix",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "warning",
                "type": "string"
              },
              {
                "id": 13,
                "name": "controls",
                "type": "RuleControls",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 15,
                "name": "rule_ref_id",
                "type": "string"
              },
              {
                "id": 16,
                "name": "parent_rule",
                "type": "string"
              },
              {
                "id": 17,
                "name": "instructions",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Fix",
                "fields": [
                  {
                    "id": 1,
                    "name": "platform",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "disruption",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "RuleControls",
            "fields": [
              {
                "id": 1,
                "name": "standard",
                "type": "string"
              },
              {
                "id": 2,
                "name": "controls",
                "type": "string",
                "is_repeated": true,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 3,
                "name": "control",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceOperatorScanConfigurationV2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scan_config_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "auto_apply_remediations",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "auto_update_remediations",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "one_time_scan",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "profiles",
                "type": "ProfileName",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "node_roles",
                "type": "NodeRole",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "strict_node_scan",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "schedule",
                "type": "storage.Schedule"
              },
              {
                "id": 12,
                "name": "created_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 13,
                "name": "last_updated_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 14,
                "name": "modified_by",
                "type": "SlimUser"
              },
              {
                "id": 15,
                "name": "description",
                "type": "string"
              },
              {
                "id": 16,
                "name": "clusters",
                "type": "Cluster",
                "is_repeated": true
              },
              {
                "id": 17,
                "name": "notifiers",
                "type": "NotifierConfiguration",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "ProfileName",
                "fields": [
                  {
                    "id": 1,
                    "name": "profile_name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Cluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceOperatorClusterScanConfigStatus",
            "fields": [
              {
                "id": 6,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scan_config_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "errors",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "last_updated_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "cluster_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceOperatorBenchmarkV2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "provider",
                "type": "string"
              },
              {
                "id": 7,
                "name": "short_name",
                "type": "string"
              },
              {
                "id": 8,
                "name": "profiles",
                "type": "Profile",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Profile",
                "fields": [
                  {
                    "id": 1,
                    "name": "profile_name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "profile_version",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceOperatorCheckResultV2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "check_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "check_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "status",
                "type": "CheckStatus"
              },
              {
                "id": 6,
                "name": "severity",
                "type": "RuleSeverity"
              },
              {
                "id": 7,
                "name": "description",
                "type": "string"
              },
              {
                "id": 8,
                "name": "instructions",
                "type": "string"
              },
              {
                "id": 11,
                "name": "created_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 12,
                "name": "valuesUsed",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 13,
                "name": "warnings",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "scan_name",
                "type": "string"
              },
              {
                "id": 15,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 16,
                "name": "scan_config_name",
                "type": "string"
              },
              {
                "id": 17,
                "name": "rationale",
                "type": "string"
              },
              {
                "id": 18,
                "name": "scan_ref_id",
                "type": "string"
              },
              {
                "id": 19,
                "name": "rule_ref_id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 9,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 10,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ScanStatus",
            "fields": [
              {
                "id": 1,
                "name": "phase",
                "type": "string"
              },
              {
                "id": 2,
                "name": "result",
                "type": "string"
              },
              {
                "id": 3,
                "name": "warnings",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceOperatorScanV2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scan_config_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "errors",
                "type": "string"
              },
              {
                "id": 5,
                "name": "profile",
                "type": "ProfileShim"
              },
              {
                "id": 8,
                "name": "scan_type",
                "type": "ScanType"
              },
              {
                "id": 9,
                "name": "node_selector",
                "type": "NodeRole"
              },
              {
                "id": 10,
                "name": "status",
                "type": "ScanStatus"
              },
              {
                "id": 11,
                "name": "created_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 12,
                "name": "last_executed_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 13,
                "name": "scan_name",
                "type": "string"
              },
              {
                "id": 14,
                "name": "warnings",
                "type": "string"
              },
              {
                "id": 15,
                "name": "product_type",
                "type": "string"
              },
              {
                "id": 16,
                "name": "scan_ref_id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ComplianceOperatorScanSettingBindingV2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "profile_names",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "scan_setting_name",
                "type": "string"
              },
              {
                "id": 9,
                "name": "status",
                "type": "ComplianceOperatorStatus"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "reserved_ids": [
              6
            ]
          },
          {
            "name": "ComplianceOperatorCondition",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "status",
                "type": "string"
              },
              {
                "id": 3,
                "name": "reason",
                "type": "string"
              },
              {
                "id": 4,
                "name": "message",
                "type": "string"
              },
              {
                "id": 5,
                "name": "last_transition_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ComplianceOperatorStatus",
            "fields": [
              {
                "id": 1,
                "name": "phase",
                "type": "string"
              },
              {
                "id": 2,
                "name": "result",
                "type": "string"
              },
              {
                "id": 3,
                "name": "error_message",
                "type": "string"
              },
              {
                "id": 4,
                "name": "conditions",
                "type": "ComplianceOperatorCondition",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComplianceOperatorSuiteV2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "status",
                "type": "ComplianceOperatorStatus"
              }
            ]
          },
          {
            "name": "ComplianceOperatorRemediationV2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "compliance_check_result_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "apply",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "current_object",
                "type": "string"
              },
              {
                "id": 6,
                "name": "outdated_object",
                "type": "string"
              },
              {
                "id": 7,
                "name": "enforcement_type",
                "type": "string"
              },
              {
                "id": 8,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/report_notifier_configuration.proto"
          },
          {
            "path": "storage/schedule.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:config.proto",
      "def": {
        "enums": [
          {
            "name": "BannerConfig.Size",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "SMALL",
                "integer": 1
              },
              {
                "name": "MEDIUM",
                "integer": 2
              },
              {
                "name": "LARGE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "LoginNotice",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "text",
                "type": "string"
              }
            ]
          },
          {
            "name": "BannerConfig",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "text",
                "type": "string"
              },
              {
                "id": 3,
                "name": "size",
                "type": "Size"
              },
              {
                "id": 4,
                "name": "color",
                "type": "string"
              },
              {
                "id": 5,
                "name": "background_color",
                "type": "string"
              }
            ]
          },
          {
            "name": "PublicConfig",
            "fields": [
              {
                "id": 1,
                "name": "login_notice",
                "type": "LoginNotice"
              },
              {
                "id": 2,
                "name": "header",
                "type": "BannerConfig"
              },
              {
                "id": 3,
                "name": "footer",
                "type": "BannerConfig"
              },
              {
                "id": 4,
                "name": "telemetry",
                "type": "TelemetryConfiguration"
              }
            ]
          },
          {
            "name": "AlertRetentionConfig",
            "fields": [
              {
                "id": 1,
                "name": "resolved_deploy_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "deleted_runtime_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "all_runtime_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "attempted_deploy_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "attempted_runtime_retention_duration_days",
                "type": "int32"
              }
            ]
          },
          {
            "name": "DecommissionedClusterRetentionConfig",
            "fields": [
              {
                "id": 1,
                "name": "retention_duration_days",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "ignore_cluster_labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ReportRetentionConfig",
            "fields": [
              {
                "id": 1,
                "name": "history_retention_duration_days",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "downloadable_report_retention_days",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "downloadable_report_global_retention_bytes",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "PrivateConfig",
            "fields": [
              {
                "id": 1,
                "name": "DEPRECATED_alert_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "alert_config",
                "type": "AlertRetentionConfig"
              },
              {
                "id": 2,
                "name": "image_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "expired_vuln_req_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "decommissioned_cluster_retention",
                "type": "DecommissionedClusterRetentionConfig"
              },
              {
                "id": 6,
                "name": "report_retention_config",
                "type": "ReportRetentionConfig"
              },
              {
                "id": 7,
                "name": "vulnerability_exception_config",
                "type": "VulnerabilityExceptionConfig"
              },
              {
                "id": 8,
                "name": "administration_events_config",
                "type": "AdministrationEventsConfig"
              }
            ]
          },
          {
            "name": "Config",
            "fields": [
              {
                "id": 1,
                "name": "public_config",
                "type": "PublicConfig"
              },
              {
                "id": 2,
                "name": "private_config",
                "type": "PrivateConfig"
              }
            ]
          },
          {
            "name": "VulnerabilityExceptionConfig",
            "fields": [
              {
                "id": 1,
                "name": "expiry_options",
                "type": "ExpiryOptions"
              }
            ],
            "messages": [
              {
                "name": "FixableCVEOptions",
                "fields": [
                  {
                    "id": 1,
                    "name": "all_fixable",
                    "type": "bool"
                  },
                  {
                    "id": 2,
                    "name": "any_fixable",
                    "type": "bool"
                  }
                ]
              },
              {
                "name": "ExpiryOptions",
                "fields": [
                  {
                    "id": 1,
                    "name": "day_options",
                    "type": "DayOption",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "fixable_cve_options",
                    "type": "FixableCVEOptions"
                  },
                  {
                    "id": 3,
                    "name": "custom_date",
                    "type": "bool"
                  },
                  {
                    "id": 4,
                    "name": "indefinite",
                    "type": "bool"
                  }
                ]
              }
            ]
          },
          {
            "name": "AdministrationEventsConfig",
            "fields": [
              {
                "id": 1,
                "name": "retention_duration_days",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "DayOption",
            "fields": [
              {
                "id": 1,
                "name": "num_days",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "enabled",
                "type": "bool"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/telemetry.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:container_runtime.proto",
      "def": {
        "enums": [
          {
            "name": "ContainerRuntime",
            "enum_fields": [
              {
                "name": "UNKNOWN_CONTAINER_RUNTIME"
              },
              {
                "name": "DOCKER_CONTAINER_RUNTIME",
                "integer": 1
              },
              {
                "name": "CRIO_CONTAINER_RUNTIME",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ContainerRuntimeInfo",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "ContainerRuntime"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:cve.proto",
      "def": {
        "enums": [
          {
            "name": "VulnerabilityState",
            "enum_fields": [
              {
                "name": "OBSERVED"
              },
              {
                "name": "DEFERRED",
                "integer": 1
              },
              {
                "name": "FALSE_POSITIVE",
                "integer": 2
              }
            ]
          },
          {
            "name": "VulnerabilitySeverity",
            "enum_fields": [
              {
                "name": "UNKNOWN_VULNERABILITY_SEVERITY"
              },
              {
                "name": "LOW_VULNERABILITY_SEVERITY",
                "integer": 1
              },
              {
                "name": "MODERATE_VULNERABILITY_SEVERITY",
                "integer": 2
              },
              {
                "name": "IMPORTANT_VULNERABILITY_SEVERITY",
                "integer": 3
              },
              {
                "name": "CRITICAL_VULNERABILITY_SEVERITY",
                "integer": 4
              }
            ]
          },
          {
            "name": "CVE.CVEType",
            "enum_fields": [
              {
                "name": "UNKNOWN_CVE"
              },
              {
                "name": "IMAGE_CVE",
                "integer": 1
              },
              {
                "name": "K8S_CVE",
                "integer": 2
              },
              {
                "name": "ISTIO_CVE",
                "integer": 3
              },
              {
                "name": "NODE_CVE",
                "integer": 4
              },
              {
                "name": "OPENSHIFT_CVE",
                "integer": 5
              }
            ]
          },
          {
            "name": "CVE.ScoreVersion",
            "enum_fields": [
              {
                "name": "V2"
              },
              {
                "name": "V3",
                "integer": 1
              },
              {
                "name": "UNKNOWN",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVEInfo.ScoreVersion",
            "enum_fields": [
              {
                "name": "V2"
              },
              {
                "name": "V3",
                "integer": 1
              },
              {
                "name": "UNKNOWN",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.Impact",
            "enum_fields": [
              {
                "name": "IMPACT_NONE"
              },
              {
                "name": "IMPACT_PARTIAL",
                "integer": 1
              },
              {
                "name": "IMPACT_COMPLETE",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.AttackVector",
            "enum_fields": [
              {
                "name": "ATTACK_LOCAL"
              },
              {
                "name": "ATTACK_ADJACENT",
                "integer": 1
              },
              {
                "name": "ATTACK_NETWORK",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.AccessComplexity",
            "enum_fields": [
              {
                "name": "ACCESS_HIGH"
              },
              {
                "name": "ACCESS_MEDIUM",
                "integer": 1
              },
              {
                "name": "ACCESS_LOW",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.Authentication",
            "enum_fields": [
              {
                "name": "AUTH_MULTIPLE"
              },
              {
                "name": "AUTH_SINGLE",
                "integer": 1
              },
              {
                "name": "AUTH_NONE",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.Severity",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "LOW",
                "integer": 1
              },
              {
                "name": "MEDIUM",
                "integer": 2
              },
              {
                "name": "HIGH",
                "integer": 3
              }
            ]
          },
          {
            "name": "CVSSV3.Impact",
            "enum_fields": [
              {
                "name": "IMPACT_NONE"
              },
              {
                "name": "IMPACT_LOW",
                "integer": 1
              },
              {
                "name": "IMPACT_HIGH",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV3.AttackVector",
            "enum_fields": [
              {
                "name": "ATTACK_LOCAL"
              },
              {
                "name": "ATTACK_ADJACENT",
                "integer": 1
              },
              {
                "name": "ATTACK_NETWORK",
                "integer": 2
              },
              {
                "name": "ATTACK_PHYSICAL",
                "integer": 3
              }
            ]
          },
          {
            "name": "CVSSV3.Complexity",
            "enum_fields": [
              {
                "name": "COMPLEXITY_LOW"
              },
              {
                "name": "COMPLEXITY_HIGH",
                "integer": 1
              }
            ]
          },
          {
            "name": "CVSSV3.Privileges",
            "enum_fields": [
              {
                "name": "PRIVILEGE_NONE"
              },
              {
                "name": "PRIVILEGE_LOW",
                "integer": 1
              },
              {
                "name": "PRIVILEGE_HIGH",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV3.UserInteraction",
            "enum_fields": [
              {
                "name": "UI_NONE"
              },
              {
                "name": "UI_REQUIRED",
                "integer": 1
              }
            ]
          },
          {
            "name": "CVSSV3.Scope",
            "enum_fields": [
              {
                "name": "UNCHANGED"
              },
              {
                "name": "CHANGED",
                "integer": 1
              }
            ]
          },
          {
            "name": "CVSSV3.Severity",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "NONE",
                "integer": 1
              },
              {
                "name": "LOW",
                "integer": 2
              },
              {
                "name": "MEDIUM",
                "integer": 3
              },
              {
                "name": "HIGH",
                "integer": 4
              },
              {
                "name": "CRITICAL",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CVE",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 14,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 3,
                "name": "type",
                "type": "CVEType"
              },
              {
                "id": 18,
                "name": "types",
                "type": "CVEType",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 5,
                "name": "link",
                "type": "string"
              },
              {
                "id": 6,
                "name": "published_on",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 15,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "last_modified",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "references",
                "type": "Reference",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "score_version",
                "type": "ScoreVersion"
              },
              {
                "id": 10,
                "name": "cvss_v2",
                "type": "CVSSV2"
              },
              {
                "id": 11,
                "name": "cvss_v3",
                "type": "CVSSV3"
              },
              {
                "id": 12,
                "name": "suppressed",
                "type": "bool"
              },
              {
                "id": 16,
                "name": "suppress_activation",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 17,
                "name": "suppress_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 20,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 19,
                  "name": "distro_specifics",
                  "type": "DistroSpecific"
                }
              }
            ],
            "reserved_ids": [
              22,
              21
            ],
            "messages": [
              {
                "name": "DistroSpecific",
                "fields": [
                  {
                    "id": 1,
                    "name": "severity",
                    "type": "VulnerabilitySeverity"
                  },
                  {
                    "id": 2,
                    "name": "cvss",
                    "type": "float"
                  },
                  {
                    "id": 3,
                    "name": "score_version",
                    "type": "ScoreVersion"
                  },
                  {
                    "id": 4,
                    "name": "cvss_v2",
                    "type": "CVSSV2"
                  },
                  {
                    "id": 5,
                    "name": "cvss_v3",
                    "type": "CVSSV3"
                  }
                ]
              },
              {
                "name": "Reference",
                "fields": [
                  {
                    "id": 1,
                    "name": "URI",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "tags",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "CVEInfo",
            "fields": [
              {
                "id": 1,
                "name": "cve",
                "type": "string"
              },
              {
                "id": 2,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 3,
                "name": "link",
                "type": "string"
              },
              {
                "id": 4,
                "name": "published_on",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "last_modified",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "score_version",
                "type": "ScoreVersion"
              },
              {
                "id": 8,
                "name": "cvss_v2",
                "type": "CVSSV2"
              },
              {
                "id": 9,
                "name": "cvss_v3",
                "type": "CVSSV3"
              },
              {
                "id": 10,
                "name": "references",
                "type": "Reference",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Reference",
                "fields": [
                  {
                    "id": 1,
                    "name": "URI",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "tags",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ImageCVE",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cve_base_info",
                "type": "CVEInfo"
              },
              {
                "id": 3,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 5,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 6,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 7,
                "name": "snoozed",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 8,
                "name": "snooze_start",
                "type": "google.protobuf.Timestamp",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 9,
                "name": "snooze_expiry",
                "type": "google.protobuf.Timestamp",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          },
          {
            "name": "NodeCVE",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cve_base_info",
                "type": "CVEInfo"
              },
              {
                "id": 3,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 5,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 6,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 7,
                "name": "snoozed",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "snooze_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "snooze_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "orphaned",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "orphaned_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ClusterCVE",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cve_base_info",
                "type": "CVEInfo"
              },
              {
                "id": 3,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 4,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 5,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 6,
                "name": "snoozed",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "snooze_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "snooze_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "type",
                "type": "CVE.CVEType"
              }
            ]
          },
          {
            "name": "CVSSV2",
            "fields": [
              {
                "id": 1,
                "name": "vector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "attack_vector",
                "type": "AttackVector"
              },
              {
                "id": 3,
                "name": "access_complexity",
                "type": "AccessComplexity"
              },
              {
                "id": 4,
                "name": "authentication",
                "type": "Authentication"
              },
              {
                "id": 5,
                "name": "confidentiality",
                "type": "Impact"
              },
              {
                "id": 6,
                "name": "integrity",
                "type": "Impact"
              },
              {
                "id": 7,
                "name": "availability",
                "type": "Impact"
              },
              {
                "id": 8,
                "name": "exploitability_score",
                "type": "float"
              },
              {
                "id": 9,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 10,
                "name": "score",
                "type": "float"
              },
              {
                "id": 11,
                "name": "severity",
                "type": "Severity"
              }
            ]
          },
          {
            "name": "CVSSV3",
            "fields": [
              {
                "id": 1,
                "name": "vector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "exploitability_score",
                "type": "float"
              },
              {
                "id": 3,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 4,
                "name": "attack_vector",
                "type": "AttackVector"
              },
              {
                "id": 5,
                "name": "attack_complexity",
                "type": "Complexity"
              },
              {
                "id": 6,
                "name": "privileges_required",
                "type": "Privileges"
              },
              {
                "id": 7,
                "name": "user_interaction",
                "type": "UserInteraction"
              },
              {
                "id": 8,
                "name": "scope",
                "type": "Scope"
              },
              {
                "id": 9,
                "name": "confidentiality",
                "type": "Impact"
              },
              {
                "id": 10,
                "name": "integrity",
                "type": "Impact"
              },
              {
                "id": 11,
                "name": "availability",
                "type": "Impact"
              },
              {
                "id": 12,
                "name": "score",
                "type": "float"
              },
              {
                "id": 13,
                "name": "severity",
                "type": "Severity"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:declarative_config_health.proto",
      "def": {
        "enums": [
          {
            "name": "DeclarativeConfigHealth.Status",
            "enum_fields": [
              {
                "name": "UNHEALTHY"
              },
              {
                "name": "HEALTHY",
                "integer": 1
              }
            ]
          },
          {
            "name": "DeclarativeConfigHealth.ResourceType",
            "enum_fields": [
              {
                "name": "CONFIG_MAP"
              },
              {
                "name": "ACCESS_SCOPE",
                "integer": 1
              },
              {
                "name": "PERMISSION_SET",
                "integer": 2
              },
              {
                "name": "ROLE",
                "integer": 3
              },
              {
                "name": "AUTH_PROVIDER",
                "integer": 4
              },
              {
                "name": "GROUP",
                "integer": 5
              },
              {
                "name": "NOTIFIER",
                "integer": 6
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DeclarativeConfigHealth",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 5,
                "name": "error_message",
                "type": "string"
              },
              {
                "id": 6,
                "name": "resource_name",
                "type": "string"
              },
              {
                "id": 7,
                "name": "resource_type",
                "type": "ResourceType"
              },
              {
                "id": 8,
                "name": "last_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:delegated_registry_config.proto",
      "def": {
        "enums": [
          {
            "name": "DelegatedRegistryConfig.EnabledFor",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "ALL",
                "integer": 1
              },
              {
                "name": "SPECIFIC",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DelegatedRegistryConfig",
            "fields": [
              {
                "id": 1,
                "name": "enabled_for",
                "type": "EnabledFor"
              },
              {
                "id": 2,
                "name": "default_cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "registries",
                "type": "DelegatedRegistry",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "DelegatedRegistry",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "cluster_id",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:deployment.proto",
      "def": {
        "enums": [
          {
            "name": "Volume.MountPropagation",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "HOST_TO_CONTAINER",
                "integer": 1
              },
              {
                "name": "BIDIRECTIONAL",
                "integer": 2
              }
            ]
          },
          {
            "name": "PortConfig.ExposureLevel",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "EXTERNAL",
                "integer": 1
              },
              {
                "name": "NODE",
                "integer": 2
              },
              {
                "name": "INTERNAL",
                "integer": 3
              },
              {
                "name": "HOST",
                "integer": 4
              },
              {
                "name": "ROUTE",
                "integer": 5
              }
            ]
          },
          {
            "name": "EnvironmentConfig.EnvVarSource",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "RAW",
                "integer": 1
              },
              {
                "name": "SECRET_KEY",
                "integer": 2
              },
              {
                "name": "CONFIG_MAP_KEY",
                "integer": 3
              },
              {
                "name": "FIELD",
                "integer": 4
              },
              {
                "name": "RESOURCE_FIELD",
                "integer": 5
              },
              {
                "name": "UNKNOWN",
                "integer": 6
              }
            ]
          },
          {
            "name": "SeccompProfile.ProfileType",
            "enum_fields": [
              {
                "name": "UNCONFINED"
              },
              {
                "name": "RUNTIME_DEFAULT",
                "integer": 1
              },
              {
                "name": "LOCALHOST",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Deployment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 26,
                "name": "hash",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "type",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 23,
                "name": "namespace_id",
                "type": "string"
              },
              {
                "id": 33,
                "name": "orchestrator_component",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "replicas",
                "type": "int64"
              },
              {
                "id": 20,
                "name": "label_selector",
                "type": "LabelSelector"
              },
              {
                "id": 8,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 10,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "containers",
                "type": "Container",
                "is_repeated": true
              },
              {
                "id": 15,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 16,
                "name": "inactive",
                "type": "bool"
              },
              {
                "id": 17,
                "name": "image_pull_secrets",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 28,
                "name": "service_account_permission_level",
                "type": "PermissionLevel"
              },
              {
                "id": 25,
                "name": "automount_service_account_token",
                "type": "bool"
              },
              {
                "id": 21,
                "name": "host_network",
                "type": "bool"
              },
              {
                "id": 31,
                "name": "host_pid",
                "type": "bool"
              },
              {
                "id": 32,
                "name": "host_ipc",
                "type": "bool"
              },
              {
                "id": 34,
                "name": "runtime_class",
                "type": "string"
              },
              {
                "id": 22,
                "name": "tolerations",
                "type": "Toleration",
                "is_repeated": true
              },
              {
                "id": 24,
                "name": "ports",
                "type": "PortConfig",
                "is_repeated": true
              },
              {
                "id": 27,
                "name": "state_timestamp",
                "type": "int64"
              },
              {
                "id": 29,
                "name": "risk_score",
                "type": "float"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 19,
                  "name": "pod_labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 14,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "reserved_ids": [
              3,
              12,
              30
            ]
          },
          {
            "name": "ContainerImage",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "name",
                "type": "ImageName"
              },
              {
                "id": 10,
                "name": "not_pullable",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "is_cluster_local",
                "type": "bool"
              }
            ],
            "reserved_ids": [
              2,
              3,
              5,
              6,
              7,
              8,
              9
            ]
          },
          {
            "name": "Container",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "config",
                "type": "ContainerConfig"
              },
              {
                "id": 3,
                "name": "image",
                "type": "ContainerImage"
              },
              {
                "id": 4,
                "name": "security_context",
                "type": "SecurityContext"
              },
              {
                "id": 5,
                "name": "volumes",
                "type": "Volume",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "ports",
                "type": "PortConfig",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "secrets",
                "type": "EmbeddedSecret",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "resources",
                "type": "Resources"
              },
              {
                "id": 10,
                "name": "name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "liveness_probe",
                "type": "LivenessProbe"
              },
              {
                "id": 12,
                "name": "readiness_probe",
                "type": "ReadinessProbe"
              }
            ],
            "reserved_ids": [
              9
            ]
          },
          {
            "name": "Resources",
            "fields": [
              {
                "id": 1,
                "name": "cpu_cores_request",
                "type": "float"
              },
              {
                "id": 2,
                "name": "cpu_cores_limit",
                "type": "float"
              },
              {
                "id": 3,
                "name": "memory_mb_request",
                "type": "float"
              },
              {
                "id": 4,
                "name": "memory_mb_limit",
                "type": "float"
              }
            ]
          },
          {
            "name": "Volume",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "source",
                "type": "string"
              },
              {
                "id": 3,
                "name": "destination",
                "type": "string"
              },
              {
                "id": 4,
                "name": "read_only",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "type",
                "type": "string"
              },
              {
                "id": 6,
                "name": "mount_propagation",
                "type": "MountPropagation"
              }
            ]
          },
          {
            "name": "LivenessProbe",
            "fields": [
              {
                "id": 1,
                "name": "defined",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ReadinessProbe",
            "fields": [
              {
                "id": 1,
                "name": "defined",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Pod",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "live_instances",
                "type": "ContainerInstance",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "terminated_instances",
                "type": "ContainerInstanceList",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "started",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "messages": [
              {
                "name": "ContainerInstanceList",
                "fields": [
                  {
                    "id": 1,
                    "name": "instances",
                    "type": "ContainerInstance",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ContainerInstance",
            "fields": [
              {
                "id": 1,
                "name": "instance_id",
                "type": "ContainerInstanceID"
              },
              {
                "id": 2,
                "name": "containing_pod_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "container_ips",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "started",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "image_digest",
                "type": "string"
              },
              {
                "id": 7,
                "name": "finished",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "exit_code",
                "type": "int32"
              },
              {
                "id": 9,
                "name": "termination_reason",
                "type": "string"
              }
            ]
          },
          {
            "name": "ContainerInstanceID",
            "fields": [
              {
                "id": 1,
                "name": "container_runtime",
                "type": "ContainerRuntime"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "node",
                "type": "string"
              }
            ]
          },
          {
            "name": "EmbeddedSecret",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              }
            ]
          },
          {
            "name": "PortConfig",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_port",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "string"
              },
              {
                "id": 4,
                "name": "exposure",
                "type": "ExposureLevel"
              },
              {
                "id": 5,
                "name": "exposed_port",
                "type": "int32",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 6,
                "name": "exposure_infos",
                "type": "ExposureInfo",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ExposureInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "level",
                    "type": "ExposureLevel"
                  },
                  {
                    "id": 2,
                    "name": "service_name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "service_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "service_cluster_ip",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "service_port",
                    "type": "int32"
                  },
                  {
                    "id": 6,
                    "name": "node_port",
                    "type": "int32"
                  },
                  {
                    "id": 7,
                    "name": "external_ips",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 8,
                    "name": "external_hostnames",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ContainerConfig",
            "fields": [
              {
                "id": 1,
                "name": "env",
                "type": "EnvironmentConfig",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "command",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "args",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "directory",
                "type": "string"
              },
              {
                "id": 5,
                "name": "user",
                "type": "string"
              },
              {
                "id": 6,
                "name": "uid",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "app_armor_profile",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "EnvironmentConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "env_var_source",
                    "type": "EnvVarSource"
                  }
                ]
              }
            ]
          },
          {
            "name": "SecurityContext",
            "fields": [
              {
                "id": 1,
                "name": "privileged",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "selinux",
                "type": "SELinux"
              },
              {
                "id": 3,
                "name": "drop_capabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "add_capabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "read_only_root_filesystem",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "seccomp_profile",
                "type": "SeccompProfile"
              },
              {
                "id": 7,
                "name": "allow_privilege_escalation",
                "type": "bool"
              }
            ],
            "messages": [
              {
                "name": "SELinux",
                "fields": [
                  {
                    "id": 1,
                    "name": "user",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "role",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "level",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "SeccompProfile",
                "fields": [
                  {
                    "id": 1,
                    "name": "type",
                    "type": "ProfileType"
                  },
                  {
                    "id": 2,
                    "name": "localhost_profile",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListDeployment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "hash",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 6,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "priority",
                "type": "int64"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/container_runtime.proto"
          },
          {
            "path": "storage/image.proto"
          },
          {
            "path": "storage/labels.proto"
          },
          {
            "path": "storage/rbac.proto"
          },
          {
            "path": "storage/taints.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:discovered_cluster.proto",
      "def": {
        "enums": [
          {
            "name": "Metadata.ProviderType",
            "enum_fields": [
              {
                "name": "PROVIDER_TYPE_UNSPECIFIED"
              },
              {
                "name": "PROVIDER_TYPE_AWS",
                "integer": 1
              },
              {
                "name": "PROVIDER_TYPE_GCP",
                "integer": 2
              },
              {
                "name": "PROVIDER_TYPE_AZURE",
                "integer": 3
              }
            ]
          },
          {
            "name": "DiscoveredCluster.Status",
            "enum_fields": [
              {
                "name": "STATUS_UNSPECIFIED"
              },
              {
                "name": "STATUS_SECURED",
                "integer": 1
              },
              {
                "name": "STATUS_UNSECURED",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DiscoveredCluster",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "metadata",
                "type": "Metadata"
              },
              {
                "id": 3,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 4,
                "name": "source_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "last_updated_at",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "messages": [
              {
                "name": "Metadata",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "type",
                    "type": "ClusterMetadata.Type"
                  },
                  {
                    "id": 4,
                    "name": "provider_type",
                    "type": "ProviderType"
                  },
                  {
                    "id": 5,
                    "name": "region",
                    "type": "string"
                  },
                  {
                    "id": 6,
                    "name": "first_discovered_at",
                    "type": "google.protobuf.Timestamp"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:external_backup.proto",
      "def": {
        "enums": [
          {
            "name": "S3URLStyle",
            "enum_fields": [
              {
                "name": "S3_URL_STYLE_UNSPECIFIED"
              },
              {
                "name": "S3_URL_STYLE_VIRTUAL_HOSTED",
                "integer": 1
              },
              {
                "name": "S3_URL_STYLE_PATH",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ExternalBackup",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "schedule",
                "type": "storage.Schedule"
              },
              {
                "id": 5,
                "name": "backups_to_keep",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "s3",
                "type": "S3Config"
              },
              {
                "id": 7,
                "name": "gcs",
                "type": "GCSConfig"
              },
              {
                "id": 9,
                "name": "s3compatible",
                "type": "S3Compatible"
              },
              {
                "id": 8,
                "name": "include_certificates",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          },
          {
            "name": "S3Config",
            "fields": [
              {
                "id": 1,
                "name": "bucket",
                "type": "string"
              },
              {
                "id": 2,
                "name": "use_iam",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "access_key_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "secret_access_key",
                "type": "string"
              },
              {
                "id": 5,
                "name": "region",
                "type": "string"
              },
              {
                "id": 6,
                "name": "object_prefix",
                "type": "string"
              },
              {
                "id": 7,
                "name": "endpoint",
                "type": "string"
              }
            ]
          },
          {
            "name": "S3Compatible",
            "fields": [
              {
                "id": 1,
                "name": "bucket",
                "type": "string"
              },
              {
                "id": 2,
                "name": "access_key_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "secret_access_key",
                "type": "string"
              },
              {
                "id": 4,
                "name": "region",
                "type": "string"
              },
              {
                "id": 5,
                "name": "object_prefix",
                "type": "string"
              },
              {
                "id": 6,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 7,
                "name": "url_style",
                "type": "S3URLStyle"
              }
            ]
          },
          {
            "name": "GCSConfig",
            "fields": [
              {
                "id": 1,
                "name": "bucket",
                "type": "string"
              },
              {
                "id": 2,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 3,
                "name": "object_prefix",
                "type": "string"
              },
              {
                "id": 4,
                "name": "use_workload_id",
                "type": "bool"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/schedule.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:group.proto",
      "def": {
        "messages": [
          {
            "name": "Group",
            "fields": [
              {
                "id": 1,
                "name": "props",
                "type": "GroupProperties"
              },
              {
                "id": 3,
                "name": "role_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GroupProperties",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "traits",
                "type": "Traits"
              },
              {
                "id": 1,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/traits.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:hash.proto",
      "def": {
        "messages": [
          {
            "name": "Hash",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "hashes",
                  "type": "uint64"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:helm_cluster.proto",
      "def": {
        "messages": [
          {
            "name": "HelmCluster",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "Cluster"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:http_endpoint.proto",
      "def": {
        "messages": [
          {
            "name": "HTTPEndpointConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "skip_tls_verify",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "ca_cert",
                "type": "string"
              },
              {
                "id": 4,
                "name": "username",
                "type": "string"
              },
              {
                "id": 5,
                "name": "password",
                "type": "string"
              },
              {
                "id": 6,
                "name": "headers",
                "type": "KeyValuePair",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "client_cert_pem",
                "type": "string"
              },
              {
                "id": 8,
                "name": "client_key_pem",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/common.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:image.proto",
      "def": {
        "enums": [
          {
            "name": "Image.Note",
            "enum_fields": [
              {
                "name": "MISSING_METADATA"
              },
              {
                "name": "MISSING_SCAN_DATA",
                "integer": 1
              },
              {
                "name": "MISSING_SIGNATURE",
                "integer": 2
              },
              {
                "name": "MISSING_SIGNATURE_VERIFICATION_DATA",
                "integer": 3
              }
            ]
          },
          {
            "name": "ImageScan.Note",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "OS_UNAVAILABLE",
                "integer": 1
              },
              {
                "name": "PARTIAL_SCAN_DATA",
                "integer": 2
              },
              {
                "name": "OS_CVES_UNAVAILABLE",
                "integer": 3
              },
              {
                "name": "OS_CVES_STALE",
                "integer": 4
              },
              {
                "name": "LANGUAGE_CVES_UNAVAILABLE",
                "integer": 5
              },
              {
                "name": "CERTIFIED_RHEL_SCAN_UNAVAILABLE",
                "integer": 6
              }
            ]
          },
          {
            "name": "ImageSignatureVerificationResult.Status",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "VERIFIED",
                "integer": 1
              },
              {
                "name": "FAILED_VERIFICATION",
                "integer": 2
              },
              {
                "name": "INVALID_SIGNATURE_ALGO",
                "integer": 3
              },
              {
                "name": "CORRUPTED_SIGNATURE",
                "integer": 4
              },
              {
                "name": "GENERIC_ERROR",
                "integer": 5
              }
            ]
          },
          {
            "name": "SourceType",
            "enum_fields": [
              {
                "name": "OS"
              },
              {
                "name": "PYTHON",
                "integer": 1
              },
              {
                "name": "JAVA",
                "integer": 2
              },
              {
                "name": "RUBY",
                "integer": 3
              },
              {
                "name": "NODEJS",
                "integer": 4
              },
              {
                "name": "GO",
                "integer": 7
              },
              {
                "name": "DOTNETCORERUNTIME",
                "integer": 5
              },
              {
                "name": "INFRASTRUCTURE",
                "integer": 6
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Image",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "name",
                "type": "ImageName"
              },
              {
                "id": 18,
                "name": "names",
                "type": "ImageName",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "metadata",
                "type": "ImageMetadata"
              },
              {
                "id": 3,
                "name": "scan",
                "type": "ImageScan"
              },
              {
                "id": 15,
                "name": "signature_verification_data",
                "type": "ImageSignatureVerificationData"
              },
              {
                "id": 16,
                "name": "signature",
                "type": "ImageSignature"
              },
              {
                "id": 7,
                "name": "components",
                "type": "int32"
              },
              {
                "id": 8,
                "name": "cves",
                "type": "int32"
              },
              {
                "id": 9,
                "name": "fixable_cves",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "not_pullable",
                "type": "bool"
              },
              {
                "id": 17,
                "name": "is_cluster_local",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 12,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 13,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 14,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              6
            ]
          },
          {
            "name": "DataSource",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "mirror",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImageScan",
            "fields": [
              {
                "id": 6,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "scan_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "components",
                "type": "EmbeddedImageScanComponent",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 3,
                "name": "data_source",
                "type": "DataSource"
              },
              {
                "id": 5,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "hash",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ImageSignatureVerificationData",
            "fields": [
              {
                "id": 1,
                "name": "results",
                "type": "ImageSignatureVerificationResult",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ImageSignatureVerificationResult",
            "fields": [
              {
                "id": 1,
                "name": "verification_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "verifier_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "verified_image_references",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EmbeddedImageScanComponent",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "license",
                "type": "License"
              },
              {
                "id": 4,
                "name": "vulns",
                "type": "EmbeddedVulnerability",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "layer_index",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "source",
                "type": "SourceType"
              },
              {
                "id": 8,
                "name": "location",
                "type": "string"
              },
              {
                "id": 9,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 10,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 11,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 12,
                "name": "executables",
                "type": "Executable",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Executable",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "dependencies",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "License",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "url",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImageMetadata",
            "fields": [
              {
                "id": 1,
                "name": "v1",
                "type": "V1Metadata"
              },
              {
                "id": 2,
                "name": "v2",
                "type": "V2Metadata"
              },
              {
                "id": 3,
                "name": "layer_shas",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "data_source",
                "type": "DataSource"
              },
              {
                "id": 5,
                "name": "version",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ImageSignature",
            "fields": [
              {
                "id": 1,
                "name": "signatures",
                "type": "Signature",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "fetched",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "Signature",
            "fields": [
              {
                "id": 1,
                "name": "cosign",
                "type": "CosignSignature"
              }
            ]
          },
          {
            "name": "CosignSignature",
            "fields": [
              {
                "id": 1,
                "name": "raw_signature",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "signature_payload",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "cert_pem",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "cert_chain_pem",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "V2Metadata",
            "fields": [
              {
                "id": 1,
                "name": "digest",
                "type": "string"
              }
            ]
          },
          {
            "name": "V1Metadata",
            "fields": [
              {
                "id": 1,
                "name": "digest",
                "type": "string"
              },
              {
                "id": 2,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "author",
                "type": "string"
              },
              {
                "id": 4,
                "name": "layers",
                "type": "ImageLayer",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "user",
                "type": "string"
              },
              {
                "id": 6,
                "name": "command",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "entrypoint",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "volumes",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 9,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ImageLayer",
            "fields": [
              {
                "id": 1,
                "name": "instruction",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "author",
                "type": "string"
              },
              {
                "id": 6,
                "name": "empty",
                "type": "bool"
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "ImageName",
            "fields": [
              {
                "id": 1,
                "name": "registry",
                "type": "string"
              },
              {
                "id": 2,
                "name": "remote",
                "type": "string"
              },
              {
                "id": 3,
                "name": "tag",
                "type": "string"
              },
              {
                "id": 4,
                "name": "full_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListImage",
            "fields": [
              {
                "id": 7,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "components",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "cves",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "fixable_cves",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "priority",
                "type": "int64"
              }
            ],
            "reserved_ids": [
              9
            ]
          },
          {
            "name": "WatchedImage",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/vulnerability.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:image_component.proto",
      "def": {
        "messages": [
          {
            "name": "ImageComponent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "license",
                "type": "License"
              },
              {
                "id": 5,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "source",
                "type": "SourceType"
              },
              {
                "id": 7,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 8,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 9,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 10,
                "name": "operating_system",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:image_integration.proto",
      "def": {
        "enums": [
          {
            "name": "ImageIntegrationCategory",
            "enum_fields": [
              {
                "name": "REGISTRY"
              },
              {
                "name": "SCANNER",
                "integer": 1
              },
              {
                "name": "NODE_SCANNER",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ImageIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 6,
                "name": "categories",
                "type": "ImageIntegrationCategory",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "clairify",
                "type": "ClairifyConfig"
              },
              {
                "id": 23,
                "name": "scanner_v4",
                "type": "ScannerV4Config"
              },
              {
                "id": 9,
                "name": "docker",
                "type": "DockerConfig"
              },
              {
                "id": 10,
                "name": "quay",
                "type": "QuayConfig"
              },
              {
                "id": 11,
                "name": "ecr",
                "type": "ECRConfig"
              },
              {
                "id": 13,
                "name": "google",
                "type": "GoogleConfig"
              },
              {
                "id": 14,
                "name": "clair",
                "type": "ClairConfig"
              },
              {
                "id": 22,
                "name": "clair_v4",
                "type": "ClairV4Config"
              },
              {
                "id": 20,
                "name": "ibm",
                "type": "IBMRegistryConfig"
              },
              {
                "id": 24,
                "name": "azure",
                "type": "AzureConfig"
              },
              {
                "id": 15,
                "name": "autogenerated",
                "type": "bool"
              },
              {
                "id": 16,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 18,
                "name": "skip_test_integration",
                "type": "bool"
              },
              {
                "id": 21,
                "name": "source",
                "type": "Source"
              }
            ],
            "reserved_ids": [
              4,
              5,
              7,
              12,
              17,
              19
            ],
            "messages": [
              {
                "name": "Source",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "image_pull_secret_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "IBMRegistryConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "api_key",
                "type": "string"
              }
            ]
          },
          {
            "name": "QuayConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "oauthToken",
                "type": "string"
              },
              {
                "id": 3,
                "name": "insecure",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "registry_robot_credentials",
                "type": "RobotAccount"
              }
            ],
            "messages": [
              {
                "name": "RobotAccount",
                "fields": [
                  {
                    "id": 1,
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "password",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ClairConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "insecure",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ClairV4Config",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "insecure",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ClairifyConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 3,
                "name": "grpc_endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "num_concurrent_scans",
                "type": "int32"
              }
            ]
          },
          {
            "name": "DockerConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "username",
                "type": "string"
              },
              {
                "id": 3,
                "name": "password",
                "type": "string"
              },
              {
                "id": 4,
                "name": "insecure",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ECRConfig",
            "fields": [
              {
                "id": 1,
                "name": "registry_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "access_key_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "secret_access_key",
                "type": "string"
              },
              {
                "id": 4,
                "name": "region",
                "type": "string"
              },
              {
                "id": 5,
                "name": "use_iam",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 7,
                "name": "use_assume_role",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "assume_role_id",
                "type": "string"
              },
              {
                "id": 9,
                "name": "assume_role_external_id",
                "type": "string"
              },
              {
                "id": 10,
                "name": "authorization_data",
                "type": "AuthorizationData"
              }
            ],
            "messages": [
              {
                "name": "AuthorizationData",
                "fields": [
                  {
                    "id": 1,
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "password",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "expires_at",
                    "type": "google.protobuf.Timestamp"
                  }
                ]
              }
            ]
          },
          {
            "name": "GoogleConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 3,
                "name": "project",
                "type": "string"
              },
              {
                "id": 4,
                "name": "wif_enabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ScannerV4Config",
            "fields": [
              {
                "id": 1,
                "name": "num_concurrent_scans",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "indexer_endpoint",
                "type": "string"
              },
              {
                "id": 3,
                "name": "matcher_endpoint",
                "type": "string"
              }
            ]
          },
          {
            "name": "AzureConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "username",
                "type": "string"
              },
              {
                "id": 3,
                "name": "password",
                "type": "string"
              },
              {
                "id": 4,
                "name": "wif_enabled",
                "type": "bool"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:installation.proto",
      "def": {
        "messages": [
          {
            "name": "InstallationInfo",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:integration_health.proto",
      "def": {
        "enums": [
          {
            "name": "IntegrationHealth.Status",
            "enum_fields": [
              {
                "name": "UNINITIALIZED"
              },
              {
                "name": "UNHEALTHY",
                "integer": 1
              },
              {
                "name": "HEALTHY",
                "integer": 2
              }
            ]
          },
          {
            "name": "IntegrationHealth.Type",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "IMAGE_INTEGRATION",
                "integer": 1
              },
              {
                "name": "NOTIFIER",
                "integer": 2
              },
              {
                "name": "BACKUP",
                "integer": 3
              },
              {
                "name": "DECLARATIVE_CONFIG",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "IntegrationHealth",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 4,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 5,
                "name": "error_message",
                "type": "string"
              },
              {
                "id": 6,
                "name": "last_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:kube_event.proto",
      "def": {
        "enums": [
          {
            "name": "KubernetesEvent.APIVerb",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "CREATE",
                "integer": 1
              },
              {
                "name": "UPDATE",
                "integer": 2
              },
              {
                "name": "PATCH",
                "integer": 3
              },
              {
                "name": "DELETE",
                "integer": 4
              },
              {
                "name": "LIST",
                "integer": 5
              },
              {
                "name": "GET",
                "integer": 6
              },
              {
                "name": "WATCH",
                "integer": 7
              },
              {
                "name": "PROXY",
                "integer": 8
              }
            ]
          },
          {
            "name": "Object.Resource",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "PODS_EXEC",
                "integer": 1
              },
              {
                "name": "PODS_PORTFORWARD",
                "integer": 2
              },
              {
                "name": "SECRETS",
                "integer": 3
              },
              {
                "name": "CONFIGMAPS",
                "integer": 4
              },
              {
                "name": "CLUSTER_ROLES",
                "integer": 5
              },
              {
                "name": "CLUSTER_ROLE_BINDINGS",
                "integer": 6
              },
              {
                "name": "NETWORK_POLICIES",
                "integer": 7
              },
              {
                "name": "SECURITY_CONTEXT_CONSTRAINTS",
                "integer": 8
              },
              {
                "name": "EGRESS_FIREWALLS",
                "integer": 9
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "KubernetesEvent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "object",
                "type": "Object"
              },
              {
                "id": 3,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "api_verb",
                "type": "APIVerb"
              },
              {
                "id": 5,
                "name": "pod_exec_args",
                "type": "PodExecArgs"
              },
              {
                "id": 6,
                "name": "pod_port_forward_args",
                "type": "PodPortForwardArgs"
              },
              {
                "id": 15,
                "name": "user",
                "type": "User"
              },
              {
                "id": 16,
                "name": "impersonated_user",
                "type": "User"
              },
              {
                "id": 17,
                "name": "source_ips",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "user_agent",
                "type": "string"
              },
              {
                "id": 19,
                "name": "response_status",
                "type": "ResponseStatus"
              },
              {
                "id": 20,
                "name": "request_uri",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Object",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "resource",
                    "type": "Resource"
                  },
                  {
                    "id": 3,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "namespace",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "PodExecArgs",
                "fields": [
                  {
                    "id": 1,
                    "name": "container",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "commands",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "PodPortForwardArgs",
                "fields": [
                  {
                    "id": 1,
                    "name": "ports",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "ResponseStatus",
                "fields": [
                  {
                    "id": 1,
                    "name": "status_code",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "reason",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "User",
                "fields": [
                  {
                    "id": 1,
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "groups",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:labels.proto",
      "def": {
        "enums": [
          {
            "name": "LabelSelector.Operator",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "IN",
                "integer": 1
              },
              {
                "name": "NOT_IN",
                "integer": 2
              },
              {
                "name": "EXISTS",
                "integer": 3
              },
              {
                "name": "NOT_EXISTS",
                "integer": 4
              }
            ]
          },
          {
            "name": "SetBasedLabelSelector.Operator",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "IN",
                "integer": 1
              },
              {
                "name": "NOT_IN",
                "integer": 2
              },
              {
                "name": "EXISTS",
                "integer": 3
              },
              {
                "name": "NOT_EXISTS",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "LabelSelector",
            "fields": [
              {
                "id": 2,
                "name": "requirements",
                "type": "Requirement",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "match_labels",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Requirement",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "op",
                    "type": "Operator"
                  },
                  {
                    "id": 3,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "SetBasedLabelSelector",
            "fields": [
              {
                "id": 2,
                "name": "requirements",
                "type": "Requirement",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              1
            ],
            "messages": [
              {
                "name": "Requirement",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "op",
                    "type": "Operator"
                  },
                  {
                    "id": 3,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:log.proto",
      "def": {
        "messages": [
          {
            "name": "LogImbue",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "log",
                "type": "bytes"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:mitre.proto",
      "def": {
        "messages": [
          {
            "name": "MitreTactic",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              }
            ]
          },
          {
            "name": "MitreTechnique",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              }
            ]
          },
          {
            "name": "MitreAttackVector",
            "fields": [
              {
                "id": 1,
                "name": "tactic",
                "type": "MitreTactic"
              },
              {
                "id": 2,
                "name": "techniques",
                "type": "MitreTechnique",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MitreAttackMatrix",
            "fields": [
              {
                "id": 1,
                "name": "matrix_info",
                "type": "MatrixInfo"
              },
              {
                "id": 2,
                "name": "vectors",
                "type": "MitreAttackVector",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "MatrixInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "domain",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "platform",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "MitreAttackBundle",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "matrices",
                "type": "MitreAttackMatrix",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:namespace_metadata.proto",
      "def": {
        "messages": [
          {
            "name": "NamespaceMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "creation_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "priority",
                "type": "int64"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:network_baseline.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkBaselineConnectionProperties",
            "fields": [
              {
                "id": 1,
                "name": "ingress",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "L4Protocol"
              }
            ]
          },
          {
            "name": "NetworkBaselinePeer",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "NetworkEntity"
              },
              {
                "id": 2,
                "name": "properties",
                "type": "NetworkBaselineConnectionProperties",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkBaseline",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "peers",
                "type": "NetworkBaselinePeer",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "forbidden_peers",
                "type": "NetworkBaselinePeer",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "observation_period_end",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "locked",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "deployment_name",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_flow.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:network_flow.proto",
      "def": {
        "enums": [
          {
            "name": "NetworkEntityInfo.Type",
            "enum_fields": [
              {
                "name": "UNKNOWN_TYPE"
              },
              {
                "name": "DEPLOYMENT",
                "integer": 1
              },
              {
                "name": "INTERNET",
                "integer": 2
              },
              {
                "name": "LISTEN_ENDPOINT",
                "integer": 3
              },
              {
                "name": "EXTERNAL_SOURCE",
                "integer": 4
              },
              {
                "name": "INTERNAL_ENTITIES",
                "integer": 5
              }
            ]
          },
          {
            "name": "L4Protocol",
            "enum_fields": [
              {
                "name": "L4_PROTOCOL_UNKNOWN"
              },
              {
                "name": "L4_PROTOCOL_TCP",
                "integer": 1
              },
              {
                "name": "L4_PROTOCOL_UDP",
                "integer": 2
              },
              {
                "name": "L4_PROTOCOL_ICMP",
                "integer": 3
              },
              {
                "name": "L4_PROTOCOL_RAW",
                "integer": 4
              },
              {
                "name": "L4_PROTOCOL_SCTP",
                "integer": 5
              },
              {
                "name": "L4_PROTOCOL_ANY",
                "integer": -1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "NetworkFlow",
            "fields": [
              {
                "id": 1,
                "name": "props",
                "type": "NetworkFlowProperties"
              },
              {
                "id": 2,
                "name": "last_seen_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkFlowProperties",
            "fields": [
              {
                "id": 1,
                "name": "src_entity",
                "type": "NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "dst_entity",
                "type": "NetworkEntityInfo"
              },
              {
                "id": 3,
                "name": "dst_port",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "l4protocol",
                "type": "L4Protocol"
              }
            ]
          },
          {
            "name": "NetworkEndpoint",
            "fields": [
              {
                "id": 1,
                "name": "props",
                "type": "NetworkEndpointProperties"
              },
              {
                "id": 2,
                "name": "last_active_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NetworkEndpointProperties",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "l4protocol",
                "type": "L4Protocol"
              }
            ]
          },
          {
            "name": "NetworkEntity",
            "fields": [
              {
                "id": 1,
                "name": "info",
                "type": "NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "scope",
                "type": "Scope"
              }
            ],
            "messages": [
              {
                "name": "Scope",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "NetworkEntityInfo",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment",
                "type": "Deployment"
              },
              {
                "id": 4,
                "name": "external_source",
                "type": "ExternalSource"
              }
            ],
            "messages": [
              {
                "name": "Deployment",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "cluster",
                    "type": "string",
                    "options": [
                      {
                        "name": "deprecated",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 4,
                    "name": "listen_ports",
                    "type": "ListenPort",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "ListenPort",
                    "fields": [
                      {
                        "id": 1,
                        "name": "port",
                        "type": "uint32"
                      },
                      {
                        "id": 2,
                        "name": "l4protocol",
                        "type": "L4Protocol"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ExternalSource",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "cidr",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "default",
                    "type": "bool"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:network_graph_config.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkGraphConfig",
            "fields": [
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "hide_default_external_srcs",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:network_policy.proto",
      "def": {
        "enums": [
          {
            "name": "Protocol",
            "enum_fields": [
              {
                "name": "UNSET_PROTOCOL"
              },
              {
                "name": "TCP_PROTOCOL",
                "integer": 1
              },
              {
                "name": "UDP_PROTOCOL",
                "integer": 2
              },
              {
                "name": "SCTP_PROTOCOL",
                "integer": 3
              }
            ]
          },
          {
            "name": "NetworkPolicyType",
            "enum_fields": [
              {
                "name": "UNSET_NETWORK_POLICY_TYPE"
              },
              {
                "name": "INGRESS_NETWORK_POLICY_TYPE",
                "integer": 1
              },
              {
                "name": "EGRESS_NETWORK_POLICY_TYPE",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "NetworkPolicy",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 8,
                "name": "spec",
                "type": "NetworkPolicySpec"
              },
              {
                "id": 9,
                "name": "yaml",
                "type": "string"
              },
              {
                "id": 10,
                "name": "api_version",
                "type": "string"
              },
              {
                "id": 11,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "NetworkPolicySpec",
            "fields": [
              {
                "id": 1,
                "name": "pod_selector",
                "type": "LabelSelector"
              },
              {
                "id": 2,
                "name": "ingress",
                "type": "NetworkPolicyIngressRule",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "egress",
                "type": "NetworkPolicyEgressRule",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "policy_types",
                "type": "NetworkPolicyType",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyEgressRule",
            "fields": [
              {
                "id": 1,
                "name": "ports",
                "type": "NetworkPolicyPort",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "to",
                "type": "NetworkPolicyPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyPeer",
            "fields": [
              {
                "id": 1,
                "name": "pod_selector",
                "type": "LabelSelector"
              },
              {
                "id": 2,
                "name": "namespace_selector",
                "type": "LabelSelector"
              },
              {
                "id": 3,
                "name": "ip_block",
                "type": "IPBlock"
              }
            ]
          },
          {
            "name": "IPBlock",
            "fields": [
              {
                "id": 1,
                "name": "cidr",
                "type": "string"
              },
              {
                "id": 2,
                "name": "except",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyPort",
            "fields": [
              {
                "id": 1,
                "name": "protocol",
                "type": "Protocol"
              },
              {
                "id": 2,
                "name": "port",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "port_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkPolicyIngressRule",
            "fields": [
              {
                "id": 1,
                "name": "ports",
                "type": "NetworkPolicyPort",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "from",
                "type": "NetworkPolicyPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyReference",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkPolicyModification",
            "fields": [
              {
                "id": 1,
                "name": "apply_yaml",
                "type": "string"
              },
              {
                "id": 2,
                "name": "to_delete",
                "type": "NetworkPolicyReference",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyApplicationUndoRecord",
            "fields": [
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "user",
                "type": "string"
              },
              {
                "id": 2,
                "name": "apply_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "original_modification",
                "type": "NetworkPolicyModification"
              },
              {
                "id": 4,
                "name": "undo_modification",
                "type": "NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "NetworkPolicyApplicationUndoDeploymentRecord",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "undo_record",
                "type": "NetworkPolicyApplicationUndoRecord"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/labels.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:node.proto",
      "def": {
        "enums": [
          {
            "name": "Node.Note",
            "enum_fields": [
              {
                "name": "MISSING_SCAN_DATA"
              }
            ]
          },
          {
            "name": "NodeScan.Note",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "UNSUPPORTED",
                "integer": 1
              },
              {
                "name": "KERNEL_UNSUPPORTED",
                "integer": 2
              },
              {
                "name": "CERTIFIED_RHEL_CVES_UNAVAILABLE",
                "integer": 3
              }
            ]
          },
          {
            "name": "NodeInventory.Note",
            "enum_fields": [
              {
                "name": "OS_CVES_UNAVAILABLE"
              },
              {
                "name": "OS_CVES_STALE",
                "integer": 1
              },
              {
                "name": "LANGUAGE_CVES_UNAVAILABLE",
                "integer": 2
              },
              {
                "name": "CERTIFIED_RHEL_SCAN_UNAVAILABLE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Node",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "taints",
                "type": "Taint",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 13,
                "name": "joined_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "internal_ip_addresses",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "external_ip_addresses",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "container_runtime_version",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 14,
                "name": "container_runtime",
                "type": "ContainerRuntimeInfo"
              },
              {
                "id": 11,
                "name": "kernel_version",
                "type": "string"
              },
              {
                "id": 17,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 12,
                "name": "os_image",
                "type": "string"
              },
              {
                "id": 15,
                "name": "kubelet_version",
                "type": "string"
              },
              {
                "id": 16,
                "name": "kube_proxy_version",
                "type": "string"
              },
              {
                "id": 25,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 26,
                "name": "k8s_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 18,
                "name": "scan",
                "type": "NodeScan"
              },
              {
                "id": 19,
                "name": "components",
                "type": "int32"
              },
              {
                "id": 20,
                "name": "cves",
                "type": "int32"
              },
              {
                "id": 21,
                "name": "fixable_cves",
                "type": "int32"
              },
              {
                "id": 22,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 23,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 24,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 27,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "NodeScan",
            "fields": [
              {
                "id": 1,
                "name": "scan_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 2,
                "name": "components",
                "type": "EmbeddedNodeScanComponent",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NodeInventory",
            "fields": [
              {
                "id": 1,
                "name": "node_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "scan_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "components",
                "type": "Components"
              },
              {
                "id": 5,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Components",
                "fields": [
                  {
                    "id": 1,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "rhel_components",
                    "type": "RHELComponent",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "rhel_content_sets",
                    "type": "string",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "RHELComponent",
                    "fields": [
                      {
                        "id": 1,
                        "name": "id",
                        "type": "int64"
                      },
                      {
                        "id": 2,
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "namespace",
                        "type": "string"
                      },
                      {
                        "id": 4,
                        "name": "version",
                        "type": "string"
                      },
                      {
                        "id": 5,
                        "name": "arch",
                        "type": "string"
                      },
                      {
                        "id": 6,
                        "name": "module",
                        "type": "string"
                      },
                      {
                        "id": 7,
                        "name": "added_by",
                        "type": "string"
                      },
                      {
                        "id": 8,
                        "name": "executables",
                        "type": "Executable",
                        "is_repeated": true
                      }
                    ],
                    "messages": [
                      {
                        "name": "Executable",
                        "fields": [
                          {
                            "id": 1,
                            "name": "path",
                            "type": "string"
                          },
                          {
                            "id": 2,
                            "name": "required_features",
                            "type": "FeatureNameVersion",
                            "is_repeated": true
                          }
                        ],
                        "messages": [
                          {
                            "name": "FeatureNameVersion",
                            "fields": [
                              {
                                "id": 1,
                                "name": "name",
                                "type": "string"
                              },
                              {
                                "id": 2,
                                "name": "version",
                                "type": "string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "EmbeddedNodeScanComponent",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "vulns",
                "type": "EmbeddedVulnerability",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "vulnerabilities",
                "type": "NodeVulnerability",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 6,
                "name": "risk_score",
                "type": "float"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/container_runtime.proto"
          },
          {
            "path": "storage/taints.proto"
          },
          {
            "path": "storage/vulnerability.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:node_component.proto",
      "def": {
        "messages": [
          {
            "name": "NodeComponent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 8,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 9,
                "name": "operating_system",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:node_integration.proto",
      "def": {
        "messages": [
          {
            "name": "NodeIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "clairify",
                "type": "ClairifyConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/image_integration.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:notification_schedule.proto",
      "def": {
        "messages": [
          {
            "name": "NotificationSchedule",
            "fields": [
              {
                "id": 2,
                "name": "last_run",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "reserved_ids": [
              1
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:notifier.proto",
      "def": {
        "enums": [
          {
            "name": "Email.AuthMethod",
            "enum_fields": [
              {
                "name": "DISABLED"
              },
              {
                "name": "PLAIN",
                "integer": 1
              },
              {
                "name": "LOGIN",
                "integer": 2
              }
            ]
          },
          {
            "name": "Syslog.LocalFacility",
            "enum_fields": [
              {
                "name": "LOCAL0"
              },
              {
                "name": "LOCAL1",
                "integer": 1
              },
              {
                "name": "LOCAL2",
                "integer": 2
              },
              {
                "name": "LOCAL3",
                "integer": 3
              },
              {
                "name": "LOCAL4",
                "integer": 4
              },
              {
                "name": "LOCAL5",
                "integer": 5
              },
              {
                "name": "LOCAL6",
                "integer": 6
              },
              {
                "name": "LOCAL7",
                "integer": 7
              }
            ]
          },
          {
            "name": "Syslog.MessageFormat",
            "enum_fields": [
              {
                "name": "LEGACY"
              },
              {
                "name": "CEF",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Notifier",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "ui_endpoint",
                "type": "string"
              },
              {
                "id": 8,
                "name": "label_key",
                "type": "string"
              },
              {
                "id": 9,
                "name": "label_default",
                "type": "string"
              },
              {
                "id": 10,
                "name": "jira",
                "type": "Jira"
              },
              {
                "id": 11,
                "name": "email",
                "type": "Email"
              },
              {
                "id": 12,
                "name": "cscc",
                "type": "CSCC"
              },
              {
                "id": 13,
                "name": "splunk",
                "type": "Splunk"
              },
              {
                "id": 14,
                "name": "pagerduty",
                "type": "PagerDuty"
              },
              {
                "id": 15,
                "name": "generic",
                "type": "Generic"
              },
              {
                "id": 16,
                "name": "sumologic",
                "type": "SumoLogic"
              },
              {
                "id": 17,
                "name": "aws_security_hub",
                "type": "AWSSecurityHub"
              },
              {
                "id": 18,
                "name": "syslog",
                "type": "Syslog"
              },
              {
                "id": 19,
                "name": "notifier_secret",
                "type": "string"
              },
              {
                "id": 50,
                "name": "traits",
                "type": "Traits"
              }
            ],
            "reserved_ids": [
              5
            ],
            "reserved_names": [
              "enabled"
            ]
          },
          {
            "name": "AWSSecurityHub",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "string"
              },
              {
                "id": 2,
                "name": "credentials",
                "type": "Credentials"
              },
              {
                "id": 3,
                "name": "account_id",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Credentials",
                "fields": [
                  {
                    "id": 1,
                    "name": "access_key_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "secret_access_key",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "sts_enabled",
                    "type": "bool"
                  }
                ]
              }
            ]
          },
          {
            "name": "CSCC",
            "fields": [
              {
                "id": 1,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 4,
                "name": "source_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "wif_enabled",
                "type": "bool"
              }
            ],
            "reserved_ids": [
              2,
              3
            ]
          },
          {
            "name": "Jira",
            "fields": [
              {
                "id": 1,
                "name": "url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "username",
                "type": "string"
              },
              {
                "id": 3,
                "name": "password",
                "type": "string"
              },
              {
                "id": 4,
                "name": "issue_type",
                "type": "string"
              },
              {
                "id": 5,
                "name": "priority_mappings",
                "type": "PriorityMapping",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "default_fields_json",
                "type": "string"
              },
              {
                "id": 7,
                "name": "disablePriority",
                "type": "bool"
              }
            ],
            "messages": [
              {
                "name": "PriorityMapping",
                "fields": [
                  {
                    "id": 1,
                    "name": "severity",
                    "type": "Severity"
                  },
                  {
                    "id": 2,
                    "name": "priority_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "Email",
            "fields": [
              {
                "id": 1,
                "name": "server",
                "type": "string"
              },
              {
                "id": 2,
                "name": "sender",
                "type": "string"
              },
              {
                "id": 3,
                "name": "username",
                "type": "string"
              },
              {
                "id": 4,
                "name": "password",
                "type": "string"
              },
              {
                "id": 5,
                "name": "disableTLS",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "DEPRECATED_useStartTLS",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "from",
                "type": "string"
              },
              {
                "id": 8,
                "name": "startTLSAuthMethod",
                "type": "AuthMethod"
              },
              {
                "id": 9,
                "name": "allow_unauthenticated_smtp",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Splunk",
            "fields": [
              {
                "id": 1,
                "name": "http_token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "http_endpoint",
                "type": "string"
              },
              {
                "id": 3,
                "name": "insecure",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "truncate",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "audit_logging_enabled",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "derived_source_type",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "source_types",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PagerDuty",
            "fields": [
              {
                "id": 1,
                "name": "api_key",
                "type": "string"
              }
            ]
          },
          {
            "name": "Generic",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "skipTLSVerify",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "ca_cert",
                "type": "string"
              },
              {
                "id": 4,
                "name": "username",
                "type": "string"
              },
              {
                "id": 5,
                "name": "password",
                "type": "string"
              },
              {
                "id": 6,
                "name": "headers",
                "type": "KeyValuePair",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "extra_fields",
                "type": "KeyValuePair",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "audit_logging_enabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "SumoLogic",
            "fields": [
              {
                "id": 1,
                "name": "http_source_address",
                "type": "string"
              },
              {
                "id": 2,
                "name": "skipTLSVerify",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Syslog",
            "fields": [
              {
                "id": 1,
                "name": "local_facility",
                "type": "LocalFacility"
              },
              {
                "id": 2,
                "name": "tcp_config",
                "type": "TCPConfig"
              },
              {
                "id": 3,
                "name": "extra_fields",
                "type": "KeyValuePair",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "message_format",
                "type": "MessageFormat"
              }
            ],
            "messages": [
              {
                "name": "TCPConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "hostname",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "port",
                    "type": "int32"
                  },
                  {
                    "id": 3,
                    "name": "skip_tls_verify",
                    "type": "bool"
                  },
                  {
                    "id": 4,
                    "name": "use_tls",
                    "type": "bool"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/common.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/traits.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:notifier_enc_config.proto",
      "def": {
        "messages": [
          {
            "name": "NotifierEncConfig",
            "fields": [
              {
                "id": 1,
                "name": "active_key_index",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:operation_status.proto",
      "def": {
        "enums": [
          {
            "name": "OperationStatus",
            "enum_fields": [
              {
                "name": "FAIL"
              },
              {
                "name": "PASS",
                "integer": 1
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:orchestrator_integration.proto",
      "def": {
        "messages": [
          {
            "name": "OrchestratorIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "clairify",
                "type": "ClairifyConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/image_integration.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:policy.proto",
      "def": {
        "enums": [
          {
            "name": "PolicySource",
            "enum_fields": [
              {
                "name": "IMPERATIVE"
              },
              {
                "name": "DECLARATIVE",
                "integer": 1
              }
            ]
          },
          {
            "name": "EventSource",
            "enum_fields": [
              {
                "name": "NOT_APPLICABLE"
              },
              {
                "name": "DEPLOYMENT_EVENT",
                "integer": 1
              },
              {
                "name": "AUDIT_LOG_EVENT",
                "integer": 2
              }
            ]
          },
          {
            "name": "BooleanOperator",
            "enum_fields": [
              {
                "name": "OR"
              },
              {
                "name": "AND",
                "integer": 1
              }
            ]
          },
          {
            "name": "EnforcementAction",
            "enum_fields": [
              {
                "name": "UNSET_ENFORCEMENT"
              },
              {
                "name": "SCALE_TO_ZERO_ENFORCEMENT",
                "integer": 1
              },
              {
                "name": "UNSATISFIABLE_NODE_CONSTRAINT_ENFORCEMENT",
                "integer": 2
              },
              {
                "name": "KILL_POD_ENFORCEMENT",
                "integer": 3
              },
              {
                "name": "FAIL_BUILD_ENFORCEMENT",
                "integer": 4
              },
              {
                "name": "FAIL_KUBE_REQUEST_ENFORCEMENT",
                "integer": 5
              },
              {
                "name": "FAIL_DEPLOYMENT_CREATE_ENFORCEMENT",
                "integer": 6
              },
              {
                "name": "FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT",
                "integer": 7
              }
            ]
          },
          {
            "name": "Severity",
            "enum_fields": [
              {
                "name": "UNSET_SEVERITY"
              },
              {
                "name": "LOW_SEVERITY",
                "integer": 1
              },
              {
                "name": "MEDIUM_SEVERITY",
                "integer": 2
              },
              {
                "name": "HIGH_SEVERITY",
                "integer": 3
              },
              {
                "name": "CRITICAL_SEVERITY",
                "integer": 4
              }
            ]
          },
          {
            "name": "LifecycleStage",
            "enum_fields": [
              {
                "name": "DEPLOY"
              },
              {
                "name": "BUILD",
                "integer": 1
              },
              {
                "name": "RUNTIME",
                "integer": 2
              }
            ]
          },
          {
            "name": "Comparator",
            "enum_fields": [
              {
                "name": "LESS_THAN"
              },
              {
                "name": "LESS_THAN_OR_EQUALS",
                "integer": 1
              },
              {
                "name": "EQUALS",
                "integer": 2
              },
              {
                "name": "GREATER_THAN_OR_EQUALS",
                "integer": 3
              },
              {
                "name": "GREATER_THAN",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Policy",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "rationale",
                "type": "string"
              },
              {
                "id": 5,
                "name": "remediation",
                "type": "string"
              },
              {
                "id": 6,
                "name": "disabled",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "categories",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "lifecycle_stages",
                "type": "LifecycleStage",
                "is_repeated": true
              },
              {
                "id": 22,
                "name": "event_source",
                "type": "EventSource"
              },
              {
                "id": 21,
                "name": "exclusions",
                "type": "Exclusion",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "scope",
                "type": "Scope",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "severity",
                "type": "Severity"
              },
              {
                "id": 13,
                "name": "enforcement_actions",
                "type": "EnforcementAction",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "notifiers",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 15,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 16,
                "name": "SORT_name",
                "type": "string"
              },
              {
                "id": 17,
                "name": "SORT_lifecycleStage",
                "type": "string"
              },
              {
                "id": 18,
                "name": "SORT_enforcement",
                "type": "bool"
              },
              {
                "id": 19,
                "name": "policy_version",
                "type": "string"
              },
              {
                "id": 20,
                "name": "policy_sections",
                "type": "PolicySection",
                "is_repeated": true
              },
              {
                "id": 23,
                "name": "mitre_attack_vectors",
                "type": "MitreAttackVectors",
                "is_repeated": true
              },
              {
                "id": 24,
                "name": "criteria_locked",
                "type": "bool"
              },
              {
                "id": 25,
                "name": "mitre_vectors_locked",
                "type": "bool"
              },
              {
                "id": 26,
                "name": "is_default",
                "type": "bool"
              },
              {
                "id": 27,
                "name": "source",
                "type": "PolicySource"
              }
            ],
            "reserved_ids": [
              8,
              10
            ],
            "messages": [
              {
                "name": "MitreAttackVectors",
                "fields": [
                  {
                    "id": 1,
                    "name": "tactic",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "techniques",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "PolicySection",
            "fields": [
              {
                "id": 1,
                "name": "section_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "policy_groups",
                "type": "PolicyGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyGroup",
            "fields": [
              {
                "id": 1,
                "name": "field_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "boolean_operator",
                "type": "BooleanOperator"
              },
              {
                "id": 3,
                "name": "negate",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "values",
                "type": "PolicyValue",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "PolicyList",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "Policy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListPolicy",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "severity",
                "type": "Severity"
              },
              {
                "id": 5,
                "name": "disabled",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "lifecycle_stages",
                "type": "LifecycleStage",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "notifiers",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "event_source",
                "type": "EventSource"
              },
              {
                "id": 10,
                "name": "is_default",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Exclusion",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "deployment",
                "type": "Deployment"
              },
              {
                "id": 7,
                "name": "image",
                "type": "Image"
              },
              {
                "id": 6,
                "name": "expiration",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "reserved_ids": [
              2
            ],
            "messages": [
              {
                "name": "Container",
                "fields": [
                  {
                    "id": 3,
                    "name": "image_name",
                    "type": "ImageName"
                  }
                ]
              },
              {
                "name": "Deployment",
                "fields": [
                  {
                    "id": 3,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "scope",
                    "type": "Scope"
                  }
                ]
              },
              {
                "name": "Image",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ExportPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "storage.Policy",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/image.proto"
          },
          {
            "path": "storage/scope.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:policy_category.proto",
      "def": {
        "messages": [
          {
            "name": "PolicyCategory",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "isDefault",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:process_baseline.proto",
      "def": {
        "enums": [
          {
            "name": "ContainerNameAndBaselineStatus.BaselineStatus",
            "enum_fields": [
              {
                "name": "INVALID"
              },
              {
                "name": "NOT_GENERATED",
                "integer": 1
              },
              {
                "name": "UNLOCKED",
                "integer": 2
              },
              {
                "name": "LOCKED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ProcessBaselineKey",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProcessBaseline",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "ProcessBaselineKey"
              },
              {
                "id": 3,
                "name": "elements",
                "type": "BaselineElement",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "element_graveyard",
                "type": "BaselineElement",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "user_locked_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "stack_rox_locked_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "last_update",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "BaselineElement",
            "fields": [
              {
                "id": 1,
                "name": "element",
                "type": "BaselineItem"
              },
              {
                "id": 2,
                "name": "auto",
                "type": "bool"
              }
            ]
          },
          {
            "name": "BaselineItem",
            "fields": [
              {
                "id": 1,
                "name": "process_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ContainerNameAndBaselineStatus",
            "fields": [
              {
                "id": 1,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "baseline_status",
                "type": "BaselineStatus"
              },
              {
                "id": 3,
                "name": "anomalous_processes_executed",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ProcessBaselineResults",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 2,
                "name": "baseline_statuses",
                "type": "ContainerNameAndBaselineStatus",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:process_indicator.proto",
      "def": {
        "messages": [
          {
            "name": "ProcessIndicator",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "pod_id",
                "type": "string"
              },
              {
                "id": 11,
                "name": "pod_uid",
                "type": "string"
              },
              {
                "id": 6,
                "name": "signal",
                "type": "ProcessSignal"
              },
              {
                "id": 7,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 9,
                "name": "container_start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 12,
                "name": "image_id",
                "type": "string"
              }
            ],
            "reserved_ids": [
              10,
              5
            ]
          },
          {
            "name": "ProcessIndicatorUniqueKey",
            "fields": [
              {
                "id": 1,
                "name": "pod_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "process_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "process_exec_file_path",
                "type": "string"
              },
              {
                "id": 5,
                "name": "process_args",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkProcessUniqueKey",
            "fields": [
              {
                "id": 1,
                "name": "process_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "process_exec_file_path",
                "type": "string"
              },
              {
                "id": 3,
                "name": "process_args",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProcessSignal",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "args",
                "type": "string"
              },
              {
                "id": 6,
                "name": "exec_file_path",
                "type": "string"
              },
              {
                "id": 7,
                "name": "pid",
                "type": "uint32"
              },
              {
                "id": 8,
                "name": "uid",
                "type": "uint32"
              },
              {
                "id": 9,
                "name": "gid",
                "type": "uint32"
              },
              {
                "id": 10,
                "name": "lineage",
                "type": "string",
                "is_repeated": true,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 11,
                "name": "scraped",
                "type": "bool"
              },
              {
                "id": 12,
                "name": "lineage_info",
                "type": "LineageInfo",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "LineageInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "parent_uid",
                    "type": "uint32"
                  },
                  {
                    "id": 2,
                    "name": "parent_exec_file_path",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:process_listening_on_port.proto",
      "def": {
        "messages": [
          {
            "name": "ProcessListeningOnPort",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "Endpoint"
              },
              {
                "id": 2,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "pod_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "pod_uid",
                "type": "string"
              },
              {
                "id": 6,
                "name": "signal",
                "type": "ProcessSignal"
              },
              {
                "id": 7,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 9,
                "name": "container_start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "image_id",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Endpoint",
                "fields": [
                  {
                    "id": 1,
                    "name": "port",
                    "type": "uint32"
                  },
                  {
                    "id": 2,
                    "name": "protocol",
                    "type": "L4Protocol"
                  }
                ]
              }
            ]
          },
          {
            "name": "ProcessListeningOnPortFromSensor",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "L4Protocol"
              },
              {
                "id": 3,
                "name": "process",
                "type": "ProcessIndicatorUniqueKey"
              },
              {
                "id": 4,
                "name": "close_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "pod_uid",
                "type": "string"
              },
              {
                "id": 9,
                "name": "namespace",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProcessListeningOnPortStorage",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "L4Protocol"
              },
              {
                "id": 4,
                "name": "close_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "process_indicator_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "closed",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "process",
                "type": "ProcessIndicatorUniqueKey"
              },
              {
                "id": 8,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 9,
                "name": "pod_uid",
                "type": "string"
              },
              {
                "id": 10,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 11,
                "name": "namespace",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:rbac.proto",
      "def": {
        "enums": [
          {
            "name": "SubjectKind",
            "enum_fields": [
              {
                "name": "UNSET_KIND"
              },
              {
                "name": "SERVICE_ACCOUNT",
                "integer": 1
              },
              {
                "name": "USER",
                "integer": 2
              },
              {
                "name": "GROUP",
                "integer": 3
              }
            ]
          },
          {
            "name": "PermissionLevel",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "NONE",
                "integer": 1
              },
              {
                "name": "DEFAULT",
                "integer": 2
              },
              {
                "name": "ELEVATED_IN_NAMESPACE",
                "integer": 3
              },
              {
                "name": "ELEVATED_CLUSTER_WIDE",
                "integer": 4
              },
              {
                "name": "CLUSTER_ADMIN",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "K8sRole",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_role",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "rules",
                "type": "PolicyRule",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PolicyRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "api_groups",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "non_resource_urls",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "resource_names",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "K8sRoleBinding",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_role",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "subjects",
                "type": "Subject",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "role_id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "Subject",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "kind",
                "type": "SubjectKind"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_name",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:relations.proto",
      "def": {
        "messages": [
          {
            "name": "ImageComponentEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "layer_index",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "location",
                "type": "string"
              },
              {
                "id": 4,
                "name": "image_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "image_component_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComponentCVEEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "is_fixable",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 4,
                "name": "image_component_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "image_cve_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImageCVEEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "first_image_occurrence",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "state",
                "type": "VulnerabilityState"
              },
              {
                "id": 4,
                "name": "image_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "image_cve_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NodeComponentEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "node_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "node_component_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NodeComponentCVEEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "is_fixable",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 4,
                "name": "node_component_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "node_cve_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ClusterCVEEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "is_fixable",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cve_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "PolicyCategoryEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "policy_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "category_id",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/cve.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:report_configuration.proto",
      "def": {
        "enums": [
          {
            "name": "ReportConfiguration.ReportType",
            "enum_fields": [
              {
                "name": "VULNERABILITY"
              }
            ]
          },
          {
            "name": "ReportLastRunStatus.RunStatus",
            "enum_fields": [
              {
                "name": "SUCCESS"
              },
              {
                "name": "FAILURE",
                "integer": 1
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.Fixability",
            "enum_fields": [
              {
                "name": "BOTH"
              },
              {
                "name": "FIXABLE",
                "integer": 1
              },
              {
                "name": "NOT_FIXABLE",
                "integer": 2
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.ImageType",
            "enum_fields": [
              {
                "name": "DEPLOYED"
              },
              {
                "name": "WATCHED",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ReportConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "ReportType"
              },
              {
                "id": 5,
                "name": "vuln_report_filters",
                "type": "VulnerabilityReportFilters"
              },
              {
                "id": 6,
                "name": "scope_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "email_config",
                "type": "EmailNotifierConfiguration"
              },
              {
                "id": 8,
                "name": "schedule",
                "type": "storage.Schedule"
              },
              {
                "id": 9,
                "name": "last_run_status",
                "type": "ReportLastRunStatus"
              },
              {
                "id": 10,
                "name": "last_successful_run_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 11,
                "name": "resource_scope",
                "type": "ResourceScope"
              },
              {
                "id": 12,
                "name": "notifiers",
                "type": "NotifierConfiguration",
                "is_repeated": true
              },
              {
                "id": 13,
                "name": "creator",
                "type": "SlimUser"
              },
              {
                "id": 14,
                "name": "version",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ReportLastRunStatus",
            "fields": [
              {
                "id": 1,
                "name": "report_status",
                "type": "RunStatus"
              },
              {
                "id": 2,
                "name": "last_run_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "error_msg",
                "type": "string"
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters",
            "fields": [
              {
                "id": 1,
                "name": "fixability",
                "type": "Fixability"
              },
              {
                "id": 2,
                "name": "since_last_report",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "severities",
                "type": "VulnerabilitySeverity",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "image_types",
                "type": "ImageType",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "all_vuln",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "since_last_sent_scheduled_report",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "since_start_date",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "access_scope_rules",
                "type": "SimpleAccessScope.Rules",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ResourceScope",
            "fields": [
              {
                "id": 1,
                "name": "collection_id",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/cve.proto"
          },
          {
            "path": "storage/report_notifier_configuration.proto"
          },
          {
            "path": "storage/role.proto"
          },
          {
            "path": "storage/schedule.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:report_notifier_configuration.proto",
      "def": {
        "messages": [
          {
            "name": "NotifierConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "email_config",
                "type": "EmailNotifierConfiguration"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "EmailNotifierConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "notifier_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "mailing_lists",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "custom_subject",
                "type": "string"
              },
              {
                "id": 4,
                "name": "custom_body",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:report_snapshot.proto",
      "def": {
        "enums": [
          {
            "name": "ReportSnapshot.ReportType",
            "enum_fields": [
              {
                "name": "VULNERABILITY"
              }
            ]
          },
          {
            "name": "ReportStatus.RunState",
            "enum_fields": [
              {
                "name": "WAITING"
              },
              {
                "name": "PREPARING",
                "integer": 1
              },
              {
                "name": "GENERATED",
                "integer": 2
              },
              {
                "name": "DELIVERED",
                "integer": 3
              },
              {
                "name": "FAILURE",
                "integer": 4
              }
            ]
          },
          {
            "name": "ReportStatus.NotificationMethod",
            "enum_fields": [
              {
                "name": "EMAIL"
              },
              {
                "name": "DOWNLOAD",
                "integer": 1
              }
            ]
          },
          {
            "name": "ReportStatus.RunMethod",
            "enum_fields": [
              {
                "name": "ON_DEMAND"
              },
              {
                "name": "SCHEDULED",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ReportSnapshot",
            "fields": [
              {
                "id": 1,
                "name": "report_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "report_configuration_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "type",
                "type": "ReportType"
              },
              {
                "id": 6,
                "name": "vuln_report_filters",
                "type": "VulnerabilityReportFilters"
              },
              {
                "id": 7,
                "name": "collection",
                "type": "CollectionSnapshot"
              },
              {
                "id": 8,
                "name": "schedule",
                "type": "storage.Schedule"
              },
              {
                "id": 9,
                "name": "report_status",
                "type": "ReportStatus"
              },
              {
                "id": 10,
                "name": "notifiers",
                "type": "NotifierSnapshot",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "requester",
                "type": "SlimUser"
              }
            ]
          },
          {
            "name": "CollectionSnapshot",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "NotifierSnapshot",
            "fields": [
              {
                "id": 1,
                "name": "email_config",
                "type": "EmailNotifierConfiguration"
              },
              {
                "id": 2,
                "name": "notifier_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ReportStatus",
            "fields": [
              {
                "id": 1,
                "name": "run_state",
                "type": "RunState"
              },
              {
                "id": 2,
                "name": "queued_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "completed_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "error_msg",
                "type": "string"
              },
              {
                "id": 5,
                "name": "report_request_type",
                "type": "RunMethod"
              },
              {
                "id": 6,
                "name": "report_notification_method",
                "type": "NotificationMethod"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/report_configuration.proto"
          },
          {
            "path": "storage/report_notifier_configuration.proto"
          },
          {
            "path": "storage/schedule.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:resource_collection.proto",
      "def": {
        "enums": [
          {
            "name": "MatchType",
            "enum_fields": [
              {
                "name": "EXACT"
              },
              {
                "name": "REGEX",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ResourceCollection",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "created_by",
                "type": "SlimUser"
              },
              {
                "id": 7,
                "name": "updated_by",
                "type": "SlimUser"
              },
              {
                "id": 8,
                "name": "resource_selectors",
                "type": "ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "embedded_collections",
                "type": "EmbeddedResourceCollection",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "EmbeddedResourceCollection",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ResourceSelector",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "SelectorRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SelectorRule",
            "fields": [
              {
                "id": 1,
                "name": "field_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "operator",
                "type": "BooleanOperator"
              },
              {
                "id": 3,
                "name": "values",
                "type": "RuleValue",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RuleValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              },
              {
                "id": 2,
                "name": "match_type",
                "type": "MatchType"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:risk.proto",
      "def": {
        "enums": [
          {
            "name": "RiskSubjectType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "DEPLOYMENT",
                "integer": 1
              },
              {
                "name": "NAMESPACE",
                "integer": 2
              },
              {
                "name": "CLUSTER",
                "integer": 3
              },
              {
                "name": "NODE",
                "integer": 7
              },
              {
                "name": "NODE_COMPONENT",
                "integer": 8
              },
              {
                "name": "IMAGE",
                "integer": 4
              },
              {
                "name": "IMAGE_COMPONENT",
                "integer": 6
              },
              {
                "name": "SERVICEACCOUNT",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Risk",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "subject",
                "type": "RiskSubject"
              },
              {
                "id": 3,
                "name": "score",
                "type": "float"
              },
              {
                "id": 4,
                "name": "results",
                "type": "Result",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Result",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "factors",
                    "type": "Factor",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "score",
                    "type": "float"
                  }
                ],
                "messages": [
                  {
                    "name": "Factor",
                    "fields": [
                      {
                        "id": 1,
                        "name": "message",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "url",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "RiskSubject",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "RiskSubjectType"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:role.proto",
      "def": {
        "enums": [
          {
            "name": "Access",
            "enum_fields": [
              {
                "name": "NO_ACCESS"
              },
              {
                "name": "READ_ACCESS",
                "integer": 1
              },
              {
                "name": "READ_WRITE_ACCESS",
                "integer": 2
              }
            ]
          },
          {
            "name": "EffectiveAccessScope.State",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "INCLUDED",
                "integer": 1
              },
              {
                "name": "EXCLUDED",
                "integer": 2
              },
              {
                "name": "PARTIAL",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Role",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "description",
                "type": "string"
              },
              {
                "id": 6,
                "name": "permission_set_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "access_scope_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "global_access",
                "type": "Access",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 8,
                "name": "traits",
                "type": "Traits"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "resource_to_access",
                  "type": "Access",
                  "options": [
                    {
                      "name": "deprecated",
                      "value": "true"
                    }
                  ]
                }
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "PermissionSet",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "traits",
                "type": "Traits"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "resource_to_access",
                  "type": "Access"
                }
              }
            ]
          },
          {
            "name": "SimpleAccessScope",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "rules",
                "type": "Rules"
              },
              {
                "id": 5,
                "name": "traits",
                "type": "Traits"
              }
            ],
            "messages": [
              {
                "name": "Rules",
                "fields": [
                  {
                    "id": 1,
                    "name": "included_clusters",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "included_namespaces",
                    "type": "Namespace",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "cluster_label_selectors",
                    "type": "SetBasedLabelSelector",
                    "is_repeated": true
                  },
                  {
                    "id": 4,
                    "name": "namespace_label_selectors",
                    "type": "SetBasedLabelSelector",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "Namespace",
                    "fields": [
                      {
                        "id": 1,
                        "name": "cluster_name",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "namespace_name",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "EffectiveAccessScope",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "Cluster",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Namespace",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "state",
                    "type": "State"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 4,
                      "name": "labels",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "Cluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "state",
                    "type": "State"
                  },
                  {
                    "id": 4,
                    "name": "namespaces",
                    "type": "Namespace",
                    "is_repeated": true
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 5,
                      "name": "labels",
                      "type": "string"
                    }
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/labels.proto"
          },
          {
            "path": "storage/traits.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:schedule.proto",
      "def": {
        "enums": [
          {
            "name": "Schedule.IntervalType",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "DAILY",
                "integer": 1
              },
              {
                "name": "WEEKLY",
                "integer": 2
              },
              {
                "name": "MONTHLY",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Schedule",
            "fields": [
              {
                "id": 1,
                "name": "interval_type",
                "type": "IntervalType"
              },
              {
                "id": 2,
                "name": "hour",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "minute",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "weekly",
                "type": "WeeklyInterval"
              },
              {
                "id": 5,
                "name": "days_of_week",
                "type": "DaysOfWeek"
              },
              {
                "id": 6,
                "name": "days_of_month",
                "type": "DaysOfMonth"
              }
            ],
            "messages": [
              {
                "name": "WeeklyInterval",
                "fields": [
                  {
                    "id": 1,
                    "name": "day",
                    "type": "int32"
                  }
                ]
              },
              {
                "name": "DaysOfWeek",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "DaysOfMonth",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:scope.proto",
      "def": {
        "messages": [
          {
            "name": "Scope",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 3,
                "name": "label",
                "type": "Label"
              }
            ],
            "messages": [
              {
                "name": "Label",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:secret.proto",
      "def": {
        "enums": [
          {
            "name": "SecretType",
            "enum_fields": [
              {
                "name": "UNDETERMINED"
              },
              {
                "name": "PUBLIC_CERTIFICATE",
                "integer": 1
              },
              {
                "name": "CERTIFICATE_REQUEST",
                "integer": 2
              },
              {
                "name": "PRIVACY_ENHANCED_MESSAGE",
                "integer": 3
              },
              {
                "name": "OPENSSH_PRIVATE_KEY",
                "integer": 4
              },
              {
                "name": "PGP_PRIVATE_KEY",
                "integer": 5
              },
              {
                "name": "EC_PRIVATE_KEY",
                "integer": 6
              },
              {
                "name": "RSA_PRIVATE_KEY",
                "integer": 7
              },
              {
                "name": "DSA_PRIVATE_KEY",
                "integer": 8
              },
              {
                "name": "CERT_PRIVATE_KEY",
                "integer": 9
              },
              {
                "name": "ENCRYPTED_PRIVATE_KEY",
                "integer": 10
              },
              {
                "name": "IMAGE_PULL_SECRET",
                "integer": 11
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Secret",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 6,
                "name": "type",
                "type": "string"
              },
              {
                "id": 9,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "files",
                "type": "SecretDataFile",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "relationship",
                "type": "SecretRelationship"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ListSecret",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 7,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "types",
                "type": "SecretType",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "SecretRelationship",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "container_relationships",
                "type": "SecretContainerRelationship",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "deployment_relationships",
                "type": "SecretDeploymentRelationship",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SecretDeploymentRelationship",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "SecretContainerRelationship",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImagePullSecret",
            "fields": [
              {
                "id": 1,
                "name": "registries",
                "type": "Registry",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Registry",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "username",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "SecretDataFile",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "SecretType"
              },
              {
                "id": 3,
                "name": "cert",
                "type": "Cert"
              },
              {
                "id": 4,
                "name": "image_pull_secret",
                "type": "ImagePullSecret"
              }
            ]
          },
          {
            "name": "Cert",
            "fields": [
              {
                "id": 1,
                "name": "subject",
                "type": "CertName"
              },
              {
                "id": 2,
                "name": "issuer",
                "type": "CertName"
              },
              {
                "id": 3,
                "name": "sans",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "start_date",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "end_date",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "algorithm",
                "type": "string"
              }
            ]
          },
          {
            "name": "CertName",
            "fields": [
              {
                "id": 1,
                "name": "common_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "country",
                "type": "string"
              },
              {
                "id": 3,
                "name": "organization",
                "type": "string"
              },
              {
                "id": 4,
                "name": "organization_unit",
                "type": "string"
              },
              {
                "id": 5,
                "name": "locality",
                "type": "string"
              },
              {
                "id": 6,
                "name": "province",
                "type": "string"
              },
              {
                "id": 7,
                "name": "street_address",
                "type": "string"
              },
              {
                "id": 8,
                "name": "postal_code",
                "type": "string"
              },
              {
                "id": 9,
                "name": "names",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:sensor_upgrade.proto",
      "def": {
        "messages": [
          {
            "name": "SensorUpgradeConfig",
            "fields": [
              {
                "id": 1,
                "name": "enable_auto_upgrade",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:service_account.proto",
      "def": {
        "messages": [
          {
            "name": "ServiceAccount",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "automount_token",
                "type": "bool"
              },
              {
                "id": 10,
                "name": "secrets",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "image_pull_secrets",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:service_identity.proto",
      "def": {
        "enums": [
          {
            "name": "ServiceType",
            "enum_fields": [
              {
                "name": "UNKNOWN_SERVICE"
              },
              {
                "name": "SENSOR_SERVICE",
                "integer": 1
              },
              {
                "name": "CENTRAL_SERVICE",
                "integer": 2
              },
              {
                "name": "CENTRAL_DB_SERVICE",
                "integer": 12
              },
              {
                "name": "REMOTE_SERVICE",
                "integer": 3
              },
              {
                "name": "COLLECTOR_SERVICE",
                "integer": 4
              },
              {
                "name": "MONITORING_UI_SERVICE",
                "integer": 5
              },
              {
                "name": "MONITORING_DB_SERVICE",
                "integer": 6
              },
              {
                "name": "MONITORING_CLIENT_SERVICE",
                "integer": 7
              },
              {
                "name": "BENCHMARK_SERVICE",
                "integer": 8
              },
              {
                "name": "SCANNER_SERVICE",
                "integer": 9
              },
              {
                "name": "SCANNER_DB_SERVICE",
                "integer": 10
              },
              {
                "name": "ADMISSION_CONTROL_SERVICE",
                "integer": 11
              },
              {
                "name": "SCANNER_V4_INDEXER_SERVICE",
                "integer": 13
              },
              {
                "name": "SCANNER_V4_MATCHER_SERVICE",
                "integer": 14
              },
              {
                "name": "SCANNER_V4_DB_SERVICE",
                "integer": 15
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ServiceIdentity",
            "fields": [
              {
                "id": 4,
                "name": "serial_str",
                "type": "string"
              },
              {
                "id": 1,
                "name": "serial",
                "type": "int64",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "ServiceType"
              },
              {
                "id": 5,
                "name": "init_bundle_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ServiceCertificate",
            "fields": [
              {
                "id": 1,
                "name": "cert_pem",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "key_pem",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "TypedServiceCertificate",
            "fields": [
              {
                "id": 1,
                "name": "service_type",
                "type": "ServiceType"
              },
              {
                "id": 2,
                "name": "cert",
                "type": "ServiceCertificate"
              }
            ]
          },
          {
            "name": "TypedServiceCertificateSet",
            "fields": [
              {
                "id": 1,
                "name": "ca_pem",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "service_certs",
                "type": "TypedServiceCertificate",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:signature_integration.proto",
      "def": {
        "messages": [
          {
            "name": "SignatureIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cosign",
                "type": "CosignPublicKeyVerification"
              },
              {
                "id": 4,
                "name": "cosign_certificates",
                "type": "CosignCertificateVerification",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CosignPublicKeyVerification",
            "fields": [
              {
                "id": 3,
                "name": "public_keys",
                "type": "PublicKey",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "PublicKey",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "public_key_pem_enc",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "CosignCertificateVerification",
            "fields": [
              {
                "id": 1,
                "name": "certificate_pem_enc",
                "type": "string"
              },
              {
                "id": 2,
                "name": "certificate_chain_pem_enc",
                "type": "string"
              },
              {
                "id": 3,
                "name": "certificate_oidc_issuer",
                "type": "string"
              },
              {
                "id": 4,
                "name": "certificate_identity",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:system_info.proto",
      "def": {
        "messages": [
          {
            "name": "BackupInfo",
            "fields": [
              {
                "id": 1,
                "name": "backup_last_run_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "status",
                "type": "OperationStatus"
              },
              {
                "id": 3,
                "name": "requestor",
                "type": "SlimUser"
              }
            ]
          },
          {
            "name": "SystemInfo",
            "fields": [
              {
                "id": 1,
                "name": "backup_info",
                "type": "BackupInfo"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/operation_status.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:taints.proto",
      "def": {
        "enums": [
          {
            "name": "TaintEffect",
            "enum_fields": [
              {
                "name": "UNKNOWN_TAINT_EFFECT"
              },
              {
                "name": "NO_SCHEDULE_TAINT_EFFECT",
                "integer": 1
              },
              {
                "name": "PREFER_NO_SCHEDULE_TAINT_EFFECT",
                "integer": 2
              },
              {
                "name": "NO_EXECUTE_TAINT_EFFECT",
                "integer": 3
              }
            ]
          },
          {
            "name": "Toleration.Operator",
            "enum_fields": [
              {
                "name": "TOLERATION_OPERATION_UNKNOWN"
              },
              {
                "name": "TOLERATION_OPERATOR_EXISTS",
                "integer": 1
              },
              {
                "name": "TOLERATION_OPERATOR_EQUAL",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Taint",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "taint_effect",
                "type": "TaintEffect"
              }
            ]
          },
          {
            "name": "Toleration",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "operator",
                "type": "Operator"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "taint_effect",
                "type": "TaintEffect"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:telemetry.proto",
      "def": {
        "messages": [
          {
            "name": "TelemetryConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "last_set_time",
                "type": "google.protobuf.Timestamp",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:test.proto",
      "def": {
        "enums": [
          {
            "name": "TestSingleKeyStruct.Enum",
            "enum_fields": [
              {
                "name": "ENUM0"
              },
              {
                "name": "ENUM1",
                "integer": 1
              },
              {
                "name": "ENUM2",
                "integer": 2
              }
            ]
          },
          {
            "name": "TestSingleUUIDKeyStruct.Enum",
            "enum_fields": [
              {
                "name": "ENUM0"
              },
              {
                "name": "ENUM1",
                "integer": 1
              },
              {
                "name": "ENUM2",
                "integer": 2
              }
            ]
          },
          {
            "name": "TestStruct.Enum",
            "enum_fields": [
              {
                "name": "ENUM0"
              },
              {
                "name": "ENUM1",
                "integer": 1
              },
              {
                "name": "ENUM2",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "TestSingleKeyStruct",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "bool",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "uint64",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "int64",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "float",
                "type": "float"
              },
              {
                "id": 9,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "enum",
                "type": "Enum"
              },
              {
                "id": 11,
                "name": "enums",
                "type": "Enum",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "embedded",
                "type": "Embedded"
              },
              {
                "id": 13,
                "name": "nested",
                "type": "Nested",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "oneofstring",
                "type": "string"
              },
              {
                "id": 15,
                "name": "oneofnested",
                "type": "OneOfNested"
              },
              {
                "id": 16,
                "name": "bytess",
                "type": "bytes"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "labels",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Embedded",
                "fields": [
                  {
                    "id": 1,
                    "name": "embedded",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "Embedded2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "embedded",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Nested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "OneOfNested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "TestSingleUUIDKeyStruct",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "bool",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "uint64",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "int64",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "float",
                "type": "float"
              },
              {
                "id": 9,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "enum",
                "type": "Enum"
              },
              {
                "id": 11,
                "name": "enums",
                "type": "Enum",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "embedded",
                "type": "Embedded"
              },
              {
                "id": 13,
                "name": "nested",
                "type": "Nested",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "oneofstring",
                "type": "string"
              },
              {
                "id": 15,
                "name": "oneofnested",
                "type": "OneOfNested"
              },
              {
                "id": 16,
                "name": "bytess",
                "type": "bytes"
              },
              {
                "id": 17,
                "name": "oneof_two_string",
                "type": "string"
              },
              {
                "id": 18,
                "name": "oneof_two_int",
                "type": "int64"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "labels",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Embedded",
                "fields": [
                  {
                    "id": 1,
                    "name": "embedded",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "Embedded2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "embedded",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Nested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "OneOfNested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "TestStruct",
            "fields": [
              {
                "id": 1,
                "name": "key1",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key2",
                "type": "string"
              },
              {
                "id": 3,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "bool",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "uint64",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "int64",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "float",
                "type": "float"
              },
              {
                "id": 9,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "enum",
                "type": "Enum"
              },
              {
                "id": 11,
                "name": "enums",
                "type": "Enum",
                "is_repeated": true
              },
              {
                "id": 16,
                "name": "string",
                "type": "string"
              },
              {
                "id": 17,
                "name": "int_slice_deprecated",
                "type": "int64",
                "is_repeated": true,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 18,
                "name": "int32_slice",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "embedded",
                "type": "Embedded"
              },
              {
                "id": 13,
                "name": "nested",
                "type": "Nested",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "oneofstring",
                "type": "string"
              },
              {
                "id": 15,
                "name": "oneofnested",
                "type": "OneOfNested"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "labels",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Embedded",
                "fields": [
                  {
                    "id": 1,
                    "name": "embedded",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "Embedded2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "embedded",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Nested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "is_nested",
                    "type": "bool"
                  },
                  {
                    "id": 4,
                    "name": "int64",
                    "type": "int64"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "is_nested",
                        "type": "bool"
                      },
                      {
                        "id": 4,
                        "name": "int64",
                        "type": "int64"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "OneOfNested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "TestGrandparent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "val",
                "type": "string"
              },
              {
                "id": 3,
                "name": "embedded",
                "type": "Embedded",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "risk_score",
                "type": "float"
              }
            ],
            "messages": [
              {
                "name": "Embedded",
                "fields": [
                  {
                    "id": 1,
                    "name": "val",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "embedded2",
                    "type": "Embedded2",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "Embedded2",
                    "fields": [
                      {
                        "id": 1,
                        "name": "val",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "TestParent1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "children",
                "type": "Child1Ref",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "val",
                "type": "string"
              },
              {
                "id": 5,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Child1Ref",
                "fields": [
                  {
                    "id": 1,
                    "name": "child_id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "TestChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestGrandChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "child_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestGGrandChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestG2GrandChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "child_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestG3GrandChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestParent2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestChild2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "grandparent_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestParent3",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestParent4",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestChild1P4",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestShortCircuit",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "child_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "g2_grandchild_id",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:traits.proto",
      "def": {
        "enums": [
          {
            "name": "Traits.MutabilityMode",
            "enum_fields": [
              {
                "name": "ALLOW_MUTATE"
              },
              {
                "name": "ALLOW_MUTATE_FORCED",
                "integer": 1
              }
            ]
          },
          {
            "name": "Traits.Visibility",
            "enum_fields": [
              {
                "name": "VISIBLE"
              },
              {
                "name": "HIDDEN",
                "integer": 1
              }
            ]
          },
          {
            "name": "Traits.Origin",
            "enum_fields": [
              {
                "name": "IMPERATIVE"
              },
              {
                "name": "DEFAULT",
                "integer": 1
              },
              {
                "name": "DECLARATIVE",
                "integer": 2
              },
              {
                "name": "DECLARATIVE_ORPHANED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Traits",
            "fields": [
              {
                "id": 1,
                "name": "mutability_mode",
                "type": "MutabilityMode"
              },
              {
                "id": 2,
                "name": "visibility",
                "type": "Visibility"
              },
              {
                "id": 3,
                "name": "origin",
                "type": "Origin"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:user.proto",
      "def": {
        "messages": [
          {
            "name": "SlimUser",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "User",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "attributes",
                "type": "UserAttribute",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "idp_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "UserAttribute",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "UserInfo",
            "fields": [
              {
                "id": 1,
                "name": "username",
                "type": "string"
              },
              {
                "id": 2,
                "name": "friendly_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "permissions",
                "type": "ResourceToAccess"
              },
              {
                "id": 5,
                "name": "roles",
                "type": "Role",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              3
            ],
            "messages": [
              {
                "name": "Role",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "resource_to_access",
                      "type": "Access"
                    }
                  }
                ],
                "reserved_ids": [
                  2
                ]
              },
              {
                "name": "ResourceToAccess",
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "resource_to_access",
                      "type": "Access"
                    }
                  }
                ],
                "reserved_ids": [
                  1,
                  2
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/role.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:version.proto",
      "def": {
        "messages": [
          {
            "name": "Version",
            "fields": [
              {
                "id": 1,
                "name": "seq_num",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "last_persisted",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "min_seq_num",
                "type": "int32"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:vuln_requests.proto",
      "def": {
        "enums": [
          {
            "name": "RequestStatus",
            "enum_fields": [
              {
                "name": "PENDING"
              },
              {
                "name": "APPROVED",
                "integer": 1
              },
              {
                "name": "DENIED",
                "integer": 2
              },
              {
                "name": "APPROVED_PENDING_UPDATE",
                "integer": 3
              }
            ]
          },
          {
            "name": "RequestExpiry.ExpiryType",
            "enum_fields": [
              {
                "name": "TIME"
              },
              {
                "name": "ALL_CVE_FIXABLE",
                "integer": 1
              },
              {
                "name": "ANY_CVE_FIXABLE",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "RequestComment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              },
              {
                "id": 3,
                "name": "user",
                "type": "SlimUser"
              },
              {
                "id": 4,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "RequestExpiry",
            "fields": [
              {
                "id": 1,
                "name": "expires_when_fixed",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "expires_on",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "expiry_type",
                "type": "ExpiryType"
              }
            ]
          },
          {
            "name": "DeferralRequest",
            "fields": [
              {
                "id": 1,
                "name": "expiry",
                "type": "RequestExpiry"
              }
            ]
          },
          {
            "name": "FalsePositiveRequest"
          },
          {
            "name": "DeferralUpdate",
            "fields": [
              {
                "id": 1,
                "name": "CVEs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "expiry",
                "type": "RequestExpiry"
              }
            ]
          },
          {
            "name": "FalsePositiveUpdate",
            "fields": [
              {
                "id": 1,
                "name": "CVEs",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Requester",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "Approver",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "VulnerabilityRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 26,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "target_state",
                "type": "VulnerabilityState"
              },
              {
                "id": 3,
                "name": "status",
                "type": "RequestStatus"
              },
              {
                "id": 4,
                "name": "expired",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "requestor",
                "type": "SlimUser",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 6,
                "name": "approvers",
                "type": "SlimUser",
                "is_repeated": true,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 7,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "comments",
                "type": "RequestComment",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "scope",
                "type": "Scope"
              },
              {
                "id": 28,
                "name": "requester_v2",
                "type": "Requester"
              },
              {
                "id": 29,
                "name": "approvers_v2",
                "type": "Approver",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "deferral_req",
                "type": "DeferralRequest"
              },
              {
                "id": 12,
                "name": "fp_request",
                "type": "FalsePositiveRequest"
              },
              {
                "id": 16,
                "name": "cves",
                "type": "CVEs"
              },
              {
                "id": 21,
                "name": "updated_deferral_req",
                "type": "DeferralRequest",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 22,
                "name": "deferral_update",
                "type": "DeferralUpdate"
              },
              {
                "id": 23,
                "name": "false_positive_update",
                "type": "FalsePositiveUpdate"
              }
            ],
            "messages": [
              {
                "name": "CVEs",
                "fields": [
                  {
                    "id": 1,
                    "name": "cves",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "Scope",
                "fields": [
                  {
                    "id": 1,
                    "name": "image_scope",
                    "type": "Image"
                  },
                  {
                    "id": 2,
                    "name": "global_scope",
                    "type": "Global",
                    "options": [
                      {
                        "name": "deprecated",
                        "value": "true"
                      }
                    ]
                  }
                ],
                "messages": [
                  {
                    "name": "Image",
                    "fields": [
                      {
                        "id": 1,
                        "name": "registry",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "remote",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "tag",
                        "type": "string"
                      }
                    ]
                  },
                  {
                    "name": "Global"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/cve.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:storage:/:vulnerability.proto",
      "def": {
        "enums": [
          {
            "name": "EmbeddedVulnerability.ScoreVersion",
            "enum_fields": [
              {
                "name": "V2"
              },
              {
                "name": "V3",
                "integer": 1
              }
            ]
          },
          {
            "name": "EmbeddedVulnerability.VulnerabilityType",
            "enum_fields": [
              {
                "name": "UNKNOWN_VULNERABILITY"
              },
              {
                "name": "IMAGE_VULNERABILITY",
                "integer": 1
              },
              {
                "name": "K8S_VULNERABILITY",
                "integer": 2
              },
              {
                "name": "ISTIO_VULNERABILITY",
                "integer": 3
              },
              {
                "name": "NODE_VULNERABILITY",
                "integer": 4
              },
              {
                "name": "OPENSHIFT_VULNERABILITY",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "EmbeddedVulnerability",
            "fields": [
              {
                "id": 1,
                "name": "cve",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 3,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 4,
                "name": "link",
                "type": "string"
              },
              {
                "id": 5,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 8,
                "name": "score_version",
                "type": "ScoreVersion"
              },
              {
                "id": 6,
                "name": "cvss_v2",
                "type": "CVSSV2"
              },
              {
                "id": 7,
                "name": "cvss_v3",
                "type": "CVSSV3"
              },
              {
                "id": 9,
                "name": "published_on",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "last_modified",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 11,
                "name": "vulnerability_type",
                "type": "VulnerabilityType"
              },
              {
                "id": 18,
                "name": "vulnerability_types",
                "type": "VulnerabilityType",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "suppressed",
                "type": "bool"
              },
              {
                "id": 13,
                "name": "suppress_activation",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 14,
                "name": "suppress_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 15,
                "name": "first_system_occurrence",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 16,
                "name": "first_image_occurrence",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 19,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 20,
                "name": "state",
                "type": "VulnerabilityState"
              }
            ],
            "reserved_ids": [
              17
            ]
          },
          {
            "name": "NodeVulnerability",
            "fields": [
              {
                "id": 1,
                "name": "cve_base_info",
                "type": "CVEInfo"
              },
              {
                "id": 2,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 3,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 4,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 5,
                "name": "snoozed",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "snooze_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "snooze_expiry",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/cve.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "proto:/:test:/:test.proto",
      "def": {
        "enums": [
          {
            "name": "TestClone.CloneEnum",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "Val1",
                "integer": 1
              },
              {
                "name": "Val2",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "TestCloneSubMessage",
            "fields": [
              {
                "id": 1,
                "name": "int32",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "string",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestClone",
            "fields": [
              {
                "id": 1,
                "name": "int_slice",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "sub_messages",
                "type": "TestCloneSubMessage",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "enum_slice",
                "type": "CloneEnum",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "ts",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "int32",
                "type": "int32"
              },
              {
                "id": 9,
                "name": "string",
                "type": "string"
              },
              {
                "id": 10,
                "name": "msg",
                "type": "TestCloneSubMessage"
              },
              {
                "id": 11,
                "name": "any",
                "type": "google.protobuf.Any"
              },
              {
                "id": 13,
                "name": "bytes_slice",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "bytes",
                "type": "bytes"
              },
              {
                "id": 15,
                "name": "sub_message",
                "type": "TestCloneSubMessage"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "message_map",
                  "type": "TestCloneSubMessage"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "string_map",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 12,
                  "name": "bytes_map",
                  "type": "bytes"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "test"
        }
      }
    },
    {
      "protopath": "proto:/:tools:/:local-sensor:/:message.proto",
      "def": {
        "messages": [
          {
            "name": "LocalSensorPolicies",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "storage.Policy",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "localSensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:annotations.proto",
      "def": {
        "messages": [
          {
            "name": "google.protobuf.MethodOptions",
            "fields": [
              {
                "id": 72295728,
                "name": "http",
                "type": "HttpRule"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/http.proto"
          },
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:auth.proto",
      "def": {
        "messages": [
          {
            "name": "Authentication",
            "fields": [
              {
                "id": 3,
                "name": "rules",
                "type": "AuthenticationRule",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "providers",
                "type": "AuthProvider",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AuthenticationRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "oauth",
                "type": "OAuthRequirements"
              },
              {
                "id": 5,
                "name": "allow_without_credential",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "requirements",
                "type": "AuthRequirement",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "JwtLocation",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cookie",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value_prefix",
                "type": "string"
              }
            ]
          },
          {
            "name": "AuthProvider",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "issuer",
                "type": "string"
              },
              {
                "id": 3,
                "name": "jwks_uri",
                "type": "string"
              },
              {
                "id": 4,
                "name": "audiences",
                "type": "string"
              },
              {
                "id": 5,
                "name": "authorization_url",
                "type": "string"
              },
              {
                "id": 6,
                "name": "jwt_locations",
                "type": "JwtLocation",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "OAuthRequirements",
            "fields": [
              {
                "id": 1,
                "name": "canonical_scopes",
                "type": "string"
              }
            ]
          },
          {
            "name": "AuthRequirement",
            "fields": [
              {
                "id": 1,
                "name": "provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "audiences",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:backend.proto",
      "def": {
        "enums": [
          {
            "name": "BackendRule.PathTranslation",
            "enum_fields": [
              {
                "name": "PATH_TRANSLATION_UNSPECIFIED"
              },
              {
                "name": "CONSTANT_ADDRESS",
                "integer": 1
              },
              {
                "name": "APPEND_PATH_TO_ADDRESS",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Backend",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "BackendRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BackendRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "address",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deadline",
                "type": "double"
              },
              {
                "id": 4,
                "name": "min_deadline",
                "type": "double",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 5,
                "name": "operation_deadline",
                "type": "double"
              },
              {
                "id": 6,
                "name": "path_translation",
                "type": "PathTranslation"
              },
              {
                "id": 7,
                "name": "jwt_audience",
                "type": "string"
              },
              {
                "id": 8,
                "name": "disable_auth",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "protocol",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 10,
                  "name": "overrides_by_request_protocol",
                  "type": "BackendRule"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:billing.proto",
      "def": {
        "messages": [
          {
            "name": "Billing",
            "fields": [
              {
                "id": 8,
                "name": "consumer_destinations",
                "type": "BillingDestination",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "BillingDestination",
                "fields": [
                  {
                    "id": 1,
                    "name": "monitored_resource",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "metrics",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:client.proto",
      "def": {
        "enums": [
          {
            "name": "ClientLibraryOrganization",
            "enum_fields": [
              {
                "name": "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED"
              },
              {
                "name": "CLOUD",
                "integer": 1
              },
              {
                "name": "ADS",
                "integer": 2
              },
              {
                "name": "PHOTOS",
                "integer": 3
              },
              {
                "name": "STREET_VIEW",
                "integer": 4
              }
            ]
          },
          {
            "name": "ClientLibraryDestination",
            "enum_fields": [
              {
                "name": "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED"
              },
              {
                "name": "GITHUB",
                "integer": 10
              },
              {
                "name": "PACKAGE_MANAGER",
                "integer": 20
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "google.protobuf.MethodOptions",
            "fields": [
              {
                "id": 1051,
                "name": "method_signature",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "google.protobuf.ServiceOptions",
            "fields": [
              {
                "id": 1049,
                "name": "default_host",
                "type": "string"
              },
              {
                "id": 1050,
                "name": "oauth_scopes",
                "type": "string"
              }
            ]
          },
          {
            "name": "CommonLanguageSettings",
            "fields": [
              {
                "id": 1,
                "name": "reference_docs_uri",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 2,
                "name": "destinations",
                "type": "ClientLibraryDestination",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ClientLibrarySettings",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "launch_stage",
                "type": "LaunchStage"
              },
              {
                "id": 3,
                "name": "rest_numeric_enums",
                "type": "bool"
              },
              {
                "id": 21,
                "name": "java_settings",
                "type": "JavaSettings"
              },
              {
                "id": 22,
                "name": "cpp_settings",
                "type": "CppSettings"
              },
              {
                "id": 23,
                "name": "php_settings",
                "type": "PhpSettings"
              },
              {
                "id": 24,
                "name": "python_settings",
                "type": "PythonSettings"
              },
              {
                "id": 25,
                "name": "node_settings",
                "type": "NodeSettings"
              },
              {
                "id": 26,
                "name": "dotnet_settings",
                "type": "DotnetSettings"
              },
              {
                "id": 27,
                "name": "ruby_settings",
                "type": "RubySettings"
              },
              {
                "id": 28,
                "name": "go_settings",
                "type": "GoSettings"
              }
            ]
          },
          {
            "name": "Publishing",
            "fields": [
              {
                "id": 2,
                "name": "method_settings",
                "type": "MethodSettings",
                "is_repeated": true
              },
              {
                "id": 101,
                "name": "new_issue_uri",
                "type": "string"
              },
              {
                "id": 102,
                "name": "documentation_uri",
                "type": "string"
              },
              {
                "id": 103,
                "name": "api_short_name",
                "type": "string"
              },
              {
                "id": 104,
                "name": "github_label",
                "type": "string"
              },
              {
                "id": 105,
                "name": "codeowner_github_teams",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 106,
                "name": "doc_tag_prefix",
                "type": "string"
              },
              {
                "id": 107,
                "name": "organization",
                "type": "ClientLibraryOrganization"
              },
              {
                "id": 109,
                "name": "library_settings",
                "type": "ClientLibrarySettings",
                "is_repeated": true
              },
              {
                "id": 110,
                "name": "proto_reference_documentation_uri",
                "type": "string"
              }
            ]
          },
          {
            "name": "JavaSettings",
            "fields": [
              {
                "id": 1,
                "name": "library_package",
                "type": "string"
              },
              {
                "id": 3,
                "name": "common",
                "type": "CommonLanguageSettings"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "service_class_names",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "CppSettings",
            "fields": [
              {
                "id": 1,
                "name": "common",
                "type": "CommonLanguageSettings"
              }
            ]
          },
          {
            "name": "PhpSettings",
            "fields": [
              {
                "id": 1,
                "name": "common",
                "type": "CommonLanguageSettings"
              }
            ]
          },
          {
            "name": "PythonSettings",
            "fields": [
              {
                "id": 1,
                "name": "common",
                "type": "CommonLanguageSettings"
              }
            ]
          },
          {
            "name": "NodeSettings",
            "fields": [
              {
                "id": 1,
                "name": "common",
                "type": "CommonLanguageSettings"
              }
            ]
          },
          {
            "name": "DotnetSettings",
            "fields": [
              {
                "id": 1,
                "name": "common",
                "type": "CommonLanguageSettings"
              }
            ]
          },
          {
            "name": "RubySettings",
            "fields": [
              {
                "id": 1,
                "name": "common",
                "type": "CommonLanguageSettings"
              }
            ]
          },
          {
            "name": "GoSettings",
            "fields": [
              {
                "id": 1,
                "name": "common",
                "type": "CommonLanguageSettings"
              }
            ]
          },
          {
            "name": "MethodSettings",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "long_running",
                "type": "LongRunning"
              }
            ],
            "messages": [
              {
                "name": "LongRunning",
                "fields": [
                  {
                    "id": 1,
                    "name": "initial_poll_delay",
                    "type": "google.protobuf.Duration"
                  },
                  {
                    "id": 2,
                    "name": "poll_delay_multiplier",
                    "type": "float"
                  },
                  {
                    "id": 3,
                    "name": "max_poll_delay",
                    "type": "google.protobuf.Duration"
                  },
                  {
                    "id": 4,
                    "name": "total_poll_timeout",
                    "type": "google.protobuf.Duration"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/launch_stage.proto"
          },
          {
            "path": "google/protobuf/descriptor.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:config_change.proto",
      "def": {
        "enums": [
          {
            "name": "ChangeType",
            "enum_fields": [
              {
                "name": "CHANGE_TYPE_UNSPECIFIED"
              },
              {
                "name": "ADDED",
                "integer": 1
              },
              {
                "name": "REMOVED",
                "integer": 2
              },
              {
                "name": "MODIFIED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ConfigChange",
            "fields": [
              {
                "id": 1,
                "name": "element",
                "type": "string"
              },
              {
                "id": 2,
                "name": "old_value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "new_value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "change_type",
                "type": "ChangeType"
              },
              {
                "id": 5,
                "name": "advices",
                "type": "Advice",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Advice",
            "fields": [
              {
                "id": 2,
                "name": "description",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:consumer.proto",
      "def": {
        "enums": [
          {
            "name": "Property.PropertyType",
            "enum_fields": [
              {
                "name": "UNSPECIFIED"
              },
              {
                "name": "INT64",
                "integer": 1
              },
              {
                "name": "BOOL",
                "integer": 2
              },
              {
                "name": "STRING",
                "integer": 3
              },
              {
                "name": "DOUBLE",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ProjectProperties",
            "fields": [
              {
                "id": 1,
                "name": "properties",
                "type": "Property",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Property",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "PropertyType"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:context.proto",
      "def": {
        "messages": [
          {
            "name": "Context",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "ContextRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ContextRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "requested",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "provided",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "allowed_request_extensions",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "allowed_response_extensions",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:control.proto",
      "def": {
        "messages": [
          {
            "name": "Control",
            "fields": [
              {
                "id": 1,
                "name": "environment",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:distribution.proto",
      "def": {
        "messages": [
          {
            "name": "Distribution",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "mean",
                "type": "double"
              },
              {
                "id": 3,
                "name": "sum_of_squared_deviation",
                "type": "double"
              },
              {
                "id": 4,
                "name": "range",
                "type": "Range"
              },
              {
                "id": 6,
                "name": "bucket_options",
                "type": "BucketOptions"
              },
              {
                "id": 7,
                "name": "bucket_counts",
                "type": "int64",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "exemplars",
                "type": "Exemplar",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Range",
                "fields": [
                  {
                    "id": 1,
                    "name": "min",
                    "type": "double"
                  },
                  {
                    "id": 2,
                    "name": "max",
                    "type": "double"
                  }
                ]
              },
              {
                "name": "BucketOptions",
                "fields": [
                  {
                    "id": 1,
                    "name": "linear_buckets",
                    "type": "Linear"
                  },
                  {
                    "id": 2,
                    "name": "exponential_buckets",
                    "type": "Exponential"
                  },
                  {
                    "id": 3,
                    "name": "explicit_buckets",
                    "type": "Explicit"
                  }
                ],
                "messages": [
                  {
                    "name": "Linear",
                    "fields": [
                      {
                        "id": 1,
                        "name": "num_finite_buckets",
                        "type": "int32"
                      },
                      {
                        "id": 2,
                        "name": "width",
                        "type": "double"
                      },
                      {
                        "id": 3,
                        "name": "offset",
                        "type": "double"
                      }
                    ]
                  },
                  {
                    "name": "Exponential",
                    "fields": [
                      {
                        "id": 1,
                        "name": "num_finite_buckets",
                        "type": "int32"
                      },
                      {
                        "id": 2,
                        "name": "growth_factor",
                        "type": "double"
                      },
                      {
                        "id": 3,
                        "name": "scale",
                        "type": "double"
                      }
                    ]
                  },
                  {
                    "name": "Explicit",
                    "fields": [
                      {
                        "id": 1,
                        "name": "bounds",
                        "type": "double",
                        "is_repeated": true
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Exemplar",
                "fields": [
                  {
                    "id": 1,
                    "name": "value",
                    "type": "double"
                  },
                  {
                    "id": 2,
                    "name": "timestamp",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 3,
                    "name": "attachments",
                    "type": "google.protobuf.Any",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:documentation.proto",
      "def": {
        "messages": [
          {
            "name": "Documentation",
            "fields": [
              {
                "id": 1,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 5,
                "name": "pages",
                "type": "Page",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "rules",
                "type": "DocumentationRule",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "documentation_root_url",
                "type": "string"
              },
              {
                "id": 6,
                "name": "service_root_url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "overview",
                "type": "string"
              }
            ]
          },
          {
            "name": "DocumentationRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "description",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deprecation_description",
                "type": "string"
              }
            ]
          },
          {
            "name": "Page",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "content",
                "type": "string"
              },
              {
                "id": 3,
                "name": "subpages",
                "type": "Page",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:endpoint.proto",
      "def": {
        "messages": [
          {
            "name": "Endpoint",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "aliases",
                "type": "string",
                "is_repeated": true,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 101,
                "name": "target",
                "type": "string"
              },
              {
                "id": 5,
                "name": "allow_cors",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:error_reason.proto",
      "def": {
        "enums": [
          {
            "name": "ErrorReason",
            "enum_fields": [
              {
                "name": "ERROR_REASON_UNSPECIFIED"
              },
              {
                "name": "SERVICE_DISABLED",
                "integer": 1
              },
              {
                "name": "BILLING_DISABLED",
                "integer": 2
              },
              {
                "name": "API_KEY_INVALID",
                "integer": 3
              },
              {
                "name": "API_KEY_SERVICE_BLOCKED",
                "integer": 4
              },
              {
                "name": "API_KEY_HTTP_REFERRER_BLOCKED",
                "integer": 7
              },
              {
                "name": "API_KEY_IP_ADDRESS_BLOCKED",
                "integer": 8
              },
              {
                "name": "API_KEY_ANDROID_APP_BLOCKED",
                "integer": 9
              },
              {
                "name": "API_KEY_IOS_APP_BLOCKED",
                "integer": 13
              },
              {
                "name": "RATE_LIMIT_EXCEEDED",
                "integer": 5
              },
              {
                "name": "RESOURCE_QUOTA_EXCEEDED",
                "integer": 6
              },
              {
                "name": "LOCATION_TAX_POLICY_VIOLATED",
                "integer": 10
              },
              {
                "name": "USER_PROJECT_DENIED",
                "integer": 11
              },
              {
                "name": "CONSUMER_SUSPENDED",
                "integer": 12
              },
              {
                "name": "CONSUMER_INVALID",
                "integer": 14
              },
              {
                "name": "SECURITY_POLICY_VIOLATED",
                "integer": 15
              },
              {
                "name": "ACCESS_TOKEN_EXPIRED",
                "integer": 16
              },
              {
                "name": "ACCESS_TOKEN_SCOPE_INSUFFICIENT",
                "integer": 17
              },
              {
                "name": "ACCOUNT_STATE_INVALID",
                "integer": 18
              },
              {
                "name": "ACCESS_TOKEN_TYPE_UNSUPPORTED",
                "integer": 19
              },
              {
                "name": "CREDENTIALS_MISSING",
                "integer": 20
              },
              {
                "name": "RESOURCE_PROJECT_INVALID",
                "integer": 21
              },
              {
                "name": "SESSION_COOKIE_INVALID",
                "integer": 23
              },
              {
                "name": "USER_BLOCKED_BY_ADMIN",
                "integer": 24
              },
              {
                "name": "RESOURCE_USAGE_RESTRICTION_VIOLATED",
                "integer": 25
              },
              {
                "name": "SYSTEM_PARAMETER_UNSUPPORTED",
                "integer": 26
              },
              {
                "name": "ORG_RESTRICTION_VIOLATION",
                "integer": 27
              },
              {
                "name": "ORG_RESTRICTION_HEADER_INVALID",
                "integer": 28
              },
              {
                "name": "SERVICE_NOT_VISIBLE",
                "integer": 29
              },
              {
                "name": "GCP_SUSPENDED",
                "integer": 30
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:field_behavior.proto",
      "def": {
        "enums": [
          {
            "name": "FieldBehavior",
            "enum_fields": [
              {
                "name": "FIELD_BEHAVIOR_UNSPECIFIED"
              },
              {
                "name": "OPTIONAL",
                "integer": 1
              },
              {
                "name": "REQUIRED",
                "integer": 2
              },
              {
                "name": "OUTPUT_ONLY",
                "integer": 3
              },
              {
                "name": "INPUT_ONLY",
                "integer": 4
              },
              {
                "name": "IMMUTABLE",
                "integer": 5
              },
              {
                "name": "UNORDERED_LIST",
                "integer": 6
              },
              {
                "name": "NON_EMPTY_DEFAULT",
                "integer": 7
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "google.protobuf.FieldOptions",
            "fields": [
              {
                "id": 1052,
                "name": "field_behavior",
                "type": "google.api.FieldBehavior",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:http.proto",
      "def": {
        "messages": [
          {
            "name": "Http",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "HttpRule",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "fully_decode_reserved_expansion",
                "type": "bool"
              }
            ]
          },
          {
            "name": "HttpRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "get",
                "type": "string"
              },
              {
                "id": 3,
                "name": "put",
                "type": "string"
              },
              {
                "id": 4,
                "name": "post",
                "type": "string"
              },
              {
                "id": 5,
                "name": "delete",
                "type": "string"
              },
              {
                "id": 6,
                "name": "patch",
                "type": "string"
              },
              {
                "id": 8,
                "name": "custom",
                "type": "CustomHttpPattern"
              },
              {
                "id": 7,
                "name": "body",
                "type": "string"
              },
              {
                "id": 12,
                "name": "response_body",
                "type": "string"
              },
              {
                "id": 11,
                "name": "additional_bindings",
                "type": "HttpRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CustomHttpPattern",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:httpbody.proto",
      "def": {
        "messages": [
          {
            "name": "HttpBody",
            "fields": [
              {
                "id": 1,
                "name": "content_type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "data",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "extensions",
                "type": "google.protobuf.Any",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:label.proto",
      "def": {
        "enums": [
          {
            "name": "LabelDescriptor.ValueType",
            "enum_fields": [
              {
                "name": "STRING"
              },
              {
                "name": "BOOL",
                "integer": 1
              },
              {
                "name": "INT64",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "LabelDescriptor",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value_type",
                "type": "ValueType"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:launch_stage.proto",
      "def": {
        "enums": [
          {
            "name": "LaunchStage",
            "enum_fields": [
              {
                "name": "LAUNCH_STAGE_UNSPECIFIED"
              },
              {
                "name": "UNIMPLEMENTED",
                "integer": 6
              },
              {
                "name": "PRELAUNCH",
                "integer": 7
              },
              {
                "name": "EARLY_ACCESS",
                "integer": 1
              },
              {
                "name": "ALPHA",
                "integer": 2
              },
              {
                "name": "BETA",
                "integer": 3
              },
              {
                "name": "GA",
                "integer": 4
              },
              {
                "name": "DEPRECATED",
                "integer": 5
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:log.proto",
      "def": {
        "messages": [
          {
            "name": "LogDescriptor",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "labels",
                "type": "LabelDescriptor",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "display_name",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/label.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:logging.proto",
      "def": {
        "messages": [
          {
            "name": "Logging",
            "fields": [
              {
                "id": 1,
                "name": "producer_destinations",
                "type": "LoggingDestination",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "consumer_destinations",
                "type": "LoggingDestination",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "LoggingDestination",
                "fields": [
                  {
                    "id": 3,
                    "name": "monitored_resource",
                    "type": "string"
                  },
                  {
                    "id": 1,
                    "name": "logs",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:metric.proto",
      "def": {
        "enums": [
          {
            "name": "MetricDescriptor.MetricKind",
            "enum_fields": [
              {
                "name": "METRIC_KIND_UNSPECIFIED"
              },
              {
                "name": "GAUGE",
                "integer": 1
              },
              {
                "name": "DELTA",
                "integer": 2
              },
              {
                "name": "CUMULATIVE",
                "integer": 3
              }
            ]
          },
          {
            "name": "MetricDescriptor.ValueType",
            "enum_fields": [
              {
                "name": "VALUE_TYPE_UNSPECIFIED"
              },
              {
                "name": "BOOL",
                "integer": 1
              },
              {
                "name": "INT64",
                "integer": 2
              },
              {
                "name": "DOUBLE",
                "integer": 3
              },
              {
                "name": "STRING",
                "integer": 4
              },
              {
                "name": "DISTRIBUTION",
                "integer": 5
              },
              {
                "name": "MONEY",
                "integer": 6
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "MetricDescriptor",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 8,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "labels",
                "type": "LabelDescriptor",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "metric_kind",
                "type": "MetricKind"
              },
              {
                "id": 4,
                "name": "value_type",
                "type": "ValueType"
              },
              {
                "id": 5,
                "name": "unit",
                "type": "string"
              },
              {
                "id": 6,
                "name": "description",
                "type": "string"
              },
              {
                "id": 7,
                "name": "display_name",
                "type": "string"
              },
              {
                "id": 10,
                "name": "metadata",
                "type": "MetricDescriptorMetadata"
              },
              {
                "id": 12,
                "name": "launch_stage",
                "type": "LaunchStage"
              },
              {
                "id": 13,
                "name": "monitored_resource_types",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "MetricDescriptorMetadata",
                "fields": [
                  {
                    "id": 1,
                    "name": "launch_stage",
                    "type": "LaunchStage",
                    "options": [
                      {
                        "name": "deprecated",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "sample_period",
                    "type": "google.protobuf.Duration"
                  },
                  {
                    "id": 3,
                    "name": "ingest_delay",
                    "type": "google.protobuf.Duration"
                  }
                ]
              }
            ]
          },
          {
            "name": "Metric",
            "fields": [
              {
                "id": 3,
                "name": "type",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/label.proto"
          },
          {
            "path": "google/api/launch_stage.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:monitored_resource.proto",
      "def": {
        "messages": [
          {
            "name": "MonitoredResourceDescriptor",
            "fields": [
              {
                "id": 5,
                "name": "name",
                "type": "string"
              },
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "display_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "labels",
                "type": "LabelDescriptor",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "launch_stage",
                "type": "LaunchStage"
              }
            ]
          },
          {
            "name": "MonitoredResource",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "MonitoredResourceMetadata",
            "fields": [
              {
                "id": 1,
                "name": "system_labels",
                "type": "google.protobuf.Struct"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "user_labels",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/label.proto"
          },
          {
            "path": "google/api/launch_stage.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:monitoring.proto",
      "def": {
        "messages": [
          {
            "name": "Monitoring",
            "fields": [
              {
                "id": 1,
                "name": "producer_destinations",
                "type": "MonitoringDestination",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "consumer_destinations",
                "type": "MonitoringDestination",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "MonitoringDestination",
                "fields": [
                  {
                    "id": 1,
                    "name": "monitored_resource",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "metrics",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:quota.proto",
      "def": {
        "messages": [
          {
            "name": "Quota",
            "fields": [
              {
                "id": 3,
                "name": "limits",
                "type": "QuotaLimit",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "metric_rules",
                "type": "MetricRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MetricRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "metric_costs",
                  "type": "int64"
                }
              }
            ]
          },
          {
            "name": "QuotaLimit",
            "fields": [
              {
                "id": 6,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "description",
                "type": "string"
              },
              {
                "id": 3,
                "name": "default_limit",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "max_limit",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "free_tier",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "duration",
                "type": "string"
              },
              {
                "id": 8,
                "name": "metric",
                "type": "string"
              },
              {
                "id": 9,
                "name": "unit",
                "type": "string"
              },
              {
                "id": 12,
                "name": "display_name",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 10,
                  "name": "values",
                  "type": "int64"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:resource.proto",
      "def": {
        "enums": [
          {
            "name": "ResourceDescriptor.History",
            "enum_fields": [
              {
                "name": "HISTORY_UNSPECIFIED"
              },
              {
                "name": "ORIGINALLY_SINGLE_PATTERN",
                "integer": 1
              },
              {
                "name": "FUTURE_MULTI_PATTERN",
                "integer": 2
              }
            ]
          },
          {
            "name": "ResourceDescriptor.Style",
            "enum_fields": [
              {
                "name": "STYLE_UNSPECIFIED"
              },
              {
                "name": "DECLARATIVE_FRIENDLY",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "google.protobuf.FieldOptions",
            "fields": [
              {
                "id": 1055,
                "name": "resource_reference",
                "type": "google.api.ResourceReference"
              }
            ]
          },
          {
            "name": "google.protobuf.FileOptions",
            "fields": [
              {
                "id": 1053,
                "name": "resource_definition",
                "type": "google.api.ResourceDescriptor",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "google.protobuf.MessageOptions",
            "fields": [
              {
                "id": 1053,
                "name": "resource",
                "type": "google.api.ResourceDescriptor"
              }
            ]
          },
          {
            "name": "ResourceDescriptor",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "pattern",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "name_field",
                "type": "string"
              },
              {
                "id": 4,
                "name": "history",
                "type": "History"
              },
              {
                "id": 5,
                "name": "plural",
                "type": "string"
              },
              {
                "id": 6,
                "name": "singular",
                "type": "string"
              },
              {
                "id": 10,
                "name": "style",
                "type": "Style",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ResourceReference",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "child_type",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:routing.proto",
      "def": {
        "messages": [
          {
            "name": "google.protobuf.MethodOptions",
            "fields": [
              {
                "id": 72295729,
                "name": "routing",
                "type": "google.api.RoutingRule"
              }
            ]
          },
          {
            "name": "RoutingRule",
            "fields": [
              {
                "id": 2,
                "name": "routing_parameters",
                "type": "RoutingParameter",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RoutingParameter",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path_template",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:service.proto",
      "def": {
        "messages": [
          {
            "name": "Service",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "title",
                "type": "string"
              },
              {
                "id": 22,
                "name": "producer_project_id",
                "type": "string"
              },
              {
                "id": 33,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "apis",
                "type": "google.protobuf.Api",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "types",
                "type": "google.protobuf.Type",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "enums",
                "type": "google.protobuf.Enum",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "documentation",
                "type": "Documentation"
              },
              {
                "id": 8,
                "name": "backend",
                "type": "Backend"
              },
              {
                "id": 9,
                "name": "http",
                "type": "Http"
              },
              {
                "id": 10,
                "name": "quota",
                "type": "Quota"
              },
              {
                "id": 11,
                "name": "authentication",
                "type": "Authentication"
              },
              {
                "id": 12,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 15,
                "name": "usage",
                "type": "Usage"
              },
              {
                "id": 18,
                "name": "endpoints",
                "type": "Endpoint",
                "is_repeated": true
              },
              {
                "id": 21,
                "name": "control",
                "type": "Control"
              },
              {
                "id": 23,
                "name": "logs",
                "type": "LogDescriptor",
                "is_repeated": true
              },
              {
                "id": 24,
                "name": "metrics",
                "type": "MetricDescriptor",
                "is_repeated": true
              },
              {
                "id": 25,
                "name": "monitored_resources",
                "type": "MonitoredResourceDescriptor",
                "is_repeated": true
              },
              {
                "id": 26,
                "name": "billing",
                "type": "Billing"
              },
              {
                "id": 27,
                "name": "logging",
                "type": "Logging"
              },
              {
                "id": 28,
                "name": "monitoring",
                "type": "Monitoring"
              },
              {
                "id": 29,
                "name": "system_parameters",
                "type": "SystemParameters"
              },
              {
                "id": 37,
                "name": "source_info",
                "type": "SourceInfo"
              },
              {
                "id": 45,
                "name": "publishing",
                "type": "Publishing"
              },
              {
                "id": 20,
                "name": "config_version",
                "type": "google.protobuf.UInt32Value"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/auth.proto"
          },
          {
            "path": "google/api/backend.proto"
          },
          {
            "path": "google/api/billing.proto"
          },
          {
            "path": "google/api/client.proto"
          },
          {
            "path": "google/api/context.proto"
          },
          {
            "path": "google/api/control.proto"
          },
          {
            "path": "google/api/documentation.proto"
          },
          {
            "path": "google/api/endpoint.proto"
          },
          {
            "path": "google/api/http.proto"
          },
          {
            "path": "google/api/log.proto"
          },
          {
            "path": "google/api/logging.proto"
          },
          {
            "path": "google/api/metric.proto"
          },
          {
            "path": "google/api/monitored_resource.proto"
          },
          {
            "path": "google/api/monitoring.proto"
          },
          {
            "path": "google/api/quota.proto"
          },
          {
            "path": "google/api/source_info.proto"
          },
          {
            "path": "google/api/system_parameter.proto"
          },
          {
            "path": "google/api/usage.proto"
          },
          {
            "path": "google/protobuf/api.proto"
          },
          {
            "path": "google/protobuf/type.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:source_info.proto",
      "def": {
        "messages": [
          {
            "name": "SourceInfo",
            "fields": [
              {
                "id": 1,
                "name": "source_files",
                "type": "google.protobuf.Any",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:system_parameter.proto",
      "def": {
        "messages": [
          {
            "name": "SystemParameters",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "SystemParameterRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SystemParameterRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parameters",
                "type": "SystemParameter",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SystemParameter",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "http_header",
                "type": "string"
              },
              {
                "id": 3,
                "name": "url_query_parameter",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:usage.proto",
      "def": {
        "messages": [
          {
            "name": "Usage",
            "fields": [
              {
                "id": 1,
                "name": "requirements",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "rules",
                "type": "UsageRule",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "producer_notification_channel",
                "type": "string"
              }
            ]
          },
          {
            "name": "UsageRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "allow_unregistered_calls",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "skip_service_control",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:api:/:visibility.proto",
      "def": {
        "messages": [
          {
            "name": "google.protobuf.EnumOptions",
            "fields": [
              {
                "id": 72295727,
                "name": "enum_visibility",
                "type": "google.api.VisibilityRule"
              }
            ]
          },
          {
            "name": "google.protobuf.EnumValueOptions",
            "fields": [
              {
                "id": 72295727,
                "name": "value_visibility",
                "type": "google.api.VisibilityRule"
              }
            ]
          },
          {
            "name": "google.protobuf.FieldOptions",
            "fields": [
              {
                "id": 72295727,
                "name": "field_visibility",
                "type": "google.api.VisibilityRule"
              }
            ]
          },
          {
            "name": "google.protobuf.MessageOptions",
            "fields": [
              {
                "id": 72295727,
                "name": "message_visibility",
                "type": "google.api.VisibilityRule"
              }
            ]
          },
          {
            "name": "google.protobuf.MethodOptions",
            "fields": [
              {
                "id": 72295727,
                "name": "method_visibility",
                "type": "google.api.VisibilityRule"
              }
            ]
          },
          {
            "name": "google.protobuf.ServiceOptions",
            "fields": [
              {
                "id": 72295727,
                "name": "api_visibility",
                "type": "google.api.VisibilityRule"
              }
            ]
          },
          {
            "name": "Visibility",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "VisibilityRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "VisibilityRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "restriction",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:cloud:/:audit:/:audit_log.proto",
      "def": {
        "enums": [
          {
            "name": "ViolationInfo.PolicyType",
            "enum_fields": [
              {
                "name": "POLICY_TYPE_UNSPECIFIED"
              },
              {
                "name": "BOOLEAN_CONSTRAINT",
                "integer": 1
              },
              {
                "name": "LIST_CONSTRAINT",
                "integer": 2
              },
              {
                "name": "CUSTOM_CONSTRAINT",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "AuditLog",
            "fields": [
              {
                "id": 7,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 8,
                "name": "method_name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "resource_name",
                "type": "string"
              },
              {
                "id": 20,
                "name": "resource_location",
                "type": "ResourceLocation"
              },
              {
                "id": 19,
                "name": "resource_original_state",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 12,
                "name": "num_response_items",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "status",
                "type": "google.rpc.Status"
              },
              {
                "id": 3,
                "name": "authentication_info",
                "type": "AuthenticationInfo"
              },
              {
                "id": 9,
                "name": "authorization_info",
                "type": "AuthorizationInfo",
                "is_repeated": true
              },
              {
                "id": 25,
                "name": "policy_violation_info",
                "type": "PolicyViolationInfo"
              },
              {
                "id": 4,
                "name": "request_metadata",
                "type": "RequestMetadata"
              },
              {
                "id": 16,
                "name": "request",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 17,
                "name": "response",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 18,
                "name": "metadata",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 15,
                "name": "service_data",
                "type": "google.protobuf.Any",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          },
          {
            "name": "AuthenticationInfo",
            "fields": [
              {
                "id": 1,
                "name": "principal_email",
                "type": "string"
              },
              {
                "id": 2,
                "name": "authority_selector",
                "type": "string"
              },
              {
                "id": 4,
                "name": "third_party_principal",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 5,
                "name": "service_account_key_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "service_account_delegation_info",
                "type": "ServiceAccountDelegationInfo",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "principal_subject",
                "type": "string"
              }
            ]
          },
          {
            "name": "AuthorizationInfo",
            "fields": [
              {
                "id": 1,
                "name": "resource",
                "type": "string"
              },
              {
                "id": 2,
                "name": "permission",
                "type": "string"
              },
              {
                "id": 3,
                "name": "granted",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "resource_attributes",
                "type": "google.rpc.context.AttributeContext.Resource"
              }
            ]
          },
          {
            "name": "RequestMetadata",
            "fields": [
              {
                "id": 1,
                "name": "caller_ip",
                "type": "string"
              },
              {
                "id": 2,
                "name": "caller_supplied_user_agent",
                "type": "string"
              },
              {
                "id": 3,
                "name": "caller_network",
                "type": "string"
              },
              {
                "id": 7,
                "name": "request_attributes",
                "type": "google.rpc.context.AttributeContext.Request"
              },
              {
                "id": 8,
                "name": "destination_attributes",
                "type": "google.rpc.context.AttributeContext.Peer"
              }
            ]
          },
          {
            "name": "ResourceLocation",
            "fields": [
              {
                "id": 1,
                "name": "current_locations",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "original_locations",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServiceAccountDelegationInfo",
            "fields": [
              {
                "id": 3,
                "name": "principal_subject",
                "type": "string"
              },
              {
                "id": 1,
                "name": "first_party_principal",
                "type": "FirstPartyPrincipal"
              },
              {
                "id": 2,
                "name": "third_party_principal",
                "type": "ThirdPartyPrincipal"
              }
            ],
            "messages": [
              {
                "name": "FirstPartyPrincipal",
                "fields": [
                  {
                    "id": 1,
                    "name": "principal_email",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "service_metadata",
                    "type": "google.protobuf.Struct"
                  }
                ]
              },
              {
                "name": "ThirdPartyPrincipal",
                "fields": [
                  {
                    "id": 1,
                    "name": "third_party_claims",
                    "type": "google.protobuf.Struct"
                  }
                ]
              }
            ]
          },
          {
            "name": "PolicyViolationInfo",
            "fields": [
              {
                "id": 1,
                "name": "org_policy_violation_info",
                "type": "OrgPolicyViolationInfo"
              }
            ]
          },
          {
            "name": "OrgPolicyViolationInfo",
            "fields": [
              {
                "id": 1,
                "name": "payload",
                "type": "google.protobuf.Struct",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "OPTIONAL"
                  }
                ]
              },
              {
                "id": 2,
                "name": "resource_type",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "OPTIONAL"
                  }
                ]
              },
              {
                "id": 4,
                "name": "violation_info",
                "type": "ViolationInfo",
                "is_repeated": true,
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "OPTIONAL"
                  }
                ]
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "resource_tags",
                  "type": "string",
                  "options": [
                    {
                      "name": "(google.api.field_behavior)",
                      "value": "OPTIONAL"
                    }
                  ]
                }
              }
            ]
          },
          {
            "name": "ViolationInfo",
            "fields": [
              {
                "id": 1,
                "name": "constraint",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "OPTIONAL"
                  }
                ]
              },
              {
                "id": 2,
                "name": "error_message",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "OPTIONAL"
                  }
                ]
              },
              {
                "id": 3,
                "name": "checked_value",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "OPTIONAL"
                  }
                ]
              },
              {
                "id": 4,
                "name": "policy_type",
                "type": "PolicyType",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "OPTIONAL"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          },
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          },
          {
            "path": "google/rpc/context/attribute_context.proto"
          },
          {
            "path": "google/rpc/status.proto"
          }
        ],
        "package": {
          "name": "google.cloud.audit"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:cloud:/:extended_operations.proto",
      "def": {
        "enums": [
          {
            "name": "OperationResponseMapping",
            "enum_fields": [
              {
                "name": "UNDEFINED"
              },
              {
                "name": "NAME",
                "integer": 1
              },
              {
                "name": "STATUS",
                "integer": 2
              },
              {
                "name": "ERROR_CODE",
                "integer": 3
              },
              {
                "name": "ERROR_MESSAGE",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "google.protobuf.FieldOptions",
            "fields": [
              {
                "id": 1149,
                "name": "operation_field",
                "type": "OperationResponseMapping"
              },
              {
                "id": 1150,
                "name": "operation_request_field",
                "type": "string"
              },
              {
                "id": 1151,
                "name": "operation_response_field",
                "type": "string"
              }
            ]
          },
          {
            "name": "google.protobuf.MethodOptions",
            "fields": [
              {
                "id": 1249,
                "name": "operation_service",
                "type": "string"
              },
              {
                "id": 1250,
                "name": "operation_polling_method",
                "type": "bool"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.cloud"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:geo:/:type:/:viewport.proto",
      "def": {
        "messages": [
          {
            "name": "Viewport",
            "fields": [
              {
                "id": 1,
                "name": "low",
                "type": "google.type.LatLng"
              },
              {
                "id": 2,
                "name": "high",
                "type": "google.type.LatLng"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/type/latlng.proto"
          }
        ],
        "package": {
          "name": "google.geo.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:logging:/:type:/:http_request.proto",
      "def": {
        "messages": [
          {
            "name": "HttpRequest",
            "fields": [
              {
                "id": 1,
                "name": "request_method",
                "type": "string"
              },
              {
                "id": 2,
                "name": "request_url",
                "type": "string"
              },
              {
                "id": 3,
                "name": "request_size",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "response_size",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "user_agent",
                "type": "string"
              },
              {
                "id": 7,
                "name": "remote_ip",
                "type": "string"
              },
              {
                "id": 13,
                "name": "server_ip",
                "type": "string"
              },
              {
                "id": 8,
                "name": "referer",
                "type": "string"
              },
              {
                "id": 14,
                "name": "latency",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 11,
                "name": "cache_lookup",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "cache_hit",
                "type": "bool"
              },
              {
                "id": 10,
                "name": "cache_validated_with_origin_server",
                "type": "bool"
              },
              {
                "id": 12,
                "name": "cache_fill_bytes",
                "type": "int64"
              },
              {
                "id": 15,
                "name": "protocol",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "google.logging.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:logging:/:type:/:log_severity.proto",
      "def": {
        "enums": [
          {
            "name": "LogSeverity",
            "enum_fields": [
              {
                "name": "DEFAULT"
              },
              {
                "name": "DEBUG",
                "integer": 100
              },
              {
                "name": "INFO",
                "integer": 200
              },
              {
                "name": "NOTICE",
                "integer": 300
              },
              {
                "name": "WARNING",
                "integer": 400
              },
              {
                "name": "ERROR",
                "integer": 500
              },
              {
                "name": "CRITICAL",
                "integer": 600
              },
              {
                "name": "ALERT",
                "integer": 700
              },
              {
                "name": "EMERGENCY",
                "integer": 800
              }
            ]
          }
        ],
        "package": {
          "name": "google.logging.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:longrunning:/:operations.proto",
      "def": {
        "messages": [
          {
            "name": "google.protobuf.MethodOptions",
            "fields": [
              {
                "id": 1049,
                "name": "operation_info",
                "type": "google.longrunning.OperationInfo"
              }
            ]
          },
          {
            "name": "Operation",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "metadata",
                "type": "google.protobuf.Any"
              },
              {
                "id": 3,
                "name": "done",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "error",
                "type": "google.rpc.Status"
              },
              {
                "id": 5,
                "name": "response",
                "type": "google.protobuf.Any"
              }
            ]
          },
          {
            "name": "GetOperationRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListOperationsRequest",
            "fields": [
              {
                "id": 4,
                "name": "name",
                "type": "string"
              },
              {
                "id": 1,
                "name": "filter",
                "type": "string"
              },
              {
                "id": 2,
                "name": "page_size",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "page_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListOperationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "operations",
                "type": "Operation",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "next_page_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "CancelOperationRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeleteOperationRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "WaitOperationRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "timeout",
                "type": "google.protobuf.Duration"
              }
            ]
          },
          {
            "name": "OperationInfo",
            "fields": [
              {
                "id": 1,
                "name": "response_type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "metadata_type",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "Operations",
            "rpcs": [
              {
                "name": "ListOperations",
                "in_type": "ListOperationsRequest",
                "out_type": "ListOperationsResponse"
              },
              {
                "name": "GetOperation",
                "in_type": "GetOperationRequest",
                "out_type": "Operation"
              },
              {
                "name": "DeleteOperation",
                "in_type": "DeleteOperationRequest",
                "out_type": "google.protobuf.Empty"
              },
              {
                "name": "CancelOperation",
                "in_type": "CancelOperationRequest",
                "out_type": "google.protobuf.Empty"
              },
              {
                "name": "WaitOperation",
                "in_type": "WaitOperationRequest",
                "out_type": "Operation"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/api/client.proto"
          },
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/empty.proto"
          },
          {
            "path": "google/rpc/status.proto"
          },
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.longrunning"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:protobuf:/:any.proto",
      "def": {
        "messages": [
          {
            "name": "Any",
            "fields": [
              {
                "id": 1,
                "name": "type_url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:protobuf:/:api.proto",
      "def": {
        "messages": [
          {
            "name": "Api",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "methods",
                "type": "Method",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "source_context",
                "type": "SourceContext"
              },
              {
                "id": 6,
                "name": "mixins",
                "type": "Mixin",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "Method",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "request_type_url",
                "type": "string"
              },
              {
                "id": 3,
                "name": "request_streaming",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "response_type_url",
                "type": "string"
              },
              {
                "id": 5,
                "name": "response_streaming",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "Mixin",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "root",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/source_context.proto"
          },
          {
            "path": "google/protobuf/type.proto"
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:protobuf:/:descriptor.proto",
      "def": {
        "enums": [
          {
            "name": "FieldDescriptorProto.Type",
            "enum_fields": [
              {
                "name": "TYPE_DOUBLE",
                "integer": 1
              },
              {
                "name": "TYPE_FLOAT",
                "integer": 2
              },
              {
                "name": "TYPE_INT64",
                "integer": 3
              },
              {
                "name": "TYPE_UINT64",
                "integer": 4
              },
              {
                "name": "TYPE_INT32",
                "integer": 5
              },
              {
                "name": "TYPE_FIXED64",
                "integer": 6
              },
              {
                "name": "TYPE_FIXED32",
                "integer": 7
              },
              {
                "name": "TYPE_BOOL",
                "integer": 8
              },
              {
                "name": "TYPE_STRING",
                "integer": 9
              },
              {
                "name": "TYPE_GROUP",
                "integer": 10
              },
              {
                "name": "TYPE_MESSAGE",
                "integer": 11
              },
              {
                "name": "TYPE_BYTES",
                "integer": 12
              },
              {
                "name": "TYPE_UINT32",
                "integer": 13
              },
              {
                "name": "TYPE_ENUM",
                "integer": 14
              },
              {
                "name": "TYPE_SFIXED32",
                "integer": 15
              },
              {
                "name": "TYPE_SFIXED64",
                "integer": 16
              },
              {
                "name": "TYPE_SINT32",
                "integer": 17
              },
              {
                "name": "TYPE_SINT64",
                "integer": 18
              }
            ]
          },
          {
            "name": "FieldDescriptorProto.Label",
            "enum_fields": [
              {
                "name": "LABEL_OPTIONAL",
                "integer": 1
              },
              {
                "name": "LABEL_REQUIRED",
                "integer": 2
              },
              {
                "name": "LABEL_REPEATED",
                "integer": 3
              }
            ]
          },
          {
            "name": "FileOptions.OptimizeMode",
            "enum_fields": [
              {
                "name": "SPEED",
                "integer": 1
              },
              {
                "name": "CODE_SIZE",
                "integer": 2
              },
              {
                "name": "LITE_RUNTIME",
                "integer": 3
              }
            ]
          },
          {
            "name": "FieldOptions.CType",
            "enum_fields": [
              {
                "name": "STRING"
              },
              {
                "name": "CORD",
                "integer": 1
              },
              {
                "name": "STRING_PIECE",
                "integer": 2
              }
            ]
          },
          {
            "name": "FieldOptions.JSType",
            "enum_fields": [
              {
                "name": "JS_NORMAL"
              },
              {
                "name": "JS_STRING",
                "integer": 1
              },
              {
                "name": "JS_NUMBER",
                "integer": 2
              }
            ]
          },
          {
            "name": "FieldOptions.OptionRetention",
            "enum_fields": [
              {
                "name": "RETENTION_UNKNOWN"
              },
              {
                "name": "RETENTION_RUNTIME",
                "integer": 1
              },
              {
                "name": "RETENTION_SOURCE",
                "integer": 2
              }
            ]
          },
          {
            "name": "FieldOptions.OptionTargetType",
            "enum_fields": [
              {
                "name": "TARGET_TYPE_UNKNOWN"
              },
              {
                "name": "TARGET_TYPE_FILE",
                "integer": 1
              },
              {
                "name": "TARGET_TYPE_EXTENSION_RANGE",
                "integer": 2
              },
              {
                "name": "TARGET_TYPE_MESSAGE",
                "integer": 3
              },
              {
                "name": "TARGET_TYPE_FIELD",
                "integer": 4
              },
              {
                "name": "TARGET_TYPE_ONEOF",
                "integer": 5
              },
              {
                "name": "TARGET_TYPE_ENUM",
                "integer": 6
              },
              {
                "name": "TARGET_TYPE_ENUM_ENTRY",
                "integer": 7
              },
              {
                "name": "TARGET_TYPE_SERVICE",
                "integer": 8
              },
              {
                "name": "TARGET_TYPE_METHOD",
                "integer": 9
              }
            ]
          },
          {
            "name": "MethodOptions.IdempotencyLevel",
            "enum_fields": [
              {
                "name": "IDEMPOTENCY_UNKNOWN"
              },
              {
                "name": "NO_SIDE_EFFECTS",
                "integer": 1
              },
              {
                "name": "IDEMPOTENT",
                "integer": 2
              }
            ]
          },
          {
            "name": "Annotation.Semantic",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "SET",
                "integer": 1
              },
              {
                "name": "ALIAS",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "FileDescriptorSet",
            "fields": [
              {
                "id": 1,
                "name": "file",
                "type": "FileDescriptorProto",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FileDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "package",
                "type": "string"
              },
              {
                "id": 3,
                "name": "dependency",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "public_dependency",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "weak_dependency",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "message_type",
                "type": "DescriptorProto",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "enum_type",
                "type": "EnumDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "service",
                "type": "ServiceDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "extension",
                "type": "FieldDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "options",
                "type": "FileOptions"
              },
              {
                "id": 9,
                "name": "source_code_info",
                "type": "SourceCodeInfo"
              },
              {
                "id": 12,
                "name": "syntax",
                "type": "string"
              },
              {
                "id": 13,
                "name": "edition",
                "type": "string"
              }
            ]
          },
          {
            "name": "DescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "field",
                "type": "FieldDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "extension",
                "type": "FieldDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "nested_type",
                "type": "DescriptorProto",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "enum_type",
                "type": "EnumDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "extension_range",
                "type": "ExtensionRange",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "oneof_decl",
                "type": "OneofDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "options",
                "type": "MessageOptions"
              },
              {
                "id": 9,
                "name": "reserved_range",
                "type": "ReservedRange",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "reserved_name",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ExtensionRange",
                "fields": [
                  {
                    "id": 1,
                    "name": "start",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "end",
                    "type": "int32"
                  },
                  {
                    "id": 3,
                    "name": "options",
                    "type": "ExtensionRangeOptions"
                  }
                ]
              },
              {
                "name": "ReservedRange",
                "fields": [
                  {
                    "id": 1,
                    "name": "start",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "end",
                    "type": "int32"
                  }
                ]
              }
            ]
          },
          {
            "name": "ExtensionRangeOptions",
            "fields": [
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FieldDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "label",
                "type": "Label"
              },
              {
                "id": 5,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 6,
                "name": "type_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "extendee",
                "type": "string"
              },
              {
                "id": 7,
                "name": "default_value",
                "type": "string"
              },
              {
                "id": 9,
                "name": "oneof_index",
                "type": "int32"
              },
              {
                "id": 10,
                "name": "json_name",
                "type": "string"
              },
              {
                "id": 8,
                "name": "options",
                "type": "FieldOptions"
              },
              {
                "id": 17,
                "name": "proto3_optional",
                "type": "bool"
              }
            ]
          },
          {
            "name": "OneofDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "options",
                "type": "OneofOptions"
              }
            ]
          },
          {
            "name": "EnumDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "EnumValueDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "EnumOptions"
              },
              {
                "id": 4,
                "name": "reserved_range",
                "type": "EnumReservedRange",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "reserved_name",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "EnumReservedRange",
                "fields": [
                  {
                    "id": 1,
                    "name": "start",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "end",
                    "type": "int32"
                  }
                ]
              }
            ]
          },
          {
            "name": "EnumValueDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "options",
                "type": "EnumValueOptions"
              }
            ]
          },
          {
            "name": "ServiceDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "method",
                "type": "MethodDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "ServiceOptions"
              }
            ]
          },
          {
            "name": "MethodDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "input_type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "output_type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "options",
                "type": "MethodOptions"
              },
              {
                "id": 5,
                "name": "client_streaming",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 6,
                "name": "server_streaming",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              }
            ]
          },
          {
            "name": "FileOptions",
            "fields": [
              {
                "id": 1,
                "name": "java_package",
                "type": "string"
              },
              {
                "id": 8,
                "name": "java_outer_classname",
                "type": "string"
              },
              {
                "id": 10,
                "name": "java_multiple_files",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 20,
                "name": "java_generate_equals_and_hash",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 27,
                "name": "java_string_check_utf8",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 9,
                "name": "optimize_for",
                "type": "OptimizeMode",
                "options": [
                  {
                    "name": "default",
                    "value": "SPEED"
                  }
                ]
              },
              {
                "id": 11,
                "name": "go_package",
                "type": "string"
              },
              {
                "id": 16,
                "name": "cc_generic_services",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 17,
                "name": "java_generic_services",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 18,
                "name": "py_generic_services",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 42,
                "name": "php_generic_services",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 23,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 31,
                "name": "cc_enable_arenas",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 36,
                "name": "objc_class_prefix",
                "type": "string"
              },
              {
                "id": 37,
                "name": "csharp_namespace",
                "type": "string"
              },
              {
                "id": 39,
                "name": "swift_prefix",
                "type": "string"
              },
              {
                "id": 40,
                "name": "php_class_prefix",
                "type": "string"
              },
              {
                "id": 41,
                "name": "php_namespace",
                "type": "string"
              },
              {
                "id": 44,
                "name": "php_metadata_namespace",
                "type": "string"
              },
              {
                "id": 45,
                "name": "ruby_package",
                "type": "string"
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              38
            ]
          },
          {
            "name": "MessageOptions",
            "fields": [
              {
                "id": 1,
                "name": "message_set_wire_format",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 2,
                "name": "no_standard_descriptor_accessor",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 3,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 7,
                "name": "map_entry",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "deprecated_legacy_json_field_conflicts",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              4,
              5,
              6,
              8,
              9
            ]
          },
          {
            "name": "FieldOptions",
            "fields": [
              {
                "id": 1,
                "name": "ctype",
                "type": "CType",
                "options": [
                  {
                    "name": "default",
                    "value": "STRING"
                  }
                ]
              },
              {
                "id": 2,
                "name": "packed",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "jstype",
                "type": "JSType",
                "options": [
                  {
                    "name": "default",
                    "value": "JS_NORMAL"
                  }
                ]
              },
              {
                "id": 5,
                "name": "lazy",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 15,
                "name": "unverified_lazy",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 3,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 10,
                "name": "weak",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 16,
                "name": "debug_redact",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 17,
                "name": "retention",
                "type": "OptionRetention"
              },
              {
                "id": 18,
                "name": "target",
                "type": "OptionTargetType"
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "OneofOptions",
            "fields": [
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EnumOptions",
            "fields": [
              {
                "id": 2,
                "name": "allow_alias",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 6,
                "name": "deprecated_legacy_json_field_conflicts",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "EnumValueOptions",
            "fields": [
              {
                "id": 1,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServiceOptions",
            "fields": [
              {
                "id": 33,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MethodOptions",
            "fields": [
              {
                "id": 33,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 34,
                "name": "idempotency_level",
                "type": "IdempotencyLevel",
                "options": [
                  {
                    "name": "default",
                    "value": "IDEMPOTENCY_UNKNOWN"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UninterpretedOption",
            "fields": [
              {
                "id": 2,
                "name": "name",
                "type": "NamePart",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "identifier_value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "positive_int_value",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "negative_int_value",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "double_value",
                "type": "double"
              },
              {
                "id": 7,
                "name": "string_value",
                "type": "bytes"
              },
              {
                "id": 8,
                "name": "aggregate_value",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "NamePart",
                "fields": [
                  {
                    "id": 1,
                    "name": "name_part",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "is_extension",
                    "type": "bool"
                  }
                ]
              }
            ]
          },
          {
            "name": "SourceCodeInfo",
            "fields": [
              {
                "id": 1,
                "name": "location",
                "type": "Location",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Location",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "int32",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "packed",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "span",
                    "type": "int32",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "packed",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 3,
                    "name": "leading_comments",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "trailing_comments",
                    "type": "string"
                  },
                  {
                    "id": 6,
                    "name": "leading_detached_comments",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "GeneratedCodeInfo",
            "fields": [
              {
                "id": 1,
                "name": "annotation",
                "type": "Annotation",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Annotation",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "int32",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "packed",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "source_file",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "begin",
                    "type": "int32"
                  },
                  {
                    "id": 4,
                    "name": "end",
                    "type": "int32"
                  },
                  {
                    "id": 5,
                    "name": "semantic",
                    "type": "Semantic"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:protobuf:/:duration.proto",
      "def": {
        "messages": [
          {
            "name": "Duration",
            "fields": [
              {
                "id": 1,
                "name": "seconds",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "nanos",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:protobuf:/:empty.proto",
      "def": {
        "messages": [
          {
            "name": "Empty"
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:protobuf:/:field_mask.proto",
      "def": {
        "messages": [
          {
            "name": "FieldMask",
            "fields": [
              {
                "id": 1,
                "name": "paths",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:protobuf:/:source_context.proto",
      "def": {
        "messages": [
          {
            "name": "SourceContext",
            "fields": [
              {
                "id": 1,
                "name": "file_name",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:protobuf:/:struct.proto",
      "def": {
        "enums": [
          {
            "name": "NullValue",
            "enum_fields": [
              {
                "name": "NULL_VALUE"
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Struct",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "fields",
                  "type": "Value"
                }
              }
            ]
          },
          {
            "name": "Value",
            "fields": [
              {
                "id": 1,
                "name": "null_value",
                "type": "NullValue"
              },
              {
                "id": 2,
                "name": "number_value",
                "type": "double"
              },
              {
                "id": 3,
                "name": "string_value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "bool_value",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "struct_value",
                "type": "Struct"
              },
              {
                "id": 6,
                "name": "list_value",
                "type": "ListValue"
              }
            ]
          },
          {
            "name": "ListValue",
            "fields": [
              {
                "id": 1,
                "name": "values",
                "type": "Value",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:protobuf:/:timestamp.proto",
      "def": {
        "messages": [
          {
            "name": "Timestamp",
            "fields": [
              {
                "id": 1,
                "name": "seconds",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "nanos",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:protobuf:/:type.proto",
      "def": {
        "enums": [
          {
            "name": "Field.Kind",
            "enum_fields": [
              {
                "name": "TYPE_UNKNOWN"
              },
              {
                "name": "TYPE_DOUBLE",
                "integer": 1
              },
              {
                "name": "TYPE_FLOAT",
                "integer": 2
              },
              {
                "name": "TYPE_INT64",
                "integer": 3
              },
              {
                "name": "TYPE_UINT64",
                "integer": 4
              },
              {
                "name": "TYPE_INT32",
                "integer": 5
              },
              {
                "name": "TYPE_FIXED64",
                "integer": 6
              },
              {
                "name": "TYPE_FIXED32",
                "integer": 7
              },
              {
                "name": "TYPE_BOOL",
                "integer": 8
              },
              {
                "name": "TYPE_STRING",
                "integer": 9
              },
              {
                "name": "TYPE_GROUP",
                "integer": 10
              },
              {
                "name": "TYPE_MESSAGE",
                "integer": 11
              },
              {
                "name": "TYPE_BYTES",
                "integer": 12
              },
              {
                "name": "TYPE_UINT32",
                "integer": 13
              },
              {
                "name": "TYPE_ENUM",
                "integer": 14
              },
              {
                "name": "TYPE_SFIXED32",
                "integer": 15
              },
              {
                "name": "TYPE_SFIXED64",
                "integer": 16
              },
              {
                "name": "TYPE_SINT32",
                "integer": 17
              },
              {
                "name": "TYPE_SINT64",
                "integer": 18
              }
            ]
          },
          {
            "name": "Field.Cardinality",
            "enum_fields": [
              {
                "name": "CARDINALITY_UNKNOWN"
              },
              {
                "name": "CARDINALITY_OPTIONAL",
                "integer": 1
              },
              {
                "name": "CARDINALITY_REQUIRED",
                "integer": 2
              },
              {
                "name": "CARDINALITY_REPEATED",
                "integer": 3
              }
            ]
          },
          {
            "name": "Syntax",
            "enum_fields": [
              {
                "name": "SYNTAX_PROTO2"
              },
              {
                "name": "SYNTAX_PROTO3",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Type",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "fields",
                "type": "Field",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "oneofs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "source_context",
                "type": "SourceContext"
              },
              {
                "id": 6,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "Field",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "Kind"
              },
              {
                "id": 2,
                "name": "cardinality",
                "type": "Cardinality"
              },
              {
                "id": 3,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "type_url",
                "type": "string"
              },
              {
                "id": 7,
                "name": "oneof_index",
                "type": "int32"
              },
              {
                "id": 8,
                "name": "packed",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "json_name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "default_value",
                "type": "string"
              }
            ]
          },
          {
            "name": "Enum",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "enumvalue",
                "type": "EnumValue",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "source_context",
                "type": "SourceContext"
              },
              {
                "id": 5,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "EnumValue",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Option",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "Any"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/source_context.proto"
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:protobuf:/:wrappers.proto",
      "def": {
        "messages": [
          {
            "name": "DoubleValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "double"
              }
            ]
          },
          {
            "name": "FloatValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "float"
              }
            ]
          },
          {
            "name": "Int64Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "int64"
              }
            ]
          },
          {
            "name": "UInt64Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "Int32Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "int32"
              }
            ]
          },
          {
            "name": "UInt32Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "BoolValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "bool"
              }
            ]
          },
          {
            "name": "StringValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "BytesValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:rpc:/:code.proto",
      "def": {
        "enums": [
          {
            "name": "Code",
            "enum_fields": [
              {
                "name": "OK"
              },
              {
                "name": "CANCELLED",
                "integer": 1
              },
              {
                "name": "UNKNOWN",
                "integer": 2
              },
              {
                "name": "INVALID_ARGUMENT",
                "integer": 3
              },
              {
                "name": "DEADLINE_EXCEEDED",
                "integer": 4
              },
              {
                "name": "NOT_FOUND",
                "integer": 5
              },
              {
                "name": "ALREADY_EXISTS",
                "integer": 6
              },
              {
                "name": "PERMISSION_DENIED",
                "integer": 7
              },
              {
                "name": "UNAUTHENTICATED",
                "integer": 16
              },
              {
                "name": "RESOURCE_EXHAUSTED",
                "integer": 8
              },
              {
                "name": "FAILED_PRECONDITION",
                "integer": 9
              },
              {
                "name": "ABORTED",
                "integer": 10
              },
              {
                "name": "OUT_OF_RANGE",
                "integer": 11
              },
              {
                "name": "UNIMPLEMENTED",
                "integer": 12
              },
              {
                "name": "INTERNAL",
                "integer": 13
              },
              {
                "name": "UNAVAILABLE",
                "integer": 14
              },
              {
                "name": "DATA_LOSS",
                "integer": 15
              }
            ]
          }
        ],
        "package": {
          "name": "google.rpc"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:rpc:/:context:/:attribute_context.proto",
      "def": {
        "messages": [
          {
            "name": "AttributeContext",
            "fields": [
              {
                "id": 7,
                "name": "origin",
                "type": "Peer"
              },
              {
                "id": 1,
                "name": "source",
                "type": "Peer"
              },
              {
                "id": 2,
                "name": "destination",
                "type": "Peer"
              },
              {
                "id": 3,
                "name": "request",
                "type": "Request"
              },
              {
                "id": 4,
                "name": "response",
                "type": "Response"
              },
              {
                "id": 5,
                "name": "resource",
                "type": "Resource"
              },
              {
                "id": 6,
                "name": "api",
                "type": "Api"
              },
              {
                "id": 8,
                "name": "extensions",
                "type": "google.protobuf.Any",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Peer",
                "fields": [
                  {
                    "id": 1,
                    "name": "ip",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "port",
                    "type": "int64"
                  },
                  {
                    "id": 7,
                    "name": "principal",
                    "type": "string"
                  },
                  {
                    "id": 8,
                    "name": "region_code",
                    "type": "string"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 6,
                      "name": "labels",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "Api",
                "fields": [
                  {
                    "id": 1,
                    "name": "service",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "operation",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "protocol",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "version",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Auth",
                "fields": [
                  {
                    "id": 1,
                    "name": "principal",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "audiences",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "presenter",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "claims",
                    "type": "google.protobuf.Struct"
                  },
                  {
                    "id": 5,
                    "name": "access_levels",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "Request",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "method",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "path",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "host",
                    "type": "string"
                  },
                  {
                    "id": 6,
                    "name": "scheme",
                    "type": "string"
                  },
                  {
                    "id": 7,
                    "name": "query",
                    "type": "string"
                  },
                  {
                    "id": 9,
                    "name": "time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 10,
                    "name": "size",
                    "type": "int64"
                  },
                  {
                    "id": 11,
                    "name": "protocol",
                    "type": "string"
                  },
                  {
                    "id": 12,
                    "name": "reason",
                    "type": "string"
                  },
                  {
                    "id": 13,
                    "name": "auth",
                    "type": "Auth"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "headers",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "Response",
                "fields": [
                  {
                    "id": 1,
                    "name": "code",
                    "type": "int64"
                  },
                  {
                    "id": 2,
                    "name": "size",
                    "type": "int64"
                  },
                  {
                    "id": 4,
                    "name": "time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 5,
                    "name": "backend_latency",
                    "type": "google.protobuf.Duration"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "headers",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "Resource",
                "fields": [
                  {
                    "id": 1,
                    "name": "service",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "uid",
                    "type": "string"
                  },
                  {
                    "id": 7,
                    "name": "display_name",
                    "type": "string"
                  },
                  {
                    "id": 8,
                    "name": "create_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 9,
                    "name": "update_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 10,
                    "name": "delete_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 11,
                    "name": "etag",
                    "type": "string"
                  },
                  {
                    "id": 12,
                    "name": "location",
                    "type": "string"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 4,
                      "name": "labels",
                      "type": "string"
                    }
                  },
                  {
                    "key_type": "string",
                    "field": {
                      "id": 6,
                      "name": "annotations",
                      "type": "string"
                    }
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "google.rpc.context"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:rpc:/:context:/:audit_context.proto",
      "def": {
        "messages": [
          {
            "name": "AuditContext",
            "fields": [
              {
                "id": 1,
                "name": "audit_log",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "scrubbed_request",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 3,
                "name": "scrubbed_response",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 4,
                "name": "scrubbed_response_item_count",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "target_resource",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/struct.proto"
          }
        ],
        "package": {
          "name": "google.rpc.context"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:rpc:/:error_details.proto",
      "def": {
        "messages": [
          {
            "name": "ErrorInfo",
            "fields": [
              {
                "id": 1,
                "name": "reason",
                "type": "string"
              },
              {
                "id": 2,
                "name": "domain",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "metadata",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "RetryInfo",
            "fields": [
              {
                "id": 1,
                "name": "retry_delay",
                "type": "google.protobuf.Duration"
              }
            ]
          },
          {
            "name": "DebugInfo",
            "fields": [
              {
                "id": 1,
                "name": "stack_entries",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "detail",
                "type": "string"
              }
            ]
          },
          {
            "name": "QuotaFailure",
            "fields": [
              {
                "id": 1,
                "name": "violations",
                "type": "Violation",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Violation",
                "fields": [
                  {
                    "id": 1,
                    "name": "subject",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "description",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "PreconditionFailure",
            "fields": [
              {
                "id": 1,
                "name": "violations",
                "type": "Violation",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Violation",
                "fields": [
                  {
                    "id": 1,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "subject",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "description",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "BadRequest",
            "fields": [
              {
                "id": 1,
                "name": "field_violations",
                "type": "FieldViolation",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "FieldViolation",
                "fields": [
                  {
                    "id": 1,
                    "name": "field",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "description",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "RequestInfo",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "serving_data",
                "type": "string"
              }
            ]
          },
          {
            "name": "ResourceInfo",
            "fields": [
              {
                "id": 1,
                "name": "resource_type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "resource_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "owner",
                "type": "string"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              }
            ]
          },
          {
            "name": "Help",
            "fields": [
              {
                "id": 1,
                "name": "links",
                "type": "Link",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Link",
                "fields": [
                  {
                    "id": 1,
                    "name": "description",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "url",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "LocalizedMessage",
            "fields": [
              {
                "id": 1,
                "name": "locale",
                "type": "string"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "google.rpc"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:rpc:/:status.proto",
      "def": {
        "messages": [
          {
            "name": "Status",
            "fields": [
              {
                "id": 1,
                "name": "code",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              },
              {
                "id": 3,
                "name": "details",
                "type": "google.protobuf.Any",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "google.rpc"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:calendar_period.proto",
      "def": {
        "enums": [
          {
            "name": "CalendarPeriod",
            "enum_fields": [
              {
                "name": "CALENDAR_PERIOD_UNSPECIFIED"
              },
              {
                "name": "DAY",
                "integer": 1
              },
              {
                "name": "WEEK",
                "integer": 2
              },
              {
                "name": "FORTNIGHT",
                "integer": 3
              },
              {
                "name": "MONTH",
                "integer": 4
              },
              {
                "name": "QUARTER",
                "integer": 5
              },
              {
                "name": "HALF",
                "integer": 6
              },
              {
                "name": "YEAR",
                "integer": 7
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:color.proto",
      "def": {
        "messages": [
          {
            "name": "Color",
            "fields": [
              {
                "id": 1,
                "name": "red",
                "type": "float"
              },
              {
                "id": 2,
                "name": "green",
                "type": "float"
              },
              {
                "id": 3,
                "name": "blue",
                "type": "float"
              },
              {
                "id": 4,
                "name": "alpha",
                "type": "google.protobuf.FloatValue"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:date.proto",
      "def": {
        "messages": [
          {
            "name": "Date",
            "fields": [
              {
                "id": 1,
                "name": "year",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "month",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "day",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:datetime.proto",
      "def": {
        "messages": [
          {
            "name": "DateTime",
            "fields": [
              {
                "id": 1,
                "name": "year",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "month",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "day",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "hours",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "minutes",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "seconds",
                "type": "int32"
              },
              {
                "id": 7,
                "name": "nanos",
                "type": "int32"
              },
              {
                "id": 8,
                "name": "utc_offset",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 9,
                "name": "time_zone",
                "type": "TimeZone"
              }
            ]
          },
          {
            "name": "TimeZone",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:dayofweek.proto",
      "def": {
        "enums": [
          {
            "name": "DayOfWeek",
            "enum_fields": [
              {
                "name": "DAY_OF_WEEK_UNSPECIFIED"
              },
              {
                "name": "MONDAY",
                "integer": 1
              },
              {
                "name": "TUESDAY",
                "integer": 2
              },
              {
                "name": "WEDNESDAY",
                "integer": 3
              },
              {
                "name": "THURSDAY",
                "integer": 4
              },
              {
                "name": "FRIDAY",
                "integer": 5
              },
              {
                "name": "SATURDAY",
                "integer": 6
              },
              {
                "name": "SUNDAY",
                "integer": 7
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:decimal.proto",
      "def": {
        "messages": [
          {
            "name": "Decimal",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:expr.proto",
      "def": {
        "messages": [
          {
            "name": "Expr",
            "fields": [
              {
                "id": 1,
                "name": "expression",
                "type": "string"
              },
              {
                "id": 2,
                "name": "title",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "location",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:fraction.proto",
      "def": {
        "messages": [
          {
            "name": "Fraction",
            "fields": [
              {
                "id": 1,
                "name": "numerator",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "denominator",
                "type": "int64"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:interval.proto",
      "def": {
        "messages": [
          {
            "name": "Interval",
            "fields": [
              {
                "id": 1,
                "name": "start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "end_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:latlng.proto",
      "def": {
        "messages": [
          {
            "name": "LatLng",
            "fields": [
              {
                "id": 1,
                "name": "latitude",
                "type": "double"
              },
              {
                "id": 2,
                "name": "longitude",
                "type": "double"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:localized_text.proto",
      "def": {
        "messages": [
          {
            "name": "LocalizedText",
            "fields": [
              {
                "id": 1,
                "name": "text",
                "type": "string"
              },
              {
                "id": 2,
                "name": "language_code",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:money.proto",
      "def": {
        "messages": [
          {
            "name": "Money",
            "fields": [
              {
                "id": 1,
                "name": "currency_code",
                "type": "string"
              },
              {
                "id": 2,
                "name": "units",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "nanos",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:month.proto",
      "def": {
        "enums": [
          {
            "name": "Month",
            "enum_fields": [
              {
                "name": "MONTH_UNSPECIFIED"
              },
              {
                "name": "JANUARY",
                "integer": 1
              },
              {
                "name": "FEBRUARY",
                "integer": 2
              },
              {
                "name": "MARCH",
                "integer": 3
              },
              {
                "name": "APRIL",
                "integer": 4
              },
              {
                "name": "MAY",
                "integer": 5
              },
              {
                "name": "JUNE",
                "integer": 6
              },
              {
                "name": "JULY",
                "integer": 7
              },
              {
                "name": "AUGUST",
                "integer": 8
              },
              {
                "name": "SEPTEMBER",
                "integer": 9
              },
              {
                "name": "OCTOBER",
                "integer": 10
              },
              {
                "name": "NOVEMBER",
                "integer": 11
              },
              {
                "name": "DECEMBER",
                "integer": 12
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:phone_number.proto",
      "def": {
        "messages": [
          {
            "name": "PhoneNumber",
            "fields": [
              {
                "id": 1,
                "name": "e164_number",
                "type": "string"
              },
              {
                "id": 2,
                "name": "short_code",
                "type": "ShortCode"
              },
              {
                "id": 3,
                "name": "extension",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "ShortCode",
                "fields": [
                  {
                    "id": 1,
                    "name": "region_code",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "number",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:postal_address.proto",
      "def": {
        "messages": [
          {
            "name": "PostalAddress",
            "fields": [
              {
                "id": 1,
                "name": "revision",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "region_code",
                "type": "string"
              },
              {
                "id": 3,
                "name": "language_code",
                "type": "string"
              },
              {
                "id": 4,
                "name": "postal_code",
                "type": "string"
              },
              {
                "id": 5,
                "name": "sorting_code",
                "type": "string"
              },
              {
                "id": 6,
                "name": "administrative_area",
                "type": "string"
              },
              {
                "id": 7,
                "name": "locality",
                "type": "string"
              },
              {
                "id": 8,
                "name": "sublocality",
                "type": "string"
              },
              {
                "id": 9,
                "name": "address_lines",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "recipients",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "organization",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:quaternion.proto",
      "def": {
        "messages": [
          {
            "name": "Quaternion",
            "fields": [
              {
                "id": 1,
                "name": "x",
                "type": "double"
              },
              {
                "id": 2,
                "name": "y",
                "type": "double"
              },
              {
                "id": 3,
                "name": "z",
                "type": "double"
              },
              {
                "id": 4,
                "name": "w",
                "type": "double"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:google:/:type:/:timeofday.proto",
      "def": {
        "messages": [
          {
            "name": "TimeOfDay",
            "fields": [
              {
                "id": 1,
                "name": "hours",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "minutes",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "seconds",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "nanos",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:grpc:/:gcp:/:altscontext.proto",
      "def": {
        "messages": [
          {
            "name": "AltsContext",
            "fields": [
              {
                "id": 1,
                "name": "application_protocol",
                "type": "string"
              },
              {
                "id": 2,
                "name": "record_protocol",
                "type": "string"
              },
              {
                "id": 3,
                "name": "security_level",
                "type": "SecurityLevel"
              },
              {
                "id": 4,
                "name": "peer_service_account",
                "type": "string"
              },
              {
                "id": 5,
                "name": "local_service_account",
                "type": "string"
              },
              {
                "id": 6,
                "name": "peer_rpc_versions",
                "type": "RpcProtocolVersions"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "peer_attributes",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "grpc/gcp/transport_security_common.proto"
          }
        ],
        "package": {
          "name": "grpc.gcp"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:grpc:/:gcp:/:handshaker.proto",
      "def": {
        "enums": [
          {
            "name": "HandshakeProtocol",
            "enum_fields": [
              {
                "name": "HANDSHAKE_PROTOCOL_UNSPECIFIED"
              },
              {
                "name": "TLS",
                "integer": 1
              },
              {
                "name": "ALTS",
                "integer": 2
              }
            ]
          },
          {
            "name": "NetworkProtocol",
            "enum_fields": [
              {
                "name": "NETWORK_PROTOCOL_UNSPECIFIED"
              },
              {
                "name": "TCP",
                "integer": 1
              },
              {
                "name": "UDP",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Endpoint",
            "fields": [
              {
                "id": 1,
                "name": "ip_address",
                "type": "string"
              },
              {
                "id": 2,
                "name": "port",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "NetworkProtocol"
              }
            ]
          },
          {
            "name": "Identity",
            "fields": [
              {
                "id": 1,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 2,
                "name": "hostname",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "attributes",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "StartClientHandshakeReq",
            "fields": [
              {
                "id": 1,
                "name": "handshake_security_protocol",
                "type": "HandshakeProtocol"
              },
              {
                "id": 2,
                "name": "application_protocols",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "record_protocols",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "target_identities",
                "type": "Identity",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "local_identity",
                "type": "Identity"
              },
              {
                "id": 6,
                "name": "local_endpoint",
                "type": "Endpoint"
              },
              {
                "id": 7,
                "name": "remote_endpoint",
                "type": "Endpoint"
              },
              {
                "id": 8,
                "name": "target_name",
                "type": "string"
              },
              {
                "id": 9,
                "name": "rpc_versions",
                "type": "RpcProtocolVersions"
              }
            ]
          },
          {
            "name": "ServerHandshakeParameters",
            "fields": [
              {
                "id": 1,
                "name": "record_protocols",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "local_identities",
                "type": "Identity",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "StartServerHandshakeReq",
            "fields": [
              {
                "id": 1,
                "name": "application_protocols",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "in_bytes",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "local_endpoint",
                "type": "Endpoint"
              },
              {
                "id": 5,
                "name": "remote_endpoint",
                "type": "Endpoint"
              },
              {
                "id": 6,
                "name": "rpc_versions",
                "type": "RpcProtocolVersions"
              }
            ],
            "maps": [
              {
                "key_type": "int32",
                "field": {
                  "id": 2,
                  "name": "handshake_parameters",
                  "type": "ServerHandshakeParameters"
                }
              }
            ]
          },
          {
            "name": "NextHandshakeMessageReq",
            "fields": [
              {
                "id": 1,
                "name": "in_bytes",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "HandshakerReq",
            "fields": [
              {
                "id": 1,
                "name": "client_start",
                "type": "StartClientHandshakeReq"
              },
              {
                "id": 2,
                "name": "server_start",
                "type": "StartServerHandshakeReq"
              },
              {
                "id": 3,
                "name": "next",
                "type": "NextHandshakeMessageReq"
              }
            ]
          },
          {
            "name": "HandshakerResult",
            "fields": [
              {
                "id": 1,
                "name": "application_protocol",
                "type": "string"
              },
              {
                "id": 2,
                "name": "record_protocol",
                "type": "string"
              },
              {
                "id": 3,
                "name": "key_data",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "peer_identity",
                "type": "Identity"
              },
              {
                "id": 5,
                "name": "local_identity",
                "type": "Identity"
              },
              {
                "id": 6,
                "name": "keep_channel_open",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "peer_rpc_versions",
                "type": "RpcProtocolVersions"
              }
            ]
          },
          {
            "name": "HandshakerStatus",
            "fields": [
              {
                "id": 1,
                "name": "code",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "details",
                "type": "string"
              }
            ]
          },
          {
            "name": "HandshakerResp",
            "fields": [
              {
                "id": 1,
                "name": "out_frames",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "bytes_consumed",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "result",
                "type": "HandshakerResult"
              },
              {
                "id": 4,
                "name": "status",
                "type": "HandshakerStatus"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "HandshakerService",
            "rpcs": [
              {
                "name": "DoHandshake",
                "in_type": "HandshakerReq",
                "out_type": "HandshakerResp",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "grpc/gcp/transport_security_common.proto"
          }
        ],
        "package": {
          "name": "grpc.gcp"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:grpc:/:gcp:/:transport_security_common.proto",
      "def": {
        "enums": [
          {
            "name": "SecurityLevel",
            "enum_fields": [
              {
                "name": "SECURITY_NONE"
              },
              {
                "name": "INTEGRITY_ONLY",
                "integer": 1
              },
              {
                "name": "INTEGRITY_AND_PRIVACY",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "RpcProtocolVersions",
            "fields": [
              {
                "id": 1,
                "name": "max_rpc_version",
                "type": "Version"
              },
              {
                "id": 2,
                "name": "min_rpc_version",
                "type": "Version"
              }
            ],
            "messages": [
              {
                "name": "Version",
                "fields": [
                  {
                    "id": 1,
                    "name": "major",
                    "type": "uint32"
                  },
                  {
                    "id": 2,
                    "name": "minor",
                    "type": "uint32"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "grpc.gcp"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:main:/:grpc:/:lb:/:v1:/:load_balancer.proto",
      "def": {
        "messages": [
          {
            "name": "LoadBalanceRequest",
            "fields": [
              {
                "id": 1,
                "name": "initial_request",
                "type": "InitialLoadBalanceRequest"
              },
              {
                "id": 2,
                "name": "client_stats",
                "type": "ClientStats"
              }
            ]
          },
          {
            "name": "InitialLoadBalanceRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ClientStatsPerToken",
            "fields": [
              {
                "id": 1,
                "name": "load_balance_token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "num_calls",
                "type": "int64"
              }
            ]
          },
          {
            "name": "ClientStats",
            "fields": [
              {
                "id": 1,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "num_calls_started",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "num_calls_finished",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "num_calls_finished_with_client_failed_to_send",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "num_calls_finished_known_received",
                "type": "int64"
              },
              {
                "id": 8,
                "name": "calls_finished_with_drop",
                "type": "ClientStatsPerToken",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              4,
              5
            ]
          },
          {
            "name": "LoadBalanceResponse",
            "fields": [
              {
                "id": 1,
                "name": "initial_response",
                "type": "InitialLoadBalanceResponse"
              },
              {
                "id": 2,
                "name": "server_list",
                "type": "ServerList"
              }
            ]
          },
          {
            "name": "InitialLoadBalanceResponse",
            "fields": [
              {
                "id": 1,
                "name": "load_balancer_delegate",
                "type": "string"
              },
              {
                "id": 2,
                "name": "client_stats_report_interval",
                "type": "google.protobuf.Duration"
              }
            ]
          },
          {
            "name": "ServerList",
            "fields": [
              {
                "id": 1,
                "name": "servers",
                "type": "Server",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              3
            ]
          },
          {
            "name": "Server",
            "fields": [
              {
                "id": 1,
                "name": "ip_address",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "port",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "load_balance_token",
                "type": "string"
              },
              {
                "id": 4,
                "name": "drop",
                "type": "bool"
              }
            ],
            "reserved_ids": [
              5
            ]
          }
        ],
        "services": [
          {
            "name": "LoadBalancer",
            "rpcs": [
              {
                "name": "BalanceLoad",
                "in_type": "LoadBalanceRequest",
                "out_type": "LoadBalanceResponse",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "grpc.lb.v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:integrations:/:splunk_service.proto",
      "def": {
        "enums": [
          {
            "name": "ViolationInfo.ViolationType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "GENERIC",
                "integer": 1
              },
              {
                "name": "K8S_EVENT",
                "integer": 2
              },
              {
                "name": "PROCESS_EVENT",
                "integer": 3
              },
              {
                "name": "NETWORK_FLOW",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "SplunkViolationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "violations",
                "type": "SplunkViolation",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "new_checkpoint",
                "type": "string"
              }
            ]
          },
          {
            "name": "SplunkViolation",
            "fields": [
              {
                "id": 1,
                "name": "violation_info",
                "type": "ViolationInfo"
              },
              {
                "id": 2,
                "name": "alert_info",
                "type": "AlertInfo"
              },
              {
                "id": 3,
                "name": "process_info",
                "type": "ProcessInfo"
              },
              {
                "id": 4,
                "name": "deployment_info",
                "type": "DeploymentInfo"
              },
              {
                "id": 10,
                "name": "resource_info",
                "type": "ResourceInfo"
              },
              {
                "id": 5,
                "name": "policy_info",
                "type": "PolicyInfo"
              },
              {
                "id": 6,
                "name": "network_flow_info",
                "type": "storage.Alert.Violation.NetworkFlowInfo"
              }
            ],
            "messages": [
              {
                "name": "ViolationInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "violation_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "violation_message",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "violation_message_attributes",
                    "type": "storage.Alert.Violation.KeyValueAttrs.KeyValueAttr",
                    "is_repeated": true
                  },
                  {
                    "id": 4,
                    "name": "violation_type",
                    "type": "ViolationType"
                  },
                  {
                    "id": 5,
                    "name": "violation_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 102,
                    "name": "pod_id",
                    "type": "string"
                  },
                  {
                    "id": 103,
                    "name": "pod_uid",
                    "type": "string"
                  },
                  {
                    "id": 104,
                    "name": "container_name",
                    "type": "string"
                  },
                  {
                    "id": 105,
                    "name": "container_start_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 106,
                    "name": "container_id",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "AlertInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "alert_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "lifecycle_stage",
                    "type": "storage.LifecycleStage"
                  },
                  {
                    "id": 4,
                    "name": "alert_first_occurred",
                    "type": "google.protobuf.Timestamp"
                  }
                ],
                "reserved_ids": [
                  3
                ]
              },
              {
                "name": "ProcessInfo",
                "fields": [
                  {
                    "id": 101,
                    "name": "process_violation_id",
                    "type": "string"
                  },
                  {
                    "id": 202,
                    "name": "process_signal_id",
                    "type": "string"
                  },
                  {
                    "id": 203,
                    "name": "process_creation_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 204,
                    "name": "process_name",
                    "type": "string"
                  },
                  {
                    "id": 205,
                    "name": "process_args",
                    "type": "string"
                  },
                  {
                    "id": 206,
                    "name": "exec_file_path",
                    "type": "string"
                  },
                  {
                    "id": 207,
                    "name": "pid",
                    "type": "google.protobuf.UInt32Value"
                  },
                  {
                    "id": 208,
                    "name": "process_uid",
                    "type": "google.protobuf.UInt32Value"
                  },
                  {
                    "id": 209,
                    "name": "process_gid",
                    "type": "google.protobuf.UInt32Value"
                  },
                  {
                    "id": 210,
                    "name": "process_lineage_info",
                    "type": "storage.ProcessSignal.LineageInfo",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "DeploymentInfo",
                "fields": [
                  {
                    "id": 101,
                    "name": "deployment_id",
                    "type": "string"
                  },
                  {
                    "id": 102,
                    "name": "deployment_name",
                    "type": "string"
                  },
                  {
                    "id": 103,
                    "name": "deployment_type",
                    "type": "string"
                  },
                  {
                    "id": 104,
                    "name": "deployment_namespace",
                    "type": "string"
                  },
                  {
                    "id": 105,
                    "name": "deployment_namespace_id",
                    "type": "string"
                  },
                  {
                    "id": 107,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 108,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 109,
                    "name": "deployment_containers",
                    "type": "storage.Alert.Deployment.Container",
                    "is_repeated": true
                  },
                  {
                    "id": 201,
                    "name": "deployment_image",
                    "type": "storage.ContainerImage"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 106,
                      "name": "deployment_labels",
                      "type": "string"
                    }
                  },
                  {
                    "key_type": "string",
                    "field": {
                      "id": 110,
                      "name": "deployment_annotations",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "ResourceInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "resource_type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "namespace",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "PolicyInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "policy_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "policy_name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "policy_description",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "policy_rationale",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "policy_categories",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 6,
                    "name": "policy_lifecycle_stages",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 7,
                    "name": "policy_severity",
                    "type": "string"
                  },
                  {
                    "id": 8,
                    "name": "policy_version",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          },
          {
            "path": "storage/alert.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "integrations"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:alert_service.proto",
      "def": {
        "enums": [
          {
            "name": "GetAlertsCountsRequest.RequestGroup",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "CATEGORY",
                "integer": 1
              },
              {
                "name": "CLUSTER",
                "integer": 2
              }
            ]
          },
          {
            "name": "Type",
            "enum_fields": [
              {
                "name": "CREATED"
              },
              {
                "name": "REMOVED",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CountAlertsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ListAlertsRequest",
            "fields": [
              {
                "id": 10,
                "name": "query",
                "type": "string"
              },
              {
                "id": 11,
                "name": "pagination",
                "type": "Pagination"
              }
            ],
            "reserved_ids": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9
            ]
          },
          {
            "name": "ResolveAlertRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "whitelist",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "add_to_baseline",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ResolveAlertsRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "SnoozeAlertRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "snooze_till",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ListAlertsResponse",
            "fields": [
              {
                "id": 1,
                "name": "alerts",
                "type": "storage.ListAlert",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeleteAlertsRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              },
              {
                "id": 2,
                "name": "confirm",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteAlertsResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_deleted",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "dry_run",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetAlertsGroupResponse",
            "fields": [
              {
                "id": 1,
                "name": "alerts_by_policies",
                "type": "PolicyGroup",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "PolicyGroup",
                "fields": [
                  {
                    "id": 1,
                    "name": "policy",
                    "type": "storage.ListAlertPolicy"
                  },
                  {
                    "id": 2,
                    "name": "num_alerts",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetAlertsCountsRequest",
            "fields": [
              {
                "id": 1,
                "name": "request",
                "type": "ListAlertsRequest"
              },
              {
                "id": 2,
                "name": "group_by",
                "type": "RequestGroup"
              }
            ]
          },
          {
            "name": "GetAlertsCountsResponse",
            "fields": [
              {
                "id": 1,
                "name": "groups",
                "type": "AlertGroup",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "AlertGroup",
                "fields": [
                  {
                    "id": 1,
                    "name": "group",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "counts",
                    "type": "AlertCounts",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "AlertCounts",
                    "fields": [
                      {
                        "id": 1,
                        "name": "severity",
                        "type": "storage.Severity"
                      },
                      {
                        "id": 2,
                        "name": "count",
                        "type": "int64"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "AlertEvent",
            "fields": [
              {
                "id": 1,
                "name": "time",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 3,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetAlertTimeseriesResponse",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "ClusterAlerts",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ClusterAlerts",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "severities",
                    "type": "AlertEvents",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "AlertEvents",
                    "fields": [
                      {
                        "id": 1,
                        "name": "severity",
                        "type": "storage.Severity"
                      },
                      {
                        "id": 2,
                        "name": "events",
                        "type": "AlertEvent",
                        "is_repeated": true
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AlertService",
            "rpcs": [
              {
                "name": "GetAlert",
                "in_type": "ResourceByID",
                "out_type": "storage.Alert"
              },
              {
                "name": "CountAlerts",
                "in_type": "RawQuery",
                "out_type": "CountAlertsResponse"
              },
              {
                "name": "ListAlerts",
                "in_type": "ListAlertsRequest",
                "out_type": "ListAlertsResponse"
              },
              {
                "name": "GetAlertsGroup",
                "in_type": "ListAlertsRequest",
                "out_type": "GetAlertsGroupResponse"
              },
              {
                "name": "GetAlertsCounts",
                "in_type": "GetAlertsCountsRequest",
                "out_type": "GetAlertsCountsResponse"
              },
              {
                "name": "GetAlertTimeseries",
                "in_type": "ListAlertsRequest",
                "out_type": "GetAlertTimeseriesResponse"
              },
              {
                "name": "ResolveAlert",
                "in_type": "ResolveAlertRequest",
                "out_type": "Empty"
              },
              {
                "name": "ResolveAlerts",
                "in_type": "ResolveAlertsRequest",
                "out_type": "Empty"
              },
              {
                "name": "SnoozeAlert",
                "in_type": "SnoozeAlertRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeleteAlerts",
                "in_type": "DeleteAlertsRequest",
                "out_type": "DeleteAlertsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/pagination.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/alert.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:api_token_service.proto",
      "def": {
        "messages": [
          {
            "name": "GenerateTokenRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "role",
                "type": "string"
              },
              {
                "id": 3,
                "name": "roles",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GenerateTokenResponse",
            "fields": [
              {
                "id": 1,
                "name": "token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "metadata",
                "type": "storage.TokenMetadata"
              }
            ]
          },
          {
            "name": "GetAPITokensRequest",
            "fields": [
              {
                "id": 1,
                "name": "revoked",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetAPITokensResponse",
            "fields": [
              {
                "id": 1,
                "name": "tokens",
                "type": "storage.TokenMetadata",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "APITokenService",
            "rpcs": [
              {
                "name": "GetAPIToken",
                "in_type": "ResourceByID",
                "out_type": "storage.TokenMetadata"
              },
              {
                "name": "GetAPITokens",
                "in_type": "GetAPITokensRequest",
                "out_type": "GetAPITokensResponse"
              },
              {
                "name": "GenerateToken",
                "in_type": "GenerateTokenRequest",
                "out_type": "GenerateTokenResponse"
              },
              {
                "name": "RevokeToken",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/api_token.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:audit.proto",
      "def": {
        "enums": [
          {
            "name": "Audit.RequestStatus",
            "enum_fields": [
              {
                "name": "UNKNOWN_STATUS"
              },
              {
                "name": "REQUEST_SUCCEEDED",
                "integer": 1
              },
              {
                "name": "AUTH_FAILED",
                "integer": 2
              },
              {
                "name": "REQUEST_FAILED",
                "integer": 3
              }
            ]
          },
          {
            "name": "Audit.Interaction",
            "enum_fields": [
              {
                "name": "UNKNOWN_INTERACTION"
              },
              {
                "name": "CREATE",
                "integer": 1
              },
              {
                "name": "UPDATE",
                "integer": 2
              },
              {
                "name": "DELETE",
                "integer": 3
              }
            ]
          },
          {
            "name": "Audit.AccessMethod",
            "enum_fields": [
              {
                "name": "UNKNOWN_METHOD"
              },
              {
                "name": "CLI",
                "integer": 1
              },
              {
                "name": "UI",
                "integer": 2
              },
              {
                "name": "API",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Audit",
            "messages": [
              {
                "name": "Message",
                "fields": [
                  {
                    "id": 1,
                    "name": "time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 2,
                    "name": "status",
                    "type": "RequestStatus"
                  },
                  {
                    "id": 3,
                    "name": "status_reason",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "user",
                    "type": "storage.UserInfo"
                  },
                  {
                    "id": 5,
                    "name": "request",
                    "type": "Request"
                  },
                  {
                    "id": 6,
                    "name": "method",
                    "type": "AccessMethod"
                  },
                  {
                    "id": 7,
                    "name": "interaction",
                    "type": "Interaction"
                  }
                ],
                "messages": [
                  {
                    "name": "Request",
                    "fields": [
                      {
                        "id": 1,
                        "name": "endpoint",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "method",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "payload",
                        "type": "google.protobuf.Any"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/user.proto"
          },
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:auth_service.proto",
      "def": {
        "messages": [
          {
            "name": "UserAttribute",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AuthStatus",
            "fields": [
              {
                "id": 1,
                "name": "user_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "service_id",
                "type": "storage.ServiceIdentity"
              },
              {
                "id": 3,
                "name": "expires",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "refresh_url",
                "type": "string"
              },
              {
                "id": 5,
                "name": "auth_provider",
                "type": "storage.AuthProvider"
              },
              {
                "id": 6,
                "name": "user_info",
                "type": "storage.UserInfo"
              },
              {
                "id": 7,
                "name": "user_attributes",
                "type": "UserAttribute",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AuthService",
            "rpcs": [
              {
                "name": "GetAuthStatus",
                "in_type": "Empty",
                "out_type": "AuthStatus"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/auth_provider.proto"
          },
          {
            "path": "storage/service_identity.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:authprovider_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetAuthProviderRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetAuthProvidersRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetLoginAuthProvidersResponse",
            "fields": [
              {
                "id": 1,
                "name": "auth_providers",
                "type": "LoginAuthProvider",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "LoginAuthProvider",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "login_url",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetAuthProvidersResponse",
            "fields": [
              {
                "id": 1,
                "name": "auth_providers",
                "type": "storage.AuthProvider",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PostAuthProviderRequest",
            "fields": [
              {
                "id": 1,
                "name": "provider",
                "type": "storage.AuthProvider"
              }
            ]
          },
          {
            "name": "UpdateAuthProviderRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "enabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ExchangeTokenRequest",
            "fields": [
              {
                "id": 1,
                "name": "external_token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "state",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExchangeTokenResponse",
            "fields": [
              {
                "id": 1,
                "name": "token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "client_state",
                "type": "string"
              },
              {
                "id": 3,
                "name": "test",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "user",
                "type": "v1.AuthStatus"
              }
            ]
          },
          {
            "name": "AvailableProviderTypesResponse",
            "fields": [
              {
                "id": 1,
                "name": "auth_provider_types",
                "type": "AuthProviderType",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "AuthProviderType",
                "fields": [
                  {
                    "id": 1,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "suggested_attributes",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AuthProviderService",
            "rpcs": [
              {
                "name": "ListAvailableProviderTypes",
                "in_type": "Empty",
                "out_type": "AvailableProviderTypesResponse"
              },
              {
                "name": "GetAuthProvider",
                "in_type": "GetAuthProviderRequest",
                "out_type": "storage.AuthProvider"
              },
              {
                "name": "GetLoginAuthProviders",
                "in_type": "Empty",
                "out_type": "GetLoginAuthProvidersResponse"
              },
              {
                "name": "GetAuthProviders",
                "in_type": "GetAuthProvidersRequest",
                "out_type": "GetAuthProvidersResponse"
              },
              {
                "name": "PostAuthProvider",
                "in_type": "PostAuthProviderRequest",
                "out_type": "storage.AuthProvider"
              },
              {
                "name": "UpdateAuthProvider",
                "in_type": "UpdateAuthProviderRequest",
                "out_type": "storage.AuthProvider"
              },
              {
                "name": "PutAuthProvider",
                "in_type": "storage.AuthProvider",
                "out_type": "storage.AuthProvider"
              },
              {
                "name": "DeleteAuthProvider",
                "in_type": "DeleteByIDWithForce",
                "out_type": "Empty"
              },
              {
                "name": "ExchangeToken",
                "in_type": "ExchangeTokenRequest",
                "out_type": "ExchangeTokenResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/auth_service.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/auth_provider.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:backup_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetExternalBackupsResponse",
            "fields": [
              {
                "id": 1,
                "name": "external_backups",
                "type": "storage.ExternalBackup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateExternalBackupRequest",
            "fields": [
              {
                "id": 1,
                "name": "external_backup",
                "type": "storage.ExternalBackup"
              },
              {
                "id": 2,
                "name": "update_password",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ExternalBackupService",
            "rpcs": [
              {
                "name": "GetExternalBackup",
                "in_type": "ResourceByID",
                "out_type": "storage.ExternalBackup"
              },
              {
                "name": "GetExternalBackups",
                "in_type": "Empty",
                "out_type": "GetExternalBackupsResponse"
              },
              {
                "name": "PostExternalBackup",
                "in_type": "storage.ExternalBackup",
                "out_type": "storage.ExternalBackup"
              },
              {
                "name": "PutExternalBackup",
                "in_type": "storage.ExternalBackup",
                "out_type": "storage.ExternalBackup"
              },
              {
                "name": "TestExternalBackup",
                "in_type": "storage.ExternalBackup",
                "out_type": "Empty"
              },
              {
                "name": "DeleteExternalBackup",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "TriggerExternalBackup",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "UpdateExternalBackup",
                "in_type": "UpdateExternalBackupRequest",
                "out_type": "storage.ExternalBackup"
              },
              {
                "name": "TestUpdatedExternalBackup",
                "in_type": "UpdateExternalBackupRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/external_backup.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:central_health_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetUpgradeStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "upgradeStatus",
                "type": "CentralUpgradeStatus"
              }
            ]
          },
          {
            "name": "CentralUpgradeStatus",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "force_rollback_to",
                "type": "string"
              },
              {
                "id": 3,
                "name": "can_rollback_after_upgrade",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "space_required_for_rollback_after_upgrade",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "space_available_for_rollback_after_upgrade",
                "type": "int64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CentralHealthService",
            "rpcs": [
              {
                "name": "GetUpgradeStatus",
                "in_type": "Empty",
                "out_type": "GetUpgradeStatusResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:cluster_init_service.proto",
      "def": {
        "messages": [
          {
            "name": "InitBundleMeta",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "impacted_clusters",
                "type": "ImpactedCluster",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "created_by",
                "type": "storage.User"
              },
              {
                "id": 5,
                "name": "expires_at",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "messages": [
              {
                "name": "ImpactedCluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "InitBundleGenResponse",
            "fields": [
              {
                "id": 1,
                "name": "meta",
                "type": "InitBundleMeta"
              },
              {
                "id": 2,
                "name": "helm_values_bundle",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "kubectl_bundle",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "GetCAConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "helm_values_bundle",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "InitBundleMetasResponse",
            "fields": [
              {
                "id": 1,
                "name": "items",
                "type": "InitBundleMeta",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "InitBundleGenRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "InitBundleRevokeRequest",
            "fields": [
              {
                "id": 1,
                "name": "ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "confirm_impacted_clusters_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "InitBundleRevokeResponse",
            "fields": [
              {
                "id": 2,
                "name": "init_bundle_revocation_errors",
                "type": "InitBundleRevocationError",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "init_bundle_revoked_ids",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "InitBundleRevocationError",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "error",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "impacted_clusters",
                    "type": "InitBundleMeta.ImpactedCluster",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ClusterInitService",
            "rpcs": [
              {
                "name": "RevokeInitBundle",
                "in_type": "InitBundleRevokeRequest",
                "out_type": "InitBundleRevokeResponse"
              },
              {
                "name": "GetCAConfig",
                "in_type": "Empty",
                "out_type": "GetCAConfigResponse"
              },
              {
                "name": "GetInitBundles",
                "in_type": "Empty",
                "out_type": "InitBundleMetasResponse"
              },
              {
                "name": "GenerateInitBundle",
                "in_type": "InitBundleGenRequest",
                "out_type": "InitBundleGenResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:cluster_service.proto",
      "def": {
        "enums": [
          {
            "name": "DeploymentFormat",
            "enum_fields": [
              {
                "name": "KUBECTL"
              },
              {
                "name": "HELM",
                "integer": 1
              },
              {
                "name": "HELM_VALUES",
                "integer": 2
              }
            ]
          },
          {
            "name": "LoadBalancerType",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "LOAD_BALANCER",
                "integer": 1
              },
              {
                "name": "NODE_PORT",
                "integer": 2
              },
              {
                "name": "ROUTE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DecommissionedClusterRetentionInfo",
            "fields": [
              {
                "id": 1,
                "name": "is_excluded",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "days_until_deletion",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ClusterResponse",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "storage.Cluster"
              },
              {
                "id": 2,
                "name": "cluster_retention_info",
                "type": "DecommissionedClusterRetentionInfo"
              }
            ]
          },
          {
            "name": "ClusterDefaultsResponse",
            "fields": [
              {
                "id": 1,
                "name": "main_image_repository",
                "type": "string"
              },
              {
                "id": 2,
                "name": "collector_image_repository",
                "type": "string"
              },
              {
                "id": 3,
                "name": "kernel_support_available",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ClustersList",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "storage.Cluster",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "cluster_id_to_retention_info",
                  "type": "DecommissionedClusterRetentionInfo"
                }
              }
            ]
          },
          {
            "name": "GetClustersRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "KernelSupportAvailableResponse",
            "fields": [
              {
                "id": 1,
                "name": "kernel_support_available",
                "type": "bool"
              }
            ],
            "options": [
              {
                "name": "deprecated",
                "value": "true"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ClustersService",
            "rpcs": [
              {
                "name": "GetClusters",
                "in_type": "GetClustersRequest",
                "out_type": "ClustersList"
              },
              {
                "name": "GetCluster",
                "in_type": "ResourceByID",
                "out_type": "ClusterResponse"
              },
              {
                "name": "PostCluster",
                "in_type": "storage.Cluster",
                "out_type": "ClusterResponse"
              },
              {
                "name": "PutCluster",
                "in_type": "storage.Cluster",
                "out_type": "ClusterResponse"
              },
              {
                "name": "DeleteCluster",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetKernelSupportAvailable",
                "in_type": "Empty",
                "out_type": "KernelSupportAvailableResponse"
              },
              {
                "name": "GetClusterDefaultValues",
                "in_type": "Empty",
                "out_type": "ClusterDefaultsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:common.proto",
      "def": {
        "messages": [
          {
            "name": "ResourceByID",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeleteByIDWithForce",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:compliance_management_service.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceRun.State",
            "enum_fields": [
              {
                "name": "INVALID"
              },
              {
                "name": "READY",
                "integer": 1
              },
              {
                "name": "STARTED",
                "integer": 2
              },
              {
                "name": "WAIT_FOR_DATA",
                "integer": 3
              },
              {
                "name": "EVALUTING_CHECKS",
                "integer": 4
              },
              {
                "name": "FINISHED",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceRunSelection",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetActiveComplianceRunsRequest",
            "fields": [
              {
                "id": 1,
                "name": "selection",
                "type": "ComplianceRunSelection"
              }
            ]
          },
          {
            "name": "GetActiveComplianceRunsResponse",
            "fields": [
              {
                "id": 1,
                "name": "active_runs",
                "type": "ComplianceRun",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComplianceRun",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "finish_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "state",
                "type": "State"
              },
              {
                "id": 8,
                "name": "error_message",
                "type": "string"
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "GetRecentComplianceRunsRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "since",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "GetRecentComplianceRunsResponse",
            "fields": [
              {
                "id": 1,
                "name": "compliance_runs",
                "type": "ComplianceRun",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TriggerComplianceRunRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "TriggerComplianceRunResponse",
            "fields": [
              {
                "id": 1,
                "name": "started_run",
                "type": "ComplianceRun"
              }
            ]
          },
          {
            "name": "TriggerComplianceRunsRequest",
            "fields": [
              {
                "id": 1,
                "name": "selection",
                "type": "ComplianceRunSelection"
              }
            ]
          },
          {
            "name": "TriggerComplianceRunsResponse",
            "fields": [
              {
                "id": 1,
                "name": "started_runs",
                "type": "ComplianceRun",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetComplianceRunStatusesRequest",
            "fields": [
              {
                "id": 1,
                "name": "run_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetComplianceRunStatusesResponse",
            "fields": [
              {
                "id": 1,
                "name": "invalid_run_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "runs",
                "type": "ComplianceRun",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceManagementService",
            "rpcs": [
              {
                "name": "GetRecentRuns",
                "in_type": "GetRecentComplianceRunsRequest",
                "out_type": "GetRecentComplianceRunsResponse"
              },
              {
                "name": "TriggerRuns",
                "in_type": "TriggerComplianceRunsRequest",
                "out_type": "TriggerComplianceRunsResponse"
              },
              {
                "name": "GetRunStatuses",
                "in_type": "GetComplianceRunStatusesRequest",
                "out_type": "GetComplianceRunStatusesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:compliance_service.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceStandardMetadata.Scope",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "CLUSTER",
                "integer": 1
              },
              {
                "name": "NAMESPACE",
                "integer": 2
              },
              {
                "name": "DEPLOYMENT",
                "integer": 3
              },
              {
                "name": "NODE",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceAggregationRequest",
            "fields": [
              {
                "id": 1,
                "name": "group_by",
                "type": "storage.ComplianceAggregation.Scope",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "unit",
                "type": "storage.ComplianceAggregation.Scope"
              },
              {
                "id": 3,
                "name": "where",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "ComplianceStandardMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "num_implemented_checks",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "scopes",
                "type": "Scope",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "dynamic",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ComplianceControlGroup",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "num_implemented_checks",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ComplianceControl",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "group_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "description",
                "type": "string"
              },
              {
                "id": 6,
                "name": "implemented",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "interpretation_text",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceStandard",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "ComplianceStandardMetadata"
              },
              {
                "id": 2,
                "name": "groups",
                "type": "ComplianceControlGroup",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "controls",
                "type": "ComplianceControl",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetComplianceStandardResponse",
            "fields": [
              {
                "id": 1,
                "name": "standard",
                "type": "ComplianceStandard"
              }
            ]
          },
          {
            "name": "GetComplianceStandardsResponse",
            "fields": [
              {
                "id": 1,
                "name": "standards",
                "type": "ComplianceStandardMetadata",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetComplianceRunResultsRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "run_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetComplianceRunResultsResponse",
            "fields": [
              {
                "id": 1,
                "name": "results",
                "type": "storage.ComplianceRunResults"
              },
              {
                "id": 2,
                "name": "failed_runs",
                "type": "storage.ComplianceRunMetadata",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceService",
            "rpcs": [
              {
                "name": "GetStandards",
                "in_type": "Empty",
                "out_type": "GetComplianceStandardsResponse"
              },
              {
                "name": "GetStandard",
                "in_type": "ResourceByID",
                "out_type": "GetComplianceStandardResponse"
              },
              {
                "name": "GetRunResults",
                "in_type": "GetComplianceRunResultsRequest",
                "out_type": "GetComplianceRunResultsResponse"
              },
              {
                "name": "GetAggregatedResults",
                "in_type": "ComplianceAggregationRequest",
                "out_type": "storage.ComplianceAggregation.Response"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/compliance.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:config_service.proto",
      "def": {
        "messages": [
          {
            "name": "PutConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.Config"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ConfigService",
            "rpcs": [
              {
                "name": "GetPublicConfig",
                "in_type": "Empty",
                "out_type": "storage.PublicConfig"
              },
              {
                "name": "GetPrivateConfig",
                "in_type": "Empty",
                "out_type": "storage.PrivateConfig"
              },
              {
                "name": "GetConfig",
                "in_type": "Empty",
                "out_type": "storage.Config"
              },
              {
                "name": "PutConfig",
                "in_type": "PutConfigRequest",
                "out_type": "storage.Config"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/config.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:credential_expiry_service.proto",
      "def": {
        "enums": [
          {
            "name": "GetCertExpiry.Component",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "CENTRAL",
                "integer": 1
              },
              {
                "name": "SCANNER",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetCertExpiry",
            "messages": [
              {
                "name": "Request",
                "fields": [
                  {
                    "id": 1,
                    "name": "component",
                    "type": "Component"
                  }
                ]
              },
              {
                "name": "Response",
                "fields": [
                  {
                    "id": 1,
                    "name": "expiry",
                    "type": "google.protobuf.Timestamp"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CredentialExpiryService",
            "rpcs": [
              {
                "name": "GetCertExpiry",
                "in_type": "GetCertExpiry.Request",
                "out_type": "GetCertExpiry.Response"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:cve_service.proto",
      "def": {
        "messages": [
          {
            "name": "SuppressCVERequest",
            "fields": [
              {
                "id": 1,
                "name": "cves",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "duration",
                "type": "google.protobuf.Duration"
              }
            ],
            "reserved_ids": [
              2
            ]
          },
          {
            "name": "UnsuppressCVERequest",
            "fields": [
              {
                "id": 1,
                "name": "cves",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CVEService",
            "rpcs": [
              {
                "name": "SuppressCVEs",
                "in_type": "SuppressCVERequest",
                "out_type": "Empty"
              },
              {
                "name": "UnsuppressCVEs",
                "in_type": "UnsuppressCVERequest",
                "out_type": "Empty"
              }
            ]
          },
          {
            "name": "ImageCVEService",
            "rpcs": [
              {
                "name": "SuppressCVEs",
                "in_type": "SuppressCVERequest",
                "out_type": "Empty"
              },
              {
                "name": "UnsuppressCVEs",
                "in_type": "UnsuppressCVERequest",
                "out_type": "Empty"
              }
            ]
          },
          {
            "name": "NodeCVEService",
            "rpcs": [
              {
                "name": "SuppressCVEs",
                "in_type": "SuppressCVERequest",
                "out_type": "Empty"
              },
              {
                "name": "UnsuppressCVEs",
                "in_type": "UnsuppressCVERequest",
                "out_type": "Empty"
              }
            ]
          },
          {
            "name": "ClusterCVEService",
            "rpcs": [
              {
                "name": "SuppressCVEs",
                "in_type": "SuppressCVERequest",
                "out_type": "Empty"
              },
              {
                "name": "UnsuppressCVEs",
                "in_type": "UnsuppressCVERequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:db_service.proto",
      "def": {
        "enums": [
          {
            "name": "DBRestoreProcessStatus.State",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "NOT_STARTED",
                "integer": 1
              },
              {
                "name": "IN_PROGRESS",
                "integer": 2
              },
              {
                "name": "PAUSED",
                "integer": 3
              },
              {
                "name": "COMPLETED",
                "integer": 4
              }
            ]
          },
          {
            "name": "DBExportManifest.EncodingType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "UNCOMPREESSED",
                "integer": 1
              },
              {
                "name": "DEFLATED",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DBRestoreRequestHeader",
            "fields": [
              {
                "id": 1,
                "name": "format_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "manifest",
                "type": "DBExportManifest"
              },
              {
                "id": 3,
                "name": "local_file",
                "type": "LocalFileInfo"
              }
            ],
            "messages": [
              {
                "name": "LocalFileInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "bytes_size",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "DBRestoreProcessMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "header",
                "type": "DBRestoreRequestHeader"
              },
              {
                "id": 3,
                "name": "start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "initiating_user_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "DBRestoreProcessStatus",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "DBRestoreProcessMetadata"
              },
              {
                "id": 2,
                "name": "attempt_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "state",
                "type": "State"
              },
              {
                "id": 4,
                "name": "resume_info",
                "type": "ResumeInfo"
              },
              {
                "id": 5,
                "name": "error",
                "type": "string"
              },
              {
                "id": 6,
                "name": "bytes_read",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "files_processed",
                "type": "int64"
              }
            ],
            "messages": [
              {
                "name": "ResumeInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "pos",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "DBExportManifest",
            "fields": [
              {
                "id": 1,
                "name": "files",
                "type": "File",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "File",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "encoding",
                    "type": "EncodingType"
                  },
                  {
                    "id": 3,
                    "name": "encoded_size",
                    "type": "int64"
                  },
                  {
                    "id": 4,
                    "name": "decoded_size",
                    "type": "int64"
                  },
                  {
                    "id": 5,
                    "name": "decoded_crc32",
                    "type": "fixed32"
                  }
                ]
              }
            ]
          },
          {
            "name": "DBExportFormat",
            "fields": [
              {
                "id": 1,
                "name": "format_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "files",
                "type": "File",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "File",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "optional",
                    "type": "bool"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetDBExportCapabilitiesResponse",
            "fields": [
              {
                "id": 1,
                "name": "formats",
                "type": "DBExportFormat",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "supported_encodings",
                "type": "DBExportManifest.EncodingType",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetActiveDBRestoreProcessResponse",
            "fields": [
              {
                "id": 1,
                "name": "active_status",
                "type": "DBRestoreProcessStatus"
              }
            ]
          },
          {
            "name": "InterruptDBRestoreProcessRequest",
            "fields": [
              {
                "id": 1,
                "name": "process_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "attempt_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "InterruptDBRestoreProcessResponse",
            "fields": [
              {
                "id": 1,
                "name": "resume_info",
                "type": "DBRestoreProcessStatus.ResumeInfo"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DBService",
            "rpcs": [
              {
                "name": "GetExportCapabilities",
                "in_type": "Empty",
                "out_type": "GetDBExportCapabilitiesResponse"
              },
              {
                "name": "GetActiveRestoreProcess",
                "in_type": "Empty",
                "out_type": "GetActiveDBRestoreProcessResponse"
              },
              {
                "name": "InterruptRestoreProcess",
                "in_type": "InterruptDBRestoreProcessRequest",
                "out_type": "InterruptDBRestoreProcessResponse"
              },
              {
                "name": "CancelRestoreProcess",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:debug_service.proto",
      "def": {
        "enums": [
          {
            "name": "Response.Status",
            "enum_fields": [
              {
                "name": "UNKNOWN_STATUS"
              },
              {
                "name": "SUCCESS",
                "integer": 1
              },
              {
                "name": "FAILURE",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetLogLevelRequest",
            "fields": [
              {
                "id": 1,
                "name": "modules",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LogLevelRequest",
            "fields": [
              {
                "id": 1,
                "name": "level",
                "type": "string"
              },
              {
                "id": 2,
                "name": "modules",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ModuleLevel",
            "fields": [
              {
                "id": 1,
                "name": "module",
                "type": "string"
              },
              {
                "id": 2,
                "name": "level",
                "type": "string"
              }
            ]
          },
          {
            "name": "LogLevelResponse",
            "fields": [
              {
                "id": 1,
                "name": "level",
                "type": "string"
              },
              {
                "id": 2,
                "name": "module_levels",
                "type": "ModuleLevel",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AuthorizationTraceResponse",
            "fields": [
              {
                "id": 1,
                "name": "arrived_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "processed_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "request",
                "type": "Request"
              },
              {
                "id": 4,
                "name": "response",
                "type": "Response"
              },
              {
                "id": 5,
                "name": "user",
                "type": "User"
              },
              {
                "id": 6,
                "name": "trace",
                "type": "Trace"
              }
            ],
            "messages": [
              {
                "name": "Request",
                "fields": [
                  {
                    "id": 1,
                    "name": "endpoint",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "method",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Response",
                "fields": [
                  {
                    "id": 1,
                    "name": "status",
                    "type": "Status"
                  },
                  {
                    "id": 2,
                    "name": "error",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "User",
                "fields": [
                  {
                    "id": 1,
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "friendly_name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "roles",
                    "type": "Role",
                    "is_repeated": true
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "aggregated_permissions",
                      "type": "storage.Access"
                    }
                  }
                ],
                "messages": [
                  {
                    "name": "Role",
                    "fields": [
                      {
                        "id": 1,
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "access_scope_name",
                        "type": "string"
                      },
                      {
                        "id": 4,
                        "name": "access_scope",
                        "type": "storage.SimpleAccessScope.Rules"
                      }
                    ],
                    "maps": [
                      {
                        "key_type": "string",
                        "field": {
                          "id": 2,
                          "name": "permissions",
                          "type": "storage.Access"
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Trace",
                "fields": [
                  {
                    "id": 1,
                    "name": "scope_checker_type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "built_in",
                    "type": "BuiltInAuthorizer"
                  }
                ],
                "messages": [
                  {
                    "name": "BuiltInAuthorizer",
                    "fields": [
                      {
                        "id": 1,
                        "name": "clusters_total_num",
                        "type": "int32"
                      },
                      {
                        "id": 2,
                        "name": "namespaces_total_num",
                        "type": "int32"
                      }
                    ],
                    "maps": [
                      {
                        "key_type": "string",
                        "field": {
                          "id": 3,
                          "name": "denied_authz_decisions",
                          "type": "int32"
                        }
                      },
                      {
                        "key_type": "string",
                        "field": {
                          "id": 4,
                          "name": "allowed_authz_decisions",
                          "type": "int32"
                        }
                      },
                      {
                        "key_type": "string",
                        "field": {
                          "id": 5,
                          "name": "effective_access_scopes",
                          "type": "string"
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DebugService",
            "rpcs": [
              {
                "name": "GetLogLevel",
                "in_type": "GetLogLevelRequest",
                "out_type": "LogLevelResponse"
              },
              {
                "name": "SetLogLevel",
                "in_type": "LogLevelRequest",
                "out_type": "google.protobuf.Empty"
              },
              {
                "name": "StreamAuthzTraces",
                "in_type": "v1.Empty",
                "out_type": "AuthorizationTraceResponse",
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/protobuf/empty.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/role.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:deployment_service.proto",
      "def": {
        "messages": [
          {
            "name": "DeploymentLabelsResponse",
            "fields": [
              {
                "id": 2,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "labels",
                  "type": "LabelValues"
                }
              }
            ],
            "messages": [
              {
                "name": "LabelValues",
                "fields": [
                  {
                    "id": 1,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ListDeploymentsResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployments",
                "type": "storage.ListDeployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountDeploymentsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ListDeploymentsWithProcessInfoResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployments",
                "type": "DeploymentWithProcessInfo",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "DeploymentWithProcessInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "deployment",
                    "type": "storage.ListDeployment"
                  },
                  {
                    "id": 3,
                    "name": "baseline_statuses",
                    "type": "storage.ContainerNameAndBaselineStatus",
                    "is_repeated": true
                  }
                ],
                "reserved_ids": [
                  2
                ]
              }
            ]
          },
          {
            "name": "GetDeploymentWithRiskResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 2,
                "name": "risk",
                "type": "storage.Risk"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DeploymentService",
            "rpcs": [
              {
                "name": "GetDeployment",
                "in_type": "ResourceByID",
                "out_type": "storage.Deployment"
              },
              {
                "name": "GetDeploymentWithRisk",
                "in_type": "ResourceByID",
                "out_type": "GetDeploymentWithRiskResponse"
              },
              {
                "name": "CountDeployments",
                "in_type": "RawQuery",
                "out_type": "CountDeploymentsResponse"
              },
              {
                "name": "ListDeployments",
                "in_type": "RawQuery",
                "out_type": "ListDeploymentsResponse"
              },
              {
                "name": "ListDeploymentsWithProcessInfo",
                "in_type": "RawQuery",
                "out_type": "ListDeploymentsWithProcessInfoResponse"
              },
              {
                "name": "GetLabels",
                "in_type": "Empty",
                "out_type": "DeploymentLabelsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/risk.proto"
          },
          {
            "path": "storage/process_baseline.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:detection_service.proto",
      "def": {
        "messages": [
          {
            "name": "BuildDetectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.ContainerImage"
              },
              {
                "id": 3,
                "name": "image_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "no_external_metadata",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "send_notifications",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "force",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "policy_categories",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BuildDetectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "alerts",
                "type": "storage.Alert",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeployDetectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 2,
                "name": "no_external_metadata",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "enforcement_only",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeployYAMLDetectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "yaml",
                "type": "string"
              },
              {
                "id": 2,
                "name": "no_external_metadata",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "enforcement_only",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "force",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "policy_categories",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeployDetectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "runs",
                "type": "Run",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "ignored_object_refs",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Run",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "alerts",
                    "type": "storage.Alert",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DetectionService",
            "rpcs": [
              {
                "name": "DetectBuildTime",
                "in_type": "BuildDetectionRequest",
                "out_type": "BuildDetectionResponse"
              },
              {
                "name": "DetectDeployTime",
                "in_type": "DeployDetectionRequest",
                "out_type": "DeployDetectionResponse"
              },
              {
                "name": "DetectDeployTimeFromYAML",
                "in_type": "DeployYAMLDetectionRequest",
                "out_type": "DeployDetectionResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/alert.proto"
          },
          {
            "path": "storage/deployment.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:empty.proto",
      "def": {
        "messages": [
          {
            "name": "Empty"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:feature_flag_service.proto",
      "def": {
        "messages": [
          {
            "name": "FeatureFlag",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "env_var",
                "type": "string"
              },
              {
                "id": 3,
                "name": "enabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetFeatureFlagsResponse",
            "fields": [
              {
                "id": 1,
                "name": "feature_flags",
                "type": "FeatureFlag",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "FeatureFlagService",
            "rpcs": [
              {
                "name": "GetFeatureFlags",
                "in_type": "Empty",
                "out_type": "GetFeatureFlagsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:group_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetGroupsRequest",
            "fields": [
              {
                "id": 1,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetGroupsResponse",
            "fields": [
              {
                "id": 1,
                "name": "groups",
                "type": "storage.Group",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GroupBatchUpdateRequest",
            "fields": [
              {
                "id": 1,
                "name": "previous_groups",
                "type": "storage.Group",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "required_groups",
                "type": "storage.Group",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "force",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteGroupRequest",
            "fields": [
              {
                "id": 1,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "force",
                "type": "bool"
              }
            ]
          },
          {
            "name": "UpdateGroupRequest",
            "fields": [
              {
                "id": 1,
                "name": "group",
                "type": "storage.Group"
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "GroupService",
            "rpcs": [
              {
                "name": "GetGroups",
                "in_type": "GetGroupsRequest",
                "out_type": "GetGroupsResponse"
              },
              {
                "name": "GetGroup",
                "in_type": "storage.GroupProperties",
                "out_type": "storage.Group"
              },
              {
                "name": "BatchUpdate",
                "in_type": "GroupBatchUpdateRequest",
                "out_type": "Empty"
              },
              {
                "name": "CreateGroup",
                "in_type": "storage.Group",
                "out_type": "Empty"
              },
              {
                "name": "UpdateGroup",
                "in_type": "UpdateGroupRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeleteGroup",
                "in_type": "DeleteGroupRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/group.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:image_integration_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetImageIntegrationsRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetImageIntegrationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "integrations",
                "type": "storage.ImageIntegration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateImageIntegrationRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.ImageIntegration"
              },
              {
                "id": 2,
                "name": "updatePassword",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImageIntegrationService",
            "rpcs": [
              {
                "name": "GetImageIntegration",
                "in_type": "ResourceByID",
                "out_type": "storage.ImageIntegration"
              },
              {
                "name": "GetImageIntegrations",
                "in_type": "GetImageIntegrationsRequest",
                "out_type": "GetImageIntegrationsResponse"
              },
              {
                "name": "PostImageIntegration",
                "in_type": "storage.ImageIntegration",
                "out_type": "storage.ImageIntegration"
              },
              {
                "name": "PutImageIntegration",
                "in_type": "storage.ImageIntegration",
                "out_type": "Empty"
              },
              {
                "name": "TestImageIntegration",
                "in_type": "storage.ImageIntegration",
                "out_type": "Empty"
              },
              {
                "name": "DeleteImageIntegration",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "UpdateImageIntegration",
                "in_type": "UpdateImageIntegrationRequest",
                "out_type": "Empty"
              },
              {
                "name": "TestUpdatedImageIntegration",
                "in_type": "UpdateImageIntegrationRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/image_integration.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:image_service.proto",
      "def": {
        "enums": [
          {
            "name": "WatchImageResponse.ErrorType",
            "enum_fields": [
              {
                "name": "NO_ERROR"
              },
              {
                "name": "INVALID_IMAGE_NAME",
                "integer": 1
              },
              {
                "name": "NO_VALID_INTEGRATION",
                "integer": 2
              },
              {
                "name": "SCAN_FAILED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "include_snoozed",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "strip_description",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ListImagesResponse",
            "fields": [
              {
                "id": 1,
                "name": "images",
                "type": "storage.ListImage",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountImagesResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ScanImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "include_snoozed",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ScanImageInternalRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.ContainerImage"
              },
              {
                "id": 3,
                "name": "cached_only",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "source",
                "type": "Source"
              }
            ],
            "reserved_ids": [
              2
            ],
            "messages": [
              {
                "name": "Source",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "image_pull_secrets",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ScanImageInternalResponse",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.Image"
              }
            ]
          },
          {
            "name": "GetImageVulnerabilitiesInternalRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image_name",
                "type": "storage.ImageName"
              },
              {
                "id": 3,
                "name": "metadata",
                "type": "storage.ImageMetadata"
              },
              {
                "id": 6,
                "name": "is_cluster_local",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "components",
                "type": "scannerV1.Components"
              },
              {
                "id": 5,
                "name": "notes",
                "type": "scannerV1.Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EnrichLocalImageInternalRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image_name",
                "type": "storage.ImageName"
              },
              {
                "id": 3,
                "name": "metadata",
                "type": "storage.ImageMetadata"
              },
              {
                "id": 4,
                "name": "image_signature",
                "type": "storage.ImageSignature"
              },
              {
                "id": 5,
                "name": "components",
                "type": "scannerV1.Components"
              },
              {
                "id": 6,
                "name": "notes",
                "type": "scannerV1.Note",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "image_notes",
                "type": "storage.Image.Note",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeleteImagesRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              },
              {
                "id": 2,
                "name": "confirm",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteImagesResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_deleted",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "dry_run",
                "type": "bool"
              }
            ]
          },
          {
            "name": "WatchImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "WatchImageResponse",
            "fields": [
              {
                "id": 1,
                "name": "normalized_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "error_type",
                "type": "ErrorType"
              },
              {
                "id": 3,
                "name": "error_message",
                "type": "string"
              }
            ]
          },
          {
            "name": "UnwatchImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetWatchedImagesResponse",
            "fields": [
              {
                "id": 1,
                "name": "watched_images",
                "type": "storage.WatchedImage",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScanImageInternalResponseDetails",
            "messages": [
              {
                "name": "TooManyParallelScans"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImageService",
            "rpcs": [
              {
                "name": "GetImage",
                "in_type": "GetImageRequest",
                "out_type": "storage.Image"
              },
              {
                "name": "CountImages",
                "in_type": "RawQuery",
                "out_type": "CountImagesResponse"
              },
              {
                "name": "ListImages",
                "in_type": "RawQuery",
                "out_type": "ListImagesResponse"
              },
              {
                "name": "ScanImage",
                "in_type": "ScanImageRequest",
                "out_type": "storage.Image"
              },
              {
                "name": "ScanImageInternal",
                "in_type": "ScanImageInternalRequest",
                "out_type": "ScanImageInternalResponse"
              },
              {
                "name": "GetImageVulnerabilitiesInternal",
                "in_type": "GetImageVulnerabilitiesInternalRequest",
                "out_type": "ScanImageInternalResponse"
              },
              {
                "name": "EnrichLocalImageInternal",
                "in_type": "EnrichLocalImageInternalRequest",
                "out_type": "ScanImageInternalResponse"
              },
              {
                "name": "InvalidateScanAndRegistryCaches",
                "in_type": "Empty",
                "out_type": "Empty"
              },
              {
                "name": "DeleteImages",
                "in_type": "DeleteImagesRequest",
                "out_type": "DeleteImagesResponse"
              },
              {
                "name": "WatchImage",
                "in_type": "WatchImageRequest",
                "out_type": "WatchImageResponse"
              },
              {
                "name": "UnwatchImage",
                "in_type": "UnwatchImageRequest",
                "out_type": "Empty"
              },
              {
                "name": "GetWatchedImages",
                "in_type": "Empty",
                "out_type": "GetWatchedImagesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "scanner/api/v1/component.proto"
          },
          {
            "path": "scanner/api/v1/note.proto"
          },
          {
            "path": "storage/image.proto"
          },
          {
            "path": "storage/deployment.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:integration_config.proto",
      "def": {
        "messages": [
          {
            "name": "IntegrationAsConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "external_backup",
                "type": "storage.ExternalBackup"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/external_backup.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:integration_health_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetIntegrationHealthResponse",
            "fields": [
              {
                "id": 1,
                "name": "integrationHealth",
                "type": "storage.IntegrationHealth",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "VulnDefinitionsInfo",
            "fields": [
              {
                "id": 1,
                "name": "last_updated_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "IntegrationHealthService",
            "rpcs": [
              {
                "name": "GetImageIntegrations",
                "in_type": "Empty",
                "out_type": "GetIntegrationHealthResponse"
              },
              {
                "name": "GetNotifiers",
                "in_type": "Empty",
                "out_type": "GetIntegrationHealthResponse"
              },
              {
                "name": "GetBackupPlugins",
                "in_type": "Empty",
                "out_type": "GetIntegrationHealthResponse"
              },
              {
                "name": "GetDeclarativeConfigs",
                "in_type": "Empty",
                "out_type": "GetIntegrationHealthResponse"
              },
              {
                "name": "GetVulnDefinitionsInfo",
                "in_type": "Empty",
                "out_type": "VulnDefinitionsInfo"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/integration_health.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:license_service.proto",
      "def": {
        "enums": [
          {
            "name": "LicenseInfo.Status",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "VALID",
                "integer": 1
              },
              {
                "name": "REVOKED",
                "integer": 2
              },
              {
                "name": "NOT_YET_VALID",
                "integer": 3
              },
              {
                "name": "EXPIRED",
                "integer": 4
              },
              {
                "name": "OTHER",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "LicenseInfo",
            "fields": [
              {
                "id": 1,
                "name": "license",
                "type": "license.License"
              },
              {
                "id": 2,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 3,
                "name": "status_reason",
                "type": "string"
              },
              {
                "id": 4,
                "name": "active",
                "type": "bool"
              }
            ]
          },
          {
            "name": "AddLicenseRequest",
            "fields": [
              {
                "id": 1,
                "name": "license_key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "activate",
                "type": "bool"
              }
            ]
          },
          {
            "name": "AddLicenseResponse",
            "fields": [
              {
                "id": 1,
                "name": "license",
                "type": "LicenseInfo"
              },
              {
                "id": 2,
                "name": "accepted",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetLicensesRequest",
            "fields": [
              {
                "id": 1,
                "name": "active",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "statuses",
                "type": "LicenseInfo.Status",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetLicensesResponse",
            "fields": [
              {
                "id": 1,
                "name": "licenses",
                "type": "LicenseInfo",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetActiveLicenseExpirationResponse",
            "fields": [
              {
                "id": 1,
                "name": "expiration_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "GetActiveLicenseKeyResponse",
            "fields": [
              {
                "id": 1,
                "name": "license_key",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "LicenseService",
            "rpcs": [
              {
                "name": "GetLicenses",
                "in_type": "GetLicensesRequest",
                "out_type": "GetLicensesResponse"
              },
              {
                "name": "AddLicense",
                "in_type": "AddLicenseRequest",
                "out_type": "AddLicenseResponse"
              },
              {
                "name": "GetActiveLicenseExpiration",
                "in_type": "Empty",
                "out_type": "GetActiveLicenseExpirationResponse"
              },
              {
                "name": "GetActiveLicenseKey",
                "in_type": "Empty",
                "out_type": "GetActiveLicenseKeyResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "shared/license/license.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:metadata_service.proto",
      "def": {
        "enums": [
          {
            "name": "Metadata.LicenseStatus",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "INVALID",
                "integer": 1
              },
              {
                "name": "EXPIRED",
                "integer": 2
              },
              {
                "name": "RESTARTING",
                "integer": 3
              },
              {
                "name": "VALID",
                "integer": 4
              }
            ]
          },
          {
            "name": "DatabaseStatus.DatabaseType",
            "enum_fields": [
              {
                "name": "Hidden"
              },
              {
                "name": "RocksDB",
                "integer": 1
              },
              {
                "name": "PostgresDB",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Metadata",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "build_flavor",
                "type": "string"
              },
              {
                "id": 3,
                "name": "release_build",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "license_status",
                "type": "LicenseStatus"
              }
            ]
          },
          {
            "name": "TrustInfo",
            "fields": [
              {
                "id": 1,
                "name": "cert_chain",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "sensor_challenge",
                "type": "string"
              },
              {
                "id": 3,
                "name": "central_challenge",
                "type": "string"
              },
              {
                "id": 4,
                "name": "additional_cas",
                "type": "bytes",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TLSChallengeResponse",
            "fields": [
              {
                "id": 1,
                "name": "trust_info_serialized",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "signature",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "TLSChallengeRequest",
            "fields": [
              {
                "id": 1,
                "name": "challenge_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "DatabaseStatus",
            "fields": [
              {
                "id": 1,
                "name": "database_available",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "database_type",
                "type": "DatabaseType"
              },
              {
                "id": 3,
                "name": "database_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "DatabaseBackupStatus",
            "fields": [
              {
                "id": 1,
                "name": "backup_info",
                "type": "storage.BackupInfo"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "MetadataService",
            "rpcs": [
              {
                "name": "GetMetadata",
                "in_type": "Empty",
                "out_type": "Metadata"
              },
              {
                "name": "TLSChallenge",
                "in_type": "TLSChallengeRequest",
                "out_type": "TLSChallengeResponse"
              },
              {
                "name": "GetDatabaseStatus",
                "in_type": "Empty",
                "out_type": "DatabaseStatus"
              },
              {
                "name": "GetDatabaseBackupStatus",
                "in_type": "Empty",
                "out_type": "DatabaseBackupStatus"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/system_info.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:mitre_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListMitreAttackVectorsResponse",
            "fields": [
              {
                "id": 1,
                "name": "mitre_attack_vectors",
                "type": "storage.MitreAttackVector",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetMitreVectorResponse",
            "fields": [
              {
                "id": 1,
                "name": "mitre_attack_vector",
                "type": "storage.MitreAttackVector"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "MitreAttackService",
            "rpcs": [
              {
                "name": "ListMitreAttackVectors",
                "in_type": "Empty",
                "out_type": "ListMitreAttackVectorsResponse"
              },
              {
                "name": "GetMitreAttackVector",
                "in_type": "ResourceByID",
                "out_type": "GetMitreVectorResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/mitre.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:namespace_service.proto",
      "def": {
        "messages": [
          {
            "name": "Namespace",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "storage.NamespaceMetadata"
              },
              {
                "id": 2,
                "name": "num_deployments",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "num_secrets",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "num_network_policies",
                "type": "int32"
              }
            ]
          },
          {
            "name": "GetNamespacesResponse",
            "fields": [
              {
                "id": 1,
                "name": "namespaces",
                "type": "Namespace",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNamespaceRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NamespaceService",
            "rpcs": [
              {
                "name": "GetNamespaces",
                "in_type": "GetNamespaceRequest",
                "out_type": "GetNamespacesResponse"
              },
              {
                "name": "GetNamespace",
                "in_type": "ResourceByID",
                "out_type": "Namespace"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "storage/namespace_metadata.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:network_baseline_service.proto",
      "def": {
        "enums": [
          {
            "name": "NetworkBaselinePeerStatus.Status",
            "enum_fields": [
              {
                "name": "BASELINE"
              },
              {
                "name": "ANOMALOUS",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "NetworkBaselinePeerEntity",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "storage.NetworkEntityInfo.Type"
              }
            ]
          },
          {
            "name": "NetworkBaselineStatusPeer",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "NetworkBaselinePeerEntity"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "storage.L4Protocol"
              },
              {
                "id": 4,
                "name": "ingress",
                "type": "bool"
              }
            ]
          },
          {
            "name": "NetworkBaselinePeerStatus",
            "fields": [
              {
                "id": 1,
                "name": "peer",
                "type": "NetworkBaselineStatusPeer"
              },
              {
                "id": 2,
                "name": "status",
                "type": "Status"
              }
            ]
          },
          {
            "name": "NetworkBaselineStatusRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "peers",
                "type": "NetworkBaselineStatusPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkBaselineStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "statuses",
                "type": "NetworkBaselinePeerStatus",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ModifyBaselineStatusForPeersRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "peers",
                "type": "NetworkBaselinePeerStatus",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NetworkBaselineService",
            "rpcs": [
              {
                "name": "GetNetworkBaselineStatusForFlows",
                "in_type": "NetworkBaselineStatusRequest",
                "out_type": "NetworkBaselineStatusResponse"
              },
              {
                "name": "GetNetworkBaseline",
                "in_type": "ResourceByID",
                "out_type": "storage.NetworkBaseline"
              },
              {
                "name": "ModifyBaselineStatusForPeers",
                "in_type": "ModifyBaselineStatusForPeersRequest",
                "out_type": "Empty"
              },
              {
                "name": "LockNetworkBaseline",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "UnlockNetworkBaseline",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/network_baseline.proto"
          },
          {
            "path": "storage/network_flow.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:network_graph_service.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkGraphScope",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkEdgeProperties",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "storage.L4Protocol"
              },
              {
                "id": 3,
                "name": "last_active_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NetworkEdgePropertiesBundle",
            "fields": [
              {
                "id": 1,
                "name": "properties",
                "type": "NetworkEdgeProperties",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkNode",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "storage.NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "internet_access",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "policy_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "non_isolated_ingress",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "non_isolated_egress",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "query_match",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "int32",
                "field": {
                  "id": 4,
                  "name": "out_edges",
                  "type": "NetworkEdgePropertiesBundle"
                }
              }
            ]
          },
          {
            "name": "NetworkGraphRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "since",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "include_ports",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "scope",
                "type": "NetworkGraphScope"
              },
              {
                "id": 6,
                "name": "include_policies",
                "type": "bool"
              }
            ]
          },
          {
            "name": "NetworkGraph",
            "fields": [
              {
                "id": 1,
                "name": "epoch",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "nodes",
                "type": "NetworkNode",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CreateNetworkEntityRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "entity",
                "type": "storage.NetworkEntityInfo.ExternalSource"
              }
            ]
          },
          {
            "name": "PatchNetworkEntityRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetExternalNetworkEntitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetExternalNetworkEntitiesResponse",
            "fields": [
              {
                "id": 1,
                "name": "entities",
                "type": "storage.NetworkEntity",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PutNetworkGraphConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.NetworkGraphConfig"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NetworkGraphService",
            "rpcs": [
              {
                "name": "GetNetworkGraph",
                "in_type": "NetworkGraphRequest",
                "out_type": "NetworkGraph"
              },
              {
                "name": "GetExternalNetworkEntities",
                "in_type": "GetExternalNetworkEntitiesRequest",
                "out_type": "GetExternalNetworkEntitiesResponse"
              },
              {
                "name": "CreateExternalNetworkEntity",
                "in_type": "CreateNetworkEntityRequest",
                "out_type": "storage.NetworkEntity"
              },
              {
                "name": "PatchExternalNetworkEntity",
                "in_type": "PatchNetworkEntityRequest",
                "out_type": "storage.NetworkEntity"
              },
              {
                "name": "DeleteExternalNetworkEntity",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetNetworkGraphConfig",
                "in_type": "Empty",
                "out_type": "storage.NetworkGraphConfig"
              },
              {
                "name": "PutNetworkGraphConfig",
                "in_type": "PutNetworkGraphConfigRequest",
                "out_type": "storage.NetworkGraphConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/network_graph_config.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:network_policy_service.proto",
      "def": {
        "enums": [
          {
            "name": "NetworkPolicyInSimulation.Status",
            "enum_fields": [
              {
                "name": "INVALID"
              },
              {
                "name": "UNCHANGED",
                "integer": 1
              },
              {
                "name": "MODIFIED",
                "integer": 2
              },
              {
                "name": "ADDED",
                "integer": 3
              },
              {
                "name": "DELETED",
                "integer": 4
              }
            ]
          },
          {
            "name": "GenerateNetworkPoliciesRequest.DeleteExistingPoliciesMode",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "NONE",
                "integer": 1
              },
              {
                "name": "GENERATED_ONLY",
                "integer": 2
              },
              {
                "name": "ALL",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetNetworkPoliciesRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "deployment_query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "network_policies",
                "type": "storage.NetworkPolicy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SendNetworkPolicyYamlRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "notifier_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetNetworkGraphRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "include_ports",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "scope",
                "type": "NetworkGraphScope"
              }
            ]
          },
          {
            "name": "SimulateNetworkGraphRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              },
              {
                "id": 4,
                "name": "include_ports",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "include_node_diff",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "scope",
                "type": "NetworkGraphScope"
              }
            ]
          },
          {
            "name": "ApplyNetworkPolicyYamlRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetUndoModificationRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetUndoModificationResponse",
            "fields": [
              {
                "id": 1,
                "name": "undo_record",
                "type": "storage.NetworkPolicyApplicationUndoRecord"
              }
            ]
          },
          {
            "name": "NetworkPolicyInSimulation",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "storage.NetworkPolicy"
              },
              {
                "id": 2,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 3,
                "name": "old_policy",
                "type": "storage.NetworkPolicy"
              }
            ]
          },
          {
            "name": "NetworkNodeDiff",
            "fields": [
              {
                "id": 1,
                "name": "policy_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "non_isolated_ingress",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "non_isolated_egress",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "int32",
                "field": {
                  "id": 2,
                  "name": "DEPRECATED_out_edges",
                  "type": "NetworkEdgePropertiesBundle"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "out_edges",
                  "type": "NetworkEdgePropertiesBundle"
                }
              }
            ]
          },
          {
            "name": "NetworkGraphDiff",
            "maps": [
              {
                "key_type": "int32",
                "field": {
                  "id": 1,
                  "name": "DEPRECATED_node_diffs",
                  "type": "NetworkNodeDiff"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "node_diffs",
                  "type": "NetworkNodeDiff"
                }
              }
            ]
          },
          {
            "name": "SimulateNetworkGraphResponse",
            "fields": [
              {
                "id": 1,
                "name": "simulated_graph",
                "type": "NetworkGraph"
              },
              {
                "id": 2,
                "name": "policies",
                "type": "NetworkPolicyInSimulation",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "added",
                "type": "NetworkGraphDiff"
              },
              {
                "id": 4,
                "name": "removed",
                "type": "NetworkGraphDiff"
              }
            ]
          },
          {
            "name": "GetNetworkGraphEpochRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkGraphEpoch",
            "fields": [
              {
                "id": 1,
                "name": "epoch",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "GenerateNetworkPoliciesRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "delete_existing",
                "type": "DeleteExistingPoliciesMode"
              },
              {
                "id": 4,
                "name": "network_data_since",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "include_ports",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GenerateNetworkPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetBaselineGeneratedPolicyForDeploymentRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "delete_existing",
                "type": "GenerateNetworkPoliciesRequest.DeleteExistingPoliciesMode"
              },
              {
                "id": 3,
                "name": "include_ports",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetBaselineGeneratedPolicyForDeploymentResponse",
            "fields": [
              {
                "id": 1,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetAllowedPeersFromCurrentPolicyForDeploymentResponse",
            "fields": [
              {
                "id": 1,
                "name": "allowed_peers",
                "type": "NetworkBaselineStatusPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ApplyNetworkPolicyYamlForDeploymentRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetUndoModificationForDeploymentResponse",
            "fields": [
              {
                "id": 1,
                "name": "undo_record",
                "type": "storage.NetworkPolicyApplicationUndoRecord"
              }
            ]
          },
          {
            "name": "GetDiffFlowsReconciledFlow",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "storage.NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "added",
                "type": "storage.NetworkBaselineConnectionProperties",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "removed",
                "type": "storage.NetworkBaselineConnectionProperties",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "unchanged",
                "type": "storage.NetworkBaselineConnectionProperties",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetDiffFlowsGroupedFlow",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "storage.NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "properties",
                "type": "storage.NetworkBaselineConnectionProperties",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetDiffFlowsResponse",
            "fields": [
              {
                "id": 1,
                "name": "added",
                "type": "GetDiffFlowsGroupedFlow",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "removed",
                "type": "GetDiffFlowsGroupedFlow",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "reconciled",
                "type": "GetDiffFlowsReconciledFlow",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NetworkPolicyService",
            "rpcs": [
              {
                "name": "GetNetworkPolicy",
                "in_type": "ResourceByID",
                "out_type": "storage.NetworkPolicy"
              },
              {
                "name": "GetNetworkPolicies",
                "in_type": "GetNetworkPoliciesRequest",
                "out_type": "NetworkPoliciesResponse"
              },
              {
                "name": "GetNetworkGraph",
                "in_type": "GetNetworkGraphRequest",
                "out_type": "NetworkGraph"
              },
              {
                "name": "GetNetworkGraphEpoch",
                "in_type": "GetNetworkGraphEpochRequest",
                "out_type": "NetworkGraphEpoch"
              },
              {
                "name": "ApplyNetworkPolicy",
                "in_type": "ApplyNetworkPolicyYamlRequest",
                "out_type": "Empty"
              },
              {
                "name": "GetUndoModification",
                "in_type": "GetUndoModificationRequest",
                "out_type": "GetUndoModificationResponse"
              },
              {
                "name": "SimulateNetworkGraph",
                "in_type": "SimulateNetworkGraphRequest",
                "out_type": "SimulateNetworkGraphResponse"
              },
              {
                "name": "SendNetworkPolicyYAML",
                "in_type": "SendNetworkPolicyYamlRequest",
                "out_type": "Empty"
              },
              {
                "name": "GenerateNetworkPolicies",
                "in_type": "GenerateNetworkPoliciesRequest",
                "out_type": "GenerateNetworkPoliciesResponse"
              },
              {
                "name": "GetBaselineGeneratedNetworkPolicyForDeployment",
                "in_type": "GetBaselineGeneratedPolicyForDeploymentRequest",
                "out_type": "GetBaselineGeneratedPolicyForDeploymentResponse"
              },
              {
                "name": "GetAllowedPeersFromCurrentPolicyForDeployment",
                "in_type": "ResourceByID",
                "out_type": "GetAllowedPeersFromCurrentPolicyForDeploymentResponse"
              },
              {
                "name": "ApplyNetworkPolicyYamlForDeployment",
                "in_type": "ApplyNetworkPolicyYamlForDeploymentRequest",
                "out_type": "Empty"
              },
              {
                "name": "GetUndoModificationForDeployment",
                "in_type": "ResourceByID",
                "out_type": "GetUndoModificationForDeploymentResponse"
              },
              {
                "name": "GetDiffFlowsBetweenPolicyAndBaselineForDeployment",
                "in_type": "ResourceByID",
                "out_type": "GetDiffFlowsResponse"
              },
              {
                "name": "GetDiffFlowsFromUndoModificationForDeployment",
                "in_type": "ResourceByID",
                "out_type": "GetDiffFlowsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "api/v1/network_baseline_service.proto"
          },
          {
            "path": "api/v1/network_graph_service.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/network_baseline.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/network_policy.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:node_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListNodesRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListNodesResponse",
            "fields": [
              {
                "id": 1,
                "name": "nodes",
                "type": "storage.Node",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNodeRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "node_id",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NodeService",
            "rpcs": [
              {
                "name": "ListNodes",
                "in_type": "ListNodesRequest",
                "out_type": "ListNodesResponse"
              },
              {
                "name": "GetNode",
                "in_type": "GetNodeRequest",
                "out_type": "storage.Node"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/node.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:notifications.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkPolicyNotification",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "string"
              },
              {
                "id": 2,
                "name": "yaml",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:notifier_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetNotifiersRequest",
            "reserved_ids": [
              1,
              2
            ]
          },
          {
            "name": "GetNotifiersResponse",
            "fields": [
              {
                "id": 1,
                "name": "notifiers",
                "type": "storage.Notifier",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeleteNotifierRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool"
              }
            ]
          },
          {
            "name": "UpdateNotifierRequest",
            "fields": [
              {
                "id": 1,
                "name": "notifier",
                "type": "storage.Notifier"
              },
              {
                "id": 2,
                "name": "update_password",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NotifierService",
            "rpcs": [
              {
                "name": "GetNotifier",
                "in_type": "ResourceByID",
                "out_type": "storage.Notifier"
              },
              {
                "name": "GetNotifiers",
                "in_type": "GetNotifiersRequest",
                "out_type": "GetNotifiersResponse"
              },
              {
                "name": "PutNotifier",
                "in_type": "storage.Notifier",
                "out_type": "Empty"
              },
              {
                "name": "PostNotifier",
                "in_type": "storage.Notifier",
                "out_type": "storage.Notifier"
              },
              {
                "name": "TestNotifier",
                "in_type": "storage.Notifier",
                "out_type": "Empty"
              },
              {
                "name": "DeleteNotifier",
                "in_type": "DeleteNotifierRequest",
                "out_type": "Empty"
              },
              {
                "name": "UpdateNotifier",
                "in_type": "UpdateNotifierRequest",
                "out_type": "Empty"
              },
              {
                "name": "TestUpdatedNotifier",
                "in_type": "UpdateNotifierRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/notifier.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:pagination.proto",
      "def": {
        "enums": [
          {
            "name": "Aggregation",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "COUNT",
                "integer": 1
              },
              {
                "name": "MIN",
                "integer": 2
              },
              {
                "name": "MAX",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "AggregateBy",
            "fields": [
              {
                "id": 1,
                "name": "aggrFunc",
                "type": "Aggregation"
              },
              {
                "id": 2,
                "name": "distinct",
                "type": "bool"
              }
            ]
          },
          {
            "name": "SortOption",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "string"
              },
              {
                "id": 2,
                "name": "reversed",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "aggregate_by",
                "type": "AggregateBy"
              }
            ]
          },
          {
            "name": "Pagination",
            "fields": [
              {
                "id": 1,
                "name": "limit",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "offset",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "sort_option",
                "type": "SortOption"
              },
              {
                "id": 4,
                "name": "sort_options",
                "type": "SortOption",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:ping_service.proto",
      "def": {
        "messages": [
          {
            "name": "PongMessage",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PingService",
            "rpcs": [
              {
                "name": "Ping",
                "in_type": "Empty",
                "out_type": "PongMessage"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:pod_service.proto",
      "def": {
        "messages": [
          {
            "name": "PodsResponse",
            "fields": [
              {
                "id": 1,
                "name": "pods",
                "type": "storage.Pod",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PodService",
            "rpcs": [
              {
                "name": "GetPods",
                "in_type": "RawQuery",
                "out_type": "PodsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "storage/deployment.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:policy_category_service.proto",
      "def": {
        "messages": [
          {
            "name": "PolicyCategory",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "isDefault",
                "type": "bool"
              }
            ]
          },
          {
            "name": "PostPolicyCategoryRequest",
            "fields": [
              {
                "id": 1,
                "name": "policyCategory",
                "type": "v1.PolicyCategory"
              }
            ]
          },
          {
            "name": "GetPolicyCategoriesResponse",
            "fields": [
              {
                "id": 1,
                "name": "categories",
                "type": "v1.PolicyCategory",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RenamePolicyCategoryRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "new_category_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeletePolicyCategoryRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PolicyCategoryService",
            "rpcs": [
              {
                "name": "GetPolicyCategory",
                "in_type": "ResourceByID",
                "out_type": "v1.PolicyCategory"
              },
              {
                "name": "GetPolicyCategories",
                "in_type": "RawQuery",
                "out_type": "GetPolicyCategoriesResponse"
              },
              {
                "name": "PostPolicyCategory",
                "in_type": "PostPolicyCategoryRequest",
                "out_type": "v1.PolicyCategory"
              },
              {
                "name": "RenamePolicyCategory",
                "in_type": "RenamePolicyCategoryRequest",
                "out_type": "v1.PolicyCategory"
              },
              {
                "name": "DeletePolicyCategory",
                "in_type": "DeletePolicyCategoryRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:policy_service.proto",
      "def": {
        "messages": [
          {
            "name": "DryRunResponse",
            "fields": [
              {
                "id": 1,
                "name": "alerts",
                "type": "Alert",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Alert",
                "fields": [
                  {
                    "id": 1,
                    "name": "deployment",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "violations",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "JobId",
            "fields": [
              {
                "id": 1,
                "name": "job_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "DryRunJobStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "pending",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "result",
                "type": "DryRunResponse"
              }
            ]
          },
          {
            "name": "PolicyCategoriesResponse",
            "fields": [
              {
                "id": 1,
                "name": "categories",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EnableDisablePolicyNotificationRequest",
            "fields": [
              {
                "id": 1,
                "name": "policy_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "notifier_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "disable",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ListPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "storage.ListPolicy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PostPolicyRequest",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "storage.Policy"
              },
              {
                "id": 2,
                "name": "enable_strict_validation",
                "type": "bool"
              }
            ]
          },
          {
            "name": "PatchPolicyRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "disabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ExportPoliciesRequest",
            "fields": [
              {
                "id": 1,
                "name": "policy_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyError",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExportPolicyError",
            "fields": [
              {
                "id": 1,
                "name": "policy_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "error",
                "type": "PolicyError"
              }
            ]
          },
          {
            "name": "ExportPoliciesErrorList",
            "fields": [
              {
                "id": 1,
                "name": "errors",
                "type": "ExportPolicyError",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyFromSearchRequest",
            "fields": [
              {
                "id": 1,
                "name": "search_params",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImportPoliciesMetadata",
            "fields": [
              {
                "id": 1,
                "name": "overwrite",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ImportPoliciesRequest",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "ImportPoliciesMetadata"
              },
              {
                "id": 2,
                "name": "policies",
                "type": "storage.Policy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ImportPolicyError",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "duplicate_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "validation_error",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImportPolicyResponse",
            "fields": [
              {
                "id": 1,
                "name": "succeeded",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "policy",
                "type": "storage.Policy"
              },
              {
                "id": 3,
                "name": "errors",
                "type": "ImportPolicyError",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ImportPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "responses",
                "type": "ImportPolicyResponse",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "all_succeeded",
                "type": "bool"
              }
            ]
          },
          {
            "name": "PolicyFromSearchResponse",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "storage.Policy"
              },
              {
                "id": 2,
                "name": "altered_search_terms",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "has_nested_fields",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetPolicyMitreVectorsRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "options",
                "type": "Options"
              }
            ],
            "messages": [
              {
                "name": "Options",
                "fields": [
                  {
                    "id": 1,
                    "name": "exclude_policy",
                    "type": "bool"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetPolicyMitreVectorsResponse",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "storage.Policy"
              },
              {
                "id": 2,
                "name": "vectors",
                "type": "storage.MitreAttackVector",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PolicyService",
            "rpcs": [
              {
                "name": "GetPolicy",
                "in_type": "ResourceByID",
                "out_type": "storage.Policy"
              },
              {
                "name": "GetPolicyMitreVectors",
                "in_type": "GetPolicyMitreVectorsRequest",
                "out_type": "GetPolicyMitreVectorsResponse"
              },
              {
                "name": "ListPolicies",
                "in_type": "RawQuery",
                "out_type": "ListPoliciesResponse"
              },
              {
                "name": "PostPolicy",
                "in_type": "PostPolicyRequest",
                "out_type": "storage.Policy"
              },
              {
                "name": "PutPolicy",
                "in_type": "storage.Policy",
                "out_type": "Empty"
              },
              {
                "name": "PatchPolicy",
                "in_type": "PatchPolicyRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeletePolicy",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "EnableDisablePolicyNotification",
                "in_type": "EnableDisablePolicyNotificationRequest",
                "out_type": "Empty"
              },
              {
                "name": "ReassessPolicies",
                "in_type": "Empty",
                "out_type": "Empty"
              },
              {
                "name": "DryRunPolicy",
                "in_type": "storage.Policy",
                "out_type": "DryRunResponse"
              },
              {
                "name": "SubmitDryRunPolicyJob",
                "in_type": "storage.Policy",
                "out_type": "JobId"
              },
              {
                "name": "QueryDryRunJobStatus",
                "in_type": "JobId",
                "out_type": "DryRunJobStatusResponse"
              },
              {
                "name": "CancelDryRunJob",
                "in_type": "JobId",
                "out_type": "Empty"
              },
              {
                "name": "GetPolicyCategories",
                "in_type": "Empty",
                "out_type": "PolicyCategoriesResponse"
              },
              {
                "name": "ExportPolicies",
                "in_type": "ExportPoliciesRequest",
                "out_type": "storage.ExportPoliciesResponse"
              },
              {
                "name": "PolicyFromSearch",
                "in_type": "PolicyFromSearchRequest",
                "out_type": "PolicyFromSearchResponse"
              },
              {
                "name": "ImportPolicies",
                "in_type": "ImportPoliciesRequest",
                "out_type": "ImportPoliciesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "storage/mitre.proto"
          },
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:probe_upload_service.proto",
      "def": {
        "messages": [
          {
            "name": "ProbeUploadManifest",
            "fields": [
              {
                "id": 1,
                "name": "files",
                "type": "File",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "File",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "size",
                    "type": "int64"
                  },
                  {
                    "id": 3,
                    "name": "crc32",
                    "type": "uint32"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetExistingProbesRequest",
            "fields": [
              {
                "id": 1,
                "name": "files_to_check",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetExistingProbesResponse",
            "fields": [
              {
                "id": 1,
                "name": "existing_files",
                "type": "ProbeUploadManifest.File",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ProbeUploadService",
            "rpcs": [
              {
                "name": "GetExistingProbes",
                "in_type": "GetExistingProbesRequest",
                "out_type": "GetExistingProbesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:process_baseline_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetProcessBaselineRequest",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "storage.ProcessBaselineKey"
              }
            ]
          },
          {
            "name": "UpdateProcessBaselinesRequest",
            "fields": [
              {
                "id": 1,
                "name": "keys",
                "type": "storage.ProcessBaselineKey",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "add_elements",
                "type": "storage.BaselineItem",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "remove_elements",
                "type": "storage.BaselineItem",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessBaselinesResponse",
            "fields": [
              {
                "id": 1,
                "name": "baselines",
                "type": "storage.ProcessBaseline",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessBaselineUpdateError",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "storage.ProcessBaselineKey"
              }
            ]
          },
          {
            "name": "UpdateProcessBaselinesResponse",
            "fields": [
              {
                "id": 1,
                "name": "baselines",
                "type": "storage.ProcessBaseline",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "errors",
                "type": "ProcessBaselineUpdateError",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LockProcessBaselinesRequest",
            "fields": [
              {
                "id": 1,
                "name": "keys",
                "type": "storage.ProcessBaselineKey",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "locked",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteProcessBaselinesRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              },
              {
                "id": 2,
                "name": "confirm",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteProcessBaselinesResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_deleted",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "dry_run",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ProcessBaselineService",
            "rpcs": [
              {
                "name": "GetProcessBaseline",
                "in_type": "GetProcessBaselineRequest",
                "out_type": "storage.ProcessBaseline"
              },
              {
                "name": "UpdateProcessBaselines",
                "in_type": "UpdateProcessBaselinesRequest",
                "out_type": "UpdateProcessBaselinesResponse"
              },
              {
                "name": "LockProcessBaselines",
                "in_type": "LockProcessBaselinesRequest",
                "out_type": "UpdateProcessBaselinesResponse"
              },
              {
                "name": "DeleteProcessBaselines",
                "in_type": "DeleteProcessBaselinesRequest",
                "out_type": "DeleteProcessBaselinesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/process_baseline.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:process_listening_on_port_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetProcessesListeningOnPortsRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetProcessesListeningOnPortsResponse",
            "fields": [
              {
                "id": 1,
                "name": "listening_endpoints",
                "type": "storage.ProcessListeningOnPort",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ListeningEndpointsService",
            "rpcs": [
              {
                "name": "GetListeningEndpoints",
                "in_type": "GetProcessesListeningOnPortsRequest",
                "out_type": "GetProcessesListeningOnPortsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/process_listening_on_port.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:process_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetProcessesByDeploymentRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetProcessesResponse",
            "fields": [
              {
                "id": 1,
                "name": "processes",
                "type": "storage.ProcessIndicator",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessGroup",
            "fields": [
              {
                "id": 1,
                "name": "args",
                "type": "string"
              },
              {
                "id": 2,
                "name": "signals",
                "type": "storage.ProcessIndicator",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessNameGroup",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "times_executed",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "groups",
                "type": "ProcessGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetGroupedProcessesResponse",
            "fields": [
              {
                "id": 3,
                "name": "groups",
                "type": "ProcessNameGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessNameAndContainerNameGroup",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "times_executed",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "groups",
                "type": "ProcessGroup",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "suspicious",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetGroupedProcessesWithContainerResponse",
            "fields": [
              {
                "id": 3,
                "name": "groups",
                "type": "ProcessNameAndContainerNameGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountProcessesResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ProcessService",
            "rpcs": [
              {
                "name": "CountProcesses",
                "in_type": "RawQuery",
                "out_type": "CountProcessesResponse"
              },
              {
                "name": "GetProcessesByDeployment",
                "in_type": "GetProcessesByDeploymentRequest",
                "out_type": "GetProcessesResponse"
              },
              {
                "name": "GetGroupedProcessByDeployment",
                "in_type": "GetProcessesByDeploymentRequest",
                "out_type": "GetGroupedProcessesResponse"
              },
              {
                "name": "GetGroupedProcessByDeploymentAndContainer",
                "in_type": "GetProcessesByDeploymentRequest",
                "out_type": "GetGroupedProcessesWithContainerResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:rbac_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListRolesResponse",
            "fields": [
              {
                "id": 1,
                "name": "roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetRoleResponse",
            "fields": [
              {
                "id": 1,
                "name": "role",
                "type": "storage.K8sRole"
              }
            ]
          },
          {
            "name": "ListRoleBindingsResponse",
            "fields": [
              {
                "id": 1,
                "name": "bindings",
                "type": "storage.K8sRoleBinding",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetRoleBindingResponse",
            "fields": [
              {
                "id": 1,
                "name": "binding",
                "type": "storage.K8sRoleBinding"
              }
            ]
          },
          {
            "name": "ListSubjectsResponse",
            "fields": [
              {
                "id": 1,
                "name": "subject_and_roles",
                "type": "SubjectAndRoles",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SubjectAndRoles",
            "fields": [
              {
                "id": 1,
                "name": "subject",
                "type": "storage.Subject"
              },
              {
                "id": 2,
                "name": "roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetSubjectResponse",
            "fields": [
              {
                "id": 1,
                "name": "subject",
                "type": "storage.Subject"
              },
              {
                "id": 2,
                "name": "cluster_roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "scoped_roles",
                "type": "ScopedRoles",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScopedRoles",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 2,
                "name": "roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "RbacService",
            "rpcs": [
              {
                "name": "GetRole",
                "in_type": "ResourceByID",
                "out_type": "GetRoleResponse"
              },
              {
                "name": "ListRoles",
                "in_type": "RawQuery",
                "out_type": "ListRolesResponse"
              },
              {
                "name": "GetRoleBinding",
                "in_type": "ResourceByID",
                "out_type": "GetRoleBindingResponse"
              },
              {
                "name": "ListRoleBindings",
                "in_type": "RawQuery",
                "out_type": "ListRoleBindingsResponse"
              },
              {
                "name": "GetSubject",
                "in_type": "ResourceByID",
                "out_type": "GetSubjectResponse"
              },
              {
                "name": "ListSubjects",
                "in_type": "RawQuery",
                "out_type": "ListSubjectsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "storage/rbac.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:report_configuration_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetReportConfigurationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "report_configs",
                "type": "storage.ReportConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetReportConfigurationResponse",
            "fields": [
              {
                "id": 1,
                "name": "report_config",
                "type": "storage.ReportConfiguration"
              }
            ]
          },
          {
            "name": "PostReportConfigurationResponse",
            "fields": [
              {
                "id": 1,
                "name": "report_config",
                "type": "storage.ReportConfiguration"
              }
            ]
          },
          {
            "name": "PostReportConfigurationRequest",
            "fields": [
              {
                "id": 1,
                "name": "report_config",
                "type": "storage.ReportConfiguration"
              }
            ]
          },
          {
            "name": "UpdateReportConfigurationRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "report_config",
                "type": "storage.ReportConfiguration"
              }
            ]
          },
          {
            "name": "CountReportConfigurationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ReportConfigurationService",
            "rpcs": [
              {
                "name": "GetReportConfigurations",
                "in_type": "RawQuery",
                "out_type": "GetReportConfigurationsResponse"
              },
              {
                "name": "GetReportConfiguration",
                "in_type": "ResourceByID",
                "out_type": "GetReportConfigurationResponse"
              },
              {
                "name": "PostReportConfiguration",
                "in_type": "PostReportConfigurationRequest",
                "out_type": "PostReportConfigurationResponse"
              },
              {
                "name": "UpdateReportConfiguration",
                "in_type": "UpdateReportConfigurationRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeleteReportConfiguration",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "CountReportConfigurations",
                "in_type": "RawQuery",
                "out_type": "CountReportConfigurationsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "storage/report_configuration.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:report_service.proto",
      "def": {
        "services": [
          {
            "name": "ReportService",
            "rpcs": [
              {
                "name": "RunReport",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:resource_collection_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListCollectionSelectorsResponse",
            "fields": [
              {
                "id": 1,
                "name": "selectors",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetCollectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "options",
                "type": "CollectionDeploymentMatchOptions"
              }
            ]
          },
          {
            "name": "CollectionDeploymentMatchOptions",
            "fields": [
              {
                "id": 1,
                "name": "with_matches",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "filter_query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "GetCollectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "collection",
                "type": "storage.ResourceCollection"
              },
              {
                "id": 2,
                "name": "deployments",
                "type": "storage.ListDeployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetCollectionCountRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "GetCollectionCountResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "CreateCollectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "description",
                "type": "string"
              },
              {
                "id": 3,
                "name": "resource_selectors",
                "type": "storage.ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "embedded_collection_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CreateCollectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "collection",
                "type": "storage.ResourceCollection"
              }
            ]
          },
          {
            "name": "UpdateCollectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "resource_selectors",
                "type": "storage.ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "embedded_collection_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateCollectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "collection",
                "type": "storage.ResourceCollection"
              }
            ]
          },
          {
            "name": "DryRunCollectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "resource_selectors",
                "type": "storage.ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "embedded_collection_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "options",
                "type": "CollectionDeploymentMatchOptions"
              }
            ]
          },
          {
            "name": "DryRunCollectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployments",
                "type": "storage.ListDeployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListCollectionsRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "ListCollectionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "collections",
                "type": "storage.ResourceCollection",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CollectionService",
            "rpcs": [
              {
                "name": "ListCollectionSelectors",
                "in_type": "Empty",
                "out_type": "ListCollectionSelectorsResponse"
              },
              {
                "name": "GetCollection",
                "in_type": "GetCollectionRequest",
                "out_type": "GetCollectionResponse"
              },
              {
                "name": "GetCollectionCount",
                "in_type": "GetCollectionCountRequest",
                "out_type": "GetCollectionCountResponse"
              },
              {
                "name": "CreateCollection",
                "in_type": "CreateCollectionRequest",
                "out_type": "CreateCollectionResponse"
              },
              {
                "name": "UpdateCollection",
                "in_type": "UpdateCollectionRequest",
                "out_type": "UpdateCollectionResponse"
              },
              {
                "name": "ListCollections",
                "in_type": "ListCollectionsRequest",
                "out_type": "ListCollectionsResponse"
              },
              {
                "name": "DeleteCollection",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "DryRunCollection",
                "in_type": "DryRunCollectionRequest",
                "out_type": "DryRunCollectionResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/resource_collection.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:role_service.proto",
      "def": {
        "enums": [
          {
            "name": "ComputeEffectiveAccessScopeRequest.Detail",
            "enum_fields": [
              {
                "name": "STANDARD"
              },
              {
                "name": "MINIMAL",
                "integer": 1
              },
              {
                "name": "HIGH",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Permission",
            "fields": [
              {
                "id": 1,
                "name": "resource",
                "type": "string"
              },
              {
                "id": 2,
                "name": "access",
                "type": "storage.Access"
              }
            ]
          },
          {
            "name": "GetRolesResponse",
            "fields": [
              {
                "id": 1,
                "name": "roles",
                "type": "storage.Role",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetPermissionsResponse",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "resource_to_access",
                  "type": "storage.Access"
                }
              }
            ],
            "reserved_ids": [
              1,
              2
            ]
          },
          {
            "name": "GetResourcesResponse",
            "fields": [
              {
                "id": 1,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListPermissionSetsResponse",
            "fields": [
              {
                "id": 1,
                "name": "permission_sets",
                "type": "storage.PermissionSet",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListSimpleAccessScopesResponse",
            "fields": [
              {
                "id": 1,
                "name": "access_scopes",
                "type": "storage.SimpleAccessScope",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScopeObject",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetClustersForPermissionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "ScopeObject",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNamespacesForClusterAndPermissionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "namespaces",
                "type": "ScopeObject",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComputeEffectiveAccessScopeRequest",
            "fields": [
              {
                "id": 1,
                "name": "detail",
                "type": "Detail"
              },
              {
                "id": 2,
                "name": "access_scope",
                "type": "Payload"
              }
            ],
            "messages": [
              {
                "name": "Payload",
                "fields": [
                  {
                    "id": 1,
                    "name": "simple_rules",
                    "type": "storage.SimpleAccessScope.Rules"
                  }
                ]
              }
            ]
          },
          {
            "name": "CreateRoleRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "role",
                "type": "storage.Role"
              }
            ]
          },
          {
            "name": "GetClustersForPermissionsRequest",
            "fields": [
              {
                "id": 1,
                "name": "pagination",
                "type": "Pagination"
              },
              {
                "id": 2,
                "name": "permissions",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNamespaceForClusterAndPermissionsRequest",
            "fields": [
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "permissions",
                "type": "string",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              1
            ]
          }
        ],
        "services": [
          {
            "name": "RoleService",
            "rpcs": [
              {
                "name": "GetRoles",
                "in_type": "Empty",
                "out_type": "GetRolesResponse"
              },
              {
                "name": "GetRole",
                "in_type": "ResourceByID",
                "out_type": "storage.Role"
              },
              {
                "name": "GetMyPermissions",
                "in_type": "Empty",
                "out_type": "GetPermissionsResponse"
              },
              {
                "name": "CreateRole",
                "in_type": "CreateRoleRequest",
                "out_type": "Empty"
              },
              {
                "name": "UpdateRole",
                "in_type": "storage.Role",
                "out_type": "Empty"
              },
              {
                "name": "DeleteRole",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetResources",
                "in_type": "Empty",
                "out_type": "GetResourcesResponse"
              },
              {
                "name": "GetPermissionSet",
                "in_type": "ResourceByID",
                "out_type": "storage.PermissionSet"
              },
              {
                "name": "ListPermissionSets",
                "in_type": "Empty",
                "out_type": "ListPermissionSetsResponse"
              },
              {
                "name": "PostPermissionSet",
                "in_type": "storage.PermissionSet",
                "out_type": "storage.PermissionSet"
              },
              {
                "name": "PutPermissionSet",
                "in_type": "storage.PermissionSet",
                "out_type": "Empty"
              },
              {
                "name": "DeletePermissionSet",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetSimpleAccessScope",
                "in_type": "ResourceByID",
                "out_type": "storage.SimpleAccessScope"
              },
              {
                "name": "ListSimpleAccessScopes",
                "in_type": "Empty",
                "out_type": "ListSimpleAccessScopesResponse"
              },
              {
                "name": "PostSimpleAccessScope",
                "in_type": "storage.SimpleAccessScope",
                "out_type": "storage.SimpleAccessScope"
              },
              {
                "name": "PutSimpleAccessScope",
                "in_type": "storage.SimpleAccessScope",
                "out_type": "Empty"
              },
              {
                "name": "DeleteSimpleAccessScope",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "ComputeEffectiveAccessScope",
                "in_type": "ComputeEffectiveAccessScopeRequest",
                "out_type": "storage.EffectiveAccessScope"
              },
              {
                "name": "GetClustersForPermissions",
                "in_type": "GetClustersForPermissionsRequest",
                "out_type": "GetClustersForPermissionsResponse"
              },
              {
                "name": "GetNamespacesForClusterAndPermissions",
                "in_type": "GetNamespaceForClusterAndPermissionsRequest",
                "out_type": "GetNamespacesForClusterAndPermissionsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/pagination.proto"
          },
          {
            "path": "storage/role.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:search_service.proto",
      "def": {
        "enums": [
          {
            "name": "SearchCategory",
            "enum_fields": [
              {
                "name": "SEARCH_UNSET"
              },
              {
                "name": "ALERTS",
                "integer": 1
              },
              {
                "name": "IMAGES",
                "integer": 2
              },
              {
                "name": "IMAGE_COMPONENTS",
                "integer": 20
              },
              {
                "name": "IMAGE_VULN_EDGE",
                "integer": 27
              },
              {
                "name": "IMAGE_COMPONENT_EDGE",
                "integer": 23
              },
              {
                "name": "POLICIES",
                "integer": 3
              },
              {
                "name": "DEPLOYMENTS",
                "integer": 4
              },
              {
                "name": "ACTIVE_COMPONENT",
                "integer": 30
              },
              {
                "name": "PODS",
                "integer": 25
              },
              {
                "name": "SECRETS",
                "integer": 5
              },
              {
                "name": "PROCESS_INDICATORS",
                "integer": 6
              },
              {
                "name": "COMPLIANCE",
                "integer": 7
              },
              {
                "name": "CLUSTERS",
                "integer": 8
              },
              {
                "name": "NAMESPACES",
                "integer": 9
              },
              {
                "name": "NODES",
                "integer": 10
              },
              {
                "name": "NODE_COMPONENTS",
                "integer": 38
              },
              {
                "name": "NODE_VULN_EDGE",
                "integer": 28
              },
              {
                "name": "NODE_COMPONENT_EDGE",
                "integer": 29
              },
              {
                "name": "NODE_COMPONENT_CVE_EDGE",
                "integer": 33
              },
              {
                "name": "COMPLIANCE_STANDARD",
                "integer": 11
              },
              {
                "name": "COMPLIANCE_CONTROL_GROUP",
                "integer": 12
              },
              {
                "name": "COMPLIANCE_CONTROL",
                "integer": 13
              },
              {
                "name": "SERVICE_ACCOUNTS",
                "integer": 14
              },
              {
                "name": "ROLES",
                "integer": 15
              },
              {
                "name": "ROLEBINDINGS",
                "integer": 16
              },
              {
                "name": "REPORT_CONFIGURATIONS",
                "integer": 37
              },
              {
                "name": "PROCESS_BASELINES",
                "integer": 17
              },
              {
                "name": "SUBJECTS",
                "integer": 18
              },
              {
                "name": "RISKS",
                "integer": 19
              },
              {
                "name": "VULNERABILITIES",
                "integer": 21
              },
              {
                "name": "CLUSTER_VULNERABILITIES",
                "integer": 34
              },
              {
                "name": "IMAGE_VULNERABILITIES",
                "integer": 35
              },
              {
                "name": "NODE_VULNERABILITIES",
                "integer": 36
              },
              {
                "name": "COMPONENT_VULN_EDGE",
                "integer": 22
              },
              {
                "name": "CLUSTER_VULN_EDGE",
                "integer": 24
              },
              {
                "name": "NETWORK_ENTITY",
                "integer": 26
              },
              {
                "name": "VULN_REQUEST",
                "integer": 32
              },
              {
                "name": "NETWORK_BASELINE",
                "integer": 39
              },
              {
                "name": "NETWORK_POLICIES",
                "integer": 40
              },
              {
                "name": "PROCESS_BASELINE_RESULTS",
                "integer": 41
              },
              {
                "name": "COMPLIANCE_METADATA",
                "integer": 42
              },
              {
                "name": "COMPLIANCE_RESULTS",
                "integer": 43
              },
              {
                "name": "COMPLIANCE_DOMAIN",
                "integer": 44
              },
              {
                "name": "CLUSTER_HEALTH",
                "integer": 45
              },
              {
                "name": "POLICY_CATEGORIES",
                "integer": 46
              },
              {
                "name": "IMAGE_INTEGRATIONS",
                "integer": 47
              },
              {
                "name": "COLLECTIONS",
                "integer": 48
              },
              {
                "name": "POLICY_CATEGORY_EDGE",
                "integer": 49
              },
              {
                "name": "PROCESS_LISTENING_ON_PORT",
                "integer": 50
              },
              {
                "name": "API_TOKEN",
                "integer": 51
              }
            ]
          },
          {
            "name": "SearchDataType",
            "enum_fields": [
              {
                "name": "SEARCH_BOOL"
              },
              {
                "name": "SEARCH_NUMERIC",
                "integer": 1
              },
              {
                "name": "SEARCH_STRING",
                "integer": 2
              },
              {
                "name": "SEARCH_DATETIME",
                "integer": 3
              },
              {
                "name": "SEARCH_MAP",
                "integer": 4
              },
              {
                "name": "SEARCH_ENUM",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "RawQuery",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              },
              {
                "id": 2,
                "name": "pagination",
                "type": "Pagination"
              }
            ]
          },
          {
            "name": "RawSearchRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              },
              {
                "id": 2,
                "name": "categories",
                "type": "SearchCategory",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "QuerySortOption",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "string"
              },
              {
                "id": 2,
                "name": "reversed",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "search_after",
                "type": "string"
              },
              {
                "id": 4,
                "name": "aggregate_by",
                "type": "AggregateBy"
              }
            ]
          },
          {
            "name": "QueryField",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "aggregate_func",
                "type": "string"
              },
              {
                "id": 3,
                "name": "distinct",
                "type": "bool"
              }
            ]
          },
          {
            "name": "QuerySelectFilter",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "Query"
              }
            ]
          },
          {
            "name": "QuerySelect",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "QueryField"
              },
              {
                "id": 2,
                "name": "filter",
                "type": "QuerySelectFilter"
              }
            ]
          },
          {
            "name": "QueryGroupBy",
            "fields": [
              {
                "id": 1,
                "name": "fields",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "QueryPagination",
            "fields": [
              {
                "id": 1,
                "name": "limit",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "offset",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "sort_options",
                "type": "QuerySortOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BooleanQuery",
            "fields": [
              {
                "id": 1,
                "name": "must",
                "type": "ConjunctionQuery"
              },
              {
                "id": 2,
                "name": "must_not",
                "type": "DisjunctionQuery"
              }
            ]
          },
          {
            "name": "Query",
            "fields": [
              {
                "id": 1,
                "name": "conjunction",
                "type": "ConjunctionQuery"
              },
              {
                "id": 2,
                "name": "disjunction",
                "type": "DisjunctionQuery"
              },
              {
                "id": 3,
                "name": "base_query",
                "type": "BaseQuery"
              },
              {
                "id": 6,
                "name": "boolean_query",
                "type": "BooleanQuery"
              },
              {
                "id": 8,
                "name": "selects",
                "type": "QuerySelect",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "group_by",
                "type": "QueryGroupBy"
              },
              {
                "id": 4,
                "name": "pagination",
                "type": "QueryPagination"
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "StringQuery",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "MatchFieldQuery",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "highlight",
                "type": "bool"
              }
            ]
          },
          {
            "name": "MatchLinkedFieldsQuery",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "MatchFieldQuery",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DocIDQuery",
            "fields": [
              {
                "id": 1,
                "name": "ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BaseQuery",
            "fields": [
              {
                "id": 2,
                "name": "match_field_query",
                "type": "MatchFieldQuery"
              },
              {
                "id": 3,
                "name": "match_linked_fields_query",
                "type": "MatchLinkedFieldsQuery"
              },
              {
                "id": 4,
                "name": "doc_id_query",
                "type": "DocIDQuery"
              },
              {
                "id": 5,
                "name": "match_none_query",
                "type": "MatchNoneQuery"
              }
            ]
          },
          {
            "name": "ConjunctionQuery",
            "fields": [
              {
                "id": 1,
                "name": "queries",
                "type": "Query",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DisjunctionQuery",
            "fields": [
              {
                "id": 1,
                "name": "queries",
                "type": "Query",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MatchNoneQuery"
          },
          {
            "name": "SearchResult",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "category",
                "type": "SearchCategory"
              },
              {
                "id": 5,
                "name": "score",
                "type": "double"
              },
              {
                "id": 6,
                "name": "location",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "field_to_matches",
                  "type": "Matches"
                }
              }
            ],
            "messages": [
              {
                "name": "Matches",
                "fields": [
                  {
                    "id": 1,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "SearchResponse",
            "fields": [
              {
                "id": 1,
                "name": "results",
                "type": "SearchResult",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "counts",
                "type": "Count",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Count",
                "fields": [
                  {
                    "id": 1,
                    "name": "category",
                    "type": "SearchCategory"
                  },
                  {
                    "id": 2,
                    "name": "count",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "SearchOptionsRequest",
            "fields": [
              {
                "id": 1,
                "name": "categories",
                "type": "SearchCategory",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SearchOptionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "options",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AutocompleteResponse",
            "fields": [
              {
                "id": 1,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SearchService",
            "rpcs": [
              {
                "name": "Search",
                "in_type": "RawSearchRequest",
                "out_type": "SearchResponse"
              },
              {
                "name": "Options",
                "in_type": "SearchOptionsRequest",
                "out_type": "SearchOptionsResponse"
              },
              {
                "name": "Autocomplete",
                "in_type": "RawSearchRequest",
                "out_type": "AutocompleteResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/pagination.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:secret_service.proto",
      "def": {
        "messages": [
          {
            "name": "SecretList",
            "fields": [
              {
                "id": 1,
                "name": "secrets",
                "type": "storage.Secret",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListSecretsResponse",
            "fields": [
              {
                "id": 1,
                "name": "secrets",
                "type": "storage.ListSecret",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountSecretsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SecretService",
            "rpcs": [
              {
                "name": "GetSecret",
                "in_type": "ResourceByID",
                "out_type": "storage.Secret"
              },
              {
                "name": "CountSecrets",
                "in_type": "RawQuery",
                "out_type": "CountSecretsResponse"
              },
              {
                "name": "ListSecrets",
                "in_type": "RawQuery",
                "out_type": "ListSecretsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "storage/secret.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:sensor_upgrade_service.proto",
      "def": {
        "enums": [
          {
            "name": "GetSensorUpgradeConfigResponse.SensorAutoUpgradeFeatureStatus",
            "enum_fields": [
              {
                "name": "NOT_SUPPORTED"
              },
              {
                "name": "SUPPORTED",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "UpdateSensorUpgradeConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.SensorUpgradeConfig"
              }
            ]
          },
          {
            "name": "GetSensorUpgradeConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "UpgradeConfig"
              }
            ],
            "messages": [
              {
                "name": "UpgradeConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "enable_auto_upgrade",
                    "type": "bool"
                  },
                  {
                    "id": 2,
                    "name": "auto_upgrade_feature",
                    "type": "SensorAutoUpgradeFeatureStatus"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SensorUpgradeService",
            "rpcs": [
              {
                "name": "GetSensorUpgradeConfig",
                "in_type": "Empty",
                "out_type": "GetSensorUpgradeConfigResponse"
              },
              {
                "name": "UpdateSensorUpgradeConfig",
                "in_type": "UpdateSensorUpgradeConfigRequest",
                "out_type": "Empty"
              },
              {
                "name": "TriggerSensorUpgrade",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "TriggerSensorCertRotation",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "storage/sensor_upgrade.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:service_account_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListServiceAccountResponse",
            "fields": [
              {
                "id": 1,
                "name": "sa_and_roles",
                "type": "ServiceAccountAndRoles",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServiceAccountAndRoles",
            "fields": [
              {
                "id": 1,
                "name": "service_account",
                "type": "storage.ServiceAccount"
              },
              {
                "id": 2,
                "name": "cluster_roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "scoped_roles",
                "type": "ScopedRoles",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "deployment_relationships",
                "type": "SADeploymentRelationship",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetServiceAccountResponse",
            "fields": [
              {
                "id": 1,
                "name": "sa_and_role",
                "type": "ServiceAccountAndRoles"
              }
            ]
          },
          {
            "name": "SADeploymentRelationship",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ServiceAccountService",
            "rpcs": [
              {
                "name": "GetServiceAccount",
                "in_type": "ResourceByID",
                "out_type": "GetServiceAccountResponse"
              },
              {
                "name": "ListServiceAccounts",
                "in_type": "RawQuery",
                "out_type": "ListServiceAccountResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "api/v1/rbac_service.proto"
          },
          {
            "path": "storage/service_account.proto"
          },
          {
            "path": "storage/rbac.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:service_identity_service.proto",
      "def": {
        "messages": [
          {
            "name": "ServiceIdentityResponse",
            "fields": [
              {
                "id": 1,
                "name": "identities",
                "type": "storage.ServiceIdentity",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CreateServiceIdentityRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "storage.ServiceType"
              }
            ]
          },
          {
            "name": "CreateServiceIdentityResponse",
            "fields": [
              {
                "id": 1,
                "name": "identity",
                "type": "storage.ServiceIdentity"
              },
              {
                "id": 2,
                "name": "certificate_pem",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "private_key_pem",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Authority",
            "fields": [
              {
                "id": 1,
                "name": "certificate_pem",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Authorities",
            "fields": [
              {
                "id": 1,
                "name": "authorities",
                "type": "Authority",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ServiceIdentityService",
            "rpcs": [
              {
                "name": "GetServiceIdentities",
                "in_type": "Empty",
                "out_type": "ServiceIdentityResponse"
              },
              {
                "name": "CreateServiceIdentity",
                "in_type": "CreateServiceIdentityRequest",
                "out_type": "CreateServiceIdentityResponse"
              },
              {
                "name": "GetAuthorities",
                "in_type": "Empty",
                "out_type": "Authorities"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/service_identity.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:signal.proto",
      "def": {
        "messages": [
          {
            "name": "Signal",
            "fields": [
              {
                "id": 1,
                "name": "process_signal",
                "type": "storage.ProcessSignal"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:signature_integration_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListSignatureIntegrationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "integrations",
                "type": "storage.SignatureIntegration",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SignatureIntegrationService",
            "rpcs": [
              {
                "name": "ListSignatureIntegrations",
                "in_type": "Empty",
                "out_type": "ListSignatureIntegrationsResponse"
              },
              {
                "name": "GetSignatureIntegration",
                "in_type": "ResourceByID",
                "out_type": "storage.SignatureIntegration"
              },
              {
                "name": "PostSignatureIntegration",
                "in_type": "storage.SignatureIntegration",
                "out_type": "storage.SignatureIntegration"
              },
              {
                "name": "PutSignatureIntegration",
                "in_type": "storage.SignatureIntegration",
                "out_type": "Empty"
              },
              {
                "name": "DeleteSignatureIntegration",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "storage/signature_integration.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:summary_service.proto",
      "def": {
        "messages": [
          {
            "name": "SummaryCountsResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_alerts",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "num_clusters",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "num_deployments",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "num_images",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "num_secrets",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "num_nodes",
                "type": "int64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SummaryService",
            "rpcs": [
              {
                "name": "GetSummaryCounts",
                "in_type": "Empty",
                "out_type": "SummaryCountsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:telemetry_service.proto",
      "def": {
        "messages": [
          {
            "name": "ConfigureTelemetryRequest",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "TelemetryService",
            "rpcs": [
              {
                "name": "GetTelemetryConfiguration",
                "in_type": "Empty",
                "out_type": "storage.TelemetryConfiguration"
              },
              {
                "name": "ConfigureTelemetry",
                "in_type": "ConfigureTelemetryRequest",
                "out_type": "storage.TelemetryConfiguration"
              },
              {
                "name": "GetConfig",
                "in_type": "Empty",
                "out_type": "central.TelemetryConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/telemetry.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "internalapi/central/telemetry.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:user_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetUsersResponse",
            "fields": [
              {
                "id": 1,
                "name": "users",
                "type": "storage.User",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UserAttributeTuple",
            "fields": [
              {
                "id": 1,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetUsersAttributesResponse",
            "fields": [
              {
                "id": 1,
                "name": "users_attributes",
                "type": "UserAttributeTuple",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "UserService",
            "rpcs": [
              {
                "name": "GetUsers",
                "in_type": "Empty",
                "out_type": "GetUsersResponse"
              },
              {
                "name": "GetUser",
                "in_type": "ResourceByID",
                "out_type": "storage.User"
              },
              {
                "name": "GetUsersAttributes",
                "in_type": "Empty",
                "out_type": "GetUsersAttributesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v1:/:vuln_req_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetVulnerabilityRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "ListVulnerabilityRequestsResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_infos",
                "type": "storage.VulnerabilityRequest",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeferVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "cve",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              },
              {
                "id": 3,
                "name": "scope",
                "type": "storage.VulnerabilityRequest.Scope"
              },
              {
                "id": 4,
                "name": "expires_when_fixed",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "expires_on",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "DeferVulnResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "FalsePositiveVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "cve",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scope",
                "type": "storage.VulnerabilityRequest.Scope"
              },
              {
                "id": 3,
                "name": "comment",
                "type": "string"
              }
            ]
          },
          {
            "name": "FalsePositiveVulnResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "ApproveVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              }
            ]
          },
          {
            "name": "ApproveVulnRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "DenyVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              }
            ]
          },
          {
            "name": "DenyVulnRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "UpdateVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              },
              {
                "id": 3,
                "name": "expiry",
                "type": "storage.RequestExpiry"
              }
            ]
          },
          {
            "name": "UpdateVulnRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "UndoVulnRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "VulnerabilityRequestService",
            "rpcs": [
              {
                "name": "GetVulnerabilityRequest",
                "in_type": "ResourceByID",
                "out_type": "GetVulnerabilityRequestResponse"
              },
              {
                "name": "ListVulnerabilityRequests",
                "in_type": "RawQuery",
                "out_type": "ListVulnerabilityRequestsResponse"
              },
              {
                "name": "DeferVulnerability",
                "in_type": "DeferVulnRequest",
                "out_type": "DeferVulnResponse"
              },
              {
                "name": "FalsePositiveVulnerability",
                "in_type": "FalsePositiveVulnRequest",
                "out_type": "FalsePositiveVulnResponse"
              },
              {
                "name": "ApproveVulnerabilityRequest",
                "in_type": "ApproveVulnRequest",
                "out_type": "ApproveVulnRequestResponse"
              },
              {
                "name": "DenyVulnerabilityRequest",
                "in_type": "DenyVulnRequest",
                "out_type": "DenyVulnRequestResponse"
              },
              {
                "name": "UpdateVulnerabilityRequest",
                "in_type": "UpdateVulnRequest",
                "out_type": "UpdateVulnRequestResponse"
              },
              {
                "name": "UndoVulnerabilityRequest",
                "in_type": "ResourceByID",
                "out_type": "UndoVulnRequestResponse"
              },
              {
                "name": "DeleteVulnerabilityRequest",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "storage/vuln_requests.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:api:/:v2:/:report_configuration_service.proto",
      "def": {
        "enums": [
          {
            "name": "ReportConfiguration.ReportType",
            "enum_fields": [
              {
                "name": "VULNERABILITY"
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.Fixability",
            "enum_fields": [
              {
                "name": "BOTH"
              },
              {
                "name": "FIXABLE",
                "integer": 1
              },
              {
                "name": "NOT_FIXABLE",
                "integer": 2
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.VulnerabilitySeverity",
            "enum_fields": [
              {
                "name": "UNKNOWN_VULNERABILITY_SEVERITY"
              },
              {
                "name": "LOW_VULNERABILITY_SEVERITY",
                "integer": 1
              },
              {
                "name": "MODERATE_VULNERABILITY_SEVERITY",
                "integer": 2
              },
              {
                "name": "IMPORTANT_VULNERABILITY_SEVERITY",
                "integer": 3
              },
              {
                "name": "CRITICAL_VULNERABILITY_SEVERITY",
                "integer": 4
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.ImageType",
            "enum_fields": [
              {
                "name": "DEPLOYED"
              },
              {
                "name": "WATCHED",
                "integer": 1
              }
            ]
          },
          {
            "name": "Schedule.IntervalType",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "DAILY",
                "integer": 1
              },
              {
                "name": "WEEKLY",
                "integer": 2
              },
              {
                "name": "MONTHLY",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ReportConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "ReportType"
              },
              {
                "id": 5,
                "name": "vuln_report_filters",
                "type": "VulnerabilityReportFilters"
              },
              {
                "id": 6,
                "name": "schedule",
                "type": "Schedule"
              },
              {
                "id": 7,
                "name": "resource_scope",
                "type": "ResourceScope"
              },
              {
                "id": 8,
                "name": "notifiers",
                "type": "NotifierConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters",
            "fields": [
              {
                "id": 1,
                "name": "fixability",
                "type": "Fixability"
              },
              {
                "id": 2,
                "name": "severities",
                "type": "VulnerabilitySeverity",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "image_types",
                "type": "ImageType",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "all_vuln",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "last_successful_report",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "start_date",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "Schedule",
            "fields": [
              {
                "id": 1,
                "name": "interval_type",
                "type": "IntervalType"
              },
              {
                "id": 2,
                "name": "hour",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "minute",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "weekly",
                "type": "WeeklyInterval"
              },
              {
                "id": 5,
                "name": "days_of_week",
                "type": "DaysOfWeek"
              },
              {
                "id": 6,
                "name": "days_of_month",
                "type": "DaysOfMonth"
              }
            ],
            "messages": [
              {
                "name": "WeeklyInterval",
                "fields": [
                  {
                    "id": 1,
                    "name": "day",
                    "type": "int32"
                  }
                ]
              },
              {
                "name": "DaysOfWeek",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "DaysOfMonth",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ResourceScope",
            "fields": [
              {
                "id": 1,
                "name": "collection_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NotifierConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "email_config",
                "type": "EmailNotifierConfiguration"
              }
            ]
          },
          {
            "name": "EmailNotifierConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "notifier_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "mailing_lists",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ReportConfigurationService",
            "rpcs": [
              {
                "name": "PostReportConfiguration",
                "in_type": "ReportConfiguration",
                "out_type": "ReportConfiguration"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:annotations.proto",
      "def": {
        "messages": [
          {
            "name": "google.protobuf.MethodOptions",
            "fields": [
              {
                "id": 72295728,
                "name": "http",
                "type": "HttpRule"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/http.proto"
          },
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:auth.proto",
      "def": {
        "messages": [
          {
            "name": "Authentication",
            "fields": [
              {
                "id": 3,
                "name": "rules",
                "type": "AuthenticationRule",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "providers",
                "type": "AuthProvider",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AuthenticationRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "oauth",
                "type": "OAuthRequirements"
              },
              {
                "id": 5,
                "name": "allow_without_credential",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "requirements",
                "type": "AuthRequirement",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "JwtLocation",
            "fields": [
              {
                "id": 1,
                "name": "header",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cookie",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value_prefix",
                "type": "string"
              }
            ]
          },
          {
            "name": "AuthProvider",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "issuer",
                "type": "string"
              },
              {
                "id": 3,
                "name": "jwks_uri",
                "type": "string"
              },
              {
                "id": 4,
                "name": "audiences",
                "type": "string"
              },
              {
                "id": 5,
                "name": "authorization_url",
                "type": "string"
              },
              {
                "id": 6,
                "name": "jwt_locations",
                "type": "JwtLocation",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "OAuthRequirements",
            "fields": [
              {
                "id": 1,
                "name": "canonical_scopes",
                "type": "string"
              }
            ]
          },
          {
            "name": "AuthRequirement",
            "fields": [
              {
                "id": 1,
                "name": "provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "audiences",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:backend.proto",
      "def": {
        "enums": [
          {
            "name": "BackendRule.PathTranslation",
            "enum_fields": [
              {
                "name": "PATH_TRANSLATION_UNSPECIFIED"
              },
              {
                "name": "CONSTANT_ADDRESS",
                "integer": 1
              },
              {
                "name": "APPEND_PATH_TO_ADDRESS",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Backend",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "BackendRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BackendRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "address",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deadline",
                "type": "double"
              },
              {
                "id": 4,
                "name": "min_deadline",
                "type": "double",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 5,
                "name": "operation_deadline",
                "type": "double"
              },
              {
                "id": 6,
                "name": "path_translation",
                "type": "PathTranslation"
              },
              {
                "id": 7,
                "name": "jwt_audience",
                "type": "string"
              },
              {
                "id": 8,
                "name": "disable_auth",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "protocol",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 10,
                  "name": "overrides_by_request_protocol",
                  "type": "BackendRule"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:billing.proto",
      "def": {
        "messages": [
          {
            "name": "Billing",
            "fields": [
              {
                "id": 8,
                "name": "consumer_destinations",
                "type": "BillingDestination",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "BillingDestination",
                "fields": [
                  {
                    "id": 1,
                    "name": "monitored_resource",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "metrics",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:client.proto",
      "def": {
        "enums": [
          {
            "name": "ClientLibraryOrganization",
            "enum_fields": [
              {
                "name": "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED"
              },
              {
                "name": "CLOUD",
                "integer": 1
              },
              {
                "name": "ADS",
                "integer": 2
              },
              {
                "name": "PHOTOS",
                "integer": 3
              },
              {
                "name": "STREET_VIEW",
                "integer": 4
              }
            ]
          },
          {
            "name": "ClientLibraryDestination",
            "enum_fields": [
              {
                "name": "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED"
              },
              {
                "name": "GITHUB",
                "integer": 10
              },
              {
                "name": "PACKAGE_MANAGER",
                "integer": 20
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "google.protobuf.MethodOptions",
            "fields": [
              {
                "id": 1051,
                "name": "method_signature",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "google.protobuf.ServiceOptions",
            "fields": [
              {
                "id": 1049,
                "name": "default_host",
                "type": "string"
              },
              {
                "id": 1050,
                "name": "oauth_scopes",
                "type": "string"
              }
            ]
          },
          {
            "name": "CommonLanguageSettings",
            "fields": [
              {
                "id": 1,
                "name": "reference_docs_uri",
                "type": "string",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 2,
                "name": "destinations",
                "type": "ClientLibraryDestination",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ClientLibrarySettings",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "launch_stage",
                "type": "LaunchStage"
              },
              {
                "id": 3,
                "name": "rest_numeric_enums",
                "type": "bool"
              },
              {
                "id": 21,
                "name": "java_settings",
                "type": "JavaSettings"
              },
              {
                "id": 22,
                "name": "cpp_settings",
                "type": "CppSettings"
              },
              {
                "id": 23,
                "name": "php_settings",
                "type": "PhpSettings"
              },
              {
                "id": 24,
                "name": "python_settings",
                "type": "PythonSettings"
              },
              {
                "id": 25,
                "name": "node_settings",
                "type": "NodeSettings"
              },
              {
                "id": 26,
                "name": "dotnet_settings",
                "type": "DotnetSettings"
              },
              {
                "id": 27,
                "name": "ruby_settings",
                "type": "RubySettings"
              },
              {
                "id": 28,
                "name": "go_settings",
                "type": "GoSettings"
              }
            ]
          },
          {
            "name": "Publishing",
            "fields": [
              {
                "id": 2,
                "name": "method_settings",
                "type": "MethodSettings",
                "is_repeated": true
              },
              {
                "id": 101,
                "name": "new_issue_uri",
                "type": "string"
              },
              {
                "id": 102,
                "name": "documentation_uri",
                "type": "string"
              },
              {
                "id": 103,
                "name": "api_short_name",
                "type": "string"
              },
              {
                "id": 104,
                "name": "github_label",
                "type": "string"
              },
              {
                "id": 105,
                "name": "codeowner_github_teams",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 106,
                "name": "doc_tag_prefix",
                "type": "string"
              },
              {
                "id": 107,
                "name": "organization",
                "type": "ClientLibraryOrganization"
              },
              {
                "id": 109,
                "name": "library_settings",
                "type": "ClientLibrarySettings",
                "is_repeated": true
              },
              {
                "id": 110,
                "name": "proto_reference_documentation_uri",
                "type": "string"
              }
            ]
          },
          {
            "name": "JavaSettings",
            "fields": [
              {
                "id": 1,
                "name": "library_package",
                "type": "string"
              },
              {
                "id": 3,
                "name": "common",
                "type": "CommonLanguageSettings"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "service_class_names",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "CppSettings",
            "fields": [
              {
                "id": 1,
                "name": "common",
                "type": "CommonLanguageSettings"
              }
            ]
          },
          {
            "name": "PhpSettings",
            "fields": [
              {
                "id": 1,
                "name": "common",
                "type": "CommonLanguageSettings"
              }
            ]
          },
          {
            "name": "PythonSettings",
            "fields": [
              {
                "id": 1,
                "name": "common",
                "type": "CommonLanguageSettings"
              }
            ]
          },
          {
            "name": "NodeSettings",
            "fields": [
              {
                "id": 1,
                "name": "common",
                "type": "CommonLanguageSettings"
              }
            ]
          },
          {
            "name": "DotnetSettings",
            "fields": [
              {
                "id": 1,
                "name": "common",
                "type": "CommonLanguageSettings"
              }
            ]
          },
          {
            "name": "RubySettings",
            "fields": [
              {
                "id": 1,
                "name": "common",
                "type": "CommonLanguageSettings"
              }
            ]
          },
          {
            "name": "GoSettings",
            "fields": [
              {
                "id": 1,
                "name": "common",
                "type": "CommonLanguageSettings"
              }
            ]
          },
          {
            "name": "MethodSettings",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "long_running",
                "type": "LongRunning"
              }
            ],
            "messages": [
              {
                "name": "LongRunning",
                "fields": [
                  {
                    "id": 1,
                    "name": "initial_poll_delay",
                    "type": "google.protobuf.Duration"
                  },
                  {
                    "id": 2,
                    "name": "poll_delay_multiplier",
                    "type": "float"
                  },
                  {
                    "id": 3,
                    "name": "max_poll_delay",
                    "type": "google.protobuf.Duration"
                  },
                  {
                    "id": 4,
                    "name": "total_poll_timeout",
                    "type": "google.protobuf.Duration"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/launch_stage.proto"
          },
          {
            "path": "google/protobuf/descriptor.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:config_change.proto",
      "def": {
        "enums": [
          {
            "name": "ChangeType",
            "enum_fields": [
              {
                "name": "CHANGE_TYPE_UNSPECIFIED"
              },
              {
                "name": "ADDED",
                "integer": 1
              },
              {
                "name": "REMOVED",
                "integer": 2
              },
              {
                "name": "MODIFIED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ConfigChange",
            "fields": [
              {
                "id": 1,
                "name": "element",
                "type": "string"
              },
              {
                "id": 2,
                "name": "old_value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "new_value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "change_type",
                "type": "ChangeType"
              },
              {
                "id": 5,
                "name": "advices",
                "type": "Advice",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Advice",
            "fields": [
              {
                "id": 2,
                "name": "description",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:consumer.proto",
      "def": {
        "enums": [
          {
            "name": "Property.PropertyType",
            "enum_fields": [
              {
                "name": "UNSPECIFIED"
              },
              {
                "name": "INT64",
                "integer": 1
              },
              {
                "name": "BOOL",
                "integer": 2
              },
              {
                "name": "STRING",
                "integer": 3
              },
              {
                "name": "DOUBLE",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ProjectProperties",
            "fields": [
              {
                "id": 1,
                "name": "properties",
                "type": "Property",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Property",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "PropertyType"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:context.proto",
      "def": {
        "messages": [
          {
            "name": "Context",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "ContextRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ContextRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "requested",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "provided",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "allowed_request_extensions",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "allowed_response_extensions",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:control.proto",
      "def": {
        "messages": [
          {
            "name": "Control",
            "fields": [
              {
                "id": 1,
                "name": "environment",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:distribution.proto",
      "def": {
        "messages": [
          {
            "name": "Distribution",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "mean",
                "type": "double"
              },
              {
                "id": 3,
                "name": "sum_of_squared_deviation",
                "type": "double"
              },
              {
                "id": 4,
                "name": "range",
                "type": "Range"
              },
              {
                "id": 6,
                "name": "bucket_options",
                "type": "BucketOptions"
              },
              {
                "id": 7,
                "name": "bucket_counts",
                "type": "int64",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "exemplars",
                "type": "Exemplar",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Range",
                "fields": [
                  {
                    "id": 1,
                    "name": "min",
                    "type": "double"
                  },
                  {
                    "id": 2,
                    "name": "max",
                    "type": "double"
                  }
                ]
              },
              {
                "name": "BucketOptions",
                "fields": [
                  {
                    "id": 1,
                    "name": "linear_buckets",
                    "type": "Linear"
                  },
                  {
                    "id": 2,
                    "name": "exponential_buckets",
                    "type": "Exponential"
                  },
                  {
                    "id": 3,
                    "name": "explicit_buckets",
                    "type": "Explicit"
                  }
                ],
                "messages": [
                  {
                    "name": "Linear",
                    "fields": [
                      {
                        "id": 1,
                        "name": "num_finite_buckets",
                        "type": "int32"
                      },
                      {
                        "id": 2,
                        "name": "width",
                        "type": "double"
                      },
                      {
                        "id": 3,
                        "name": "offset",
                        "type": "double"
                      }
                    ]
                  },
                  {
                    "name": "Exponential",
                    "fields": [
                      {
                        "id": 1,
                        "name": "num_finite_buckets",
                        "type": "int32"
                      },
                      {
                        "id": 2,
                        "name": "growth_factor",
                        "type": "double"
                      },
                      {
                        "id": 3,
                        "name": "scale",
                        "type": "double"
                      }
                    ]
                  },
                  {
                    "name": "Explicit",
                    "fields": [
                      {
                        "id": 1,
                        "name": "bounds",
                        "type": "double",
                        "is_repeated": true
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Exemplar",
                "fields": [
                  {
                    "id": 1,
                    "name": "value",
                    "type": "double"
                  },
                  {
                    "id": 2,
                    "name": "timestamp",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 3,
                    "name": "attachments",
                    "type": "google.protobuf.Any",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:documentation.proto",
      "def": {
        "messages": [
          {
            "name": "Documentation",
            "fields": [
              {
                "id": 1,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 5,
                "name": "pages",
                "type": "Page",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "rules",
                "type": "DocumentationRule",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "documentation_root_url",
                "type": "string"
              },
              {
                "id": 6,
                "name": "service_root_url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "overview",
                "type": "string"
              }
            ]
          },
          {
            "name": "DocumentationRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "description",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deprecation_description",
                "type": "string"
              }
            ]
          },
          {
            "name": "Page",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "content",
                "type": "string"
              },
              {
                "id": 3,
                "name": "subpages",
                "type": "Page",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:endpoint.proto",
      "def": {
        "messages": [
          {
            "name": "Endpoint",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "aliases",
                "type": "string",
                "is_repeated": true,
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 101,
                "name": "target",
                "type": "string"
              },
              {
                "id": 5,
                "name": "allow_cors",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:error_reason.proto",
      "def": {
        "enums": [
          {
            "name": "ErrorReason",
            "enum_fields": [
              {
                "name": "ERROR_REASON_UNSPECIFIED"
              },
              {
                "name": "SERVICE_DISABLED",
                "integer": 1
              },
              {
                "name": "BILLING_DISABLED",
                "integer": 2
              },
              {
                "name": "API_KEY_INVALID",
                "integer": 3
              },
              {
                "name": "API_KEY_SERVICE_BLOCKED",
                "integer": 4
              },
              {
                "name": "API_KEY_HTTP_REFERRER_BLOCKED",
                "integer": 7
              },
              {
                "name": "API_KEY_IP_ADDRESS_BLOCKED",
                "integer": 8
              },
              {
                "name": "API_KEY_ANDROID_APP_BLOCKED",
                "integer": 9
              },
              {
                "name": "API_KEY_IOS_APP_BLOCKED",
                "integer": 13
              },
              {
                "name": "RATE_LIMIT_EXCEEDED",
                "integer": 5
              },
              {
                "name": "RESOURCE_QUOTA_EXCEEDED",
                "integer": 6
              },
              {
                "name": "LOCATION_TAX_POLICY_VIOLATED",
                "integer": 10
              },
              {
                "name": "USER_PROJECT_DENIED",
                "integer": 11
              },
              {
                "name": "CONSUMER_SUSPENDED",
                "integer": 12
              },
              {
                "name": "CONSUMER_INVALID",
                "integer": 14
              },
              {
                "name": "SECURITY_POLICY_VIOLATED",
                "integer": 15
              },
              {
                "name": "ACCESS_TOKEN_EXPIRED",
                "integer": 16
              },
              {
                "name": "ACCESS_TOKEN_SCOPE_INSUFFICIENT",
                "integer": 17
              },
              {
                "name": "ACCOUNT_STATE_INVALID",
                "integer": 18
              },
              {
                "name": "ACCESS_TOKEN_TYPE_UNSUPPORTED",
                "integer": 19
              },
              {
                "name": "CREDENTIALS_MISSING",
                "integer": 20
              },
              {
                "name": "RESOURCE_PROJECT_INVALID",
                "integer": 21
              },
              {
                "name": "SESSION_COOKIE_INVALID",
                "integer": 23
              },
              {
                "name": "USER_BLOCKED_BY_ADMIN",
                "integer": 24
              },
              {
                "name": "RESOURCE_USAGE_RESTRICTION_VIOLATED",
                "integer": 25
              },
              {
                "name": "SYSTEM_PARAMETER_UNSUPPORTED",
                "integer": 26
              },
              {
                "name": "ORG_RESTRICTION_VIOLATION",
                "integer": 27
              },
              {
                "name": "ORG_RESTRICTION_HEADER_INVALID",
                "integer": 28
              },
              {
                "name": "SERVICE_NOT_VISIBLE",
                "integer": 29
              },
              {
                "name": "GCP_SUSPENDED",
                "integer": 30
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:field_behavior.proto",
      "def": {
        "enums": [
          {
            "name": "FieldBehavior",
            "enum_fields": [
              {
                "name": "FIELD_BEHAVIOR_UNSPECIFIED"
              },
              {
                "name": "OPTIONAL",
                "integer": 1
              },
              {
                "name": "REQUIRED",
                "integer": 2
              },
              {
                "name": "OUTPUT_ONLY",
                "integer": 3
              },
              {
                "name": "INPUT_ONLY",
                "integer": 4
              },
              {
                "name": "IMMUTABLE",
                "integer": 5
              },
              {
                "name": "UNORDERED_LIST",
                "integer": 6
              },
              {
                "name": "NON_EMPTY_DEFAULT",
                "integer": 7
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "google.protobuf.FieldOptions",
            "fields": [
              {
                "id": 1052,
                "name": "field_behavior",
                "type": "google.api.FieldBehavior",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:http.proto",
      "def": {
        "messages": [
          {
            "name": "Http",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "HttpRule",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "fully_decode_reserved_expansion",
                "type": "bool"
              }
            ]
          },
          {
            "name": "HttpRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "get",
                "type": "string"
              },
              {
                "id": 3,
                "name": "put",
                "type": "string"
              },
              {
                "id": 4,
                "name": "post",
                "type": "string"
              },
              {
                "id": 5,
                "name": "delete",
                "type": "string"
              },
              {
                "id": 6,
                "name": "patch",
                "type": "string"
              },
              {
                "id": 8,
                "name": "custom",
                "type": "CustomHttpPattern"
              },
              {
                "id": 7,
                "name": "body",
                "type": "string"
              },
              {
                "id": 12,
                "name": "response_body",
                "type": "string"
              },
              {
                "id": 11,
                "name": "additional_bindings",
                "type": "HttpRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CustomHttpPattern",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:httpbody.proto",
      "def": {
        "messages": [
          {
            "name": "HttpBody",
            "fields": [
              {
                "id": 1,
                "name": "content_type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "data",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "extensions",
                "type": "google.protobuf.Any",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:label.proto",
      "def": {
        "enums": [
          {
            "name": "LabelDescriptor.ValueType",
            "enum_fields": [
              {
                "name": "STRING"
              },
              {
                "name": "BOOL",
                "integer": 1
              },
              {
                "name": "INT64",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "LabelDescriptor",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value_type",
                "type": "ValueType"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:launch_stage.proto",
      "def": {
        "enums": [
          {
            "name": "LaunchStage",
            "enum_fields": [
              {
                "name": "LAUNCH_STAGE_UNSPECIFIED"
              },
              {
                "name": "UNIMPLEMENTED",
                "integer": 6
              },
              {
                "name": "PRELAUNCH",
                "integer": 7
              },
              {
                "name": "EARLY_ACCESS",
                "integer": 1
              },
              {
                "name": "ALPHA",
                "integer": 2
              },
              {
                "name": "BETA",
                "integer": 3
              },
              {
                "name": "GA",
                "integer": 4
              },
              {
                "name": "DEPRECATED",
                "integer": 5
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:log.proto",
      "def": {
        "messages": [
          {
            "name": "LogDescriptor",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "labels",
                "type": "LabelDescriptor",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "display_name",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/label.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:logging.proto",
      "def": {
        "messages": [
          {
            "name": "Logging",
            "fields": [
              {
                "id": 1,
                "name": "producer_destinations",
                "type": "LoggingDestination",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "consumer_destinations",
                "type": "LoggingDestination",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "LoggingDestination",
                "fields": [
                  {
                    "id": 3,
                    "name": "monitored_resource",
                    "type": "string"
                  },
                  {
                    "id": 1,
                    "name": "logs",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:metric.proto",
      "def": {
        "enums": [
          {
            "name": "MetricDescriptor.MetricKind",
            "enum_fields": [
              {
                "name": "METRIC_KIND_UNSPECIFIED"
              },
              {
                "name": "GAUGE",
                "integer": 1
              },
              {
                "name": "DELTA",
                "integer": 2
              },
              {
                "name": "CUMULATIVE",
                "integer": 3
              }
            ]
          },
          {
            "name": "MetricDescriptor.ValueType",
            "enum_fields": [
              {
                "name": "VALUE_TYPE_UNSPECIFIED"
              },
              {
                "name": "BOOL",
                "integer": 1
              },
              {
                "name": "INT64",
                "integer": 2
              },
              {
                "name": "DOUBLE",
                "integer": 3
              },
              {
                "name": "STRING",
                "integer": 4
              },
              {
                "name": "DISTRIBUTION",
                "integer": 5
              },
              {
                "name": "MONEY",
                "integer": 6
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "MetricDescriptor",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 8,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "labels",
                "type": "LabelDescriptor",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "metric_kind",
                "type": "MetricKind"
              },
              {
                "id": 4,
                "name": "value_type",
                "type": "ValueType"
              },
              {
                "id": 5,
                "name": "unit",
                "type": "string"
              },
              {
                "id": 6,
                "name": "description",
                "type": "string"
              },
              {
                "id": 7,
                "name": "display_name",
                "type": "string"
              },
              {
                "id": 10,
                "name": "metadata",
                "type": "MetricDescriptorMetadata"
              },
              {
                "id": 12,
                "name": "launch_stage",
                "type": "LaunchStage"
              },
              {
                "id": 13,
                "name": "monitored_resource_types",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "MetricDescriptorMetadata",
                "fields": [
                  {
                    "id": 1,
                    "name": "launch_stage",
                    "type": "LaunchStage",
                    "options": [
                      {
                        "name": "deprecated",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "sample_period",
                    "type": "google.protobuf.Duration"
                  },
                  {
                    "id": 3,
                    "name": "ingest_delay",
                    "type": "google.protobuf.Duration"
                  }
                ]
              }
            ]
          },
          {
            "name": "Metric",
            "fields": [
              {
                "id": 3,
                "name": "type",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/label.proto"
          },
          {
            "path": "google/api/launch_stage.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:monitored_resource.proto",
      "def": {
        "messages": [
          {
            "name": "MonitoredResourceDescriptor",
            "fields": [
              {
                "id": 5,
                "name": "name",
                "type": "string"
              },
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "display_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "labels",
                "type": "LabelDescriptor",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "launch_stage",
                "type": "LaunchStage"
              }
            ]
          },
          {
            "name": "MonitoredResource",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "MonitoredResourceMetadata",
            "fields": [
              {
                "id": 1,
                "name": "system_labels",
                "type": "google.protobuf.Struct"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "user_labels",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/label.proto"
          },
          {
            "path": "google/api/launch_stage.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:monitoring.proto",
      "def": {
        "messages": [
          {
            "name": "Monitoring",
            "fields": [
              {
                "id": 1,
                "name": "producer_destinations",
                "type": "MonitoringDestination",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "consumer_destinations",
                "type": "MonitoringDestination",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "MonitoringDestination",
                "fields": [
                  {
                    "id": 1,
                    "name": "monitored_resource",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "metrics",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:quota.proto",
      "def": {
        "messages": [
          {
            "name": "Quota",
            "fields": [
              {
                "id": 3,
                "name": "limits",
                "type": "QuotaLimit",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "metric_rules",
                "type": "MetricRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MetricRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "metric_costs",
                  "type": "int64"
                }
              }
            ]
          },
          {
            "name": "QuotaLimit",
            "fields": [
              {
                "id": 6,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "description",
                "type": "string"
              },
              {
                "id": 3,
                "name": "default_limit",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "max_limit",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "free_tier",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "duration",
                "type": "string"
              },
              {
                "id": 8,
                "name": "metric",
                "type": "string"
              },
              {
                "id": 9,
                "name": "unit",
                "type": "string"
              },
              {
                "id": 12,
                "name": "display_name",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 10,
                  "name": "values",
                  "type": "int64"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:resource.proto",
      "def": {
        "enums": [
          {
            "name": "ResourceDescriptor.History",
            "enum_fields": [
              {
                "name": "HISTORY_UNSPECIFIED"
              },
              {
                "name": "ORIGINALLY_SINGLE_PATTERN",
                "integer": 1
              },
              {
                "name": "FUTURE_MULTI_PATTERN",
                "integer": 2
              }
            ]
          },
          {
            "name": "ResourceDescriptor.Style",
            "enum_fields": [
              {
                "name": "STYLE_UNSPECIFIED"
              },
              {
                "name": "DECLARATIVE_FRIENDLY",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "google.protobuf.FieldOptions",
            "fields": [
              {
                "id": 1055,
                "name": "resource_reference",
                "type": "google.api.ResourceReference"
              }
            ]
          },
          {
            "name": "google.protobuf.FileOptions",
            "fields": [
              {
                "id": 1053,
                "name": "resource_definition",
                "type": "google.api.ResourceDescriptor",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "google.protobuf.MessageOptions",
            "fields": [
              {
                "id": 1053,
                "name": "resource",
                "type": "google.api.ResourceDescriptor"
              }
            ]
          },
          {
            "name": "ResourceDescriptor",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "pattern",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "name_field",
                "type": "string"
              },
              {
                "id": 4,
                "name": "history",
                "type": "History"
              },
              {
                "id": 5,
                "name": "plural",
                "type": "string"
              },
              {
                "id": 6,
                "name": "singular",
                "type": "string"
              },
              {
                "id": 10,
                "name": "style",
                "type": "Style",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ResourceReference",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "child_type",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:routing.proto",
      "def": {
        "messages": [
          {
            "name": "google.protobuf.MethodOptions",
            "fields": [
              {
                "id": 72295729,
                "name": "routing",
                "type": "google.api.RoutingRule"
              }
            ]
          },
          {
            "name": "RoutingRule",
            "fields": [
              {
                "id": 2,
                "name": "routing_parameters",
                "type": "RoutingParameter",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RoutingParameter",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path_template",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:service.proto",
      "def": {
        "messages": [
          {
            "name": "Service",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "title",
                "type": "string"
              },
              {
                "id": 22,
                "name": "producer_project_id",
                "type": "string"
              },
              {
                "id": 33,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "apis",
                "type": "google.protobuf.Api",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "types",
                "type": "google.protobuf.Type",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "enums",
                "type": "google.protobuf.Enum",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "documentation",
                "type": "Documentation"
              },
              {
                "id": 8,
                "name": "backend",
                "type": "Backend"
              },
              {
                "id": 9,
                "name": "http",
                "type": "Http"
              },
              {
                "id": 10,
                "name": "quota",
                "type": "Quota"
              },
              {
                "id": 11,
                "name": "authentication",
                "type": "Authentication"
              },
              {
                "id": 12,
                "name": "context",
                "type": "Context"
              },
              {
                "id": 15,
                "name": "usage",
                "type": "Usage"
              },
              {
                "id": 18,
                "name": "endpoints",
                "type": "Endpoint",
                "is_repeated": true
              },
              {
                "id": 21,
                "name": "control",
                "type": "Control"
              },
              {
                "id": 23,
                "name": "logs",
                "type": "LogDescriptor",
                "is_repeated": true
              },
              {
                "id": 24,
                "name": "metrics",
                "type": "MetricDescriptor",
                "is_repeated": true
              },
              {
                "id": 25,
                "name": "monitored_resources",
                "type": "MonitoredResourceDescriptor",
                "is_repeated": true
              },
              {
                "id": 26,
                "name": "billing",
                "type": "Billing"
              },
              {
                "id": 27,
                "name": "logging",
                "type": "Logging"
              },
              {
                "id": 28,
                "name": "monitoring",
                "type": "Monitoring"
              },
              {
                "id": 29,
                "name": "system_parameters",
                "type": "SystemParameters"
              },
              {
                "id": 37,
                "name": "source_info",
                "type": "SourceInfo"
              },
              {
                "id": 45,
                "name": "publishing",
                "type": "Publishing"
              },
              {
                "id": 20,
                "name": "config_version",
                "type": "google.protobuf.UInt32Value"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/auth.proto"
          },
          {
            "path": "google/api/backend.proto"
          },
          {
            "path": "google/api/billing.proto"
          },
          {
            "path": "google/api/client.proto"
          },
          {
            "path": "google/api/context.proto"
          },
          {
            "path": "google/api/control.proto"
          },
          {
            "path": "google/api/documentation.proto"
          },
          {
            "path": "google/api/endpoint.proto"
          },
          {
            "path": "google/api/http.proto"
          },
          {
            "path": "google/api/log.proto"
          },
          {
            "path": "google/api/logging.proto"
          },
          {
            "path": "google/api/metric.proto"
          },
          {
            "path": "google/api/monitored_resource.proto"
          },
          {
            "path": "google/api/monitoring.proto"
          },
          {
            "path": "google/api/quota.proto"
          },
          {
            "path": "google/api/source_info.proto"
          },
          {
            "path": "google/api/system_parameter.proto"
          },
          {
            "path": "google/api/usage.proto"
          },
          {
            "path": "google/protobuf/api.proto"
          },
          {
            "path": "google/protobuf/type.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:source_info.proto",
      "def": {
        "messages": [
          {
            "name": "SourceInfo",
            "fields": [
              {
                "id": 1,
                "name": "source_files",
                "type": "google.protobuf.Any",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:system_parameter.proto",
      "def": {
        "messages": [
          {
            "name": "SystemParameters",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "SystemParameterRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SystemParameterRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parameters",
                "type": "SystemParameter",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SystemParameter",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "http_header",
                "type": "string"
              },
              {
                "id": 3,
                "name": "url_query_parameter",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:usage.proto",
      "def": {
        "messages": [
          {
            "name": "Usage",
            "fields": [
              {
                "id": 1,
                "name": "requirements",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "rules",
                "type": "UsageRule",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "producer_notification_channel",
                "type": "string"
              }
            ]
          },
          {
            "name": "UsageRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "allow_unregistered_calls",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "skip_service_control",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:api:/:visibility.proto",
      "def": {
        "messages": [
          {
            "name": "google.protobuf.EnumOptions",
            "fields": [
              {
                "id": 72295727,
                "name": "enum_visibility",
                "type": "google.api.VisibilityRule"
              }
            ]
          },
          {
            "name": "google.protobuf.EnumValueOptions",
            "fields": [
              {
                "id": 72295727,
                "name": "value_visibility",
                "type": "google.api.VisibilityRule"
              }
            ]
          },
          {
            "name": "google.protobuf.FieldOptions",
            "fields": [
              {
                "id": 72295727,
                "name": "field_visibility",
                "type": "google.api.VisibilityRule"
              }
            ]
          },
          {
            "name": "google.protobuf.MessageOptions",
            "fields": [
              {
                "id": 72295727,
                "name": "message_visibility",
                "type": "google.api.VisibilityRule"
              }
            ]
          },
          {
            "name": "google.protobuf.MethodOptions",
            "fields": [
              {
                "id": 72295727,
                "name": "method_visibility",
                "type": "google.api.VisibilityRule"
              }
            ]
          },
          {
            "name": "google.protobuf.ServiceOptions",
            "fields": [
              {
                "id": 72295727,
                "name": "api_visibility",
                "type": "google.api.VisibilityRule"
              }
            ]
          },
          {
            "name": "Visibility",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "VisibilityRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "VisibilityRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "restriction",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:cloud:/:audit:/:audit_log.proto",
      "def": {
        "enums": [
          {
            "name": "ViolationInfo.PolicyType",
            "enum_fields": [
              {
                "name": "POLICY_TYPE_UNSPECIFIED"
              },
              {
                "name": "BOOLEAN_CONSTRAINT",
                "integer": 1
              },
              {
                "name": "LIST_CONSTRAINT",
                "integer": 2
              },
              {
                "name": "CUSTOM_CONSTRAINT",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "AuditLog",
            "fields": [
              {
                "id": 7,
                "name": "service_name",
                "type": "string"
              },
              {
                "id": 8,
                "name": "method_name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "resource_name",
                "type": "string"
              },
              {
                "id": 20,
                "name": "resource_location",
                "type": "ResourceLocation"
              },
              {
                "id": 19,
                "name": "resource_original_state",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 12,
                "name": "num_response_items",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "status",
                "type": "google.rpc.Status"
              },
              {
                "id": 3,
                "name": "authentication_info",
                "type": "AuthenticationInfo"
              },
              {
                "id": 9,
                "name": "authorization_info",
                "type": "AuthorizationInfo",
                "is_repeated": true
              },
              {
                "id": 25,
                "name": "policy_violation_info",
                "type": "PolicyViolationInfo"
              },
              {
                "id": 4,
                "name": "request_metadata",
                "type": "RequestMetadata"
              },
              {
                "id": 16,
                "name": "request",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 17,
                "name": "response",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 18,
                "name": "metadata",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 15,
                "name": "service_data",
                "type": "google.protobuf.Any",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              }
            ]
          },
          {
            "name": "AuthenticationInfo",
            "fields": [
              {
                "id": 1,
                "name": "principal_email",
                "type": "string"
              },
              {
                "id": 2,
                "name": "authority_selector",
                "type": "string"
              },
              {
                "id": 4,
                "name": "third_party_principal",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 5,
                "name": "service_account_key_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "service_account_delegation_info",
                "type": "ServiceAccountDelegationInfo",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "principal_subject",
                "type": "string"
              }
            ]
          },
          {
            "name": "AuthorizationInfo",
            "fields": [
              {
                "id": 1,
                "name": "resource",
                "type": "string"
              },
              {
                "id": 2,
                "name": "permission",
                "type": "string"
              },
              {
                "id": 3,
                "name": "granted",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "resource_attributes",
                "type": "google.rpc.context.AttributeContext.Resource"
              }
            ]
          },
          {
            "name": "RequestMetadata",
            "fields": [
              {
                "id": 1,
                "name": "caller_ip",
                "type": "string"
              },
              {
                "id": 2,
                "name": "caller_supplied_user_agent",
                "type": "string"
              },
              {
                "id": 3,
                "name": "caller_network",
                "type": "string"
              },
              {
                "id": 7,
                "name": "request_attributes",
                "type": "google.rpc.context.AttributeContext.Request"
              },
              {
                "id": 8,
                "name": "destination_attributes",
                "type": "google.rpc.context.AttributeContext.Peer"
              }
            ]
          },
          {
            "name": "ResourceLocation",
            "fields": [
              {
                "id": 1,
                "name": "current_locations",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "original_locations",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServiceAccountDelegationInfo",
            "fields": [
              {
                "id": 3,
                "name": "principal_subject",
                "type": "string"
              },
              {
                "id": 1,
                "name": "first_party_principal",
                "type": "FirstPartyPrincipal"
              },
              {
                "id": 2,
                "name": "third_party_principal",
                "type": "ThirdPartyPrincipal"
              }
            ],
            "messages": [
              {
                "name": "FirstPartyPrincipal",
                "fields": [
                  {
                    "id": 1,
                    "name": "principal_email",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "service_metadata",
                    "type": "google.protobuf.Struct"
                  }
                ]
              },
              {
                "name": "ThirdPartyPrincipal",
                "fields": [
                  {
                    "id": 1,
                    "name": "third_party_claims",
                    "type": "google.protobuf.Struct"
                  }
                ]
              }
            ]
          },
          {
            "name": "PolicyViolationInfo",
            "fields": [
              {
                "id": 1,
                "name": "org_policy_violation_info",
                "type": "OrgPolicyViolationInfo"
              }
            ]
          },
          {
            "name": "OrgPolicyViolationInfo",
            "fields": [
              {
                "id": 1,
                "name": "payload",
                "type": "google.protobuf.Struct",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "OPTIONAL"
                  }
                ]
              },
              {
                "id": 2,
                "name": "resource_type",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "OPTIONAL"
                  }
                ]
              },
              {
                "id": 4,
                "name": "violation_info",
                "type": "ViolationInfo",
                "is_repeated": true,
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "OPTIONAL"
                  }
                ]
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "resource_tags",
                  "type": "string",
                  "options": [
                    {
                      "name": "(google.api.field_behavior)",
                      "value": "OPTIONAL"
                    }
                  ]
                }
              }
            ]
          },
          {
            "name": "ViolationInfo",
            "fields": [
              {
                "id": 1,
                "name": "constraint",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "OPTIONAL"
                  }
                ]
              },
              {
                "id": 2,
                "name": "error_message",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "OPTIONAL"
                  }
                ]
              },
              {
                "id": 3,
                "name": "checked_value",
                "type": "string",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "OPTIONAL"
                  }
                ]
              },
              {
                "id": 4,
                "name": "policy_type",
                "type": "PolicyType",
                "options": [
                  {
                    "name": "(google.api.field_behavior)",
                    "value": "OPTIONAL"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/field_behavior.proto"
          },
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          },
          {
            "path": "google/rpc/context/attribute_context.proto"
          },
          {
            "path": "google/rpc/status.proto"
          }
        ],
        "package": {
          "name": "google.cloud.audit"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:cloud:/:extended_operations.proto",
      "def": {
        "enums": [
          {
            "name": "OperationResponseMapping",
            "enum_fields": [
              {
                "name": "UNDEFINED"
              },
              {
                "name": "NAME",
                "integer": 1
              },
              {
                "name": "STATUS",
                "integer": 2
              },
              {
                "name": "ERROR_CODE",
                "integer": 3
              },
              {
                "name": "ERROR_MESSAGE",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "google.protobuf.FieldOptions",
            "fields": [
              {
                "id": 1149,
                "name": "operation_field",
                "type": "OperationResponseMapping"
              },
              {
                "id": 1150,
                "name": "operation_request_field",
                "type": "string"
              },
              {
                "id": 1151,
                "name": "operation_response_field",
                "type": "string"
              }
            ]
          },
          {
            "name": "google.protobuf.MethodOptions",
            "fields": [
              {
                "id": 1249,
                "name": "operation_service",
                "type": "string"
              },
              {
                "id": 1250,
                "name": "operation_polling_method",
                "type": "bool"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.cloud"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:geo:/:type:/:viewport.proto",
      "def": {
        "messages": [
          {
            "name": "Viewport",
            "fields": [
              {
                "id": 1,
                "name": "low",
                "type": "google.type.LatLng"
              },
              {
                "id": 2,
                "name": "high",
                "type": "google.type.LatLng"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/type/latlng.proto"
          }
        ],
        "package": {
          "name": "google.geo.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:logging:/:type:/:http_request.proto",
      "def": {
        "messages": [
          {
            "name": "HttpRequest",
            "fields": [
              {
                "id": 1,
                "name": "request_method",
                "type": "string"
              },
              {
                "id": 2,
                "name": "request_url",
                "type": "string"
              },
              {
                "id": 3,
                "name": "request_size",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "status",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "response_size",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "user_agent",
                "type": "string"
              },
              {
                "id": 7,
                "name": "remote_ip",
                "type": "string"
              },
              {
                "id": 13,
                "name": "server_ip",
                "type": "string"
              },
              {
                "id": 8,
                "name": "referer",
                "type": "string"
              },
              {
                "id": 14,
                "name": "latency",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 11,
                "name": "cache_lookup",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "cache_hit",
                "type": "bool"
              },
              {
                "id": 10,
                "name": "cache_validated_with_origin_server",
                "type": "bool"
              },
              {
                "id": 12,
                "name": "cache_fill_bytes",
                "type": "int64"
              },
              {
                "id": 15,
                "name": "protocol",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "google.logging.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:logging:/:type:/:log_severity.proto",
      "def": {
        "enums": [
          {
            "name": "LogSeverity",
            "enum_fields": [
              {
                "name": "DEFAULT"
              },
              {
                "name": "DEBUG",
                "integer": 100
              },
              {
                "name": "INFO",
                "integer": 200
              },
              {
                "name": "NOTICE",
                "integer": 300
              },
              {
                "name": "WARNING",
                "integer": 400
              },
              {
                "name": "ERROR",
                "integer": 500
              },
              {
                "name": "CRITICAL",
                "integer": 600
              },
              {
                "name": "ALERT",
                "integer": 700
              },
              {
                "name": "EMERGENCY",
                "integer": 800
              }
            ]
          }
        ],
        "package": {
          "name": "google.logging.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:longrunning:/:operations.proto",
      "def": {
        "messages": [
          {
            "name": "google.protobuf.MethodOptions",
            "fields": [
              {
                "id": 1049,
                "name": "operation_info",
                "type": "google.longrunning.OperationInfo"
              }
            ]
          },
          {
            "name": "Operation",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "metadata",
                "type": "google.protobuf.Any"
              },
              {
                "id": 3,
                "name": "done",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "error",
                "type": "google.rpc.Status"
              },
              {
                "id": 5,
                "name": "response",
                "type": "google.protobuf.Any"
              }
            ]
          },
          {
            "name": "GetOperationRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListOperationsRequest",
            "fields": [
              {
                "id": 4,
                "name": "name",
                "type": "string"
              },
              {
                "id": 1,
                "name": "filter",
                "type": "string"
              },
              {
                "id": 2,
                "name": "page_size",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "page_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListOperationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "operations",
                "type": "Operation",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "next_page_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "CancelOperationRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeleteOperationRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "WaitOperationRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "timeout",
                "type": "google.protobuf.Duration"
              }
            ]
          },
          {
            "name": "OperationInfo",
            "fields": [
              {
                "id": 1,
                "name": "response_type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "metadata_type",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "Operations",
            "rpcs": [
              {
                "name": "ListOperations",
                "in_type": "ListOperationsRequest",
                "out_type": "ListOperationsResponse"
              },
              {
                "name": "GetOperation",
                "in_type": "GetOperationRequest",
                "out_type": "Operation"
              },
              {
                "name": "DeleteOperation",
                "in_type": "DeleteOperationRequest",
                "out_type": "google.protobuf.Empty"
              },
              {
                "name": "CancelOperation",
                "in_type": "CancelOperationRequest",
                "out_type": "google.protobuf.Empty"
              },
              {
                "name": "WaitOperation",
                "in_type": "WaitOperationRequest",
                "out_type": "Operation"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/api/client.proto"
          },
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/empty.proto"
          },
          {
            "path": "google/rpc/status.proto"
          },
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.longrunning"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:protobuf:/:any.proto",
      "def": {
        "messages": [
          {
            "name": "Any",
            "fields": [
              {
                "id": 1,
                "name": "type_url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:protobuf:/:api.proto",
      "def": {
        "messages": [
          {
            "name": "Api",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "methods",
                "type": "Method",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "source_context",
                "type": "SourceContext"
              },
              {
                "id": 6,
                "name": "mixins",
                "type": "Mixin",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "Method",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "request_type_url",
                "type": "string"
              },
              {
                "id": 3,
                "name": "request_streaming",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "response_type_url",
                "type": "string"
              },
              {
                "id": 5,
                "name": "response_streaming",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "Mixin",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "root",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/source_context.proto"
          },
          {
            "path": "google/protobuf/type.proto"
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:protobuf:/:descriptor.proto",
      "def": {
        "enums": [
          {
            "name": "FieldDescriptorProto.Type",
            "enum_fields": [
              {
                "name": "TYPE_DOUBLE",
                "integer": 1
              },
              {
                "name": "TYPE_FLOAT",
                "integer": 2
              },
              {
                "name": "TYPE_INT64",
                "integer": 3
              },
              {
                "name": "TYPE_UINT64",
                "integer": 4
              },
              {
                "name": "TYPE_INT32",
                "integer": 5
              },
              {
                "name": "TYPE_FIXED64",
                "integer": 6
              },
              {
                "name": "TYPE_FIXED32",
                "integer": 7
              },
              {
                "name": "TYPE_BOOL",
                "integer": 8
              },
              {
                "name": "TYPE_STRING",
                "integer": 9
              },
              {
                "name": "TYPE_GROUP",
                "integer": 10
              },
              {
                "name": "TYPE_MESSAGE",
                "integer": 11
              },
              {
                "name": "TYPE_BYTES",
                "integer": 12
              },
              {
                "name": "TYPE_UINT32",
                "integer": 13
              },
              {
                "name": "TYPE_ENUM",
                "integer": 14
              },
              {
                "name": "TYPE_SFIXED32",
                "integer": 15
              },
              {
                "name": "TYPE_SFIXED64",
                "integer": 16
              },
              {
                "name": "TYPE_SINT32",
                "integer": 17
              },
              {
                "name": "TYPE_SINT64",
                "integer": 18
              }
            ]
          },
          {
            "name": "FieldDescriptorProto.Label",
            "enum_fields": [
              {
                "name": "LABEL_OPTIONAL",
                "integer": 1
              },
              {
                "name": "LABEL_REQUIRED",
                "integer": 2
              },
              {
                "name": "LABEL_REPEATED",
                "integer": 3
              }
            ]
          },
          {
            "name": "FileOptions.OptimizeMode",
            "enum_fields": [
              {
                "name": "SPEED",
                "integer": 1
              },
              {
                "name": "CODE_SIZE",
                "integer": 2
              },
              {
                "name": "LITE_RUNTIME",
                "integer": 3
              }
            ]
          },
          {
            "name": "FieldOptions.CType",
            "enum_fields": [
              {
                "name": "STRING"
              },
              {
                "name": "CORD",
                "integer": 1
              },
              {
                "name": "STRING_PIECE",
                "integer": 2
              }
            ]
          },
          {
            "name": "FieldOptions.JSType",
            "enum_fields": [
              {
                "name": "JS_NORMAL"
              },
              {
                "name": "JS_STRING",
                "integer": 1
              },
              {
                "name": "JS_NUMBER",
                "integer": 2
              }
            ]
          },
          {
            "name": "FieldOptions.OptionRetention",
            "enum_fields": [
              {
                "name": "RETENTION_UNKNOWN"
              },
              {
                "name": "RETENTION_RUNTIME",
                "integer": 1
              },
              {
                "name": "RETENTION_SOURCE",
                "integer": 2
              }
            ]
          },
          {
            "name": "FieldOptions.OptionTargetType",
            "enum_fields": [
              {
                "name": "TARGET_TYPE_UNKNOWN"
              },
              {
                "name": "TARGET_TYPE_FILE",
                "integer": 1
              },
              {
                "name": "TARGET_TYPE_EXTENSION_RANGE",
                "integer": 2
              },
              {
                "name": "TARGET_TYPE_MESSAGE",
                "integer": 3
              },
              {
                "name": "TARGET_TYPE_FIELD",
                "integer": 4
              },
              {
                "name": "TARGET_TYPE_ONEOF",
                "integer": 5
              },
              {
                "name": "TARGET_TYPE_ENUM",
                "integer": 6
              },
              {
                "name": "TARGET_TYPE_ENUM_ENTRY",
                "integer": 7
              },
              {
                "name": "TARGET_TYPE_SERVICE",
                "integer": 8
              },
              {
                "name": "TARGET_TYPE_METHOD",
                "integer": 9
              }
            ]
          },
          {
            "name": "MethodOptions.IdempotencyLevel",
            "enum_fields": [
              {
                "name": "IDEMPOTENCY_UNKNOWN"
              },
              {
                "name": "NO_SIDE_EFFECTS",
                "integer": 1
              },
              {
                "name": "IDEMPOTENT",
                "integer": 2
              }
            ]
          },
          {
            "name": "Annotation.Semantic",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "SET",
                "integer": 1
              },
              {
                "name": "ALIAS",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "FileDescriptorSet",
            "fields": [
              {
                "id": 1,
                "name": "file",
                "type": "FileDescriptorProto",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FileDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "package",
                "type": "string"
              },
              {
                "id": 3,
                "name": "dependency",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "public_dependency",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "weak_dependency",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "message_type",
                "type": "DescriptorProto",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "enum_type",
                "type": "EnumDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "service",
                "type": "ServiceDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "extension",
                "type": "FieldDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "options",
                "type": "FileOptions"
              },
              {
                "id": 9,
                "name": "source_code_info",
                "type": "SourceCodeInfo"
              },
              {
                "id": 12,
                "name": "syntax",
                "type": "string"
              },
              {
                "id": 13,
                "name": "edition",
                "type": "string"
              }
            ]
          },
          {
            "name": "DescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "field",
                "type": "FieldDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "extension",
                "type": "FieldDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "nested_type",
                "type": "DescriptorProto",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "enum_type",
                "type": "EnumDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "extension_range",
                "type": "ExtensionRange",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "oneof_decl",
                "type": "OneofDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "options",
                "type": "MessageOptions"
              },
              {
                "id": 9,
                "name": "reserved_range",
                "type": "ReservedRange",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "reserved_name",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ExtensionRange",
                "fields": [
                  {
                    "id": 1,
                    "name": "start",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "end",
                    "type": "int32"
                  },
                  {
                    "id": 3,
                    "name": "options",
                    "type": "ExtensionRangeOptions"
                  }
                ]
              },
              {
                "name": "ReservedRange",
                "fields": [
                  {
                    "id": 1,
                    "name": "start",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "end",
                    "type": "int32"
                  }
                ]
              }
            ]
          },
          {
            "name": "ExtensionRangeOptions",
            "fields": [
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FieldDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "label",
                "type": "Label"
              },
              {
                "id": 5,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 6,
                "name": "type_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "extendee",
                "type": "string"
              },
              {
                "id": 7,
                "name": "default_value",
                "type": "string"
              },
              {
                "id": 9,
                "name": "oneof_index",
                "type": "int32"
              },
              {
                "id": 10,
                "name": "json_name",
                "type": "string"
              },
              {
                "id": 8,
                "name": "options",
                "type": "FieldOptions"
              },
              {
                "id": 17,
                "name": "proto3_optional",
                "type": "bool"
              }
            ]
          },
          {
            "name": "OneofDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "options",
                "type": "OneofOptions"
              }
            ]
          },
          {
            "name": "EnumDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "EnumValueDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "EnumOptions"
              },
              {
                "id": 4,
                "name": "reserved_range",
                "type": "EnumReservedRange",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "reserved_name",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "EnumReservedRange",
                "fields": [
                  {
                    "id": 1,
                    "name": "start",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "end",
                    "type": "int32"
                  }
                ]
              }
            ]
          },
          {
            "name": "EnumValueDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "options",
                "type": "EnumValueOptions"
              }
            ]
          },
          {
            "name": "ServiceDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "method",
                "type": "MethodDescriptorProto",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "ServiceOptions"
              }
            ]
          },
          {
            "name": "MethodDescriptorProto",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "input_type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "output_type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "options",
                "type": "MethodOptions"
              },
              {
                "id": 5,
                "name": "client_streaming",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 6,
                "name": "server_streaming",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              }
            ]
          },
          {
            "name": "FileOptions",
            "fields": [
              {
                "id": 1,
                "name": "java_package",
                "type": "string"
              },
              {
                "id": 8,
                "name": "java_outer_classname",
                "type": "string"
              },
              {
                "id": 10,
                "name": "java_multiple_files",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 20,
                "name": "java_generate_equals_and_hash",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 27,
                "name": "java_string_check_utf8",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 9,
                "name": "optimize_for",
                "type": "OptimizeMode",
                "options": [
                  {
                    "name": "default",
                    "value": "SPEED"
                  }
                ]
              },
              {
                "id": 11,
                "name": "go_package",
                "type": "string"
              },
              {
                "id": 16,
                "name": "cc_generic_services",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 17,
                "name": "java_generic_services",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 18,
                "name": "py_generic_services",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 42,
                "name": "php_generic_services",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 23,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 31,
                "name": "cc_enable_arenas",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 36,
                "name": "objc_class_prefix",
                "type": "string"
              },
              {
                "id": 37,
                "name": "csharp_namespace",
                "type": "string"
              },
              {
                "id": 39,
                "name": "swift_prefix",
                "type": "string"
              },
              {
                "id": 40,
                "name": "php_class_prefix",
                "type": "string"
              },
              {
                "id": 41,
                "name": "php_namespace",
                "type": "string"
              },
              {
                "id": 44,
                "name": "php_metadata_namespace",
                "type": "string"
              },
              {
                "id": 45,
                "name": "ruby_package",
                "type": "string"
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              38
            ]
          },
          {
            "name": "MessageOptions",
            "fields": [
              {
                "id": 1,
                "name": "message_set_wire_format",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 2,
                "name": "no_standard_descriptor_accessor",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 3,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 7,
                "name": "map_entry",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "deprecated_legacy_json_field_conflicts",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              4,
              5,
              6,
              8,
              9
            ]
          },
          {
            "name": "FieldOptions",
            "fields": [
              {
                "id": 1,
                "name": "ctype",
                "type": "CType",
                "options": [
                  {
                    "name": "default",
                    "value": "STRING"
                  }
                ]
              },
              {
                "id": 2,
                "name": "packed",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "jstype",
                "type": "JSType",
                "options": [
                  {
                    "name": "default",
                    "value": "JS_NORMAL"
                  }
                ]
              },
              {
                "id": 5,
                "name": "lazy",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 15,
                "name": "unverified_lazy",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 3,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 10,
                "name": "weak",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 16,
                "name": "debug_redact",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 17,
                "name": "retention",
                "type": "OptionRetention"
              },
              {
                "id": 18,
                "name": "target",
                "type": "OptionTargetType"
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "OneofOptions",
            "fields": [
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EnumOptions",
            "fields": [
              {
                "id": 2,
                "name": "allow_alias",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 6,
                "name": "deprecated_legacy_json_field_conflicts",
                "type": "bool",
                "options": [
                  {
                    "name": "deprecated",
                    "value": "true"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "EnumValueOptions",
            "fields": [
              {
                "id": 1,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServiceOptions",
            "fields": [
              {
                "id": 33,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MethodOptions",
            "fields": [
              {
                "id": 33,
                "name": "deprecated",
                "type": "bool",
                "options": [
                  {
                    "name": "default",
                    "value": "false"
                  }
                ]
              },
              {
                "id": 34,
                "name": "idempotency_level",
                "type": "IdempotencyLevel",
                "options": [
                  {
                    "name": "default",
                    "value": "IDEMPOTENCY_UNKNOWN"
                  }
                ]
              },
              {
                "id": 999,
                "name": "uninterpreted_option",
                "type": "UninterpretedOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UninterpretedOption",
            "fields": [
              {
                "id": 2,
                "name": "name",
                "type": "NamePart",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "identifier_value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "positive_int_value",
                "type": "uint64"
              },
              {
                "id": 5,
                "name": "negative_int_value",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "double_value",
                "type": "double"
              },
              {
                "id": 7,
                "name": "string_value",
                "type": "bytes"
              },
              {
                "id": 8,
                "name": "aggregate_value",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "NamePart",
                "fields": [
                  {
                    "id": 1,
                    "name": "name_part",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "is_extension",
                    "type": "bool"
                  }
                ]
              }
            ]
          },
          {
            "name": "SourceCodeInfo",
            "fields": [
              {
                "id": 1,
                "name": "location",
                "type": "Location",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Location",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "int32",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "packed",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "span",
                    "type": "int32",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "packed",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 3,
                    "name": "leading_comments",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "trailing_comments",
                    "type": "string"
                  },
                  {
                    "id": 6,
                    "name": "leading_detached_comments",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "GeneratedCodeInfo",
            "fields": [
              {
                "id": 1,
                "name": "annotation",
                "type": "Annotation",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Annotation",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "int32",
                    "is_repeated": true,
                    "options": [
                      {
                        "name": "packed",
                        "value": "true"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "source_file",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "begin",
                    "type": "int32"
                  },
                  {
                    "id": 4,
                    "name": "end",
                    "type": "int32"
                  },
                  {
                    "id": 5,
                    "name": "semantic",
                    "type": "Semantic"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:protobuf:/:duration.proto",
      "def": {
        "messages": [
          {
            "name": "Duration",
            "fields": [
              {
                "id": 1,
                "name": "seconds",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "nanos",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:protobuf:/:empty.proto",
      "def": {
        "messages": [
          {
            "name": "Empty"
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:protobuf:/:field_mask.proto",
      "def": {
        "messages": [
          {
            "name": "FieldMask",
            "fields": [
              {
                "id": 1,
                "name": "paths",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:protobuf:/:source_context.proto",
      "def": {
        "messages": [
          {
            "name": "SourceContext",
            "fields": [
              {
                "id": 1,
                "name": "file_name",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:protobuf:/:struct.proto",
      "def": {
        "enums": [
          {
            "name": "NullValue",
            "enum_fields": [
              {
                "name": "NULL_VALUE"
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Struct",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "fields",
                  "type": "Value"
                }
              }
            ]
          },
          {
            "name": "Value",
            "fields": [
              {
                "id": 1,
                "name": "null_value",
                "type": "NullValue"
              },
              {
                "id": 2,
                "name": "number_value",
                "type": "double"
              },
              {
                "id": 3,
                "name": "string_value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "bool_value",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "struct_value",
                "type": "Struct"
              },
              {
                "id": 6,
                "name": "list_value",
                "type": "ListValue"
              }
            ]
          },
          {
            "name": "ListValue",
            "fields": [
              {
                "id": 1,
                "name": "values",
                "type": "Value",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:protobuf:/:timestamp.proto",
      "def": {
        "messages": [
          {
            "name": "Timestamp",
            "fields": [
              {
                "id": 1,
                "name": "seconds",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "nanos",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:protobuf:/:type.proto",
      "def": {
        "enums": [
          {
            "name": "Field.Kind",
            "enum_fields": [
              {
                "name": "TYPE_UNKNOWN"
              },
              {
                "name": "TYPE_DOUBLE",
                "integer": 1
              },
              {
                "name": "TYPE_FLOAT",
                "integer": 2
              },
              {
                "name": "TYPE_INT64",
                "integer": 3
              },
              {
                "name": "TYPE_UINT64",
                "integer": 4
              },
              {
                "name": "TYPE_INT32",
                "integer": 5
              },
              {
                "name": "TYPE_FIXED64",
                "integer": 6
              },
              {
                "name": "TYPE_FIXED32",
                "integer": 7
              },
              {
                "name": "TYPE_BOOL",
                "integer": 8
              },
              {
                "name": "TYPE_STRING",
                "integer": 9
              },
              {
                "name": "TYPE_GROUP",
                "integer": 10
              },
              {
                "name": "TYPE_MESSAGE",
                "integer": 11
              },
              {
                "name": "TYPE_BYTES",
                "integer": 12
              },
              {
                "name": "TYPE_UINT32",
                "integer": 13
              },
              {
                "name": "TYPE_ENUM",
                "integer": 14
              },
              {
                "name": "TYPE_SFIXED32",
                "integer": 15
              },
              {
                "name": "TYPE_SFIXED64",
                "integer": 16
              },
              {
                "name": "TYPE_SINT32",
                "integer": 17
              },
              {
                "name": "TYPE_SINT64",
                "integer": 18
              }
            ]
          },
          {
            "name": "Field.Cardinality",
            "enum_fields": [
              {
                "name": "CARDINALITY_UNKNOWN"
              },
              {
                "name": "CARDINALITY_OPTIONAL",
                "integer": 1
              },
              {
                "name": "CARDINALITY_REQUIRED",
                "integer": 2
              },
              {
                "name": "CARDINALITY_REPEATED",
                "integer": 3
              }
            ]
          },
          {
            "name": "Syntax",
            "enum_fields": [
              {
                "name": "SYNTAX_PROTO2"
              },
              {
                "name": "SYNTAX_PROTO3",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Type",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "fields",
                "type": "Field",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "oneofs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "source_context",
                "type": "SourceContext"
              },
              {
                "id": 6,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "Field",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "Kind"
              },
              {
                "id": 2,
                "name": "cardinality",
                "type": "Cardinality"
              },
              {
                "id": 3,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "type_url",
                "type": "string"
              },
              {
                "id": 7,
                "name": "oneof_index",
                "type": "int32"
              },
              {
                "id": 8,
                "name": "packed",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "json_name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "default_value",
                "type": "string"
              }
            ]
          },
          {
            "name": "Enum",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "enumvalue",
                "type": "EnumValue",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "source_context",
                "type": "SourceContext"
              },
              {
                "id": 5,
                "name": "syntax",
                "type": "Syntax"
              }
            ]
          },
          {
            "name": "EnumValue",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "number",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "options",
                "type": "Option",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Option",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "Any"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/source_context.proto"
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:protobuf:/:wrappers.proto",
      "def": {
        "messages": [
          {
            "name": "DoubleValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "double"
              }
            ]
          },
          {
            "name": "FloatValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "float"
              }
            ]
          },
          {
            "name": "Int64Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "int64"
              }
            ]
          },
          {
            "name": "UInt64Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "Int32Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "int32"
              }
            ]
          },
          {
            "name": "UInt32Value",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "BoolValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "bool"
              }
            ]
          },
          {
            "name": "StringValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "BytesValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "bytes"
              }
            ]
          }
        ],
        "package": {
          "name": "google.protobuf"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:rpc:/:code.proto",
      "def": {
        "enums": [
          {
            "name": "Code",
            "enum_fields": [
              {
                "name": "OK"
              },
              {
                "name": "CANCELLED",
                "integer": 1
              },
              {
                "name": "UNKNOWN",
                "integer": 2
              },
              {
                "name": "INVALID_ARGUMENT",
                "integer": 3
              },
              {
                "name": "DEADLINE_EXCEEDED",
                "integer": 4
              },
              {
                "name": "NOT_FOUND",
                "integer": 5
              },
              {
                "name": "ALREADY_EXISTS",
                "integer": 6
              },
              {
                "name": "PERMISSION_DENIED",
                "integer": 7
              },
              {
                "name": "UNAUTHENTICATED",
                "integer": 16
              },
              {
                "name": "RESOURCE_EXHAUSTED",
                "integer": 8
              },
              {
                "name": "FAILED_PRECONDITION",
                "integer": 9
              },
              {
                "name": "ABORTED",
                "integer": 10
              },
              {
                "name": "OUT_OF_RANGE",
                "integer": 11
              },
              {
                "name": "UNIMPLEMENTED",
                "integer": 12
              },
              {
                "name": "INTERNAL",
                "integer": 13
              },
              {
                "name": "UNAVAILABLE",
                "integer": 14
              },
              {
                "name": "DATA_LOSS",
                "integer": 15
              }
            ]
          }
        ],
        "package": {
          "name": "google.rpc"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:rpc:/:context:/:attribute_context.proto",
      "def": {
        "messages": [
          {
            "name": "AttributeContext",
            "fields": [
              {
                "id": 7,
                "name": "origin",
                "type": "Peer"
              },
              {
                "id": 1,
                "name": "source",
                "type": "Peer"
              },
              {
                "id": 2,
                "name": "destination",
                "type": "Peer"
              },
              {
                "id": 3,
                "name": "request",
                "type": "Request"
              },
              {
                "id": 4,
                "name": "response",
                "type": "Response"
              },
              {
                "id": 5,
                "name": "resource",
                "type": "Resource"
              },
              {
                "id": 6,
                "name": "api",
                "type": "Api"
              },
              {
                "id": 8,
                "name": "extensions",
                "type": "google.protobuf.Any",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Peer",
                "fields": [
                  {
                    "id": 1,
                    "name": "ip",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "port",
                    "type": "int64"
                  },
                  {
                    "id": 7,
                    "name": "principal",
                    "type": "string"
                  },
                  {
                    "id": 8,
                    "name": "region_code",
                    "type": "string"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 6,
                      "name": "labels",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "Api",
                "fields": [
                  {
                    "id": 1,
                    "name": "service",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "operation",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "protocol",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "version",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Auth",
                "fields": [
                  {
                    "id": 1,
                    "name": "principal",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "audiences",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "presenter",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "claims",
                    "type": "google.protobuf.Struct"
                  },
                  {
                    "id": 5,
                    "name": "access_levels",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "Request",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "method",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "path",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "host",
                    "type": "string"
                  },
                  {
                    "id": 6,
                    "name": "scheme",
                    "type": "string"
                  },
                  {
                    "id": 7,
                    "name": "query",
                    "type": "string"
                  },
                  {
                    "id": 9,
                    "name": "time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 10,
                    "name": "size",
                    "type": "int64"
                  },
                  {
                    "id": 11,
                    "name": "protocol",
                    "type": "string"
                  },
                  {
                    "id": 12,
                    "name": "reason",
                    "type": "string"
                  },
                  {
                    "id": 13,
                    "name": "auth",
                    "type": "Auth"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "headers",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "Response",
                "fields": [
                  {
                    "id": 1,
                    "name": "code",
                    "type": "int64"
                  },
                  {
                    "id": 2,
                    "name": "size",
                    "type": "int64"
                  },
                  {
                    "id": 4,
                    "name": "time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 5,
                    "name": "backend_latency",
                    "type": "google.protobuf.Duration"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "headers",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "Resource",
                "fields": [
                  {
                    "id": 1,
                    "name": "service",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "uid",
                    "type": "string"
                  },
                  {
                    "id": 7,
                    "name": "display_name",
                    "type": "string"
                  },
                  {
                    "id": 8,
                    "name": "create_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 9,
                    "name": "update_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 10,
                    "name": "delete_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 11,
                    "name": "etag",
                    "type": "string"
                  },
                  {
                    "id": 12,
                    "name": "location",
                    "type": "string"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 4,
                      "name": "labels",
                      "type": "string"
                    }
                  },
                  {
                    "key_type": "string",
                    "field": {
                      "id": 6,
                      "name": "annotations",
                      "type": "string"
                    }
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/struct.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "google.rpc.context"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:rpc:/:context:/:audit_context.proto",
      "def": {
        "messages": [
          {
            "name": "AuditContext",
            "fields": [
              {
                "id": 1,
                "name": "audit_log",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "scrubbed_request",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 3,
                "name": "scrubbed_response",
                "type": "google.protobuf.Struct"
              },
              {
                "id": 4,
                "name": "scrubbed_response_item_count",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "target_resource",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/struct.proto"
          }
        ],
        "package": {
          "name": "google.rpc.context"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:rpc:/:error_details.proto",
      "def": {
        "messages": [
          {
            "name": "ErrorInfo",
            "fields": [
              {
                "id": 1,
                "name": "reason",
                "type": "string"
              },
              {
                "id": 2,
                "name": "domain",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "metadata",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "RetryInfo",
            "fields": [
              {
                "id": 1,
                "name": "retry_delay",
                "type": "google.protobuf.Duration"
              }
            ]
          },
          {
            "name": "DebugInfo",
            "fields": [
              {
                "id": 1,
                "name": "stack_entries",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "detail",
                "type": "string"
              }
            ]
          },
          {
            "name": "QuotaFailure",
            "fields": [
              {
                "id": 1,
                "name": "violations",
                "type": "Violation",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Violation",
                "fields": [
                  {
                    "id": 1,
                    "name": "subject",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "description",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "PreconditionFailure",
            "fields": [
              {
                "id": 1,
                "name": "violations",
                "type": "Violation",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Violation",
                "fields": [
                  {
                    "id": 1,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "subject",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "description",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "BadRequest",
            "fields": [
              {
                "id": 1,
                "name": "field_violations",
                "type": "FieldViolation",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "FieldViolation",
                "fields": [
                  {
                    "id": 1,
                    "name": "field",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "description",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "RequestInfo",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "serving_data",
                "type": "string"
              }
            ]
          },
          {
            "name": "ResourceInfo",
            "fields": [
              {
                "id": 1,
                "name": "resource_type",
                "type": "string"
              },
              {
                "id": 2,
                "name": "resource_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "owner",
                "type": "string"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              }
            ]
          },
          {
            "name": "Help",
            "fields": [
              {
                "id": 1,
                "name": "links",
                "type": "Link",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Link",
                "fields": [
                  {
                    "id": 1,
                    "name": "description",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "url",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "LocalizedMessage",
            "fields": [
              {
                "id": 1,
                "name": "locale",
                "type": "string"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "google.rpc"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:rpc:/:status.proto",
      "def": {
        "messages": [
          {
            "name": "Status",
            "fields": [
              {
                "id": 1,
                "name": "code",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              },
              {
                "id": 3,
                "name": "details",
                "type": "google.protobuf.Any",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "google.rpc"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:calendar_period.proto",
      "def": {
        "enums": [
          {
            "name": "CalendarPeriod",
            "enum_fields": [
              {
                "name": "CALENDAR_PERIOD_UNSPECIFIED"
              },
              {
                "name": "DAY",
                "integer": 1
              },
              {
                "name": "WEEK",
                "integer": 2
              },
              {
                "name": "FORTNIGHT",
                "integer": 3
              },
              {
                "name": "MONTH",
                "integer": 4
              },
              {
                "name": "QUARTER",
                "integer": 5
              },
              {
                "name": "HALF",
                "integer": 6
              },
              {
                "name": "YEAR",
                "integer": 7
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:color.proto",
      "def": {
        "messages": [
          {
            "name": "Color",
            "fields": [
              {
                "id": 1,
                "name": "red",
                "type": "float"
              },
              {
                "id": 2,
                "name": "green",
                "type": "float"
              },
              {
                "id": 3,
                "name": "blue",
                "type": "float"
              },
              {
                "id": 4,
                "name": "alpha",
                "type": "google.protobuf.FloatValue"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/wrappers.proto"
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:date.proto",
      "def": {
        "messages": [
          {
            "name": "Date",
            "fields": [
              {
                "id": 1,
                "name": "year",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "month",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "day",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:datetime.proto",
      "def": {
        "messages": [
          {
            "name": "DateTime",
            "fields": [
              {
                "id": 1,
                "name": "year",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "month",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "day",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "hours",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "minutes",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "seconds",
                "type": "int32"
              },
              {
                "id": 7,
                "name": "nanos",
                "type": "int32"
              },
              {
                "id": 8,
                "name": "utc_offset",
                "type": "google.protobuf.Duration"
              },
              {
                "id": 9,
                "name": "time_zone",
                "type": "TimeZone"
              }
            ]
          },
          {
            "name": "TimeZone",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:dayofweek.proto",
      "def": {
        "enums": [
          {
            "name": "DayOfWeek",
            "enum_fields": [
              {
                "name": "DAY_OF_WEEK_UNSPECIFIED"
              },
              {
                "name": "MONDAY",
                "integer": 1
              },
              {
                "name": "TUESDAY",
                "integer": 2
              },
              {
                "name": "WEDNESDAY",
                "integer": 3
              },
              {
                "name": "THURSDAY",
                "integer": 4
              },
              {
                "name": "FRIDAY",
                "integer": 5
              },
              {
                "name": "SATURDAY",
                "integer": 6
              },
              {
                "name": "SUNDAY",
                "integer": 7
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:decimal.proto",
      "def": {
        "messages": [
          {
            "name": "Decimal",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:expr.proto",
      "def": {
        "messages": [
          {
            "name": "Expr",
            "fields": [
              {
                "id": 1,
                "name": "expression",
                "type": "string"
              },
              {
                "id": 2,
                "name": "title",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "location",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:fraction.proto",
      "def": {
        "messages": [
          {
            "name": "Fraction",
            "fields": [
              {
                "id": 1,
                "name": "numerator",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "denominator",
                "type": "int64"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:interval.proto",
      "def": {
        "messages": [
          {
            "name": "Interval",
            "fields": [
              {
                "id": 1,
                "name": "start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "end_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:latlng.proto",
      "def": {
        "messages": [
          {
            "name": "LatLng",
            "fields": [
              {
                "id": 1,
                "name": "latitude",
                "type": "double"
              },
              {
                "id": 2,
                "name": "longitude",
                "type": "double"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:localized_text.proto",
      "def": {
        "messages": [
          {
            "name": "LocalizedText",
            "fields": [
              {
                "id": 1,
                "name": "text",
                "type": "string"
              },
              {
                "id": 2,
                "name": "language_code",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:money.proto",
      "def": {
        "messages": [
          {
            "name": "Money",
            "fields": [
              {
                "id": 1,
                "name": "currency_code",
                "type": "string"
              },
              {
                "id": 2,
                "name": "units",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "nanos",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:month.proto",
      "def": {
        "enums": [
          {
            "name": "Month",
            "enum_fields": [
              {
                "name": "MONTH_UNSPECIFIED"
              },
              {
                "name": "JANUARY",
                "integer": 1
              },
              {
                "name": "FEBRUARY",
                "integer": 2
              },
              {
                "name": "MARCH",
                "integer": 3
              },
              {
                "name": "APRIL",
                "integer": 4
              },
              {
                "name": "MAY",
                "integer": 5
              },
              {
                "name": "JUNE",
                "integer": 6
              },
              {
                "name": "JULY",
                "integer": 7
              },
              {
                "name": "AUGUST",
                "integer": 8
              },
              {
                "name": "SEPTEMBER",
                "integer": 9
              },
              {
                "name": "OCTOBER",
                "integer": 10
              },
              {
                "name": "NOVEMBER",
                "integer": 11
              },
              {
                "name": "DECEMBER",
                "integer": 12
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:phone_number.proto",
      "def": {
        "messages": [
          {
            "name": "PhoneNumber",
            "fields": [
              {
                "id": 1,
                "name": "e164_number",
                "type": "string"
              },
              {
                "id": 2,
                "name": "short_code",
                "type": "ShortCode"
              },
              {
                "id": 3,
                "name": "extension",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "ShortCode",
                "fields": [
                  {
                    "id": 1,
                    "name": "region_code",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "number",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:postal_address.proto",
      "def": {
        "messages": [
          {
            "name": "PostalAddress",
            "fields": [
              {
                "id": 1,
                "name": "revision",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "region_code",
                "type": "string"
              },
              {
                "id": 3,
                "name": "language_code",
                "type": "string"
              },
              {
                "id": 4,
                "name": "postal_code",
                "type": "string"
              },
              {
                "id": 5,
                "name": "sorting_code",
                "type": "string"
              },
              {
                "id": 6,
                "name": "administrative_area",
                "type": "string"
              },
              {
                "id": 7,
                "name": "locality",
                "type": "string"
              },
              {
                "id": 8,
                "name": "sublocality",
                "type": "string"
              },
              {
                "id": 9,
                "name": "address_lines",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "recipients",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "organization",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:quaternion.proto",
      "def": {
        "messages": [
          {
            "name": "Quaternion",
            "fields": [
              {
                "id": 1,
                "name": "x",
                "type": "double"
              },
              {
                "id": 2,
                "name": "y",
                "type": "double"
              },
              {
                "id": 3,
                "name": "z",
                "type": "double"
              },
              {
                "id": 4,
                "name": "w",
                "type": "double"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:google:/:type:/:timeofday.proto",
      "def": {
        "messages": [
          {
            "name": "TimeOfDay",
            "fields": [
              {
                "id": 1,
                "name": "hours",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "minutes",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "seconds",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "nanos",
                "type": "int32"
              }
            ]
          }
        ],
        "package": {
          "name": "google.type"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:grpc:/:gcp:/:altscontext.proto",
      "def": {
        "messages": [
          {
            "name": "AltsContext",
            "fields": [
              {
                "id": 1,
                "name": "application_protocol",
                "type": "string"
              },
              {
                "id": 2,
                "name": "record_protocol",
                "type": "string"
              },
              {
                "id": 3,
                "name": "security_level",
                "type": "SecurityLevel"
              },
              {
                "id": 4,
                "name": "peer_service_account",
                "type": "string"
              },
              {
                "id": 5,
                "name": "local_service_account",
                "type": "string"
              },
              {
                "id": 6,
                "name": "peer_rpc_versions",
                "type": "RpcProtocolVersions"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "peer_attributes",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "grpc/gcp/transport_security_common.proto"
          }
        ],
        "package": {
          "name": "grpc.gcp"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:grpc:/:gcp:/:handshaker.proto",
      "def": {
        "enums": [
          {
            "name": "HandshakeProtocol",
            "enum_fields": [
              {
                "name": "HANDSHAKE_PROTOCOL_UNSPECIFIED"
              },
              {
                "name": "TLS",
                "integer": 1
              },
              {
                "name": "ALTS",
                "integer": 2
              }
            ]
          },
          {
            "name": "NetworkProtocol",
            "enum_fields": [
              {
                "name": "NETWORK_PROTOCOL_UNSPECIFIED"
              },
              {
                "name": "TCP",
                "integer": 1
              },
              {
                "name": "UDP",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Endpoint",
            "fields": [
              {
                "id": 1,
                "name": "ip_address",
                "type": "string"
              },
              {
                "id": 2,
                "name": "port",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "NetworkProtocol"
              }
            ]
          },
          {
            "name": "Identity",
            "fields": [
              {
                "id": 1,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 2,
                "name": "hostname",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "attributes",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "StartClientHandshakeReq",
            "fields": [
              {
                "id": 1,
                "name": "handshake_security_protocol",
                "type": "HandshakeProtocol"
              },
              {
                "id": 2,
                "name": "application_protocols",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "record_protocols",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "target_identities",
                "type": "Identity",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "local_identity",
                "type": "Identity"
              },
              {
                "id": 6,
                "name": "local_endpoint",
                "type": "Endpoint"
              },
              {
                "id": 7,
                "name": "remote_endpoint",
                "type": "Endpoint"
              },
              {
                "id": 8,
                "name": "target_name",
                "type": "string"
              },
              {
                "id": 9,
                "name": "rpc_versions",
                "type": "RpcProtocolVersions"
              }
            ]
          },
          {
            "name": "ServerHandshakeParameters",
            "fields": [
              {
                "id": 1,
                "name": "record_protocols",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "local_identities",
                "type": "Identity",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "StartServerHandshakeReq",
            "fields": [
              {
                "id": 1,
                "name": "application_protocols",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "in_bytes",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "local_endpoint",
                "type": "Endpoint"
              },
              {
                "id": 5,
                "name": "remote_endpoint",
                "type": "Endpoint"
              },
              {
                "id": 6,
                "name": "rpc_versions",
                "type": "RpcProtocolVersions"
              }
            ],
            "maps": [
              {
                "key_type": "int32",
                "field": {
                  "id": 2,
                  "name": "handshake_parameters",
                  "type": "ServerHandshakeParameters"
                }
              }
            ]
          },
          {
            "name": "NextHandshakeMessageReq",
            "fields": [
              {
                "id": 1,
                "name": "in_bytes",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "HandshakerReq",
            "fields": [
              {
                "id": 1,
                "name": "client_start",
                "type": "StartClientHandshakeReq"
              },
              {
                "id": 2,
                "name": "server_start",
                "type": "StartServerHandshakeReq"
              },
              {
                "id": 3,
                "name": "next",
                "type": "NextHandshakeMessageReq"
              }
            ]
          },
          {
            "name": "HandshakerResult",
            "fields": [
              {
                "id": 1,
                "name": "application_protocol",
                "type": "string"
              },
              {
                "id": 2,
                "name": "record_protocol",
                "type": "string"
              },
              {
                "id": 3,
                "name": "key_data",
                "type": "bytes"
              },
              {
                "id": 4,
                "name": "peer_identity",
                "type": "Identity"
              },
              {
                "id": 5,
                "name": "local_identity",
                "type": "Identity"
              },
              {
                "id": 6,
                "name": "keep_channel_open",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "peer_rpc_versions",
                "type": "RpcProtocolVersions"
              }
            ]
          },
          {
            "name": "HandshakerStatus",
            "fields": [
              {
                "id": 1,
                "name": "code",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "details",
                "type": "string"
              }
            ]
          },
          {
            "name": "HandshakerResp",
            "fields": [
              {
                "id": 1,
                "name": "out_frames",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "bytes_consumed",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "result",
                "type": "HandshakerResult"
              },
              {
                "id": 4,
                "name": "status",
                "type": "HandshakerStatus"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "HandshakerService",
            "rpcs": [
              {
                "name": "DoHandshake",
                "in_type": "HandshakerReq",
                "out_type": "HandshakerResp",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "grpc/gcp/transport_security_common.proto"
          }
        ],
        "package": {
          "name": "grpc.gcp"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:grpc:/:gcp:/:transport_security_common.proto",
      "def": {
        "enums": [
          {
            "name": "SecurityLevel",
            "enum_fields": [
              {
                "name": "SECURITY_NONE"
              },
              {
                "name": "INTEGRITY_ONLY",
                "integer": 1
              },
              {
                "name": "INTEGRITY_AND_PRIVACY",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "RpcProtocolVersions",
            "fields": [
              {
                "id": 1,
                "name": "max_rpc_version",
                "type": "Version"
              },
              {
                "id": 2,
                "name": "min_rpc_version",
                "type": "Version"
              }
            ],
            "messages": [
              {
                "name": "Version",
                "fields": [
                  {
                    "id": 1,
                    "name": "major",
                    "type": "uint32"
                  },
                  {
                    "id": 2,
                    "name": "minor",
                    "type": "uint32"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "grpc.gcp"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:grpc:/:lb:/:v1:/:load_balancer.proto",
      "def": {
        "messages": [
          {
            "name": "LoadBalanceRequest",
            "fields": [
              {
                "id": 1,
                "name": "initial_request",
                "type": "InitialLoadBalanceRequest"
              },
              {
                "id": 2,
                "name": "client_stats",
                "type": "ClientStats"
              }
            ]
          },
          {
            "name": "InitialLoadBalanceRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ClientStatsPerToken",
            "fields": [
              {
                "id": 1,
                "name": "load_balance_token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "num_calls",
                "type": "int64"
              }
            ]
          },
          {
            "name": "ClientStats",
            "fields": [
              {
                "id": 1,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "num_calls_started",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "num_calls_finished",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "num_calls_finished_with_client_failed_to_send",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "num_calls_finished_known_received",
                "type": "int64"
              },
              {
                "id": 8,
                "name": "calls_finished_with_drop",
                "type": "ClientStatsPerToken",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              4,
              5
            ]
          },
          {
            "name": "LoadBalanceResponse",
            "fields": [
              {
                "id": 1,
                "name": "initial_response",
                "type": "InitialLoadBalanceResponse"
              },
              {
                "id": 2,
                "name": "server_list",
                "type": "ServerList"
              }
            ]
          },
          {
            "name": "InitialLoadBalanceResponse",
            "fields": [
              {
                "id": 1,
                "name": "load_balancer_delegate",
                "type": "string"
              },
              {
                "id": 2,
                "name": "client_stats_report_interval",
                "type": "google.protobuf.Duration"
              }
            ]
          },
          {
            "name": "ServerList",
            "fields": [
              {
                "id": 1,
                "name": "servers",
                "type": "Server",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              3
            ]
          },
          {
            "name": "Server",
            "fields": [
              {
                "id": 1,
                "name": "ip_address",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "port",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "load_balance_token",
                "type": "string"
              },
              {
                "id": 4,
                "name": "drop",
                "type": "bool"
              }
            ],
            "reserved_ids": [
              5
            ]
          }
        ],
        "services": [
          {
            "name": "LoadBalancer",
            "rpcs": [
              {
                "name": "BalanceLoad",
                "in_type": "LoadBalanceRequest",
                "out_type": "LoadBalanceResponse",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "grpc.lb.v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:auth.proto",
      "def": {
        "messages": [
          {
            "name": "ServiceCertAuth",
            "fields": [
              {
                "id": 1,
                "name": "cert_der",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "current_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:baseline_sync.proto",
      "def": {
        "messages": [
          {
            "name": "BaselineSync",
            "fields": [
              {
                "id": 1,
                "name": "baselines",
                "type": "storage.ProcessBaseline",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/process_baseline.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:cluster_config.proto",
      "def": {
        "messages": [
          {
            "name": "ClusterConfig",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.DynamicClusterConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:cluster_metrics.proto",
      "def": {
        "messages": [
          {
            "name": "ClusterMetrics",
            "fields": [
              {
                "id": 1,
                "name": "node_count",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "cpu_capacity",
                "type": "int64"
              }
            ]
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:cluster_status.proto",
      "def": {
        "messages": [
          {
            "name": "DeploymentEnvironmentUpdate",
            "fields": [
              {
                "id": 1,
                "name": "environments",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ClusterStatusUpdate",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "storage.ClusterStatus"
              },
              {
                "id": 2,
                "name": "deployment_env_update",
                "type": "DeploymentEnvironmentUpdate"
              }
            ]
          },
          {
            "name": "RawClusterHealthInfo",
            "fields": [
              {
                "id": 1,
                "name": "collector_health_info",
                "type": "storage.CollectorHealthInfo"
              },
              {
                "id": 2,
                "name": "admission_control_health_info",
                "type": "storage.AdmissionControlHealthInfo"
              },
              {
                "id": 3,
                "name": "scanner_health_info",
                "type": "storage.ScannerHealthInfo"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:development_service.proto",
      "def": {
        "enums": [
          {
            "name": "URLHasValidCertResponse.URLResult",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "CERT_SIGNED_BY_UNKNOWN_AUTHORITY",
                "integer": 1
              },
              {
                "name": "CERT_SIGNING_AUTHORITY_VALID_BUT_OTHER_ERROR",
                "integer": 2
              },
              {
                "name": "OTHER_GET_ERROR",
                "integer": 3
              },
              {
                "name": "REQUEST_SUCCEEDED",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "URLHasValidCertRequest",
            "fields": [
              {
                "id": 1,
                "name": "url",
                "type": "string"
              }
            ]
          },
          {
            "name": "URLHasValidCertResponse",
            "fields": [
              {
                "id": 1,
                "name": "result",
                "type": "URLResult"
              },
              {
                "id": 2,
                "name": "details",
                "type": "string"
              }
            ]
          },
          {
            "name": "RandomDataRequest",
            "fields": [
              {
                "id": 1,
                "name": "size",
                "type": "int32"
              }
            ]
          },
          {
            "name": "RandomDataResponse",
            "fields": [
              {
                "id": 1,
                "name": "data",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "EnvVarsResponse",
            "fields": [
              {
                "id": 1,
                "name": "env_vars",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReconciliationStatsByClusterResponse",
            "fields": [
              {
                "id": 1,
                "name": "stats",
                "type": "ReconciliationStatsForCluster",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ReconciliationStatsForCluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "reconciliation_done",
                    "type": "bool"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "deleted_objects_by_type",
                      "type": "int32"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "ReplicateImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "times",
                "type": "int32"
              }
            ]
          },
          {
            "name": "Empty"
          }
        ],
        "services": [
          {
            "name": "DevelopmentService",
            "rpcs": [
              {
                "name": "ReplicateImage",
                "in_type": "ReplicateImageRequest",
                "out_type": "Empty"
              },
              {
                "name": "URLHasValidCert",
                "in_type": "URLHasValidCertRequest",
                "out_type": "URLHasValidCertResponse"
              },
              {
                "name": "RandomData",
                "in_type": "RandomDataRequest",
                "out_type": "RandomDataResponse"
              },
              {
                "name": "EnvVars",
                "in_type": "Empty",
                "out_type": "EnvVarsResponse"
              },
              {
                "name": "ReconciliationStatsByCluster",
                "in_type": "Empty",
                "out_type": "ReconciliationStatsByClusterResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:hello.proto",
      "def": {
        "messages": [
          {
            "name": "HelmManagedConfigInit",
            "fields": [
              {
                "id": 1,
                "name": "cluster_config",
                "type": "storage.CompleteClusterConfig"
              },
              {
                "id": 2,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "not_helm_managed",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "managed_by",
                "type": "storage.ManagerType"
              }
            ]
          },
          {
            "name": "SensorHello",
            "fields": [
              {
                "id": 1,
                "name": "sensor_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "capabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "deployment_identification",
                "type": "storage.SensorDeploymentIdentification"
              },
              {
                "id": 3,
                "name": "helm_managed_config_init",
                "type": "HelmManagedConfigInit"
              },
              {
                "id": 4,
                "name": "policy_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "CentralHello",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "managed_central",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "cert_bundle",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:local_scanner.proto",
      "def": {
        "messages": [
          {
            "name": "LocalScannerCertsIssueError",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "string"
              }
            ]
          },
          {
            "name": "IssueLocalScannerCertsRequest",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "IssueLocalScannerCertsResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "certificates",
                "type": "storage.TypedServiceCertificateSet"
              },
              {
                "id": 3,
                "name": "error",
                "type": "LocalScannerCertsIssueError"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/service_identity.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:network_baseline_sync.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkBaselineSync",
            "fields": [
              {
                "id": 1,
                "name": "network_baselines",
                "type": "storage.NetworkBaseline",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/network_baseline.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:network_flow.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkFlowUpdate",
            "fields": [
              {
                "id": 1,
                "name": "updated",
                "type": "storage.NetworkFlow",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "updated_endpoints",
                "type": "storage.NetworkEndpoint",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "PushNetworkEntitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "entities",
                "type": "storage.NetworkEntityInfo",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "seqID",
                "type": "int64"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_flow.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:network_policy.proto",
      "def": {
        "messages": [
          {
            "name": "SendNetworkPolicyYamlRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "notifier_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/network_policy.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:policy_sync.proto",
      "def": {
        "messages": [
          {
            "name": "PolicySync",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "storage.Policy",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:process_listening_on_ports_update.proto",
      "def": {
        "messages": [
          {
            "name": "ProcessListeningOnPortsUpdate",
            "fields": [
              {
                "id": 1,
                "name": "processes_listening_on_ports",
                "type": "storage.ProcessListeningOnPortFromSensor",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/process_listening_on_port.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:secured_cluster_notifier.proto",
      "def": {
        "messages": [
          {
            "name": "NotifierSync",
            "fields": [
              {
                "id": 1,
                "name": "notifiers",
                "type": "storage.Notifier",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TestNotifierRequest",
            "fields": [
              {
                "id": 1,
                "name": "notifier",
                "type": "storage.Notifier"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/notifier.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:sensor_events.proto",
      "def": {
        "enums": [
          {
            "name": "ResourceAction",
            "enum_fields": [
              {
                "name": "UNSET_ACTION_RESOURCE"
              },
              {
                "name": "CREATE_RESOURCE",
                "integer": 1
              },
              {
                "name": "REMOVE_RESOURCE",
                "integer": 2
              },
              {
                "name": "UPDATE_RESOURCE",
                "integer": 3
              },
              {
                "name": "SYNC_RESOURCE",
                "integer": 4
              }
            ]
          },
          {
            "name": "AlertResults.Source",
            "enum_fields": [
              {
                "name": "DEPLOYMENT_EVENT"
              },
              {
                "name": "AUDIT_EVENT",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ReprocessDeploymentRisk",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "AlertResults",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "alerts",
                "type": "storage.Alert",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "stage",
                "type": "storage.LifecycleStage"
              },
              {
                "id": 4,
                "name": "source",
                "type": "Source"
              }
            ]
          },
          {
            "name": "Timing",
            "fields": [
              {
                "id": 1,
                "name": "dispatcher",
                "type": "string"
              },
              {
                "id": 2,
                "name": "resource",
                "type": "string"
              },
              {
                "id": 3,
                "name": "nanos",
                "type": "int64"
              }
            ]
          },
          {
            "name": "SensorEvent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "action",
                "type": "ResourceAction"
              },
              {
                "id": 3,
                "name": "timing",
                "type": "Timing"
              },
              {
                "id": 26,
                "name": "sensor_hash",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "network_policy",
                "type": "storage.NetworkPolicy"
              },
              {
                "id": 5,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 19,
                "name": "pod",
                "type": "storage.Pod"
              },
              {
                "id": 6,
                "name": "namespace",
                "type": "storage.NamespaceMetadata"
              },
              {
                "id": 7,
                "name": "secret",
                "type": "storage.Secret"
              },
              {
                "id": 9,
                "name": "node",
                "type": "storage.Node"
              },
              {
                "id": 25,
                "name": "node_inventory",
                "type": "storage.NodeInventory"
              },
              {
                "id": 14,
                "name": "service_account",
                "type": "storage.ServiceAccount"
              },
              {
                "id": 15,
                "name": "role",
                "type": "storage.K8sRole"
              },
              {
                "id": 16,
                "name": "binding",
                "type": "storage.K8sRoleBinding"
              },
              {
                "id": 8,
                "name": "process_indicator",
                "type": "storage.ProcessIndicator"
              },
              {
                "id": 10,
                "name": "provider_metadata",
                "type": "storage.ProviderMetadata"
              },
              {
                "id": 11,
                "name": "synced",
                "type": "ResourcesSynced"
              },
              {
                "id": 12,
                "name": "orchestrator_metadata",
                "type": "storage.OrchestratorMetadata"
              },
              {
                "id": 13,
                "name": "image_integration",
                "type": "storage.ImageIntegration"
              },
              {
                "id": 17,
                "name": "reprocess_deployment",
                "type": "ReprocessDeploymentRisk"
              },
              {
                "id": 18,
                "name": "alert_results",
                "type": "AlertResults"
              },
              {
                "id": 20,
                "name": "compliance_operator_result",
                "type": "storage.ComplianceOperatorCheckResult"
              },
              {
                "id": 21,
                "name": "compliance_operator_profile",
                "type": "storage.ComplianceOperatorProfile"
              },
              {
                "id": 22,
                "name": "compliance_operator_rule",
                "type": "storage.ComplianceOperatorRule"
              },
              {
                "id": 23,
                "name": "compliance_operator_scan_setting_binding",
                "type": "storage.ComplianceOperatorScanSettingBinding"
              },
              {
                "id": 24,
                "name": "compliance_operator_scan",
                "type": "storage.ComplianceOperatorScan"
              }
            ],
            "messages": [
              {
                "name": "ResourcesSynced"
              }
            ]
          },
          {
            "name": "SensorEnforcement",
            "fields": [
              {
                "id": 1,
                "name": "enforcement",
                "type": "storage.EnforcementAction"
              },
              {
                "id": 2,
                "name": "deployment",
                "type": "DeploymentEnforcement"
              },
              {
                "id": 3,
                "name": "container_instance",
                "type": "ContainerInstanceEnforcement"
              }
            ]
          },
          {
            "name": "DeploymentEnforcement",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "deployment_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment_type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "alert_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "policy_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ContainerInstanceEnforcement",
            "fields": [
              {
                "id": 2,
                "name": "pod_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment_enforcement",
                "type": "DeploymentEnforcement"
              }
            ]
          },
          {
            "name": "ScrapeCommand",
            "fields": [
              {
                "id": 1,
                "name": "scrape_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "start_scrape",
                "type": "StartScrape"
              },
              {
                "id": 3,
                "name": "kill_scrape",
                "type": "KillScrape"
              }
            ]
          },
          {
            "name": "StartScrape",
            "fields": [
              {
                "id": 1,
                "name": "hostnames",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "standards",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "KillScrape"
          },
          {
            "name": "ScrapeUpdate",
            "fields": [
              {
                "id": 1,
                "name": "scrape_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "compliance_return",
                "type": "compliance.ComplianceReturn"
              },
              {
                "id": 3,
                "name": "scrape_started",
                "type": "ScrapeStarted"
              },
              {
                "id": 4,
                "name": "scrape_killed",
                "type": "ScrapeKilled"
              }
            ]
          },
          {
            "name": "ScrapeStarted",
            "fields": [
              {
                "id": 1,
                "name": "error_message",
                "type": "string"
              }
            ]
          },
          {
            "name": "ScrapeKilled",
            "fields": [
              {
                "id": 1,
                "name": "error_message",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkPoliciesCommand",
            "fields": [
              {
                "id": 1,
                "name": "seq_id",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "payload",
                "type": "Payload"
              }
            ],
            "messages": [
              {
                "name": "Apply",
                "fields": [
                  {
                    "id": 1,
                    "name": "apply_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "modification",
                    "type": "storage.NetworkPolicyModification"
                  }
                ]
              },
              {
                "name": "Payload",
                "fields": [
                  {
                    "id": 1,
                    "name": "apply",
                    "type": "Apply"
                  }
                ]
              }
            ]
          },
          {
            "name": "NetworkPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "seq_id",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "payload",
                "type": "Payload"
              }
            ],
            "messages": [
              {
                "name": "Apply",
                "fields": [
                  {
                    "id": 1,
                    "name": "apply_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "undo_modification",
                    "type": "storage.NetworkPolicyModification"
                  }
                ]
              },
              {
                "name": "Error",
                "fields": [
                  {
                    "id": 1,
                    "name": "message",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Payload",
                "fields": [
                  {
                    "id": 1,
                    "name": "error",
                    "type": "Error"
                  },
                  {
                    "id": 2,
                    "name": "apply",
                    "type": "Apply"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/compliance/compliance_data.proto"
          },
          {
            "path": "storage/alert.proto"
          },
          {
            "path": "storage/cluster.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/namespace_metadata.proto"
          },
          {
            "path": "storage/network_policy.proto"
          },
          {
            "path": "storage/node.proto"
          },
          {
            "path": "storage/secret.proto"
          },
          {
            "path": "storage/service_account.proto"
          },
          {
            "path": "storage/rbac.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          },
          {
            "path": "storage/image_integration.proto"
          },
          {
            "path": "storage/compliance_operator.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:sensor_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "MsgFromSensor",
            "fields": [
              {
                "id": 7,
                "name": "hash_key",
                "type": "string"
              },
              {
                "id": 8,
                "name": "dedupe_key",
                "type": "string"
              },
              {
                "id": 15,
                "name": "processing_attempt",
                "type": "int32"
              },
              {
                "id": 1,
                "name": "event",
                "type": "SensorEvent"
              },
              {
                "id": 2,
                "name": "network_flow_update",
                "type": "NetworkFlowUpdate"
              },
              {
                "id": 3,
                "name": "scrape_update",
                "type": "ScrapeUpdate"
              },
              {
                "id": 4,
                "name": "network_policies_response",
                "type": "NetworkPoliciesResponse"
              },
              {
                "id": 5,
                "name": "cluster_status_update",
                "type": "ClusterStatusUpdate"
              },
              {
                "id": 6,
                "name": "telemetry_data_response",
                "type": "PullTelemetryDataResponse"
              },
              {
                "id": 9,
                "name": "cluster_health_info",
                "type": "RawClusterHealthInfo"
              },
              {
                "id": 10,
                "name": "hello",
                "type": "SensorHello"
              },
              {
                "id": 11,
                "name": "audit_log_status_info",
                "type": "AuditLogStatusInfo"
              },
              {
                "id": 12,
                "name": "issue_local_scanner_certs_request",
                "type": "IssueLocalScannerCertsRequest"
              },
              {
                "id": 13,
                "name": "cluster_metrics",
                "type": "ClusterMetrics"
              },
              {
                "id": 14,
                "name": "process_listening_on_port_update",
                "type": "ProcessListeningOnPortsUpdate"
              }
            ]
          },
          {
            "name": "ReassessPolicies"
          },
          {
            "name": "ReprocessDeployments"
          },
          {
            "name": "MsgToSensor",
            "fields": [
              {
                "id": 1,
                "name": "enforcement",
                "type": "SensorEnforcement"
              },
              {
                "id": 2,
                "name": "scrape_command",
                "type": "ScrapeCommand"
              },
              {
                "id": 3,
                "name": "network_policies_command",
                "type": "NetworkPoliciesCommand"
              },
              {
                "id": 4,
                "name": "cluster_config",
                "type": "ClusterConfig"
              },
              {
                "id": 5,
                "name": "sensor_upgrade_trigger",
                "type": "SensorUpgradeTrigger"
              },
              {
                "id": 6,
                "name": "telemetry_data_request",
                "type": "PullTelemetryDataRequest"
              },
              {
                "id": 7,
                "name": "policy_sync",
                "type": "PolicySync"
              },
              {
                "id": 8,
                "name": "reassess_policies",
                "type": "ReassessPolicies"
              },
              {
                "id": 9,
                "name": "baseline_sync",
                "type": "BaselineSync"
              },
              {
                "id": 10,
                "name": "cancel_pull_telemetry_data_request",
                "type": "CancelPullTelemetryDataRequest"
              },
              {
                "id": 11,
                "name": "push_network_entities_request",
                "type": "PushNetworkEntitiesRequest"
              },
              {
                "id": 12,
                "name": "hello",
                "type": "CentralHello"
              },
              {
                "id": 13,
                "name": "network_baseline_sync",
                "type": "NetworkBaselineSync"
              },
              {
                "id": 14,
                "name": "audit_log_sync",
                "type": "AuditLogSync"
              },
              {
                "id": 15,
                "name": "reprocess_deployment",
                "type": "ReprocessDeployment"
              },
              {
                "id": 16,
                "name": "invalidate_image_cache",
                "type": "InvalidateImageCache"
              },
              {
                "id": 17,
                "name": "issue_local_scanner_certs_response",
                "type": "IssueLocalScannerCertsResponse"
              },
              {
                "id": 18,
                "name": "updated_image",
                "type": "storage.Image"
              },
              {
                "id": 19,
                "name": "reprocess_deployments",
                "type": "ReprocessDeployments"
              },
              {
                "id": 20,
                "name": "notifier_sync",
                "type": "NotifierSync"
              },
              {
                "id": 21,
                "name": "test_notifier_request",
                "type": "TestNotifierRequest"
              },
              {
                "id": 22,
                "name": "send_network_policy_yaml",
                "type": "SendNetworkPolicyYamlRequest"
              }
            ]
          },
          {
            "name": "AuditLogSync",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "node_audit_log_file_states",
                  "type": "storage.AuditLogFileState"
                }
              }
            ]
          },
          {
            "name": "AuditLogStatusInfo",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "node_audit_log_file_states",
                  "type": "storage.AuditLogFileState"
                }
              }
            ]
          },
          {
            "name": "ReprocessDeployment",
            "fields": [
              {
                "id": 1,
                "name": "deployment_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "InvalidateImageCache",
            "fields": [
              {
                "id": 1,
                "name": "image_keys",
                "type": "ImageKey",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ImageKey",
                "fields": [
                  {
                    "id": 1,
                    "name": "image_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "image_full_name",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SensorService",
            "rpcs": [
              {
                "name": "Communicate",
                "in_type": "MsgFromSensor",
                "out_type": "MsgToSensor",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/central/cluster_config.proto"
          },
          {
            "path": "internalapi/central/cluster_status.proto"
          },
          {
            "path": "internalapi/central/network_flow.proto"
          },
          {
            "path": "internalapi/central/policy_sync.proto"
          },
          {
            "path": "internalapi/central/sensor_events.proto"
          },
          {
            "path": "internalapi/central/sensor_upgrade.proto"
          },
          {
            "path": "internalapi/central/cluster_metrics.proto"
          },
          {
            "path": "internalapi/central/telemetry.proto"
          },
          {
            "path": "internalapi/central/baseline_sync.proto"
          },
          {
            "path": "internalapi/central/hello.proto"
          },
          {
            "path": "internalapi/central/network_baseline_sync.proto"
          },
          {
            "path": "internalapi/central/network_policy.proto"
          },
          {
            "path": "internalapi/central/local_scanner.proto"
          },
          {
            "path": "internalapi/central/process_listening_on_ports_update.proto"
          },
          {
            "path": "internalapi/central/secured_cluster_notifier.proto"
          },
          {
            "path": "storage/cluster.proto"
          },
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:sensor_upgrade.proto",
      "def": {
        "messages": [
          {
            "name": "SensorUpgradeTrigger",
            "fields": [
              {
                "id": 1,
                "name": "upgrade_process_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image",
                "type": "string"
              },
              {
                "id": 3,
                "name": "command",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "env_vars",
                "type": "EnvVarDef",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "EnvVarDef",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "source_env_var",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "default_value",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:sensor_upgrade_ctrl_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "UpgradeCheckInFromUpgraderRequest",
            "fields": [
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "upgrade_process_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "current_workflow",
                "type": "string"
              },
              {
                "id": 3,
                "name": "last_executed_stage",
                "type": "string"
              },
              {
                "id": 4,
                "name": "last_executed_stage_error",
                "type": "string"
              }
            ]
          },
          {
            "name": "UpgradeCheckInFromUpgraderResponse",
            "fields": [
              {
                "id": 1,
                "name": "workflow_to_execute",
                "type": "string"
              }
            ]
          },
          {
            "name": "UpgradeCheckInFromSensorRequest",
            "fields": [
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "upgrade_process_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "launch_error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "pod_states",
                "type": "UpgraderPodStates"
              },
              {
                "id": 4,
                "name": "deployment_gone",
                "type": "bool"
              }
            ],
            "messages": [
              {
                "name": "PodErrorCondition",
                "fields": [
                  {
                    "id": 1,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "image_related",
                    "type": "bool"
                  }
                ]
              },
              {
                "name": "UpgraderPodState",
                "fields": [
                  {
                    "id": 1,
                    "name": "pod_name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "started",
                    "type": "bool"
                  },
                  {
                    "id": 3,
                    "name": "error",
                    "type": "PodErrorCondition"
                  }
                ]
              },
              {
                "name": "UpgraderPodStates",
                "fields": [
                  {
                    "id": 1,
                    "name": "states",
                    "type": "UpgraderPodState",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "UpgradeCheckInResponseDetails",
            "messages": [
              {
                "name": "NoUpgradeInProgress"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SensorUpgradeControlService",
            "rpcs": [
              {
                "name": "UpgradeCheckInFromUpgrader",
                "in_type": "UpgradeCheckInFromUpgraderRequest",
                "out_type": "UpgradeCheckInFromUpgraderResponse"
              },
              {
                "name": "UpgradeCheckInFromSensor",
                "in_type": "UpgradeCheckInFromSensorRequest",
                "out_type": "google.protobuf.Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/empty.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:central:/:telemetry.proto",
      "def": {
        "enums": [
          {
            "name": "PullTelemetryDataRequest.TelemetryDataType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "KUBERNETES_INFO",
                "integer": 1
              },
              {
                "name": "CLUSTER_INFO",
                "integer": 2
              },
              {
                "name": "METRICS",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CancelPullTelemetryDataRequest",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "PullTelemetryDataRequest",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "data_type",
                "type": "TelemetryDataType"
              },
              {
                "id": 3,
                "name": "timeout_ms",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "since",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "TelemetryResponsePayload",
            "fields": [
              {
                "id": 1,
                "name": "end_of_stream",
                "type": "EndOfStream"
              },
              {
                "id": 2,
                "name": "kubernetes_info",
                "type": "KubernetesInfo"
              },
              {
                "id": 3,
                "name": "cluster_info",
                "type": "ClusterInfo"
              },
              {
                "id": 4,
                "name": "metrics_info",
                "type": "KubernetesInfo"
              }
            ],
            "messages": [
              {
                "name": "EndOfStream",
                "fields": [
                  {
                    "id": 1,
                    "name": "error_message",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "KubernetesInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "files",
                    "type": "File",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "File",
                    "fields": [
                      {
                        "id": 1,
                        "name": "path",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "contents",
                        "type": "bytes"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ClusterInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "chunk",
                    "type": "bytes"
                  }
                ]
              }
            ]
          },
          {
            "name": "PullTelemetryDataResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "payload",
                "type": "TelemetryResponsePayload"
              }
            ]
          },
          {
            "name": "TelemetryConfig",
            "fields": [
              {
                "id": 1,
                "name": "user_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 3,
                "name": "storage_key_v1",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:compliance:/:compliance_data.proto",
      "def": {
        "messages": [
          {
            "name": "GZIPDataChunk",
            "fields": [
              {
                "id": 1,
                "name": "gzip",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "File",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "user",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "user_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "group",
                "type": "uint32"
              },
              {
                "id": 5,
                "name": "group_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "permissions",
                "type": "uint32"
              },
              {
                "id": 7,
                "name": "content",
                "type": "bytes"
              },
              {
                "id": 8,
                "name": "is_dir",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "children",
                "type": "File",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CommandLine",
            "fields": [
              {
                "id": 1,
                "name": "process",
                "type": "string"
              },
              {
                "id": 2,
                "name": "args",
                "type": "Args",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Args",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "file",
                    "type": "File"
                  }
                ]
              }
            ]
          },
          {
            "name": "InsecureRegistriesConfig",
            "fields": [
              {
                "id": 1,
                "name": "insecure_registries",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "insecure_cidrs",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ContainerRuntimeInfo",
            "fields": [
              {
                "id": 1,
                "name": "insecure_registries",
                "type": "InsecureRegistriesConfig"
              }
            ]
          },
          {
            "name": "ComplianceStandardResult",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "node_check_results",
                  "type": "storage.ComplianceResultValue"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "cluster_check_results",
                  "type": "storage.ComplianceResultValue"
                }
              }
            ]
          },
          {
            "name": "ComplianceReturn",
            "fields": [
              {
                "id": 1,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scrape_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "docker_data",
                "type": "GZIPDataChunk"
              },
              {
                "id": 9,
                "name": "container_runtime_info",
                "type": "ContainerRuntimeInfo"
              },
              {
                "id": 7,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "evidence",
                "type": "GZIPDataChunk"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "command_lines",
                  "type": "CommandLine"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "files",
                  "type": "File"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "systemd_files",
                  "type": "File"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/compliance.proto"
          }
        ],
        "package": {
          "name": "compliance"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:sensor:/:admission_control.proto",
      "def": {
        "messages": [
          {
            "name": "AdmissionControlSettings",
            "fields": [
              {
                "id": 1,
                "name": "cluster_config",
                "type": "storage.DynamicClusterConfig"
              },
              {
                "id": 2,
                "name": "enforced_deploy_time_policies",
                "type": "storage.PolicyList"
              },
              {
                "id": 3,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "cache_version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "central_endpoint",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "runtime_policies",
                "type": "storage.PolicyList"
              },
              {
                "id": 8,
                "name": "notifier_sync",
                "type": "central.NotifierSync"
              }
            ]
          },
          {
            "name": "AdmissionControlAlerts",
            "fields": [
              {
                "id": 1,
                "name": "alert_results",
                "type": "central.AlertResults",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AdmCtrlUpdateResourceRequest",
            "fields": [
              {
                "id": 1,
                "name": "action",
                "type": "central.ResourceAction"
              },
              {
                "id": 2,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 3,
                "name": "pod",
                "type": "storage.Pod"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "storage.NamespaceMetadata"
              },
              {
                "id": 5,
                "name": "synced",
                "type": "ResourcesSynced"
              }
            ],
            "messages": [
              {
                "name": "ResourcesSynced"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          },
          {
            "path": "storage/namespace_metadata.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "internalapi/central/secured_cluster_notifier.proto"
          },
          {
            "path": "internalapi/central/sensor_events.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:sensor:/:admission_control_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "MsgFromAdmissionControl"
          },
          {
            "name": "MsgToAdmissionControl",
            "fields": [
              {
                "id": 1,
                "name": "settings_push",
                "type": "AdmissionControlSettings"
              },
              {
                "id": 2,
                "name": "update_resource_request",
                "type": "AdmCtrlUpdateResourceRequest"
              },
              {
                "id": 3,
                "name": "test_notifier_request",
                "type": "central.TestNotifierRequest"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AdmissionControlManagementService",
            "rpcs": [
              {
                "name": "Communicate",
                "in_type": "MsgFromAdmissionControl",
                "out_type": "MsgToAdmissionControl",
                "in_streamed": true,
                "out_streamed": true
              },
              {
                "name": "PolicyAlerts",
                "in_type": "AdmissionControlAlerts",
                "out_type": "google.protobuf.Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/sensor/admission_control.proto"
          },
          {
            "path": "internalapi/central/secured_cluster_notifier.proto"
          },
          {
            "path": "google/protobuf/empty.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:sensor:/:cert_distribution_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "FetchCertificateRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_type",
                "type": "storage.ServiceType"
              },
              {
                "id": 2,
                "name": "service_account_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "FetchCertificateResponse",
            "fields": [
              {
                "id": 1,
                "name": "pem_cert",
                "type": "string"
              },
              {
                "id": 2,
                "name": "pem_key",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CertDistributionService",
            "rpcs": [
              {
                "name": "FetchCertificate",
                "in_type": "FetchCertificateRequest",
                "out_type": "FetchCertificateResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/service_identity.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:sensor:/:collector.proto",
      "def": {
        "messages": [
          {
            "name": "CollectorRegisterRequest",
            "fields": [
              {
                "id": 1,
                "name": "hostname",
                "type": "string"
              },
              {
                "id": 2,
                "name": "instance_id",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:sensor:/:compliance_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "GetScrapeConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scrape_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "AuditEvents",
            "fields": [
              {
                "id": 1,
                "name": "events",
                "type": "storage.KubernetesEvent",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MsgFromCompliance",
            "fields": [
              {
                "id": 1,
                "name": "node",
                "type": "string"
              },
              {
                "id": 2,
                "name": "return",
                "type": "compliance.ComplianceReturn"
              },
              {
                "id": 3,
                "name": "audit_events",
                "type": "AuditEvents"
              },
              {
                "id": 4,
                "name": "node_inventory",
                "type": "storage.NodeInventory"
              }
            ]
          },
          {
            "name": "MsgToCompliance",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "ScrapeConfig"
              },
              {
                "id": 2,
                "name": "trigger",
                "type": "TriggerRun"
              },
              {
                "id": 3,
                "name": "audit_log_collection_request",
                "type": "AuditLogCollectionRequest"
              }
            ],
            "messages": [
              {
                "name": "ScrapeConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "container_runtime",
                    "type": "storage.ContainerRuntime"
                  },
                  {
                    "id": 2,
                    "name": "is_master_node",
                    "type": "bool"
                  }
                ]
              },
              {
                "name": "TriggerRun",
                "fields": [
                  {
                    "id": 1,
                    "name": "scrape_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "standard_ids",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "AuditLogCollectionRequest",
                "fields": [
                  {
                    "id": 1,
                    "name": "start_req",
                    "type": "StartRequest"
                  },
                  {
                    "id": 2,
                    "name": "stop_req",
                    "type": "StopRequest"
                  }
                ],
                "messages": [
                  {
                    "name": "StartRequest",
                    "fields": [
                      {
                        "id": 1,
                        "name": "cluster_id",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "collect_start_state",
                        "type": "storage.AuditLogFileState"
                      }
                    ]
                  },
                  {
                    "name": "StopRequest"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceService",
            "rpcs": [
              {
                "name": "Communicate",
                "in_type": "MsgFromCompliance",
                "out_type": "MsgToCompliance",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/compliance/compliance_data.proto"
          },
          {
            "path": "storage/cluster.proto"
          },
          {
            "path": "storage/container_runtime.proto"
          },
          {
            "path": "storage/kube_event.proto"
          },
          {
            "path": "storage/node.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:sensor:/:deployment_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "GetDeploymentForPodRequest",
            "fields": [
              {
                "id": 1,
                "name": "pod_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DeploymentService",
            "rpcs": [
              {
                "name": "GetDeploymentForPod",
                "in_type": "GetDeploymentForPodRequest",
                "out_type": "storage.Deployment"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/deployment.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:sensor:/:image_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "GetImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.ContainerImage"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scan_inline",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetImageResponse",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.Image"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImageService",
            "rpcs": [
              {
                "name": "GetImage",
                "in_type": "GetImageRequest",
                "out_type": "GetImageResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:sensor:/:network_connection_info.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkConnectionInfo",
            "fields": [
              {
                "id": 1,
                "name": "updated_connections",
                "type": "NetworkConnection",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "updated_endpoints",
                "type": "NetworkEndpoint",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NetworkConnection",
            "fields": [
              {
                "id": 1,
                "name": "socket_family",
                "type": "SocketFamily"
              },
              {
                "id": 2,
                "name": "local_address",
                "type": "NetworkAddress"
              },
              {
                "id": 3,
                "name": "remote_address",
                "type": "NetworkAddress"
              },
              {
                "id": 4,
                "name": "protocol",
                "type": "storage.L4Protocol"
              },
              {
                "id": 5,
                "name": "role",
                "type": "ClientServerRole"
              },
              {
                "id": 6,
                "name": "container_id",
                "type": "string"
              },
              {
                "id": 11,
                "name": "close_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NetworkEndpoint",
            "fields": [
              {
                "id": 1,
                "name": "socket_family",
                "type": "SocketFamily"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "storage.L4Protocol"
              },
              {
                "id": 3,
                "name": "listen_address",
                "type": "NetworkAddress"
              },
              {
                "id": 4,
                "name": "container_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "close_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "originator",
                "type": "storage.NetworkProcessUniqueKey"
              }
            ]
          },
          {
            "name": "NetworkAddress",
            "fields": [
              {
                "id": 1,
                "name": "address_data",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "ip_network",
                "type": "bytes"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "internalapi/sensor/network_enums.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:sensor:/:network_connection_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkConnectionInfoMessage",
            "fields": [
              {
                "id": 1,
                "name": "register",
                "type": "CollectorRegisterRequest"
              },
              {
                "id": 2,
                "name": "info",
                "type": "NetworkConnectionInfo"
              }
            ]
          },
          {
            "name": "NetworkFlowsControlMessage",
            "fields": [
              {
                "id": 1,
                "name": "public_ip_addresses",
                "type": "IPAddressList"
              },
              {
                "id": 2,
                "name": "ip_networks",
                "type": "IPNetworkList"
              }
            ]
          },
          {
            "name": "IPAddressList",
            "fields": [
              {
                "id": 1,
                "name": "ipv4_addresses",
                "type": "fixed32",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "ipv6_addresses",
                "type": "fixed64",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IPNetworkList",
            "fields": [
              {
                "id": 1,
                "name": "ipv4_networks",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "ipv6_networks",
                "type": "bytes"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NetworkConnectionInfoService",
            "rpcs": [
              {
                "name": "PushNetworkConnectionInfo",
                "in_type": "NetworkConnectionInfoMessage",
                "out_type": "NetworkFlowsControlMessage",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/sensor/collector.proto"
          },
          {
            "path": "internalapi/sensor/network_connection_info.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:sensor:/:network_enums.proto",
      "def": {
        "enums": [
          {
            "name": "ClientServerRole",
            "enum_fields": [
              {
                "name": "ROLE_UNKNOWN"
              },
              {
                "name": "ROLE_SERVER",
                "integer": 1
              },
              {
                "name": "ROLE_CLIENT",
                "integer": 2
              }
            ]
          },
          {
            "name": "SocketFamily",
            "enum_fields": [
              {
                "name": "SOCKET_FAMILY_UNKNOWN"
              },
              {
                "name": "SOCKET_FAMILY_IPV4",
                "integer": 1
              },
              {
                "name": "SOCKET_FAMILY_IPV6",
                "integer": 2
              }
            ]
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:sensor:/:signal_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "SignalStreamMessage",
            "fields": [
              {
                "id": 1,
                "name": "collector_register_request",
                "type": "CollectorRegisterRequest"
              },
              {
                "id": 2,
                "name": "signal",
                "type": "v1.Signal"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SignalService",
            "rpcs": [
              {
                "name": "PushSignals",
                "in_type": "SignalStreamMessage",
                "out_type": "v1.Empty",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/sensor/collector.proto"
          },
          {
            "path": "api/v1/signal.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:internalapi:/:wrapper:/:splunk_alert.proto",
      "def": {
        "messages": [
          {
            "name": "SplunkEvent",
            "fields": [
              {
                "id": 1,
                "name": "event",
                "type": "google.protobuf.Any"
              },
              {
                "id": 2,
                "name": "source",
                "type": "string"
              },
              {
                "id": 3,
                "name": "sourcetype",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "wrapper"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:scanner:/:api:/:v1:/:component.proto",
      "def": {
        "enums": [
          {
            "name": "SourceType",
            "enum_fields": [
              {
                "name": "UNSET_SOURCE_TYPE"
              },
              {
                "name": "JAVA",
                "integer": 1
              },
              {
                "name": "PYTHON",
                "integer": 2
              },
              {
                "name": "NPM",
                "integer": 3
              },
              {
                "name": "GEM",
                "integer": 4
              },
              {
                "name": "DOTNETCORERUNTIME",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Components",
            "fields": [
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 1,
                "name": "os_components",
                "type": "OSComponent",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "rhel_components",
                "type": "RHELComponent",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "language_components",
                "type": "LanguageComponent",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "rhel_content_sets",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "OSComponent",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "added_by",
                "type": "string"
              },
              {
                "id": 5,
                "name": "executables",
                "type": "Executable",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RHELComponent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "arch",
                "type": "string"
              },
              {
                "id": 6,
                "name": "module",
                "type": "string"
              },
              {
                "id": 7,
                "name": "cpes",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "added_by",
                "type": "string"
              },
              {
                "id": 9,
                "name": "executables",
                "type": "Executable",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LanguageComponent",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "SourceType"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "location",
                "type": "string"
              },
              {
                "id": 5,
                "name": "java",
                "type": "JavaComponent"
              },
              {
                "id": 6,
                "name": "python",
                "type": "PythonComponent"
              },
              {
                "id": 7,
                "name": "added_by",
                "type": "string"
              }
            ]
          },
          {
            "name": "JavaComponent",
            "fields": [
              {
                "id": 1,
                "name": "implementation_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "maven_version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "origins",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "specification_version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "bundle_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "PythonComponent",
            "fields": [
              {
                "id": 1,
                "name": "homepage",
                "type": "string"
              },
              {
                "id": 2,
                "name": "author_email",
                "type": "string"
              },
              {
                "id": 3,
                "name": "download_url",
                "type": "string"
              },
              {
                "id": 4,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 5,
                "name": "description",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "scanner/api/v1/vulnerability.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:scanner:/:api:/:v1:/:empty.proto",
      "def": {
        "messages": [
          {
            "name": "Empty"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:scanner:/:api:/:v1:/:image.proto",
      "def": {
        "messages": [
          {
            "name": "Image",
            "fields": [
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 1,
                "name": "features",
                "type": "Feature",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "scanner/api/v1/vulnerability.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:scanner:/:api:/:v1:/:image_scan_service.proto",
      "def": {
        "enums": [
          {
            "name": "ScanStatus",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "ANALYZING",
                "integer": 1
              },
              {
                "name": "FAILED",
                "integer": 2
              },
              {
                "name": "SUCCEEDED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ScanImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "string"
              },
              {
                "id": 2,
                "name": "registry",
                "type": "RegistryData"
              },
              {
                "id": 3,
                "name": "uncertifiedRHEL",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ScanImageResponse",
            "fields": [
              {
                "id": 3,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "status",
                "type": "ScanStatus"
              },
              {
                "id": 2,
                "name": "image",
                "type": "ImageSpec"
              }
            ]
          },
          {
            "name": "GetImageScanRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_spec",
                "type": "ImageSpec"
              },
              {
                "id": 2,
                "name": "uncertifiedRHEL",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetImageScanResponse",
            "fields": [
              {
                "id": 4,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "status",
                "type": "ScanStatus"
              },
              {
                "id": 2,
                "name": "image",
                "type": "Image"
              },
              {
                "id": 3,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetImageComponentsRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "string"
              },
              {
                "id": 2,
                "name": "registry",
                "type": "RegistryData"
              }
            ]
          },
          {
            "name": "GetImageComponentsResponse",
            "fields": [
              {
                "id": 4,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "status",
                "type": "ScanStatus"
              },
              {
                "id": 2,
                "name": "components",
                "type": "Components"
              },
              {
                "id": 3,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetImageVulnerabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "components",
                "type": "Components"
              },
              {
                "id": 2,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetImageVulnerabilitiesResponse",
            "fields": [
              {
                "id": 3,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "status",
                "type": "ScanStatus"
              },
              {
                "id": 2,
                "name": "image",
                "type": "Image"
              }
            ]
          },
          {
            "name": "GetLanguageLevelComponentsRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_spec",
                "type": "ImageSpec"
              },
              {
                "id": 2,
                "name": "uncertifiedRHEL",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetLanguageLevelComponentsResponse",
            "fields": [
              {
                "id": 2,
                "name": "scanner_version",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "layer_to_components",
                  "type": "LanguageLevelComponents"
                }
              }
            ]
          },
          {
            "name": "ImageSpec",
            "fields": [
              {
                "id": 1,
                "name": "digest",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image",
                "type": "string"
              }
            ]
          },
          {
            "name": "RegistryData",
            "fields": [
              {
                "id": 1,
                "name": "url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "username",
                "type": "string"
              },
              {
                "id": 3,
                "name": "password",
                "type": "string"
              },
              {
                "id": 4,
                "name": "insecure",
                "type": "bool"
              }
            ]
          },
          {
            "name": "LanguageLevelComponents",
            "fields": [
              {
                "id": 1,
                "name": "components",
                "type": "LanguageLevelComponent",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LanguageLevelComponent",
            "fields": [
              {
                "id": 1,
                "name": "source_type",
                "type": "SourceType"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "location",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImageScanService",
            "rpcs": [
              {
                "name": "ScanImage",
                "in_type": "ScanImageRequest",
                "out_type": "ScanImageResponse"
              },
              {
                "name": "GetImageScan",
                "in_type": "GetImageScanRequest",
                "out_type": "GetImageScanResponse"
              },
              {
                "name": "GetImageComponents",
                "in_type": "GetImageComponentsRequest",
                "out_type": "GetImageComponentsResponse"
              },
              {
                "name": "GetImageVulnerabilities",
                "in_type": "GetImageVulnerabilitiesRequest",
                "out_type": "GetImageVulnerabilitiesResponse"
              },
              {
                "name": "GetLanguageLevelComponents",
                "in_type": "GetLanguageLevelComponentsRequest",
                "out_type": "GetLanguageLevelComponentsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "scanner/api/v1/component.proto"
          },
          {
            "path": "scanner/api/v1/image.proto"
          },
          {
            "path": "scanner/api/v1/note.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:scanner:/:api:/:v1:/:metadata_service.proto",
      "def": {
        "messages": [
          {
            "name": "VulnDefsMetadata",
            "fields": [
              {
                "id": 1,
                "name": "last_updated_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "VulnDefsService",
            "rpcs": [
              {
                "name": "GetVulnDefsMetadata",
                "in_type": "Empty",
                "out_type": "VulnDefsMetadata"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "scanner/api/v1/empty.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:scanner:/:api:/:v1:/:node_inventory_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetNodeInventoryResponse",
            "fields": [
              {
                "id": 1,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "components",
                "type": "Components"
              },
              {
                "id": 3,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNodeInventoryRequest"
          }
        ],
        "services": [
          {
            "name": "NodeInventoryService",
            "rpcs": [
              {
                "name": "GetNodeInventory",
                "in_type": "GetNodeInventoryRequest",
                "out_type": "GetNodeInventoryResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "scanner/api/v1/note.proto"
          },
          {
            "path": "scanner/api/v1/component.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:scanner:/:api:/:v1:/:node_scan_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetNodeVulnerabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "os_image",
                "type": "string"
              },
              {
                "id": 2,
                "name": "kernel_version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "kubelet_version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "kubeproxy_version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "runtime",
                "type": "ContainerRuntime"
              },
              {
                "id": 6,
                "name": "components",
                "type": "Components"
              },
              {
                "id": 7,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ContainerRuntime",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "version",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetNodeVulnerabilitiesResponse",
            "fields": [
              {
                "id": 7,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 6,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 1,
                "name": "kernel_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "kubelet_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "kubeproxy_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "runtime_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "kernel_component",
                "type": "KernelComponent"
              },
              {
                "id": 8,
                "name": "node_notes",
                "type": "NodeNote",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "features",
                "type": "Feature",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "KernelComponent",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "version",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NodeScanService",
            "rpcs": [
              {
                "name": "GetNodeVulnerabilities",
                "in_type": "GetNodeVulnerabilitiesRequest",
                "out_type": "GetNodeVulnerabilitiesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "scanner/api/v1/note.proto"
          },
          {
            "path": "scanner/api/v1/vulnerability.proto"
          },
          {
            "path": "scanner/api/v1/component.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:scanner:/:api:/:v1:/:note.proto",
      "def": {
        "enums": [
          {
            "name": "Note",
            "enum_fields": [
              {
                "name": "OS_CVES_UNAVAILABLE"
              },
              {
                "name": "OS_CVES_STALE",
                "integer": 1
              },
              {
                "name": "LANGUAGE_CVES_UNAVAILABLE",
                "integer": 2
              },
              {
                "name": "CERTIFIED_RHEL_SCAN_UNAVAILABLE",
                "integer": 3
              }
            ]
          },
          {
            "name": "NodeNote",
            "enum_fields": [
              {
                "name": "NODE_UNSUPPORTED"
              },
              {
                "name": "NODE_KERNEL_UNSUPPORTED",
                "integer": 1
              },
              {
                "name": "NODE_CERTIFIED_RHEL_CVES_UNAVAILABLE",
                "integer": 2
              }
            ]
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:scanner:/:api:/:v1:/:orchestrator_scan_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetKubeVulnerabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "kubernetes_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetKubeVulnerabilitiesResponse",
            "fields": [
              {
                "id": 6,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "aggregator_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "apiserver_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "controller_manager_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "scheduler_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "generic_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetIstioVulnerabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "istio_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetIstioVulnerabilitiesResponse",
            "fields": [
              {
                "id": 1,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetOpenShiftVulnerabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "openShift_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetOpenShiftVulnerabilitiesResponse",
            "fields": [
              {
                "id": 2,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "OrchestratorScanService",
            "rpcs": [
              {
                "name": "GetKubeVulnerabilities",
                "in_type": "GetKubeVulnerabilitiesRequest",
                "out_type": "GetKubeVulnerabilitiesResponse"
              },
              {
                "name": "GetOpenShiftVulnerabilities",
                "in_type": "GetOpenShiftVulnerabilitiesRequest",
                "out_type": "GetOpenShiftVulnerabilitiesResponse"
              },
              {
                "name": "GetIstioVulnerabilities",
                "in_type": "GetIstioVulnerabilitiesRequest",
                "out_type": "GetIstioVulnerabilitiesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "scanner/api/v1/vulnerability.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:scanner:/:api:/:v1:/:ping_service.proto",
      "def": {
        "messages": [
          {
            "name": "PongMessage",
            "fields": [
              {
                "id": 2,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "status",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PingService",
            "rpcs": [
              {
                "name": "Ping",
                "in_type": "Empty",
                "out_type": "PongMessage"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "scanner/api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:scanner:/:api:/:v1:/:vulnerability.proto",
      "def": {
        "messages": [
          {
            "name": "Feature",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "feature_type",
                "type": "string"
              },
              {
                "id": 5,
                "name": "added_by_layer",
                "type": "string"
              },
              {
                "id": 6,
                "name": "location",
                "type": "string"
              },
              {
                "id": 3,
                "name": "vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 7,
                "name": "provided_executables",
                "type": "Executable",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Executable",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "required_features",
                "type": "FeatureNameVersion",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FeatureNameVersion",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              }
            ]
          },
          {
            "name": "Vulnerability",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "description",
                "type": "string"
              },
              {
                "id": 3,
                "name": "link",
                "type": "string"
              },
              {
                "id": 6,
                "name": "metadata_v2",
                "type": "Metadata"
              },
              {
                "id": 5,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 7,
                "name": "severity",
                "type": "string"
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "Metadata",
            "fields": [
              {
                "id": 1,
                "name": "published_date_time",
                "type": "string"
              },
              {
                "id": 2,
                "name": "last_modified_date_time",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cvss_v2",
                "type": "CVSSMetadata"
              },
              {
                "id": 4,
                "name": "cvss_v3",
                "type": "CVSSMetadata"
              }
            ]
          },
          {
            "name": "CVSSMetadata",
            "fields": [
              {
                "id": 1,
                "name": "vector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "score",
                "type": "float"
              },
              {
                "id": 3,
                "name": "exploitability_score",
                "type": "float"
              },
              {
                "id": 4,
                "name": "impact_score",
                "type": "float"
              }
            ]
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:shared:/:license:/:license.proto",
      "def": {
        "messages": [
          {
            "name": "License",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "Metadata"
              },
              {
                "id": 2,
                "name": "support_contact",
                "type": "Contact"
              },
              {
                "id": 3,
                "name": "restrictions",
                "type": "Restrictions"
              }
            ],
            "messages": [
              {
                "name": "Contact",
                "fields": [
                  {
                    "id": 1,
                    "name": "phone",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "email",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "url",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Metadata",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "signing_key_id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "issue_date",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 4,
                    "name": "licensed_for_id",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "licensed_for_name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Restrictions",
                "fields": [
                  {
                    "id": 1,
                    "name": "not_valid_before",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 2,
                    "name": "not_valid_after",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 3,
                    "name": "enforcement_url",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "allow_offline",
                    "type": "bool"
                  },
                  {
                    "id": 5,
                    "name": "max_nodes",
                    "type": "int32"
                  },
                  {
                    "id": 6,
                    "name": "no_node_restriction",
                    "type": "bool"
                  },
                  {
                    "id": 7,
                    "name": "build_flavors",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 8,
                    "name": "no_build_flavor_restriction",
                    "type": "bool"
                  },
                  {
                    "id": 9,
                    "name": "deployment_environments",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 10,
                    "name": "no_deployment_environment_restriction",
                    "type": "bool"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "license"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:active_component.proto",
      "def": {
        "messages": [
          {
            "name": "ActiveComponent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "component_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "active_contexts_slice",
                "type": "ActiveContext",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "DEPRECATED_active_contexts",
                  "type": "ActiveContext"
                }
              }
            ],
            "messages": [
              {
                "name": "ActiveContext",
                "fields": [
                  {
                    "id": 1,
                    "name": "container_name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "image_id",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:alert.proto",
      "def": {
        "enums": [
          {
            "name": "Resource.ResourceType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "SECRETS",
                "integer": 1
              },
              {
                "name": "CONFIGMAPS",
                "integer": 2
              }
            ]
          },
          {
            "name": "Violation.Type",
            "enum_fields": [
              {
                "name": "GENERIC"
              },
              {
                "name": "K8S_EVENT",
                "integer": 1
              },
              {
                "name": "NETWORK_FLOW",
                "integer": 2
              },
              {
                "name": "NETWORK_POLICY",
                "integer": 3
              }
            ]
          },
          {
            "name": "ListAlert.ResourceType",
            "enum_fields": [
              {
                "name": "DEPLOYMENT"
              },
              {
                "name": "SECRETS",
                "integer": 1
              },
              {
                "name": "CONFIGMAPS",
                "integer": 2
              }
            ]
          },
          {
            "name": "ViolationState",
            "enum_fields": [
              {
                "name": "ACTIVE"
              },
              {
                "name": "SNOOZED",
                "integer": 1
              },
              {
                "name": "RESOLVED",
                "integer": 2
              },
              {
                "name": "ATTEMPTED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Alert",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "policy",
                "type": "Policy"
              },
              {
                "id": 3,
                "name": "lifecycle_stage",
                "type": "LifecycleStage"
              },
              {
                "id": 18,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 19,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 20,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 21,
                "name": "namespace_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "deployment",
                "type": "Deployment"
              },
              {
                "id": 15,
                "name": "image",
                "type": "ContainerImage"
              },
              {
                "id": 16,
                "name": "resource",
                "type": "Resource"
              },
              {
                "id": 5,
                "name": "violations",
                "type": "Violation",
                "is_repeated": true
              },
              {
                "id": 13,
                "name": "process_violation",
                "type": "ProcessViolation"
              },
              {
                "id": 6,
                "name": "enforcement",
                "type": "Enforcement"
              },
              {
                "id": 7,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "first_occurred",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 17,
                "name": "resolved_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 11,
                "name": "state",
                "type": "ViolationState"
              },
              {
                "id": 12,
                "name": "snooze_till",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "reserved_ids": [
              14
            ],
            "messages": [
              {
                "name": "Deployment",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 16,
                    "name": "namespace_id",
                    "type": "string"
                  },
                  {
                    "id": 9,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 10,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 11,
                    "name": "containers",
                    "type": "Container",
                    "is_repeated": true
                  },
                  {
                    "id": 15,
                    "name": "inactive",
                    "type": "bool"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 7,
                      "name": "labels",
                      "type": "string"
                    }
                  },
                  {
                    "key_type": "string",
                    "field": {
                      "id": 14,
                      "name": "annotations",
                      "type": "string"
                    }
                  }
                ],
                "messages": [
                  {
                    "name": "Container",
                    "fields": [
                      {
                        "id": 3,
                        "name": "image",
                        "type": "ContainerImage"
                      },
                      {
                        "id": 10,
                        "name": "name",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Resource",
                "fields": [
                  {
                    "id": 1,
                    "name": "resource_type",
                    "type": "ResourceType"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 6,
                    "name": "namespace_id",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Violation",
                "fields": [
                  {
                    "id": 1,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "key_value_attrs",
                    "type": "KeyValueAttrs"
                  },
                  {
                    "id": 7,
                    "name": "network_flow_info",
                    "type": "NetworkFlowInfo"
                  },
                  {
                    "id": 5,
                    "name": "type",
                    "type": "Type"
                  },
                  {
                    "id": 6,
                    "name": "time",
                    "type": "google.protobuf.Timestamp"
                  }
                ],
                "reserved_ids": [
                  2,
                  3
                ],
                "messages": [
                  {
                    "name": "KeyValueAttrs",
                    "fields": [
                      {
                        "id": 1,
                        "name": "attrs",
                        "type": "KeyValueAttr",
                        "is_repeated": true
                      }
                    ],
                    "messages": [
                      {
                        "name": "KeyValueAttr",
                        "fields": [
                          {
                            "id": 1,
                            "name": "key",
                            "type": "string"
                          },
                          {
                            "id": 2,
                            "name": "value",
                            "type": "string"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "NetworkFlowInfo",
                    "fields": [
                      {
                        "id": 1,
                        "name": "protocol",
                        "type": "storage.L4Protocol"
                      },
                      {
                        "id": 2,
                        "name": "source",
                        "type": "Entity"
                      },
                      {
                        "id": 3,
                        "name": "destination",
                        "type": "Entity"
                      }
                    ],
                    "messages": [
                      {
                        "name": "Entity",
                        "fields": [
                          {
                            "id": 1,
                            "name": "name",
                            "type": "string"
                          },
                          {
                            "id": 2,
                            "name": "entity_type",
                            "type": "storage.NetworkEntityInfo.Type"
                          },
                          {
                            "id": 3,
                            "name": "deployment_namespace",
                            "type": "string"
                          },
                          {
                            "id": 5,
                            "name": "deployment_type",
                            "type": "string"
                          },
                          {
                            "id": 6,
                            "name": "port",
                            "type": "int32"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ProcessViolation",
                "fields": [
                  {
                    "id": 1,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "processes",
                    "type": "ProcessIndicator",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "Enforcement",
                "fields": [
                  {
                    "id": 1,
                    "name": "action",
                    "type": "storage.EnforcementAction"
                  },
                  {
                    "id": 2,
                    "name": "message",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListAlert",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "lifecycle_stage",
                "type": "LifecycleStage"
              },
              {
                "id": 3,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "policy",
                "type": "ListAlertPolicy"
              },
              {
                "id": 6,
                "name": "state",
                "type": "ViolationState"
              },
              {
                "id": 7,
                "name": "enforcement_count",
                "type": "int32"
              },
              {
                "id": 9,
                "name": "enforcement_action",
                "type": "storage.EnforcementAction"
              },
              {
                "id": 10,
                "name": "common_entity_info",
                "type": "CommonEntityInfo"
              },
              {
                "id": 5,
                "name": "deployment",
                "type": "ListAlertDeployment"
              },
              {
                "id": 11,
                "name": "resource",
                "type": "ResourceEntity"
              }
            ],
            "reserved_ids": [
              8
            ],
            "messages": [
              {
                "name": "CommonEntityInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "namespace_id",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "resource_type",
                    "type": "ResourceType"
                  }
                ]
              },
              {
                "name": "ResourceEntity",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListAlertPolicy",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "severity",
                "type": "Severity"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "categories",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "developer_internal_fields",
                "type": "DevFields"
              }
            ],
            "messages": [
              {
                "name": "DevFields",
                "fields": [
                  {
                    "id": 6,
                    "name": "SORT_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListAlertDeployment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "inactive",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "namespace_id",
                "type": "string"
              }
            ],
            "reserved_ids": [
              3
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:api_token.proto",
      "def": {
        "messages": [
          {
            "name": "TokenMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 7,
                "name": "roles",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "issued_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "expiration",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "revoked",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "role",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:auth_provider.proto",
      "def": {
        "messages": [
          {
            "name": "AuthProvider",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "ui_endpoint",
                "type": "string"
              },
              {
                "id": 5,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "login_url",
                "type": "string"
              },
              {
                "id": 8,
                "name": "validated",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "extra_ui_endpoints",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "active",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "required_attributes",
                "type": "RequiredAttribute",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "traits",
                "type": "Traits"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "config",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 13,
                  "name": "claim_mappings",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "RequiredAttribute",
                "fields": [
                  {
                    "id": 1,
                    "name": "attribute_key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "attribute_value",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/traits.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:cluster.proto",
      "def": {
        "enums": [
          {
            "name": "ClusterType",
            "enum_fields": [
              {
                "name": "GENERIC_CLUSTER"
              },
              {
                "name": "KUBERNETES_CLUSTER",
                "integer": 1
              },
              {
                "name": "OPENSHIFT_CLUSTER",
                "integer": 2
              },
              {
                "name": "OPENSHIFT4_CLUSTER",
                "integer": 5
              }
            ],
            "reserved_ids": [
              3,
              4
            ]
          },
          {
            "name": "CollectionMethod",
            "enum_fields": [
              {
                "name": "UNSET_COLLECTION"
              },
              {
                "name": "NO_COLLECTION",
                "integer": 1
              },
              {
                "name": "KERNEL_MODULE",
                "integer": 2
              },
              {
                "name": "EBPF",
                "integer": 3
              },
              {
                "name": "CORE_BPF",
                "integer": 4
              }
            ]
          },
          {
            "name": "ManagerType",
            "enum_fields": [
              {
                "name": "MANAGER_TYPE_UNKNOWN"
              },
              {
                "name": "MANAGER_TYPE_MANUAL",
                "integer": 1
              },
              {
                "name": "MANAGER_TYPE_HELM_CHART",
                "integer": 2
              },
              {
                "name": "MANAGER_TYPE_KUBERNETES_OPERATOR",
                "integer": 3
              }
            ]
          },
          {
            "name": "ClusterUpgradeStatus.Upgradability",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "UP_TO_DATE",
                "integer": 1
              },
              {
                "name": "MANUAL_UPGRADE_REQUIRED",
                "integer": 2
              },
              {
                "name": "AUTO_UPGRADE_POSSIBLE",
                "integer": 3
              },
              {
                "name": "SENSOR_VERSION_HIGHER",
                "integer": 4
              }
            ]
          },
          {
            "name": "UpgradeProcessStatus.UpgradeProcessType",
            "enum_fields": [
              {
                "name": "UPGRADE"
              },
              {
                "name": "CERT_ROTATION",
                "integer": 1
              }
            ]
          },
          {
            "name": "UpgradeProgress.UpgradeState",
            "enum_fields": [
              {
                "name": "UPGRADE_INITIALIZING"
              },
              {
                "name": "UPGRADER_LAUNCHING",
                "integer": 1
              },
              {
                "name": "UPGRADER_LAUNCHED",
                "integer": 2
              },
              {
                "name": "PRE_FLIGHT_CHECKS_COMPLETE",
                "integer": 3
              },
              {
                "name": "UPGRADE_OPERATIONS_DONE",
                "integer": 4
              },
              {
                "name": "UPGRADE_COMPLETE",
                "integer": 10
              },
              {
                "name": "UPGRADE_INITIALIZATION_ERROR",
                "integer": 11
              },
              {
                "name": "PRE_FLIGHT_CHECKS_FAILED",
                "integer": 12
              },
              {
                "name": "UPGRADE_ERROR_ROLLING_BACK",
                "integer": 13
              },
              {
                "name": "UPGRADE_ERROR_ROLLED_BACK",
                "integer": 14
              },
              {
                "name": "UPGRADE_ERROR_ROLLBACK_FAILED",
                "integer": 15
              },
              {
                "name": "UPGRADE_ERROR_UNKNOWN",
                "integer": 16
              },
              {
                "name": "UPGRADE_TIMED_OUT",
                "integer": 17
              }
            ]
          },
          {
            "name": "ClusterHealthStatus.HealthStatusLabel",
            "enum_fields": [
              {
                "name": "UNINITIALIZED"
              },
              {
                "name": "UNAVAILABLE",
                "integer": 1
              },
              {
                "name": "UNHEALTHY",
                "integer": 2
              },
              {
                "name": "DEGRADED",
                "integer": 3
              },
              {
                "name": "HEALTHY",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GoogleProviderMetadata",
            "fields": [
              {
                "id": 1,
                "name": "project",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "AWSProviderMetadata",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "AzureProviderMetadata",
            "fields": [
              {
                "id": 1,
                "name": "subscription_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProviderMetadata",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "string"
              },
              {
                "id": 2,
                "name": "zone",
                "type": "string"
              },
              {
                "id": 3,
                "name": "google",
                "type": "GoogleProviderMetadata"
              },
              {
                "id": 4,
                "name": "aws",
                "type": "AWSProviderMetadata"
              },
              {
                "id": 5,
                "name": "azure",
                "type": "AzureProviderMetadata"
              },
              {
                "id": 15,
                "name": "verified",
                "type": "bool"
              }
            ]
          },
          {
            "name": "OrchestratorMetadata",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "openshift_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "build_date",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "api_versions",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AdmissionControllerConfig",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "timeout_seconds",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "scan_inline",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "disable_bypass",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "enforce_on_updates",
                "type": "bool"
              }
            ]
          },
          {
            "name": "TolerationsConfig",
            "fields": [
              {
                "id": 1,
                "name": "disabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "StaticClusterConfig",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "ClusterType"
              },
              {
                "id": 2,
                "name": "main_image",
                "type": "string"
              },
              {
                "id": 3,
                "name": "central_api_endpoint",
                "type": "string"
              },
              {
                "id": 4,
                "name": "collection_method",
                "type": "CollectionMethod"
              },
              {
                "id": 5,
                "name": "collector_image",
                "type": "string"
              },
              {
                "id": 6,
                "name": "admission_controller",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "admission_controller_updates",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "tolerations_config",
                "type": "TolerationsConfig"
              },
              {
                "id": 9,
                "name": "slim_collector",
                "type": "bool"
              },
              {
                "id": 10,
                "name": "admission_controller_events",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DynamicClusterConfig",
            "fields": [
              {
                "id": 1,
                "name": "admission_controller_config",
                "type": "AdmissionControllerConfig"
              },
              {
                "id": 2,
                "name": "registry_override",
                "type": "string"
              },
              {
                "id": 3,
                "name": "disable_audit_logs",
                "type": "bool"
              }
            ]
          },
          {
            "name": "CompleteClusterConfig",
            "fields": [
              {
                "id": 1,
                "name": "dynamic_config",
                "type": "DynamicClusterConfig"
              },
              {
                "id": 2,
                "name": "static_config",
                "type": "StaticClusterConfig"
              },
              {
                "id": 3,
                "name": "config_fingerprint",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "cluster_labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "SensorDeploymentIdentification",
            "fields": [
              {
                "id": 1,
                "name": "system_namespace_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "default_namespace_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "app_namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "app_namespace_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "app_serviceaccount_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "k8s_node_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "Cluster",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "ClusterType"
              },
              {
                "id": 4,
                "name": "main_image",
                "type": "string"
              },
              {
                "id": 16,
                "name": "collector_image",
                "type": "string"
              },
              {
                "id": 5,
                "name": "central_api_endpoint",
                "type": "string"
              },
              {
                "id": 7,
                "name": "runtime_support",
                "type": "bool"
              },
              {
                "id": 17,
                "name": "collection_method",
                "type": "CollectionMethod"
              },
              {
                "id": 13,
                "name": "admission_controller",
                "type": "bool"
              },
              {
                "id": 21,
                "name": "admission_controller_updates",
                "type": "bool"
              },
              {
                "id": 25,
                "name": "admission_controller_events",
                "type": "bool"
              },
              {
                "id": 15,
                "name": "status",
                "type": "ClusterStatus"
              },
              {
                "id": 18,
                "name": "dynamic_config",
                "type": "DynamicClusterConfig"
              },
              {
                "id": 19,
                "name": "tolerations_config",
                "type": "TolerationsConfig"
              },
              {
                "id": 20,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 22,
                "name": "health_status",
                "type": "ClusterHealthStatus"
              },
              {
                "id": 23,
                "name": "slim_collector",
                "type": "bool"
              },
              {
                "id": 24,
                "name": "helm_config",
                "type": "CompleteClusterConfig"
              },
              {
                "id": 26,
                "name": "most_recent_sensor_id",
                "type": "SensorDeploymentIdentification"
              },
              {
                "id": 29,
                "name": "init_bundle_id",
                "type": "string"
              },
              {
                "id": 30,
                "name": "managed_by",
                "type": "ManagerType"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 27,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 28,
                  "name": "audit_log_state",
                  "type": "AuditLogFileState"
                }
              }
            ],
            "reserved_ids": [
              6,
              8,
              9,
              10,
              11,
              12,
              14
            ]
          },
          {
            "name": "ClusterCertExpiryStatus",
            "fields": [
              {
                "id": 1,
                "name": "sensor_cert_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "sensor_cert_not_before",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ClusterStatus",
            "fields": [
              {
                "id": 1,
                "name": "sensor_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "DEPRECATED_last_contact",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "provider_metadata",
                "type": "ProviderMetadata"
              },
              {
                "id": 4,
                "name": "orchestrator_metadata",
                "type": "OrchestratorMetadata"
              },
              {
                "id": 5,
                "name": "upgrade_status",
                "type": "ClusterUpgradeStatus"
              },
              {
                "id": 6,
                "name": "cert_expiry_status",
                "type": "ClusterCertExpiryStatus"
              }
            ]
          },
          {
            "name": "ClusterUpgradeStatus",
            "fields": [
              {
                "id": 1,
                "name": "upgradability",
                "type": "Upgradability"
              },
              {
                "id": 2,
                "name": "upgradability_status_reason",
                "type": "string"
              },
              {
                "id": 3,
                "name": "most_recent_process",
                "type": "UpgradeProcessStatus"
              }
            ],
            "messages": [
              {
                "name": "UpgradeProcessStatus",
                "fields": [
                  {
                    "id": 1,
                    "name": "active",
                    "type": "bool"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "target_version",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "upgrader_image",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "initiated_at",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 6,
                    "name": "progress",
                    "type": "UpgradeProgress"
                  },
                  {
                    "id": 7,
                    "name": "type",
                    "type": "UpgradeProcessType"
                  }
                ]
              }
            ]
          },
          {
            "name": "UpgradeProgress",
            "fields": [
              {
                "id": 1,
                "name": "upgrade_state",
                "type": "UpgradeState"
              },
              {
                "id": 2,
                "name": "upgrade_status_detail",
                "type": "string"
              },
              {
                "id": 3,
                "name": "since",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "AuditLogFileState",
            "fields": [
              {
                "id": 1,
                "name": "collect_logs_since",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "last_audit_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ClusterHealthStatus",
            "fields": [
              {
                "id": 9,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "collector_health_info",
                "type": "CollectorHealthInfo"
              },
              {
                "id": 8,
                "name": "admission_control_health_info",
                "type": "AdmissionControlHealthInfo"
              },
              {
                "id": 10,
                "name": "scanner_health_info",
                "type": "ScannerHealthInfo"
              },
              {
                "id": 2,
                "name": "sensor_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 3,
                "name": "collector_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 4,
                "name": "overall_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 7,
                "name": "admission_control_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 11,
                "name": "scanner_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 5,
                "name": "last_contact",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "health_info_complete",
                "type": "bool"
              }
            ]
          },
          {
            "name": "CollectorHealthInfo",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "total_desired_pods",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "total_ready_pods",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "total_registered_nodes",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "status_errors",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AdmissionControlHealthInfo",
            "fields": [
              {
                "id": 1,
                "name": "total_desired_pods",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "total_ready_pods",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "status_errors",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScannerHealthInfo",
            "fields": [
              {
                "id": 1,
                "name": "total_desired_analyzer_pods",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "total_ready_analyzer_pods",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "total_desired_db_pods",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "total_ready_db_pods",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "status_errors",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:cluster_init.proto",
      "def": {
        "messages": [
          {
            "name": "InitBundleMeta",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "created_by",
                "type": "User"
              },
              {
                "id": 5,
                "name": "is_revoked",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "expires_at",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:common.proto",
      "def": {
        "messages": [
          {
            "name": "KeyValuePair",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:compliance.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceState",
            "enum_fields": [
              {
                "name": "COMPLIANCE_STATE_UNKNOWN"
              },
              {
                "name": "COMPLIANCE_STATE_SKIP",
                "integer": 1
              },
              {
                "name": "COMPLIANCE_STATE_NOTE",
                "integer": 2
              },
              {
                "name": "COMPLIANCE_STATE_SUCCESS",
                "integer": 3
              },
              {
                "name": "COMPLIANCE_STATE_FAILURE",
                "integer": 4
              },
              {
                "name": "COMPLIANCE_STATE_ERROR",
                "integer": 5
              }
            ]
          },
          {
            "name": "ComplianceAggregation.Scope",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "STANDARD",
                "integer": 1
              },
              {
                "name": "CLUSTER",
                "integer": 2
              },
              {
                "name": "CATEGORY",
                "integer": 3
              },
              {
                "name": "CONTROL",
                "integer": 4
              },
              {
                "name": "NAMESPACE",
                "integer": 5
              },
              {
                "name": "NODE",
                "integer": 6
              },
              {
                "name": "DEPLOYMENT",
                "integer": 7
              },
              {
                "name": "CHECK",
                "integer": 8
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceResource",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "ClusterName"
              },
              {
                "id": 2,
                "name": "deployment",
                "type": "DeploymentName"
              },
              {
                "id": 3,
                "name": "node",
                "type": "NodeName"
              },
              {
                "id": 4,
                "name": "image",
                "type": "ImageName"
              }
            ],
            "messages": [
              {
                "name": "ClusterName",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "DeploymentName",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster",
                    "type": "ClusterName"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "namespace",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "NodeName",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster",
                    "type": "ClusterName"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceResultValue",
            "fields": [
              {
                "id": 1,
                "name": "evidence",
                "type": "Evidence",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "overall_state",
                "type": "ComplianceState"
              }
            ],
            "messages": [
              {
                "name": "Evidence",
                "fields": [
                  {
                    "id": 1,
                    "name": "state",
                    "type": "ComplianceState"
                  },
                  {
                    "id": 2,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "message_id",
                    "type": "int32"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceControlResult",
            "fields": [
              {
                "id": 1,
                "name": "resource",
                "type": "ComplianceResource"
              },
              {
                "id": 2,
                "name": "control_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "ComplianceResultValue"
              }
            ]
          },
          {
            "name": "ComplianceDomain",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "cluster",
                "type": "Cluster"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "nodes",
                  "type": "Node"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "deployments",
                  "type": "Deployment"
                }
              }
            ],
            "messages": [
              {
                "name": "Cluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Node",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "cluster_name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Deployment",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 23,
                    "name": "namespace_id",
                    "type": "string"
                  },
                  {
                    "id": 9,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 10,
                    "name": "cluster_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceRunMetadata",
            "fields": [
              {
                "id": 1,
                "name": "run_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "start_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "finish_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "success",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "error_message",
                "type": "string"
              },
              {
                "id": 8,
                "name": "domain_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceRunResults",
            "fields": [
              {
                "id": 1,
                "name": "domain",
                "type": "ComplianceDomain"
              },
              {
                "id": 2,
                "name": "run_metadata",
                "type": "ComplianceRunMetadata"
              },
              {
                "id": 3,
                "name": "cluster_results",
                "type": "EntityResults"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "node_results",
                  "type": "EntityResults"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "deployment_results",
                  "type": "EntityResults"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "machine_config_results",
                  "type": "EntityResults"
                }
              }
            ],
            "messages": [
              {
                "name": "EntityResults",
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 1,
                      "name": "control_results",
                      "type": "ComplianceResultValue"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceStrings",
            "fields": [
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "strings",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComplianceAggregation",
            "messages": [
              {
                "name": "AggregationKey",
                "fields": [
                  {
                    "id": 1,
                    "name": "scope",
                    "type": "Scope"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Result",
                "fields": [
                  {
                    "id": 1,
                    "name": "aggregation_keys",
                    "type": "AggregationKey",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "unit",
                    "type": "Scope"
                  },
                  {
                    "id": 3,
                    "name": "num_passing",
                    "type": "int32"
                  },
                  {
                    "id": 4,
                    "name": "num_failing",
                    "type": "int32"
                  },
                  {
                    "id": 5,
                    "name": "num_skipped",
                    "type": "int32"
                  }
                ]
              },
              {
                "name": "Source",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "standard_id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "successful_run",
                    "type": "storage.ComplianceRunMetadata"
                  },
                  {
                    "id": 4,
                    "name": "failed_runs",
                    "type": "storage.ComplianceRunMetadata",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "Response",
                "fields": [
                  {
                    "id": 1,
                    "name": "results",
                    "type": "Result",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "sources",
                    "type": "Source",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "error_message",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "PreComputedComplianceAggregation",
            "fields": [
              {
                "id": 1,
                "name": "results",
                "type": "ComplianceAggregation.Result",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "sources",
                "type": "ComplianceAggregation.Source",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "domain_pointers",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:compliance_operator.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceOperatorCheckResult.CheckStatus",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "PASS",
                "integer": 1
              },
              {
                "name": "FAIL",
                "integer": 2
              },
              {
                "name": "ERROR",
                "integer": 3
              },
              {
                "name": "INFO",
                "integer": 4
              },
              {
                "name": "MANUAL",
                "integer": 5
              },
              {
                "name": "NOT_APPLICABLE",
                "integer": 6
              },
              {
                "name": "INCONSISTENT",
                "integer": 7
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceOperatorCheckResult",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "check_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "check_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "status",
                "type": "CheckStatus"
              },
              {
                "id": 6,
                "name": "description",
                "type": "string"
              },
              {
                "id": 7,
                "name": "instructions",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 9,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ComplianceOperatorProfile",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "profile_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "description",
                "type": "string"
              },
              {
                "id": 8,
                "name": "rules",
                "type": "Rule",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Rule",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceOperatorRule",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "rule_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "title",
                "type": "string"
              },
              {
                "id": 8,
                "name": "description",
                "type": "string"
              },
              {
                "id": 9,
                "name": "rationale",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ComplianceOperatorScanSettingBinding",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "profiles",
                "type": "Profile",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Profile",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceOperatorScan",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "profile_id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:config.proto",
      "def": {
        "enums": [
          {
            "name": "BannerConfig.Size",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "SMALL",
                "integer": 1
              },
              {
                "name": "MEDIUM",
                "integer": 2
              },
              {
                "name": "LARGE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "LoginNotice",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "text",
                "type": "string"
              }
            ]
          },
          {
            "name": "BannerConfig",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "text",
                "type": "string"
              },
              {
                "id": 3,
                "name": "size",
                "type": "Size"
              },
              {
                "id": 4,
                "name": "color",
                "type": "string"
              },
              {
                "id": 5,
                "name": "background_color",
                "type": "string"
              }
            ]
          },
          {
            "name": "PublicConfig",
            "fields": [
              {
                "id": 1,
                "name": "login_notice",
                "type": "LoginNotice"
              },
              {
                "id": 2,
                "name": "header",
                "type": "BannerConfig"
              },
              {
                "id": 3,
                "name": "footer",
                "type": "BannerConfig"
              },
              {
                "id": 4,
                "name": "telemetry",
                "type": "TelemetryConfiguration"
              }
            ]
          },
          {
            "name": "AlertRetentionConfig",
            "fields": [
              {
                "id": 1,
                "name": "resolved_deploy_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "deleted_runtime_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "all_runtime_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "attempted_deploy_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "attempted_runtime_retention_duration_days",
                "type": "int32"
              }
            ]
          },
          {
            "name": "DecommissionedClusterRetentionConfig",
            "fields": [
              {
                "id": 1,
                "name": "retention_duration_days",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "ignore_cluster_labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PrivateConfig",
            "fields": [
              {
                "id": 1,
                "name": "DEPRECATED_alert_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "alert_config",
                "type": "AlertRetentionConfig"
              },
              {
                "id": 2,
                "name": "image_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "expired_vuln_req_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "decommissioned_cluster_retention",
                "type": "DecommissionedClusterRetentionConfig"
              }
            ]
          },
          {
            "name": "Config",
            "fields": [
              {
                "id": 1,
                "name": "public_config",
                "type": "PublicConfig"
              },
              {
                "id": 2,
                "name": "private_config",
                "type": "PrivateConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/telemetry.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:container_runtime.proto",
      "def": {
        "enums": [
          {
            "name": "ContainerRuntime",
            "enum_fields": [
              {
                "name": "UNKNOWN_CONTAINER_RUNTIME"
              },
              {
                "name": "DOCKER_CONTAINER_RUNTIME",
                "integer": 1
              },
              {
                "name": "CRIO_CONTAINER_RUNTIME",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ContainerRuntimeInfo",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "ContainerRuntime"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:cve.proto",
      "def": {
        "enums": [
          {
            "name": "VulnerabilityState",
            "enum_fields": [
              {
                "name": "OBSERVED"
              },
              {
                "name": "DEFERRED",
                "integer": 1
              },
              {
                "name": "FALSE_POSITIVE",
                "integer": 2
              }
            ]
          },
          {
            "name": "VulnerabilitySeverity",
            "enum_fields": [
              {
                "name": "UNKNOWN_VULNERABILITY_SEVERITY"
              },
              {
                "name": "LOW_VULNERABILITY_SEVERITY",
                "integer": 1
              },
              {
                "name": "MODERATE_VULNERABILITY_SEVERITY",
                "integer": 2
              },
              {
                "name": "IMPORTANT_VULNERABILITY_SEVERITY",
                "integer": 3
              },
              {
                "name": "CRITICAL_VULNERABILITY_SEVERITY",
                "integer": 4
              }
            ]
          },
          {
            "name": "CVE.CVEType",
            "enum_fields": [
              {
                "name": "UNKNOWN_CVE"
              },
              {
                "name": "IMAGE_CVE",
                "integer": 1
              },
              {
                "name": "K8S_CVE",
                "integer": 2
              },
              {
                "name": "ISTIO_CVE",
                "integer": 3
              },
              {
                "name": "NODE_CVE",
                "integer": 4
              },
              {
                "name": "OPENSHIFT_CVE",
                "integer": 5
              }
            ]
          },
          {
            "name": "CVE.ScoreVersion",
            "enum_fields": [
              {
                "name": "V2"
              },
              {
                "name": "V3",
                "integer": 1
              },
              {
                "name": "UNKNOWN",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVEInfo.ScoreVersion",
            "enum_fields": [
              {
                "name": "V2"
              },
              {
                "name": "V3",
                "integer": 1
              },
              {
                "name": "UNKNOWN",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.Impact",
            "enum_fields": [
              {
                "name": "IMPACT_NONE"
              },
              {
                "name": "IMPACT_PARTIAL",
                "integer": 1
              },
              {
                "name": "IMPACT_COMPLETE",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.AttackVector",
            "enum_fields": [
              {
                "name": "ATTACK_LOCAL"
              },
              {
                "name": "ATTACK_ADJACENT",
                "integer": 1
              },
              {
                "name": "ATTACK_NETWORK",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.AccessComplexity",
            "enum_fields": [
              {
                "name": "ACCESS_HIGH"
              },
              {
                "name": "ACCESS_MEDIUM",
                "integer": 1
              },
              {
                "name": "ACCESS_LOW",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.Authentication",
            "enum_fields": [
              {
                "name": "AUTH_MULTIPLE"
              },
              {
                "name": "AUTH_SINGLE",
                "integer": 1
              },
              {
                "name": "AUTH_NONE",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.Severity",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "LOW",
                "integer": 1
              },
              {
                "name": "MEDIUM",
                "integer": 2
              },
              {
                "name": "HIGH",
                "integer": 3
              }
            ]
          },
          {
            "name": "CVSSV3.Impact",
            "enum_fields": [
              {
                "name": "IMPACT_NONE"
              },
              {
                "name": "IMPACT_LOW",
                "integer": 1
              },
              {
                "name": "IMPACT_HIGH",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV3.AttackVector",
            "enum_fields": [
              {
                "name": "ATTACK_LOCAL"
              },
              {
                "name": "ATTACK_ADJACENT",
                "integer": 1
              },
              {
                "name": "ATTACK_NETWORK",
                "integer": 2
              },
              {
                "name": "ATTACK_PHYSICAL",
                "integer": 3
              }
            ]
          },
          {
            "name": "CVSSV3.Complexity",
            "enum_fields": [
              {
                "name": "COMPLEXITY_LOW"
              },
              {
                "name": "COMPLEXITY_HIGH",
                "integer": 1
              }
            ]
          },
          {
            "name": "CVSSV3.Privileges",
            "enum_fields": [
              {
                "name": "PRIVILEGE_NONE"
              },
              {
                "name": "PRIVILEGE_LOW",
                "integer": 1
              },
              {
                "name": "PRIVILEGE_HIGH",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV3.UserInteraction",
            "enum_fields": [
              {
                "name": "UI_NONE"
              },
              {
                "name": "UI_REQUIRED",
                "integer": 1
              }
            ]
          },
          {
            "name": "CVSSV3.Scope",
            "enum_fields": [
              {
                "name": "UNCHANGED"
              },
              {
                "name": "CHANGED",
                "integer": 1
              }
            ]
          },
          {
            "name": "CVSSV3.Severity",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "NONE",
                "integer": 1
              },
              {
                "name": "LOW",
                "integer": 2
              },
              {
                "name": "MEDIUM",
                "integer": 3
              },
              {
                "name": "HIGH",
                "integer": 4
              },
              {
                "name": "CRITICAL",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CVE",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 14,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 3,
                "name": "type",
                "type": "CVEType"
              },
              {
                "id": 18,
                "name": "types",
                "type": "CVEType",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 5,
                "name": "link",
                "type": "string"
              },
              {
                "id": 6,
                "name": "published_on",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 15,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "last_modified",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "references",
                "type": "Reference",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "score_version",
                "type": "ScoreVersion"
              },
              {
                "id": 10,
                "name": "cvss_v2",
                "type": "CVSSV2"
              },
              {
                "id": 11,
                "name": "cvss_v3",
                "type": "CVSSV3"
              },
              {
                "id": 12,
                "name": "suppressed",
                "type": "bool"
              },
              {
                "id": 16,
                "name": "suppress_activation",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 17,
                "name": "suppress_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 20,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 19,
                  "name": "distro_specifics",
                  "type": "DistroSpecific"
                }
              }
            ],
            "reserved_ids": [
              22,
              21
            ],
            "messages": [
              {
                "name": "DistroSpecific",
                "fields": [
                  {
                    "id": 1,
                    "name": "severity",
                    "type": "VulnerabilitySeverity"
                  },
                  {
                    "id": 2,
                    "name": "cvss",
                    "type": "float"
                  },
                  {
                    "id": 3,
                    "name": "score_version",
                    "type": "ScoreVersion"
                  },
                  {
                    "id": 4,
                    "name": "cvss_v2",
                    "type": "CVSSV2"
                  },
                  {
                    "id": 5,
                    "name": "cvss_v3",
                    "type": "CVSSV3"
                  }
                ]
              },
              {
                "name": "Reference",
                "fields": [
                  {
                    "id": 1,
                    "name": "URI",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "tags",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "CVEInfo",
            "fields": [
              {
                "id": 1,
                "name": "cve",
                "type": "string"
              },
              {
                "id": 2,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 3,
                "name": "link",
                "type": "string"
              },
              {
                "id": 4,
                "name": "published_on",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "last_modified",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "score_version",
                "type": "ScoreVersion"
              },
              {
                "id": 8,
                "name": "cvss_v2",
                "type": "CVSSV2"
              },
              {
                "id": 9,
                "name": "cvss_v3",
                "type": "CVSSV3"
              },
              {
                "id": 10,
                "name": "references",
                "type": "Reference",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Reference",
                "fields": [
                  {
                    "id": 1,
                    "name": "URI",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "tags",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ImageCVE",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cve_base_info",
                "type": "CVEInfo"
              },
              {
                "id": 3,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 5,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 6,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 7,
                "name": "snoozed",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "snooze_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "snooze_expiry",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NodeCVE",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cve_base_info",
                "type": "CVEInfo"
              },
              {
                "id": 3,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 5,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 6,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 7,
                "name": "snoozed",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "snooze_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "snooze_expiry",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ClusterCVE",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cve_base_info",
                "type": "CVEInfo"
              },
              {
                "id": 3,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 4,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 5,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 6,
                "name": "snoozed",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "snooze_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "snooze_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "type",
                "type": "CVE.CVEType"
              }
            ]
          },
          {
            "name": "CVSSV2",
            "fields": [
              {
                "id": 1,
                "name": "vector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "attack_vector",
                "type": "AttackVector"
              },
              {
                "id": 3,
                "name": "access_complexity",
                "type": "AccessComplexity"
              },
              {
                "id": 4,
                "name": "authentication",
                "type": "Authentication"
              },
              {
                "id": 5,
                "name": "confidentiality",
                "type": "Impact"
              },
              {
                "id": 6,
                "name": "integrity",
                "type": "Impact"
              },
              {
                "id": 7,
                "name": "availability",
                "type": "Impact"
              },
              {
                "id": 8,
                "name": "exploitability_score",
                "type": "float"
              },
              {
                "id": 9,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 10,
                "name": "score",
                "type": "float"
              },
              {
                "id": 11,
                "name": "severity",
                "type": "Severity"
              }
            ]
          },
          {
            "name": "CVSSV3",
            "fields": [
              {
                "id": 1,
                "name": "vector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "exploitability_score",
                "type": "float"
              },
              {
                "id": 3,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 4,
                "name": "attack_vector",
                "type": "AttackVector"
              },
              {
                "id": 5,
                "name": "attack_complexity",
                "type": "Complexity"
              },
              {
                "id": 6,
                "name": "privileges_required",
                "type": "Privileges"
              },
              {
                "id": 7,
                "name": "user_interaction",
                "type": "UserInteraction"
              },
              {
                "id": 8,
                "name": "scope",
                "type": "Scope"
              },
              {
                "id": 9,
                "name": "confidentiality",
                "type": "Impact"
              },
              {
                "id": 10,
                "name": "integrity",
                "type": "Impact"
              },
              {
                "id": 11,
                "name": "availability",
                "type": "Impact"
              },
              {
                "id": 12,
                "name": "score",
                "type": "float"
              },
              {
                "id": 13,
                "name": "severity",
                "type": "Severity"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:deployment.proto",
      "def": {
        "enums": [
          {
            "name": "Volume.MountPropagation",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "HOST_TO_CONTAINER",
                "integer": 1
              },
              {
                "name": "BIDIRECTIONAL",
                "integer": 2
              }
            ]
          },
          {
            "name": "PortConfig.ExposureLevel",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "EXTERNAL",
                "integer": 1
              },
              {
                "name": "NODE",
                "integer": 2
              },
              {
                "name": "INTERNAL",
                "integer": 3
              },
              {
                "name": "HOST",
                "integer": 4
              },
              {
                "name": "ROUTE",
                "integer": 5
              }
            ]
          },
          {
            "name": "EnvironmentConfig.EnvVarSource",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "RAW",
                "integer": 1
              },
              {
                "name": "SECRET_KEY",
                "integer": 2
              },
              {
                "name": "CONFIG_MAP_KEY",
                "integer": 3
              },
              {
                "name": "FIELD",
                "integer": 4
              },
              {
                "name": "RESOURCE_FIELD",
                "integer": 5
              },
              {
                "name": "UNKNOWN",
                "integer": 6
              }
            ]
          },
          {
            "name": "SeccompProfile.ProfileType",
            "enum_fields": [
              {
                "name": "UNCONFINED"
              },
              {
                "name": "RUNTIME_DEFAULT",
                "integer": 1
              },
              {
                "name": "LOCALHOST",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Deployment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 26,
                "name": "hash",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "type",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 23,
                "name": "namespace_id",
                "type": "string"
              },
              {
                "id": 33,
                "name": "orchestrator_component",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "replicas",
                "type": "int64"
              },
              {
                "id": 20,
                "name": "label_selector",
                "type": "LabelSelector"
              },
              {
                "id": 8,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 10,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "containers",
                "type": "Container",
                "is_repeated": true
              },
              {
                "id": 15,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 16,
                "name": "inactive",
                "type": "bool"
              },
              {
                "id": 17,
                "name": "image_pull_secrets",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 28,
                "name": "service_account_permission_level",
                "type": "PermissionLevel"
              },
              {
                "id": 25,
                "name": "automount_service_account_token",
                "type": "bool"
              },
              {
                "id": 21,
                "name": "host_network",
                "type": "bool"
              },
              {
                "id": 31,
                "name": "host_pid",
                "type": "bool"
              },
              {
                "id": 32,
                "name": "host_ipc",
                "type": "bool"
              },
              {
                "id": 34,
                "name": "runtime_class",
                "type": "string"
              },
              {
                "id": 22,
                "name": "tolerations",
                "type": "Toleration",
                "is_repeated": true
              },
              {
                "id": 24,
                "name": "ports",
                "type": "PortConfig",
                "is_repeated": true
              },
              {
                "id": 27,
                "name": "state_timestamp",
                "type": "int64"
              },
              {
                "id": 29,
                "name": "risk_score",
                "type": "float"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 19,
                  "name": "pod_labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 14,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "reserved_ids": [
              3,
              12,
              30
            ]
          },
          {
            "name": "ContainerImage",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "name",
                "type": "ImageName"
              },
              {
                "id": 10,
                "name": "not_pullable",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "is_cluster_local",
                "type": "bool"
              }
            ],
            "reserved_ids": [
              2,
              3,
              5,
              6,
              7,
              8,
              9
            ]
          },
          {
            "name": "Container",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "config",
                "type": "ContainerConfig"
              },
              {
                "id": 3,
                "name": "image",
                "type": "ContainerImage"
              },
              {
                "id": 4,
                "name": "security_context",
                "type": "SecurityContext"
              },
              {
                "id": 5,
                "name": "volumes",
                "type": "Volume",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "ports",
                "type": "PortConfig",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "secrets",
                "type": "EmbeddedSecret",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "resources",
                "type": "Resources"
              },
              {
                "id": 10,
                "name": "name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "liveness_probe",
                "type": "LivenessProbe"
              },
              {
                "id": 12,
                "name": "readiness_probe",
                "type": "ReadinessProbe"
              }
            ],
            "reserved_ids": [
              9
            ]
          },
          {
            "name": "Resources",
            "fields": [
              {
                "id": 1,
                "name": "cpu_cores_request",
                "type": "float"
              },
              {
                "id": 2,
                "name": "cpu_cores_limit",
                "type": "float"
              },
              {
                "id": 3,
                "name": "memory_mb_request",
                "type": "float"
              },
              {
                "id": 4,
                "name": "memory_mb_limit",
                "type": "float"
              }
            ]
          },
          {
            "name": "Volume",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "source",
                "type": "string"
              },
              {
                "id": 3,
                "name": "destination",
                "type": "string"
              },
              {
                "id": 4,
                "name": "read_only",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "type",
                "type": "string"
              },
              {
                "id": 6,
                "name": "mount_propagation",
                "type": "MountPropagation"
              }
            ]
          },
          {
            "name": "LivenessProbe",
            "fields": [
              {
                "id": 1,
                "name": "defined",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ReadinessProbe",
            "fields": [
              {
                "id": 1,
                "name": "defined",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Pod",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "live_instances",
                "type": "ContainerInstance",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "terminated_instances",
                "type": "ContainerInstanceList",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "started",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "messages": [
              {
                "name": "ContainerInstanceList",
                "fields": [
                  {
                    "id": 1,
                    "name": "instances",
                    "type": "ContainerInstance",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ContainerInstance",
            "fields": [
              {
                "id": 1,
                "name": "instance_id",
                "type": "ContainerInstanceID"
              },
              {
                "id": 2,
                "name": "containing_pod_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "container_ips",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "started",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "image_digest",
                "type": "string"
              },
              {
                "id": 7,
                "name": "finished",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "exit_code",
                "type": "int32"
              },
              {
                "id": 9,
                "name": "termination_reason",
                "type": "string"
              }
            ]
          },
          {
            "name": "ContainerInstanceID",
            "fields": [
              {
                "id": 1,
                "name": "container_runtime",
                "type": "ContainerRuntime"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "node",
                "type": "string"
              }
            ]
          },
          {
            "name": "EmbeddedSecret",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              }
            ]
          },
          {
            "name": "PortConfig",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_port",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "string"
              },
              {
                "id": 4,
                "name": "exposure",
                "type": "ExposureLevel"
              },
              {
                "id": 5,
                "name": "exposed_port",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "exposure_infos",
                "type": "ExposureInfo",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ExposureInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "level",
                    "type": "ExposureLevel"
                  },
                  {
                    "id": 2,
                    "name": "service_name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "service_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "service_cluster_ip",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "service_port",
                    "type": "int32"
                  },
                  {
                    "id": 6,
                    "name": "node_port",
                    "type": "int32"
                  },
                  {
                    "id": 7,
                    "name": "external_ips",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 8,
                    "name": "external_hostnames",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ContainerConfig",
            "fields": [
              {
                "id": 1,
                "name": "env",
                "type": "EnvironmentConfig",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "command",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "args",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "directory",
                "type": "string"
              },
              {
                "id": 5,
                "name": "user",
                "type": "string"
              },
              {
                "id": 6,
                "name": "uid",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "app_armor_profile",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "EnvironmentConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "env_var_source",
                    "type": "EnvVarSource"
                  }
                ]
              }
            ]
          },
          {
            "name": "SecurityContext",
            "fields": [
              {
                "id": 1,
                "name": "privileged",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "selinux",
                "type": "SELinux"
              },
              {
                "id": 3,
                "name": "drop_capabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "add_capabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "read_only_root_filesystem",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "seccomp_profile",
                "type": "SeccompProfile"
              },
              {
                "id": 7,
                "name": "allow_privilege_escalation",
                "type": "bool"
              }
            ],
            "messages": [
              {
                "name": "SELinux",
                "fields": [
                  {
                    "id": 1,
                    "name": "user",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "role",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "level",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "SeccompProfile",
                "fields": [
                  {
                    "id": 1,
                    "name": "type",
                    "type": "ProfileType"
                  },
                  {
                    "id": 2,
                    "name": "localhost_profile",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListDeployment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "hash",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 6,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "priority",
                "type": "int64"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/container_runtime.proto"
          },
          {
            "path": "storage/labels.proto"
          },
          {
            "path": "storage/image.proto"
          },
          {
            "path": "storage/taints.proto"
          },
          {
            "path": "storage/rbac.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:external_backup.proto",
      "def": {
        "messages": [
          {
            "name": "ExternalBackup",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "schedule",
                "type": "storage.Schedule"
              },
              {
                "id": 5,
                "name": "backups_to_keep",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "s3",
                "type": "S3Config"
              },
              {
                "id": 7,
                "name": "gcs",
                "type": "GCSConfig"
              },
              {
                "id": 8,
                "name": "include_certificates",
                "type": "bool"
              }
            ]
          },
          {
            "name": "S3Config",
            "fields": [
              {
                "id": 1,
                "name": "bucket",
                "type": "string"
              },
              {
                "id": 2,
                "name": "use_iam",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "access_key_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "secret_access_key",
                "type": "string"
              },
              {
                "id": 5,
                "name": "region",
                "type": "string"
              },
              {
                "id": 6,
                "name": "object_prefix",
                "type": "string"
              },
              {
                "id": 7,
                "name": "endpoint",
                "type": "string"
              }
            ]
          },
          {
            "name": "GCSConfig",
            "fields": [
              {
                "id": 1,
                "name": "bucket",
                "type": "string"
              },
              {
                "id": 2,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 3,
                "name": "object_prefix",
                "type": "string"
              },
              {
                "id": 4,
                "name": "use_workload_id",
                "type": "bool"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/schedule.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:group.proto",
      "def": {
        "messages": [
          {
            "name": "Group",
            "fields": [
              {
                "id": 1,
                "name": "props",
                "type": "GroupProperties"
              },
              {
                "id": 3,
                "name": "role_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GroupProperties",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "traits",
                "type": "Traits"
              },
              {
                "id": 1,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/traits.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:hash.proto",
      "def": {
        "messages": [
          {
            "name": "Hash",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "hashes",
                  "type": "uint64"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:helm_cluster.proto",
      "def": {
        "messages": [
          {
            "name": "HelmCluster",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "Cluster"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:http_endpoint.proto",
      "def": {
        "messages": [
          {
            "name": "HTTPEndpointConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "skip_tls_verify",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "ca_cert",
                "type": "string"
              },
              {
                "id": 4,
                "name": "username",
                "type": "string"
              },
              {
                "id": 5,
                "name": "password",
                "type": "string"
              },
              {
                "id": 6,
                "name": "headers",
                "type": "KeyValuePair",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "client_cert_pem",
                "type": "string"
              },
              {
                "id": 8,
                "name": "client_key_pem",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/common.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:image.proto",
      "def": {
        "enums": [
          {
            "name": "Image.Note",
            "enum_fields": [
              {
                "name": "MISSING_METADATA"
              },
              {
                "name": "MISSING_SCAN_DATA",
                "integer": 1
              },
              {
                "name": "MISSING_SIGNATURE",
                "integer": 2
              },
              {
                "name": "MISSING_SIGNATURE_VERIFICATION_DATA",
                "integer": 3
              }
            ]
          },
          {
            "name": "ImageScan.Note",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "OS_UNAVAILABLE",
                "integer": 1
              },
              {
                "name": "PARTIAL_SCAN_DATA",
                "integer": 2
              },
              {
                "name": "OS_CVES_UNAVAILABLE",
                "integer": 3
              },
              {
                "name": "OS_CVES_STALE",
                "integer": 4
              },
              {
                "name": "LANGUAGE_CVES_UNAVAILABLE",
                "integer": 5
              },
              {
                "name": "CERTIFIED_RHEL_SCAN_UNAVAILABLE",
                "integer": 6
              }
            ]
          },
          {
            "name": "ImageSignatureVerificationResult.Status",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "VERIFIED",
                "integer": 1
              },
              {
                "name": "FAILED_VERIFICATION",
                "integer": 2
              },
              {
                "name": "INVALID_SIGNATURE_ALGO",
                "integer": 3
              },
              {
                "name": "CORRUPTED_SIGNATURE",
                "integer": 4
              },
              {
                "name": "GENERIC_ERROR",
                "integer": 5
              }
            ]
          },
          {
            "name": "SourceType",
            "enum_fields": [
              {
                "name": "OS"
              },
              {
                "name": "PYTHON",
                "integer": 1
              },
              {
                "name": "JAVA",
                "integer": 2
              },
              {
                "name": "RUBY",
                "integer": 3
              },
              {
                "name": "NODEJS",
                "integer": 4
              },
              {
                "name": "DOTNETCORERUNTIME",
                "integer": 5
              },
              {
                "name": "INFRASTRUCTURE",
                "integer": 6
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Image",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "name",
                "type": "ImageName"
              },
              {
                "id": 18,
                "name": "names",
                "type": "ImageName",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "metadata",
                "type": "ImageMetadata"
              },
              {
                "id": 3,
                "name": "scan",
                "type": "ImageScan"
              },
              {
                "id": 15,
                "name": "signature_verification_data",
                "type": "ImageSignatureVerificationData"
              },
              {
                "id": 16,
                "name": "signature",
                "type": "ImageSignature"
              },
              {
                "id": 7,
                "name": "components",
                "type": "int32"
              },
              {
                "id": 8,
                "name": "cves",
                "type": "int32"
              },
              {
                "id": 9,
                "name": "fixable_cves",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "not_pullable",
                "type": "bool"
              },
              {
                "id": 17,
                "name": "is_cluster_local",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 12,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 13,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 14,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              6
            ]
          },
          {
            "name": "DataSource",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImageScan",
            "fields": [
              {
                "id": 6,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "scan_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "components",
                "type": "EmbeddedImageScanComponent",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 3,
                "name": "data_source",
                "type": "DataSource"
              },
              {
                "id": 5,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ImageSignatureVerificationData",
            "fields": [
              {
                "id": 1,
                "name": "results",
                "type": "ImageSignatureVerificationResult",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ImageSignatureVerificationResult",
            "fields": [
              {
                "id": 1,
                "name": "verification_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "verifier_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "verified_image_references",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EmbeddedImageScanComponent",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "license",
                "type": "License"
              },
              {
                "id": 4,
                "name": "vulns",
                "type": "EmbeddedVulnerability",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "layer_index",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "source",
                "type": "SourceType"
              },
              {
                "id": 8,
                "name": "location",
                "type": "string"
              },
              {
                "id": 9,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 10,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 11,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 12,
                "name": "executables",
                "type": "Executable",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Executable",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "dependencies",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "License",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "url",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImageMetadata",
            "fields": [
              {
                "id": 1,
                "name": "v1",
                "type": "V1Metadata"
              },
              {
                "id": 2,
                "name": "v2",
                "type": "V2Metadata"
              },
              {
                "id": 3,
                "name": "layer_shas",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "data_source",
                "type": "DataSource"
              },
              {
                "id": 5,
                "name": "version",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ImageSignature",
            "fields": [
              {
                "id": 1,
                "name": "signatures",
                "type": "Signature",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "fetched",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "Signature",
            "fields": [
              {
                "id": 1,
                "name": "cosign",
                "type": "CosignSignature"
              }
            ]
          },
          {
            "name": "CosignSignature",
            "fields": [
              {
                "id": 1,
                "name": "raw_signature",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "signature_payload",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "V2Metadata",
            "fields": [
              {
                "id": 1,
                "name": "digest",
                "type": "string"
              }
            ]
          },
          {
            "name": "V1Metadata",
            "fields": [
              {
                "id": 1,
                "name": "digest",
                "type": "string"
              },
              {
                "id": 2,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "author",
                "type": "string"
              },
              {
                "id": 4,
                "name": "layers",
                "type": "ImageLayer",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "user",
                "type": "string"
              },
              {
                "id": 6,
                "name": "command",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "entrypoint",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "volumes",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 9,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ImageLayer",
            "fields": [
              {
                "id": 1,
                "name": "instruction",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "author",
                "type": "string"
              },
              {
                "id": 6,
                "name": "empty",
                "type": "bool"
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "ImageName",
            "fields": [
              {
                "id": 1,
                "name": "registry",
                "type": "string"
              },
              {
                "id": 2,
                "name": "remote",
                "type": "string"
              },
              {
                "id": 3,
                "name": "tag",
                "type": "string"
              },
              {
                "id": 4,
                "name": "full_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListImage",
            "fields": [
              {
                "id": 7,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "components",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "cves",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "fixable_cves",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "priority",
                "type": "int64"
              }
            ],
            "reserved_ids": [
              9
            ]
          },
          {
            "name": "WatchedImage",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/vulnerability.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:image_component.proto",
      "def": {
        "messages": [
          {
            "name": "ImageComponent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "license",
                "type": "License"
              },
              {
                "id": 5,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "source",
                "type": "SourceType"
              },
              {
                "id": 7,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 8,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 9,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 10,
                "name": "operating_system",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:image_integration.proto",
      "def": {
        "enums": [
          {
            "name": "ImageIntegrationCategory",
            "enum_fields": [
              {
                "name": "REGISTRY"
              },
              {
                "name": "SCANNER",
                "integer": 1
              },
              {
                "name": "NODE_SCANNER",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ImageIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 6,
                "name": "categories",
                "type": "ImageIntegrationCategory",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "clairify",
                "type": "ClairifyConfig"
              },
              {
                "id": 9,
                "name": "docker",
                "type": "DockerConfig"
              },
              {
                "id": 10,
                "name": "quay",
                "type": "QuayConfig"
              },
              {
                "id": 11,
                "name": "ecr",
                "type": "ECRConfig"
              },
              {
                "id": 13,
                "name": "google",
                "type": "GoogleConfig"
              },
              {
                "id": 14,
                "name": "clair",
                "type": "ClairConfig"
              },
              {
                "id": 22,
                "name": "clair_v4",
                "type": "ClairV4Config"
              },
              {
                "id": 20,
                "name": "ibm",
                "type": "IBMRegistryConfig"
              },
              {
                "id": 15,
                "name": "autogenerated",
                "type": "bool"
              },
              {
                "id": 16,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 18,
                "name": "skip_test_integration",
                "type": "bool"
              },
              {
                "id": 21,
                "name": "source",
                "type": "Source"
              }
            ],
            "reserved_ids": [
              4,
              5,
              7,
              12,
              17,
              19
            ],
            "messages": [
              {
                "name": "Source",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "image_pull_secret_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "IBMRegistryConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "api_key",
                "type": "string"
              }
            ]
          },
          {
            "name": "QuayConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "oauthToken",
                "type": "string"
              },
              {
                "id": 3,
                "name": "insecure",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "registry_robot_credentials",
                "type": "RobotAccount"
              }
            ],
            "messages": [
              {
                "name": "RobotAccount",
                "fields": [
                  {
                    "id": 1,
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "password",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ClairConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "insecure",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ClairV4Config",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "insecure",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ClairifyConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 3,
                "name": "grpc_endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "num_concurrent_scans",
                "type": "int32"
              }
            ]
          },
          {
            "name": "DockerConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "username",
                "type": "string"
              },
              {
                "id": 3,
                "name": "password",
                "type": "string"
              },
              {
                "id": 4,
                "name": "insecure",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ECRConfig",
            "fields": [
              {
                "id": 1,
                "name": "registry_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "access_key_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "secret_access_key",
                "type": "string"
              },
              {
                "id": 4,
                "name": "region",
                "type": "string"
              },
              {
                "id": 5,
                "name": "use_iam",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 7,
                "name": "use_assume_role",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "assume_role_id",
                "type": "string"
              },
              {
                "id": 9,
                "name": "assume_role_external_id",
                "type": "string"
              },
              {
                "id": 10,
                "name": "authorization_data",
                "type": "AuthorizationData"
              }
            ],
            "messages": [
              {
                "name": "AuthorizationData",
                "fields": [
                  {
                    "id": 1,
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "password",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "expires_at",
                    "type": "google.protobuf.Timestamp"
                  }
                ]
              }
            ]
          },
          {
            "name": "GoogleConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 3,
                "name": "project",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:installation.proto",
      "def": {
        "messages": [
          {
            "name": "InstallationInfo",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:integration_health.proto",
      "def": {
        "enums": [
          {
            "name": "IntegrationHealth.Status",
            "enum_fields": [
              {
                "name": "UNINITIALIZED"
              },
              {
                "name": "UNHEALTHY",
                "integer": 1
              },
              {
                "name": "HEALTHY",
                "integer": 2
              }
            ]
          },
          {
            "name": "IntegrationHealth.Type",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "IMAGE_INTEGRATION",
                "integer": 1
              },
              {
                "name": "NOTIFIER",
                "integer": 2
              },
              {
                "name": "BACKUP",
                "integer": 3
              },
              {
                "name": "DECLARATIVE_CONFIG",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "IntegrationHealth",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 4,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 5,
                "name": "error_message",
                "type": "string"
              },
              {
                "id": 6,
                "name": "last_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:kube_event.proto",
      "def": {
        "enums": [
          {
            "name": "KubernetesEvent.APIVerb",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "CREATE",
                "integer": 1
              },
              {
                "name": "UPDATE",
                "integer": 2
              },
              {
                "name": "PATCH",
                "integer": 3
              },
              {
                "name": "DELETE",
                "integer": 4
              },
              {
                "name": "LIST",
                "integer": 5
              },
              {
                "name": "GET",
                "integer": 6
              },
              {
                "name": "WATCH",
                "integer": 7
              },
              {
                "name": "PROXY",
                "integer": 8
              }
            ]
          },
          {
            "name": "Object.Resource",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "PODS_EXEC",
                "integer": 1
              },
              {
                "name": "PODS_PORTFORWARD",
                "integer": 2
              },
              {
                "name": "SECRETS",
                "integer": 3
              },
              {
                "name": "CONFIGMAPS",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "KubernetesEvent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "object",
                "type": "Object"
              },
              {
                "id": 3,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "api_verb",
                "type": "APIVerb"
              },
              {
                "id": 5,
                "name": "pod_exec_args",
                "type": "PodExecArgs"
              },
              {
                "id": 6,
                "name": "pod_port_forward_args",
                "type": "PodPortForwardArgs"
              },
              {
                "id": 15,
                "name": "user",
                "type": "User"
              },
              {
                "id": 16,
                "name": "impersonated_user",
                "type": "User"
              },
              {
                "id": 17,
                "name": "source_ips",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "user_agent",
                "type": "string"
              },
              {
                "id": 19,
                "name": "response_status",
                "type": "ResponseStatus"
              },
              {
                "id": 20,
                "name": "request_uri",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Object",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "resource",
                    "type": "Resource"
                  },
                  {
                    "id": 3,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "namespace",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "PodExecArgs",
                "fields": [
                  {
                    "id": 1,
                    "name": "container",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "commands",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "PodPortForwardArgs",
                "fields": [
                  {
                    "id": 1,
                    "name": "ports",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "ResponseStatus",
                "fields": [
                  {
                    "id": 1,
                    "name": "status_code",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "reason",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "User",
                "fields": [
                  {
                    "id": 1,
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "groups",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:labels.proto",
      "def": {
        "enums": [
          {
            "name": "LabelSelector.Operator",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "IN",
                "integer": 1
              },
              {
                "name": "NOT_IN",
                "integer": 2
              },
              {
                "name": "EXISTS",
                "integer": 3
              },
              {
                "name": "NOT_EXISTS",
                "integer": 4
              }
            ]
          },
          {
            "name": "SetBasedLabelSelector.Operator",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "IN",
                "integer": 1
              },
              {
                "name": "NOT_IN",
                "integer": 2
              },
              {
                "name": "EXISTS",
                "integer": 3
              },
              {
                "name": "NOT_EXISTS",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "LabelSelector",
            "fields": [
              {
                "id": 2,
                "name": "requirements",
                "type": "Requirement",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "match_labels",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Requirement",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "op",
                    "type": "Operator"
                  },
                  {
                    "id": 3,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "SetBasedLabelSelector",
            "fields": [
              {
                "id": 2,
                "name": "requirements",
                "type": "Requirement",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              1
            ],
            "messages": [
              {
                "name": "Requirement",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "op",
                    "type": "Operator"
                  },
                  {
                    "id": 3,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:license.proto",
      "def": {
        "messages": [
          {
            "name": "StoredLicenseKey",
            "fields": [
              {
                "id": 1,
                "name": "license_key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "license_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "selected",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:log.proto",
      "def": {
        "messages": [
          {
            "name": "LogImbue",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "log",
                "type": "bytes"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:mitre.proto",
      "def": {
        "messages": [
          {
            "name": "MitreTactic",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              }
            ]
          },
          {
            "name": "MitreTechnique",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              }
            ]
          },
          {
            "name": "MitreAttackVector",
            "fields": [
              {
                "id": 1,
                "name": "tactic",
                "type": "MitreTactic"
              },
              {
                "id": 2,
                "name": "techniques",
                "type": "MitreTechnique",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MitreAttackMatrix",
            "fields": [
              {
                "id": 1,
                "name": "matrix_info",
                "type": "MatrixInfo"
              },
              {
                "id": 2,
                "name": "vectors",
                "type": "MitreAttackVector",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "MatrixInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "domain",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "platform",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "MitreAttackBundle",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "matrices",
                "type": "MitreAttackMatrix",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:namespace_metadata.proto",
      "def": {
        "messages": [
          {
            "name": "NamespaceMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "creation_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "priority",
                "type": "int64"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:network_baseline.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkBaselineConnectionProperties",
            "fields": [
              {
                "id": 1,
                "name": "ingress",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "L4Protocol"
              }
            ]
          },
          {
            "name": "NetworkBaselinePeer",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "NetworkEntity"
              },
              {
                "id": 2,
                "name": "properties",
                "type": "NetworkBaselineConnectionProperties",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkBaseline",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "peers",
                "type": "NetworkBaselinePeer",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "forbidden_peers",
                "type": "NetworkBaselinePeer",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "observation_period_end",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "locked",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "deployment_name",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_flow.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:network_flow.proto",
      "def": {
        "enums": [
          {
            "name": "NetworkEntityInfo.Type",
            "enum_fields": [
              {
                "name": "UNKNOWN_TYPE"
              },
              {
                "name": "DEPLOYMENT",
                "integer": 1
              },
              {
                "name": "INTERNET",
                "integer": 2
              },
              {
                "name": "LISTEN_ENDPOINT",
                "integer": 3
              },
              {
                "name": "EXTERNAL_SOURCE",
                "integer": 4
              }
            ]
          },
          {
            "name": "L4Protocol",
            "enum_fields": [
              {
                "name": "L4_PROTOCOL_UNKNOWN"
              },
              {
                "name": "L4_PROTOCOL_TCP",
                "integer": 1
              },
              {
                "name": "L4_PROTOCOL_UDP",
                "integer": 2
              },
              {
                "name": "L4_PROTOCOL_ICMP",
                "integer": 3
              },
              {
                "name": "L4_PROTOCOL_RAW",
                "integer": 4
              },
              {
                "name": "L4_PROTOCOL_SCTP",
                "integer": 5
              },
              {
                "name": "L4_PROTOCOL_ANY",
                "integer": -1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "NetworkFlow",
            "fields": [
              {
                "id": 1,
                "name": "props",
                "type": "NetworkFlowProperties"
              },
              {
                "id": 2,
                "name": "last_seen_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkFlowProperties",
            "fields": [
              {
                "id": 1,
                "name": "src_entity",
                "type": "NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "dst_entity",
                "type": "NetworkEntityInfo"
              },
              {
                "id": 3,
                "name": "dst_port",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "l4protocol",
                "type": "L4Protocol"
              }
            ]
          },
          {
            "name": "NetworkEndpoint",
            "fields": [
              {
                "id": 1,
                "name": "props",
                "type": "NetworkEndpointProperties"
              },
              {
                "id": 2,
                "name": "last_active_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NetworkEndpointProperties",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "l4protocol",
                "type": "L4Protocol"
              }
            ]
          },
          {
            "name": "NetworkEntity",
            "fields": [
              {
                "id": 1,
                "name": "info",
                "type": "NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "scope",
                "type": "Scope"
              }
            ],
            "messages": [
              {
                "name": "Scope",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "NetworkEntityInfo",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment",
                "type": "Deployment"
              },
              {
                "id": 4,
                "name": "external_source",
                "type": "ExternalSource"
              }
            ],
            "messages": [
              {
                "name": "Deployment",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "cluster",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "listen_ports",
                    "type": "ListenPort",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "ListenPort",
                    "fields": [
                      {
                        "id": 1,
                        "name": "port",
                        "type": "uint32"
                      },
                      {
                        "id": 2,
                        "name": "l4protocol",
                        "type": "L4Protocol"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ExternalSource",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "cidr",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "default",
                    "type": "bool"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:network_graph_config.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkGraphConfig",
            "fields": [
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "hide_default_external_srcs",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:network_policy.proto",
      "def": {
        "enums": [
          {
            "name": "Protocol",
            "enum_fields": [
              {
                "name": "UNSET_PROTOCOL"
              },
              {
                "name": "TCP_PROTOCOL",
                "integer": 1
              },
              {
                "name": "UDP_PROTOCOL",
                "integer": 2
              },
              {
                "name": "SCTP_PROTOCOL",
                "integer": 3
              }
            ]
          },
          {
            "name": "NetworkPolicyType",
            "enum_fields": [
              {
                "name": "UNSET_NETWORK_POLICY_TYPE"
              },
              {
                "name": "INGRESS_NETWORK_POLICY_TYPE",
                "integer": 1
              },
              {
                "name": "EGRESS_NETWORK_POLICY_TYPE",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "NetworkPolicy",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 8,
                "name": "spec",
                "type": "NetworkPolicySpec"
              },
              {
                "id": 9,
                "name": "yaml",
                "type": "string"
              },
              {
                "id": 10,
                "name": "api_version",
                "type": "string"
              },
              {
                "id": 11,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "NetworkPolicySpec",
            "fields": [
              {
                "id": 1,
                "name": "pod_selector",
                "type": "LabelSelector"
              },
              {
                "id": 2,
                "name": "ingress",
                "type": "NetworkPolicyIngressRule",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "egress",
                "type": "NetworkPolicyEgressRule",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "policy_types",
                "type": "NetworkPolicyType",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyEgressRule",
            "fields": [
              {
                "id": 1,
                "name": "ports",
                "type": "NetworkPolicyPort",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "to",
                "type": "NetworkPolicyPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyPeer",
            "fields": [
              {
                "id": 1,
                "name": "pod_selector",
                "type": "LabelSelector"
              },
              {
                "id": 2,
                "name": "namespace_selector",
                "type": "LabelSelector"
              },
              {
                "id": 3,
                "name": "ip_block",
                "type": "IPBlock"
              }
            ]
          },
          {
            "name": "IPBlock",
            "fields": [
              {
                "id": 1,
                "name": "cidr",
                "type": "string"
              },
              {
                "id": 2,
                "name": "except",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyPort",
            "fields": [
              {
                "id": 1,
                "name": "protocol",
                "type": "Protocol"
              },
              {
                "id": 2,
                "name": "port",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "port_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkPolicyIngressRule",
            "fields": [
              {
                "id": 1,
                "name": "ports",
                "type": "NetworkPolicyPort",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "from",
                "type": "NetworkPolicyPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyReference",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkPolicyModification",
            "fields": [
              {
                "id": 1,
                "name": "apply_yaml",
                "type": "string"
              },
              {
                "id": 2,
                "name": "to_delete",
                "type": "NetworkPolicyReference",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyApplicationUndoRecord",
            "fields": [
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "user",
                "type": "string"
              },
              {
                "id": 2,
                "name": "apply_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "original_modification",
                "type": "NetworkPolicyModification"
              },
              {
                "id": 4,
                "name": "undo_modification",
                "type": "NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "NetworkPolicyApplicationUndoDeploymentRecord",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "undo_record",
                "type": "NetworkPolicyApplicationUndoRecord"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/labels.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:node.proto",
      "def": {
        "enums": [
          {
            "name": "Node.Note",
            "enum_fields": [
              {
                "name": "MISSING_SCAN_DATA"
              }
            ]
          },
          {
            "name": "NodeScan.Note",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "UNSUPPORTED",
                "integer": 1
              },
              {
                "name": "KERNEL_UNSUPPORTED",
                "integer": 2
              },
              {
                "name": "CERTIFIED_RHEL_CVES_UNAVAILABLE",
                "integer": 3
              }
            ]
          },
          {
            "name": "NodeInventory.Note",
            "enum_fields": [
              {
                "name": "OS_CVES_UNAVAILABLE"
              },
              {
                "name": "OS_CVES_STALE",
                "integer": 1
              },
              {
                "name": "LANGUAGE_CVES_UNAVAILABLE",
                "integer": 2
              },
              {
                "name": "CERTIFIED_RHEL_SCAN_UNAVAILABLE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Node",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "taints",
                "type": "Taint",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 13,
                "name": "joined_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "internal_ip_addresses",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "external_ip_addresses",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "container_runtime_version",
                "type": "string"
              },
              {
                "id": 14,
                "name": "container_runtime",
                "type": "ContainerRuntimeInfo"
              },
              {
                "id": 11,
                "name": "kernel_version",
                "type": "string"
              },
              {
                "id": 17,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 12,
                "name": "os_image",
                "type": "string"
              },
              {
                "id": 15,
                "name": "kubelet_version",
                "type": "string"
              },
              {
                "id": 16,
                "name": "kube_proxy_version",
                "type": "string"
              },
              {
                "id": 25,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 26,
                "name": "k8s_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 18,
                "name": "scan",
                "type": "NodeScan"
              },
              {
                "id": 19,
                "name": "components",
                "type": "int32"
              },
              {
                "id": 20,
                "name": "cves",
                "type": "int32"
              },
              {
                "id": 21,
                "name": "fixable_cves",
                "type": "int32"
              },
              {
                "id": 22,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 23,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 24,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 27,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "NodeScan",
            "fields": [
              {
                "id": 1,
                "name": "scan_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 2,
                "name": "components",
                "type": "EmbeddedNodeScanComponent",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NodeInventory",
            "fields": [
              {
                "id": 1,
                "name": "node_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "scan_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "components",
                "type": "Components"
              },
              {
                "id": 5,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Components",
                "fields": [
                  {
                    "id": 1,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "rhel_components",
                    "type": "RHELComponent",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "rhel_content_sets",
                    "type": "string",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "RHELComponent",
                    "fields": [
                      {
                        "id": 1,
                        "name": "id",
                        "type": "int64"
                      },
                      {
                        "id": 2,
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "namespace",
                        "type": "string"
                      },
                      {
                        "id": 4,
                        "name": "version",
                        "type": "string"
                      },
                      {
                        "id": 5,
                        "name": "arch",
                        "type": "string"
                      },
                      {
                        "id": 6,
                        "name": "module",
                        "type": "string"
                      },
                      {
                        "id": 7,
                        "name": "added_by",
                        "type": "string"
                      },
                      {
                        "id": 8,
                        "name": "executables",
                        "type": "Executable",
                        "is_repeated": true
                      }
                    ],
                    "messages": [
                      {
                        "name": "Executable",
                        "fields": [
                          {
                            "id": 1,
                            "name": "path",
                            "type": "string"
                          },
                          {
                            "id": 2,
                            "name": "required_features",
                            "type": "FeatureNameVersion",
                            "is_repeated": true
                          }
                        ],
                        "messages": [
                          {
                            "name": "FeatureNameVersion",
                            "fields": [
                              {
                                "id": 1,
                                "name": "name",
                                "type": "string"
                              },
                              {
                                "id": 2,
                                "name": "version",
                                "type": "string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "EmbeddedNodeScanComponent",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "vulns",
                "type": "EmbeddedVulnerability",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "vulnerabilities",
                "type": "NodeVulnerability",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 6,
                "name": "risk_score",
                "type": "float"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/container_runtime.proto"
          },
          {
            "path": "storage/taints.proto"
          },
          {
            "path": "storage/vulnerability.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:node_component.proto",
      "def": {
        "messages": [
          {
            "name": "NodeComponent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 8,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 9,
                "name": "operating_system",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:node_integration.proto",
      "def": {
        "messages": [
          {
            "name": "NodeIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "clairify",
                "type": "ClairifyConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/image_integration.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:notification_schedule.proto",
      "def": {
        "messages": [
          {
            "name": "NotificationSchedule",
            "fields": [
              {
                "id": 2,
                "name": "last_run",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "reserved_ids": [
              1
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:notifier.proto",
      "def": {
        "enums": [
          {
            "name": "Email.AuthMethod",
            "enum_fields": [
              {
                "name": "DISABLED"
              },
              {
                "name": "PLAIN",
                "integer": 1
              },
              {
                "name": "LOGIN",
                "integer": 2
              }
            ]
          },
          {
            "name": "Syslog.LocalFacility",
            "enum_fields": [
              {
                "name": "LOCAL0"
              },
              {
                "name": "LOCAL1",
                "integer": 1
              },
              {
                "name": "LOCAL2",
                "integer": 2
              },
              {
                "name": "LOCAL3",
                "integer": 3
              },
              {
                "name": "LOCAL4",
                "integer": 4
              },
              {
                "name": "LOCAL5",
                "integer": 5
              },
              {
                "name": "LOCAL6",
                "integer": 6
              },
              {
                "name": "LOCAL7",
                "integer": 7
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Notifier",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "ui_endpoint",
                "type": "string"
              },
              {
                "id": 8,
                "name": "label_key",
                "type": "string"
              },
              {
                "id": 9,
                "name": "label_default",
                "type": "string"
              },
              {
                "id": 10,
                "name": "jira",
                "type": "Jira"
              },
              {
                "id": 11,
                "name": "email",
                "type": "Email"
              },
              {
                "id": 12,
                "name": "cscc",
                "type": "CSCC"
              },
              {
                "id": 13,
                "name": "splunk",
                "type": "Splunk"
              },
              {
                "id": 14,
                "name": "pagerduty",
                "type": "PagerDuty"
              },
              {
                "id": 15,
                "name": "generic",
                "type": "Generic"
              },
              {
                "id": 16,
                "name": "sumologic",
                "type": "SumoLogic"
              },
              {
                "id": 17,
                "name": "aws_security_hub",
                "type": "AWSSecurityHub"
              },
              {
                "id": 18,
                "name": "syslog",
                "type": "Syslog"
              }
            ],
            "reserved_ids": [
              5
            ],
            "reserved_names": [
              "enabled"
            ]
          },
          {
            "name": "AWSSecurityHub",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "string"
              },
              {
                "id": 2,
                "name": "credentials",
                "type": "Credentials"
              },
              {
                "id": 3,
                "name": "account_id",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Credentials",
                "fields": [
                  {
                    "id": 1,
                    "name": "access_key_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "secret_access_key",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "CSCC",
            "fields": [
              {
                "id": 1,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 4,
                "name": "source_id",
                "type": "string"
              }
            ],
            "reserved_ids": [
              2,
              3
            ]
          },
          {
            "name": "Jira",
            "fields": [
              {
                "id": 1,
                "name": "url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "username",
                "type": "string"
              },
              {
                "id": 3,
                "name": "password",
                "type": "string"
              },
              {
                "id": 4,
                "name": "issue_type",
                "type": "string"
              },
              {
                "id": 5,
                "name": "priority_mappings",
                "type": "PriorityMapping",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "default_fields_json",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "PriorityMapping",
                "fields": [
                  {
                    "id": 1,
                    "name": "severity",
                    "type": "Severity"
                  },
                  {
                    "id": 2,
                    "name": "priority_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "Email",
            "fields": [
              {
                "id": 1,
                "name": "server",
                "type": "string"
              },
              {
                "id": 2,
                "name": "sender",
                "type": "string"
              },
              {
                "id": 3,
                "name": "username",
                "type": "string"
              },
              {
                "id": 4,
                "name": "password",
                "type": "string"
              },
              {
                "id": 5,
                "name": "disableTLS",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "DEPRECATED_useStartTLS",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "from",
                "type": "string"
              },
              {
                "id": 8,
                "name": "startTLSAuthMethod",
                "type": "AuthMethod"
              },
              {
                "id": 9,
                "name": "allow_unauthenticated_smtp",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Splunk",
            "fields": [
              {
                "id": 1,
                "name": "http_token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "http_endpoint",
                "type": "string"
              },
              {
                "id": 3,
                "name": "insecure",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "truncate",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "audit_logging_enabled",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "derived_source_type",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "source_types",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PagerDuty",
            "fields": [
              {
                "id": 1,
                "name": "api_key",
                "type": "string"
              }
            ]
          },
          {
            "name": "Generic",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "skipTLSVerify",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "ca_cert",
                "type": "string"
              },
              {
                "id": 4,
                "name": "username",
                "type": "string"
              },
              {
                "id": 5,
                "name": "password",
                "type": "string"
              },
              {
                "id": 6,
                "name": "headers",
                "type": "KeyValuePair",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "extra_fields",
                "type": "KeyValuePair",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "audit_logging_enabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "SumoLogic",
            "fields": [
              {
                "id": 1,
                "name": "http_source_address",
                "type": "string"
              },
              {
                "id": 2,
                "name": "skipTLSVerify",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Syslog",
            "fields": [
              {
                "id": 1,
                "name": "local_facility",
                "type": "LocalFacility"
              },
              {
                "id": 2,
                "name": "tcp_config",
                "type": "TCPConfig"
              },
              {
                "id": 3,
                "name": "extra_fields",
                "type": "KeyValuePair",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "TCPConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "hostname",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "port",
                    "type": "int32"
                  },
                  {
                    "id": 3,
                    "name": "skip_tls_verify",
                    "type": "bool"
                  },
                  {
                    "id": 4,
                    "name": "use_tls",
                    "type": "bool"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/common.proto"
          },
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:operation_status.proto",
      "def": {
        "enums": [
          {
            "name": "OperationStatus",
            "enum_fields": [
              {
                "name": "FAIL"
              },
              {
                "name": "PASS",
                "integer": 1
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:orchestrator_integration.proto",
      "def": {
        "messages": [
          {
            "name": "OrchestratorIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "clairify",
                "type": "ClairifyConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/image_integration.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:policy.proto",
      "def": {
        "enums": [
          {
            "name": "EventSource",
            "enum_fields": [
              {
                "name": "NOT_APPLICABLE"
              },
              {
                "name": "DEPLOYMENT_EVENT",
                "integer": 1
              },
              {
                "name": "AUDIT_LOG_EVENT",
                "integer": 2
              }
            ]
          },
          {
            "name": "BooleanOperator",
            "enum_fields": [
              {
                "name": "OR"
              },
              {
                "name": "AND",
                "integer": 1
              }
            ]
          },
          {
            "name": "EnforcementAction",
            "enum_fields": [
              {
                "name": "UNSET_ENFORCEMENT"
              },
              {
                "name": "SCALE_TO_ZERO_ENFORCEMENT",
                "integer": 1
              },
              {
                "name": "UNSATISFIABLE_NODE_CONSTRAINT_ENFORCEMENT",
                "integer": 2
              },
              {
                "name": "KILL_POD_ENFORCEMENT",
                "integer": 3
              },
              {
                "name": "FAIL_BUILD_ENFORCEMENT",
                "integer": 4
              },
              {
                "name": "FAIL_KUBE_REQUEST_ENFORCEMENT",
                "integer": 5
              },
              {
                "name": "FAIL_DEPLOYMENT_CREATE_ENFORCEMENT",
                "integer": 6
              },
              {
                "name": "FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT",
                "integer": 7
              }
            ]
          },
          {
            "name": "Severity",
            "enum_fields": [
              {
                "name": "UNSET_SEVERITY"
              },
              {
                "name": "LOW_SEVERITY",
                "integer": 1
              },
              {
                "name": "MEDIUM_SEVERITY",
                "integer": 2
              },
              {
                "name": "HIGH_SEVERITY",
                "integer": 3
              },
              {
                "name": "CRITICAL_SEVERITY",
                "integer": 4
              }
            ]
          },
          {
            "name": "LifecycleStage",
            "enum_fields": [
              {
                "name": "DEPLOY"
              },
              {
                "name": "BUILD",
                "integer": 1
              },
              {
                "name": "RUNTIME",
                "integer": 2
              }
            ]
          },
          {
            "name": "Comparator",
            "enum_fields": [
              {
                "name": "LESS_THAN"
              },
              {
                "name": "LESS_THAN_OR_EQUALS",
                "integer": 1
              },
              {
                "name": "EQUALS",
                "integer": 2
              },
              {
                "name": "GREATER_THAN_OR_EQUALS",
                "integer": 3
              },
              {
                "name": "GREATER_THAN",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Policy",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "rationale",
                "type": "string"
              },
              {
                "id": 5,
                "name": "remediation",
                "type": "string"
              },
              {
                "id": 6,
                "name": "disabled",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "categories",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "lifecycle_stages",
                "type": "LifecycleStage",
                "is_repeated": true
              },
              {
                "id": 22,
                "name": "event_source",
                "type": "EventSource"
              },
              {
                "id": 21,
                "name": "exclusions",
                "type": "Exclusion",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "scope",
                "type": "Scope",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "severity",
                "type": "Severity"
              },
              {
                "id": 13,
                "name": "enforcement_actions",
                "type": "EnforcementAction",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "notifiers",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 15,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 16,
                "name": "SORT_name",
                "type": "string"
              },
              {
                "id": 17,
                "name": "SORT_lifecycleStage",
                "type": "string"
              },
              {
                "id": 18,
                "name": "SORT_enforcement",
                "type": "bool"
              },
              {
                "id": 19,
                "name": "policy_version",
                "type": "string"
              },
              {
                "id": 20,
                "name": "policy_sections",
                "type": "PolicySection",
                "is_repeated": true
              },
              {
                "id": 23,
                "name": "mitre_attack_vectors",
                "type": "MitreAttackVectors",
                "is_repeated": true
              },
              {
                "id": 24,
                "name": "criteria_locked",
                "type": "bool"
              },
              {
                "id": 25,
                "name": "mitre_vectors_locked",
                "type": "bool"
              },
              {
                "id": 26,
                "name": "is_default",
                "type": "bool"
              }
            ],
            "reserved_ids": [
              8,
              10
            ],
            "messages": [
              {
                "name": "MitreAttackVectors",
                "fields": [
                  {
                    "id": 1,
                    "name": "tactic",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "techniques",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "PolicySection",
            "fields": [
              {
                "id": 1,
                "name": "section_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "policy_groups",
                "type": "PolicyGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyGroup",
            "fields": [
              {
                "id": 1,
                "name": "field_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "boolean_operator",
                "type": "BooleanOperator"
              },
              {
                "id": 3,
                "name": "negate",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "values",
                "type": "PolicyValue",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "PolicyList",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "Policy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListPolicy",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "severity",
                "type": "Severity"
              },
              {
                "id": 5,
                "name": "disabled",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "lifecycle_stages",
                "type": "LifecycleStage",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "notifiers",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "event_source",
                "type": "EventSource"
              },
              {
                "id": 10,
                "name": "is_default",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Component",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              }
            ]
          },
          {
            "name": "DockerfileLineRuleField",
            "fields": [
              {
                "id": 1,
                "name": "instruction",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "KeyValuePolicy",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "env_var_source",
                "type": "ContainerConfig.EnvironmentConfig.EnvVarSource"
              }
            ]
          },
          {
            "name": "VolumePolicy",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "source",
                "type": "string"
              },
              {
                "id": 3,
                "name": "destination",
                "type": "string"
              },
              {
                "id": 4,
                "name": "read_only",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "type",
                "type": "string"
              }
            ]
          },
          {
            "name": "HostMountPolicy",
            "fields": [
              {
                "id": 1,
                "name": "read_only",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ProcessPolicy",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "args",
                "type": "string"
              },
              {
                "id": 3,
                "name": "ancestor",
                "type": "string"
              },
              {
                "id": 4,
                "name": "uid",
                "type": "string"
              }
            ]
          },
          {
            "name": "ResourcePolicy",
            "fields": [
              {
                "id": 1,
                "name": "cpu_resource_request",
                "type": "NumericalPolicy"
              },
              {
                "id": 2,
                "name": "cpu_resource_limit",
                "type": "NumericalPolicy"
              },
              {
                "id": 3,
                "name": "memory_resource_request",
                "type": "NumericalPolicy"
              },
              {
                "id": 4,
                "name": "memory_resource_limit",
                "type": "NumericalPolicy"
              }
            ]
          },
          {
            "name": "NumericalPolicy",
            "fields": [
              {
                "id": 1,
                "name": "op",
                "type": "Comparator"
              },
              {
                "id": 3,
                "name": "value",
                "type": "float"
              }
            ]
          },
          {
            "name": "PortPolicy",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "string"
              }
            ]
          },
          {
            "name": "PermissionPolicy",
            "fields": [
              {
                "id": 1,
                "name": "permission_level",
                "type": "PermissionLevel"
              }
            ]
          },
          {
            "name": "ImageNamePolicy",
            "fields": [
              {
                "id": 1,
                "name": "registry",
                "type": "string"
              },
              {
                "id": 2,
                "name": "remote",
                "type": "string"
              },
              {
                "id": 3,
                "name": "tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "PortExposurePolicy",
            "fields": [
              {
                "id": 1,
                "name": "exposure_levels",
                "type": "PortConfig.ExposureLevel",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Exclusion",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "deployment",
                "type": "Deployment"
              },
              {
                "id": 7,
                "name": "image",
                "type": "Image"
              },
              {
                "id": 6,
                "name": "expiration",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "reserved_ids": [
              2
            ],
            "messages": [
              {
                "name": "Container",
                "fields": [
                  {
                    "id": 3,
                    "name": "image_name",
                    "type": "ImageName"
                  }
                ]
              },
              {
                "name": "Deployment",
                "fields": [
                  {
                    "id": 3,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "scope",
                    "type": "Scope"
                  }
                ]
              },
              {
                "name": "Image",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ExportPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "storage.Policy",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/scope.proto"
          },
          {
            "path": "storage/image.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/rbac.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:policy_category.proto",
      "def": {
        "messages": [
          {
            "name": "PolicyCategory",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "isDefault",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:process_baseline.proto",
      "def": {
        "enums": [
          {
            "name": "ContainerNameAndBaselineStatus.BaselineStatus",
            "enum_fields": [
              {
                "name": "INVALID"
              },
              {
                "name": "NOT_GENERATED",
                "integer": 1
              },
              {
                "name": "UNLOCKED",
                "integer": 2
              },
              {
                "name": "LOCKED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ProcessBaselineKey",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProcessBaseline",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "ProcessBaselineKey"
              },
              {
                "id": 3,
                "name": "elements",
                "type": "BaselineElement",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "element_graveyard",
                "type": "BaselineElement",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "user_locked_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "stack_rox_locked_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "last_update",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "BaselineElement",
            "fields": [
              {
                "id": 1,
                "name": "element",
                "type": "BaselineItem"
              },
              {
                "id": 2,
                "name": "auto",
                "type": "bool"
              }
            ]
          },
          {
            "name": "BaselineItem",
            "fields": [
              {
                "id": 1,
                "name": "process_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ContainerNameAndBaselineStatus",
            "fields": [
              {
                "id": 1,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "baseline_status",
                "type": "BaselineStatus"
              },
              {
                "id": 3,
                "name": "anomalous_processes_executed",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ProcessBaselineResults",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 2,
                "name": "baseline_statuses",
                "type": "ContainerNameAndBaselineStatus",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:process_indicator.proto",
      "def": {
        "messages": [
          {
            "name": "ProcessIndicator",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "pod_id",
                "type": "string"
              },
              {
                "id": 11,
                "name": "pod_uid",
                "type": "string"
              },
              {
                "id": 6,
                "name": "signal",
                "type": "ProcessSignal"
              },
              {
                "id": 7,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 9,
                "name": "container_start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 12,
                "name": "image_id",
                "type": "string"
              }
            ],
            "reserved_ids": [
              10,
              5
            ]
          },
          {
            "name": "ProcessIndicatorUniqueKey",
            "fields": [
              {
                "id": 1,
                "name": "pod_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "process_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "process_exec_file_path",
                "type": "string"
              },
              {
                "id": 5,
                "name": "process_args",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkProcessUniqueKey",
            "fields": [
              {
                "id": 1,
                "name": "process_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "process_exec_file_path",
                "type": "string"
              },
              {
                "id": 3,
                "name": "process_args",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProcessSignal",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "args",
                "type": "string"
              },
              {
                "id": 6,
                "name": "exec_file_path",
                "type": "string"
              },
              {
                "id": 7,
                "name": "pid",
                "type": "uint32"
              },
              {
                "id": 8,
                "name": "uid",
                "type": "uint32"
              },
              {
                "id": 9,
                "name": "gid",
                "type": "uint32"
              },
              {
                "id": 10,
                "name": "lineage",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "scraped",
                "type": "bool"
              },
              {
                "id": 12,
                "name": "lineage_info",
                "type": "LineageInfo",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "LineageInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "parent_uid",
                    "type": "uint32"
                  },
                  {
                    "id": 2,
                    "name": "parent_exec_file_path",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:process_listening_on_port.proto",
      "def": {
        "messages": [
          {
            "name": "ProcessListeningOnPort",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "Endpoint"
              },
              {
                "id": 2,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "pod_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "pod_uid",
                "type": "string"
              },
              {
                "id": 6,
                "name": "signal",
                "type": "ProcessSignal"
              },
              {
                "id": 7,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 9,
                "name": "container_start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "image_id",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Endpoint",
                "fields": [
                  {
                    "id": 1,
                    "name": "port",
                    "type": "uint32"
                  },
                  {
                    "id": 2,
                    "name": "protocol",
                    "type": "L4Protocol"
                  }
                ]
              }
            ]
          },
          {
            "name": "ProcessListeningOnPortFromSensor",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "L4Protocol"
              },
              {
                "id": 3,
                "name": "process",
                "type": "ProcessIndicatorUniqueKey"
              },
              {
                "id": 4,
                "name": "close_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProcessListeningOnPortStorage",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "L4Protocol"
              },
              {
                "id": 4,
                "name": "close_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "process_indicator_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "closed",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "process",
                "type": "ProcessIndicatorUniqueKey"
              },
              {
                "id": 8,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:rbac.proto",
      "def": {
        "enums": [
          {
            "name": "SubjectKind",
            "enum_fields": [
              {
                "name": "UNSET_KIND"
              },
              {
                "name": "SERVICE_ACCOUNT",
                "integer": 1
              },
              {
                "name": "USER",
                "integer": 2
              },
              {
                "name": "GROUP",
                "integer": 3
              }
            ]
          },
          {
            "name": "PermissionLevel",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "NONE",
                "integer": 1
              },
              {
                "name": "DEFAULT",
                "integer": 2
              },
              {
                "name": "ELEVATED_IN_NAMESPACE",
                "integer": 3
              },
              {
                "name": "ELEVATED_CLUSTER_WIDE",
                "integer": 4
              },
              {
                "name": "CLUSTER_ADMIN",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "K8sRole",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_role",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "rules",
                "type": "PolicyRule",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PolicyRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "api_groups",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "non_resource_urls",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "resource_names",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "K8sRoleBinding",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_role",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "subjects",
                "type": "Subject",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "role_id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "Subject",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "kind",
                "type": "SubjectKind"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_name",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:relations.proto",
      "def": {
        "messages": [
          {
            "name": "ImageComponentEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "layer_index",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "location",
                "type": "string"
              },
              {
                "id": 4,
                "name": "image_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "image_component_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComponentCVEEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "is_fixable",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 4,
                "name": "image_component_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "image_cve_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImageCVEEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "first_image_occurrence",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "state",
                "type": "VulnerabilityState"
              },
              {
                "id": 4,
                "name": "image_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "image_cve_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NodeComponentEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "node_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "node_component_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NodeComponentCVEEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "is_fixable",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 4,
                "name": "node_component_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "node_cve_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ClusterCVEEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "is_fixable",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cve_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "PolicyCategoryEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "policy_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "category_id",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/cve.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:report_configuration.proto",
      "def": {
        "enums": [
          {
            "name": "ReportConfiguration.ReportType",
            "enum_fields": [
              {
                "name": "VULNERABILITY"
              }
            ]
          },
          {
            "name": "ReportLastRunStatus.RunStatus",
            "enum_fields": [
              {
                "name": "SUCCESS"
              },
              {
                "name": "FAILURE",
                "integer": 1
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.Fixability",
            "enum_fields": [
              {
                "name": "BOTH"
              },
              {
                "name": "FIXABLE",
                "integer": 1
              },
              {
                "name": "NOT_FIXABLE",
                "integer": 2
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.ImageType",
            "enum_fields": [
              {
                "name": "DEPLOYED"
              },
              {
                "name": "WATCHED",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ReportConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "ReportType"
              },
              {
                "id": 5,
                "name": "vuln_report_filters",
                "type": "VulnerabilityReportFilters"
              },
              {
                "id": 6,
                "name": "scope_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "email_config",
                "type": "EmailNotifierConfiguration"
              },
              {
                "id": 8,
                "name": "schedule",
                "type": "storage.Schedule"
              },
              {
                "id": 9,
                "name": "last_run_status",
                "type": "ReportLastRunStatus"
              },
              {
                "id": 10,
                "name": "last_successful_run_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 11,
                "name": "resource_scope",
                "type": "ResourceScope"
              },
              {
                "id": 12,
                "name": "notifiers",
                "type": "NotifierConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReportLastRunStatus",
            "fields": [
              {
                "id": 1,
                "name": "report_status",
                "type": "RunStatus"
              },
              {
                "id": 2,
                "name": "last_run_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "error_msg",
                "type": "string"
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters",
            "fields": [
              {
                "id": 1,
                "name": "fixability",
                "type": "Fixability"
              },
              {
                "id": 2,
                "name": "since_last_report",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "severities",
                "type": "VulnerabilitySeverity",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "image_types",
                "type": "ImageType",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "all_vuln",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "last_successful_report",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "start_date",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ResourceScope",
            "fields": [
              {
                "id": 1,
                "name": "collection_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NotifierConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "email_config",
                "type": "EmailNotifierConfiguration"
              }
            ]
          },
          {
            "name": "EmailNotifierConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "notifier_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "mailing_lists",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cve.proto"
          },
          {
            "path": "storage/schedule.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:resource_collection.proto",
      "def": {
        "enums": [
          {
            "name": "MatchType",
            "enum_fields": [
              {
                "name": "EXACT"
              },
              {
                "name": "REGEX",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ResourceCollection",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "created_by",
                "type": "SlimUser"
              },
              {
                "id": 7,
                "name": "updated_by",
                "type": "SlimUser"
              },
              {
                "id": 8,
                "name": "resource_selectors",
                "type": "ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "embedded_collections",
                "type": "EmbeddedResourceCollection",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "EmbeddedResourceCollection",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ResourceSelector",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "SelectorRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SelectorRule",
            "fields": [
              {
                "id": 1,
                "name": "field_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "operator",
                "type": "BooleanOperator"
              },
              {
                "id": 3,
                "name": "values",
                "type": "RuleValue",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RuleValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              },
              {
                "id": 2,
                "name": "match_type",
                "type": "MatchType"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/user.proto"
          },
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:risk.proto",
      "def": {
        "enums": [
          {
            "name": "RiskSubjectType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "DEPLOYMENT",
                "integer": 1
              },
              {
                "name": "NAMESPACE",
                "integer": 2
              },
              {
                "name": "CLUSTER",
                "integer": 3
              },
              {
                "name": "NODE",
                "integer": 7
              },
              {
                "name": "NODE_COMPONENT",
                "integer": 8
              },
              {
                "name": "IMAGE",
                "integer": 4
              },
              {
                "name": "IMAGE_COMPONENT",
                "integer": 6
              },
              {
                "name": "SERVICEACCOUNT",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Risk",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "subject",
                "type": "RiskSubject"
              },
              {
                "id": 3,
                "name": "score",
                "type": "float"
              },
              {
                "id": 4,
                "name": "results",
                "type": "Result",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Result",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "factors",
                    "type": "Factor",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "score",
                    "type": "float"
                  }
                ],
                "messages": [
                  {
                    "name": "Factor",
                    "fields": [
                      {
                        "id": 1,
                        "name": "message",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "url",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "RiskSubject",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "RiskSubjectType"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:role.proto",
      "def": {
        "enums": [
          {
            "name": "Access",
            "enum_fields": [
              {
                "name": "NO_ACCESS"
              },
              {
                "name": "READ_ACCESS",
                "integer": 1
              },
              {
                "name": "READ_WRITE_ACCESS",
                "integer": 2
              }
            ]
          },
          {
            "name": "EffectiveAccessScope.State",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "INCLUDED",
                "integer": 1
              },
              {
                "name": "EXCLUDED",
                "integer": 2
              },
              {
                "name": "PARTIAL",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Role",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "description",
                "type": "string"
              },
              {
                "id": 6,
                "name": "permission_set_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "access_scope_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "global_access",
                "type": "Access"
              },
              {
                "id": 8,
                "name": "traits",
                "type": "Traits"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "resource_to_access",
                  "type": "Access"
                }
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "PermissionSet",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "traits",
                "type": "Traits"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "resource_to_access",
                  "type": "Access"
                }
              }
            ]
          },
          {
            "name": "SimpleAccessScope",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "rules",
                "type": "Rules"
              },
              {
                "id": 5,
                "name": "traits",
                "type": "Traits"
              }
            ],
            "messages": [
              {
                "name": "Rules",
                "fields": [
                  {
                    "id": 1,
                    "name": "included_clusters",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "included_namespaces",
                    "type": "Namespace",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "cluster_label_selectors",
                    "type": "SetBasedLabelSelector",
                    "is_repeated": true
                  },
                  {
                    "id": 4,
                    "name": "namespace_label_selectors",
                    "type": "SetBasedLabelSelector",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "Namespace",
                    "fields": [
                      {
                        "id": 1,
                        "name": "cluster_name",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "namespace_name",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "EffectiveAccessScope",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "Cluster",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Namespace",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "state",
                    "type": "State"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 4,
                      "name": "labels",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "Cluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "state",
                    "type": "State"
                  },
                  {
                    "id": 4,
                    "name": "namespaces",
                    "type": "Namespace",
                    "is_repeated": true
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 5,
                      "name": "labels",
                      "type": "string"
                    }
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/labels.proto"
          },
          {
            "path": "storage/traits.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:schedule.proto",
      "def": {
        "enums": [
          {
            "name": "Schedule.IntervalType",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "DAILY",
                "integer": 1
              },
              {
                "name": "WEEKLY",
                "integer": 2
              },
              {
                "name": "MONTHLY",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Schedule",
            "fields": [
              {
                "id": 1,
                "name": "interval_type",
                "type": "IntervalType"
              },
              {
                "id": 2,
                "name": "hour",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "minute",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "weekly",
                "type": "WeeklyInterval"
              },
              {
                "id": 5,
                "name": "days_of_week",
                "type": "DaysOfWeek"
              },
              {
                "id": 6,
                "name": "days_of_month",
                "type": "DaysOfMonth"
              }
            ],
            "messages": [
              {
                "name": "WeeklyInterval",
                "fields": [
                  {
                    "id": 1,
                    "name": "day",
                    "type": "int32"
                  }
                ]
              },
              {
                "name": "DaysOfWeek",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "DaysOfMonth",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:scope.proto",
      "def": {
        "messages": [
          {
            "name": "Scope",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 3,
                "name": "label",
                "type": "Label"
              }
            ],
            "messages": [
              {
                "name": "Label",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:secret.proto",
      "def": {
        "enums": [
          {
            "name": "SecretType",
            "enum_fields": [
              {
                "name": "UNDETERMINED"
              },
              {
                "name": "PUBLIC_CERTIFICATE",
                "integer": 1
              },
              {
                "name": "CERTIFICATE_REQUEST",
                "integer": 2
              },
              {
                "name": "PRIVACY_ENHANCED_MESSAGE",
                "integer": 3
              },
              {
                "name": "OPENSSH_PRIVATE_KEY",
                "integer": 4
              },
              {
                "name": "PGP_PRIVATE_KEY",
                "integer": 5
              },
              {
                "name": "EC_PRIVATE_KEY",
                "integer": 6
              },
              {
                "name": "RSA_PRIVATE_KEY",
                "integer": 7
              },
              {
                "name": "DSA_PRIVATE_KEY",
                "integer": 8
              },
              {
                "name": "CERT_PRIVATE_KEY",
                "integer": 9
              },
              {
                "name": "ENCRYPTED_PRIVATE_KEY",
                "integer": 10
              },
              {
                "name": "IMAGE_PULL_SECRET",
                "integer": 11
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Secret",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 6,
                "name": "type",
                "type": "string"
              },
              {
                "id": 9,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "files",
                "type": "SecretDataFile",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "relationship",
                "type": "SecretRelationship"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ListSecret",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 7,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "types",
                "type": "SecretType",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "SecretRelationship",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "container_relationships",
                "type": "SecretContainerRelationship",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "deployment_relationships",
                "type": "SecretDeploymentRelationship",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SecretDeploymentRelationship",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "SecretContainerRelationship",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImagePullSecret",
            "fields": [
              {
                "id": 1,
                "name": "registries",
                "type": "Registry",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Registry",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "username",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "SecretDataFile",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "SecretType"
              },
              {
                "id": 3,
                "name": "cert",
                "type": "Cert"
              },
              {
                "id": 4,
                "name": "image_pull_secret",
                "type": "ImagePullSecret"
              }
            ]
          },
          {
            "name": "Cert",
            "fields": [
              {
                "id": 1,
                "name": "subject",
                "type": "CertName"
              },
              {
                "id": 2,
                "name": "issuer",
                "type": "CertName"
              },
              {
                "id": 3,
                "name": "sans",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "start_date",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "end_date",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "algorithm",
                "type": "string"
              }
            ]
          },
          {
            "name": "CertName",
            "fields": [
              {
                "id": 1,
                "name": "common_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "country",
                "type": "string"
              },
              {
                "id": 3,
                "name": "organization",
                "type": "string"
              },
              {
                "id": 4,
                "name": "organization_unit",
                "type": "string"
              },
              {
                "id": 5,
                "name": "locality",
                "type": "string"
              },
              {
                "id": 6,
                "name": "province",
                "type": "string"
              },
              {
                "id": 7,
                "name": "street_address",
                "type": "string"
              },
              {
                "id": 8,
                "name": "postal_code",
                "type": "string"
              },
              {
                "id": 9,
                "name": "names",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:sensor_upgrade.proto",
      "def": {
        "messages": [
          {
            "name": "SensorUpgradeConfig",
            "fields": [
              {
                "id": 1,
                "name": "enable_auto_upgrade",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:service_account.proto",
      "def": {
        "messages": [
          {
            "name": "ServiceAccount",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "automount_token",
                "type": "bool"
              },
              {
                "id": 10,
                "name": "secrets",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "image_pull_secrets",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:service_identity.proto",
      "def": {
        "enums": [
          {
            "name": "ServiceType",
            "enum_fields": [
              {
                "name": "UNKNOWN_SERVICE"
              },
              {
                "name": "SENSOR_SERVICE",
                "integer": 1
              },
              {
                "name": "CENTRAL_SERVICE",
                "integer": 2
              },
              {
                "name": "CENTRAL_DB_SERVICE",
                "integer": 12
              },
              {
                "name": "REMOTE_SERVICE",
                "integer": 3
              },
              {
                "name": "COLLECTOR_SERVICE",
                "integer": 4
              },
              {
                "name": "MONITORING_UI_SERVICE",
                "integer": 5
              },
              {
                "name": "MONITORING_DB_SERVICE",
                "integer": 6
              },
              {
                "name": "MONITORING_CLIENT_SERVICE",
                "integer": 7
              },
              {
                "name": "BENCHMARK_SERVICE",
                "integer": 8
              },
              {
                "name": "SCANNER_SERVICE",
                "integer": 9
              },
              {
                "name": "SCANNER_DB_SERVICE",
                "integer": 10
              },
              {
                "name": "ADMISSION_CONTROL_SERVICE",
                "integer": 11
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ServiceIdentity",
            "fields": [
              {
                "id": 4,
                "name": "serial_str",
                "type": "string"
              },
              {
                "id": 1,
                "name": "serial",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "ServiceType"
              },
              {
                "id": 5,
                "name": "init_bundle_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ServiceCertificate",
            "fields": [
              {
                "id": 1,
                "name": "cert_pem",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "key_pem",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "TypedServiceCertificate",
            "fields": [
              {
                "id": 1,
                "name": "service_type",
                "type": "ServiceType"
              },
              {
                "id": 2,
                "name": "cert",
                "type": "ServiceCertificate"
              }
            ]
          },
          {
            "name": "TypedServiceCertificateSet",
            "fields": [
              {
                "id": 1,
                "name": "ca_pem",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "service_certs",
                "type": "TypedServiceCertificate",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:signature_integration.proto",
      "def": {
        "messages": [
          {
            "name": "SignatureIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cosign",
                "type": "CosignPublicKeyVerification"
              }
            ]
          },
          {
            "name": "CosignPublicKeyVerification",
            "fields": [
              {
                "id": 3,
                "name": "public_keys",
                "type": "PublicKey",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "PublicKey",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "public_key_pem_enc",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:system_info.proto",
      "def": {
        "messages": [
          {
            "name": "BackupInfo",
            "fields": [
              {
                "id": 1,
                "name": "backup_last_run_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "status",
                "type": "OperationStatus"
              },
              {
                "id": 3,
                "name": "requestor",
                "type": "SlimUser"
              }
            ]
          },
          {
            "name": "SystemInfo",
            "fields": [
              {
                "id": 1,
                "name": "backup_info",
                "type": "BackupInfo"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/operation_status.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:taints.proto",
      "def": {
        "enums": [
          {
            "name": "TaintEffect",
            "enum_fields": [
              {
                "name": "UNKNOWN_TAINT_EFFECT"
              },
              {
                "name": "NO_SCHEDULE_TAINT_EFFECT",
                "integer": 1
              },
              {
                "name": "PREFER_NO_SCHEDULE_TAINT_EFFECT",
                "integer": 2
              },
              {
                "name": "NO_EXECUTE_TAINT_EFFECT",
                "integer": 3
              }
            ]
          },
          {
            "name": "Toleration.Operator",
            "enum_fields": [
              {
                "name": "TOLERATION_OPERATION_UNKNOWN"
              },
              {
                "name": "TOLERATION_OPERATOR_EXISTS",
                "integer": 1
              },
              {
                "name": "TOLERATION_OPERATOR_EQUAL",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Taint",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "taint_effect",
                "type": "TaintEffect"
              }
            ]
          },
          {
            "name": "Toleration",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "operator",
                "type": "Operator"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "taint_effect",
                "type": "TaintEffect"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:telemetry.proto",
      "def": {
        "messages": [
          {
            "name": "TelemetryConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "last_set_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:test.proto",
      "def": {
        "enums": [
          {
            "name": "TestSingleKeyStruct.Enum",
            "enum_fields": [
              {
                "name": "ENUM0"
              },
              {
                "name": "ENUM1",
                "integer": 1
              },
              {
                "name": "ENUM2",
                "integer": 2
              }
            ]
          },
          {
            "name": "TestSingleUUIDKeyStruct.Enum",
            "enum_fields": [
              {
                "name": "ENUM0"
              },
              {
                "name": "ENUM1",
                "integer": 1
              },
              {
                "name": "ENUM2",
                "integer": 2
              }
            ]
          },
          {
            "name": "TestMultiKeyStruct.Enum",
            "enum_fields": [
              {
                "name": "ENUM0"
              },
              {
                "name": "ENUM1",
                "integer": 1
              },
              {
                "name": "ENUM2",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "TestSingleKeyStruct",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "bool",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "uint64",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "int64",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "float",
                "type": "float"
              },
              {
                "id": 9,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "enum",
                "type": "Enum"
              },
              {
                "id": 11,
                "name": "enums",
                "type": "Enum",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "embedded",
                "type": "Embedded"
              },
              {
                "id": 13,
                "name": "nested",
                "type": "Nested",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "oneofstring",
                "type": "string"
              },
              {
                "id": 15,
                "name": "oneofnested",
                "type": "OneOfNested"
              },
              {
                "id": 16,
                "name": "bytess",
                "type": "bytes"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "labels",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Embedded",
                "fields": [
                  {
                    "id": 1,
                    "name": "embedded",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "Embedded2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "embedded",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Nested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "OneOfNested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "TestSingleUUIDKeyStruct",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "bool",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "uint64",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "int64",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "float",
                "type": "float"
              },
              {
                "id": 9,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "enum",
                "type": "Enum"
              },
              {
                "id": 11,
                "name": "enums",
                "type": "Enum",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "embedded",
                "type": "Embedded"
              },
              {
                "id": 13,
                "name": "nested",
                "type": "Nested",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "oneofstring",
                "type": "string"
              },
              {
                "id": 15,
                "name": "oneofnested",
                "type": "OneOfNested"
              },
              {
                "id": 16,
                "name": "bytess",
                "type": "bytes"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "labels",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Embedded",
                "fields": [
                  {
                    "id": 1,
                    "name": "embedded",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "Embedded2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "embedded",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Nested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "OneOfNested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "TestMultiKeyStruct",
            "fields": [
              {
                "id": 1,
                "name": "key1",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key2",
                "type": "string"
              },
              {
                "id": 3,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "bool",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "uint64",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "int64",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "float",
                "type": "float"
              },
              {
                "id": 9,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "enum",
                "type": "Enum"
              },
              {
                "id": 11,
                "name": "enums",
                "type": "Enum",
                "is_repeated": true
              },
              {
                "id": 16,
                "name": "string",
                "type": "string"
              },
              {
                "id": 17,
                "name": "int_slice_deprecated",
                "type": "int64",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "int32_slice",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "embedded",
                "type": "Embedded"
              },
              {
                "id": 13,
                "name": "nested",
                "type": "Nested",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "oneofstring",
                "type": "string"
              },
              {
                "id": 15,
                "name": "oneofnested",
                "type": "OneOfNested"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "labels",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Embedded",
                "fields": [
                  {
                    "id": 1,
                    "name": "embedded",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "Embedded2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "embedded",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Nested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "is_nested",
                    "type": "bool"
                  },
                  {
                    "id": 4,
                    "name": "int64",
                    "type": "int64"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "is_nested",
                        "type": "bool"
                      },
                      {
                        "id": 4,
                        "name": "int64",
                        "type": "int64"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "OneOfNested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "TestGrandparent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "val",
                "type": "string"
              },
              {
                "id": 3,
                "name": "embedded",
                "type": "Embedded",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "risk_score",
                "type": "float"
              }
            ],
            "messages": [
              {
                "name": "Embedded",
                "fields": [
                  {
                    "id": 1,
                    "name": "val",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "embedded2",
                    "type": "Embedded2",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "Embedded2",
                    "fields": [
                      {
                        "id": 1,
                        "name": "val",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "TestParent1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "children",
                "type": "Child1Ref",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "val",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Child1Ref",
                "fields": [
                  {
                    "id": 1,
                    "name": "child_id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "TestChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestGrandChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "child_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestGGrandChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestG2GrandChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "child_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestG3GrandChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestParent2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestChild2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "grandparent_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestParent3",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestParent4",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestChild1P4",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestShortCircuit",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "child_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "g2_grandchild_id",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:traits.proto",
      "def": {
        "enums": [
          {
            "name": "Traits.MutabilityMode",
            "enum_fields": [
              {
                "name": "ALLOW_MUTATE"
              },
              {
                "name": "ALLOW_MUTATE_FORCED",
                "integer": 1
              }
            ]
          },
          {
            "name": "Traits.Visibility",
            "enum_fields": [
              {
                "name": "VISIBLE"
              },
              {
                "name": "HIDDEN",
                "integer": 1
              }
            ]
          },
          {
            "name": "Traits.Origin",
            "enum_fields": [
              {
                "name": "IMPERATIVE"
              },
              {
                "name": "DEFAULT",
                "integer": 1
              },
              {
                "name": "DECLARATIVE",
                "integer": 2
              },
              {
                "name": "DECLARATIVE_ORPHANED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Traits",
            "fields": [
              {
                "id": 1,
                "name": "mutability_mode",
                "type": "MutabilityMode"
              },
              {
                "id": 2,
                "name": "visibility",
                "type": "Visibility"
              },
              {
                "id": 3,
                "name": "origin",
                "type": "Origin"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:user.proto",
      "def": {
        "messages": [
          {
            "name": "SlimUser",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "User",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "attributes",
                "type": "UserAttribute",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UserAttribute",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "UserInfo",
            "fields": [
              {
                "id": 1,
                "name": "username",
                "type": "string"
              },
              {
                "id": 2,
                "name": "friendly_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "permissions",
                "type": "ResourceToAccess"
              },
              {
                "id": 5,
                "name": "roles",
                "type": "Role",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              3
            ],
            "messages": [
              {
                "name": "Role",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "resource_to_access",
                      "type": "Access"
                    }
                  }
                ],
                "reserved_ids": [
                  2
                ]
              },
              {
                "name": "ResourceToAccess",
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "resource_to_access",
                      "type": "Access"
                    }
                  }
                ],
                "reserved_ids": [
                  1,
                  2
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/role.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:version.proto",
      "def": {
        "messages": [
          {
            "name": "Version",
            "fields": [
              {
                "id": 1,
                "name": "seq_num",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "last_persisted",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:vuln_requests.proto",
      "def": {
        "enums": [
          {
            "name": "RequestStatus",
            "enum_fields": [
              {
                "name": "PENDING"
              },
              {
                "name": "APPROVED",
                "integer": 1
              },
              {
                "name": "DENIED",
                "integer": 2
              },
              {
                "name": "APPROVED_PENDING_UPDATE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "RequestComment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              },
              {
                "id": 3,
                "name": "user",
                "type": "SlimUser"
              },
              {
                "id": 4,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "RequestExpiry",
            "fields": [
              {
                "id": 1,
                "name": "expires_when_fixed",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "expires_on",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "DeferralRequest",
            "fields": [
              {
                "id": 1,
                "name": "expiry",
                "type": "RequestExpiry"
              }
            ]
          },
          {
            "name": "FalsePositiveRequest"
          },
          {
            "name": "VulnerabilityRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "target_state",
                "type": "VulnerabilityState"
              },
              {
                "id": 3,
                "name": "status",
                "type": "RequestStatus"
              },
              {
                "id": 4,
                "name": "expired",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "requestor",
                "type": "SlimUser"
              },
              {
                "id": 6,
                "name": "approvers",
                "type": "SlimUser",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "comments",
                "type": "RequestComment",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "scope",
                "type": "Scope"
              },
              {
                "id": 11,
                "name": "deferral_req",
                "type": "DeferralRequest"
              },
              {
                "id": 12,
                "name": "fp_request",
                "type": "FalsePositiveRequest"
              },
              {
                "id": 16,
                "name": "cves",
                "type": "CVEs"
              },
              {
                "id": 21,
                "name": "updated_deferral_req",
                "type": "DeferralRequest"
              }
            ],
            "messages": [
              {
                "name": "CVEs",
                "fields": [
                  {
                    "id": 1,
                    "name": "cves",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "Scope",
                "fields": [
                  {
                    "id": 1,
                    "name": "image_scope",
                    "type": "Image"
                  },
                  {
                    "id": 2,
                    "name": "global_scope",
                    "type": "Global"
                  }
                ],
                "messages": [
                  {
                    "name": "Image",
                    "fields": [
                      {
                        "id": 1,
                        "name": "registry",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "remote",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "tag",
                        "type": "string"
                      }
                    ]
                  },
                  {
                    "name": "Global"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/cve.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:storage:/:vulnerability.proto",
      "def": {
        "enums": [
          {
            "name": "EmbeddedVulnerability.ScoreVersion",
            "enum_fields": [
              {
                "name": "V2"
              },
              {
                "name": "V3",
                "integer": 1
              }
            ]
          },
          {
            "name": "EmbeddedVulnerability.VulnerabilityType",
            "enum_fields": [
              {
                "name": "UNKNOWN_VULNERABILITY"
              },
              {
                "name": "IMAGE_VULNERABILITY",
                "integer": 1
              },
              {
                "name": "K8S_VULNERABILITY",
                "integer": 2
              },
              {
                "name": "ISTIO_VULNERABILITY",
                "integer": 3
              },
              {
                "name": "NODE_VULNERABILITY",
                "integer": 4
              },
              {
                "name": "OPENSHIFT_VULNERABILITY",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "EmbeddedVulnerability",
            "fields": [
              {
                "id": 1,
                "name": "cve",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 3,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 4,
                "name": "link",
                "type": "string"
              },
              {
                "id": 5,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 8,
                "name": "score_version",
                "type": "ScoreVersion"
              },
              {
                "id": 6,
                "name": "cvss_v2",
                "type": "CVSSV2"
              },
              {
                "id": 7,
                "name": "cvss_v3",
                "type": "CVSSV3"
              },
              {
                "id": 9,
                "name": "published_on",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "last_modified",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 11,
                "name": "vulnerability_type",
                "type": "VulnerabilityType"
              },
              {
                "id": 18,
                "name": "vulnerability_types",
                "type": "VulnerabilityType",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "suppressed",
                "type": "bool"
              },
              {
                "id": 13,
                "name": "suppress_activation",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 14,
                "name": "suppress_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 15,
                "name": "first_system_occurrence",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 16,
                "name": "first_image_occurrence",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 19,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 20,
                "name": "state",
                "type": "VulnerabilityState"
              }
            ],
            "reserved_ids": [
              17
            ]
          },
          {
            "name": "NodeVulnerability",
            "fields": [
              {
                "id": 1,
                "name": "cve_base_info",
                "type": "CVEInfo"
              },
              {
                "id": 2,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 3,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 4,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 5,
                "name": "snoozed",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "snooze_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "snooze_expiry",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/cve.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:test:/:test.proto",
      "def": {
        "enums": [
          {
            "name": "TestClone.CloneEnum",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "Val1",
                "integer": 1
              },
              {
                "name": "Val2",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "TestCloneSubMessage",
            "fields": [
              {
                "id": 1,
                "name": "int32",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "string",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestClone",
            "fields": [
              {
                "id": 1,
                "name": "int_slice",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "sub_messages",
                "type": "TestCloneSubMessage",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "enum_slice",
                "type": "CloneEnum",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "ts",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "int32",
                "type": "int32"
              },
              {
                "id": 9,
                "name": "string",
                "type": "string"
              },
              {
                "id": 10,
                "name": "msg",
                "type": "TestCloneSubMessage"
              },
              {
                "id": 11,
                "name": "any",
                "type": "google.protobuf.Any"
              },
              {
                "id": 13,
                "name": "bytes_slice",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "bytes",
                "type": "bytes"
              },
              {
                "id": 15,
                "name": "sub_message",
                "type": "TestCloneSubMessage"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "message_map",
                  "type": "TestCloneSubMessage"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "string_map",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 12,
                  "name": "bytes_map",
                  "type": "bytes"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "test"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:extracted-include-protos:/:test:/:tools:/:local-sensor:/:message.proto",
      "def": {
        "messages": [
          {
            "name": "LocalSensorPolicies",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "storage.Policy",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "localSensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:integrations:/:splunk_service.proto",
      "def": {
        "enums": [
          {
            "name": "ViolationInfo.ViolationType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "GENERIC",
                "integer": 1
              },
              {
                "name": "K8S_EVENT",
                "integer": 2
              },
              {
                "name": "PROCESS_EVENT",
                "integer": 3
              },
              {
                "name": "NETWORK_FLOW",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "SplunkViolationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "violations",
                "type": "SplunkViolation",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "new_checkpoint",
                "type": "string"
              }
            ]
          },
          {
            "name": "SplunkViolation",
            "fields": [
              {
                "id": 1,
                "name": "violation_info",
                "type": "ViolationInfo"
              },
              {
                "id": 2,
                "name": "alert_info",
                "type": "AlertInfo"
              },
              {
                "id": 3,
                "name": "process_info",
                "type": "ProcessInfo"
              },
              {
                "id": 4,
                "name": "deployment_info",
                "type": "DeploymentInfo"
              },
              {
                "id": 10,
                "name": "resource_info",
                "type": "ResourceInfo"
              },
              {
                "id": 5,
                "name": "policy_info",
                "type": "PolicyInfo"
              },
              {
                "id": 6,
                "name": "network_flow_info",
                "type": "storage.Alert.Violation.NetworkFlowInfo"
              }
            ],
            "messages": [
              {
                "name": "ViolationInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "violation_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "violation_message",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "violation_message_attributes",
                    "type": "storage.Alert.Violation.KeyValueAttrs.KeyValueAttr",
                    "is_repeated": true
                  },
                  {
                    "id": 4,
                    "name": "violation_type",
                    "type": "ViolationType"
                  },
                  {
                    "id": 5,
                    "name": "violation_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 102,
                    "name": "pod_id",
                    "type": "string"
                  },
                  {
                    "id": 103,
                    "name": "pod_uid",
                    "type": "string"
                  },
                  {
                    "id": 104,
                    "name": "container_name",
                    "type": "string"
                  },
                  {
                    "id": 105,
                    "name": "container_start_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 106,
                    "name": "container_id",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "AlertInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "alert_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "lifecycle_stage",
                    "type": "storage.LifecycleStage"
                  },
                  {
                    "id": 4,
                    "name": "alert_first_occurred",
                    "type": "google.protobuf.Timestamp"
                  }
                ],
                "reserved_ids": [
                  3
                ]
              },
              {
                "name": "ProcessInfo",
                "fields": [
                  {
                    "id": 101,
                    "name": "process_violation_id",
                    "type": "string"
                  },
                  {
                    "id": 202,
                    "name": "process_signal_id",
                    "type": "string"
                  },
                  {
                    "id": 203,
                    "name": "process_creation_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 204,
                    "name": "process_name",
                    "type": "string"
                  },
                  {
                    "id": 205,
                    "name": "process_args",
                    "type": "string"
                  },
                  {
                    "id": 206,
                    "name": "exec_file_path",
                    "type": "string"
                  },
                  {
                    "id": 207,
                    "name": "pid",
                    "type": "google.protobuf.UInt32Value"
                  },
                  {
                    "id": 208,
                    "name": "process_uid",
                    "type": "google.protobuf.UInt32Value"
                  },
                  {
                    "id": 209,
                    "name": "process_gid",
                    "type": "google.protobuf.UInt32Value"
                  },
                  {
                    "id": 210,
                    "name": "process_lineage_info",
                    "type": "storage.ProcessSignal.LineageInfo",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "DeploymentInfo",
                "fields": [
                  {
                    "id": 101,
                    "name": "deployment_id",
                    "type": "string"
                  },
                  {
                    "id": 102,
                    "name": "deployment_name",
                    "type": "string"
                  },
                  {
                    "id": 103,
                    "name": "deployment_type",
                    "type": "string"
                  },
                  {
                    "id": 104,
                    "name": "deployment_namespace",
                    "type": "string"
                  },
                  {
                    "id": 105,
                    "name": "deployment_namespace_id",
                    "type": "string"
                  },
                  {
                    "id": 107,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 108,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 109,
                    "name": "deployment_containers",
                    "type": "storage.Alert.Deployment.Container",
                    "is_repeated": true
                  },
                  {
                    "id": 201,
                    "name": "deployment_image",
                    "type": "storage.ContainerImage"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 106,
                      "name": "deployment_labels",
                      "type": "string"
                    }
                  },
                  {
                    "key_type": "string",
                    "field": {
                      "id": 110,
                      "name": "deployment_annotations",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "ResourceInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "resource_type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "namespace",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "PolicyInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "policy_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "policy_name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "policy_description",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "policy_rationale",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "policy_categories",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 6,
                    "name": "policy_lifecycle_stages",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 7,
                    "name": "policy_severity",
                    "type": "string"
                  },
                  {
                    "id": 8,
                    "name": "policy_version",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          },
          {
            "path": "storage/alert.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "integrations"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:alert_service.proto",
      "def": {
        "enums": [
          {
            "name": "GetAlertsCountsRequest.RequestGroup",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "CATEGORY",
                "integer": 1
              },
              {
                "name": "CLUSTER",
                "integer": 2
              }
            ]
          },
          {
            "name": "Type",
            "enum_fields": [
              {
                "name": "CREATED"
              },
              {
                "name": "REMOVED",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CountAlertsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ListAlertsRequest",
            "fields": [
              {
                "id": 10,
                "name": "query",
                "type": "string"
              },
              {
                "id": 11,
                "name": "pagination",
                "type": "Pagination"
              }
            ],
            "reserved_ids": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9
            ]
          },
          {
            "name": "ResolveAlertRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "whitelist",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "add_to_baseline",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ResolveAlertsRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "SnoozeAlertRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "snooze_till",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ListAlertsResponse",
            "fields": [
              {
                "id": 1,
                "name": "alerts",
                "type": "storage.ListAlert",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeleteAlertsRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              },
              {
                "id": 2,
                "name": "confirm",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteAlertsResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_deleted",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "dry_run",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetAlertsGroupResponse",
            "fields": [
              {
                "id": 1,
                "name": "alerts_by_policies",
                "type": "PolicyGroup",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "PolicyGroup",
                "fields": [
                  {
                    "id": 1,
                    "name": "policy",
                    "type": "storage.ListAlertPolicy"
                  },
                  {
                    "id": 2,
                    "name": "num_alerts",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetAlertsCountsRequest",
            "fields": [
              {
                "id": 1,
                "name": "request",
                "type": "ListAlertsRequest"
              },
              {
                "id": 2,
                "name": "group_by",
                "type": "RequestGroup"
              }
            ]
          },
          {
            "name": "GetAlertsCountsResponse",
            "fields": [
              {
                "id": 1,
                "name": "groups",
                "type": "AlertGroup",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "AlertGroup",
                "fields": [
                  {
                    "id": 1,
                    "name": "group",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "counts",
                    "type": "AlertCounts",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "AlertCounts",
                    "fields": [
                      {
                        "id": 1,
                        "name": "severity",
                        "type": "storage.Severity"
                      },
                      {
                        "id": 2,
                        "name": "count",
                        "type": "int64"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "AlertEvent",
            "fields": [
              {
                "id": 1,
                "name": "time",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 3,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetAlertTimeseriesResponse",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "ClusterAlerts",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ClusterAlerts",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "severities",
                    "type": "AlertEvents",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "AlertEvents",
                    "fields": [
                      {
                        "id": 1,
                        "name": "severity",
                        "type": "storage.Severity"
                      },
                      {
                        "id": 2,
                        "name": "events",
                        "type": "AlertEvent",
                        "is_repeated": true
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AlertService",
            "rpcs": [
              {
                "name": "GetAlert",
                "in_type": "ResourceByID",
                "out_type": "storage.Alert"
              },
              {
                "name": "CountAlerts",
                "in_type": "RawQuery",
                "out_type": "CountAlertsResponse"
              },
              {
                "name": "ListAlerts",
                "in_type": "ListAlertsRequest",
                "out_type": "ListAlertsResponse"
              },
              {
                "name": "GetAlertsGroup",
                "in_type": "ListAlertsRequest",
                "out_type": "GetAlertsGroupResponse"
              },
              {
                "name": "GetAlertsCounts",
                "in_type": "GetAlertsCountsRequest",
                "out_type": "GetAlertsCountsResponse"
              },
              {
                "name": "GetAlertTimeseries",
                "in_type": "ListAlertsRequest",
                "out_type": "GetAlertTimeseriesResponse"
              },
              {
                "name": "ResolveAlert",
                "in_type": "ResolveAlertRequest",
                "out_type": "Empty"
              },
              {
                "name": "ResolveAlerts",
                "in_type": "ResolveAlertsRequest",
                "out_type": "Empty"
              },
              {
                "name": "SnoozeAlert",
                "in_type": "SnoozeAlertRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeleteAlerts",
                "in_type": "DeleteAlertsRequest",
                "out_type": "DeleteAlertsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/pagination.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/alert.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:api_token_service.proto",
      "def": {
        "messages": [
          {
            "name": "GenerateTokenRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "role",
                "type": "string"
              },
              {
                "id": 3,
                "name": "roles",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GenerateTokenResponse",
            "fields": [
              {
                "id": 1,
                "name": "token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "metadata",
                "type": "storage.TokenMetadata"
              }
            ]
          },
          {
            "name": "GetAPITokensRequest",
            "fields": [
              {
                "id": 1,
                "name": "revoked",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetAPITokensResponse",
            "fields": [
              {
                "id": 1,
                "name": "tokens",
                "type": "storage.TokenMetadata",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "APITokenService",
            "rpcs": [
              {
                "name": "GetAPIToken",
                "in_type": "ResourceByID",
                "out_type": "storage.TokenMetadata"
              },
              {
                "name": "GetAPITokens",
                "in_type": "GetAPITokensRequest",
                "out_type": "GetAPITokensResponse"
              },
              {
                "name": "GenerateToken",
                "in_type": "GenerateTokenRequest",
                "out_type": "GenerateTokenResponse"
              },
              {
                "name": "RevokeToken",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/api_token.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:audit.proto",
      "def": {
        "enums": [
          {
            "name": "Audit.RequestStatus",
            "enum_fields": [
              {
                "name": "UNKNOWN_STATUS"
              },
              {
                "name": "REQUEST_SUCCEEDED",
                "integer": 1
              },
              {
                "name": "AUTH_FAILED",
                "integer": 2
              },
              {
                "name": "REQUEST_FAILED",
                "integer": 3
              }
            ]
          },
          {
            "name": "Audit.Interaction",
            "enum_fields": [
              {
                "name": "UNKNOWN_INTERACTION"
              },
              {
                "name": "CREATE",
                "integer": 1
              },
              {
                "name": "UPDATE",
                "integer": 2
              },
              {
                "name": "DELETE",
                "integer": 3
              }
            ]
          },
          {
            "name": "Audit.AccessMethod",
            "enum_fields": [
              {
                "name": "UNKNOWN_METHOD"
              },
              {
                "name": "CLI",
                "integer": 1
              },
              {
                "name": "UI",
                "integer": 2
              },
              {
                "name": "API",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Audit",
            "messages": [
              {
                "name": "Message",
                "fields": [
                  {
                    "id": 1,
                    "name": "time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 2,
                    "name": "status",
                    "type": "RequestStatus"
                  },
                  {
                    "id": 3,
                    "name": "status_reason",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "user",
                    "type": "storage.UserInfo"
                  },
                  {
                    "id": 5,
                    "name": "request",
                    "type": "Request"
                  },
                  {
                    "id": 6,
                    "name": "method",
                    "type": "AccessMethod"
                  },
                  {
                    "id": 7,
                    "name": "interaction",
                    "type": "Interaction"
                  }
                ],
                "messages": [
                  {
                    "name": "Request",
                    "fields": [
                      {
                        "id": 1,
                        "name": "endpoint",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "method",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "payload",
                        "type": "google.protobuf.Any"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/user.proto"
          },
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:auth_service.proto",
      "def": {
        "messages": [
          {
            "name": "UserAttribute",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AuthStatus",
            "fields": [
              {
                "id": 1,
                "name": "user_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "service_id",
                "type": "storage.ServiceIdentity"
              },
              {
                "id": 3,
                "name": "expires",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "refresh_url",
                "type": "string"
              },
              {
                "id": 5,
                "name": "auth_provider",
                "type": "storage.AuthProvider"
              },
              {
                "id": 6,
                "name": "user_info",
                "type": "storage.UserInfo"
              },
              {
                "id": 7,
                "name": "user_attributes",
                "type": "UserAttribute",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AuthService",
            "rpcs": [
              {
                "name": "GetAuthStatus",
                "in_type": "Empty",
                "out_type": "AuthStatus"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/auth_provider.proto"
          },
          {
            "path": "storage/service_identity.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:authprovider_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetAuthProviderRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetAuthProvidersRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetLoginAuthProvidersResponse",
            "fields": [
              {
                "id": 1,
                "name": "auth_providers",
                "type": "LoginAuthProvider",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "LoginAuthProvider",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "login_url",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetAuthProvidersResponse",
            "fields": [
              {
                "id": 1,
                "name": "auth_providers",
                "type": "storage.AuthProvider",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PostAuthProviderRequest",
            "fields": [
              {
                "id": 1,
                "name": "provider",
                "type": "storage.AuthProvider"
              }
            ]
          },
          {
            "name": "UpdateAuthProviderRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "enabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ExchangeTokenRequest",
            "fields": [
              {
                "id": 1,
                "name": "external_token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "state",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExchangeTokenResponse",
            "fields": [
              {
                "id": 1,
                "name": "token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "client_state",
                "type": "string"
              },
              {
                "id": 3,
                "name": "test",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "user",
                "type": "v1.AuthStatus"
              }
            ]
          },
          {
            "name": "AvailableProviderTypesResponse",
            "fields": [
              {
                "id": 1,
                "name": "auth_provider_types",
                "type": "AuthProviderType",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "AuthProviderType",
                "fields": [
                  {
                    "id": 1,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "suggested_attributes",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AuthProviderService",
            "rpcs": [
              {
                "name": "ListAvailableProviderTypes",
                "in_type": "Empty",
                "out_type": "AvailableProviderTypesResponse"
              },
              {
                "name": "GetAuthProvider",
                "in_type": "GetAuthProviderRequest",
                "out_type": "storage.AuthProvider"
              },
              {
                "name": "GetLoginAuthProviders",
                "in_type": "Empty",
                "out_type": "GetLoginAuthProvidersResponse"
              },
              {
                "name": "GetAuthProviders",
                "in_type": "GetAuthProvidersRequest",
                "out_type": "GetAuthProvidersResponse"
              },
              {
                "name": "PostAuthProvider",
                "in_type": "PostAuthProviderRequest",
                "out_type": "storage.AuthProvider"
              },
              {
                "name": "UpdateAuthProvider",
                "in_type": "UpdateAuthProviderRequest",
                "out_type": "storage.AuthProvider"
              },
              {
                "name": "PutAuthProvider",
                "in_type": "storage.AuthProvider",
                "out_type": "storage.AuthProvider"
              },
              {
                "name": "DeleteAuthProvider",
                "in_type": "DeleteByIDWithForce",
                "out_type": "Empty"
              },
              {
                "name": "ExchangeToken",
                "in_type": "ExchangeTokenRequest",
                "out_type": "ExchangeTokenResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/auth_service.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/auth_provider.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:backup_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetExternalBackupsResponse",
            "fields": [
              {
                "id": 1,
                "name": "external_backups",
                "type": "storage.ExternalBackup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateExternalBackupRequest",
            "fields": [
              {
                "id": 1,
                "name": "external_backup",
                "type": "storage.ExternalBackup"
              },
              {
                "id": 2,
                "name": "update_password",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ExternalBackupService",
            "rpcs": [
              {
                "name": "GetExternalBackup",
                "in_type": "ResourceByID",
                "out_type": "storage.ExternalBackup"
              },
              {
                "name": "GetExternalBackups",
                "in_type": "Empty",
                "out_type": "GetExternalBackupsResponse"
              },
              {
                "name": "PostExternalBackup",
                "in_type": "storage.ExternalBackup",
                "out_type": "storage.ExternalBackup"
              },
              {
                "name": "PutExternalBackup",
                "in_type": "storage.ExternalBackup",
                "out_type": "storage.ExternalBackup"
              },
              {
                "name": "TestExternalBackup",
                "in_type": "storage.ExternalBackup",
                "out_type": "Empty"
              },
              {
                "name": "DeleteExternalBackup",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "TriggerExternalBackup",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "UpdateExternalBackup",
                "in_type": "UpdateExternalBackupRequest",
                "out_type": "storage.ExternalBackup"
              },
              {
                "name": "TestUpdatedExternalBackup",
                "in_type": "UpdateExternalBackupRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/external_backup.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:central_health_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetUpgradeStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "upgradeStatus",
                "type": "CentralUpgradeStatus"
              }
            ]
          },
          {
            "name": "CentralUpgradeStatus",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "force_rollback_to",
                "type": "string"
              },
              {
                "id": 3,
                "name": "can_rollback_after_upgrade",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "space_required_for_rollback_after_upgrade",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "space_available_for_rollback_after_upgrade",
                "type": "int64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CentralHealthService",
            "rpcs": [
              {
                "name": "GetUpgradeStatus",
                "in_type": "Empty",
                "out_type": "GetUpgradeStatusResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:cluster_init_service.proto",
      "def": {
        "messages": [
          {
            "name": "InitBundleMeta",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "impacted_clusters",
                "type": "ImpactedCluster",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "created_by",
                "type": "storage.User"
              },
              {
                "id": 5,
                "name": "expires_at",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "messages": [
              {
                "name": "ImpactedCluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "InitBundleGenResponse",
            "fields": [
              {
                "id": 1,
                "name": "meta",
                "type": "InitBundleMeta"
              },
              {
                "id": 2,
                "name": "helm_values_bundle",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "kubectl_bundle",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "GetCAConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "helm_values_bundle",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "InitBundleMetasResponse",
            "fields": [
              {
                "id": 1,
                "name": "items",
                "type": "InitBundleMeta",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "InitBundleGenRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "InitBundleRevokeRequest",
            "fields": [
              {
                "id": 1,
                "name": "ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "confirm_impacted_clusters_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "InitBundleRevokeResponse",
            "fields": [
              {
                "id": 2,
                "name": "init_bundle_revocation_errors",
                "type": "InitBundleRevocationError",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "init_bundle_revoked_ids",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "InitBundleRevocationError",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "error",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "impacted_clusters",
                    "type": "InitBundleMeta.ImpactedCluster",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ClusterInitService",
            "rpcs": [
              {
                "name": "RevokeInitBundle",
                "in_type": "InitBundleRevokeRequest",
                "out_type": "InitBundleRevokeResponse"
              },
              {
                "name": "GetCAConfig",
                "in_type": "Empty",
                "out_type": "GetCAConfigResponse"
              },
              {
                "name": "GetInitBundles",
                "in_type": "Empty",
                "out_type": "InitBundleMetasResponse"
              },
              {
                "name": "GenerateInitBundle",
                "in_type": "InitBundleGenRequest",
                "out_type": "InitBundleGenResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:cluster_service.proto",
      "def": {
        "enums": [
          {
            "name": "DeploymentFormat",
            "enum_fields": [
              {
                "name": "KUBECTL"
              },
              {
                "name": "HELM",
                "integer": 1
              },
              {
                "name": "HELM_VALUES",
                "integer": 2
              }
            ]
          },
          {
            "name": "LoadBalancerType",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "LOAD_BALANCER",
                "integer": 1
              },
              {
                "name": "NODE_PORT",
                "integer": 2
              },
              {
                "name": "ROUTE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DecommissionedClusterRetentionInfo",
            "fields": [
              {
                "id": 1,
                "name": "is_excluded",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "days_until_deletion",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ClusterResponse",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "storage.Cluster"
              },
              {
                "id": 2,
                "name": "cluster_retention_info",
                "type": "DecommissionedClusterRetentionInfo"
              }
            ]
          },
          {
            "name": "ClusterDefaultsResponse",
            "fields": [
              {
                "id": 1,
                "name": "main_image_repository",
                "type": "string"
              },
              {
                "id": 2,
                "name": "collector_image_repository",
                "type": "string"
              },
              {
                "id": 3,
                "name": "kernel_support_available",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ClustersList",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "storage.Cluster",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "cluster_id_to_retention_info",
                  "type": "DecommissionedClusterRetentionInfo"
                }
              }
            ]
          },
          {
            "name": "GetClustersRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "KernelSupportAvailableResponse",
            "fields": [
              {
                "id": 1,
                "name": "kernel_support_available",
                "type": "bool"
              }
            ],
            "options": [
              {
                "name": "deprecated",
                "value": "true"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ClustersService",
            "rpcs": [
              {
                "name": "GetClusters",
                "in_type": "GetClustersRequest",
                "out_type": "ClustersList"
              },
              {
                "name": "GetCluster",
                "in_type": "ResourceByID",
                "out_type": "ClusterResponse"
              },
              {
                "name": "PostCluster",
                "in_type": "storage.Cluster",
                "out_type": "ClusterResponse"
              },
              {
                "name": "PutCluster",
                "in_type": "storage.Cluster",
                "out_type": "ClusterResponse"
              },
              {
                "name": "DeleteCluster",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetKernelSupportAvailable",
                "in_type": "Empty",
                "out_type": "KernelSupportAvailableResponse"
              },
              {
                "name": "GetClusterDefaultValues",
                "in_type": "Empty",
                "out_type": "ClusterDefaultsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:common.proto",
      "def": {
        "messages": [
          {
            "name": "ResourceByID",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeleteByIDWithForce",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:compliance_management_service.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceRun.State",
            "enum_fields": [
              {
                "name": "INVALID"
              },
              {
                "name": "READY",
                "integer": 1
              },
              {
                "name": "STARTED",
                "integer": 2
              },
              {
                "name": "WAIT_FOR_DATA",
                "integer": 3
              },
              {
                "name": "EVALUTING_CHECKS",
                "integer": 4
              },
              {
                "name": "FINISHED",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceRunSelection",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetActiveComplianceRunsRequest",
            "fields": [
              {
                "id": 1,
                "name": "selection",
                "type": "ComplianceRunSelection"
              }
            ]
          },
          {
            "name": "GetActiveComplianceRunsResponse",
            "fields": [
              {
                "id": 1,
                "name": "active_runs",
                "type": "ComplianceRun",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComplianceRun",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "finish_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "state",
                "type": "State"
              },
              {
                "id": 8,
                "name": "error_message",
                "type": "string"
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "GetRecentComplianceRunsRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "since",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "GetRecentComplianceRunsResponse",
            "fields": [
              {
                "id": 1,
                "name": "compliance_runs",
                "type": "ComplianceRun",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TriggerComplianceRunRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "TriggerComplianceRunResponse",
            "fields": [
              {
                "id": 1,
                "name": "started_run",
                "type": "ComplianceRun"
              }
            ]
          },
          {
            "name": "TriggerComplianceRunsRequest",
            "fields": [
              {
                "id": 1,
                "name": "selection",
                "type": "ComplianceRunSelection"
              }
            ]
          },
          {
            "name": "TriggerComplianceRunsResponse",
            "fields": [
              {
                "id": 1,
                "name": "started_runs",
                "type": "ComplianceRun",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetComplianceRunStatusesRequest",
            "fields": [
              {
                "id": 1,
                "name": "run_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetComplianceRunStatusesResponse",
            "fields": [
              {
                "id": 1,
                "name": "invalid_run_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "runs",
                "type": "ComplianceRun",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceManagementService",
            "rpcs": [
              {
                "name": "GetRecentRuns",
                "in_type": "GetRecentComplianceRunsRequest",
                "out_type": "GetRecentComplianceRunsResponse"
              },
              {
                "name": "TriggerRuns",
                "in_type": "TriggerComplianceRunsRequest",
                "out_type": "TriggerComplianceRunsResponse"
              },
              {
                "name": "GetRunStatuses",
                "in_type": "GetComplianceRunStatusesRequest",
                "out_type": "GetComplianceRunStatusesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:compliance_service.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceStandardMetadata.Scope",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "CLUSTER",
                "integer": 1
              },
              {
                "name": "NAMESPACE",
                "integer": 2
              },
              {
                "name": "DEPLOYMENT",
                "integer": 3
              },
              {
                "name": "NODE",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceAggregationRequest",
            "fields": [
              {
                "id": 1,
                "name": "group_by",
                "type": "storage.ComplianceAggregation.Scope",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "unit",
                "type": "storage.ComplianceAggregation.Scope"
              },
              {
                "id": 3,
                "name": "where",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "ComplianceStandardMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "num_implemented_checks",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "scopes",
                "type": "Scope",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "dynamic",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ComplianceControlGroup",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "num_implemented_checks",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ComplianceControl",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "group_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "description",
                "type": "string"
              },
              {
                "id": 6,
                "name": "implemented",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "interpretation_text",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceStandard",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "ComplianceStandardMetadata"
              },
              {
                "id": 2,
                "name": "groups",
                "type": "ComplianceControlGroup",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "controls",
                "type": "ComplianceControl",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetComplianceStandardResponse",
            "fields": [
              {
                "id": 1,
                "name": "standard",
                "type": "ComplianceStandard"
              }
            ]
          },
          {
            "name": "GetComplianceStandardsResponse",
            "fields": [
              {
                "id": 1,
                "name": "standards",
                "type": "ComplianceStandardMetadata",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetComplianceRunResultsRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "run_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetComplianceRunResultsResponse",
            "fields": [
              {
                "id": 1,
                "name": "results",
                "type": "storage.ComplianceRunResults"
              },
              {
                "id": 2,
                "name": "failed_runs",
                "type": "storage.ComplianceRunMetadata",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceService",
            "rpcs": [
              {
                "name": "GetStandards",
                "in_type": "Empty",
                "out_type": "GetComplianceStandardsResponse"
              },
              {
                "name": "GetStandard",
                "in_type": "ResourceByID",
                "out_type": "GetComplianceStandardResponse"
              },
              {
                "name": "GetRunResults",
                "in_type": "GetComplianceRunResultsRequest",
                "out_type": "GetComplianceRunResultsResponse"
              },
              {
                "name": "GetAggregatedResults",
                "in_type": "ComplianceAggregationRequest",
                "out_type": "storage.ComplianceAggregation.Response"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/compliance.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:config_service.proto",
      "def": {
        "messages": [
          {
            "name": "PutConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.Config"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ConfigService",
            "rpcs": [
              {
                "name": "GetPublicConfig",
                "in_type": "Empty",
                "out_type": "storage.PublicConfig"
              },
              {
                "name": "GetPrivateConfig",
                "in_type": "Empty",
                "out_type": "storage.PrivateConfig"
              },
              {
                "name": "GetConfig",
                "in_type": "Empty",
                "out_type": "storage.Config"
              },
              {
                "name": "PutConfig",
                "in_type": "PutConfigRequest",
                "out_type": "storage.Config"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/config.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:credential_expiry_service.proto",
      "def": {
        "enums": [
          {
            "name": "GetCertExpiry.Component",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "CENTRAL",
                "integer": 1
              },
              {
                "name": "SCANNER",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetCertExpiry",
            "messages": [
              {
                "name": "Request",
                "fields": [
                  {
                    "id": 1,
                    "name": "component",
                    "type": "Component"
                  }
                ]
              },
              {
                "name": "Response",
                "fields": [
                  {
                    "id": 1,
                    "name": "expiry",
                    "type": "google.protobuf.Timestamp"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CredentialExpiryService",
            "rpcs": [
              {
                "name": "GetCertExpiry",
                "in_type": "GetCertExpiry.Request",
                "out_type": "GetCertExpiry.Response"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:cve_service.proto",
      "def": {
        "messages": [
          {
            "name": "SuppressCVERequest",
            "fields": [
              {
                "id": 1,
                "name": "cves",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "duration",
                "type": "google.protobuf.Duration"
              }
            ],
            "reserved_ids": [
              2
            ]
          },
          {
            "name": "UnsuppressCVERequest",
            "fields": [
              {
                "id": 1,
                "name": "cves",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CVEService",
            "rpcs": [
              {
                "name": "SuppressCVEs",
                "in_type": "SuppressCVERequest",
                "out_type": "Empty"
              },
              {
                "name": "UnsuppressCVEs",
                "in_type": "UnsuppressCVERequest",
                "out_type": "Empty"
              }
            ]
          },
          {
            "name": "ImageCVEService",
            "rpcs": [
              {
                "name": "SuppressCVEs",
                "in_type": "SuppressCVERequest",
                "out_type": "Empty"
              },
              {
                "name": "UnsuppressCVEs",
                "in_type": "UnsuppressCVERequest",
                "out_type": "Empty"
              }
            ]
          },
          {
            "name": "NodeCVEService",
            "rpcs": [
              {
                "name": "SuppressCVEs",
                "in_type": "SuppressCVERequest",
                "out_type": "Empty"
              },
              {
                "name": "UnsuppressCVEs",
                "in_type": "UnsuppressCVERequest",
                "out_type": "Empty"
              }
            ]
          },
          {
            "name": "ClusterCVEService",
            "rpcs": [
              {
                "name": "SuppressCVEs",
                "in_type": "SuppressCVERequest",
                "out_type": "Empty"
              },
              {
                "name": "UnsuppressCVEs",
                "in_type": "UnsuppressCVERequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:db_service.proto",
      "def": {
        "enums": [
          {
            "name": "DBRestoreProcessStatus.State",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "NOT_STARTED",
                "integer": 1
              },
              {
                "name": "IN_PROGRESS",
                "integer": 2
              },
              {
                "name": "PAUSED",
                "integer": 3
              },
              {
                "name": "COMPLETED",
                "integer": 4
              }
            ]
          },
          {
            "name": "DBExportManifest.EncodingType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "UNCOMPREESSED",
                "integer": 1
              },
              {
                "name": "DEFLATED",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DBRestoreRequestHeader",
            "fields": [
              {
                "id": 1,
                "name": "format_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "manifest",
                "type": "DBExportManifest"
              },
              {
                "id": 3,
                "name": "local_file",
                "type": "LocalFileInfo"
              }
            ],
            "messages": [
              {
                "name": "LocalFileInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "bytes_size",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "DBRestoreProcessMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "header",
                "type": "DBRestoreRequestHeader"
              },
              {
                "id": 3,
                "name": "start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "initiating_user_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "DBRestoreProcessStatus",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "DBRestoreProcessMetadata"
              },
              {
                "id": 2,
                "name": "attempt_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "state",
                "type": "State"
              },
              {
                "id": 4,
                "name": "resume_info",
                "type": "ResumeInfo"
              },
              {
                "id": 5,
                "name": "error",
                "type": "string"
              },
              {
                "id": 6,
                "name": "bytes_read",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "files_processed",
                "type": "int64"
              }
            ],
            "messages": [
              {
                "name": "ResumeInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "pos",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "DBExportManifest",
            "fields": [
              {
                "id": 1,
                "name": "files",
                "type": "File",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "File",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "encoding",
                    "type": "EncodingType"
                  },
                  {
                    "id": 3,
                    "name": "encoded_size",
                    "type": "int64"
                  },
                  {
                    "id": 4,
                    "name": "decoded_size",
                    "type": "int64"
                  },
                  {
                    "id": 5,
                    "name": "decoded_crc32",
                    "type": "fixed32"
                  }
                ]
              }
            ]
          },
          {
            "name": "DBExportFormat",
            "fields": [
              {
                "id": 1,
                "name": "format_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "files",
                "type": "File",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "File",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "optional",
                    "type": "bool"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetDBExportCapabilitiesResponse",
            "fields": [
              {
                "id": 1,
                "name": "formats",
                "type": "DBExportFormat",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "supported_encodings",
                "type": "DBExportManifest.EncodingType",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetActiveDBRestoreProcessResponse",
            "fields": [
              {
                "id": 1,
                "name": "active_status",
                "type": "DBRestoreProcessStatus"
              }
            ]
          },
          {
            "name": "InterruptDBRestoreProcessRequest",
            "fields": [
              {
                "id": 1,
                "name": "process_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "attempt_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "InterruptDBRestoreProcessResponse",
            "fields": [
              {
                "id": 1,
                "name": "resume_info",
                "type": "DBRestoreProcessStatus.ResumeInfo"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DBService",
            "rpcs": [
              {
                "name": "GetExportCapabilities",
                "in_type": "Empty",
                "out_type": "GetDBExportCapabilitiesResponse"
              },
              {
                "name": "GetActiveRestoreProcess",
                "in_type": "Empty",
                "out_type": "GetActiveDBRestoreProcessResponse"
              },
              {
                "name": "InterruptRestoreProcess",
                "in_type": "InterruptDBRestoreProcessRequest",
                "out_type": "InterruptDBRestoreProcessResponse"
              },
              {
                "name": "CancelRestoreProcess",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:debug_service.proto",
      "def": {
        "enums": [
          {
            "name": "Response.Status",
            "enum_fields": [
              {
                "name": "UNKNOWN_STATUS"
              },
              {
                "name": "SUCCESS",
                "integer": 1
              },
              {
                "name": "FAILURE",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetLogLevelRequest",
            "fields": [
              {
                "id": 1,
                "name": "modules",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LogLevelRequest",
            "fields": [
              {
                "id": 1,
                "name": "level",
                "type": "string"
              },
              {
                "id": 2,
                "name": "modules",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ModuleLevel",
            "fields": [
              {
                "id": 1,
                "name": "module",
                "type": "string"
              },
              {
                "id": 2,
                "name": "level",
                "type": "string"
              }
            ]
          },
          {
            "name": "LogLevelResponse",
            "fields": [
              {
                "id": 1,
                "name": "level",
                "type": "string"
              },
              {
                "id": 2,
                "name": "module_levels",
                "type": "ModuleLevel",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AuthorizationTraceResponse",
            "fields": [
              {
                "id": 1,
                "name": "arrived_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "processed_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "request",
                "type": "Request"
              },
              {
                "id": 4,
                "name": "response",
                "type": "Response"
              },
              {
                "id": 5,
                "name": "user",
                "type": "User"
              },
              {
                "id": 6,
                "name": "trace",
                "type": "Trace"
              }
            ],
            "messages": [
              {
                "name": "Request",
                "fields": [
                  {
                    "id": 1,
                    "name": "endpoint",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "method",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Response",
                "fields": [
                  {
                    "id": 1,
                    "name": "status",
                    "type": "Status"
                  },
                  {
                    "id": 2,
                    "name": "error",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "User",
                "fields": [
                  {
                    "id": 1,
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "friendly_name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "roles",
                    "type": "Role",
                    "is_repeated": true
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "aggregated_permissions",
                      "type": "storage.Access"
                    }
                  }
                ],
                "messages": [
                  {
                    "name": "Role",
                    "fields": [
                      {
                        "id": 1,
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "access_scope_name",
                        "type": "string"
                      },
                      {
                        "id": 4,
                        "name": "access_scope",
                        "type": "storage.SimpleAccessScope.Rules"
                      }
                    ],
                    "maps": [
                      {
                        "key_type": "string",
                        "field": {
                          "id": 2,
                          "name": "permissions",
                          "type": "storage.Access"
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Trace",
                "fields": [
                  {
                    "id": 1,
                    "name": "scope_checker_type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "built_in",
                    "type": "BuiltInAuthorizer"
                  }
                ],
                "messages": [
                  {
                    "name": "BuiltInAuthorizer",
                    "fields": [
                      {
                        "id": 1,
                        "name": "clusters_total_num",
                        "type": "int32"
                      },
                      {
                        "id": 2,
                        "name": "namespaces_total_num",
                        "type": "int32"
                      }
                    ],
                    "maps": [
                      {
                        "key_type": "string",
                        "field": {
                          "id": 3,
                          "name": "denied_authz_decisions",
                          "type": "int32"
                        }
                      },
                      {
                        "key_type": "string",
                        "field": {
                          "id": 4,
                          "name": "allowed_authz_decisions",
                          "type": "int32"
                        }
                      },
                      {
                        "key_type": "string",
                        "field": {
                          "id": 5,
                          "name": "effective_access_scopes",
                          "type": "string"
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DebugService",
            "rpcs": [
              {
                "name": "GetLogLevel",
                "in_type": "GetLogLevelRequest",
                "out_type": "LogLevelResponse"
              },
              {
                "name": "SetLogLevel",
                "in_type": "LogLevelRequest",
                "out_type": "google.protobuf.Empty"
              },
              {
                "name": "StreamAuthzTraces",
                "in_type": "v1.Empty",
                "out_type": "AuthorizationTraceResponse",
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/protobuf/empty.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/role.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:deployment_service.proto",
      "def": {
        "messages": [
          {
            "name": "DeploymentLabelsResponse",
            "fields": [
              {
                "id": 2,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "labels",
                  "type": "LabelValues"
                }
              }
            ],
            "messages": [
              {
                "name": "LabelValues",
                "fields": [
                  {
                    "id": 1,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ListDeploymentsResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployments",
                "type": "storage.ListDeployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountDeploymentsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ListDeploymentsWithProcessInfoResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployments",
                "type": "DeploymentWithProcessInfo",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "DeploymentWithProcessInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "deployment",
                    "type": "storage.ListDeployment"
                  },
                  {
                    "id": 3,
                    "name": "baseline_statuses",
                    "type": "storage.ContainerNameAndBaselineStatus",
                    "is_repeated": true
                  }
                ],
                "reserved_ids": [
                  2
                ]
              }
            ]
          },
          {
            "name": "GetDeploymentWithRiskResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 2,
                "name": "risk",
                "type": "storage.Risk"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DeploymentService",
            "rpcs": [
              {
                "name": "GetDeployment",
                "in_type": "ResourceByID",
                "out_type": "storage.Deployment"
              },
              {
                "name": "GetDeploymentWithRisk",
                "in_type": "ResourceByID",
                "out_type": "GetDeploymentWithRiskResponse"
              },
              {
                "name": "CountDeployments",
                "in_type": "RawQuery",
                "out_type": "CountDeploymentsResponse"
              },
              {
                "name": "ListDeployments",
                "in_type": "RawQuery",
                "out_type": "ListDeploymentsResponse"
              },
              {
                "name": "ListDeploymentsWithProcessInfo",
                "in_type": "RawQuery",
                "out_type": "ListDeploymentsWithProcessInfoResponse"
              },
              {
                "name": "GetLabels",
                "in_type": "Empty",
                "out_type": "DeploymentLabelsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/risk.proto"
          },
          {
            "path": "storage/process_baseline.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:detection_service.proto",
      "def": {
        "messages": [
          {
            "name": "BuildDetectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.ContainerImage"
              },
              {
                "id": 3,
                "name": "image_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "no_external_metadata",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "send_notifications",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "force",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "policy_categories",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BuildDetectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "alerts",
                "type": "storage.Alert",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeployDetectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 2,
                "name": "no_external_metadata",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "enforcement_only",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeployYAMLDetectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "yaml",
                "type": "string"
              },
              {
                "id": 2,
                "name": "no_external_metadata",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "enforcement_only",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "force",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "policy_categories",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeployDetectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "runs",
                "type": "Run",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "ignored_object_refs",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Run",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "alerts",
                    "type": "storage.Alert",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DetectionService",
            "rpcs": [
              {
                "name": "DetectBuildTime",
                "in_type": "BuildDetectionRequest",
                "out_type": "BuildDetectionResponse"
              },
              {
                "name": "DetectDeployTime",
                "in_type": "DeployDetectionRequest",
                "out_type": "DeployDetectionResponse"
              },
              {
                "name": "DetectDeployTimeFromYAML",
                "in_type": "DeployYAMLDetectionRequest",
                "out_type": "DeployDetectionResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/alert.proto"
          },
          {
            "path": "storage/deployment.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:empty.proto",
      "def": {
        "messages": [
          {
            "name": "Empty"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:feature_flag_service.proto",
      "def": {
        "messages": [
          {
            "name": "FeatureFlag",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "env_var",
                "type": "string"
              },
              {
                "id": 3,
                "name": "enabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetFeatureFlagsResponse",
            "fields": [
              {
                "id": 1,
                "name": "feature_flags",
                "type": "FeatureFlag",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "FeatureFlagService",
            "rpcs": [
              {
                "name": "GetFeatureFlags",
                "in_type": "Empty",
                "out_type": "GetFeatureFlagsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:group_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetGroupsRequest",
            "fields": [
              {
                "id": 1,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetGroupsResponse",
            "fields": [
              {
                "id": 1,
                "name": "groups",
                "type": "storage.Group",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GroupBatchUpdateRequest",
            "fields": [
              {
                "id": 1,
                "name": "previous_groups",
                "type": "storage.Group",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "required_groups",
                "type": "storage.Group",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "force",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteGroupRequest",
            "fields": [
              {
                "id": 1,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "force",
                "type": "bool"
              }
            ]
          },
          {
            "name": "UpdateGroupRequest",
            "fields": [
              {
                "id": 1,
                "name": "group",
                "type": "storage.Group"
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "GroupService",
            "rpcs": [
              {
                "name": "GetGroups",
                "in_type": "GetGroupsRequest",
                "out_type": "GetGroupsResponse"
              },
              {
                "name": "GetGroup",
                "in_type": "storage.GroupProperties",
                "out_type": "storage.Group"
              },
              {
                "name": "BatchUpdate",
                "in_type": "GroupBatchUpdateRequest",
                "out_type": "Empty"
              },
              {
                "name": "CreateGroup",
                "in_type": "storage.Group",
                "out_type": "Empty"
              },
              {
                "name": "UpdateGroup",
                "in_type": "UpdateGroupRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeleteGroup",
                "in_type": "DeleteGroupRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/group.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:image_integration_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetImageIntegrationsRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetImageIntegrationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "integrations",
                "type": "storage.ImageIntegration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateImageIntegrationRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.ImageIntegration"
              },
              {
                "id": 2,
                "name": "updatePassword",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImageIntegrationService",
            "rpcs": [
              {
                "name": "GetImageIntegration",
                "in_type": "ResourceByID",
                "out_type": "storage.ImageIntegration"
              },
              {
                "name": "GetImageIntegrations",
                "in_type": "GetImageIntegrationsRequest",
                "out_type": "GetImageIntegrationsResponse"
              },
              {
                "name": "PostImageIntegration",
                "in_type": "storage.ImageIntegration",
                "out_type": "storage.ImageIntegration"
              },
              {
                "name": "PutImageIntegration",
                "in_type": "storage.ImageIntegration",
                "out_type": "Empty"
              },
              {
                "name": "TestImageIntegration",
                "in_type": "storage.ImageIntegration",
                "out_type": "Empty"
              },
              {
                "name": "DeleteImageIntegration",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "UpdateImageIntegration",
                "in_type": "UpdateImageIntegrationRequest",
                "out_type": "Empty"
              },
              {
                "name": "TestUpdatedImageIntegration",
                "in_type": "UpdateImageIntegrationRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/image_integration.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:image_service.proto",
      "def": {
        "enums": [
          {
            "name": "WatchImageResponse.ErrorType",
            "enum_fields": [
              {
                "name": "NO_ERROR"
              },
              {
                "name": "INVALID_IMAGE_NAME",
                "integer": 1
              },
              {
                "name": "NO_VALID_INTEGRATION",
                "integer": 2
              },
              {
                "name": "SCAN_FAILED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "include_snoozed",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "strip_description",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ListImagesResponse",
            "fields": [
              {
                "id": 1,
                "name": "images",
                "type": "storage.ListImage",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountImagesResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ScanImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "include_snoozed",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ScanImageInternalRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.ContainerImage"
              },
              {
                "id": 3,
                "name": "cached_only",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "source",
                "type": "Source"
              }
            ],
            "reserved_ids": [
              2
            ],
            "messages": [
              {
                "name": "Source",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "image_pull_secrets",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ScanImageInternalResponse",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.Image"
              }
            ]
          },
          {
            "name": "GetImageVulnerabilitiesInternalRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image_name",
                "type": "storage.ImageName"
              },
              {
                "id": 3,
                "name": "metadata",
                "type": "storage.ImageMetadata"
              },
              {
                "id": 6,
                "name": "is_cluster_local",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "components",
                "type": "scannerV1.Components"
              },
              {
                "id": 5,
                "name": "notes",
                "type": "scannerV1.Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EnrichLocalImageInternalRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image_name",
                "type": "storage.ImageName"
              },
              {
                "id": 3,
                "name": "metadata",
                "type": "storage.ImageMetadata"
              },
              {
                "id": 4,
                "name": "image_signature",
                "type": "storage.ImageSignature"
              },
              {
                "id": 5,
                "name": "components",
                "type": "scannerV1.Components"
              },
              {
                "id": 6,
                "name": "notes",
                "type": "scannerV1.Note",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "image_notes",
                "type": "storage.Image.Note",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeleteImagesRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              },
              {
                "id": 2,
                "name": "confirm",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteImagesResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_deleted",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "dry_run",
                "type": "bool"
              }
            ]
          },
          {
            "name": "WatchImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "WatchImageResponse",
            "fields": [
              {
                "id": 1,
                "name": "normalized_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "error_type",
                "type": "ErrorType"
              },
              {
                "id": 3,
                "name": "error_message",
                "type": "string"
              }
            ]
          },
          {
            "name": "UnwatchImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetWatchedImagesResponse",
            "fields": [
              {
                "id": 1,
                "name": "watched_images",
                "type": "storage.WatchedImage",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScanImageInternalResponseDetails",
            "messages": [
              {
                "name": "TooManyParallelScans"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImageService",
            "rpcs": [
              {
                "name": "GetImage",
                "in_type": "GetImageRequest",
                "out_type": "storage.Image"
              },
              {
                "name": "CountImages",
                "in_type": "RawQuery",
                "out_type": "CountImagesResponse"
              },
              {
                "name": "ListImages",
                "in_type": "RawQuery",
                "out_type": "ListImagesResponse"
              },
              {
                "name": "ScanImage",
                "in_type": "ScanImageRequest",
                "out_type": "storage.Image"
              },
              {
                "name": "ScanImageInternal",
                "in_type": "ScanImageInternalRequest",
                "out_type": "ScanImageInternalResponse"
              },
              {
                "name": "GetImageVulnerabilitiesInternal",
                "in_type": "GetImageVulnerabilitiesInternalRequest",
                "out_type": "ScanImageInternalResponse"
              },
              {
                "name": "EnrichLocalImageInternal",
                "in_type": "EnrichLocalImageInternalRequest",
                "out_type": "ScanImageInternalResponse"
              },
              {
                "name": "InvalidateScanAndRegistryCaches",
                "in_type": "Empty",
                "out_type": "Empty"
              },
              {
                "name": "DeleteImages",
                "in_type": "DeleteImagesRequest",
                "out_type": "DeleteImagesResponse"
              },
              {
                "name": "WatchImage",
                "in_type": "WatchImageRequest",
                "out_type": "WatchImageResponse"
              },
              {
                "name": "UnwatchImage",
                "in_type": "UnwatchImageRequest",
                "out_type": "Empty"
              },
              {
                "name": "GetWatchedImages",
                "in_type": "Empty",
                "out_type": "GetWatchedImagesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "scanner/api/v1/component.proto"
          },
          {
            "path": "scanner/api/v1/note.proto"
          },
          {
            "path": "storage/image.proto"
          },
          {
            "path": "storage/deployment.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:integration_config.proto",
      "def": {
        "messages": [
          {
            "name": "IntegrationAsConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "external_backup",
                "type": "storage.ExternalBackup"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/external_backup.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:integration_health_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetIntegrationHealthResponse",
            "fields": [
              {
                "id": 1,
                "name": "integrationHealth",
                "type": "storage.IntegrationHealth",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "VulnDefinitionsInfo",
            "fields": [
              {
                "id": 1,
                "name": "last_updated_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "IntegrationHealthService",
            "rpcs": [
              {
                "name": "GetImageIntegrations",
                "in_type": "Empty",
                "out_type": "GetIntegrationHealthResponse"
              },
              {
                "name": "GetNotifiers",
                "in_type": "Empty",
                "out_type": "GetIntegrationHealthResponse"
              },
              {
                "name": "GetBackupPlugins",
                "in_type": "Empty",
                "out_type": "GetIntegrationHealthResponse"
              },
              {
                "name": "GetDeclarativeConfigs",
                "in_type": "Empty",
                "out_type": "GetIntegrationHealthResponse"
              },
              {
                "name": "GetVulnDefinitionsInfo",
                "in_type": "Empty",
                "out_type": "VulnDefinitionsInfo"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/integration_health.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:license_service.proto",
      "def": {
        "enums": [
          {
            "name": "LicenseInfo.Status",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "VALID",
                "integer": 1
              },
              {
                "name": "REVOKED",
                "integer": 2
              },
              {
                "name": "NOT_YET_VALID",
                "integer": 3
              },
              {
                "name": "EXPIRED",
                "integer": 4
              },
              {
                "name": "OTHER",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "LicenseInfo",
            "fields": [
              {
                "id": 1,
                "name": "license",
                "type": "license.License"
              },
              {
                "id": 2,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 3,
                "name": "status_reason",
                "type": "string"
              },
              {
                "id": 4,
                "name": "active",
                "type": "bool"
              }
            ]
          },
          {
            "name": "AddLicenseRequest",
            "fields": [
              {
                "id": 1,
                "name": "license_key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "activate",
                "type": "bool"
              }
            ]
          },
          {
            "name": "AddLicenseResponse",
            "fields": [
              {
                "id": 1,
                "name": "license",
                "type": "LicenseInfo"
              },
              {
                "id": 2,
                "name": "accepted",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetLicensesRequest",
            "fields": [
              {
                "id": 1,
                "name": "active",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "statuses",
                "type": "LicenseInfo.Status",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetLicensesResponse",
            "fields": [
              {
                "id": 1,
                "name": "licenses",
                "type": "LicenseInfo",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetActiveLicenseExpirationResponse",
            "fields": [
              {
                "id": 1,
                "name": "expiration_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "GetActiveLicenseKeyResponse",
            "fields": [
              {
                "id": 1,
                "name": "license_key",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "LicenseService",
            "rpcs": [
              {
                "name": "GetLicenses",
                "in_type": "GetLicensesRequest",
                "out_type": "GetLicensesResponse"
              },
              {
                "name": "AddLicense",
                "in_type": "AddLicenseRequest",
                "out_type": "AddLicenseResponse"
              },
              {
                "name": "GetActiveLicenseExpiration",
                "in_type": "Empty",
                "out_type": "GetActiveLicenseExpirationResponse"
              },
              {
                "name": "GetActiveLicenseKey",
                "in_type": "Empty",
                "out_type": "GetActiveLicenseKeyResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "shared/license/license.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:metadata_service.proto",
      "def": {
        "enums": [
          {
            "name": "Metadata.LicenseStatus",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "INVALID",
                "integer": 1
              },
              {
                "name": "EXPIRED",
                "integer": 2
              },
              {
                "name": "RESTARTING",
                "integer": 3
              },
              {
                "name": "VALID",
                "integer": 4
              }
            ]
          },
          {
            "name": "DatabaseStatus.DatabaseType",
            "enum_fields": [
              {
                "name": "Hidden"
              },
              {
                "name": "RocksDB",
                "integer": 1
              },
              {
                "name": "PostgresDB",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Metadata",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "build_flavor",
                "type": "string"
              },
              {
                "id": 3,
                "name": "release_build",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "license_status",
                "type": "LicenseStatus"
              }
            ]
          },
          {
            "name": "TrustInfo",
            "fields": [
              {
                "id": 1,
                "name": "cert_chain",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "sensor_challenge",
                "type": "string"
              },
              {
                "id": 3,
                "name": "central_challenge",
                "type": "string"
              },
              {
                "id": 4,
                "name": "additional_cas",
                "type": "bytes",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TLSChallengeResponse",
            "fields": [
              {
                "id": 1,
                "name": "trust_info_serialized",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "signature",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "TLSChallengeRequest",
            "fields": [
              {
                "id": 1,
                "name": "challenge_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "DatabaseStatus",
            "fields": [
              {
                "id": 1,
                "name": "database_available",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "database_type",
                "type": "DatabaseType"
              },
              {
                "id": 3,
                "name": "database_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "DatabaseBackupStatus",
            "fields": [
              {
                "id": 1,
                "name": "backup_info",
                "type": "storage.BackupInfo"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "MetadataService",
            "rpcs": [
              {
                "name": "GetMetadata",
                "in_type": "Empty",
                "out_type": "Metadata"
              },
              {
                "name": "TLSChallenge",
                "in_type": "TLSChallengeRequest",
                "out_type": "TLSChallengeResponse"
              },
              {
                "name": "GetDatabaseStatus",
                "in_type": "Empty",
                "out_type": "DatabaseStatus"
              },
              {
                "name": "GetDatabaseBackupStatus",
                "in_type": "Empty",
                "out_type": "DatabaseBackupStatus"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/system_info.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:mitre_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListMitreAttackVectorsResponse",
            "fields": [
              {
                "id": 1,
                "name": "mitre_attack_vectors",
                "type": "storage.MitreAttackVector",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetMitreVectorResponse",
            "fields": [
              {
                "id": 1,
                "name": "mitre_attack_vector",
                "type": "storage.MitreAttackVector"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "MitreAttackService",
            "rpcs": [
              {
                "name": "ListMitreAttackVectors",
                "in_type": "Empty",
                "out_type": "ListMitreAttackVectorsResponse"
              },
              {
                "name": "GetMitreAttackVector",
                "in_type": "ResourceByID",
                "out_type": "GetMitreVectorResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/mitre.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:namespace_service.proto",
      "def": {
        "messages": [
          {
            "name": "Namespace",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "storage.NamespaceMetadata"
              },
              {
                "id": 2,
                "name": "num_deployments",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "num_secrets",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "num_network_policies",
                "type": "int32"
              }
            ]
          },
          {
            "name": "GetNamespacesResponse",
            "fields": [
              {
                "id": 1,
                "name": "namespaces",
                "type": "Namespace",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNamespaceRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NamespaceService",
            "rpcs": [
              {
                "name": "GetNamespaces",
                "in_type": "GetNamespaceRequest",
                "out_type": "GetNamespacesResponse"
              },
              {
                "name": "GetNamespace",
                "in_type": "ResourceByID",
                "out_type": "Namespace"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "storage/namespace_metadata.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:network_baseline_service.proto",
      "def": {
        "enums": [
          {
            "name": "NetworkBaselinePeerStatus.Status",
            "enum_fields": [
              {
                "name": "BASELINE"
              },
              {
                "name": "ANOMALOUS",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "NetworkBaselinePeerEntity",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "storage.NetworkEntityInfo.Type"
              }
            ]
          },
          {
            "name": "NetworkBaselineStatusPeer",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "NetworkBaselinePeerEntity"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "storage.L4Protocol"
              },
              {
                "id": 4,
                "name": "ingress",
                "type": "bool"
              }
            ]
          },
          {
            "name": "NetworkBaselinePeerStatus",
            "fields": [
              {
                "id": 1,
                "name": "peer",
                "type": "NetworkBaselineStatusPeer"
              },
              {
                "id": 2,
                "name": "status",
                "type": "Status"
              }
            ]
          },
          {
            "name": "NetworkBaselineStatusRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "peers",
                "type": "NetworkBaselineStatusPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkBaselineStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "statuses",
                "type": "NetworkBaselinePeerStatus",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ModifyBaselineStatusForPeersRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "peers",
                "type": "NetworkBaselinePeerStatus",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NetworkBaselineService",
            "rpcs": [
              {
                "name": "GetNetworkBaselineStatusForFlows",
                "in_type": "NetworkBaselineStatusRequest",
                "out_type": "NetworkBaselineStatusResponse"
              },
              {
                "name": "GetNetworkBaseline",
                "in_type": "ResourceByID",
                "out_type": "storage.NetworkBaseline"
              },
              {
                "name": "ModifyBaselineStatusForPeers",
                "in_type": "ModifyBaselineStatusForPeersRequest",
                "out_type": "Empty"
              },
              {
                "name": "LockNetworkBaseline",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "UnlockNetworkBaseline",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/network_baseline.proto"
          },
          {
            "path": "storage/network_flow.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:network_graph_service.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkGraphScope",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkEdgeProperties",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "storage.L4Protocol"
              },
              {
                "id": 3,
                "name": "last_active_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NetworkEdgePropertiesBundle",
            "fields": [
              {
                "id": 1,
                "name": "properties",
                "type": "NetworkEdgeProperties",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkNode",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "storage.NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "internet_access",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "policy_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "non_isolated_ingress",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "non_isolated_egress",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "query_match",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "int32",
                "field": {
                  "id": 4,
                  "name": "out_edges",
                  "type": "NetworkEdgePropertiesBundle"
                }
              }
            ]
          },
          {
            "name": "NetworkGraphRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "since",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "include_ports",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "scope",
                "type": "NetworkGraphScope"
              },
              {
                "id": 6,
                "name": "include_policies",
                "type": "bool"
              }
            ]
          },
          {
            "name": "NetworkGraph",
            "fields": [
              {
                "id": 1,
                "name": "epoch",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "nodes",
                "type": "NetworkNode",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CreateNetworkEntityRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "entity",
                "type": "storage.NetworkEntityInfo.ExternalSource"
              }
            ]
          },
          {
            "name": "PatchNetworkEntityRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetExternalNetworkEntitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetExternalNetworkEntitiesResponse",
            "fields": [
              {
                "id": 1,
                "name": "entities",
                "type": "storage.NetworkEntity",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PutNetworkGraphConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.NetworkGraphConfig"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NetworkGraphService",
            "rpcs": [
              {
                "name": "GetNetworkGraph",
                "in_type": "NetworkGraphRequest",
                "out_type": "NetworkGraph"
              },
              {
                "name": "GetExternalNetworkEntities",
                "in_type": "GetExternalNetworkEntitiesRequest",
                "out_type": "GetExternalNetworkEntitiesResponse"
              },
              {
                "name": "CreateExternalNetworkEntity",
                "in_type": "CreateNetworkEntityRequest",
                "out_type": "storage.NetworkEntity"
              },
              {
                "name": "PatchExternalNetworkEntity",
                "in_type": "PatchNetworkEntityRequest",
                "out_type": "storage.NetworkEntity"
              },
              {
                "name": "DeleteExternalNetworkEntity",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetNetworkGraphConfig",
                "in_type": "Empty",
                "out_type": "storage.NetworkGraphConfig"
              },
              {
                "name": "PutNetworkGraphConfig",
                "in_type": "PutNetworkGraphConfigRequest",
                "out_type": "storage.NetworkGraphConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/network_graph_config.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:network_policy_service.proto",
      "def": {
        "enums": [
          {
            "name": "NetworkPolicyInSimulation.Status",
            "enum_fields": [
              {
                "name": "INVALID"
              },
              {
                "name": "UNCHANGED",
                "integer": 1
              },
              {
                "name": "MODIFIED",
                "integer": 2
              },
              {
                "name": "ADDED",
                "integer": 3
              },
              {
                "name": "DELETED",
                "integer": 4
              }
            ]
          },
          {
            "name": "GenerateNetworkPoliciesRequest.DeleteExistingPoliciesMode",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "NONE",
                "integer": 1
              },
              {
                "name": "GENERATED_ONLY",
                "integer": 2
              },
              {
                "name": "ALL",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetNetworkPoliciesRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "deployment_query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "network_policies",
                "type": "storage.NetworkPolicy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SendNetworkPolicyYamlRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "notifier_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetNetworkGraphRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "include_ports",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "scope",
                "type": "NetworkGraphScope"
              }
            ]
          },
          {
            "name": "SimulateNetworkGraphRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              },
              {
                "id": 4,
                "name": "include_ports",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "include_node_diff",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "scope",
                "type": "NetworkGraphScope"
              }
            ]
          },
          {
            "name": "ApplyNetworkPolicyYamlRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetUndoModificationRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetUndoModificationResponse",
            "fields": [
              {
                "id": 1,
                "name": "undo_record",
                "type": "storage.NetworkPolicyApplicationUndoRecord"
              }
            ]
          },
          {
            "name": "NetworkPolicyInSimulation",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "storage.NetworkPolicy"
              },
              {
                "id": 2,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 3,
                "name": "old_policy",
                "type": "storage.NetworkPolicy"
              }
            ]
          },
          {
            "name": "NetworkNodeDiff",
            "fields": [
              {
                "id": 1,
                "name": "policy_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "non_isolated_ingress",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "non_isolated_egress",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "int32",
                "field": {
                  "id": 2,
                  "name": "DEPRECATED_out_edges",
                  "type": "NetworkEdgePropertiesBundle"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "out_edges",
                  "type": "NetworkEdgePropertiesBundle"
                }
              }
            ]
          },
          {
            "name": "NetworkGraphDiff",
            "maps": [
              {
                "key_type": "int32",
                "field": {
                  "id": 1,
                  "name": "DEPRECATED_node_diffs",
                  "type": "NetworkNodeDiff"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "node_diffs",
                  "type": "NetworkNodeDiff"
                }
              }
            ]
          },
          {
            "name": "SimulateNetworkGraphResponse",
            "fields": [
              {
                "id": 1,
                "name": "simulated_graph",
                "type": "NetworkGraph"
              },
              {
                "id": 2,
                "name": "policies",
                "type": "NetworkPolicyInSimulation",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "added",
                "type": "NetworkGraphDiff"
              },
              {
                "id": 4,
                "name": "removed",
                "type": "NetworkGraphDiff"
              }
            ]
          },
          {
            "name": "GetNetworkGraphEpochRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkGraphEpoch",
            "fields": [
              {
                "id": 1,
                "name": "epoch",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "GenerateNetworkPoliciesRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "delete_existing",
                "type": "DeleteExistingPoliciesMode"
              },
              {
                "id": 4,
                "name": "network_data_since",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "include_ports",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GenerateNetworkPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetBaselineGeneratedPolicyForDeploymentRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "delete_existing",
                "type": "GenerateNetworkPoliciesRequest.DeleteExistingPoliciesMode"
              },
              {
                "id": 3,
                "name": "include_ports",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetBaselineGeneratedPolicyForDeploymentResponse",
            "fields": [
              {
                "id": 1,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetAllowedPeersFromCurrentPolicyForDeploymentResponse",
            "fields": [
              {
                "id": 1,
                "name": "allowed_peers",
                "type": "NetworkBaselineStatusPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ApplyNetworkPolicyYamlForDeploymentRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetUndoModificationForDeploymentResponse",
            "fields": [
              {
                "id": 1,
                "name": "undo_record",
                "type": "storage.NetworkPolicyApplicationUndoRecord"
              }
            ]
          },
          {
            "name": "GetDiffFlowsReconciledFlow",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "storage.NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "added",
                "type": "storage.NetworkBaselineConnectionProperties",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "removed",
                "type": "storage.NetworkBaselineConnectionProperties",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "unchanged",
                "type": "storage.NetworkBaselineConnectionProperties",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetDiffFlowsGroupedFlow",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "storage.NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "properties",
                "type": "storage.NetworkBaselineConnectionProperties",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetDiffFlowsResponse",
            "fields": [
              {
                "id": 1,
                "name": "added",
                "type": "GetDiffFlowsGroupedFlow",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "removed",
                "type": "GetDiffFlowsGroupedFlow",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "reconciled",
                "type": "GetDiffFlowsReconciledFlow",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NetworkPolicyService",
            "rpcs": [
              {
                "name": "GetNetworkPolicy",
                "in_type": "ResourceByID",
                "out_type": "storage.NetworkPolicy"
              },
              {
                "name": "GetNetworkPolicies",
                "in_type": "GetNetworkPoliciesRequest",
                "out_type": "NetworkPoliciesResponse"
              },
              {
                "name": "GetNetworkGraph",
                "in_type": "GetNetworkGraphRequest",
                "out_type": "NetworkGraph"
              },
              {
                "name": "GetNetworkGraphEpoch",
                "in_type": "GetNetworkGraphEpochRequest",
                "out_type": "NetworkGraphEpoch"
              },
              {
                "name": "ApplyNetworkPolicy",
                "in_type": "ApplyNetworkPolicyYamlRequest",
                "out_type": "Empty"
              },
              {
                "name": "GetUndoModification",
                "in_type": "GetUndoModificationRequest",
                "out_type": "GetUndoModificationResponse"
              },
              {
                "name": "SimulateNetworkGraph",
                "in_type": "SimulateNetworkGraphRequest",
                "out_type": "SimulateNetworkGraphResponse"
              },
              {
                "name": "SendNetworkPolicyYAML",
                "in_type": "SendNetworkPolicyYamlRequest",
                "out_type": "Empty"
              },
              {
                "name": "GenerateNetworkPolicies",
                "in_type": "GenerateNetworkPoliciesRequest",
                "out_type": "GenerateNetworkPoliciesResponse"
              },
              {
                "name": "GetBaselineGeneratedNetworkPolicyForDeployment",
                "in_type": "GetBaselineGeneratedPolicyForDeploymentRequest",
                "out_type": "GetBaselineGeneratedPolicyForDeploymentResponse"
              },
              {
                "name": "GetAllowedPeersFromCurrentPolicyForDeployment",
                "in_type": "ResourceByID",
                "out_type": "GetAllowedPeersFromCurrentPolicyForDeploymentResponse"
              },
              {
                "name": "ApplyNetworkPolicyYamlForDeployment",
                "in_type": "ApplyNetworkPolicyYamlForDeploymentRequest",
                "out_type": "Empty"
              },
              {
                "name": "GetUndoModificationForDeployment",
                "in_type": "ResourceByID",
                "out_type": "GetUndoModificationForDeploymentResponse"
              },
              {
                "name": "GetDiffFlowsBetweenPolicyAndBaselineForDeployment",
                "in_type": "ResourceByID",
                "out_type": "GetDiffFlowsResponse"
              },
              {
                "name": "GetDiffFlowsFromUndoModificationForDeployment",
                "in_type": "ResourceByID",
                "out_type": "GetDiffFlowsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "api/v1/network_baseline_service.proto"
          },
          {
            "path": "api/v1/network_graph_service.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/network_baseline.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/network_policy.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:node_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListNodesRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListNodesResponse",
            "fields": [
              {
                "id": 1,
                "name": "nodes",
                "type": "storage.Node",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNodeRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "node_id",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NodeService",
            "rpcs": [
              {
                "name": "ListNodes",
                "in_type": "ListNodesRequest",
                "out_type": "ListNodesResponse"
              },
              {
                "name": "GetNode",
                "in_type": "GetNodeRequest",
                "out_type": "storage.Node"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/node.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:notifications.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkPolicyNotification",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "string"
              },
              {
                "id": 2,
                "name": "yaml",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:notifier_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetNotifiersRequest",
            "reserved_ids": [
              1,
              2
            ]
          },
          {
            "name": "GetNotifiersResponse",
            "fields": [
              {
                "id": 1,
                "name": "notifiers",
                "type": "storage.Notifier",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeleteNotifierRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool"
              }
            ]
          },
          {
            "name": "UpdateNotifierRequest",
            "fields": [
              {
                "id": 1,
                "name": "notifier",
                "type": "storage.Notifier"
              },
              {
                "id": 2,
                "name": "update_password",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NotifierService",
            "rpcs": [
              {
                "name": "GetNotifier",
                "in_type": "ResourceByID",
                "out_type": "storage.Notifier"
              },
              {
                "name": "GetNotifiers",
                "in_type": "GetNotifiersRequest",
                "out_type": "GetNotifiersResponse"
              },
              {
                "name": "PutNotifier",
                "in_type": "storage.Notifier",
                "out_type": "Empty"
              },
              {
                "name": "PostNotifier",
                "in_type": "storage.Notifier",
                "out_type": "storage.Notifier"
              },
              {
                "name": "TestNotifier",
                "in_type": "storage.Notifier",
                "out_type": "Empty"
              },
              {
                "name": "DeleteNotifier",
                "in_type": "DeleteNotifierRequest",
                "out_type": "Empty"
              },
              {
                "name": "UpdateNotifier",
                "in_type": "UpdateNotifierRequest",
                "out_type": "Empty"
              },
              {
                "name": "TestUpdatedNotifier",
                "in_type": "UpdateNotifierRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/notifier.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:pagination.proto",
      "def": {
        "enums": [
          {
            "name": "Aggregation",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "COUNT",
                "integer": 1
              },
              {
                "name": "MIN",
                "integer": 2
              },
              {
                "name": "MAX",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "AggregateBy",
            "fields": [
              {
                "id": 1,
                "name": "aggrFunc",
                "type": "Aggregation"
              },
              {
                "id": 2,
                "name": "distinct",
                "type": "bool"
              }
            ]
          },
          {
            "name": "SortOption",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "string"
              },
              {
                "id": 2,
                "name": "reversed",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "aggregate_by",
                "type": "AggregateBy"
              }
            ]
          },
          {
            "name": "Pagination",
            "fields": [
              {
                "id": 1,
                "name": "limit",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "offset",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "sort_option",
                "type": "SortOption"
              },
              {
                "id": 4,
                "name": "sort_options",
                "type": "SortOption",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:ping_service.proto",
      "def": {
        "messages": [
          {
            "name": "PongMessage",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PingService",
            "rpcs": [
              {
                "name": "Ping",
                "in_type": "Empty",
                "out_type": "PongMessage"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:pod_service.proto",
      "def": {
        "messages": [
          {
            "name": "PodsResponse",
            "fields": [
              {
                "id": 1,
                "name": "pods",
                "type": "storage.Pod",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PodService",
            "rpcs": [
              {
                "name": "GetPods",
                "in_type": "RawQuery",
                "out_type": "PodsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "storage/deployment.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:policy_category_service.proto",
      "def": {
        "messages": [
          {
            "name": "PolicyCategory",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "isDefault",
                "type": "bool"
              }
            ]
          },
          {
            "name": "PostPolicyCategoryRequest",
            "fields": [
              {
                "id": 1,
                "name": "policyCategory",
                "type": "v1.PolicyCategory"
              }
            ]
          },
          {
            "name": "GetPolicyCategoriesResponse",
            "fields": [
              {
                "id": 1,
                "name": "categories",
                "type": "v1.PolicyCategory",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RenamePolicyCategoryRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "new_category_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeletePolicyCategoryRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PolicyCategoryService",
            "rpcs": [
              {
                "name": "GetPolicyCategory",
                "in_type": "ResourceByID",
                "out_type": "v1.PolicyCategory"
              },
              {
                "name": "GetPolicyCategories",
                "in_type": "RawQuery",
                "out_type": "GetPolicyCategoriesResponse"
              },
              {
                "name": "PostPolicyCategory",
                "in_type": "PostPolicyCategoryRequest",
                "out_type": "v1.PolicyCategory"
              },
              {
                "name": "RenamePolicyCategory",
                "in_type": "RenamePolicyCategoryRequest",
                "out_type": "v1.PolicyCategory"
              },
              {
                "name": "DeletePolicyCategory",
                "in_type": "DeletePolicyCategoryRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:policy_service.proto",
      "def": {
        "messages": [
          {
            "name": "DryRunResponse",
            "fields": [
              {
                "id": 1,
                "name": "alerts",
                "type": "Alert",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Alert",
                "fields": [
                  {
                    "id": 1,
                    "name": "deployment",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "violations",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "JobId",
            "fields": [
              {
                "id": 1,
                "name": "job_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "DryRunJobStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "pending",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "result",
                "type": "DryRunResponse"
              }
            ]
          },
          {
            "name": "PolicyCategoriesResponse",
            "fields": [
              {
                "id": 1,
                "name": "categories",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EnableDisablePolicyNotificationRequest",
            "fields": [
              {
                "id": 1,
                "name": "policy_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "notifier_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "disable",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ListPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "storage.ListPolicy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PostPolicyRequest",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "storage.Policy"
              },
              {
                "id": 2,
                "name": "enable_strict_validation",
                "type": "bool"
              }
            ]
          },
          {
            "name": "PatchPolicyRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "disabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ExportPoliciesRequest",
            "fields": [
              {
                "id": 1,
                "name": "policy_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyError",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExportPolicyError",
            "fields": [
              {
                "id": 1,
                "name": "policy_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "error",
                "type": "PolicyError"
              }
            ]
          },
          {
            "name": "ExportPoliciesErrorList",
            "fields": [
              {
                "id": 1,
                "name": "errors",
                "type": "ExportPolicyError",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyFromSearchRequest",
            "fields": [
              {
                "id": 1,
                "name": "search_params",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImportPoliciesMetadata",
            "fields": [
              {
                "id": 1,
                "name": "overwrite",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ImportPoliciesRequest",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "ImportPoliciesMetadata"
              },
              {
                "id": 2,
                "name": "policies",
                "type": "storage.Policy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ImportPolicyError",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "duplicate_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "validation_error",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImportPolicyResponse",
            "fields": [
              {
                "id": 1,
                "name": "succeeded",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "policy",
                "type": "storage.Policy"
              },
              {
                "id": 3,
                "name": "errors",
                "type": "ImportPolicyError",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ImportPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "responses",
                "type": "ImportPolicyResponse",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "all_succeeded",
                "type": "bool"
              }
            ]
          },
          {
            "name": "PolicyFromSearchResponse",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "storage.Policy"
              },
              {
                "id": 2,
                "name": "altered_search_terms",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "has_nested_fields",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetPolicyMitreVectorsRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "options",
                "type": "Options"
              }
            ],
            "messages": [
              {
                "name": "Options",
                "fields": [
                  {
                    "id": 1,
                    "name": "exclude_policy",
                    "type": "bool"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetPolicyMitreVectorsResponse",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "storage.Policy"
              },
              {
                "id": 2,
                "name": "vectors",
                "type": "storage.MitreAttackVector",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PolicyService",
            "rpcs": [
              {
                "name": "GetPolicy",
                "in_type": "ResourceByID",
                "out_type": "storage.Policy"
              },
              {
                "name": "GetPolicyMitreVectors",
                "in_type": "GetPolicyMitreVectorsRequest",
                "out_type": "GetPolicyMitreVectorsResponse"
              },
              {
                "name": "ListPolicies",
                "in_type": "RawQuery",
                "out_type": "ListPoliciesResponse"
              },
              {
                "name": "PostPolicy",
                "in_type": "PostPolicyRequest",
                "out_type": "storage.Policy"
              },
              {
                "name": "PutPolicy",
                "in_type": "storage.Policy",
                "out_type": "Empty"
              },
              {
                "name": "PatchPolicy",
                "in_type": "PatchPolicyRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeletePolicy",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "EnableDisablePolicyNotification",
                "in_type": "EnableDisablePolicyNotificationRequest",
                "out_type": "Empty"
              },
              {
                "name": "ReassessPolicies",
                "in_type": "Empty",
                "out_type": "Empty"
              },
              {
                "name": "DryRunPolicy",
                "in_type": "storage.Policy",
                "out_type": "DryRunResponse"
              },
              {
                "name": "SubmitDryRunPolicyJob",
                "in_type": "storage.Policy",
                "out_type": "JobId"
              },
              {
                "name": "QueryDryRunJobStatus",
                "in_type": "JobId",
                "out_type": "DryRunJobStatusResponse"
              },
              {
                "name": "CancelDryRunJob",
                "in_type": "JobId",
                "out_type": "Empty"
              },
              {
                "name": "GetPolicyCategories",
                "in_type": "Empty",
                "out_type": "PolicyCategoriesResponse"
              },
              {
                "name": "ExportPolicies",
                "in_type": "ExportPoliciesRequest",
                "out_type": "storage.ExportPoliciesResponse"
              },
              {
                "name": "PolicyFromSearch",
                "in_type": "PolicyFromSearchRequest",
                "out_type": "PolicyFromSearchResponse"
              },
              {
                "name": "ImportPolicies",
                "in_type": "ImportPoliciesRequest",
                "out_type": "ImportPoliciesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "storage/mitre.proto"
          },
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:probe_upload_service.proto",
      "def": {
        "messages": [
          {
            "name": "ProbeUploadManifest",
            "fields": [
              {
                "id": 1,
                "name": "files",
                "type": "File",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "File",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "size",
                    "type": "int64"
                  },
                  {
                    "id": 3,
                    "name": "crc32",
                    "type": "uint32"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetExistingProbesRequest",
            "fields": [
              {
                "id": 1,
                "name": "files_to_check",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetExistingProbesResponse",
            "fields": [
              {
                "id": 1,
                "name": "existing_files",
                "type": "ProbeUploadManifest.File",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ProbeUploadService",
            "rpcs": [
              {
                "name": "GetExistingProbes",
                "in_type": "GetExistingProbesRequest",
                "out_type": "GetExistingProbesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:process_baseline_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetProcessBaselineRequest",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "storage.ProcessBaselineKey"
              }
            ]
          },
          {
            "name": "UpdateProcessBaselinesRequest",
            "fields": [
              {
                "id": 1,
                "name": "keys",
                "type": "storage.ProcessBaselineKey",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "add_elements",
                "type": "storage.BaselineItem",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "remove_elements",
                "type": "storage.BaselineItem",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessBaselinesResponse",
            "fields": [
              {
                "id": 1,
                "name": "baselines",
                "type": "storage.ProcessBaseline",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessBaselineUpdateError",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "storage.ProcessBaselineKey"
              }
            ]
          },
          {
            "name": "UpdateProcessBaselinesResponse",
            "fields": [
              {
                "id": 1,
                "name": "baselines",
                "type": "storage.ProcessBaseline",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "errors",
                "type": "ProcessBaselineUpdateError",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LockProcessBaselinesRequest",
            "fields": [
              {
                "id": 1,
                "name": "keys",
                "type": "storage.ProcessBaselineKey",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "locked",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteProcessBaselinesRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              },
              {
                "id": 2,
                "name": "confirm",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteProcessBaselinesResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_deleted",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "dry_run",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ProcessBaselineService",
            "rpcs": [
              {
                "name": "GetProcessBaseline",
                "in_type": "GetProcessBaselineRequest",
                "out_type": "storage.ProcessBaseline"
              },
              {
                "name": "UpdateProcessBaselines",
                "in_type": "UpdateProcessBaselinesRequest",
                "out_type": "UpdateProcessBaselinesResponse"
              },
              {
                "name": "LockProcessBaselines",
                "in_type": "LockProcessBaselinesRequest",
                "out_type": "UpdateProcessBaselinesResponse"
              },
              {
                "name": "DeleteProcessBaselines",
                "in_type": "DeleteProcessBaselinesRequest",
                "out_type": "DeleteProcessBaselinesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/process_baseline.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:process_listening_on_port_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetProcessesListeningOnPortsRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetProcessesListeningOnPortsResponse",
            "fields": [
              {
                "id": 1,
                "name": "listening_endpoints",
                "type": "storage.ProcessListeningOnPort",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ListeningEndpointsService",
            "rpcs": [
              {
                "name": "GetListeningEndpoints",
                "in_type": "GetProcessesListeningOnPortsRequest",
                "out_type": "GetProcessesListeningOnPortsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/process_listening_on_port.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:process_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetProcessesByDeploymentRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetProcessesResponse",
            "fields": [
              {
                "id": 1,
                "name": "processes",
                "type": "storage.ProcessIndicator",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessGroup",
            "fields": [
              {
                "id": 1,
                "name": "args",
                "type": "string"
              },
              {
                "id": 2,
                "name": "signals",
                "type": "storage.ProcessIndicator",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessNameGroup",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "times_executed",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "groups",
                "type": "ProcessGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetGroupedProcessesResponse",
            "fields": [
              {
                "id": 3,
                "name": "groups",
                "type": "ProcessNameGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessNameAndContainerNameGroup",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "times_executed",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "groups",
                "type": "ProcessGroup",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "suspicious",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetGroupedProcessesWithContainerResponse",
            "fields": [
              {
                "id": 3,
                "name": "groups",
                "type": "ProcessNameAndContainerNameGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountProcessesResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ProcessService",
            "rpcs": [
              {
                "name": "CountProcesses",
                "in_type": "RawQuery",
                "out_type": "CountProcessesResponse"
              },
              {
                "name": "GetProcessesByDeployment",
                "in_type": "GetProcessesByDeploymentRequest",
                "out_type": "GetProcessesResponse"
              },
              {
                "name": "GetGroupedProcessByDeployment",
                "in_type": "GetProcessesByDeploymentRequest",
                "out_type": "GetGroupedProcessesResponse"
              },
              {
                "name": "GetGroupedProcessByDeploymentAndContainer",
                "in_type": "GetProcessesByDeploymentRequest",
                "out_type": "GetGroupedProcessesWithContainerResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:rbac_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListRolesResponse",
            "fields": [
              {
                "id": 1,
                "name": "roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetRoleResponse",
            "fields": [
              {
                "id": 1,
                "name": "role",
                "type": "storage.K8sRole"
              }
            ]
          },
          {
            "name": "ListRoleBindingsResponse",
            "fields": [
              {
                "id": 1,
                "name": "bindings",
                "type": "storage.K8sRoleBinding",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetRoleBindingResponse",
            "fields": [
              {
                "id": 1,
                "name": "binding",
                "type": "storage.K8sRoleBinding"
              }
            ]
          },
          {
            "name": "ListSubjectsResponse",
            "fields": [
              {
                "id": 1,
                "name": "subject_and_roles",
                "type": "SubjectAndRoles",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SubjectAndRoles",
            "fields": [
              {
                "id": 1,
                "name": "subject",
                "type": "storage.Subject"
              },
              {
                "id": 2,
                "name": "roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetSubjectResponse",
            "fields": [
              {
                "id": 1,
                "name": "subject",
                "type": "storage.Subject"
              },
              {
                "id": 2,
                "name": "cluster_roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "scoped_roles",
                "type": "ScopedRoles",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScopedRoles",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 2,
                "name": "roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "RbacService",
            "rpcs": [
              {
                "name": "GetRole",
                "in_type": "ResourceByID",
                "out_type": "GetRoleResponse"
              },
              {
                "name": "ListRoles",
                "in_type": "RawQuery",
                "out_type": "ListRolesResponse"
              },
              {
                "name": "GetRoleBinding",
                "in_type": "ResourceByID",
                "out_type": "GetRoleBindingResponse"
              },
              {
                "name": "ListRoleBindings",
                "in_type": "RawQuery",
                "out_type": "ListRoleBindingsResponse"
              },
              {
                "name": "GetSubject",
                "in_type": "ResourceByID",
                "out_type": "GetSubjectResponse"
              },
              {
                "name": "ListSubjects",
                "in_type": "RawQuery",
                "out_type": "ListSubjectsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "storage/rbac.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:report_configuration_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetReportConfigurationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "report_configs",
                "type": "storage.ReportConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetReportConfigurationResponse",
            "fields": [
              {
                "id": 1,
                "name": "report_config",
                "type": "storage.ReportConfiguration"
              }
            ]
          },
          {
            "name": "PostReportConfigurationResponse",
            "fields": [
              {
                "id": 1,
                "name": "report_config",
                "type": "storage.ReportConfiguration"
              }
            ]
          },
          {
            "name": "PostReportConfigurationRequest",
            "fields": [
              {
                "id": 1,
                "name": "report_config",
                "type": "storage.ReportConfiguration"
              }
            ]
          },
          {
            "name": "UpdateReportConfigurationRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "report_config",
                "type": "storage.ReportConfiguration"
              }
            ]
          },
          {
            "name": "CountReportConfigurationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ReportConfigurationService",
            "rpcs": [
              {
                "name": "GetReportConfigurations",
                "in_type": "RawQuery",
                "out_type": "GetReportConfigurationsResponse"
              },
              {
                "name": "GetReportConfiguration",
                "in_type": "ResourceByID",
                "out_type": "GetReportConfigurationResponse"
              },
              {
                "name": "PostReportConfiguration",
                "in_type": "PostReportConfigurationRequest",
                "out_type": "PostReportConfigurationResponse"
              },
              {
                "name": "UpdateReportConfiguration",
                "in_type": "UpdateReportConfigurationRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeleteReportConfiguration",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "CountReportConfigurations",
                "in_type": "RawQuery",
                "out_type": "CountReportConfigurationsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "storage/report_configuration.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:report_service.proto",
      "def": {
        "services": [
          {
            "name": "ReportService",
            "rpcs": [
              {
                "name": "RunReport",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:resource_collection_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListCollectionSelectorsResponse",
            "fields": [
              {
                "id": 1,
                "name": "selectors",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetCollectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "options",
                "type": "CollectionDeploymentMatchOptions"
              }
            ]
          },
          {
            "name": "CollectionDeploymentMatchOptions",
            "fields": [
              {
                "id": 1,
                "name": "with_matches",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "filter_query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "GetCollectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "collection",
                "type": "storage.ResourceCollection"
              },
              {
                "id": 2,
                "name": "deployments",
                "type": "storage.ListDeployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetCollectionCountRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "GetCollectionCountResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "CreateCollectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "description",
                "type": "string"
              },
              {
                "id": 3,
                "name": "resource_selectors",
                "type": "storage.ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "embedded_collection_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CreateCollectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "collection",
                "type": "storage.ResourceCollection"
              }
            ]
          },
          {
            "name": "UpdateCollectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "resource_selectors",
                "type": "storage.ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "embedded_collection_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateCollectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "collection",
                "type": "storage.ResourceCollection"
              }
            ]
          },
          {
            "name": "DryRunCollectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "resource_selectors",
                "type": "storage.ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "embedded_collection_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "options",
                "type": "CollectionDeploymentMatchOptions"
              }
            ]
          },
          {
            "name": "DryRunCollectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployments",
                "type": "storage.ListDeployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListCollectionsRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "ListCollectionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "collections",
                "type": "storage.ResourceCollection",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CollectionService",
            "rpcs": [
              {
                "name": "ListCollectionSelectors",
                "in_type": "Empty",
                "out_type": "ListCollectionSelectorsResponse"
              },
              {
                "name": "GetCollection",
                "in_type": "GetCollectionRequest",
                "out_type": "GetCollectionResponse"
              },
              {
                "name": "GetCollectionCount",
                "in_type": "GetCollectionCountRequest",
                "out_type": "GetCollectionCountResponse"
              },
              {
                "name": "CreateCollection",
                "in_type": "CreateCollectionRequest",
                "out_type": "CreateCollectionResponse"
              },
              {
                "name": "UpdateCollection",
                "in_type": "UpdateCollectionRequest",
                "out_type": "UpdateCollectionResponse"
              },
              {
                "name": "ListCollections",
                "in_type": "ListCollectionsRequest",
                "out_type": "ListCollectionsResponse"
              },
              {
                "name": "DeleteCollection",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "DryRunCollection",
                "in_type": "DryRunCollectionRequest",
                "out_type": "DryRunCollectionResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/resource_collection.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:role_service.proto",
      "def": {
        "enums": [
          {
            "name": "ComputeEffectiveAccessScopeRequest.Detail",
            "enum_fields": [
              {
                "name": "STANDARD"
              },
              {
                "name": "MINIMAL",
                "integer": 1
              },
              {
                "name": "HIGH",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Permission",
            "fields": [
              {
                "id": 1,
                "name": "resource",
                "type": "string"
              },
              {
                "id": 2,
                "name": "access",
                "type": "storage.Access"
              }
            ]
          },
          {
            "name": "GetRolesResponse",
            "fields": [
              {
                "id": 1,
                "name": "roles",
                "type": "storage.Role",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetPermissionsResponse",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "resource_to_access",
                  "type": "storage.Access"
                }
              }
            ],
            "reserved_ids": [
              1,
              2
            ]
          },
          {
            "name": "GetResourcesResponse",
            "fields": [
              {
                "id": 1,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListPermissionSetsResponse",
            "fields": [
              {
                "id": 1,
                "name": "permission_sets",
                "type": "storage.PermissionSet",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListSimpleAccessScopesResponse",
            "fields": [
              {
                "id": 1,
                "name": "access_scopes",
                "type": "storage.SimpleAccessScope",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScopeObject",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetClustersForPermissionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "ScopeObject",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNamespacesForClusterAndPermissionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "namespaces",
                "type": "ScopeObject",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComputeEffectiveAccessScopeRequest",
            "fields": [
              {
                "id": 1,
                "name": "detail",
                "type": "Detail"
              },
              {
                "id": 2,
                "name": "access_scope",
                "type": "Payload"
              }
            ],
            "messages": [
              {
                "name": "Payload",
                "fields": [
                  {
                    "id": 1,
                    "name": "simple_rules",
                    "type": "storage.SimpleAccessScope.Rules"
                  }
                ]
              }
            ]
          },
          {
            "name": "CreateRoleRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "role",
                "type": "storage.Role"
              }
            ]
          },
          {
            "name": "GetClustersForPermissionsRequest",
            "fields": [
              {
                "id": 1,
                "name": "pagination",
                "type": "Pagination"
              },
              {
                "id": 2,
                "name": "permissions",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNamespaceForClusterAndPermissionsRequest",
            "fields": [
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "permissions",
                "type": "string",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              1
            ]
          }
        ],
        "services": [
          {
            "name": "RoleService",
            "rpcs": [
              {
                "name": "GetRoles",
                "in_type": "Empty",
                "out_type": "GetRolesResponse"
              },
              {
                "name": "GetRole",
                "in_type": "ResourceByID",
                "out_type": "storage.Role"
              },
              {
                "name": "GetMyPermissions",
                "in_type": "Empty",
                "out_type": "GetPermissionsResponse"
              },
              {
                "name": "CreateRole",
                "in_type": "CreateRoleRequest",
                "out_type": "Empty"
              },
              {
                "name": "UpdateRole",
                "in_type": "storage.Role",
                "out_type": "Empty"
              },
              {
                "name": "DeleteRole",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetResources",
                "in_type": "Empty",
                "out_type": "GetResourcesResponse"
              },
              {
                "name": "GetPermissionSet",
                "in_type": "ResourceByID",
                "out_type": "storage.PermissionSet"
              },
              {
                "name": "ListPermissionSets",
                "in_type": "Empty",
                "out_type": "ListPermissionSetsResponse"
              },
              {
                "name": "PostPermissionSet",
                "in_type": "storage.PermissionSet",
                "out_type": "storage.PermissionSet"
              },
              {
                "name": "PutPermissionSet",
                "in_type": "storage.PermissionSet",
                "out_type": "Empty"
              },
              {
                "name": "DeletePermissionSet",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetSimpleAccessScope",
                "in_type": "ResourceByID",
                "out_type": "storage.SimpleAccessScope"
              },
              {
                "name": "ListSimpleAccessScopes",
                "in_type": "Empty",
                "out_type": "ListSimpleAccessScopesResponse"
              },
              {
                "name": "PostSimpleAccessScope",
                "in_type": "storage.SimpleAccessScope",
                "out_type": "storage.SimpleAccessScope"
              },
              {
                "name": "PutSimpleAccessScope",
                "in_type": "storage.SimpleAccessScope",
                "out_type": "Empty"
              },
              {
                "name": "DeleteSimpleAccessScope",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "ComputeEffectiveAccessScope",
                "in_type": "ComputeEffectiveAccessScopeRequest",
                "out_type": "storage.EffectiveAccessScope"
              },
              {
                "name": "GetClustersForPermissions",
                "in_type": "GetClustersForPermissionsRequest",
                "out_type": "GetClustersForPermissionsResponse"
              },
              {
                "name": "GetNamespacesForClusterAndPermissions",
                "in_type": "GetNamespaceForClusterAndPermissionsRequest",
                "out_type": "GetNamespacesForClusterAndPermissionsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/pagination.proto"
          },
          {
            "path": "storage/role.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:search_service.proto",
      "def": {
        "enums": [
          {
            "name": "SearchCategory",
            "enum_fields": [
              {
                "name": "SEARCH_UNSET"
              },
              {
                "name": "ALERTS",
                "integer": 1
              },
              {
                "name": "IMAGES",
                "integer": 2
              },
              {
                "name": "IMAGE_COMPONENTS",
                "integer": 20
              },
              {
                "name": "IMAGE_VULN_EDGE",
                "integer": 27
              },
              {
                "name": "IMAGE_COMPONENT_EDGE",
                "integer": 23
              },
              {
                "name": "POLICIES",
                "integer": 3
              },
              {
                "name": "DEPLOYMENTS",
                "integer": 4
              },
              {
                "name": "ACTIVE_COMPONENT",
                "integer": 30
              },
              {
                "name": "PODS",
                "integer": 25
              },
              {
                "name": "SECRETS",
                "integer": 5
              },
              {
                "name": "PROCESS_INDICATORS",
                "integer": 6
              },
              {
                "name": "COMPLIANCE",
                "integer": 7
              },
              {
                "name": "CLUSTERS",
                "integer": 8
              },
              {
                "name": "NAMESPACES",
                "integer": 9
              },
              {
                "name": "NODES",
                "integer": 10
              },
              {
                "name": "NODE_COMPONENTS",
                "integer": 38
              },
              {
                "name": "NODE_VULN_EDGE",
                "integer": 28
              },
              {
                "name": "NODE_COMPONENT_EDGE",
                "integer": 29
              },
              {
                "name": "NODE_COMPONENT_CVE_EDGE",
                "integer": 33
              },
              {
                "name": "COMPLIANCE_STANDARD",
                "integer": 11
              },
              {
                "name": "COMPLIANCE_CONTROL_GROUP",
                "integer": 12
              },
              {
                "name": "COMPLIANCE_CONTROL",
                "integer": 13
              },
              {
                "name": "SERVICE_ACCOUNTS",
                "integer": 14
              },
              {
                "name": "ROLES",
                "integer": 15
              },
              {
                "name": "ROLEBINDINGS",
                "integer": 16
              },
              {
                "name": "REPORT_CONFIGURATIONS",
                "integer": 37
              },
              {
                "name": "PROCESS_BASELINES",
                "integer": 17
              },
              {
                "name": "SUBJECTS",
                "integer": 18
              },
              {
                "name": "RISKS",
                "integer": 19
              },
              {
                "name": "VULNERABILITIES",
                "integer": 21
              },
              {
                "name": "CLUSTER_VULNERABILITIES",
                "integer": 34
              },
              {
                "name": "IMAGE_VULNERABILITIES",
                "integer": 35
              },
              {
                "name": "NODE_VULNERABILITIES",
                "integer": 36
              },
              {
                "name": "COMPONENT_VULN_EDGE",
                "integer": 22
              },
              {
                "name": "CLUSTER_VULN_EDGE",
                "integer": 24
              },
              {
                "name": "NETWORK_ENTITY",
                "integer": 26
              },
              {
                "name": "VULN_REQUEST",
                "integer": 32
              },
              {
                "name": "NETWORK_BASELINE",
                "integer": 39
              },
              {
                "name": "NETWORK_POLICIES",
                "integer": 40
              },
              {
                "name": "PROCESS_BASELINE_RESULTS",
                "integer": 41
              },
              {
                "name": "COMPLIANCE_METADATA",
                "integer": 42
              },
              {
                "name": "COMPLIANCE_RESULTS",
                "integer": 43
              },
              {
                "name": "COMPLIANCE_DOMAIN",
                "integer": 44
              },
              {
                "name": "CLUSTER_HEALTH",
                "integer": 45
              },
              {
                "name": "POLICY_CATEGORIES",
                "integer": 46
              },
              {
                "name": "IMAGE_INTEGRATIONS",
                "integer": 47
              },
              {
                "name": "COLLECTIONS",
                "integer": 48
              },
              {
                "name": "POLICY_CATEGORY_EDGE",
                "integer": 49
              },
              {
                "name": "PROCESS_LISTENING_ON_PORT",
                "integer": 50
              },
              {
                "name": "API_TOKEN",
                "integer": 51
              }
            ]
          },
          {
            "name": "SearchDataType",
            "enum_fields": [
              {
                "name": "SEARCH_BOOL"
              },
              {
                "name": "SEARCH_NUMERIC",
                "integer": 1
              },
              {
                "name": "SEARCH_STRING",
                "integer": 2
              },
              {
                "name": "SEARCH_DATETIME",
                "integer": 3
              },
              {
                "name": "SEARCH_MAP",
                "integer": 4
              },
              {
                "name": "SEARCH_ENUM",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "RawQuery",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              },
              {
                "id": 2,
                "name": "pagination",
                "type": "Pagination"
              }
            ]
          },
          {
            "name": "RawSearchRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              },
              {
                "id": 2,
                "name": "categories",
                "type": "SearchCategory",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "QuerySortOption",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "string"
              },
              {
                "id": 2,
                "name": "reversed",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "search_after",
                "type": "string"
              },
              {
                "id": 4,
                "name": "aggregate_by",
                "type": "AggregateBy"
              }
            ]
          },
          {
            "name": "QueryField",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "aggregate_func",
                "type": "string"
              },
              {
                "id": 3,
                "name": "distinct",
                "type": "bool"
              }
            ]
          },
          {
            "name": "QuerySelectFilter",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "Query"
              }
            ]
          },
          {
            "name": "QuerySelect",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "QueryField"
              },
              {
                "id": 2,
                "name": "filter",
                "type": "QuerySelectFilter"
              }
            ]
          },
          {
            "name": "QueryGroupBy",
            "fields": [
              {
                "id": 1,
                "name": "fields",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "QueryPagination",
            "fields": [
              {
                "id": 1,
                "name": "limit",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "offset",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "sort_options",
                "type": "QuerySortOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BooleanQuery",
            "fields": [
              {
                "id": 1,
                "name": "must",
                "type": "ConjunctionQuery"
              },
              {
                "id": 2,
                "name": "must_not",
                "type": "DisjunctionQuery"
              }
            ]
          },
          {
            "name": "Query",
            "fields": [
              {
                "id": 1,
                "name": "conjunction",
                "type": "ConjunctionQuery"
              },
              {
                "id": 2,
                "name": "disjunction",
                "type": "DisjunctionQuery"
              },
              {
                "id": 3,
                "name": "base_query",
                "type": "BaseQuery"
              },
              {
                "id": 6,
                "name": "boolean_query",
                "type": "BooleanQuery"
              },
              {
                "id": 8,
                "name": "selects",
                "type": "QuerySelect",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "group_by",
                "type": "QueryGroupBy"
              },
              {
                "id": 4,
                "name": "pagination",
                "type": "QueryPagination"
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "StringQuery",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "MatchFieldQuery",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "highlight",
                "type": "bool"
              }
            ]
          },
          {
            "name": "MatchLinkedFieldsQuery",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "MatchFieldQuery",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DocIDQuery",
            "fields": [
              {
                "id": 1,
                "name": "ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BaseQuery",
            "fields": [
              {
                "id": 2,
                "name": "match_field_query",
                "type": "MatchFieldQuery"
              },
              {
                "id": 3,
                "name": "match_linked_fields_query",
                "type": "MatchLinkedFieldsQuery"
              },
              {
                "id": 4,
                "name": "doc_id_query",
                "type": "DocIDQuery"
              },
              {
                "id": 5,
                "name": "match_none_query",
                "type": "MatchNoneQuery"
              }
            ]
          },
          {
            "name": "ConjunctionQuery",
            "fields": [
              {
                "id": 1,
                "name": "queries",
                "type": "Query",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DisjunctionQuery",
            "fields": [
              {
                "id": 1,
                "name": "queries",
                "type": "Query",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MatchNoneQuery"
          },
          {
            "name": "SearchResult",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "category",
                "type": "SearchCategory"
              },
              {
                "id": 5,
                "name": "score",
                "type": "double"
              },
              {
                "id": 6,
                "name": "location",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "field_to_matches",
                  "type": "Matches"
                }
              }
            ],
            "messages": [
              {
                "name": "Matches",
                "fields": [
                  {
                    "id": 1,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "SearchResponse",
            "fields": [
              {
                "id": 1,
                "name": "results",
                "type": "SearchResult",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "counts",
                "type": "Count",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Count",
                "fields": [
                  {
                    "id": 1,
                    "name": "category",
                    "type": "SearchCategory"
                  },
                  {
                    "id": 2,
                    "name": "count",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "SearchOptionsRequest",
            "fields": [
              {
                "id": 1,
                "name": "categories",
                "type": "SearchCategory",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SearchOptionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "options",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AutocompleteResponse",
            "fields": [
              {
                "id": 1,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SearchService",
            "rpcs": [
              {
                "name": "Search",
                "in_type": "RawSearchRequest",
                "out_type": "SearchResponse"
              },
              {
                "name": "Options",
                "in_type": "SearchOptionsRequest",
                "out_type": "SearchOptionsResponse"
              },
              {
                "name": "Autocomplete",
                "in_type": "RawSearchRequest",
                "out_type": "AutocompleteResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/pagination.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:secret_service.proto",
      "def": {
        "messages": [
          {
            "name": "SecretList",
            "fields": [
              {
                "id": 1,
                "name": "secrets",
                "type": "storage.Secret",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListSecretsResponse",
            "fields": [
              {
                "id": 1,
                "name": "secrets",
                "type": "storage.ListSecret",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountSecretsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SecretService",
            "rpcs": [
              {
                "name": "GetSecret",
                "in_type": "ResourceByID",
                "out_type": "storage.Secret"
              },
              {
                "name": "CountSecrets",
                "in_type": "RawQuery",
                "out_type": "CountSecretsResponse"
              },
              {
                "name": "ListSecrets",
                "in_type": "RawQuery",
                "out_type": "ListSecretsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "storage/secret.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:sensor_upgrade_service.proto",
      "def": {
        "enums": [
          {
            "name": "GetSensorUpgradeConfigResponse.SensorAutoUpgradeFeatureStatus",
            "enum_fields": [
              {
                "name": "NOT_SUPPORTED"
              },
              {
                "name": "SUPPORTED",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "UpdateSensorUpgradeConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.SensorUpgradeConfig"
              }
            ]
          },
          {
            "name": "GetSensorUpgradeConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "UpgradeConfig"
              }
            ],
            "messages": [
              {
                "name": "UpgradeConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "enable_auto_upgrade",
                    "type": "bool"
                  },
                  {
                    "id": 2,
                    "name": "auto_upgrade_feature",
                    "type": "SensorAutoUpgradeFeatureStatus"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SensorUpgradeService",
            "rpcs": [
              {
                "name": "GetSensorUpgradeConfig",
                "in_type": "Empty",
                "out_type": "GetSensorUpgradeConfigResponse"
              },
              {
                "name": "UpdateSensorUpgradeConfig",
                "in_type": "UpdateSensorUpgradeConfigRequest",
                "out_type": "Empty"
              },
              {
                "name": "TriggerSensorUpgrade",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "TriggerSensorCertRotation",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "storage/sensor_upgrade.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:service_account_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListServiceAccountResponse",
            "fields": [
              {
                "id": 1,
                "name": "sa_and_roles",
                "type": "ServiceAccountAndRoles",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServiceAccountAndRoles",
            "fields": [
              {
                "id": 1,
                "name": "service_account",
                "type": "storage.ServiceAccount"
              },
              {
                "id": 2,
                "name": "cluster_roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "scoped_roles",
                "type": "ScopedRoles",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "deployment_relationships",
                "type": "SADeploymentRelationship",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetServiceAccountResponse",
            "fields": [
              {
                "id": 1,
                "name": "sa_and_role",
                "type": "ServiceAccountAndRoles"
              }
            ]
          },
          {
            "name": "SADeploymentRelationship",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ServiceAccountService",
            "rpcs": [
              {
                "name": "GetServiceAccount",
                "in_type": "ResourceByID",
                "out_type": "GetServiceAccountResponse"
              },
              {
                "name": "ListServiceAccounts",
                "in_type": "RawQuery",
                "out_type": "ListServiceAccountResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "api/v1/rbac_service.proto"
          },
          {
            "path": "storage/service_account.proto"
          },
          {
            "path": "storage/rbac.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:service_identity_service.proto",
      "def": {
        "messages": [
          {
            "name": "ServiceIdentityResponse",
            "fields": [
              {
                "id": 1,
                "name": "identities",
                "type": "storage.ServiceIdentity",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CreateServiceIdentityRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "storage.ServiceType"
              }
            ]
          },
          {
            "name": "CreateServiceIdentityResponse",
            "fields": [
              {
                "id": 1,
                "name": "identity",
                "type": "storage.ServiceIdentity"
              },
              {
                "id": 2,
                "name": "certificate_pem",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "private_key_pem",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Authority",
            "fields": [
              {
                "id": 1,
                "name": "certificate_pem",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Authorities",
            "fields": [
              {
                "id": 1,
                "name": "authorities",
                "type": "Authority",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ServiceIdentityService",
            "rpcs": [
              {
                "name": "GetServiceIdentities",
                "in_type": "Empty",
                "out_type": "ServiceIdentityResponse"
              },
              {
                "name": "CreateServiceIdentity",
                "in_type": "CreateServiceIdentityRequest",
                "out_type": "CreateServiceIdentityResponse"
              },
              {
                "name": "GetAuthorities",
                "in_type": "Empty",
                "out_type": "Authorities"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/service_identity.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:signal.proto",
      "def": {
        "messages": [
          {
            "name": "Signal",
            "fields": [
              {
                "id": 1,
                "name": "process_signal",
                "type": "storage.ProcessSignal"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:signature_integration_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListSignatureIntegrationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "integrations",
                "type": "storage.SignatureIntegration",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SignatureIntegrationService",
            "rpcs": [
              {
                "name": "ListSignatureIntegrations",
                "in_type": "Empty",
                "out_type": "ListSignatureIntegrationsResponse"
              },
              {
                "name": "GetSignatureIntegration",
                "in_type": "ResourceByID",
                "out_type": "storage.SignatureIntegration"
              },
              {
                "name": "PostSignatureIntegration",
                "in_type": "storage.SignatureIntegration",
                "out_type": "storage.SignatureIntegration"
              },
              {
                "name": "PutSignatureIntegration",
                "in_type": "storage.SignatureIntegration",
                "out_type": "Empty"
              },
              {
                "name": "DeleteSignatureIntegration",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "storage/signature_integration.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:summary_service.proto",
      "def": {
        "messages": [
          {
            "name": "SummaryCountsResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_alerts",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "num_clusters",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "num_deployments",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "num_images",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "num_secrets",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "num_nodes",
                "type": "int64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SummaryService",
            "rpcs": [
              {
                "name": "GetSummaryCounts",
                "in_type": "Empty",
                "out_type": "SummaryCountsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:telemetry_service.proto",
      "def": {
        "messages": [
          {
            "name": "ConfigureTelemetryRequest",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "TelemetryService",
            "rpcs": [
              {
                "name": "GetTelemetryConfiguration",
                "in_type": "Empty",
                "out_type": "storage.TelemetryConfiguration"
              },
              {
                "name": "ConfigureTelemetry",
                "in_type": "ConfigureTelemetryRequest",
                "out_type": "storage.TelemetryConfiguration"
              },
              {
                "name": "GetConfig",
                "in_type": "Empty",
                "out_type": "central.TelemetryConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/telemetry.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "internalapi/central/telemetry.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:user_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetUsersResponse",
            "fields": [
              {
                "id": 1,
                "name": "users",
                "type": "storage.User",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UserAttributeTuple",
            "fields": [
              {
                "id": 1,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetUsersAttributesResponse",
            "fields": [
              {
                "id": 1,
                "name": "users_attributes",
                "type": "UserAttributeTuple",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "UserService",
            "rpcs": [
              {
                "name": "GetUsers",
                "in_type": "Empty",
                "out_type": "GetUsersResponse"
              },
              {
                "name": "GetUser",
                "in_type": "ResourceByID",
                "out_type": "storage.User"
              },
              {
                "name": "GetUsersAttributes",
                "in_type": "Empty",
                "out_type": "GetUsersAttributesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v1:/:vuln_req_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetVulnerabilityRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "ListVulnerabilityRequestsResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_infos",
                "type": "storage.VulnerabilityRequest",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeferVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "cve",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              },
              {
                "id": 3,
                "name": "scope",
                "type": "storage.VulnerabilityRequest.Scope"
              },
              {
                "id": 4,
                "name": "expires_when_fixed",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "expires_on",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "DeferVulnResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "FalsePositiveVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "cve",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scope",
                "type": "storage.VulnerabilityRequest.Scope"
              },
              {
                "id": 3,
                "name": "comment",
                "type": "string"
              }
            ]
          },
          {
            "name": "FalsePositiveVulnResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "ApproveVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              }
            ]
          },
          {
            "name": "ApproveVulnRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "DenyVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              }
            ]
          },
          {
            "name": "DenyVulnRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "UpdateVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              },
              {
                "id": 3,
                "name": "expiry",
                "type": "storage.RequestExpiry"
              }
            ]
          },
          {
            "name": "UpdateVulnRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "UndoVulnRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "VulnerabilityRequestService",
            "rpcs": [
              {
                "name": "GetVulnerabilityRequest",
                "in_type": "ResourceByID",
                "out_type": "GetVulnerabilityRequestResponse"
              },
              {
                "name": "ListVulnerabilityRequests",
                "in_type": "RawQuery",
                "out_type": "ListVulnerabilityRequestsResponse"
              },
              {
                "name": "DeferVulnerability",
                "in_type": "DeferVulnRequest",
                "out_type": "DeferVulnResponse"
              },
              {
                "name": "FalsePositiveVulnerability",
                "in_type": "FalsePositiveVulnRequest",
                "out_type": "FalsePositiveVulnResponse"
              },
              {
                "name": "ApproveVulnerabilityRequest",
                "in_type": "ApproveVulnRequest",
                "out_type": "ApproveVulnRequestResponse"
              },
              {
                "name": "DenyVulnerabilityRequest",
                "in_type": "DenyVulnRequest",
                "out_type": "DenyVulnRequestResponse"
              },
              {
                "name": "UpdateVulnerabilityRequest",
                "in_type": "UpdateVulnRequest",
                "out_type": "UpdateVulnRequestResponse"
              },
              {
                "name": "UndoVulnerabilityRequest",
                "in_type": "ResourceByID",
                "out_type": "UndoVulnRequestResponse"
              },
              {
                "name": "DeleteVulnerabilityRequest",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "storage/vuln_requests.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:api:/:v2:/:report_configuration_service.proto",
      "def": {
        "enums": [
          {
            "name": "ReportConfiguration.ReportType",
            "enum_fields": [
              {
                "name": "VULNERABILITY"
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.Fixability",
            "enum_fields": [
              {
                "name": "BOTH"
              },
              {
                "name": "FIXABLE",
                "integer": 1
              },
              {
                "name": "NOT_FIXABLE",
                "integer": 2
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.VulnerabilitySeverity",
            "enum_fields": [
              {
                "name": "UNKNOWN_VULNERABILITY_SEVERITY"
              },
              {
                "name": "LOW_VULNERABILITY_SEVERITY",
                "integer": 1
              },
              {
                "name": "MODERATE_VULNERABILITY_SEVERITY",
                "integer": 2
              },
              {
                "name": "IMPORTANT_VULNERABILITY_SEVERITY",
                "integer": 3
              },
              {
                "name": "CRITICAL_VULNERABILITY_SEVERITY",
                "integer": 4
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.ImageType",
            "enum_fields": [
              {
                "name": "DEPLOYED"
              },
              {
                "name": "WATCHED",
                "integer": 1
              }
            ]
          },
          {
            "name": "Schedule.IntervalType",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "DAILY",
                "integer": 1
              },
              {
                "name": "WEEKLY",
                "integer": 2
              },
              {
                "name": "MONTHLY",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ReportConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "ReportType"
              },
              {
                "id": 5,
                "name": "vuln_report_filters",
                "type": "VulnerabilityReportFilters"
              },
              {
                "id": 6,
                "name": "schedule",
                "type": "Schedule"
              },
              {
                "id": 7,
                "name": "resource_scope",
                "type": "ResourceScope"
              },
              {
                "id": 8,
                "name": "notifiers",
                "type": "NotifierConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters",
            "fields": [
              {
                "id": 1,
                "name": "fixability",
                "type": "Fixability"
              },
              {
                "id": 2,
                "name": "severities",
                "type": "VulnerabilitySeverity",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "image_types",
                "type": "ImageType",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "all_vuln",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "last_successful_report",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "start_date",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "Schedule",
            "fields": [
              {
                "id": 1,
                "name": "interval_type",
                "type": "IntervalType"
              },
              {
                "id": 2,
                "name": "hour",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "minute",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "weekly",
                "type": "WeeklyInterval"
              },
              {
                "id": 5,
                "name": "days_of_week",
                "type": "DaysOfWeek"
              },
              {
                "id": 6,
                "name": "days_of_month",
                "type": "DaysOfMonth"
              }
            ],
            "messages": [
              {
                "name": "WeeklyInterval",
                "fields": [
                  {
                    "id": 1,
                    "name": "day",
                    "type": "int32"
                  }
                ]
              },
              {
                "name": "DaysOfWeek",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "DaysOfMonth",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ResourceScope",
            "fields": [
              {
                "id": 1,
                "name": "collection_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NotifierConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "email_config",
                "type": "EmailNotifierConfiguration"
              }
            ]
          },
          {
            "name": "EmailNotifierConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "notifier_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "mailing_lists",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ReportConfigurationService",
            "rpcs": [
              {
                "name": "PostReportConfiguration",
                "in_type": "ReportConfiguration",
                "out_type": "ReportConfiguration"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:auth.proto",
      "def": {
        "messages": [
          {
            "name": "ServiceCertAuth",
            "fields": [
              {
                "id": 1,
                "name": "cert_der",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "current_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:baseline_sync.proto",
      "def": {
        "messages": [
          {
            "name": "BaselineSync",
            "fields": [
              {
                "id": 1,
                "name": "baselines",
                "type": "storage.ProcessBaseline",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/process_baseline.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:cluster_config.proto",
      "def": {
        "messages": [
          {
            "name": "ClusterConfig",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.DynamicClusterConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:cluster_metrics.proto",
      "def": {
        "messages": [
          {
            "name": "ClusterMetrics",
            "fields": [
              {
                "id": 1,
                "name": "node_count",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "cpu_capacity",
                "type": "int64"
              }
            ]
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:cluster_status.proto",
      "def": {
        "messages": [
          {
            "name": "DeploymentEnvironmentUpdate",
            "fields": [
              {
                "id": 1,
                "name": "environments",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ClusterStatusUpdate",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "storage.ClusterStatus"
              },
              {
                "id": 2,
                "name": "deployment_env_update",
                "type": "DeploymentEnvironmentUpdate"
              }
            ]
          },
          {
            "name": "RawClusterHealthInfo",
            "fields": [
              {
                "id": 1,
                "name": "collector_health_info",
                "type": "storage.CollectorHealthInfo"
              },
              {
                "id": 2,
                "name": "admission_control_health_info",
                "type": "storage.AdmissionControlHealthInfo"
              },
              {
                "id": 3,
                "name": "scanner_health_info",
                "type": "storage.ScannerHealthInfo"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:development_service.proto",
      "def": {
        "enums": [
          {
            "name": "URLHasValidCertResponse.URLResult",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "CERT_SIGNED_BY_UNKNOWN_AUTHORITY",
                "integer": 1
              },
              {
                "name": "CERT_SIGNING_AUTHORITY_VALID_BUT_OTHER_ERROR",
                "integer": 2
              },
              {
                "name": "OTHER_GET_ERROR",
                "integer": 3
              },
              {
                "name": "REQUEST_SUCCEEDED",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "URLHasValidCertRequest",
            "fields": [
              {
                "id": 1,
                "name": "url",
                "type": "string"
              }
            ]
          },
          {
            "name": "URLHasValidCertResponse",
            "fields": [
              {
                "id": 1,
                "name": "result",
                "type": "URLResult"
              },
              {
                "id": 2,
                "name": "details",
                "type": "string"
              }
            ]
          },
          {
            "name": "RandomDataRequest",
            "fields": [
              {
                "id": 1,
                "name": "size",
                "type": "int32"
              }
            ]
          },
          {
            "name": "RandomDataResponse",
            "fields": [
              {
                "id": 1,
                "name": "data",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "EnvVarsResponse",
            "fields": [
              {
                "id": 1,
                "name": "env_vars",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReconciliationStatsByClusterResponse",
            "fields": [
              {
                "id": 1,
                "name": "stats",
                "type": "ReconciliationStatsForCluster",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ReconciliationStatsForCluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "reconciliation_done",
                    "type": "bool"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "deleted_objects_by_type",
                      "type": "int32"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "ReplicateImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "times",
                "type": "int32"
              }
            ]
          },
          {
            "name": "Empty"
          }
        ],
        "services": [
          {
            "name": "DevelopmentService",
            "rpcs": [
              {
                "name": "ReplicateImage",
                "in_type": "ReplicateImageRequest",
                "out_type": "Empty"
              },
              {
                "name": "URLHasValidCert",
                "in_type": "URLHasValidCertRequest",
                "out_type": "URLHasValidCertResponse"
              },
              {
                "name": "RandomData",
                "in_type": "RandomDataRequest",
                "out_type": "RandomDataResponse"
              },
              {
                "name": "EnvVars",
                "in_type": "Empty",
                "out_type": "EnvVarsResponse"
              },
              {
                "name": "ReconciliationStatsByCluster",
                "in_type": "Empty",
                "out_type": "ReconciliationStatsByClusterResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:hello.proto",
      "def": {
        "messages": [
          {
            "name": "HelmManagedConfigInit",
            "fields": [
              {
                "id": 1,
                "name": "cluster_config",
                "type": "storage.CompleteClusterConfig"
              },
              {
                "id": 2,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "not_helm_managed",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "managed_by",
                "type": "storage.ManagerType"
              }
            ]
          },
          {
            "name": "SensorHello",
            "fields": [
              {
                "id": 1,
                "name": "sensor_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "capabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "deployment_identification",
                "type": "storage.SensorDeploymentIdentification"
              },
              {
                "id": 3,
                "name": "helm_managed_config_init",
                "type": "HelmManagedConfigInit"
              },
              {
                "id": 4,
                "name": "policy_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "CentralHello",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "managed_central",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "cert_bundle",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:local_scanner.proto",
      "def": {
        "messages": [
          {
            "name": "LocalScannerCertsIssueError",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "string"
              }
            ]
          },
          {
            "name": "IssueLocalScannerCertsRequest",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "IssueLocalScannerCertsResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "certificates",
                "type": "storage.TypedServiceCertificateSet"
              },
              {
                "id": 3,
                "name": "error",
                "type": "LocalScannerCertsIssueError"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/service_identity.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:network_baseline_sync.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkBaselineSync",
            "fields": [
              {
                "id": 1,
                "name": "network_baselines",
                "type": "storage.NetworkBaseline",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/network_baseline.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:network_flow.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkFlowUpdate",
            "fields": [
              {
                "id": 1,
                "name": "updated",
                "type": "storage.NetworkFlow",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "updated_endpoints",
                "type": "storage.NetworkEndpoint",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "PushNetworkEntitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "entities",
                "type": "storage.NetworkEntityInfo",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "seqID",
                "type": "int64"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_flow.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:network_policy.proto",
      "def": {
        "messages": [
          {
            "name": "SendNetworkPolicyYamlRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "notifier_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/network_policy.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:policy_sync.proto",
      "def": {
        "messages": [
          {
            "name": "PolicySync",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "storage.Policy",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:process_listening_on_ports_update.proto",
      "def": {
        "messages": [
          {
            "name": "ProcessListeningOnPortsUpdate",
            "fields": [
              {
                "id": 1,
                "name": "processes_listening_on_ports",
                "type": "storage.ProcessListeningOnPortFromSensor",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/process_listening_on_port.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:secured_cluster_notifier.proto",
      "def": {
        "messages": [
          {
            "name": "NotifierSync",
            "fields": [
              {
                "id": 1,
                "name": "notifiers",
                "type": "storage.Notifier",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TestNotifierRequest",
            "fields": [
              {
                "id": 1,
                "name": "notifier",
                "type": "storage.Notifier"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/notifier.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:sensor_events.proto",
      "def": {
        "enums": [
          {
            "name": "ResourceAction",
            "enum_fields": [
              {
                "name": "UNSET_ACTION_RESOURCE"
              },
              {
                "name": "CREATE_RESOURCE",
                "integer": 1
              },
              {
                "name": "REMOVE_RESOURCE",
                "integer": 2
              },
              {
                "name": "UPDATE_RESOURCE",
                "integer": 3
              },
              {
                "name": "SYNC_RESOURCE",
                "integer": 4
              }
            ]
          },
          {
            "name": "AlertResults.Source",
            "enum_fields": [
              {
                "name": "DEPLOYMENT_EVENT"
              },
              {
                "name": "AUDIT_EVENT",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ReprocessDeploymentRisk",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "AlertResults",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "alerts",
                "type": "storage.Alert",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "stage",
                "type": "storage.LifecycleStage"
              },
              {
                "id": 4,
                "name": "source",
                "type": "Source"
              }
            ]
          },
          {
            "name": "Timing",
            "fields": [
              {
                "id": 1,
                "name": "dispatcher",
                "type": "string"
              },
              {
                "id": 2,
                "name": "resource",
                "type": "string"
              },
              {
                "id": 3,
                "name": "nanos",
                "type": "int64"
              }
            ]
          },
          {
            "name": "SensorEvent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "action",
                "type": "ResourceAction"
              },
              {
                "id": 3,
                "name": "timing",
                "type": "Timing"
              },
              {
                "id": 26,
                "name": "sensor_hash",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "network_policy",
                "type": "storage.NetworkPolicy"
              },
              {
                "id": 5,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 19,
                "name": "pod",
                "type": "storage.Pod"
              },
              {
                "id": 6,
                "name": "namespace",
                "type": "storage.NamespaceMetadata"
              },
              {
                "id": 7,
                "name": "secret",
                "type": "storage.Secret"
              },
              {
                "id": 9,
                "name": "node",
                "type": "storage.Node"
              },
              {
                "id": 25,
                "name": "node_inventory",
                "type": "storage.NodeInventory"
              },
              {
                "id": 14,
                "name": "service_account",
                "type": "storage.ServiceAccount"
              },
              {
                "id": 15,
                "name": "role",
                "type": "storage.K8sRole"
              },
              {
                "id": 16,
                "name": "binding",
                "type": "storage.K8sRoleBinding"
              },
              {
                "id": 8,
                "name": "process_indicator",
                "type": "storage.ProcessIndicator"
              },
              {
                "id": 10,
                "name": "provider_metadata",
                "type": "storage.ProviderMetadata"
              },
              {
                "id": 11,
                "name": "synced",
                "type": "ResourcesSynced"
              },
              {
                "id": 12,
                "name": "orchestrator_metadata",
                "type": "storage.OrchestratorMetadata"
              },
              {
                "id": 13,
                "name": "image_integration",
                "type": "storage.ImageIntegration"
              },
              {
                "id": 17,
                "name": "reprocess_deployment",
                "type": "ReprocessDeploymentRisk"
              },
              {
                "id": 18,
                "name": "alert_results",
                "type": "AlertResults"
              },
              {
                "id": 20,
                "name": "compliance_operator_result",
                "type": "storage.ComplianceOperatorCheckResult"
              },
              {
                "id": 21,
                "name": "compliance_operator_profile",
                "type": "storage.ComplianceOperatorProfile"
              },
              {
                "id": 22,
                "name": "compliance_operator_rule",
                "type": "storage.ComplianceOperatorRule"
              },
              {
                "id": 23,
                "name": "compliance_operator_scan_setting_binding",
                "type": "storage.ComplianceOperatorScanSettingBinding"
              },
              {
                "id": 24,
                "name": "compliance_operator_scan",
                "type": "storage.ComplianceOperatorScan"
              }
            ],
            "messages": [
              {
                "name": "ResourcesSynced"
              }
            ]
          },
          {
            "name": "SensorEnforcement",
            "fields": [
              {
                "id": 1,
                "name": "enforcement",
                "type": "storage.EnforcementAction"
              },
              {
                "id": 2,
                "name": "deployment",
                "type": "DeploymentEnforcement"
              },
              {
                "id": 3,
                "name": "container_instance",
                "type": "ContainerInstanceEnforcement"
              }
            ]
          },
          {
            "name": "DeploymentEnforcement",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "deployment_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment_type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "alert_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "policy_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ContainerInstanceEnforcement",
            "fields": [
              {
                "id": 2,
                "name": "pod_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment_enforcement",
                "type": "DeploymentEnforcement"
              }
            ]
          },
          {
            "name": "ScrapeCommand",
            "fields": [
              {
                "id": 1,
                "name": "scrape_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "start_scrape",
                "type": "StartScrape"
              },
              {
                "id": 3,
                "name": "kill_scrape",
                "type": "KillScrape"
              }
            ]
          },
          {
            "name": "StartScrape",
            "fields": [
              {
                "id": 1,
                "name": "hostnames",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "standards",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "KillScrape"
          },
          {
            "name": "ScrapeUpdate",
            "fields": [
              {
                "id": 1,
                "name": "scrape_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "compliance_return",
                "type": "compliance.ComplianceReturn"
              },
              {
                "id": 3,
                "name": "scrape_started",
                "type": "ScrapeStarted"
              },
              {
                "id": 4,
                "name": "scrape_killed",
                "type": "ScrapeKilled"
              }
            ]
          },
          {
            "name": "ScrapeStarted",
            "fields": [
              {
                "id": 1,
                "name": "error_message",
                "type": "string"
              }
            ]
          },
          {
            "name": "ScrapeKilled",
            "fields": [
              {
                "id": 1,
                "name": "error_message",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkPoliciesCommand",
            "fields": [
              {
                "id": 1,
                "name": "seq_id",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "payload",
                "type": "Payload"
              }
            ],
            "messages": [
              {
                "name": "Apply",
                "fields": [
                  {
                    "id": 1,
                    "name": "apply_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "modification",
                    "type": "storage.NetworkPolicyModification"
                  }
                ]
              },
              {
                "name": "Payload",
                "fields": [
                  {
                    "id": 1,
                    "name": "apply",
                    "type": "Apply"
                  }
                ]
              }
            ]
          },
          {
            "name": "NetworkPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "seq_id",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "payload",
                "type": "Payload"
              }
            ],
            "messages": [
              {
                "name": "Apply",
                "fields": [
                  {
                    "id": 1,
                    "name": "apply_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "undo_modification",
                    "type": "storage.NetworkPolicyModification"
                  }
                ]
              },
              {
                "name": "Error",
                "fields": [
                  {
                    "id": 1,
                    "name": "message",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Payload",
                "fields": [
                  {
                    "id": 1,
                    "name": "error",
                    "type": "Error"
                  },
                  {
                    "id": 2,
                    "name": "apply",
                    "type": "Apply"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/compliance/compliance_data.proto"
          },
          {
            "path": "storage/alert.proto"
          },
          {
            "path": "storage/cluster.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/namespace_metadata.proto"
          },
          {
            "path": "storage/network_policy.proto"
          },
          {
            "path": "storage/node.proto"
          },
          {
            "path": "storage/secret.proto"
          },
          {
            "path": "storage/service_account.proto"
          },
          {
            "path": "storage/rbac.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          },
          {
            "path": "storage/image_integration.proto"
          },
          {
            "path": "storage/compliance_operator.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:sensor_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "MsgFromSensor",
            "fields": [
              {
                "id": 7,
                "name": "hash_key",
                "type": "string"
              },
              {
                "id": 8,
                "name": "dedupe_key",
                "type": "string"
              },
              {
                "id": 15,
                "name": "processing_attempt",
                "type": "int32"
              },
              {
                "id": 1,
                "name": "event",
                "type": "SensorEvent"
              },
              {
                "id": 2,
                "name": "network_flow_update",
                "type": "NetworkFlowUpdate"
              },
              {
                "id": 3,
                "name": "scrape_update",
                "type": "ScrapeUpdate"
              },
              {
                "id": 4,
                "name": "network_policies_response",
                "type": "NetworkPoliciesResponse"
              },
              {
                "id": 5,
                "name": "cluster_status_update",
                "type": "ClusterStatusUpdate"
              },
              {
                "id": 6,
                "name": "telemetry_data_response",
                "type": "PullTelemetryDataResponse"
              },
              {
                "id": 9,
                "name": "cluster_health_info",
                "type": "RawClusterHealthInfo"
              },
              {
                "id": 10,
                "name": "hello",
                "type": "SensorHello"
              },
              {
                "id": 11,
                "name": "audit_log_status_info",
                "type": "AuditLogStatusInfo"
              },
              {
                "id": 12,
                "name": "issue_local_scanner_certs_request",
                "type": "IssueLocalScannerCertsRequest"
              },
              {
                "id": 13,
                "name": "cluster_metrics",
                "type": "ClusterMetrics"
              },
              {
                "id": 14,
                "name": "process_listening_on_port_update",
                "type": "ProcessListeningOnPortsUpdate"
              }
            ]
          },
          {
            "name": "ReassessPolicies"
          },
          {
            "name": "ReprocessDeployments"
          },
          {
            "name": "MsgToSensor",
            "fields": [
              {
                "id": 1,
                "name": "enforcement",
                "type": "SensorEnforcement"
              },
              {
                "id": 2,
                "name": "scrape_command",
                "type": "ScrapeCommand"
              },
              {
                "id": 3,
                "name": "network_policies_command",
                "type": "NetworkPoliciesCommand"
              },
              {
                "id": 4,
                "name": "cluster_config",
                "type": "ClusterConfig"
              },
              {
                "id": 5,
                "name": "sensor_upgrade_trigger",
                "type": "SensorUpgradeTrigger"
              },
              {
                "id": 6,
                "name": "telemetry_data_request",
                "type": "PullTelemetryDataRequest"
              },
              {
                "id": 7,
                "name": "policy_sync",
                "type": "PolicySync"
              },
              {
                "id": 8,
                "name": "reassess_policies",
                "type": "ReassessPolicies"
              },
              {
                "id": 9,
                "name": "baseline_sync",
                "type": "BaselineSync"
              },
              {
                "id": 10,
                "name": "cancel_pull_telemetry_data_request",
                "type": "CancelPullTelemetryDataRequest"
              },
              {
                "id": 11,
                "name": "push_network_entities_request",
                "type": "PushNetworkEntitiesRequest"
              },
              {
                "id": 12,
                "name": "hello",
                "type": "CentralHello"
              },
              {
                "id": 13,
                "name": "network_baseline_sync",
                "type": "NetworkBaselineSync"
              },
              {
                "id": 14,
                "name": "audit_log_sync",
                "type": "AuditLogSync"
              },
              {
                "id": 15,
                "name": "reprocess_deployment",
                "type": "ReprocessDeployment"
              },
              {
                "id": 16,
                "name": "invalidate_image_cache",
                "type": "InvalidateImageCache"
              },
              {
                "id": 17,
                "name": "issue_local_scanner_certs_response",
                "type": "IssueLocalScannerCertsResponse"
              },
              {
                "id": 18,
                "name": "updated_image",
                "type": "storage.Image"
              },
              {
                "id": 19,
                "name": "reprocess_deployments",
                "type": "ReprocessDeployments"
              },
              {
                "id": 20,
                "name": "notifier_sync",
                "type": "NotifierSync"
              },
              {
                "id": 21,
                "name": "test_notifier_request",
                "type": "TestNotifierRequest"
              },
              {
                "id": 22,
                "name": "send_network_policy_yaml",
                "type": "SendNetworkPolicyYamlRequest"
              }
            ]
          },
          {
            "name": "AuditLogSync",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "node_audit_log_file_states",
                  "type": "storage.AuditLogFileState"
                }
              }
            ]
          },
          {
            "name": "AuditLogStatusInfo",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "node_audit_log_file_states",
                  "type": "storage.AuditLogFileState"
                }
              }
            ]
          },
          {
            "name": "ReprocessDeployment",
            "fields": [
              {
                "id": 1,
                "name": "deployment_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "InvalidateImageCache",
            "fields": [
              {
                "id": 1,
                "name": "image_keys",
                "type": "ImageKey",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ImageKey",
                "fields": [
                  {
                    "id": 1,
                    "name": "image_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "image_full_name",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SensorService",
            "rpcs": [
              {
                "name": "Communicate",
                "in_type": "MsgFromSensor",
                "out_type": "MsgToSensor",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/central/cluster_config.proto"
          },
          {
            "path": "internalapi/central/cluster_status.proto"
          },
          {
            "path": "internalapi/central/network_flow.proto"
          },
          {
            "path": "internalapi/central/policy_sync.proto"
          },
          {
            "path": "internalapi/central/sensor_events.proto"
          },
          {
            "path": "internalapi/central/sensor_upgrade.proto"
          },
          {
            "path": "internalapi/central/cluster_metrics.proto"
          },
          {
            "path": "internalapi/central/telemetry.proto"
          },
          {
            "path": "internalapi/central/baseline_sync.proto"
          },
          {
            "path": "internalapi/central/hello.proto"
          },
          {
            "path": "internalapi/central/network_baseline_sync.proto"
          },
          {
            "path": "internalapi/central/network_policy.proto"
          },
          {
            "path": "internalapi/central/local_scanner.proto"
          },
          {
            "path": "internalapi/central/process_listening_on_ports_update.proto"
          },
          {
            "path": "internalapi/central/secured_cluster_notifier.proto"
          },
          {
            "path": "storage/cluster.proto"
          },
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:sensor_upgrade.proto",
      "def": {
        "messages": [
          {
            "name": "SensorUpgradeTrigger",
            "fields": [
              {
                "id": 1,
                "name": "upgrade_process_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image",
                "type": "string"
              },
              {
                "id": 3,
                "name": "command",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "env_vars",
                "type": "EnvVarDef",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "EnvVarDef",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "source_env_var",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "default_value",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:sensor_upgrade_ctrl_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "UpgradeCheckInFromUpgraderRequest",
            "fields": [
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "upgrade_process_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "current_workflow",
                "type": "string"
              },
              {
                "id": 3,
                "name": "last_executed_stage",
                "type": "string"
              },
              {
                "id": 4,
                "name": "last_executed_stage_error",
                "type": "string"
              }
            ]
          },
          {
            "name": "UpgradeCheckInFromUpgraderResponse",
            "fields": [
              {
                "id": 1,
                "name": "workflow_to_execute",
                "type": "string"
              }
            ]
          },
          {
            "name": "UpgradeCheckInFromSensorRequest",
            "fields": [
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "upgrade_process_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "launch_error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "pod_states",
                "type": "UpgraderPodStates"
              },
              {
                "id": 4,
                "name": "deployment_gone",
                "type": "bool"
              }
            ],
            "messages": [
              {
                "name": "PodErrorCondition",
                "fields": [
                  {
                    "id": 1,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "image_related",
                    "type": "bool"
                  }
                ]
              },
              {
                "name": "UpgraderPodState",
                "fields": [
                  {
                    "id": 1,
                    "name": "pod_name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "started",
                    "type": "bool"
                  },
                  {
                    "id": 3,
                    "name": "error",
                    "type": "PodErrorCondition"
                  }
                ]
              },
              {
                "name": "UpgraderPodStates",
                "fields": [
                  {
                    "id": 1,
                    "name": "states",
                    "type": "UpgraderPodState",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "UpgradeCheckInResponseDetails",
            "messages": [
              {
                "name": "NoUpgradeInProgress"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SensorUpgradeControlService",
            "rpcs": [
              {
                "name": "UpgradeCheckInFromUpgrader",
                "in_type": "UpgradeCheckInFromUpgraderRequest",
                "out_type": "UpgradeCheckInFromUpgraderResponse"
              },
              {
                "name": "UpgradeCheckInFromSensor",
                "in_type": "UpgradeCheckInFromSensorRequest",
                "out_type": "google.protobuf.Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/empty.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:central:/:telemetry.proto",
      "def": {
        "enums": [
          {
            "name": "PullTelemetryDataRequest.TelemetryDataType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "KUBERNETES_INFO",
                "integer": 1
              },
              {
                "name": "CLUSTER_INFO",
                "integer": 2
              },
              {
                "name": "METRICS",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CancelPullTelemetryDataRequest",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "PullTelemetryDataRequest",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "data_type",
                "type": "TelemetryDataType"
              },
              {
                "id": 3,
                "name": "timeout_ms",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "since",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "TelemetryResponsePayload",
            "fields": [
              {
                "id": 1,
                "name": "end_of_stream",
                "type": "EndOfStream"
              },
              {
                "id": 2,
                "name": "kubernetes_info",
                "type": "KubernetesInfo"
              },
              {
                "id": 3,
                "name": "cluster_info",
                "type": "ClusterInfo"
              },
              {
                "id": 4,
                "name": "metrics_info",
                "type": "KubernetesInfo"
              }
            ],
            "messages": [
              {
                "name": "EndOfStream",
                "fields": [
                  {
                    "id": 1,
                    "name": "error_message",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "KubernetesInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "files",
                    "type": "File",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "File",
                    "fields": [
                      {
                        "id": 1,
                        "name": "path",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "contents",
                        "type": "bytes"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ClusterInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "chunk",
                    "type": "bytes"
                  }
                ]
              }
            ]
          },
          {
            "name": "PullTelemetryDataResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "payload",
                "type": "TelemetryResponsePayload"
              }
            ]
          },
          {
            "name": "TelemetryConfig",
            "fields": [
              {
                "id": 1,
                "name": "user_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 3,
                "name": "storage_key_v1",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:compliance:/:compliance_data.proto",
      "def": {
        "messages": [
          {
            "name": "GZIPDataChunk",
            "fields": [
              {
                "id": 1,
                "name": "gzip",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "File",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "user",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "user_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "group",
                "type": "uint32"
              },
              {
                "id": 5,
                "name": "group_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "permissions",
                "type": "uint32"
              },
              {
                "id": 7,
                "name": "content",
                "type": "bytes"
              },
              {
                "id": 8,
                "name": "is_dir",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "children",
                "type": "File",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CommandLine",
            "fields": [
              {
                "id": 1,
                "name": "process",
                "type": "string"
              },
              {
                "id": 2,
                "name": "args",
                "type": "Args",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Args",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "file",
                    "type": "File"
                  }
                ]
              }
            ]
          },
          {
            "name": "InsecureRegistriesConfig",
            "fields": [
              {
                "id": 1,
                "name": "insecure_registries",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "insecure_cidrs",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ContainerRuntimeInfo",
            "fields": [
              {
                "id": 1,
                "name": "insecure_registries",
                "type": "InsecureRegistriesConfig"
              }
            ]
          },
          {
            "name": "ComplianceStandardResult",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "node_check_results",
                  "type": "storage.ComplianceResultValue"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "cluster_check_results",
                  "type": "storage.ComplianceResultValue"
                }
              }
            ]
          },
          {
            "name": "ComplianceReturn",
            "fields": [
              {
                "id": 1,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scrape_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "docker_data",
                "type": "GZIPDataChunk"
              },
              {
                "id": 9,
                "name": "container_runtime_info",
                "type": "ContainerRuntimeInfo"
              },
              {
                "id": 7,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "evidence",
                "type": "GZIPDataChunk"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "command_lines",
                  "type": "CommandLine"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "files",
                  "type": "File"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "systemd_files",
                  "type": "File"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/compliance.proto"
          }
        ],
        "package": {
          "name": "compliance"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:sensor:/:admission_control.proto",
      "def": {
        "messages": [
          {
            "name": "AdmissionControlSettings",
            "fields": [
              {
                "id": 1,
                "name": "cluster_config",
                "type": "storage.DynamicClusterConfig"
              },
              {
                "id": 2,
                "name": "enforced_deploy_time_policies",
                "type": "storage.PolicyList"
              },
              {
                "id": 3,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "cache_version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "central_endpoint",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "runtime_policies",
                "type": "storage.PolicyList"
              },
              {
                "id": 8,
                "name": "notifier_sync",
                "type": "central.NotifierSync"
              }
            ]
          },
          {
            "name": "AdmissionControlAlerts",
            "fields": [
              {
                "id": 1,
                "name": "alert_results",
                "type": "central.AlertResults",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AdmCtrlUpdateResourceRequest",
            "fields": [
              {
                "id": 1,
                "name": "action",
                "type": "central.ResourceAction"
              },
              {
                "id": 2,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 3,
                "name": "pod",
                "type": "storage.Pod"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "storage.NamespaceMetadata"
              },
              {
                "id": 5,
                "name": "synced",
                "type": "ResourcesSynced"
              }
            ],
            "messages": [
              {
                "name": "ResourcesSynced"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          },
          {
            "path": "storage/namespace_metadata.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "internalapi/central/secured_cluster_notifier.proto"
          },
          {
            "path": "internalapi/central/sensor_events.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:sensor:/:admission_control_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "MsgFromAdmissionControl"
          },
          {
            "name": "MsgToAdmissionControl",
            "fields": [
              {
                "id": 1,
                "name": "settings_push",
                "type": "AdmissionControlSettings"
              },
              {
                "id": 2,
                "name": "update_resource_request",
                "type": "AdmCtrlUpdateResourceRequest"
              },
              {
                "id": 3,
                "name": "test_notifier_request",
                "type": "central.TestNotifierRequest"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AdmissionControlManagementService",
            "rpcs": [
              {
                "name": "Communicate",
                "in_type": "MsgFromAdmissionControl",
                "out_type": "MsgToAdmissionControl",
                "in_streamed": true,
                "out_streamed": true
              },
              {
                "name": "PolicyAlerts",
                "in_type": "AdmissionControlAlerts",
                "out_type": "google.protobuf.Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/sensor/admission_control.proto"
          },
          {
            "path": "internalapi/central/secured_cluster_notifier.proto"
          },
          {
            "path": "google/protobuf/empty.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:sensor:/:cert_distribution_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "FetchCertificateRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_type",
                "type": "storage.ServiceType"
              },
              {
                "id": 2,
                "name": "service_account_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "FetchCertificateResponse",
            "fields": [
              {
                "id": 1,
                "name": "pem_cert",
                "type": "string"
              },
              {
                "id": 2,
                "name": "pem_key",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CertDistributionService",
            "rpcs": [
              {
                "name": "FetchCertificate",
                "in_type": "FetchCertificateRequest",
                "out_type": "FetchCertificateResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/service_identity.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:sensor:/:collector.proto",
      "def": {
        "messages": [
          {
            "name": "CollectorRegisterRequest",
            "fields": [
              {
                "id": 1,
                "name": "hostname",
                "type": "string"
              },
              {
                "id": 2,
                "name": "instance_id",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:sensor:/:compliance_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "GetScrapeConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scrape_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "AuditEvents",
            "fields": [
              {
                "id": 1,
                "name": "events",
                "type": "storage.KubernetesEvent",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MsgFromCompliance",
            "fields": [
              {
                "id": 1,
                "name": "node",
                "type": "string"
              },
              {
                "id": 2,
                "name": "return",
                "type": "compliance.ComplianceReturn"
              },
              {
                "id": 3,
                "name": "audit_events",
                "type": "AuditEvents"
              },
              {
                "id": 4,
                "name": "node_inventory",
                "type": "storage.NodeInventory"
              }
            ]
          },
          {
            "name": "MsgToCompliance",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "ScrapeConfig"
              },
              {
                "id": 2,
                "name": "trigger",
                "type": "TriggerRun"
              },
              {
                "id": 3,
                "name": "audit_log_collection_request",
                "type": "AuditLogCollectionRequest"
              }
            ],
            "messages": [
              {
                "name": "ScrapeConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "container_runtime",
                    "type": "storage.ContainerRuntime"
                  },
                  {
                    "id": 2,
                    "name": "is_master_node",
                    "type": "bool"
                  }
                ]
              },
              {
                "name": "TriggerRun",
                "fields": [
                  {
                    "id": 1,
                    "name": "scrape_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "standard_ids",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "AuditLogCollectionRequest",
                "fields": [
                  {
                    "id": 1,
                    "name": "start_req",
                    "type": "StartRequest"
                  },
                  {
                    "id": 2,
                    "name": "stop_req",
                    "type": "StopRequest"
                  }
                ],
                "messages": [
                  {
                    "name": "StartRequest",
                    "fields": [
                      {
                        "id": 1,
                        "name": "cluster_id",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "collect_start_state",
                        "type": "storage.AuditLogFileState"
                      }
                    ]
                  },
                  {
                    "name": "StopRequest"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceService",
            "rpcs": [
              {
                "name": "Communicate",
                "in_type": "MsgFromCompliance",
                "out_type": "MsgToCompliance",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/compliance/compliance_data.proto"
          },
          {
            "path": "storage/cluster.proto"
          },
          {
            "path": "storage/container_runtime.proto"
          },
          {
            "path": "storage/kube_event.proto"
          },
          {
            "path": "storage/node.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:sensor:/:deployment_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "GetDeploymentForPodRequest",
            "fields": [
              {
                "id": 1,
                "name": "pod_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DeploymentService",
            "rpcs": [
              {
                "name": "GetDeploymentForPod",
                "in_type": "GetDeploymentForPodRequest",
                "out_type": "storage.Deployment"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/deployment.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:sensor:/:image_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "GetImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.ContainerImage"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scan_inline",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetImageResponse",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.Image"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImageService",
            "rpcs": [
              {
                "name": "GetImage",
                "in_type": "GetImageRequest",
                "out_type": "GetImageResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:sensor:/:network_connection_info.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkConnectionInfo",
            "fields": [
              {
                "id": 1,
                "name": "updated_connections",
                "type": "NetworkConnection",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "updated_endpoints",
                "type": "NetworkEndpoint",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NetworkConnection",
            "fields": [
              {
                "id": 1,
                "name": "socket_family",
                "type": "SocketFamily"
              },
              {
                "id": 2,
                "name": "local_address",
                "type": "NetworkAddress"
              },
              {
                "id": 3,
                "name": "remote_address",
                "type": "NetworkAddress"
              },
              {
                "id": 4,
                "name": "protocol",
                "type": "storage.L4Protocol"
              },
              {
                "id": 5,
                "name": "role",
                "type": "ClientServerRole"
              },
              {
                "id": 6,
                "name": "container_id",
                "type": "string"
              },
              {
                "id": 11,
                "name": "close_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NetworkEndpoint",
            "fields": [
              {
                "id": 1,
                "name": "socket_family",
                "type": "SocketFamily"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "storage.L4Protocol"
              },
              {
                "id": 3,
                "name": "listen_address",
                "type": "NetworkAddress"
              },
              {
                "id": 4,
                "name": "container_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "close_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "originator",
                "type": "storage.NetworkProcessUniqueKey"
              }
            ]
          },
          {
            "name": "NetworkAddress",
            "fields": [
              {
                "id": 1,
                "name": "address_data",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "ip_network",
                "type": "bytes"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "internalapi/sensor/network_enums.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:sensor:/:network_connection_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkConnectionInfoMessage",
            "fields": [
              {
                "id": 1,
                "name": "register",
                "type": "CollectorRegisterRequest"
              },
              {
                "id": 2,
                "name": "info",
                "type": "NetworkConnectionInfo"
              }
            ]
          },
          {
            "name": "NetworkFlowsControlMessage",
            "fields": [
              {
                "id": 1,
                "name": "public_ip_addresses",
                "type": "IPAddressList"
              },
              {
                "id": 2,
                "name": "ip_networks",
                "type": "IPNetworkList"
              }
            ]
          },
          {
            "name": "IPAddressList",
            "fields": [
              {
                "id": 1,
                "name": "ipv4_addresses",
                "type": "fixed32",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "ipv6_addresses",
                "type": "fixed64",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IPNetworkList",
            "fields": [
              {
                "id": 1,
                "name": "ipv4_networks",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "ipv6_networks",
                "type": "bytes"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NetworkConnectionInfoService",
            "rpcs": [
              {
                "name": "PushNetworkConnectionInfo",
                "in_type": "NetworkConnectionInfoMessage",
                "out_type": "NetworkFlowsControlMessage",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/sensor/collector.proto"
          },
          {
            "path": "internalapi/sensor/network_connection_info.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:sensor:/:network_enums.proto",
      "def": {
        "enums": [
          {
            "name": "ClientServerRole",
            "enum_fields": [
              {
                "name": "ROLE_UNKNOWN"
              },
              {
                "name": "ROLE_SERVER",
                "integer": 1
              },
              {
                "name": "ROLE_CLIENT",
                "integer": 2
              }
            ]
          },
          {
            "name": "SocketFamily",
            "enum_fields": [
              {
                "name": "SOCKET_FAMILY_UNKNOWN"
              },
              {
                "name": "SOCKET_FAMILY_IPV4",
                "integer": 1
              },
              {
                "name": "SOCKET_FAMILY_IPV6",
                "integer": 2
              }
            ]
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:sensor:/:signal_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "SignalStreamMessage",
            "fields": [
              {
                "id": 1,
                "name": "collector_register_request",
                "type": "CollectorRegisterRequest"
              },
              {
                "id": 2,
                "name": "signal",
                "type": "v1.Signal"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SignalService",
            "rpcs": [
              {
                "name": "PushSignals",
                "in_type": "SignalStreamMessage",
                "out_type": "v1.Empty",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/sensor/collector.proto"
          },
          {
            "path": "api/v1/signal.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:internalapi:/:wrapper:/:splunk_alert.proto",
      "def": {
        "messages": [
          {
            "name": "SplunkEvent",
            "fields": [
              {
                "id": 1,
                "name": "event",
                "type": "google.protobuf.Any"
              },
              {
                "id": 2,
                "name": "source",
                "type": "string"
              },
              {
                "id": 3,
                "name": "sourcetype",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "wrapper"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:scanner:/:api:/:v1:/:component.proto",
      "def": {
        "enums": [
          {
            "name": "SourceType",
            "enum_fields": [
              {
                "name": "UNSET_SOURCE_TYPE"
              },
              {
                "name": "JAVA",
                "integer": 1
              },
              {
                "name": "PYTHON",
                "integer": 2
              },
              {
                "name": "NPM",
                "integer": 3
              },
              {
                "name": "GEM",
                "integer": 4
              },
              {
                "name": "DOTNETCORERUNTIME",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Components",
            "fields": [
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 1,
                "name": "os_components",
                "type": "OSComponent",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "rhel_components",
                "type": "RHELComponent",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "language_components",
                "type": "LanguageComponent",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "rhel_content_sets",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "OSComponent",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "added_by",
                "type": "string"
              },
              {
                "id": 5,
                "name": "executables",
                "type": "Executable",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RHELComponent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "arch",
                "type": "string"
              },
              {
                "id": 6,
                "name": "module",
                "type": "string"
              },
              {
                "id": 7,
                "name": "cpes",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "added_by",
                "type": "string"
              },
              {
                "id": 9,
                "name": "executables",
                "type": "Executable",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LanguageComponent",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "SourceType"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "location",
                "type": "string"
              },
              {
                "id": 5,
                "name": "java",
                "type": "JavaComponent"
              },
              {
                "id": 6,
                "name": "python",
                "type": "PythonComponent"
              },
              {
                "id": 7,
                "name": "added_by",
                "type": "string"
              }
            ]
          },
          {
            "name": "JavaComponent",
            "fields": [
              {
                "id": 1,
                "name": "implementation_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "maven_version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "origins",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "specification_version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "bundle_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "PythonComponent",
            "fields": [
              {
                "id": 1,
                "name": "homepage",
                "type": "string"
              },
              {
                "id": 2,
                "name": "author_email",
                "type": "string"
              },
              {
                "id": 3,
                "name": "download_url",
                "type": "string"
              },
              {
                "id": 4,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 5,
                "name": "description",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "scanner/api/v1/vulnerability.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:scanner:/:api:/:v1:/:empty.proto",
      "def": {
        "messages": [
          {
            "name": "Empty"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:scanner:/:api:/:v1:/:image.proto",
      "def": {
        "messages": [
          {
            "name": "Image",
            "fields": [
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 1,
                "name": "features",
                "type": "Feature",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "scanner/api/v1/vulnerability.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:scanner:/:api:/:v1:/:image_scan_service.proto",
      "def": {
        "enums": [
          {
            "name": "ScanStatus",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "ANALYZING",
                "integer": 1
              },
              {
                "name": "FAILED",
                "integer": 2
              },
              {
                "name": "SUCCEEDED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ScanImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "string"
              },
              {
                "id": 2,
                "name": "registry",
                "type": "RegistryData"
              },
              {
                "id": 3,
                "name": "uncertifiedRHEL",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ScanImageResponse",
            "fields": [
              {
                "id": 3,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "status",
                "type": "ScanStatus"
              },
              {
                "id": 2,
                "name": "image",
                "type": "ImageSpec"
              }
            ]
          },
          {
            "name": "GetImageScanRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_spec",
                "type": "ImageSpec"
              },
              {
                "id": 2,
                "name": "uncertifiedRHEL",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetImageScanResponse",
            "fields": [
              {
                "id": 4,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "status",
                "type": "ScanStatus"
              },
              {
                "id": 2,
                "name": "image",
                "type": "Image"
              },
              {
                "id": 3,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetImageComponentsRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "string"
              },
              {
                "id": 2,
                "name": "registry",
                "type": "RegistryData"
              }
            ]
          },
          {
            "name": "GetImageComponentsResponse",
            "fields": [
              {
                "id": 4,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "status",
                "type": "ScanStatus"
              },
              {
                "id": 2,
                "name": "components",
                "type": "Components"
              },
              {
                "id": 3,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetImageVulnerabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "components",
                "type": "Components"
              },
              {
                "id": 2,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetImageVulnerabilitiesResponse",
            "fields": [
              {
                "id": 3,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "status",
                "type": "ScanStatus"
              },
              {
                "id": 2,
                "name": "image",
                "type": "Image"
              }
            ]
          },
          {
            "name": "GetLanguageLevelComponentsRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_spec",
                "type": "ImageSpec"
              },
              {
                "id": 2,
                "name": "uncertifiedRHEL",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetLanguageLevelComponentsResponse",
            "fields": [
              {
                "id": 2,
                "name": "scanner_version",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "layer_to_components",
                  "type": "LanguageLevelComponents"
                }
              }
            ]
          },
          {
            "name": "ImageSpec",
            "fields": [
              {
                "id": 1,
                "name": "digest",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image",
                "type": "string"
              }
            ]
          },
          {
            "name": "RegistryData",
            "fields": [
              {
                "id": 1,
                "name": "url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "username",
                "type": "string"
              },
              {
                "id": 3,
                "name": "password",
                "type": "string"
              },
              {
                "id": 4,
                "name": "insecure",
                "type": "bool"
              }
            ]
          },
          {
            "name": "LanguageLevelComponents",
            "fields": [
              {
                "id": 1,
                "name": "components",
                "type": "LanguageLevelComponent",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LanguageLevelComponent",
            "fields": [
              {
                "id": 1,
                "name": "source_type",
                "type": "SourceType"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "location",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImageScanService",
            "rpcs": [
              {
                "name": "ScanImage",
                "in_type": "ScanImageRequest",
                "out_type": "ScanImageResponse"
              },
              {
                "name": "GetImageScan",
                "in_type": "GetImageScanRequest",
                "out_type": "GetImageScanResponse"
              },
              {
                "name": "GetImageComponents",
                "in_type": "GetImageComponentsRequest",
                "out_type": "GetImageComponentsResponse"
              },
              {
                "name": "GetImageVulnerabilities",
                "in_type": "GetImageVulnerabilitiesRequest",
                "out_type": "GetImageVulnerabilitiesResponse"
              },
              {
                "name": "GetLanguageLevelComponents",
                "in_type": "GetLanguageLevelComponentsRequest",
                "out_type": "GetLanguageLevelComponentsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "scanner/api/v1/component.proto"
          },
          {
            "path": "scanner/api/v1/image.proto"
          },
          {
            "path": "scanner/api/v1/note.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:scanner:/:api:/:v1:/:metadata_service.proto",
      "def": {
        "messages": [
          {
            "name": "VulnDefsMetadata",
            "fields": [
              {
                "id": 1,
                "name": "last_updated_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "VulnDefsService",
            "rpcs": [
              {
                "name": "GetVulnDefsMetadata",
                "in_type": "Empty",
                "out_type": "VulnDefsMetadata"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "scanner/api/v1/empty.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:scanner:/:api:/:v1:/:node_inventory_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetNodeInventoryResponse",
            "fields": [
              {
                "id": 1,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "components",
                "type": "Components"
              },
              {
                "id": 3,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNodeInventoryRequest"
          }
        ],
        "services": [
          {
            "name": "NodeInventoryService",
            "rpcs": [
              {
                "name": "GetNodeInventory",
                "in_type": "GetNodeInventoryRequest",
                "out_type": "GetNodeInventoryResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "scanner/api/v1/note.proto"
          },
          {
            "path": "scanner/api/v1/component.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:scanner:/:api:/:v1:/:node_scan_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetNodeVulnerabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "os_image",
                "type": "string"
              },
              {
                "id": 2,
                "name": "kernel_version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "kubelet_version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "kubeproxy_version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "runtime",
                "type": "ContainerRuntime"
              },
              {
                "id": 6,
                "name": "components",
                "type": "Components"
              },
              {
                "id": 7,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ContainerRuntime",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "version",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetNodeVulnerabilitiesResponse",
            "fields": [
              {
                "id": 7,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 6,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 1,
                "name": "kernel_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "kubelet_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "kubeproxy_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "runtime_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "kernel_component",
                "type": "KernelComponent"
              },
              {
                "id": 8,
                "name": "node_notes",
                "type": "NodeNote",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "features",
                "type": "Feature",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "KernelComponent",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "version",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NodeScanService",
            "rpcs": [
              {
                "name": "GetNodeVulnerabilities",
                "in_type": "GetNodeVulnerabilitiesRequest",
                "out_type": "GetNodeVulnerabilitiesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "scanner/api/v1/note.proto"
          },
          {
            "path": "scanner/api/v1/vulnerability.proto"
          },
          {
            "path": "scanner/api/v1/component.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:scanner:/:api:/:v1:/:note.proto",
      "def": {
        "enums": [
          {
            "name": "Note",
            "enum_fields": [
              {
                "name": "OS_CVES_UNAVAILABLE"
              },
              {
                "name": "OS_CVES_STALE",
                "integer": 1
              },
              {
                "name": "LANGUAGE_CVES_UNAVAILABLE",
                "integer": 2
              },
              {
                "name": "CERTIFIED_RHEL_SCAN_UNAVAILABLE",
                "integer": 3
              }
            ]
          },
          {
            "name": "NodeNote",
            "enum_fields": [
              {
                "name": "NODE_UNSUPPORTED"
              },
              {
                "name": "NODE_KERNEL_UNSUPPORTED",
                "integer": 1
              },
              {
                "name": "NODE_CERTIFIED_RHEL_CVES_UNAVAILABLE",
                "integer": 2
              }
            ]
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:scanner:/:api:/:v1:/:orchestrator_scan_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetKubeVulnerabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "kubernetes_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetKubeVulnerabilitiesResponse",
            "fields": [
              {
                "id": 6,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "aggregator_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "apiserver_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "controller_manager_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "scheduler_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "generic_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetIstioVulnerabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "istio_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetIstioVulnerabilitiesResponse",
            "fields": [
              {
                "id": 1,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetOpenShiftVulnerabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "openShift_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetOpenShiftVulnerabilitiesResponse",
            "fields": [
              {
                "id": 2,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "OrchestratorScanService",
            "rpcs": [
              {
                "name": "GetKubeVulnerabilities",
                "in_type": "GetKubeVulnerabilitiesRequest",
                "out_type": "GetKubeVulnerabilitiesResponse"
              },
              {
                "name": "GetOpenShiftVulnerabilities",
                "in_type": "GetOpenShiftVulnerabilitiesRequest",
                "out_type": "GetOpenShiftVulnerabilitiesResponse"
              },
              {
                "name": "GetIstioVulnerabilities",
                "in_type": "GetIstioVulnerabilitiesRequest",
                "out_type": "GetIstioVulnerabilitiesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "scanner/api/v1/vulnerability.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:scanner:/:api:/:v1:/:ping_service.proto",
      "def": {
        "messages": [
          {
            "name": "PongMessage",
            "fields": [
              {
                "id": 2,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "status",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PingService",
            "rpcs": [
              {
                "name": "Ping",
                "in_type": "Empty",
                "out_type": "PongMessage"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "scanner/api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:scanner:/:api:/:v1:/:vulnerability.proto",
      "def": {
        "messages": [
          {
            "name": "Feature",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "feature_type",
                "type": "string"
              },
              {
                "id": 5,
                "name": "added_by_layer",
                "type": "string"
              },
              {
                "id": 6,
                "name": "location",
                "type": "string"
              },
              {
                "id": 3,
                "name": "vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 7,
                "name": "provided_executables",
                "type": "Executable",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Executable",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "required_features",
                "type": "FeatureNameVersion",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FeatureNameVersion",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              }
            ]
          },
          {
            "name": "Vulnerability",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "description",
                "type": "string"
              },
              {
                "id": 3,
                "name": "link",
                "type": "string"
              },
              {
                "id": 6,
                "name": "metadata_v2",
                "type": "Metadata"
              },
              {
                "id": 5,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 7,
                "name": "severity",
                "type": "string"
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "Metadata",
            "fields": [
              {
                "id": 1,
                "name": "published_date_time",
                "type": "string"
              },
              {
                "id": 2,
                "name": "last_modified_date_time",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cvss_v2",
                "type": "CVSSMetadata"
              },
              {
                "id": 4,
                "name": "cvss_v3",
                "type": "CVSSMetadata"
              }
            ]
          },
          {
            "name": "CVSSMetadata",
            "fields": [
              {
                "id": 1,
                "name": "vector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "score",
                "type": "float"
              },
              {
                "id": 3,
                "name": "exploitability_score",
                "type": "float"
              },
              {
                "id": 4,
                "name": "impact_score",
                "type": "float"
              }
            ]
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:shared:/:license:/:license.proto",
      "def": {
        "messages": [
          {
            "name": "License",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "Metadata"
              },
              {
                "id": 2,
                "name": "support_contact",
                "type": "Contact"
              },
              {
                "id": 3,
                "name": "restrictions",
                "type": "Restrictions"
              }
            ],
            "messages": [
              {
                "name": "Contact",
                "fields": [
                  {
                    "id": 1,
                    "name": "phone",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "email",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "url",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Metadata",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "signing_key_id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "issue_date",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 4,
                    "name": "licensed_for_id",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "licensed_for_name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Restrictions",
                "fields": [
                  {
                    "id": 1,
                    "name": "not_valid_before",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 2,
                    "name": "not_valid_after",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 3,
                    "name": "enforcement_url",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "allow_offline",
                    "type": "bool"
                  },
                  {
                    "id": 5,
                    "name": "max_nodes",
                    "type": "int32"
                  },
                  {
                    "id": 6,
                    "name": "no_node_restriction",
                    "type": "bool"
                  },
                  {
                    "id": 7,
                    "name": "build_flavors",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 8,
                    "name": "no_build_flavor_restriction",
                    "type": "bool"
                  },
                  {
                    "id": 9,
                    "name": "deployment_environments",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 10,
                    "name": "no_deployment_environment_restriction",
                    "type": "bool"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "license"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:active_component.proto",
      "def": {
        "messages": [
          {
            "name": "ActiveComponent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "component_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "active_contexts_slice",
                "type": "ActiveContext",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "DEPRECATED_active_contexts",
                  "type": "ActiveContext"
                }
              }
            ],
            "messages": [
              {
                "name": "ActiveContext",
                "fields": [
                  {
                    "id": 1,
                    "name": "container_name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "image_id",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:alert.proto",
      "def": {
        "enums": [
          {
            "name": "Resource.ResourceType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "SECRETS",
                "integer": 1
              },
              {
                "name": "CONFIGMAPS",
                "integer": 2
              }
            ]
          },
          {
            "name": "Violation.Type",
            "enum_fields": [
              {
                "name": "GENERIC"
              },
              {
                "name": "K8S_EVENT",
                "integer": 1
              },
              {
                "name": "NETWORK_FLOW",
                "integer": 2
              },
              {
                "name": "NETWORK_POLICY",
                "integer": 3
              }
            ]
          },
          {
            "name": "ListAlert.ResourceType",
            "enum_fields": [
              {
                "name": "DEPLOYMENT"
              },
              {
                "name": "SECRETS",
                "integer": 1
              },
              {
                "name": "CONFIGMAPS",
                "integer": 2
              }
            ]
          },
          {
            "name": "ViolationState",
            "enum_fields": [
              {
                "name": "ACTIVE"
              },
              {
                "name": "SNOOZED",
                "integer": 1
              },
              {
                "name": "RESOLVED",
                "integer": 2
              },
              {
                "name": "ATTEMPTED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Alert",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "policy",
                "type": "Policy"
              },
              {
                "id": 3,
                "name": "lifecycle_stage",
                "type": "LifecycleStage"
              },
              {
                "id": 18,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 19,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 20,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 21,
                "name": "namespace_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "deployment",
                "type": "Deployment"
              },
              {
                "id": 15,
                "name": "image",
                "type": "ContainerImage"
              },
              {
                "id": 16,
                "name": "resource",
                "type": "Resource"
              },
              {
                "id": 5,
                "name": "violations",
                "type": "Violation",
                "is_repeated": true
              },
              {
                "id": 13,
                "name": "process_violation",
                "type": "ProcessViolation"
              },
              {
                "id": 6,
                "name": "enforcement",
                "type": "Enforcement"
              },
              {
                "id": 7,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "first_occurred",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 17,
                "name": "resolved_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 11,
                "name": "state",
                "type": "ViolationState"
              },
              {
                "id": 12,
                "name": "snooze_till",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "reserved_ids": [
              14
            ],
            "messages": [
              {
                "name": "Deployment",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 16,
                    "name": "namespace_id",
                    "type": "string"
                  },
                  {
                    "id": 9,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 10,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 11,
                    "name": "containers",
                    "type": "Container",
                    "is_repeated": true
                  },
                  {
                    "id": 15,
                    "name": "inactive",
                    "type": "bool"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 7,
                      "name": "labels",
                      "type": "string"
                    }
                  },
                  {
                    "key_type": "string",
                    "field": {
                      "id": 14,
                      "name": "annotations",
                      "type": "string"
                    }
                  }
                ],
                "messages": [
                  {
                    "name": "Container",
                    "fields": [
                      {
                        "id": 3,
                        "name": "image",
                        "type": "ContainerImage"
                      },
                      {
                        "id": 10,
                        "name": "name",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Resource",
                "fields": [
                  {
                    "id": 1,
                    "name": "resource_type",
                    "type": "ResourceType"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 6,
                    "name": "namespace_id",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Violation",
                "fields": [
                  {
                    "id": 1,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "key_value_attrs",
                    "type": "KeyValueAttrs"
                  },
                  {
                    "id": 7,
                    "name": "network_flow_info",
                    "type": "NetworkFlowInfo"
                  },
                  {
                    "id": 5,
                    "name": "type",
                    "type": "Type"
                  },
                  {
                    "id": 6,
                    "name": "time",
                    "type": "google.protobuf.Timestamp"
                  }
                ],
                "reserved_ids": [
                  2,
                  3
                ],
                "messages": [
                  {
                    "name": "KeyValueAttrs",
                    "fields": [
                      {
                        "id": 1,
                        "name": "attrs",
                        "type": "KeyValueAttr",
                        "is_repeated": true
                      }
                    ],
                    "messages": [
                      {
                        "name": "KeyValueAttr",
                        "fields": [
                          {
                            "id": 1,
                            "name": "key",
                            "type": "string"
                          },
                          {
                            "id": 2,
                            "name": "value",
                            "type": "string"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "NetworkFlowInfo",
                    "fields": [
                      {
                        "id": 1,
                        "name": "protocol",
                        "type": "storage.L4Protocol"
                      },
                      {
                        "id": 2,
                        "name": "source",
                        "type": "Entity"
                      },
                      {
                        "id": 3,
                        "name": "destination",
                        "type": "Entity"
                      }
                    ],
                    "messages": [
                      {
                        "name": "Entity",
                        "fields": [
                          {
                            "id": 1,
                            "name": "name",
                            "type": "string"
                          },
                          {
                            "id": 2,
                            "name": "entity_type",
                            "type": "storage.NetworkEntityInfo.Type"
                          },
                          {
                            "id": 3,
                            "name": "deployment_namespace",
                            "type": "string"
                          },
                          {
                            "id": 5,
                            "name": "deployment_type",
                            "type": "string"
                          },
                          {
                            "id": 6,
                            "name": "port",
                            "type": "int32"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ProcessViolation",
                "fields": [
                  {
                    "id": 1,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "processes",
                    "type": "ProcessIndicator",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "Enforcement",
                "fields": [
                  {
                    "id": 1,
                    "name": "action",
                    "type": "storage.EnforcementAction"
                  },
                  {
                    "id": 2,
                    "name": "message",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListAlert",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "lifecycle_stage",
                "type": "LifecycleStage"
              },
              {
                "id": 3,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "policy",
                "type": "ListAlertPolicy"
              },
              {
                "id": 6,
                "name": "state",
                "type": "ViolationState"
              },
              {
                "id": 7,
                "name": "enforcement_count",
                "type": "int32"
              },
              {
                "id": 9,
                "name": "enforcement_action",
                "type": "storage.EnforcementAction"
              },
              {
                "id": 10,
                "name": "common_entity_info",
                "type": "CommonEntityInfo"
              },
              {
                "id": 5,
                "name": "deployment",
                "type": "ListAlertDeployment"
              },
              {
                "id": 11,
                "name": "resource",
                "type": "ResourceEntity"
              }
            ],
            "reserved_ids": [
              8
            ],
            "messages": [
              {
                "name": "CommonEntityInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "namespace_id",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "resource_type",
                    "type": "ResourceType"
                  }
                ]
              },
              {
                "name": "ResourceEntity",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListAlertPolicy",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "severity",
                "type": "Severity"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "categories",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "developer_internal_fields",
                "type": "DevFields"
              }
            ],
            "messages": [
              {
                "name": "DevFields",
                "fields": [
                  {
                    "id": 6,
                    "name": "SORT_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListAlertDeployment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "inactive",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "namespace_id",
                "type": "string"
              }
            ],
            "reserved_ids": [
              3
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:api_token.proto",
      "def": {
        "messages": [
          {
            "name": "TokenMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 7,
                "name": "roles",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "issued_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "expiration",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "revoked",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "role",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:auth_provider.proto",
      "def": {
        "messages": [
          {
            "name": "AuthProvider",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "ui_endpoint",
                "type": "string"
              },
              {
                "id": 5,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "login_url",
                "type": "string"
              },
              {
                "id": 8,
                "name": "validated",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "extra_ui_endpoints",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "active",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "required_attributes",
                "type": "RequiredAttribute",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "traits",
                "type": "Traits"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "config",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 13,
                  "name": "claim_mappings",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "RequiredAttribute",
                "fields": [
                  {
                    "id": 1,
                    "name": "attribute_key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "attribute_value",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/traits.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:cluster.proto",
      "def": {
        "enums": [
          {
            "name": "ClusterType",
            "enum_fields": [
              {
                "name": "GENERIC_CLUSTER"
              },
              {
                "name": "KUBERNETES_CLUSTER",
                "integer": 1
              },
              {
                "name": "OPENSHIFT_CLUSTER",
                "integer": 2
              },
              {
                "name": "OPENSHIFT4_CLUSTER",
                "integer": 5
              }
            ],
            "reserved_ids": [
              3,
              4
            ]
          },
          {
            "name": "CollectionMethod",
            "enum_fields": [
              {
                "name": "UNSET_COLLECTION"
              },
              {
                "name": "NO_COLLECTION",
                "integer": 1
              },
              {
                "name": "KERNEL_MODULE",
                "integer": 2
              },
              {
                "name": "EBPF",
                "integer": 3
              },
              {
                "name": "CORE_BPF",
                "integer": 4
              }
            ]
          },
          {
            "name": "ManagerType",
            "enum_fields": [
              {
                "name": "MANAGER_TYPE_UNKNOWN"
              },
              {
                "name": "MANAGER_TYPE_MANUAL",
                "integer": 1
              },
              {
                "name": "MANAGER_TYPE_HELM_CHART",
                "integer": 2
              },
              {
                "name": "MANAGER_TYPE_KUBERNETES_OPERATOR",
                "integer": 3
              }
            ]
          },
          {
            "name": "ClusterUpgradeStatus.Upgradability",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "UP_TO_DATE",
                "integer": 1
              },
              {
                "name": "MANUAL_UPGRADE_REQUIRED",
                "integer": 2
              },
              {
                "name": "AUTO_UPGRADE_POSSIBLE",
                "integer": 3
              },
              {
                "name": "SENSOR_VERSION_HIGHER",
                "integer": 4
              }
            ]
          },
          {
            "name": "UpgradeProcessStatus.UpgradeProcessType",
            "enum_fields": [
              {
                "name": "UPGRADE"
              },
              {
                "name": "CERT_ROTATION",
                "integer": 1
              }
            ]
          },
          {
            "name": "UpgradeProgress.UpgradeState",
            "enum_fields": [
              {
                "name": "UPGRADE_INITIALIZING"
              },
              {
                "name": "UPGRADER_LAUNCHING",
                "integer": 1
              },
              {
                "name": "UPGRADER_LAUNCHED",
                "integer": 2
              },
              {
                "name": "PRE_FLIGHT_CHECKS_COMPLETE",
                "integer": 3
              },
              {
                "name": "UPGRADE_OPERATIONS_DONE",
                "integer": 4
              },
              {
                "name": "UPGRADE_COMPLETE",
                "integer": 10
              },
              {
                "name": "UPGRADE_INITIALIZATION_ERROR",
                "integer": 11
              },
              {
                "name": "PRE_FLIGHT_CHECKS_FAILED",
                "integer": 12
              },
              {
                "name": "UPGRADE_ERROR_ROLLING_BACK",
                "integer": 13
              },
              {
                "name": "UPGRADE_ERROR_ROLLED_BACK",
                "integer": 14
              },
              {
                "name": "UPGRADE_ERROR_ROLLBACK_FAILED",
                "integer": 15
              },
              {
                "name": "UPGRADE_ERROR_UNKNOWN",
                "integer": 16
              },
              {
                "name": "UPGRADE_TIMED_OUT",
                "integer": 17
              }
            ]
          },
          {
            "name": "ClusterHealthStatus.HealthStatusLabel",
            "enum_fields": [
              {
                "name": "UNINITIALIZED"
              },
              {
                "name": "UNAVAILABLE",
                "integer": 1
              },
              {
                "name": "UNHEALTHY",
                "integer": 2
              },
              {
                "name": "DEGRADED",
                "integer": 3
              },
              {
                "name": "HEALTHY",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GoogleProviderMetadata",
            "fields": [
              {
                "id": 1,
                "name": "project",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "AWSProviderMetadata",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "AzureProviderMetadata",
            "fields": [
              {
                "id": 1,
                "name": "subscription_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProviderMetadata",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "string"
              },
              {
                "id": 2,
                "name": "zone",
                "type": "string"
              },
              {
                "id": 3,
                "name": "google",
                "type": "GoogleProviderMetadata"
              },
              {
                "id": 4,
                "name": "aws",
                "type": "AWSProviderMetadata"
              },
              {
                "id": 5,
                "name": "azure",
                "type": "AzureProviderMetadata"
              },
              {
                "id": 15,
                "name": "verified",
                "type": "bool"
              }
            ]
          },
          {
            "name": "OrchestratorMetadata",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "openshift_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "build_date",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "api_versions",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AdmissionControllerConfig",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "timeout_seconds",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "scan_inline",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "disable_bypass",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "enforce_on_updates",
                "type": "bool"
              }
            ]
          },
          {
            "name": "TolerationsConfig",
            "fields": [
              {
                "id": 1,
                "name": "disabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "StaticClusterConfig",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "ClusterType"
              },
              {
                "id": 2,
                "name": "main_image",
                "type": "string"
              },
              {
                "id": 3,
                "name": "central_api_endpoint",
                "type": "string"
              },
              {
                "id": 4,
                "name": "collection_method",
                "type": "CollectionMethod"
              },
              {
                "id": 5,
                "name": "collector_image",
                "type": "string"
              },
              {
                "id": 6,
                "name": "admission_controller",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "admission_controller_updates",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "tolerations_config",
                "type": "TolerationsConfig"
              },
              {
                "id": 9,
                "name": "slim_collector",
                "type": "bool"
              },
              {
                "id": 10,
                "name": "admission_controller_events",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DynamicClusterConfig",
            "fields": [
              {
                "id": 1,
                "name": "admission_controller_config",
                "type": "AdmissionControllerConfig"
              },
              {
                "id": 2,
                "name": "registry_override",
                "type": "string"
              },
              {
                "id": 3,
                "name": "disable_audit_logs",
                "type": "bool"
              }
            ]
          },
          {
            "name": "CompleteClusterConfig",
            "fields": [
              {
                "id": 1,
                "name": "dynamic_config",
                "type": "DynamicClusterConfig"
              },
              {
                "id": 2,
                "name": "static_config",
                "type": "StaticClusterConfig"
              },
              {
                "id": 3,
                "name": "config_fingerprint",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "cluster_labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "SensorDeploymentIdentification",
            "fields": [
              {
                "id": 1,
                "name": "system_namespace_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "default_namespace_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "app_namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "app_namespace_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "app_serviceaccount_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "k8s_node_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "Cluster",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "ClusterType"
              },
              {
                "id": 4,
                "name": "main_image",
                "type": "string"
              },
              {
                "id": 16,
                "name": "collector_image",
                "type": "string"
              },
              {
                "id": 5,
                "name": "central_api_endpoint",
                "type": "string"
              },
              {
                "id": 7,
                "name": "runtime_support",
                "type": "bool"
              },
              {
                "id": 17,
                "name": "collection_method",
                "type": "CollectionMethod"
              },
              {
                "id": 13,
                "name": "admission_controller",
                "type": "bool"
              },
              {
                "id": 21,
                "name": "admission_controller_updates",
                "type": "bool"
              },
              {
                "id": 25,
                "name": "admission_controller_events",
                "type": "bool"
              },
              {
                "id": 15,
                "name": "status",
                "type": "ClusterStatus"
              },
              {
                "id": 18,
                "name": "dynamic_config",
                "type": "DynamicClusterConfig"
              },
              {
                "id": 19,
                "name": "tolerations_config",
                "type": "TolerationsConfig"
              },
              {
                "id": 20,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 22,
                "name": "health_status",
                "type": "ClusterHealthStatus"
              },
              {
                "id": 23,
                "name": "slim_collector",
                "type": "bool"
              },
              {
                "id": 24,
                "name": "helm_config",
                "type": "CompleteClusterConfig"
              },
              {
                "id": 26,
                "name": "most_recent_sensor_id",
                "type": "SensorDeploymentIdentification"
              },
              {
                "id": 29,
                "name": "init_bundle_id",
                "type": "string"
              },
              {
                "id": 30,
                "name": "managed_by",
                "type": "ManagerType"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 27,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 28,
                  "name": "audit_log_state",
                  "type": "AuditLogFileState"
                }
              }
            ],
            "reserved_ids": [
              6,
              8,
              9,
              10,
              11,
              12,
              14
            ]
          },
          {
            "name": "ClusterCertExpiryStatus",
            "fields": [
              {
                "id": 1,
                "name": "sensor_cert_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "sensor_cert_not_before",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ClusterStatus",
            "fields": [
              {
                "id": 1,
                "name": "sensor_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "DEPRECATED_last_contact",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "provider_metadata",
                "type": "ProviderMetadata"
              },
              {
                "id": 4,
                "name": "orchestrator_metadata",
                "type": "OrchestratorMetadata"
              },
              {
                "id": 5,
                "name": "upgrade_status",
                "type": "ClusterUpgradeStatus"
              },
              {
                "id": 6,
                "name": "cert_expiry_status",
                "type": "ClusterCertExpiryStatus"
              }
            ]
          },
          {
            "name": "ClusterUpgradeStatus",
            "fields": [
              {
                "id": 1,
                "name": "upgradability",
                "type": "Upgradability"
              },
              {
                "id": 2,
                "name": "upgradability_status_reason",
                "type": "string"
              },
              {
                "id": 3,
                "name": "most_recent_process",
                "type": "UpgradeProcessStatus"
              }
            ],
            "messages": [
              {
                "name": "UpgradeProcessStatus",
                "fields": [
                  {
                    "id": 1,
                    "name": "active",
                    "type": "bool"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "target_version",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "upgrader_image",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "initiated_at",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 6,
                    "name": "progress",
                    "type": "UpgradeProgress"
                  },
                  {
                    "id": 7,
                    "name": "type",
                    "type": "UpgradeProcessType"
                  }
                ]
              }
            ]
          },
          {
            "name": "UpgradeProgress",
            "fields": [
              {
                "id": 1,
                "name": "upgrade_state",
                "type": "UpgradeState"
              },
              {
                "id": 2,
                "name": "upgrade_status_detail",
                "type": "string"
              },
              {
                "id": 3,
                "name": "since",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "AuditLogFileState",
            "fields": [
              {
                "id": 1,
                "name": "collect_logs_since",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "last_audit_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ClusterHealthStatus",
            "fields": [
              {
                "id": 9,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "collector_health_info",
                "type": "CollectorHealthInfo"
              },
              {
                "id": 8,
                "name": "admission_control_health_info",
                "type": "AdmissionControlHealthInfo"
              },
              {
                "id": 10,
                "name": "scanner_health_info",
                "type": "ScannerHealthInfo"
              },
              {
                "id": 2,
                "name": "sensor_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 3,
                "name": "collector_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 4,
                "name": "overall_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 7,
                "name": "admission_control_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 11,
                "name": "scanner_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 5,
                "name": "last_contact",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "health_info_complete",
                "type": "bool"
              }
            ]
          },
          {
            "name": "CollectorHealthInfo",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "total_desired_pods",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "total_ready_pods",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "total_registered_nodes",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "status_errors",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AdmissionControlHealthInfo",
            "fields": [
              {
                "id": 1,
                "name": "total_desired_pods",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "total_ready_pods",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "status_errors",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScannerHealthInfo",
            "fields": [
              {
                "id": 1,
                "name": "total_desired_analyzer_pods",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "total_ready_analyzer_pods",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "total_desired_db_pods",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "total_ready_db_pods",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "status_errors",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:cluster_init.proto",
      "def": {
        "messages": [
          {
            "name": "InitBundleMeta",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "created_by",
                "type": "User"
              },
              {
                "id": 5,
                "name": "is_revoked",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "expires_at",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:common.proto",
      "def": {
        "messages": [
          {
            "name": "KeyValuePair",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:compliance.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceState",
            "enum_fields": [
              {
                "name": "COMPLIANCE_STATE_UNKNOWN"
              },
              {
                "name": "COMPLIANCE_STATE_SKIP",
                "integer": 1
              },
              {
                "name": "COMPLIANCE_STATE_NOTE",
                "integer": 2
              },
              {
                "name": "COMPLIANCE_STATE_SUCCESS",
                "integer": 3
              },
              {
                "name": "COMPLIANCE_STATE_FAILURE",
                "integer": 4
              },
              {
                "name": "COMPLIANCE_STATE_ERROR",
                "integer": 5
              }
            ]
          },
          {
            "name": "ComplianceAggregation.Scope",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "STANDARD",
                "integer": 1
              },
              {
                "name": "CLUSTER",
                "integer": 2
              },
              {
                "name": "CATEGORY",
                "integer": 3
              },
              {
                "name": "CONTROL",
                "integer": 4
              },
              {
                "name": "NAMESPACE",
                "integer": 5
              },
              {
                "name": "NODE",
                "integer": 6
              },
              {
                "name": "DEPLOYMENT",
                "integer": 7
              },
              {
                "name": "CHECK",
                "integer": 8
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceResource",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "ClusterName"
              },
              {
                "id": 2,
                "name": "deployment",
                "type": "DeploymentName"
              },
              {
                "id": 3,
                "name": "node",
                "type": "NodeName"
              },
              {
                "id": 4,
                "name": "image",
                "type": "ImageName"
              }
            ],
            "messages": [
              {
                "name": "ClusterName",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "DeploymentName",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster",
                    "type": "ClusterName"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "namespace",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "NodeName",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster",
                    "type": "ClusterName"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceResultValue",
            "fields": [
              {
                "id": 1,
                "name": "evidence",
                "type": "Evidence",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "overall_state",
                "type": "ComplianceState"
              }
            ],
            "messages": [
              {
                "name": "Evidence",
                "fields": [
                  {
                    "id": 1,
                    "name": "state",
                    "type": "ComplianceState"
                  },
                  {
                    "id": 2,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "message_id",
                    "type": "int32"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceControlResult",
            "fields": [
              {
                "id": 1,
                "name": "resource",
                "type": "ComplianceResource"
              },
              {
                "id": 2,
                "name": "control_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "ComplianceResultValue"
              }
            ]
          },
          {
            "name": "ComplianceDomain",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "cluster",
                "type": "Cluster"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "nodes",
                  "type": "Node"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "deployments",
                  "type": "Deployment"
                }
              }
            ],
            "messages": [
              {
                "name": "Cluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Node",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "cluster_name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Deployment",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 23,
                    "name": "namespace_id",
                    "type": "string"
                  },
                  {
                    "id": 9,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 10,
                    "name": "cluster_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceRunMetadata",
            "fields": [
              {
                "id": 1,
                "name": "run_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "start_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "finish_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "success",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "error_message",
                "type": "string"
              },
              {
                "id": 8,
                "name": "domain_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceRunResults",
            "fields": [
              {
                "id": 1,
                "name": "domain",
                "type": "ComplianceDomain"
              },
              {
                "id": 2,
                "name": "run_metadata",
                "type": "ComplianceRunMetadata"
              },
              {
                "id": 3,
                "name": "cluster_results",
                "type": "EntityResults"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "node_results",
                  "type": "EntityResults"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "deployment_results",
                  "type": "EntityResults"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "machine_config_results",
                  "type": "EntityResults"
                }
              }
            ],
            "messages": [
              {
                "name": "EntityResults",
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 1,
                      "name": "control_results",
                      "type": "ComplianceResultValue"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceStrings",
            "fields": [
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "strings",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComplianceAggregation",
            "messages": [
              {
                "name": "AggregationKey",
                "fields": [
                  {
                    "id": 1,
                    "name": "scope",
                    "type": "Scope"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Result",
                "fields": [
                  {
                    "id": 1,
                    "name": "aggregation_keys",
                    "type": "AggregationKey",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "unit",
                    "type": "Scope"
                  },
                  {
                    "id": 3,
                    "name": "num_passing",
                    "type": "int32"
                  },
                  {
                    "id": 4,
                    "name": "num_failing",
                    "type": "int32"
                  },
                  {
                    "id": 5,
                    "name": "num_skipped",
                    "type": "int32"
                  }
                ]
              },
              {
                "name": "Source",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "standard_id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "successful_run",
                    "type": "storage.ComplianceRunMetadata"
                  },
                  {
                    "id": 4,
                    "name": "failed_runs",
                    "type": "storage.ComplianceRunMetadata",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "Response",
                "fields": [
                  {
                    "id": 1,
                    "name": "results",
                    "type": "Result",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "sources",
                    "type": "Source",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "error_message",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "PreComputedComplianceAggregation",
            "fields": [
              {
                "id": 1,
                "name": "results",
                "type": "ComplianceAggregation.Result",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "sources",
                "type": "ComplianceAggregation.Source",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "domain_pointers",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:compliance_operator.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceOperatorCheckResult.CheckStatus",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "PASS",
                "integer": 1
              },
              {
                "name": "FAIL",
                "integer": 2
              },
              {
                "name": "ERROR",
                "integer": 3
              },
              {
                "name": "INFO",
                "integer": 4
              },
              {
                "name": "MANUAL",
                "integer": 5
              },
              {
                "name": "NOT_APPLICABLE",
                "integer": 6
              },
              {
                "name": "INCONSISTENT",
                "integer": 7
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceOperatorCheckResult",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "check_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "check_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "status",
                "type": "CheckStatus"
              },
              {
                "id": 6,
                "name": "description",
                "type": "string"
              },
              {
                "id": 7,
                "name": "instructions",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 9,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ComplianceOperatorProfile",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "profile_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "description",
                "type": "string"
              },
              {
                "id": 8,
                "name": "rules",
                "type": "Rule",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Rule",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceOperatorRule",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "rule_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "title",
                "type": "string"
              },
              {
                "id": 8,
                "name": "description",
                "type": "string"
              },
              {
                "id": 9,
                "name": "rationale",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ComplianceOperatorScanSettingBinding",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "profiles",
                "type": "Profile",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Profile",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceOperatorScan",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "profile_id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:config.proto",
      "def": {
        "enums": [
          {
            "name": "BannerConfig.Size",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "SMALL",
                "integer": 1
              },
              {
                "name": "MEDIUM",
                "integer": 2
              },
              {
                "name": "LARGE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "LoginNotice",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "text",
                "type": "string"
              }
            ]
          },
          {
            "name": "BannerConfig",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "text",
                "type": "string"
              },
              {
                "id": 3,
                "name": "size",
                "type": "Size"
              },
              {
                "id": 4,
                "name": "color",
                "type": "string"
              },
              {
                "id": 5,
                "name": "background_color",
                "type": "string"
              }
            ]
          },
          {
            "name": "PublicConfig",
            "fields": [
              {
                "id": 1,
                "name": "login_notice",
                "type": "LoginNotice"
              },
              {
                "id": 2,
                "name": "header",
                "type": "BannerConfig"
              },
              {
                "id": 3,
                "name": "footer",
                "type": "BannerConfig"
              },
              {
                "id": 4,
                "name": "telemetry",
                "type": "TelemetryConfiguration"
              }
            ]
          },
          {
            "name": "AlertRetentionConfig",
            "fields": [
              {
                "id": 1,
                "name": "resolved_deploy_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "deleted_runtime_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "all_runtime_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "attempted_deploy_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "attempted_runtime_retention_duration_days",
                "type": "int32"
              }
            ]
          },
          {
            "name": "DecommissionedClusterRetentionConfig",
            "fields": [
              {
                "id": 1,
                "name": "retention_duration_days",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "ignore_cluster_labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PrivateConfig",
            "fields": [
              {
                "id": 1,
                "name": "DEPRECATED_alert_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "alert_config",
                "type": "AlertRetentionConfig"
              },
              {
                "id": 2,
                "name": "image_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "expired_vuln_req_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "decommissioned_cluster_retention",
                "type": "DecommissionedClusterRetentionConfig"
              }
            ]
          },
          {
            "name": "Config",
            "fields": [
              {
                "id": 1,
                "name": "public_config",
                "type": "PublicConfig"
              },
              {
                "id": 2,
                "name": "private_config",
                "type": "PrivateConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/telemetry.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:container_runtime.proto",
      "def": {
        "enums": [
          {
            "name": "ContainerRuntime",
            "enum_fields": [
              {
                "name": "UNKNOWN_CONTAINER_RUNTIME"
              },
              {
                "name": "DOCKER_CONTAINER_RUNTIME",
                "integer": 1
              },
              {
                "name": "CRIO_CONTAINER_RUNTIME",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ContainerRuntimeInfo",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "ContainerRuntime"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:cve.proto",
      "def": {
        "enums": [
          {
            "name": "VulnerabilityState",
            "enum_fields": [
              {
                "name": "OBSERVED"
              },
              {
                "name": "DEFERRED",
                "integer": 1
              },
              {
                "name": "FALSE_POSITIVE",
                "integer": 2
              }
            ]
          },
          {
            "name": "VulnerabilitySeverity",
            "enum_fields": [
              {
                "name": "UNKNOWN_VULNERABILITY_SEVERITY"
              },
              {
                "name": "LOW_VULNERABILITY_SEVERITY",
                "integer": 1
              },
              {
                "name": "MODERATE_VULNERABILITY_SEVERITY",
                "integer": 2
              },
              {
                "name": "IMPORTANT_VULNERABILITY_SEVERITY",
                "integer": 3
              },
              {
                "name": "CRITICAL_VULNERABILITY_SEVERITY",
                "integer": 4
              }
            ]
          },
          {
            "name": "CVE.CVEType",
            "enum_fields": [
              {
                "name": "UNKNOWN_CVE"
              },
              {
                "name": "IMAGE_CVE",
                "integer": 1
              },
              {
                "name": "K8S_CVE",
                "integer": 2
              },
              {
                "name": "ISTIO_CVE",
                "integer": 3
              },
              {
                "name": "NODE_CVE",
                "integer": 4
              },
              {
                "name": "OPENSHIFT_CVE",
                "integer": 5
              }
            ]
          },
          {
            "name": "CVE.ScoreVersion",
            "enum_fields": [
              {
                "name": "V2"
              },
              {
                "name": "V3",
                "integer": 1
              },
              {
                "name": "UNKNOWN",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVEInfo.ScoreVersion",
            "enum_fields": [
              {
                "name": "V2"
              },
              {
                "name": "V3",
                "integer": 1
              },
              {
                "name": "UNKNOWN",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.Impact",
            "enum_fields": [
              {
                "name": "IMPACT_NONE"
              },
              {
                "name": "IMPACT_PARTIAL",
                "integer": 1
              },
              {
                "name": "IMPACT_COMPLETE",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.AttackVector",
            "enum_fields": [
              {
                "name": "ATTACK_LOCAL"
              },
              {
                "name": "ATTACK_ADJACENT",
                "integer": 1
              },
              {
                "name": "ATTACK_NETWORK",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.AccessComplexity",
            "enum_fields": [
              {
                "name": "ACCESS_HIGH"
              },
              {
                "name": "ACCESS_MEDIUM",
                "integer": 1
              },
              {
                "name": "ACCESS_LOW",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.Authentication",
            "enum_fields": [
              {
                "name": "AUTH_MULTIPLE"
              },
              {
                "name": "AUTH_SINGLE",
                "integer": 1
              },
              {
                "name": "AUTH_NONE",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.Severity",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "LOW",
                "integer": 1
              },
              {
                "name": "MEDIUM",
                "integer": 2
              },
              {
                "name": "HIGH",
                "integer": 3
              }
            ]
          },
          {
            "name": "CVSSV3.Impact",
            "enum_fields": [
              {
                "name": "IMPACT_NONE"
              },
              {
                "name": "IMPACT_LOW",
                "integer": 1
              },
              {
                "name": "IMPACT_HIGH",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV3.AttackVector",
            "enum_fields": [
              {
                "name": "ATTACK_LOCAL"
              },
              {
                "name": "ATTACK_ADJACENT",
                "integer": 1
              },
              {
                "name": "ATTACK_NETWORK",
                "integer": 2
              },
              {
                "name": "ATTACK_PHYSICAL",
                "integer": 3
              }
            ]
          },
          {
            "name": "CVSSV3.Complexity",
            "enum_fields": [
              {
                "name": "COMPLEXITY_LOW"
              },
              {
                "name": "COMPLEXITY_HIGH",
                "integer": 1
              }
            ]
          },
          {
            "name": "CVSSV3.Privileges",
            "enum_fields": [
              {
                "name": "PRIVILEGE_NONE"
              },
              {
                "name": "PRIVILEGE_LOW",
                "integer": 1
              },
              {
                "name": "PRIVILEGE_HIGH",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV3.UserInteraction",
            "enum_fields": [
              {
                "name": "UI_NONE"
              },
              {
                "name": "UI_REQUIRED",
                "integer": 1
              }
            ]
          },
          {
            "name": "CVSSV3.Scope",
            "enum_fields": [
              {
                "name": "UNCHANGED"
              },
              {
                "name": "CHANGED",
                "integer": 1
              }
            ]
          },
          {
            "name": "CVSSV3.Severity",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "NONE",
                "integer": 1
              },
              {
                "name": "LOW",
                "integer": 2
              },
              {
                "name": "MEDIUM",
                "integer": 3
              },
              {
                "name": "HIGH",
                "integer": 4
              },
              {
                "name": "CRITICAL",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CVE",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 14,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 3,
                "name": "type",
                "type": "CVEType"
              },
              {
                "id": 18,
                "name": "types",
                "type": "CVEType",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 5,
                "name": "link",
                "type": "string"
              },
              {
                "id": 6,
                "name": "published_on",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 15,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "last_modified",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "references",
                "type": "Reference",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "score_version",
                "type": "ScoreVersion"
              },
              {
                "id": 10,
                "name": "cvss_v2",
                "type": "CVSSV2"
              },
              {
                "id": 11,
                "name": "cvss_v3",
                "type": "CVSSV3"
              },
              {
                "id": 12,
                "name": "suppressed",
                "type": "bool"
              },
              {
                "id": 16,
                "name": "suppress_activation",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 17,
                "name": "suppress_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 20,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 19,
                  "name": "distro_specifics",
                  "type": "DistroSpecific"
                }
              }
            ],
            "reserved_ids": [
              22,
              21
            ],
            "messages": [
              {
                "name": "DistroSpecific",
                "fields": [
                  {
                    "id": 1,
                    "name": "severity",
                    "type": "VulnerabilitySeverity"
                  },
                  {
                    "id": 2,
                    "name": "cvss",
                    "type": "float"
                  },
                  {
                    "id": 3,
                    "name": "score_version",
                    "type": "ScoreVersion"
                  },
                  {
                    "id": 4,
                    "name": "cvss_v2",
                    "type": "CVSSV2"
                  },
                  {
                    "id": 5,
                    "name": "cvss_v3",
                    "type": "CVSSV3"
                  }
                ]
              },
              {
                "name": "Reference",
                "fields": [
                  {
                    "id": 1,
                    "name": "URI",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "tags",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "CVEInfo",
            "fields": [
              {
                "id": 1,
                "name": "cve",
                "type": "string"
              },
              {
                "id": 2,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 3,
                "name": "link",
                "type": "string"
              },
              {
                "id": 4,
                "name": "published_on",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "last_modified",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "score_version",
                "type": "ScoreVersion"
              },
              {
                "id": 8,
                "name": "cvss_v2",
                "type": "CVSSV2"
              },
              {
                "id": 9,
                "name": "cvss_v3",
                "type": "CVSSV3"
              },
              {
                "id": 10,
                "name": "references",
                "type": "Reference",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Reference",
                "fields": [
                  {
                    "id": 1,
                    "name": "URI",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "tags",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ImageCVE",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cve_base_info",
                "type": "CVEInfo"
              },
              {
                "id": 3,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 5,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 6,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 7,
                "name": "snoozed",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "snooze_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "snooze_expiry",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NodeCVE",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cve_base_info",
                "type": "CVEInfo"
              },
              {
                "id": 3,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 5,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 6,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 7,
                "name": "snoozed",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "snooze_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "snooze_expiry",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ClusterCVE",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cve_base_info",
                "type": "CVEInfo"
              },
              {
                "id": 3,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 4,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 5,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 6,
                "name": "snoozed",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "snooze_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "snooze_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "type",
                "type": "CVE.CVEType"
              }
            ]
          },
          {
            "name": "CVSSV2",
            "fields": [
              {
                "id": 1,
                "name": "vector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "attack_vector",
                "type": "AttackVector"
              },
              {
                "id": 3,
                "name": "access_complexity",
                "type": "AccessComplexity"
              },
              {
                "id": 4,
                "name": "authentication",
                "type": "Authentication"
              },
              {
                "id": 5,
                "name": "confidentiality",
                "type": "Impact"
              },
              {
                "id": 6,
                "name": "integrity",
                "type": "Impact"
              },
              {
                "id": 7,
                "name": "availability",
                "type": "Impact"
              },
              {
                "id": 8,
                "name": "exploitability_score",
                "type": "float"
              },
              {
                "id": 9,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 10,
                "name": "score",
                "type": "float"
              },
              {
                "id": 11,
                "name": "severity",
                "type": "Severity"
              }
            ]
          },
          {
            "name": "CVSSV3",
            "fields": [
              {
                "id": 1,
                "name": "vector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "exploitability_score",
                "type": "float"
              },
              {
                "id": 3,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 4,
                "name": "attack_vector",
                "type": "AttackVector"
              },
              {
                "id": 5,
                "name": "attack_complexity",
                "type": "Complexity"
              },
              {
                "id": 6,
                "name": "privileges_required",
                "type": "Privileges"
              },
              {
                "id": 7,
                "name": "user_interaction",
                "type": "UserInteraction"
              },
              {
                "id": 8,
                "name": "scope",
                "type": "Scope"
              },
              {
                "id": 9,
                "name": "confidentiality",
                "type": "Impact"
              },
              {
                "id": 10,
                "name": "integrity",
                "type": "Impact"
              },
              {
                "id": 11,
                "name": "availability",
                "type": "Impact"
              },
              {
                "id": 12,
                "name": "score",
                "type": "float"
              },
              {
                "id": 13,
                "name": "severity",
                "type": "Severity"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:deployment.proto",
      "def": {
        "enums": [
          {
            "name": "Volume.MountPropagation",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "HOST_TO_CONTAINER",
                "integer": 1
              },
              {
                "name": "BIDIRECTIONAL",
                "integer": 2
              }
            ]
          },
          {
            "name": "PortConfig.ExposureLevel",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "EXTERNAL",
                "integer": 1
              },
              {
                "name": "NODE",
                "integer": 2
              },
              {
                "name": "INTERNAL",
                "integer": 3
              },
              {
                "name": "HOST",
                "integer": 4
              },
              {
                "name": "ROUTE",
                "integer": 5
              }
            ]
          },
          {
            "name": "EnvironmentConfig.EnvVarSource",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "RAW",
                "integer": 1
              },
              {
                "name": "SECRET_KEY",
                "integer": 2
              },
              {
                "name": "CONFIG_MAP_KEY",
                "integer": 3
              },
              {
                "name": "FIELD",
                "integer": 4
              },
              {
                "name": "RESOURCE_FIELD",
                "integer": 5
              },
              {
                "name": "UNKNOWN",
                "integer": 6
              }
            ]
          },
          {
            "name": "SeccompProfile.ProfileType",
            "enum_fields": [
              {
                "name": "UNCONFINED"
              },
              {
                "name": "RUNTIME_DEFAULT",
                "integer": 1
              },
              {
                "name": "LOCALHOST",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Deployment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 26,
                "name": "hash",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "type",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 23,
                "name": "namespace_id",
                "type": "string"
              },
              {
                "id": 33,
                "name": "orchestrator_component",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "replicas",
                "type": "int64"
              },
              {
                "id": 20,
                "name": "label_selector",
                "type": "LabelSelector"
              },
              {
                "id": 8,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 10,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "containers",
                "type": "Container",
                "is_repeated": true
              },
              {
                "id": 15,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 16,
                "name": "inactive",
                "type": "bool"
              },
              {
                "id": 17,
                "name": "image_pull_secrets",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 28,
                "name": "service_account_permission_level",
                "type": "PermissionLevel"
              },
              {
                "id": 25,
                "name": "automount_service_account_token",
                "type": "bool"
              },
              {
                "id": 21,
                "name": "host_network",
                "type": "bool"
              },
              {
                "id": 31,
                "name": "host_pid",
                "type": "bool"
              },
              {
                "id": 32,
                "name": "host_ipc",
                "type": "bool"
              },
              {
                "id": 34,
                "name": "runtime_class",
                "type": "string"
              },
              {
                "id": 22,
                "name": "tolerations",
                "type": "Toleration",
                "is_repeated": true
              },
              {
                "id": 24,
                "name": "ports",
                "type": "PortConfig",
                "is_repeated": true
              },
              {
                "id": 27,
                "name": "state_timestamp",
                "type": "int64"
              },
              {
                "id": 29,
                "name": "risk_score",
                "type": "float"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 19,
                  "name": "pod_labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 14,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "reserved_ids": [
              3,
              12,
              30
            ]
          },
          {
            "name": "ContainerImage",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "name",
                "type": "ImageName"
              },
              {
                "id": 10,
                "name": "not_pullable",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "is_cluster_local",
                "type": "bool"
              }
            ],
            "reserved_ids": [
              2,
              3,
              5,
              6,
              7,
              8,
              9
            ]
          },
          {
            "name": "Container",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "config",
                "type": "ContainerConfig"
              },
              {
                "id": 3,
                "name": "image",
                "type": "ContainerImage"
              },
              {
                "id": 4,
                "name": "security_context",
                "type": "SecurityContext"
              },
              {
                "id": 5,
                "name": "volumes",
                "type": "Volume",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "ports",
                "type": "PortConfig",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "secrets",
                "type": "EmbeddedSecret",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "resources",
                "type": "Resources"
              },
              {
                "id": 10,
                "name": "name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "liveness_probe",
                "type": "LivenessProbe"
              },
              {
                "id": 12,
                "name": "readiness_probe",
                "type": "ReadinessProbe"
              }
            ],
            "reserved_ids": [
              9
            ]
          },
          {
            "name": "Resources",
            "fields": [
              {
                "id": 1,
                "name": "cpu_cores_request",
                "type": "float"
              },
              {
                "id": 2,
                "name": "cpu_cores_limit",
                "type": "float"
              },
              {
                "id": 3,
                "name": "memory_mb_request",
                "type": "float"
              },
              {
                "id": 4,
                "name": "memory_mb_limit",
                "type": "float"
              }
            ]
          },
          {
            "name": "Volume",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "source",
                "type": "string"
              },
              {
                "id": 3,
                "name": "destination",
                "type": "string"
              },
              {
                "id": 4,
                "name": "read_only",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "type",
                "type": "string"
              },
              {
                "id": 6,
                "name": "mount_propagation",
                "type": "MountPropagation"
              }
            ]
          },
          {
            "name": "LivenessProbe",
            "fields": [
              {
                "id": 1,
                "name": "defined",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ReadinessProbe",
            "fields": [
              {
                "id": 1,
                "name": "defined",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Pod",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "live_instances",
                "type": "ContainerInstance",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "terminated_instances",
                "type": "ContainerInstanceList",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "started",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "messages": [
              {
                "name": "ContainerInstanceList",
                "fields": [
                  {
                    "id": 1,
                    "name": "instances",
                    "type": "ContainerInstance",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ContainerInstance",
            "fields": [
              {
                "id": 1,
                "name": "instance_id",
                "type": "ContainerInstanceID"
              },
              {
                "id": 2,
                "name": "containing_pod_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "container_ips",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "started",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "image_digest",
                "type": "string"
              },
              {
                "id": 7,
                "name": "finished",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "exit_code",
                "type": "int32"
              },
              {
                "id": 9,
                "name": "termination_reason",
                "type": "string"
              }
            ]
          },
          {
            "name": "ContainerInstanceID",
            "fields": [
              {
                "id": 1,
                "name": "container_runtime",
                "type": "ContainerRuntime"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "node",
                "type": "string"
              }
            ]
          },
          {
            "name": "EmbeddedSecret",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              }
            ]
          },
          {
            "name": "PortConfig",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_port",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "string"
              },
              {
                "id": 4,
                "name": "exposure",
                "type": "ExposureLevel"
              },
              {
                "id": 5,
                "name": "exposed_port",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "exposure_infos",
                "type": "ExposureInfo",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ExposureInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "level",
                    "type": "ExposureLevel"
                  },
                  {
                    "id": 2,
                    "name": "service_name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "service_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "service_cluster_ip",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "service_port",
                    "type": "int32"
                  },
                  {
                    "id": 6,
                    "name": "node_port",
                    "type": "int32"
                  },
                  {
                    "id": 7,
                    "name": "external_ips",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 8,
                    "name": "external_hostnames",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ContainerConfig",
            "fields": [
              {
                "id": 1,
                "name": "env",
                "type": "EnvironmentConfig",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "command",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "args",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "directory",
                "type": "string"
              },
              {
                "id": 5,
                "name": "user",
                "type": "string"
              },
              {
                "id": 6,
                "name": "uid",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "app_armor_profile",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "EnvironmentConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "env_var_source",
                    "type": "EnvVarSource"
                  }
                ]
              }
            ]
          },
          {
            "name": "SecurityContext",
            "fields": [
              {
                "id": 1,
                "name": "privileged",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "selinux",
                "type": "SELinux"
              },
              {
                "id": 3,
                "name": "drop_capabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "add_capabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "read_only_root_filesystem",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "seccomp_profile",
                "type": "SeccompProfile"
              },
              {
                "id": 7,
                "name": "allow_privilege_escalation",
                "type": "bool"
              }
            ],
            "messages": [
              {
                "name": "SELinux",
                "fields": [
                  {
                    "id": 1,
                    "name": "user",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "role",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "level",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "SeccompProfile",
                "fields": [
                  {
                    "id": 1,
                    "name": "type",
                    "type": "ProfileType"
                  },
                  {
                    "id": 2,
                    "name": "localhost_profile",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListDeployment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "hash",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 6,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "priority",
                "type": "int64"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/container_runtime.proto"
          },
          {
            "path": "storage/labels.proto"
          },
          {
            "path": "storage/image.proto"
          },
          {
            "path": "storage/taints.proto"
          },
          {
            "path": "storage/rbac.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:external_backup.proto",
      "def": {
        "messages": [
          {
            "name": "ExternalBackup",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "schedule",
                "type": "storage.Schedule"
              },
              {
                "id": 5,
                "name": "backups_to_keep",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "s3",
                "type": "S3Config"
              },
              {
                "id": 7,
                "name": "gcs",
                "type": "GCSConfig"
              },
              {
                "id": 8,
                "name": "include_certificates",
                "type": "bool"
              }
            ]
          },
          {
            "name": "S3Config",
            "fields": [
              {
                "id": 1,
                "name": "bucket",
                "type": "string"
              },
              {
                "id": 2,
                "name": "use_iam",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "access_key_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "secret_access_key",
                "type": "string"
              },
              {
                "id": 5,
                "name": "region",
                "type": "string"
              },
              {
                "id": 6,
                "name": "object_prefix",
                "type": "string"
              },
              {
                "id": 7,
                "name": "endpoint",
                "type": "string"
              }
            ]
          },
          {
            "name": "GCSConfig",
            "fields": [
              {
                "id": 1,
                "name": "bucket",
                "type": "string"
              },
              {
                "id": 2,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 3,
                "name": "object_prefix",
                "type": "string"
              },
              {
                "id": 4,
                "name": "use_workload_id",
                "type": "bool"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/schedule.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:group.proto",
      "def": {
        "messages": [
          {
            "name": "Group",
            "fields": [
              {
                "id": 1,
                "name": "props",
                "type": "GroupProperties"
              },
              {
                "id": 3,
                "name": "role_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GroupProperties",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "traits",
                "type": "Traits"
              },
              {
                "id": 1,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/traits.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:hash.proto",
      "def": {
        "messages": [
          {
            "name": "Hash",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "hashes",
                  "type": "uint64"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:helm_cluster.proto",
      "def": {
        "messages": [
          {
            "name": "HelmCluster",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "Cluster"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:http_endpoint.proto",
      "def": {
        "messages": [
          {
            "name": "HTTPEndpointConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "skip_tls_verify",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "ca_cert",
                "type": "string"
              },
              {
                "id": 4,
                "name": "username",
                "type": "string"
              },
              {
                "id": 5,
                "name": "password",
                "type": "string"
              },
              {
                "id": 6,
                "name": "headers",
                "type": "KeyValuePair",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "client_cert_pem",
                "type": "string"
              },
              {
                "id": 8,
                "name": "client_key_pem",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/common.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:image.proto",
      "def": {
        "enums": [
          {
            "name": "Image.Note",
            "enum_fields": [
              {
                "name": "MISSING_METADATA"
              },
              {
                "name": "MISSING_SCAN_DATA",
                "integer": 1
              },
              {
                "name": "MISSING_SIGNATURE",
                "integer": 2
              },
              {
                "name": "MISSING_SIGNATURE_VERIFICATION_DATA",
                "integer": 3
              }
            ]
          },
          {
            "name": "ImageScan.Note",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "OS_UNAVAILABLE",
                "integer": 1
              },
              {
                "name": "PARTIAL_SCAN_DATA",
                "integer": 2
              },
              {
                "name": "OS_CVES_UNAVAILABLE",
                "integer": 3
              },
              {
                "name": "OS_CVES_STALE",
                "integer": 4
              },
              {
                "name": "LANGUAGE_CVES_UNAVAILABLE",
                "integer": 5
              },
              {
                "name": "CERTIFIED_RHEL_SCAN_UNAVAILABLE",
                "integer": 6
              }
            ]
          },
          {
            "name": "ImageSignatureVerificationResult.Status",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "VERIFIED",
                "integer": 1
              },
              {
                "name": "FAILED_VERIFICATION",
                "integer": 2
              },
              {
                "name": "INVALID_SIGNATURE_ALGO",
                "integer": 3
              },
              {
                "name": "CORRUPTED_SIGNATURE",
                "integer": 4
              },
              {
                "name": "GENERIC_ERROR",
                "integer": 5
              }
            ]
          },
          {
            "name": "SourceType",
            "enum_fields": [
              {
                "name": "OS"
              },
              {
                "name": "PYTHON",
                "integer": 1
              },
              {
                "name": "JAVA",
                "integer": 2
              },
              {
                "name": "RUBY",
                "integer": 3
              },
              {
                "name": "NODEJS",
                "integer": 4
              },
              {
                "name": "DOTNETCORERUNTIME",
                "integer": 5
              },
              {
                "name": "INFRASTRUCTURE",
                "integer": 6
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Image",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "name",
                "type": "ImageName"
              },
              {
                "id": 18,
                "name": "names",
                "type": "ImageName",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "metadata",
                "type": "ImageMetadata"
              },
              {
                "id": 3,
                "name": "scan",
                "type": "ImageScan"
              },
              {
                "id": 15,
                "name": "signature_verification_data",
                "type": "ImageSignatureVerificationData"
              },
              {
                "id": 16,
                "name": "signature",
                "type": "ImageSignature"
              },
              {
                "id": 7,
                "name": "components",
                "type": "int32"
              },
              {
                "id": 8,
                "name": "cves",
                "type": "int32"
              },
              {
                "id": 9,
                "name": "fixable_cves",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "not_pullable",
                "type": "bool"
              },
              {
                "id": 17,
                "name": "is_cluster_local",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 12,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 13,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 14,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              6
            ]
          },
          {
            "name": "DataSource",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImageScan",
            "fields": [
              {
                "id": 6,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "scan_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "components",
                "type": "EmbeddedImageScanComponent",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 3,
                "name": "data_source",
                "type": "DataSource"
              },
              {
                "id": 5,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ImageSignatureVerificationData",
            "fields": [
              {
                "id": 1,
                "name": "results",
                "type": "ImageSignatureVerificationResult",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ImageSignatureVerificationResult",
            "fields": [
              {
                "id": 1,
                "name": "verification_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "verifier_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "verified_image_references",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EmbeddedImageScanComponent",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "license",
                "type": "License"
              },
              {
                "id": 4,
                "name": "vulns",
                "type": "EmbeddedVulnerability",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "layer_index",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "source",
                "type": "SourceType"
              },
              {
                "id": 8,
                "name": "location",
                "type": "string"
              },
              {
                "id": 9,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 10,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 11,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 12,
                "name": "executables",
                "type": "Executable",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Executable",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "dependencies",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "License",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "url",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImageMetadata",
            "fields": [
              {
                "id": 1,
                "name": "v1",
                "type": "V1Metadata"
              },
              {
                "id": 2,
                "name": "v2",
                "type": "V2Metadata"
              },
              {
                "id": 3,
                "name": "layer_shas",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "data_source",
                "type": "DataSource"
              },
              {
                "id": 5,
                "name": "version",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ImageSignature",
            "fields": [
              {
                "id": 1,
                "name": "signatures",
                "type": "Signature",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "fetched",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "Signature",
            "fields": [
              {
                "id": 1,
                "name": "cosign",
                "type": "CosignSignature"
              }
            ]
          },
          {
            "name": "CosignSignature",
            "fields": [
              {
                "id": 1,
                "name": "raw_signature",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "signature_payload",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "V2Metadata",
            "fields": [
              {
                "id": 1,
                "name": "digest",
                "type": "string"
              }
            ]
          },
          {
            "name": "V1Metadata",
            "fields": [
              {
                "id": 1,
                "name": "digest",
                "type": "string"
              },
              {
                "id": 2,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "author",
                "type": "string"
              },
              {
                "id": 4,
                "name": "layers",
                "type": "ImageLayer",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "user",
                "type": "string"
              },
              {
                "id": 6,
                "name": "command",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "entrypoint",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "volumes",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 9,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ImageLayer",
            "fields": [
              {
                "id": 1,
                "name": "instruction",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "author",
                "type": "string"
              },
              {
                "id": 6,
                "name": "empty",
                "type": "bool"
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "ImageName",
            "fields": [
              {
                "id": 1,
                "name": "registry",
                "type": "string"
              },
              {
                "id": 2,
                "name": "remote",
                "type": "string"
              },
              {
                "id": 3,
                "name": "tag",
                "type": "string"
              },
              {
                "id": 4,
                "name": "full_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListImage",
            "fields": [
              {
                "id": 7,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "components",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "cves",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "fixable_cves",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "priority",
                "type": "int64"
              }
            ],
            "reserved_ids": [
              9
            ]
          },
          {
            "name": "WatchedImage",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/vulnerability.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:image_component.proto",
      "def": {
        "messages": [
          {
            "name": "ImageComponent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "license",
                "type": "License"
              },
              {
                "id": 5,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "source",
                "type": "SourceType"
              },
              {
                "id": 7,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 8,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 9,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 10,
                "name": "operating_system",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:image_integration.proto",
      "def": {
        "enums": [
          {
            "name": "ImageIntegrationCategory",
            "enum_fields": [
              {
                "name": "REGISTRY"
              },
              {
                "name": "SCANNER",
                "integer": 1
              },
              {
                "name": "NODE_SCANNER",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ImageIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 6,
                "name": "categories",
                "type": "ImageIntegrationCategory",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "clairify",
                "type": "ClairifyConfig"
              },
              {
                "id": 9,
                "name": "docker",
                "type": "DockerConfig"
              },
              {
                "id": 10,
                "name": "quay",
                "type": "QuayConfig"
              },
              {
                "id": 11,
                "name": "ecr",
                "type": "ECRConfig"
              },
              {
                "id": 13,
                "name": "google",
                "type": "GoogleConfig"
              },
              {
                "id": 14,
                "name": "clair",
                "type": "ClairConfig"
              },
              {
                "id": 22,
                "name": "clair_v4",
                "type": "ClairV4Config"
              },
              {
                "id": 20,
                "name": "ibm",
                "type": "IBMRegistryConfig"
              },
              {
                "id": 15,
                "name": "autogenerated",
                "type": "bool"
              },
              {
                "id": 16,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 18,
                "name": "skip_test_integration",
                "type": "bool"
              },
              {
                "id": 21,
                "name": "source",
                "type": "Source"
              }
            ],
            "reserved_ids": [
              4,
              5,
              7,
              12,
              17,
              19
            ],
            "messages": [
              {
                "name": "Source",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "image_pull_secret_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "IBMRegistryConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "api_key",
                "type": "string"
              }
            ]
          },
          {
            "name": "QuayConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "oauthToken",
                "type": "string"
              },
              {
                "id": 3,
                "name": "insecure",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "registry_robot_credentials",
                "type": "RobotAccount"
              }
            ],
            "messages": [
              {
                "name": "RobotAccount",
                "fields": [
                  {
                    "id": 1,
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "password",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ClairConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "insecure",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ClairV4Config",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "insecure",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ClairifyConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 3,
                "name": "grpc_endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "num_concurrent_scans",
                "type": "int32"
              }
            ]
          },
          {
            "name": "DockerConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "username",
                "type": "string"
              },
              {
                "id": 3,
                "name": "password",
                "type": "string"
              },
              {
                "id": 4,
                "name": "insecure",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ECRConfig",
            "fields": [
              {
                "id": 1,
                "name": "registry_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "access_key_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "secret_access_key",
                "type": "string"
              },
              {
                "id": 4,
                "name": "region",
                "type": "string"
              },
              {
                "id": 5,
                "name": "use_iam",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 7,
                "name": "use_assume_role",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "assume_role_id",
                "type": "string"
              },
              {
                "id": 9,
                "name": "assume_role_external_id",
                "type": "string"
              },
              {
                "id": 10,
                "name": "authorization_data",
                "type": "AuthorizationData"
              }
            ],
            "messages": [
              {
                "name": "AuthorizationData",
                "fields": [
                  {
                    "id": 1,
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "password",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "expires_at",
                    "type": "google.protobuf.Timestamp"
                  }
                ]
              }
            ]
          },
          {
            "name": "GoogleConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 3,
                "name": "project",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:installation.proto",
      "def": {
        "messages": [
          {
            "name": "InstallationInfo",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:integration_health.proto",
      "def": {
        "enums": [
          {
            "name": "IntegrationHealth.Status",
            "enum_fields": [
              {
                "name": "UNINITIALIZED"
              },
              {
                "name": "UNHEALTHY",
                "integer": 1
              },
              {
                "name": "HEALTHY",
                "integer": 2
              }
            ]
          },
          {
            "name": "IntegrationHealth.Type",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "IMAGE_INTEGRATION",
                "integer": 1
              },
              {
                "name": "NOTIFIER",
                "integer": 2
              },
              {
                "name": "BACKUP",
                "integer": 3
              },
              {
                "name": "DECLARATIVE_CONFIG",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "IntegrationHealth",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 4,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 5,
                "name": "error_message",
                "type": "string"
              },
              {
                "id": 6,
                "name": "last_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:kube_event.proto",
      "def": {
        "enums": [
          {
            "name": "KubernetesEvent.APIVerb",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "CREATE",
                "integer": 1
              },
              {
                "name": "UPDATE",
                "integer": 2
              },
              {
                "name": "PATCH",
                "integer": 3
              },
              {
                "name": "DELETE",
                "integer": 4
              },
              {
                "name": "LIST",
                "integer": 5
              },
              {
                "name": "GET",
                "integer": 6
              },
              {
                "name": "WATCH",
                "integer": 7
              },
              {
                "name": "PROXY",
                "integer": 8
              }
            ]
          },
          {
            "name": "Object.Resource",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "PODS_EXEC",
                "integer": 1
              },
              {
                "name": "PODS_PORTFORWARD",
                "integer": 2
              },
              {
                "name": "SECRETS",
                "integer": 3
              },
              {
                "name": "CONFIGMAPS",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "KubernetesEvent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "object",
                "type": "Object"
              },
              {
                "id": 3,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "api_verb",
                "type": "APIVerb"
              },
              {
                "id": 5,
                "name": "pod_exec_args",
                "type": "PodExecArgs"
              },
              {
                "id": 6,
                "name": "pod_port_forward_args",
                "type": "PodPortForwardArgs"
              },
              {
                "id": 15,
                "name": "user",
                "type": "User"
              },
              {
                "id": 16,
                "name": "impersonated_user",
                "type": "User"
              },
              {
                "id": 17,
                "name": "source_ips",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "user_agent",
                "type": "string"
              },
              {
                "id": 19,
                "name": "response_status",
                "type": "ResponseStatus"
              },
              {
                "id": 20,
                "name": "request_uri",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Object",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "resource",
                    "type": "Resource"
                  },
                  {
                    "id": 3,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "namespace",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "PodExecArgs",
                "fields": [
                  {
                    "id": 1,
                    "name": "container",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "commands",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "PodPortForwardArgs",
                "fields": [
                  {
                    "id": 1,
                    "name": "ports",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "ResponseStatus",
                "fields": [
                  {
                    "id": 1,
                    "name": "status_code",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "reason",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "User",
                "fields": [
                  {
                    "id": 1,
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "groups",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:labels.proto",
      "def": {
        "enums": [
          {
            "name": "LabelSelector.Operator",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "IN",
                "integer": 1
              },
              {
                "name": "NOT_IN",
                "integer": 2
              },
              {
                "name": "EXISTS",
                "integer": 3
              },
              {
                "name": "NOT_EXISTS",
                "integer": 4
              }
            ]
          },
          {
            "name": "SetBasedLabelSelector.Operator",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "IN",
                "integer": 1
              },
              {
                "name": "NOT_IN",
                "integer": 2
              },
              {
                "name": "EXISTS",
                "integer": 3
              },
              {
                "name": "NOT_EXISTS",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "LabelSelector",
            "fields": [
              {
                "id": 2,
                "name": "requirements",
                "type": "Requirement",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "match_labels",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Requirement",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "op",
                    "type": "Operator"
                  },
                  {
                    "id": 3,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "SetBasedLabelSelector",
            "fields": [
              {
                "id": 2,
                "name": "requirements",
                "type": "Requirement",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              1
            ],
            "messages": [
              {
                "name": "Requirement",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "op",
                    "type": "Operator"
                  },
                  {
                    "id": 3,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:license.proto",
      "def": {
        "messages": [
          {
            "name": "StoredLicenseKey",
            "fields": [
              {
                "id": 1,
                "name": "license_key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "license_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "selected",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:log.proto",
      "def": {
        "messages": [
          {
            "name": "LogImbue",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "log",
                "type": "bytes"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:mitre.proto",
      "def": {
        "messages": [
          {
            "name": "MitreTactic",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              }
            ]
          },
          {
            "name": "MitreTechnique",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              }
            ]
          },
          {
            "name": "MitreAttackVector",
            "fields": [
              {
                "id": 1,
                "name": "tactic",
                "type": "MitreTactic"
              },
              {
                "id": 2,
                "name": "techniques",
                "type": "MitreTechnique",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MitreAttackMatrix",
            "fields": [
              {
                "id": 1,
                "name": "matrix_info",
                "type": "MatrixInfo"
              },
              {
                "id": 2,
                "name": "vectors",
                "type": "MitreAttackVector",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "MatrixInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "domain",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "platform",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "MitreAttackBundle",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "matrices",
                "type": "MitreAttackMatrix",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:namespace_metadata.proto",
      "def": {
        "messages": [
          {
            "name": "NamespaceMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "creation_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "priority",
                "type": "int64"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:network_baseline.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkBaselineConnectionProperties",
            "fields": [
              {
                "id": 1,
                "name": "ingress",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "L4Protocol"
              }
            ]
          },
          {
            "name": "NetworkBaselinePeer",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "NetworkEntity"
              },
              {
                "id": 2,
                "name": "properties",
                "type": "NetworkBaselineConnectionProperties",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkBaseline",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "peers",
                "type": "NetworkBaselinePeer",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "forbidden_peers",
                "type": "NetworkBaselinePeer",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "observation_period_end",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "locked",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "deployment_name",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_flow.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:network_flow.proto",
      "def": {
        "enums": [
          {
            "name": "NetworkEntityInfo.Type",
            "enum_fields": [
              {
                "name": "UNKNOWN_TYPE"
              },
              {
                "name": "DEPLOYMENT",
                "integer": 1
              },
              {
                "name": "INTERNET",
                "integer": 2
              },
              {
                "name": "LISTEN_ENDPOINT",
                "integer": 3
              },
              {
                "name": "EXTERNAL_SOURCE",
                "integer": 4
              }
            ]
          },
          {
            "name": "L4Protocol",
            "enum_fields": [
              {
                "name": "L4_PROTOCOL_UNKNOWN"
              },
              {
                "name": "L4_PROTOCOL_TCP",
                "integer": 1
              },
              {
                "name": "L4_PROTOCOL_UDP",
                "integer": 2
              },
              {
                "name": "L4_PROTOCOL_ICMP",
                "integer": 3
              },
              {
                "name": "L4_PROTOCOL_RAW",
                "integer": 4
              },
              {
                "name": "L4_PROTOCOL_SCTP",
                "integer": 5
              },
              {
                "name": "L4_PROTOCOL_ANY",
                "integer": -1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "NetworkFlow",
            "fields": [
              {
                "id": 1,
                "name": "props",
                "type": "NetworkFlowProperties"
              },
              {
                "id": 2,
                "name": "last_seen_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkFlowProperties",
            "fields": [
              {
                "id": 1,
                "name": "src_entity",
                "type": "NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "dst_entity",
                "type": "NetworkEntityInfo"
              },
              {
                "id": 3,
                "name": "dst_port",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "l4protocol",
                "type": "L4Protocol"
              }
            ]
          },
          {
            "name": "NetworkEndpoint",
            "fields": [
              {
                "id": 1,
                "name": "props",
                "type": "NetworkEndpointProperties"
              },
              {
                "id": 2,
                "name": "last_active_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NetworkEndpointProperties",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "l4protocol",
                "type": "L4Protocol"
              }
            ]
          },
          {
            "name": "NetworkEntity",
            "fields": [
              {
                "id": 1,
                "name": "info",
                "type": "NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "scope",
                "type": "Scope"
              }
            ],
            "messages": [
              {
                "name": "Scope",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "NetworkEntityInfo",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment",
                "type": "Deployment"
              },
              {
                "id": 4,
                "name": "external_source",
                "type": "ExternalSource"
              }
            ],
            "messages": [
              {
                "name": "Deployment",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "cluster",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "listen_ports",
                    "type": "ListenPort",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "ListenPort",
                    "fields": [
                      {
                        "id": 1,
                        "name": "port",
                        "type": "uint32"
                      },
                      {
                        "id": 2,
                        "name": "l4protocol",
                        "type": "L4Protocol"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ExternalSource",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "cidr",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "default",
                    "type": "bool"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:network_graph_config.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkGraphConfig",
            "fields": [
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "hide_default_external_srcs",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:network_policy.proto",
      "def": {
        "enums": [
          {
            "name": "Protocol",
            "enum_fields": [
              {
                "name": "UNSET_PROTOCOL"
              },
              {
                "name": "TCP_PROTOCOL",
                "integer": 1
              },
              {
                "name": "UDP_PROTOCOL",
                "integer": 2
              },
              {
                "name": "SCTP_PROTOCOL",
                "integer": 3
              }
            ]
          },
          {
            "name": "NetworkPolicyType",
            "enum_fields": [
              {
                "name": "UNSET_NETWORK_POLICY_TYPE"
              },
              {
                "name": "INGRESS_NETWORK_POLICY_TYPE",
                "integer": 1
              },
              {
                "name": "EGRESS_NETWORK_POLICY_TYPE",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "NetworkPolicy",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 8,
                "name": "spec",
                "type": "NetworkPolicySpec"
              },
              {
                "id": 9,
                "name": "yaml",
                "type": "string"
              },
              {
                "id": 10,
                "name": "api_version",
                "type": "string"
              },
              {
                "id": 11,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "NetworkPolicySpec",
            "fields": [
              {
                "id": 1,
                "name": "pod_selector",
                "type": "LabelSelector"
              },
              {
                "id": 2,
                "name": "ingress",
                "type": "NetworkPolicyIngressRule",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "egress",
                "type": "NetworkPolicyEgressRule",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "policy_types",
                "type": "NetworkPolicyType",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyEgressRule",
            "fields": [
              {
                "id": 1,
                "name": "ports",
                "type": "NetworkPolicyPort",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "to",
                "type": "NetworkPolicyPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyPeer",
            "fields": [
              {
                "id": 1,
                "name": "pod_selector",
                "type": "LabelSelector"
              },
              {
                "id": 2,
                "name": "namespace_selector",
                "type": "LabelSelector"
              },
              {
                "id": 3,
                "name": "ip_block",
                "type": "IPBlock"
              }
            ]
          },
          {
            "name": "IPBlock",
            "fields": [
              {
                "id": 1,
                "name": "cidr",
                "type": "string"
              },
              {
                "id": 2,
                "name": "except",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyPort",
            "fields": [
              {
                "id": 1,
                "name": "protocol",
                "type": "Protocol"
              },
              {
                "id": 2,
                "name": "port",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "port_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkPolicyIngressRule",
            "fields": [
              {
                "id": 1,
                "name": "ports",
                "type": "NetworkPolicyPort",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "from",
                "type": "NetworkPolicyPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyReference",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkPolicyModification",
            "fields": [
              {
                "id": 1,
                "name": "apply_yaml",
                "type": "string"
              },
              {
                "id": 2,
                "name": "to_delete",
                "type": "NetworkPolicyReference",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyApplicationUndoRecord",
            "fields": [
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "user",
                "type": "string"
              },
              {
                "id": 2,
                "name": "apply_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "original_modification",
                "type": "NetworkPolicyModification"
              },
              {
                "id": 4,
                "name": "undo_modification",
                "type": "NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "NetworkPolicyApplicationUndoDeploymentRecord",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "undo_record",
                "type": "NetworkPolicyApplicationUndoRecord"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/labels.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:node.proto",
      "def": {
        "enums": [
          {
            "name": "Node.Note",
            "enum_fields": [
              {
                "name": "MISSING_SCAN_DATA"
              }
            ]
          },
          {
            "name": "NodeScan.Note",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "UNSUPPORTED",
                "integer": 1
              },
              {
                "name": "KERNEL_UNSUPPORTED",
                "integer": 2
              },
              {
                "name": "CERTIFIED_RHEL_CVES_UNAVAILABLE",
                "integer": 3
              }
            ]
          },
          {
            "name": "NodeInventory.Note",
            "enum_fields": [
              {
                "name": "OS_CVES_UNAVAILABLE"
              },
              {
                "name": "OS_CVES_STALE",
                "integer": 1
              },
              {
                "name": "LANGUAGE_CVES_UNAVAILABLE",
                "integer": 2
              },
              {
                "name": "CERTIFIED_RHEL_SCAN_UNAVAILABLE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Node",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "taints",
                "type": "Taint",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 13,
                "name": "joined_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "internal_ip_addresses",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "external_ip_addresses",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "container_runtime_version",
                "type": "string"
              },
              {
                "id": 14,
                "name": "container_runtime",
                "type": "ContainerRuntimeInfo"
              },
              {
                "id": 11,
                "name": "kernel_version",
                "type": "string"
              },
              {
                "id": 17,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 12,
                "name": "os_image",
                "type": "string"
              },
              {
                "id": 15,
                "name": "kubelet_version",
                "type": "string"
              },
              {
                "id": 16,
                "name": "kube_proxy_version",
                "type": "string"
              },
              {
                "id": 25,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 26,
                "name": "k8s_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 18,
                "name": "scan",
                "type": "NodeScan"
              },
              {
                "id": 19,
                "name": "components",
                "type": "int32"
              },
              {
                "id": 20,
                "name": "cves",
                "type": "int32"
              },
              {
                "id": 21,
                "name": "fixable_cves",
                "type": "int32"
              },
              {
                "id": 22,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 23,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 24,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 27,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "NodeScan",
            "fields": [
              {
                "id": 1,
                "name": "scan_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 2,
                "name": "components",
                "type": "EmbeddedNodeScanComponent",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NodeInventory",
            "fields": [
              {
                "id": 1,
                "name": "node_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "scan_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "components",
                "type": "Components"
              },
              {
                "id": 5,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Components",
                "fields": [
                  {
                    "id": 1,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "rhel_components",
                    "type": "RHELComponent",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "rhel_content_sets",
                    "type": "string",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "RHELComponent",
                    "fields": [
                      {
                        "id": 1,
                        "name": "id",
                        "type": "int64"
                      },
                      {
                        "id": 2,
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "namespace",
                        "type": "string"
                      },
                      {
                        "id": 4,
                        "name": "version",
                        "type": "string"
                      },
                      {
                        "id": 5,
                        "name": "arch",
                        "type": "string"
                      },
                      {
                        "id": 6,
                        "name": "module",
                        "type": "string"
                      },
                      {
                        "id": 7,
                        "name": "added_by",
                        "type": "string"
                      },
                      {
                        "id": 8,
                        "name": "executables",
                        "type": "Executable",
                        "is_repeated": true
                      }
                    ],
                    "messages": [
                      {
                        "name": "Executable",
                        "fields": [
                          {
                            "id": 1,
                            "name": "path",
                            "type": "string"
                          },
                          {
                            "id": 2,
                            "name": "required_features",
                            "type": "FeatureNameVersion",
                            "is_repeated": true
                          }
                        ],
                        "messages": [
                          {
                            "name": "FeatureNameVersion",
                            "fields": [
                              {
                                "id": 1,
                                "name": "name",
                                "type": "string"
                              },
                              {
                                "id": 2,
                                "name": "version",
                                "type": "string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "EmbeddedNodeScanComponent",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "vulns",
                "type": "EmbeddedVulnerability",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "vulnerabilities",
                "type": "NodeVulnerability",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 6,
                "name": "risk_score",
                "type": "float"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/container_runtime.proto"
          },
          {
            "path": "storage/taints.proto"
          },
          {
            "path": "storage/vulnerability.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:node_component.proto",
      "def": {
        "messages": [
          {
            "name": "NodeComponent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 8,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 9,
                "name": "operating_system",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:node_integration.proto",
      "def": {
        "messages": [
          {
            "name": "NodeIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "clairify",
                "type": "ClairifyConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/image_integration.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:notification_schedule.proto",
      "def": {
        "messages": [
          {
            "name": "NotificationSchedule",
            "fields": [
              {
                "id": 2,
                "name": "last_run",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "reserved_ids": [
              1
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:notifier.proto",
      "def": {
        "enums": [
          {
            "name": "Email.AuthMethod",
            "enum_fields": [
              {
                "name": "DISABLED"
              },
              {
                "name": "PLAIN",
                "integer": 1
              },
              {
                "name": "LOGIN",
                "integer": 2
              }
            ]
          },
          {
            "name": "Syslog.LocalFacility",
            "enum_fields": [
              {
                "name": "LOCAL0"
              },
              {
                "name": "LOCAL1",
                "integer": 1
              },
              {
                "name": "LOCAL2",
                "integer": 2
              },
              {
                "name": "LOCAL3",
                "integer": 3
              },
              {
                "name": "LOCAL4",
                "integer": 4
              },
              {
                "name": "LOCAL5",
                "integer": 5
              },
              {
                "name": "LOCAL6",
                "integer": 6
              },
              {
                "name": "LOCAL7",
                "integer": 7
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Notifier",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "ui_endpoint",
                "type": "string"
              },
              {
                "id": 8,
                "name": "label_key",
                "type": "string"
              },
              {
                "id": 9,
                "name": "label_default",
                "type": "string"
              },
              {
                "id": 10,
                "name": "jira",
                "type": "Jira"
              },
              {
                "id": 11,
                "name": "email",
                "type": "Email"
              },
              {
                "id": 12,
                "name": "cscc",
                "type": "CSCC"
              },
              {
                "id": 13,
                "name": "splunk",
                "type": "Splunk"
              },
              {
                "id": 14,
                "name": "pagerduty",
                "type": "PagerDuty"
              },
              {
                "id": 15,
                "name": "generic",
                "type": "Generic"
              },
              {
                "id": 16,
                "name": "sumologic",
                "type": "SumoLogic"
              },
              {
                "id": 17,
                "name": "aws_security_hub",
                "type": "AWSSecurityHub"
              },
              {
                "id": 18,
                "name": "syslog",
                "type": "Syslog"
              }
            ],
            "reserved_ids": [
              5
            ],
            "reserved_names": [
              "enabled"
            ]
          },
          {
            "name": "AWSSecurityHub",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "string"
              },
              {
                "id": 2,
                "name": "credentials",
                "type": "Credentials"
              },
              {
                "id": 3,
                "name": "account_id",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Credentials",
                "fields": [
                  {
                    "id": 1,
                    "name": "access_key_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "secret_access_key",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "CSCC",
            "fields": [
              {
                "id": 1,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 4,
                "name": "source_id",
                "type": "string"
              }
            ],
            "reserved_ids": [
              2,
              3
            ]
          },
          {
            "name": "Jira",
            "fields": [
              {
                "id": 1,
                "name": "url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "username",
                "type": "string"
              },
              {
                "id": 3,
                "name": "password",
                "type": "string"
              },
              {
                "id": 4,
                "name": "issue_type",
                "type": "string"
              },
              {
                "id": 5,
                "name": "priority_mappings",
                "type": "PriorityMapping",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "default_fields_json",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "PriorityMapping",
                "fields": [
                  {
                    "id": 1,
                    "name": "severity",
                    "type": "Severity"
                  },
                  {
                    "id": 2,
                    "name": "priority_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "Email",
            "fields": [
              {
                "id": 1,
                "name": "server",
                "type": "string"
              },
              {
                "id": 2,
                "name": "sender",
                "type": "string"
              },
              {
                "id": 3,
                "name": "username",
                "type": "string"
              },
              {
                "id": 4,
                "name": "password",
                "type": "string"
              },
              {
                "id": 5,
                "name": "disableTLS",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "DEPRECATED_useStartTLS",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "from",
                "type": "string"
              },
              {
                "id": 8,
                "name": "startTLSAuthMethod",
                "type": "AuthMethod"
              },
              {
                "id": 9,
                "name": "allow_unauthenticated_smtp",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Splunk",
            "fields": [
              {
                "id": 1,
                "name": "http_token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "http_endpoint",
                "type": "string"
              },
              {
                "id": 3,
                "name": "insecure",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "truncate",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "audit_logging_enabled",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "derived_source_type",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "source_types",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PagerDuty",
            "fields": [
              {
                "id": 1,
                "name": "api_key",
                "type": "string"
              }
            ]
          },
          {
            "name": "Generic",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "skipTLSVerify",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "ca_cert",
                "type": "string"
              },
              {
                "id": 4,
                "name": "username",
                "type": "string"
              },
              {
                "id": 5,
                "name": "password",
                "type": "string"
              },
              {
                "id": 6,
                "name": "headers",
                "type": "KeyValuePair",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "extra_fields",
                "type": "KeyValuePair",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "audit_logging_enabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "SumoLogic",
            "fields": [
              {
                "id": 1,
                "name": "http_source_address",
                "type": "string"
              },
              {
                "id": 2,
                "name": "skipTLSVerify",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Syslog",
            "fields": [
              {
                "id": 1,
                "name": "local_facility",
                "type": "LocalFacility"
              },
              {
                "id": 2,
                "name": "tcp_config",
                "type": "TCPConfig"
              },
              {
                "id": 3,
                "name": "extra_fields",
                "type": "KeyValuePair",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "TCPConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "hostname",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "port",
                    "type": "int32"
                  },
                  {
                    "id": 3,
                    "name": "skip_tls_verify",
                    "type": "bool"
                  },
                  {
                    "id": 4,
                    "name": "use_tls",
                    "type": "bool"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/common.proto"
          },
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:operation_status.proto",
      "def": {
        "enums": [
          {
            "name": "OperationStatus",
            "enum_fields": [
              {
                "name": "FAIL"
              },
              {
                "name": "PASS",
                "integer": 1
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:orchestrator_integration.proto",
      "def": {
        "messages": [
          {
            "name": "OrchestratorIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "clairify",
                "type": "ClairifyConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/image_integration.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:policy.proto",
      "def": {
        "enums": [
          {
            "name": "EventSource",
            "enum_fields": [
              {
                "name": "NOT_APPLICABLE"
              },
              {
                "name": "DEPLOYMENT_EVENT",
                "integer": 1
              },
              {
                "name": "AUDIT_LOG_EVENT",
                "integer": 2
              }
            ]
          },
          {
            "name": "BooleanOperator",
            "enum_fields": [
              {
                "name": "OR"
              },
              {
                "name": "AND",
                "integer": 1
              }
            ]
          },
          {
            "name": "EnforcementAction",
            "enum_fields": [
              {
                "name": "UNSET_ENFORCEMENT"
              },
              {
                "name": "SCALE_TO_ZERO_ENFORCEMENT",
                "integer": 1
              },
              {
                "name": "UNSATISFIABLE_NODE_CONSTRAINT_ENFORCEMENT",
                "integer": 2
              },
              {
                "name": "KILL_POD_ENFORCEMENT",
                "integer": 3
              },
              {
                "name": "FAIL_BUILD_ENFORCEMENT",
                "integer": 4
              },
              {
                "name": "FAIL_KUBE_REQUEST_ENFORCEMENT",
                "integer": 5
              },
              {
                "name": "FAIL_DEPLOYMENT_CREATE_ENFORCEMENT",
                "integer": 6
              },
              {
                "name": "FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT",
                "integer": 7
              }
            ]
          },
          {
            "name": "Severity",
            "enum_fields": [
              {
                "name": "UNSET_SEVERITY"
              },
              {
                "name": "LOW_SEVERITY",
                "integer": 1
              },
              {
                "name": "MEDIUM_SEVERITY",
                "integer": 2
              },
              {
                "name": "HIGH_SEVERITY",
                "integer": 3
              },
              {
                "name": "CRITICAL_SEVERITY",
                "integer": 4
              }
            ]
          },
          {
            "name": "LifecycleStage",
            "enum_fields": [
              {
                "name": "DEPLOY"
              },
              {
                "name": "BUILD",
                "integer": 1
              },
              {
                "name": "RUNTIME",
                "integer": 2
              }
            ]
          },
          {
            "name": "Comparator",
            "enum_fields": [
              {
                "name": "LESS_THAN"
              },
              {
                "name": "LESS_THAN_OR_EQUALS",
                "integer": 1
              },
              {
                "name": "EQUALS",
                "integer": 2
              },
              {
                "name": "GREATER_THAN_OR_EQUALS",
                "integer": 3
              },
              {
                "name": "GREATER_THAN",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Policy",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "rationale",
                "type": "string"
              },
              {
                "id": 5,
                "name": "remediation",
                "type": "string"
              },
              {
                "id": 6,
                "name": "disabled",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "categories",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "lifecycle_stages",
                "type": "LifecycleStage",
                "is_repeated": true
              },
              {
                "id": 22,
                "name": "event_source",
                "type": "EventSource"
              },
              {
                "id": 21,
                "name": "exclusions",
                "type": "Exclusion",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "scope",
                "type": "Scope",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "severity",
                "type": "Severity"
              },
              {
                "id": 13,
                "name": "enforcement_actions",
                "type": "EnforcementAction",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "notifiers",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 15,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 16,
                "name": "SORT_name",
                "type": "string"
              },
              {
                "id": 17,
                "name": "SORT_lifecycleStage",
                "type": "string"
              },
              {
                "id": 18,
                "name": "SORT_enforcement",
                "type": "bool"
              },
              {
                "id": 19,
                "name": "policy_version",
                "type": "string"
              },
              {
                "id": 20,
                "name": "policy_sections",
                "type": "PolicySection",
                "is_repeated": true
              },
              {
                "id": 23,
                "name": "mitre_attack_vectors",
                "type": "MitreAttackVectors",
                "is_repeated": true
              },
              {
                "id": 24,
                "name": "criteria_locked",
                "type": "bool"
              },
              {
                "id": 25,
                "name": "mitre_vectors_locked",
                "type": "bool"
              },
              {
                "id": 26,
                "name": "is_default",
                "type": "bool"
              }
            ],
            "reserved_ids": [
              8,
              10
            ],
            "messages": [
              {
                "name": "MitreAttackVectors",
                "fields": [
                  {
                    "id": 1,
                    "name": "tactic",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "techniques",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "PolicySection",
            "fields": [
              {
                "id": 1,
                "name": "section_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "policy_groups",
                "type": "PolicyGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyGroup",
            "fields": [
              {
                "id": 1,
                "name": "field_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "boolean_operator",
                "type": "BooleanOperator"
              },
              {
                "id": 3,
                "name": "negate",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "values",
                "type": "PolicyValue",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "PolicyList",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "Policy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListPolicy",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "severity",
                "type": "Severity"
              },
              {
                "id": 5,
                "name": "disabled",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "lifecycle_stages",
                "type": "LifecycleStage",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "notifiers",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "event_source",
                "type": "EventSource"
              },
              {
                "id": 10,
                "name": "is_default",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Component",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              }
            ]
          },
          {
            "name": "DockerfileLineRuleField",
            "fields": [
              {
                "id": 1,
                "name": "instruction",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "KeyValuePolicy",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "env_var_source",
                "type": "ContainerConfig.EnvironmentConfig.EnvVarSource"
              }
            ]
          },
          {
            "name": "VolumePolicy",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "source",
                "type": "string"
              },
              {
                "id": 3,
                "name": "destination",
                "type": "string"
              },
              {
                "id": 4,
                "name": "read_only",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "type",
                "type": "string"
              }
            ]
          },
          {
            "name": "HostMountPolicy",
            "fields": [
              {
                "id": 1,
                "name": "read_only",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ProcessPolicy",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "args",
                "type": "string"
              },
              {
                "id": 3,
                "name": "ancestor",
                "type": "string"
              },
              {
                "id": 4,
                "name": "uid",
                "type": "string"
              }
            ]
          },
          {
            "name": "ResourcePolicy",
            "fields": [
              {
                "id": 1,
                "name": "cpu_resource_request",
                "type": "NumericalPolicy"
              },
              {
                "id": 2,
                "name": "cpu_resource_limit",
                "type": "NumericalPolicy"
              },
              {
                "id": 3,
                "name": "memory_resource_request",
                "type": "NumericalPolicy"
              },
              {
                "id": 4,
                "name": "memory_resource_limit",
                "type": "NumericalPolicy"
              }
            ]
          },
          {
            "name": "NumericalPolicy",
            "fields": [
              {
                "id": 1,
                "name": "op",
                "type": "Comparator"
              },
              {
                "id": 3,
                "name": "value",
                "type": "float"
              }
            ]
          },
          {
            "name": "PortPolicy",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "string"
              }
            ]
          },
          {
            "name": "PermissionPolicy",
            "fields": [
              {
                "id": 1,
                "name": "permission_level",
                "type": "PermissionLevel"
              }
            ]
          },
          {
            "name": "ImageNamePolicy",
            "fields": [
              {
                "id": 1,
                "name": "registry",
                "type": "string"
              },
              {
                "id": 2,
                "name": "remote",
                "type": "string"
              },
              {
                "id": 3,
                "name": "tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "PortExposurePolicy",
            "fields": [
              {
                "id": 1,
                "name": "exposure_levels",
                "type": "PortConfig.ExposureLevel",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Exclusion",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "deployment",
                "type": "Deployment"
              },
              {
                "id": 7,
                "name": "image",
                "type": "Image"
              },
              {
                "id": 6,
                "name": "expiration",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "reserved_ids": [
              2
            ],
            "messages": [
              {
                "name": "Container",
                "fields": [
                  {
                    "id": 3,
                    "name": "image_name",
                    "type": "ImageName"
                  }
                ]
              },
              {
                "name": "Deployment",
                "fields": [
                  {
                    "id": 3,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "scope",
                    "type": "Scope"
                  }
                ]
              },
              {
                "name": "Image",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ExportPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "storage.Policy",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/scope.proto"
          },
          {
            "path": "storage/image.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/rbac.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:policy_category.proto",
      "def": {
        "messages": [
          {
            "name": "PolicyCategory",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "isDefault",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:process_baseline.proto",
      "def": {
        "enums": [
          {
            "name": "ContainerNameAndBaselineStatus.BaselineStatus",
            "enum_fields": [
              {
                "name": "INVALID"
              },
              {
                "name": "NOT_GENERATED",
                "integer": 1
              },
              {
                "name": "UNLOCKED",
                "integer": 2
              },
              {
                "name": "LOCKED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ProcessBaselineKey",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProcessBaseline",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "ProcessBaselineKey"
              },
              {
                "id": 3,
                "name": "elements",
                "type": "BaselineElement",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "element_graveyard",
                "type": "BaselineElement",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "user_locked_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "stack_rox_locked_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "last_update",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "BaselineElement",
            "fields": [
              {
                "id": 1,
                "name": "element",
                "type": "BaselineItem"
              },
              {
                "id": 2,
                "name": "auto",
                "type": "bool"
              }
            ]
          },
          {
            "name": "BaselineItem",
            "fields": [
              {
                "id": 1,
                "name": "process_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ContainerNameAndBaselineStatus",
            "fields": [
              {
                "id": 1,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "baseline_status",
                "type": "BaselineStatus"
              },
              {
                "id": 3,
                "name": "anomalous_processes_executed",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ProcessBaselineResults",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 2,
                "name": "baseline_statuses",
                "type": "ContainerNameAndBaselineStatus",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:process_indicator.proto",
      "def": {
        "messages": [
          {
            "name": "ProcessIndicator",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "pod_id",
                "type": "string"
              },
              {
                "id": 11,
                "name": "pod_uid",
                "type": "string"
              },
              {
                "id": 6,
                "name": "signal",
                "type": "ProcessSignal"
              },
              {
                "id": 7,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 9,
                "name": "container_start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 12,
                "name": "image_id",
                "type": "string"
              }
            ],
            "reserved_ids": [
              10,
              5
            ]
          },
          {
            "name": "ProcessIndicatorUniqueKey",
            "fields": [
              {
                "id": 1,
                "name": "pod_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "process_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "process_exec_file_path",
                "type": "string"
              },
              {
                "id": 5,
                "name": "process_args",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkProcessUniqueKey",
            "fields": [
              {
                "id": 1,
                "name": "process_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "process_exec_file_path",
                "type": "string"
              },
              {
                "id": 3,
                "name": "process_args",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProcessSignal",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "args",
                "type": "string"
              },
              {
                "id": 6,
                "name": "exec_file_path",
                "type": "string"
              },
              {
                "id": 7,
                "name": "pid",
                "type": "uint32"
              },
              {
                "id": 8,
                "name": "uid",
                "type": "uint32"
              },
              {
                "id": 9,
                "name": "gid",
                "type": "uint32"
              },
              {
                "id": 10,
                "name": "lineage",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "scraped",
                "type": "bool"
              },
              {
                "id": 12,
                "name": "lineage_info",
                "type": "LineageInfo",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "LineageInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "parent_uid",
                    "type": "uint32"
                  },
                  {
                    "id": 2,
                    "name": "parent_exec_file_path",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:process_listening_on_port.proto",
      "def": {
        "messages": [
          {
            "name": "ProcessListeningOnPort",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "Endpoint"
              },
              {
                "id": 2,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "pod_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "pod_uid",
                "type": "string"
              },
              {
                "id": 6,
                "name": "signal",
                "type": "ProcessSignal"
              },
              {
                "id": 7,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 9,
                "name": "container_start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "image_id",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Endpoint",
                "fields": [
                  {
                    "id": 1,
                    "name": "port",
                    "type": "uint32"
                  },
                  {
                    "id": 2,
                    "name": "protocol",
                    "type": "L4Protocol"
                  }
                ]
              }
            ]
          },
          {
            "name": "ProcessListeningOnPortFromSensor",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "L4Protocol"
              },
              {
                "id": 3,
                "name": "process",
                "type": "ProcessIndicatorUniqueKey"
              },
              {
                "id": 4,
                "name": "close_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProcessListeningOnPortStorage",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "L4Protocol"
              },
              {
                "id": 4,
                "name": "close_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "process_indicator_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "closed",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "process",
                "type": "ProcessIndicatorUniqueKey"
              },
              {
                "id": 8,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:rbac.proto",
      "def": {
        "enums": [
          {
            "name": "SubjectKind",
            "enum_fields": [
              {
                "name": "UNSET_KIND"
              },
              {
                "name": "SERVICE_ACCOUNT",
                "integer": 1
              },
              {
                "name": "USER",
                "integer": 2
              },
              {
                "name": "GROUP",
                "integer": 3
              }
            ]
          },
          {
            "name": "PermissionLevel",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "NONE",
                "integer": 1
              },
              {
                "name": "DEFAULT",
                "integer": 2
              },
              {
                "name": "ELEVATED_IN_NAMESPACE",
                "integer": 3
              },
              {
                "name": "ELEVATED_CLUSTER_WIDE",
                "integer": 4
              },
              {
                "name": "CLUSTER_ADMIN",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "K8sRole",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_role",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "rules",
                "type": "PolicyRule",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PolicyRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "api_groups",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "non_resource_urls",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "resource_names",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "K8sRoleBinding",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_role",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "subjects",
                "type": "Subject",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "role_id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "Subject",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "kind",
                "type": "SubjectKind"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_name",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:relations.proto",
      "def": {
        "messages": [
          {
            "name": "ImageComponentEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "layer_index",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "location",
                "type": "string"
              },
              {
                "id": 4,
                "name": "image_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "image_component_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComponentCVEEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "is_fixable",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 4,
                "name": "image_component_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "image_cve_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImageCVEEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "first_image_occurrence",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "state",
                "type": "VulnerabilityState"
              },
              {
                "id": 4,
                "name": "image_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "image_cve_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NodeComponentEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "node_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "node_component_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NodeComponentCVEEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "is_fixable",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 4,
                "name": "node_component_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "node_cve_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ClusterCVEEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "is_fixable",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cve_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "PolicyCategoryEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "policy_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "category_id",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/cve.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:report_configuration.proto",
      "def": {
        "enums": [
          {
            "name": "ReportConfiguration.ReportType",
            "enum_fields": [
              {
                "name": "VULNERABILITY"
              }
            ]
          },
          {
            "name": "ReportLastRunStatus.RunStatus",
            "enum_fields": [
              {
                "name": "SUCCESS"
              },
              {
                "name": "FAILURE",
                "integer": 1
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.Fixability",
            "enum_fields": [
              {
                "name": "BOTH"
              },
              {
                "name": "FIXABLE",
                "integer": 1
              },
              {
                "name": "NOT_FIXABLE",
                "integer": 2
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.ImageType",
            "enum_fields": [
              {
                "name": "DEPLOYED"
              },
              {
                "name": "WATCHED",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ReportConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "ReportType"
              },
              {
                "id": 5,
                "name": "vuln_report_filters",
                "type": "VulnerabilityReportFilters"
              },
              {
                "id": 6,
                "name": "scope_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "email_config",
                "type": "EmailNotifierConfiguration"
              },
              {
                "id": 8,
                "name": "schedule",
                "type": "storage.Schedule"
              },
              {
                "id": 9,
                "name": "last_run_status",
                "type": "ReportLastRunStatus"
              },
              {
                "id": 10,
                "name": "last_successful_run_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 11,
                "name": "resource_scope",
                "type": "ResourceScope"
              },
              {
                "id": 12,
                "name": "notifiers",
                "type": "NotifierConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReportLastRunStatus",
            "fields": [
              {
                "id": 1,
                "name": "report_status",
                "type": "RunStatus"
              },
              {
                "id": 2,
                "name": "last_run_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "error_msg",
                "type": "string"
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters",
            "fields": [
              {
                "id": 1,
                "name": "fixability",
                "type": "Fixability"
              },
              {
                "id": 2,
                "name": "since_last_report",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "severities",
                "type": "VulnerabilitySeverity",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "image_types",
                "type": "ImageType",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "all_vuln",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "last_successful_report",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "start_date",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ResourceScope",
            "fields": [
              {
                "id": 1,
                "name": "collection_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NotifierConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "email_config",
                "type": "EmailNotifierConfiguration"
              }
            ]
          },
          {
            "name": "EmailNotifierConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "notifier_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "mailing_lists",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cve.proto"
          },
          {
            "path": "storage/schedule.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:resource_collection.proto",
      "def": {
        "enums": [
          {
            "name": "MatchType",
            "enum_fields": [
              {
                "name": "EXACT"
              },
              {
                "name": "REGEX",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ResourceCollection",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "created_by",
                "type": "SlimUser"
              },
              {
                "id": 7,
                "name": "updated_by",
                "type": "SlimUser"
              },
              {
                "id": 8,
                "name": "resource_selectors",
                "type": "ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "embedded_collections",
                "type": "EmbeddedResourceCollection",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "EmbeddedResourceCollection",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ResourceSelector",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "SelectorRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SelectorRule",
            "fields": [
              {
                "id": 1,
                "name": "field_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "operator",
                "type": "BooleanOperator"
              },
              {
                "id": 3,
                "name": "values",
                "type": "RuleValue",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RuleValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              },
              {
                "id": 2,
                "name": "match_type",
                "type": "MatchType"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/user.proto"
          },
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:risk.proto",
      "def": {
        "enums": [
          {
            "name": "RiskSubjectType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "DEPLOYMENT",
                "integer": 1
              },
              {
                "name": "NAMESPACE",
                "integer": 2
              },
              {
                "name": "CLUSTER",
                "integer": 3
              },
              {
                "name": "NODE",
                "integer": 7
              },
              {
                "name": "NODE_COMPONENT",
                "integer": 8
              },
              {
                "name": "IMAGE",
                "integer": 4
              },
              {
                "name": "IMAGE_COMPONENT",
                "integer": 6
              },
              {
                "name": "SERVICEACCOUNT",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Risk",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "subject",
                "type": "RiskSubject"
              },
              {
                "id": 3,
                "name": "score",
                "type": "float"
              },
              {
                "id": 4,
                "name": "results",
                "type": "Result",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Result",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "factors",
                    "type": "Factor",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "score",
                    "type": "float"
                  }
                ],
                "messages": [
                  {
                    "name": "Factor",
                    "fields": [
                      {
                        "id": 1,
                        "name": "message",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "url",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "RiskSubject",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "RiskSubjectType"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:role.proto",
      "def": {
        "enums": [
          {
            "name": "Access",
            "enum_fields": [
              {
                "name": "NO_ACCESS"
              },
              {
                "name": "READ_ACCESS",
                "integer": 1
              },
              {
                "name": "READ_WRITE_ACCESS",
                "integer": 2
              }
            ]
          },
          {
            "name": "EffectiveAccessScope.State",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "INCLUDED",
                "integer": 1
              },
              {
                "name": "EXCLUDED",
                "integer": 2
              },
              {
                "name": "PARTIAL",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Role",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "description",
                "type": "string"
              },
              {
                "id": 6,
                "name": "permission_set_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "access_scope_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "global_access",
                "type": "Access"
              },
              {
                "id": 8,
                "name": "traits",
                "type": "Traits"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "resource_to_access",
                  "type": "Access"
                }
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "PermissionSet",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "traits",
                "type": "Traits"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "resource_to_access",
                  "type": "Access"
                }
              }
            ]
          },
          {
            "name": "SimpleAccessScope",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "rules",
                "type": "Rules"
              },
              {
                "id": 5,
                "name": "traits",
                "type": "Traits"
              }
            ],
            "messages": [
              {
                "name": "Rules",
                "fields": [
                  {
                    "id": 1,
                    "name": "included_clusters",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "included_namespaces",
                    "type": "Namespace",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "cluster_label_selectors",
                    "type": "SetBasedLabelSelector",
                    "is_repeated": true
                  },
                  {
                    "id": 4,
                    "name": "namespace_label_selectors",
                    "type": "SetBasedLabelSelector",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "Namespace",
                    "fields": [
                      {
                        "id": 1,
                        "name": "cluster_name",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "namespace_name",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "EffectiveAccessScope",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "Cluster",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Namespace",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "state",
                    "type": "State"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 4,
                      "name": "labels",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "Cluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "state",
                    "type": "State"
                  },
                  {
                    "id": 4,
                    "name": "namespaces",
                    "type": "Namespace",
                    "is_repeated": true
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 5,
                      "name": "labels",
                      "type": "string"
                    }
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/labels.proto"
          },
          {
            "path": "storage/traits.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:schedule.proto",
      "def": {
        "enums": [
          {
            "name": "Schedule.IntervalType",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "DAILY",
                "integer": 1
              },
              {
                "name": "WEEKLY",
                "integer": 2
              },
              {
                "name": "MONTHLY",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Schedule",
            "fields": [
              {
                "id": 1,
                "name": "interval_type",
                "type": "IntervalType"
              },
              {
                "id": 2,
                "name": "hour",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "minute",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "weekly",
                "type": "WeeklyInterval"
              },
              {
                "id": 5,
                "name": "days_of_week",
                "type": "DaysOfWeek"
              },
              {
                "id": 6,
                "name": "days_of_month",
                "type": "DaysOfMonth"
              }
            ],
            "messages": [
              {
                "name": "WeeklyInterval",
                "fields": [
                  {
                    "id": 1,
                    "name": "day",
                    "type": "int32"
                  }
                ]
              },
              {
                "name": "DaysOfWeek",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "DaysOfMonth",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:scope.proto",
      "def": {
        "messages": [
          {
            "name": "Scope",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 3,
                "name": "label",
                "type": "Label"
              }
            ],
            "messages": [
              {
                "name": "Label",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:secret.proto",
      "def": {
        "enums": [
          {
            "name": "SecretType",
            "enum_fields": [
              {
                "name": "UNDETERMINED"
              },
              {
                "name": "PUBLIC_CERTIFICATE",
                "integer": 1
              },
              {
                "name": "CERTIFICATE_REQUEST",
                "integer": 2
              },
              {
                "name": "PRIVACY_ENHANCED_MESSAGE",
                "integer": 3
              },
              {
                "name": "OPENSSH_PRIVATE_KEY",
                "integer": 4
              },
              {
                "name": "PGP_PRIVATE_KEY",
                "integer": 5
              },
              {
                "name": "EC_PRIVATE_KEY",
                "integer": 6
              },
              {
                "name": "RSA_PRIVATE_KEY",
                "integer": 7
              },
              {
                "name": "DSA_PRIVATE_KEY",
                "integer": 8
              },
              {
                "name": "CERT_PRIVATE_KEY",
                "integer": 9
              },
              {
                "name": "ENCRYPTED_PRIVATE_KEY",
                "integer": 10
              },
              {
                "name": "IMAGE_PULL_SECRET",
                "integer": 11
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Secret",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 6,
                "name": "type",
                "type": "string"
              },
              {
                "id": 9,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "files",
                "type": "SecretDataFile",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "relationship",
                "type": "SecretRelationship"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ListSecret",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 7,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "types",
                "type": "SecretType",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "SecretRelationship",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "container_relationships",
                "type": "SecretContainerRelationship",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "deployment_relationships",
                "type": "SecretDeploymentRelationship",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SecretDeploymentRelationship",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "SecretContainerRelationship",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImagePullSecret",
            "fields": [
              {
                "id": 1,
                "name": "registries",
                "type": "Registry",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Registry",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "username",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "SecretDataFile",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "SecretType"
              },
              {
                "id": 3,
                "name": "cert",
                "type": "Cert"
              },
              {
                "id": 4,
                "name": "image_pull_secret",
                "type": "ImagePullSecret"
              }
            ]
          },
          {
            "name": "Cert",
            "fields": [
              {
                "id": 1,
                "name": "subject",
                "type": "CertName"
              },
              {
                "id": 2,
                "name": "issuer",
                "type": "CertName"
              },
              {
                "id": 3,
                "name": "sans",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "start_date",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "end_date",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "algorithm",
                "type": "string"
              }
            ]
          },
          {
            "name": "CertName",
            "fields": [
              {
                "id": 1,
                "name": "common_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "country",
                "type": "string"
              },
              {
                "id": 3,
                "name": "organization",
                "type": "string"
              },
              {
                "id": 4,
                "name": "organization_unit",
                "type": "string"
              },
              {
                "id": 5,
                "name": "locality",
                "type": "string"
              },
              {
                "id": 6,
                "name": "province",
                "type": "string"
              },
              {
                "id": 7,
                "name": "street_address",
                "type": "string"
              },
              {
                "id": 8,
                "name": "postal_code",
                "type": "string"
              },
              {
                "id": 9,
                "name": "names",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:sensor_upgrade.proto",
      "def": {
        "messages": [
          {
            "name": "SensorUpgradeConfig",
            "fields": [
              {
                "id": 1,
                "name": "enable_auto_upgrade",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:service_account.proto",
      "def": {
        "messages": [
          {
            "name": "ServiceAccount",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "automount_token",
                "type": "bool"
              },
              {
                "id": 10,
                "name": "secrets",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "image_pull_secrets",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:service_identity.proto",
      "def": {
        "enums": [
          {
            "name": "ServiceType",
            "enum_fields": [
              {
                "name": "UNKNOWN_SERVICE"
              },
              {
                "name": "SENSOR_SERVICE",
                "integer": 1
              },
              {
                "name": "CENTRAL_SERVICE",
                "integer": 2
              },
              {
                "name": "CENTRAL_DB_SERVICE",
                "integer": 12
              },
              {
                "name": "REMOTE_SERVICE",
                "integer": 3
              },
              {
                "name": "COLLECTOR_SERVICE",
                "integer": 4
              },
              {
                "name": "MONITORING_UI_SERVICE",
                "integer": 5
              },
              {
                "name": "MONITORING_DB_SERVICE",
                "integer": 6
              },
              {
                "name": "MONITORING_CLIENT_SERVICE",
                "integer": 7
              },
              {
                "name": "BENCHMARK_SERVICE",
                "integer": 8
              },
              {
                "name": "SCANNER_SERVICE",
                "integer": 9
              },
              {
                "name": "SCANNER_DB_SERVICE",
                "integer": 10
              },
              {
                "name": "ADMISSION_CONTROL_SERVICE",
                "integer": 11
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ServiceIdentity",
            "fields": [
              {
                "id": 4,
                "name": "serial_str",
                "type": "string"
              },
              {
                "id": 1,
                "name": "serial",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "ServiceType"
              },
              {
                "id": 5,
                "name": "init_bundle_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ServiceCertificate",
            "fields": [
              {
                "id": 1,
                "name": "cert_pem",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "key_pem",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "TypedServiceCertificate",
            "fields": [
              {
                "id": 1,
                "name": "service_type",
                "type": "ServiceType"
              },
              {
                "id": 2,
                "name": "cert",
                "type": "ServiceCertificate"
              }
            ]
          },
          {
            "name": "TypedServiceCertificateSet",
            "fields": [
              {
                "id": 1,
                "name": "ca_pem",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "service_certs",
                "type": "TypedServiceCertificate",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:signature_integration.proto",
      "def": {
        "messages": [
          {
            "name": "SignatureIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cosign",
                "type": "CosignPublicKeyVerification"
              }
            ]
          },
          {
            "name": "CosignPublicKeyVerification",
            "fields": [
              {
                "id": 3,
                "name": "public_keys",
                "type": "PublicKey",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "PublicKey",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "public_key_pem_enc",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:system_info.proto",
      "def": {
        "messages": [
          {
            "name": "BackupInfo",
            "fields": [
              {
                "id": 1,
                "name": "backup_last_run_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "status",
                "type": "OperationStatus"
              },
              {
                "id": 3,
                "name": "requestor",
                "type": "SlimUser"
              }
            ]
          },
          {
            "name": "SystemInfo",
            "fields": [
              {
                "id": 1,
                "name": "backup_info",
                "type": "BackupInfo"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/operation_status.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:taints.proto",
      "def": {
        "enums": [
          {
            "name": "TaintEffect",
            "enum_fields": [
              {
                "name": "UNKNOWN_TAINT_EFFECT"
              },
              {
                "name": "NO_SCHEDULE_TAINT_EFFECT",
                "integer": 1
              },
              {
                "name": "PREFER_NO_SCHEDULE_TAINT_EFFECT",
                "integer": 2
              },
              {
                "name": "NO_EXECUTE_TAINT_EFFECT",
                "integer": 3
              }
            ]
          },
          {
            "name": "Toleration.Operator",
            "enum_fields": [
              {
                "name": "TOLERATION_OPERATION_UNKNOWN"
              },
              {
                "name": "TOLERATION_OPERATOR_EXISTS",
                "integer": 1
              },
              {
                "name": "TOLERATION_OPERATOR_EQUAL",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Taint",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "taint_effect",
                "type": "TaintEffect"
              }
            ]
          },
          {
            "name": "Toleration",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "operator",
                "type": "Operator"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "taint_effect",
                "type": "TaintEffect"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:telemetry.proto",
      "def": {
        "messages": [
          {
            "name": "TelemetryConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "last_set_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:test.proto",
      "def": {
        "enums": [
          {
            "name": "TestSingleKeyStruct.Enum",
            "enum_fields": [
              {
                "name": "ENUM0"
              },
              {
                "name": "ENUM1",
                "integer": 1
              },
              {
                "name": "ENUM2",
                "integer": 2
              }
            ]
          },
          {
            "name": "TestSingleUUIDKeyStruct.Enum",
            "enum_fields": [
              {
                "name": "ENUM0"
              },
              {
                "name": "ENUM1",
                "integer": 1
              },
              {
                "name": "ENUM2",
                "integer": 2
              }
            ]
          },
          {
            "name": "TestMultiKeyStruct.Enum",
            "enum_fields": [
              {
                "name": "ENUM0"
              },
              {
                "name": "ENUM1",
                "integer": 1
              },
              {
                "name": "ENUM2",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "TestSingleKeyStruct",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "bool",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "uint64",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "int64",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "float",
                "type": "float"
              },
              {
                "id": 9,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "enum",
                "type": "Enum"
              },
              {
                "id": 11,
                "name": "enums",
                "type": "Enum",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "embedded",
                "type": "Embedded"
              },
              {
                "id": 13,
                "name": "nested",
                "type": "Nested",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "oneofstring",
                "type": "string"
              },
              {
                "id": 15,
                "name": "oneofnested",
                "type": "OneOfNested"
              },
              {
                "id": 16,
                "name": "bytess",
                "type": "bytes"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "labels",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Embedded",
                "fields": [
                  {
                    "id": 1,
                    "name": "embedded",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "Embedded2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "embedded",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Nested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "OneOfNested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "TestSingleUUIDKeyStruct",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "bool",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "uint64",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "int64",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "float",
                "type": "float"
              },
              {
                "id": 9,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "enum",
                "type": "Enum"
              },
              {
                "id": 11,
                "name": "enums",
                "type": "Enum",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "embedded",
                "type": "Embedded"
              },
              {
                "id": 13,
                "name": "nested",
                "type": "Nested",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "oneofstring",
                "type": "string"
              },
              {
                "id": 15,
                "name": "oneofnested",
                "type": "OneOfNested"
              },
              {
                "id": 16,
                "name": "bytess",
                "type": "bytes"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "labels",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Embedded",
                "fields": [
                  {
                    "id": 1,
                    "name": "embedded",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "Embedded2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "embedded",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Nested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "OneOfNested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "TestMultiKeyStruct",
            "fields": [
              {
                "id": 1,
                "name": "key1",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key2",
                "type": "string"
              },
              {
                "id": 3,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "bool",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "uint64",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "int64",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "float",
                "type": "float"
              },
              {
                "id": 9,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "enum",
                "type": "Enum"
              },
              {
                "id": 11,
                "name": "enums",
                "type": "Enum",
                "is_repeated": true
              },
              {
                "id": 16,
                "name": "string",
                "type": "string"
              },
              {
                "id": 17,
                "name": "int_slice_deprecated",
                "type": "int64",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "int32_slice",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "embedded",
                "type": "Embedded"
              },
              {
                "id": 13,
                "name": "nested",
                "type": "Nested",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "oneofstring",
                "type": "string"
              },
              {
                "id": 15,
                "name": "oneofnested",
                "type": "OneOfNested"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "labels",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Embedded",
                "fields": [
                  {
                    "id": 1,
                    "name": "embedded",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "Embedded2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "embedded",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Nested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "is_nested",
                    "type": "bool"
                  },
                  {
                    "id": 4,
                    "name": "int64",
                    "type": "int64"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "is_nested",
                        "type": "bool"
                      },
                      {
                        "id": 4,
                        "name": "int64",
                        "type": "int64"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "OneOfNested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "TestGrandparent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "val",
                "type": "string"
              },
              {
                "id": 3,
                "name": "embedded",
                "type": "Embedded",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "risk_score",
                "type": "float"
              }
            ],
            "messages": [
              {
                "name": "Embedded",
                "fields": [
                  {
                    "id": 1,
                    "name": "val",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "embedded2",
                    "type": "Embedded2",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "Embedded2",
                    "fields": [
                      {
                        "id": 1,
                        "name": "val",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "TestParent1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "children",
                "type": "Child1Ref",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "val",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Child1Ref",
                "fields": [
                  {
                    "id": 1,
                    "name": "child_id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "TestChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestGrandChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "child_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestGGrandChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestG2GrandChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "child_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestG3GrandChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestParent2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestChild2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "grandparent_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestParent3",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestParent4",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestChild1P4",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestShortCircuit",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "child_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "g2_grandchild_id",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:traits.proto",
      "def": {
        "enums": [
          {
            "name": "Traits.MutabilityMode",
            "enum_fields": [
              {
                "name": "ALLOW_MUTATE"
              },
              {
                "name": "ALLOW_MUTATE_FORCED",
                "integer": 1
              }
            ]
          },
          {
            "name": "Traits.Visibility",
            "enum_fields": [
              {
                "name": "VISIBLE"
              },
              {
                "name": "HIDDEN",
                "integer": 1
              }
            ]
          },
          {
            "name": "Traits.Origin",
            "enum_fields": [
              {
                "name": "IMPERATIVE"
              },
              {
                "name": "DEFAULT",
                "integer": 1
              },
              {
                "name": "DECLARATIVE",
                "integer": 2
              },
              {
                "name": "DECLARATIVE_ORPHANED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Traits",
            "fields": [
              {
                "id": 1,
                "name": "mutability_mode",
                "type": "MutabilityMode"
              },
              {
                "id": 2,
                "name": "visibility",
                "type": "Visibility"
              },
              {
                "id": 3,
                "name": "origin",
                "type": "Origin"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:user.proto",
      "def": {
        "messages": [
          {
            "name": "SlimUser",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "User",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "attributes",
                "type": "UserAttribute",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UserAttribute",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "UserInfo",
            "fields": [
              {
                "id": 1,
                "name": "username",
                "type": "string"
              },
              {
                "id": 2,
                "name": "friendly_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "permissions",
                "type": "ResourceToAccess"
              },
              {
                "id": 5,
                "name": "roles",
                "type": "Role",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              3
            ],
            "messages": [
              {
                "name": "Role",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "resource_to_access",
                      "type": "Access"
                    }
                  }
                ],
                "reserved_ids": [
                  2
                ]
              },
              {
                "name": "ResourceToAccess",
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "resource_to_access",
                      "type": "Access"
                    }
                  }
                ],
                "reserved_ids": [
                  1,
                  2
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/role.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:version.proto",
      "def": {
        "messages": [
          {
            "name": "Version",
            "fields": [
              {
                "id": 1,
                "name": "seq_num",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "last_persisted",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:vuln_requests.proto",
      "def": {
        "enums": [
          {
            "name": "RequestStatus",
            "enum_fields": [
              {
                "name": "PENDING"
              },
              {
                "name": "APPROVED",
                "integer": 1
              },
              {
                "name": "DENIED",
                "integer": 2
              },
              {
                "name": "APPROVED_PENDING_UPDATE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "RequestComment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              },
              {
                "id": 3,
                "name": "user",
                "type": "SlimUser"
              },
              {
                "id": 4,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "RequestExpiry",
            "fields": [
              {
                "id": 1,
                "name": "expires_when_fixed",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "expires_on",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "DeferralRequest",
            "fields": [
              {
                "id": 1,
                "name": "expiry",
                "type": "RequestExpiry"
              }
            ]
          },
          {
            "name": "FalsePositiveRequest"
          },
          {
            "name": "VulnerabilityRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "target_state",
                "type": "VulnerabilityState"
              },
              {
                "id": 3,
                "name": "status",
                "type": "RequestStatus"
              },
              {
                "id": 4,
                "name": "expired",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "requestor",
                "type": "SlimUser"
              },
              {
                "id": 6,
                "name": "approvers",
                "type": "SlimUser",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "comments",
                "type": "RequestComment",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "scope",
                "type": "Scope"
              },
              {
                "id": 11,
                "name": "deferral_req",
                "type": "DeferralRequest"
              },
              {
                "id": 12,
                "name": "fp_request",
                "type": "FalsePositiveRequest"
              },
              {
                "id": 16,
                "name": "cves",
                "type": "CVEs"
              },
              {
                "id": 21,
                "name": "updated_deferral_req",
                "type": "DeferralRequest"
              }
            ],
            "messages": [
              {
                "name": "CVEs",
                "fields": [
                  {
                    "id": 1,
                    "name": "cves",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "Scope",
                "fields": [
                  {
                    "id": 1,
                    "name": "image_scope",
                    "type": "Image"
                  },
                  {
                    "id": 2,
                    "name": "global_scope",
                    "type": "Global"
                  }
                ],
                "messages": [
                  {
                    "name": "Image",
                    "fields": [
                      {
                        "id": 1,
                        "name": "registry",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "remote",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "tag",
                        "type": "string"
                      }
                    ]
                  },
                  {
                    "name": "Global"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/cve.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:storage:/:vulnerability.proto",
      "def": {
        "enums": [
          {
            "name": "EmbeddedVulnerability.ScoreVersion",
            "enum_fields": [
              {
                "name": "V2"
              },
              {
                "name": "V3",
                "integer": 1
              }
            ]
          },
          {
            "name": "EmbeddedVulnerability.VulnerabilityType",
            "enum_fields": [
              {
                "name": "UNKNOWN_VULNERABILITY"
              },
              {
                "name": "IMAGE_VULNERABILITY",
                "integer": 1
              },
              {
                "name": "K8S_VULNERABILITY",
                "integer": 2
              },
              {
                "name": "ISTIO_VULNERABILITY",
                "integer": 3
              },
              {
                "name": "NODE_VULNERABILITY",
                "integer": 4
              },
              {
                "name": "OPENSHIFT_VULNERABILITY",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "EmbeddedVulnerability",
            "fields": [
              {
                "id": 1,
                "name": "cve",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 3,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 4,
                "name": "link",
                "type": "string"
              },
              {
                "id": 5,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 8,
                "name": "score_version",
                "type": "ScoreVersion"
              },
              {
                "id": 6,
                "name": "cvss_v2",
                "type": "CVSSV2"
              },
              {
                "id": 7,
                "name": "cvss_v3",
                "type": "CVSSV3"
              },
              {
                "id": 9,
                "name": "published_on",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "last_modified",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 11,
                "name": "vulnerability_type",
                "type": "VulnerabilityType"
              },
              {
                "id": 18,
                "name": "vulnerability_types",
                "type": "VulnerabilityType",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "suppressed",
                "type": "bool"
              },
              {
                "id": 13,
                "name": "suppress_activation",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 14,
                "name": "suppress_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 15,
                "name": "first_system_occurrence",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 16,
                "name": "first_image_occurrence",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 19,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 20,
                "name": "state",
                "type": "VulnerabilityState"
              }
            ],
            "reserved_ids": [
              17
            ]
          },
          {
            "name": "NodeVulnerability",
            "fields": [
              {
                "id": 1,
                "name": "cve_base_info",
                "type": "CVEInfo"
              },
              {
                "id": 2,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 3,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 4,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 5,
                "name": "snoozed",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "snooze_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "snooze_expiry",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/cve.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:test:/:test.proto",
      "def": {
        "enums": [
          {
            "name": "TestClone.CloneEnum",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "Val1",
                "integer": 1
              },
              {
                "name": "Val2",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "TestCloneSubMessage",
            "fields": [
              {
                "id": 1,
                "name": "int32",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "string",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestClone",
            "fields": [
              {
                "id": 1,
                "name": "int_slice",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "sub_messages",
                "type": "TestCloneSubMessage",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "enum_slice",
                "type": "CloneEnum",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "ts",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "int32",
                "type": "int32"
              },
              {
                "id": 9,
                "name": "string",
                "type": "string"
              },
              {
                "id": 10,
                "name": "msg",
                "type": "TestCloneSubMessage"
              },
              {
                "id": 11,
                "name": "any",
                "type": "google.protobuf.Any"
              },
              {
                "id": 13,
                "name": "bytes_slice",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "bytes",
                "type": "bytes"
              },
              {
                "id": 15,
                "name": "sub_message",
                "type": "TestCloneSubMessage"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "message_map",
                  "type": "TestCloneSubMessage"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "string_map",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 12,
                  "name": "bytes_map",
                  "type": "bytes"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "test"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:build:/:resources:/:main:/:tools:/:local-sensor:/:message.proto",
      "def": {
        "messages": [
          {
            "name": "LocalSensorPolicies",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "storage.Policy",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "localSensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:integrations:/:splunk_service.proto",
      "def": {
        "enums": [
          {
            "name": "ViolationInfo.ViolationType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "GENERIC",
                "integer": 1
              },
              {
                "name": "K8S_EVENT",
                "integer": 2
              },
              {
                "name": "PROCESS_EVENT",
                "integer": 3
              },
              {
                "name": "NETWORK_FLOW",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "SplunkViolationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "violations",
                "type": "SplunkViolation",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "new_checkpoint",
                "type": "string"
              }
            ]
          },
          {
            "name": "SplunkViolation",
            "fields": [
              {
                "id": 1,
                "name": "violation_info",
                "type": "ViolationInfo"
              },
              {
                "id": 2,
                "name": "alert_info",
                "type": "AlertInfo"
              },
              {
                "id": 3,
                "name": "process_info",
                "type": "ProcessInfo"
              },
              {
                "id": 4,
                "name": "deployment_info",
                "type": "DeploymentInfo"
              },
              {
                "id": 10,
                "name": "resource_info",
                "type": "ResourceInfo"
              },
              {
                "id": 5,
                "name": "policy_info",
                "type": "PolicyInfo"
              },
              {
                "id": 6,
                "name": "network_flow_info",
                "type": "storage.Alert.Violation.NetworkFlowInfo"
              }
            ],
            "messages": [
              {
                "name": "ViolationInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "violation_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "violation_message",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "violation_message_attributes",
                    "type": "storage.Alert.Violation.KeyValueAttrs.KeyValueAttr",
                    "is_repeated": true
                  },
                  {
                    "id": 4,
                    "name": "violation_type",
                    "type": "ViolationType"
                  },
                  {
                    "id": 5,
                    "name": "violation_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 102,
                    "name": "pod_id",
                    "type": "string"
                  },
                  {
                    "id": 103,
                    "name": "pod_uid",
                    "type": "string"
                  },
                  {
                    "id": 104,
                    "name": "container_name",
                    "type": "string"
                  },
                  {
                    "id": 105,
                    "name": "container_start_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 106,
                    "name": "container_id",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "AlertInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "alert_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "lifecycle_stage",
                    "type": "storage.LifecycleStage"
                  },
                  {
                    "id": 4,
                    "name": "alert_first_occurred",
                    "type": "google.protobuf.Timestamp"
                  }
                ],
                "reserved_ids": [
                  3
                ]
              },
              {
                "name": "ProcessInfo",
                "fields": [
                  {
                    "id": 101,
                    "name": "process_violation_id",
                    "type": "string"
                  },
                  {
                    "id": 202,
                    "name": "process_signal_id",
                    "type": "string"
                  },
                  {
                    "id": 203,
                    "name": "process_creation_time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 204,
                    "name": "process_name",
                    "type": "string"
                  },
                  {
                    "id": 205,
                    "name": "process_args",
                    "type": "string"
                  },
                  {
                    "id": 206,
                    "name": "exec_file_path",
                    "type": "string"
                  },
                  {
                    "id": 207,
                    "name": "pid",
                    "type": "google.protobuf.UInt32Value"
                  },
                  {
                    "id": 208,
                    "name": "process_uid",
                    "type": "google.protobuf.UInt32Value"
                  },
                  {
                    "id": 209,
                    "name": "process_gid",
                    "type": "google.protobuf.UInt32Value"
                  },
                  {
                    "id": 210,
                    "name": "process_lineage_info",
                    "type": "storage.ProcessSignal.LineageInfo",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "DeploymentInfo",
                "fields": [
                  {
                    "id": 101,
                    "name": "deployment_id",
                    "type": "string"
                  },
                  {
                    "id": 102,
                    "name": "deployment_name",
                    "type": "string"
                  },
                  {
                    "id": 103,
                    "name": "deployment_type",
                    "type": "string"
                  },
                  {
                    "id": 104,
                    "name": "deployment_namespace",
                    "type": "string"
                  },
                  {
                    "id": 105,
                    "name": "deployment_namespace_id",
                    "type": "string"
                  },
                  {
                    "id": 107,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 108,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 109,
                    "name": "deployment_containers",
                    "type": "storage.Alert.Deployment.Container",
                    "is_repeated": true
                  },
                  {
                    "id": 201,
                    "name": "deployment_image",
                    "type": "storage.ContainerImage"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 106,
                      "name": "deployment_labels",
                      "type": "string"
                    }
                  },
                  {
                    "key_type": "string",
                    "field": {
                      "id": 110,
                      "name": "deployment_annotations",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "ResourceInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "resource_type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "namespace",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "PolicyInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "policy_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "policy_name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "policy_description",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "policy_rationale",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "policy_categories",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 6,
                    "name": "policy_lifecycle_stages",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 7,
                    "name": "policy_severity",
                    "type": "string"
                  },
                  {
                    "id": 8,
                    "name": "policy_version",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "google/protobuf/wrappers.proto"
          },
          {
            "path": "storage/alert.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "integrations"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:alert_service.proto",
      "def": {
        "enums": [
          {
            "name": "GetAlertsCountsRequest.RequestGroup",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "CATEGORY",
                "integer": 1
              },
              {
                "name": "CLUSTER",
                "integer": 2
              }
            ]
          },
          {
            "name": "Type",
            "enum_fields": [
              {
                "name": "CREATED"
              },
              {
                "name": "REMOVED",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CountAlertsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ListAlertsRequest",
            "fields": [
              {
                "id": 10,
                "name": "query",
                "type": "string"
              },
              {
                "id": 11,
                "name": "pagination",
                "type": "Pagination"
              }
            ],
            "reserved_ids": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9
            ]
          },
          {
            "name": "ResolveAlertRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "whitelist",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "add_to_baseline",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ResolveAlertsRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "SnoozeAlertRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "snooze_till",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ListAlertsResponse",
            "fields": [
              {
                "id": 1,
                "name": "alerts",
                "type": "storage.ListAlert",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeleteAlertsRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              },
              {
                "id": 2,
                "name": "confirm",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteAlertsResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_deleted",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "dry_run",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetAlertsGroupResponse",
            "fields": [
              {
                "id": 1,
                "name": "alerts_by_policies",
                "type": "PolicyGroup",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "PolicyGroup",
                "fields": [
                  {
                    "id": 1,
                    "name": "policy",
                    "type": "storage.ListAlertPolicy"
                  },
                  {
                    "id": 2,
                    "name": "num_alerts",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetAlertsCountsRequest",
            "fields": [
              {
                "id": 1,
                "name": "request",
                "type": "ListAlertsRequest"
              },
              {
                "id": 2,
                "name": "group_by",
                "type": "RequestGroup"
              }
            ]
          },
          {
            "name": "GetAlertsCountsResponse",
            "fields": [
              {
                "id": 1,
                "name": "groups",
                "type": "AlertGroup",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "AlertGroup",
                "fields": [
                  {
                    "id": 1,
                    "name": "group",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "counts",
                    "type": "AlertCounts",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "AlertCounts",
                    "fields": [
                      {
                        "id": 1,
                        "name": "severity",
                        "type": "storage.Severity"
                      },
                      {
                        "id": 2,
                        "name": "count",
                        "type": "int64"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "AlertEvent",
            "fields": [
              {
                "id": 1,
                "name": "time",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 3,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetAlertTimeseriesResponse",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "ClusterAlerts",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ClusterAlerts",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "severities",
                    "type": "AlertEvents",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "AlertEvents",
                    "fields": [
                      {
                        "id": 1,
                        "name": "severity",
                        "type": "storage.Severity"
                      },
                      {
                        "id": 2,
                        "name": "events",
                        "type": "AlertEvent",
                        "is_repeated": true
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AlertService",
            "rpcs": [
              {
                "name": "GetAlert",
                "in_type": "ResourceByID",
                "out_type": "storage.Alert"
              },
              {
                "name": "CountAlerts",
                "in_type": "RawQuery",
                "out_type": "CountAlertsResponse"
              },
              {
                "name": "ListAlerts",
                "in_type": "ListAlertsRequest",
                "out_type": "ListAlertsResponse"
              },
              {
                "name": "GetAlertsGroup",
                "in_type": "ListAlertsRequest",
                "out_type": "GetAlertsGroupResponse"
              },
              {
                "name": "GetAlertsCounts",
                "in_type": "GetAlertsCountsRequest",
                "out_type": "GetAlertsCountsResponse"
              },
              {
                "name": "GetAlertTimeseries",
                "in_type": "ListAlertsRequest",
                "out_type": "GetAlertTimeseriesResponse"
              },
              {
                "name": "ResolveAlert",
                "in_type": "ResolveAlertRequest",
                "out_type": "Empty"
              },
              {
                "name": "ResolveAlerts",
                "in_type": "ResolveAlertsRequest",
                "out_type": "Empty"
              },
              {
                "name": "SnoozeAlert",
                "in_type": "SnoozeAlertRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeleteAlerts",
                "in_type": "DeleteAlertsRequest",
                "out_type": "DeleteAlertsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/pagination.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/alert.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:api_token_service.proto",
      "def": {
        "messages": [
          {
            "name": "GenerateTokenRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "role",
                "type": "string"
              },
              {
                "id": 3,
                "name": "roles",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GenerateTokenResponse",
            "fields": [
              {
                "id": 1,
                "name": "token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "metadata",
                "type": "storage.TokenMetadata"
              }
            ]
          },
          {
            "name": "GetAPITokensRequest",
            "fields": [
              {
                "id": 1,
                "name": "revoked",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetAPITokensResponse",
            "fields": [
              {
                "id": 1,
                "name": "tokens",
                "type": "storage.TokenMetadata",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "APITokenService",
            "rpcs": [
              {
                "name": "GetAPIToken",
                "in_type": "ResourceByID",
                "out_type": "storage.TokenMetadata"
              },
              {
                "name": "GetAPITokens",
                "in_type": "GetAPITokensRequest",
                "out_type": "GetAPITokensResponse"
              },
              {
                "name": "GenerateToken",
                "in_type": "GenerateTokenRequest",
                "out_type": "GenerateTokenResponse"
              },
              {
                "name": "RevokeToken",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/api_token.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:audit.proto",
      "def": {
        "enums": [
          {
            "name": "Audit.RequestStatus",
            "enum_fields": [
              {
                "name": "UNKNOWN_STATUS"
              },
              {
                "name": "REQUEST_SUCCEEDED",
                "integer": 1
              },
              {
                "name": "AUTH_FAILED",
                "integer": 2
              },
              {
                "name": "REQUEST_FAILED",
                "integer": 3
              }
            ]
          },
          {
            "name": "Audit.Interaction",
            "enum_fields": [
              {
                "name": "UNKNOWN_INTERACTION"
              },
              {
                "name": "CREATE",
                "integer": 1
              },
              {
                "name": "UPDATE",
                "integer": 2
              },
              {
                "name": "DELETE",
                "integer": 3
              }
            ]
          },
          {
            "name": "Audit.AccessMethod",
            "enum_fields": [
              {
                "name": "UNKNOWN_METHOD"
              },
              {
                "name": "CLI",
                "integer": 1
              },
              {
                "name": "UI",
                "integer": 2
              },
              {
                "name": "API",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Audit",
            "messages": [
              {
                "name": "Message",
                "fields": [
                  {
                    "id": 1,
                    "name": "time",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 2,
                    "name": "status",
                    "type": "RequestStatus"
                  },
                  {
                    "id": 3,
                    "name": "status_reason",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "user",
                    "type": "storage.UserInfo"
                  },
                  {
                    "id": 5,
                    "name": "request",
                    "type": "Request"
                  },
                  {
                    "id": 6,
                    "name": "method",
                    "type": "AccessMethod"
                  },
                  {
                    "id": 7,
                    "name": "interaction",
                    "type": "Interaction"
                  }
                ],
                "messages": [
                  {
                    "name": "Request",
                    "fields": [
                      {
                        "id": 1,
                        "name": "endpoint",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "method",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "payload",
                        "type": "google.protobuf.Any"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/user.proto"
          },
          {
            "path": "google/protobuf/any.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:auth_service.proto",
      "def": {
        "messages": [
          {
            "name": "UserAttribute",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AuthStatus",
            "fields": [
              {
                "id": 1,
                "name": "user_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "service_id",
                "type": "storage.ServiceIdentity"
              },
              {
                "id": 3,
                "name": "expires",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "refresh_url",
                "type": "string"
              },
              {
                "id": 5,
                "name": "auth_provider",
                "type": "storage.AuthProvider"
              },
              {
                "id": 6,
                "name": "user_info",
                "type": "storage.UserInfo"
              },
              {
                "id": 7,
                "name": "user_attributes",
                "type": "UserAttribute",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AuthService",
            "rpcs": [
              {
                "name": "GetAuthStatus",
                "in_type": "Empty",
                "out_type": "AuthStatus"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/auth_provider.proto"
          },
          {
            "path": "storage/service_identity.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:authprovider_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetAuthProviderRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetAuthProvidersRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetLoginAuthProvidersResponse",
            "fields": [
              {
                "id": 1,
                "name": "auth_providers",
                "type": "LoginAuthProvider",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "LoginAuthProvider",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "login_url",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetAuthProvidersResponse",
            "fields": [
              {
                "id": 1,
                "name": "auth_providers",
                "type": "storage.AuthProvider",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PostAuthProviderRequest",
            "fields": [
              {
                "id": 1,
                "name": "provider",
                "type": "storage.AuthProvider"
              }
            ]
          },
          {
            "name": "UpdateAuthProviderRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "enabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ExchangeTokenRequest",
            "fields": [
              {
                "id": 1,
                "name": "external_token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "state",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExchangeTokenResponse",
            "fields": [
              {
                "id": 1,
                "name": "token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "client_state",
                "type": "string"
              },
              {
                "id": 3,
                "name": "test",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "user",
                "type": "v1.AuthStatus"
              }
            ]
          },
          {
            "name": "AvailableProviderTypesResponse",
            "fields": [
              {
                "id": 1,
                "name": "auth_provider_types",
                "type": "AuthProviderType",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "AuthProviderType",
                "fields": [
                  {
                    "id": 1,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "suggested_attributes",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AuthProviderService",
            "rpcs": [
              {
                "name": "ListAvailableProviderTypes",
                "in_type": "Empty",
                "out_type": "AvailableProviderTypesResponse"
              },
              {
                "name": "GetAuthProvider",
                "in_type": "GetAuthProviderRequest",
                "out_type": "storage.AuthProvider"
              },
              {
                "name": "GetLoginAuthProviders",
                "in_type": "Empty",
                "out_type": "GetLoginAuthProvidersResponse"
              },
              {
                "name": "GetAuthProviders",
                "in_type": "GetAuthProvidersRequest",
                "out_type": "GetAuthProvidersResponse"
              },
              {
                "name": "PostAuthProvider",
                "in_type": "PostAuthProviderRequest",
                "out_type": "storage.AuthProvider"
              },
              {
                "name": "UpdateAuthProvider",
                "in_type": "UpdateAuthProviderRequest",
                "out_type": "storage.AuthProvider"
              },
              {
                "name": "PutAuthProvider",
                "in_type": "storage.AuthProvider",
                "out_type": "storage.AuthProvider"
              },
              {
                "name": "DeleteAuthProvider",
                "in_type": "DeleteByIDWithForce",
                "out_type": "Empty"
              },
              {
                "name": "ExchangeToken",
                "in_type": "ExchangeTokenRequest",
                "out_type": "ExchangeTokenResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/auth_service.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/auth_provider.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:backup_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetExternalBackupsResponse",
            "fields": [
              {
                "id": 1,
                "name": "external_backups",
                "type": "storage.ExternalBackup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateExternalBackupRequest",
            "fields": [
              {
                "id": 1,
                "name": "external_backup",
                "type": "storage.ExternalBackup"
              },
              {
                "id": 2,
                "name": "update_password",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ExternalBackupService",
            "rpcs": [
              {
                "name": "GetExternalBackup",
                "in_type": "ResourceByID",
                "out_type": "storage.ExternalBackup"
              },
              {
                "name": "GetExternalBackups",
                "in_type": "Empty",
                "out_type": "GetExternalBackupsResponse"
              },
              {
                "name": "PostExternalBackup",
                "in_type": "storage.ExternalBackup",
                "out_type": "storage.ExternalBackup"
              },
              {
                "name": "PutExternalBackup",
                "in_type": "storage.ExternalBackup",
                "out_type": "storage.ExternalBackup"
              },
              {
                "name": "TestExternalBackup",
                "in_type": "storage.ExternalBackup",
                "out_type": "Empty"
              },
              {
                "name": "DeleteExternalBackup",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "TriggerExternalBackup",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "UpdateExternalBackup",
                "in_type": "UpdateExternalBackupRequest",
                "out_type": "storage.ExternalBackup"
              },
              {
                "name": "TestUpdatedExternalBackup",
                "in_type": "UpdateExternalBackupRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/external_backup.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:central_health_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetUpgradeStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "upgradeStatus",
                "type": "CentralUpgradeStatus"
              }
            ]
          },
          {
            "name": "CentralUpgradeStatus",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "force_rollback_to",
                "type": "string"
              },
              {
                "id": 3,
                "name": "can_rollback_after_upgrade",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "space_required_for_rollback_after_upgrade",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "space_available_for_rollback_after_upgrade",
                "type": "int64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CentralHealthService",
            "rpcs": [
              {
                "name": "GetUpgradeStatus",
                "in_type": "Empty",
                "out_type": "GetUpgradeStatusResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:cluster_init_service.proto",
      "def": {
        "messages": [
          {
            "name": "InitBundleMeta",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "impacted_clusters",
                "type": "ImpactedCluster",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "created_by",
                "type": "storage.User"
              },
              {
                "id": 5,
                "name": "expires_at",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "messages": [
              {
                "name": "ImpactedCluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "InitBundleGenResponse",
            "fields": [
              {
                "id": 1,
                "name": "meta",
                "type": "InitBundleMeta"
              },
              {
                "id": 2,
                "name": "helm_values_bundle",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "kubectl_bundle",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "GetCAConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "helm_values_bundle",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "InitBundleMetasResponse",
            "fields": [
              {
                "id": 1,
                "name": "items",
                "type": "InitBundleMeta",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "InitBundleGenRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "InitBundleRevokeRequest",
            "fields": [
              {
                "id": 1,
                "name": "ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "confirm_impacted_clusters_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "InitBundleRevokeResponse",
            "fields": [
              {
                "id": 2,
                "name": "init_bundle_revocation_errors",
                "type": "InitBundleRevocationError",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "init_bundle_revoked_ids",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "InitBundleRevocationError",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "error",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "impacted_clusters",
                    "type": "InitBundleMeta.ImpactedCluster",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ClusterInitService",
            "rpcs": [
              {
                "name": "RevokeInitBundle",
                "in_type": "InitBundleRevokeRequest",
                "out_type": "InitBundleRevokeResponse"
              },
              {
                "name": "GetCAConfig",
                "in_type": "Empty",
                "out_type": "GetCAConfigResponse"
              },
              {
                "name": "GetInitBundles",
                "in_type": "Empty",
                "out_type": "InitBundleMetasResponse"
              },
              {
                "name": "GenerateInitBundle",
                "in_type": "InitBundleGenRequest",
                "out_type": "InitBundleGenResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:cluster_service.proto",
      "def": {
        "enums": [
          {
            "name": "DeploymentFormat",
            "enum_fields": [
              {
                "name": "KUBECTL"
              },
              {
                "name": "HELM",
                "integer": 1
              },
              {
                "name": "HELM_VALUES",
                "integer": 2
              }
            ]
          },
          {
            "name": "LoadBalancerType",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "LOAD_BALANCER",
                "integer": 1
              },
              {
                "name": "NODE_PORT",
                "integer": 2
              },
              {
                "name": "ROUTE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DecommissionedClusterRetentionInfo",
            "fields": [
              {
                "id": 1,
                "name": "is_excluded",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "days_until_deletion",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ClusterResponse",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "storage.Cluster"
              },
              {
                "id": 2,
                "name": "cluster_retention_info",
                "type": "DecommissionedClusterRetentionInfo"
              }
            ]
          },
          {
            "name": "ClusterDefaultsResponse",
            "fields": [
              {
                "id": 1,
                "name": "main_image_repository",
                "type": "string"
              },
              {
                "id": 2,
                "name": "collector_image_repository",
                "type": "string"
              },
              {
                "id": 3,
                "name": "kernel_support_available",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ClustersList",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "storage.Cluster",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "cluster_id_to_retention_info",
                  "type": "DecommissionedClusterRetentionInfo"
                }
              }
            ]
          },
          {
            "name": "GetClustersRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "KernelSupportAvailableResponse",
            "fields": [
              {
                "id": 1,
                "name": "kernel_support_available",
                "type": "bool"
              }
            ],
            "options": [
              {
                "name": "deprecated",
                "value": "true"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ClustersService",
            "rpcs": [
              {
                "name": "GetClusters",
                "in_type": "GetClustersRequest",
                "out_type": "ClustersList"
              },
              {
                "name": "GetCluster",
                "in_type": "ResourceByID",
                "out_type": "ClusterResponse"
              },
              {
                "name": "PostCluster",
                "in_type": "storage.Cluster",
                "out_type": "ClusterResponse"
              },
              {
                "name": "PutCluster",
                "in_type": "storage.Cluster",
                "out_type": "ClusterResponse"
              },
              {
                "name": "DeleteCluster",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetKernelSupportAvailable",
                "in_type": "Empty",
                "out_type": "KernelSupportAvailableResponse"
              },
              {
                "name": "GetClusterDefaultValues",
                "in_type": "Empty",
                "out_type": "ClusterDefaultsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:common.proto",
      "def": {
        "messages": [
          {
            "name": "ResourceByID",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeleteByIDWithForce",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:compliance_management_service.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceRun.State",
            "enum_fields": [
              {
                "name": "INVALID"
              },
              {
                "name": "READY",
                "integer": 1
              },
              {
                "name": "STARTED",
                "integer": 2
              },
              {
                "name": "WAIT_FOR_DATA",
                "integer": 3
              },
              {
                "name": "EVALUTING_CHECKS",
                "integer": 4
              },
              {
                "name": "FINISHED",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceRunSelection",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetActiveComplianceRunsRequest",
            "fields": [
              {
                "id": 1,
                "name": "selection",
                "type": "ComplianceRunSelection"
              }
            ]
          },
          {
            "name": "GetActiveComplianceRunsResponse",
            "fields": [
              {
                "id": 1,
                "name": "active_runs",
                "type": "ComplianceRun",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComplianceRun",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "finish_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "state",
                "type": "State"
              },
              {
                "id": 8,
                "name": "error_message",
                "type": "string"
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "GetRecentComplianceRunsRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "since",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "GetRecentComplianceRunsResponse",
            "fields": [
              {
                "id": 1,
                "name": "compliance_runs",
                "type": "ComplianceRun",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TriggerComplianceRunRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "TriggerComplianceRunResponse",
            "fields": [
              {
                "id": 1,
                "name": "started_run",
                "type": "ComplianceRun"
              }
            ]
          },
          {
            "name": "TriggerComplianceRunsRequest",
            "fields": [
              {
                "id": 1,
                "name": "selection",
                "type": "ComplianceRunSelection"
              }
            ]
          },
          {
            "name": "TriggerComplianceRunsResponse",
            "fields": [
              {
                "id": 1,
                "name": "started_runs",
                "type": "ComplianceRun",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetComplianceRunStatusesRequest",
            "fields": [
              {
                "id": 1,
                "name": "run_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetComplianceRunStatusesResponse",
            "fields": [
              {
                "id": 1,
                "name": "invalid_run_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "runs",
                "type": "ComplianceRun",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceManagementService",
            "rpcs": [
              {
                "name": "GetRecentRuns",
                "in_type": "GetRecentComplianceRunsRequest",
                "out_type": "GetRecentComplianceRunsResponse"
              },
              {
                "name": "TriggerRuns",
                "in_type": "TriggerComplianceRunsRequest",
                "out_type": "TriggerComplianceRunsResponse"
              },
              {
                "name": "GetRunStatuses",
                "in_type": "GetComplianceRunStatusesRequest",
                "out_type": "GetComplianceRunStatusesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:compliance_service.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceStandardMetadata.Scope",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "CLUSTER",
                "integer": 1
              },
              {
                "name": "NAMESPACE",
                "integer": 2
              },
              {
                "name": "DEPLOYMENT",
                "integer": 3
              },
              {
                "name": "NODE",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceAggregationRequest",
            "fields": [
              {
                "id": 1,
                "name": "group_by",
                "type": "storage.ComplianceAggregation.Scope",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "unit",
                "type": "storage.ComplianceAggregation.Scope"
              },
              {
                "id": 3,
                "name": "where",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "ComplianceStandardMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "num_implemented_checks",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "scopes",
                "type": "Scope",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "dynamic",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ComplianceControlGroup",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "num_implemented_checks",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ComplianceControl",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "group_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "description",
                "type": "string"
              },
              {
                "id": 6,
                "name": "implemented",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "interpretation_text",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceStandard",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "ComplianceStandardMetadata"
              },
              {
                "id": 2,
                "name": "groups",
                "type": "ComplianceControlGroup",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "controls",
                "type": "ComplianceControl",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetComplianceStandardResponse",
            "fields": [
              {
                "id": 1,
                "name": "standard",
                "type": "ComplianceStandard"
              }
            ]
          },
          {
            "name": "GetComplianceStandardsResponse",
            "fields": [
              {
                "id": 1,
                "name": "standards",
                "type": "ComplianceStandardMetadata",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetComplianceRunResultsRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "run_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetComplianceRunResultsResponse",
            "fields": [
              {
                "id": 1,
                "name": "results",
                "type": "storage.ComplianceRunResults"
              },
              {
                "id": 2,
                "name": "failed_runs",
                "type": "storage.ComplianceRunMetadata",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceService",
            "rpcs": [
              {
                "name": "GetStandards",
                "in_type": "Empty",
                "out_type": "GetComplianceStandardsResponse"
              },
              {
                "name": "GetStandard",
                "in_type": "ResourceByID",
                "out_type": "GetComplianceStandardResponse"
              },
              {
                "name": "GetRunResults",
                "in_type": "GetComplianceRunResultsRequest",
                "out_type": "GetComplianceRunResultsResponse"
              },
              {
                "name": "GetAggregatedResults",
                "in_type": "ComplianceAggregationRequest",
                "out_type": "storage.ComplianceAggregation.Response"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/compliance.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:config_service.proto",
      "def": {
        "messages": [
          {
            "name": "PutConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.Config"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ConfigService",
            "rpcs": [
              {
                "name": "GetPublicConfig",
                "in_type": "Empty",
                "out_type": "storage.PublicConfig"
              },
              {
                "name": "GetPrivateConfig",
                "in_type": "Empty",
                "out_type": "storage.PrivateConfig"
              },
              {
                "name": "GetConfig",
                "in_type": "Empty",
                "out_type": "storage.Config"
              },
              {
                "name": "PutConfig",
                "in_type": "PutConfigRequest",
                "out_type": "storage.Config"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/config.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:credential_expiry_service.proto",
      "def": {
        "enums": [
          {
            "name": "GetCertExpiry.Component",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "CENTRAL",
                "integer": 1
              },
              {
                "name": "SCANNER",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetCertExpiry",
            "messages": [
              {
                "name": "Request",
                "fields": [
                  {
                    "id": 1,
                    "name": "component",
                    "type": "Component"
                  }
                ]
              },
              {
                "name": "Response",
                "fields": [
                  {
                    "id": 1,
                    "name": "expiry",
                    "type": "google.protobuf.Timestamp"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CredentialExpiryService",
            "rpcs": [
              {
                "name": "GetCertExpiry",
                "in_type": "GetCertExpiry.Request",
                "out_type": "GetCertExpiry.Response"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:cve_service.proto",
      "def": {
        "messages": [
          {
            "name": "SuppressCVERequest",
            "fields": [
              {
                "id": 1,
                "name": "cves",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "duration",
                "type": "google.protobuf.Duration"
              }
            ],
            "reserved_ids": [
              2
            ]
          },
          {
            "name": "UnsuppressCVERequest",
            "fields": [
              {
                "id": 1,
                "name": "cves",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CVEService",
            "rpcs": [
              {
                "name": "SuppressCVEs",
                "in_type": "SuppressCVERequest",
                "out_type": "Empty"
              },
              {
                "name": "UnsuppressCVEs",
                "in_type": "UnsuppressCVERequest",
                "out_type": "Empty"
              }
            ]
          },
          {
            "name": "ImageCVEService",
            "rpcs": [
              {
                "name": "SuppressCVEs",
                "in_type": "SuppressCVERequest",
                "out_type": "Empty"
              },
              {
                "name": "UnsuppressCVEs",
                "in_type": "UnsuppressCVERequest",
                "out_type": "Empty"
              }
            ]
          },
          {
            "name": "NodeCVEService",
            "rpcs": [
              {
                "name": "SuppressCVEs",
                "in_type": "SuppressCVERequest",
                "out_type": "Empty"
              },
              {
                "name": "UnsuppressCVEs",
                "in_type": "UnsuppressCVERequest",
                "out_type": "Empty"
              }
            ]
          },
          {
            "name": "ClusterCVEService",
            "rpcs": [
              {
                "name": "SuppressCVEs",
                "in_type": "SuppressCVERequest",
                "out_type": "Empty"
              },
              {
                "name": "UnsuppressCVEs",
                "in_type": "UnsuppressCVERequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/duration.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:db_service.proto",
      "def": {
        "enums": [
          {
            "name": "DBRestoreProcessStatus.State",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "NOT_STARTED",
                "integer": 1
              },
              {
                "name": "IN_PROGRESS",
                "integer": 2
              },
              {
                "name": "PAUSED",
                "integer": 3
              },
              {
                "name": "COMPLETED",
                "integer": 4
              }
            ]
          },
          {
            "name": "DBExportManifest.EncodingType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "UNCOMPREESSED",
                "integer": 1
              },
              {
                "name": "DEFLATED",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "DBRestoreRequestHeader",
            "fields": [
              {
                "id": 1,
                "name": "format_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "manifest",
                "type": "DBExportManifest"
              },
              {
                "id": 3,
                "name": "local_file",
                "type": "LocalFileInfo"
              }
            ],
            "messages": [
              {
                "name": "LocalFileInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "bytes_size",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "DBRestoreProcessMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "header",
                "type": "DBRestoreRequestHeader"
              },
              {
                "id": 3,
                "name": "start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "initiating_user_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "DBRestoreProcessStatus",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "DBRestoreProcessMetadata"
              },
              {
                "id": 2,
                "name": "attempt_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "state",
                "type": "State"
              },
              {
                "id": 4,
                "name": "resume_info",
                "type": "ResumeInfo"
              },
              {
                "id": 5,
                "name": "error",
                "type": "string"
              },
              {
                "id": 6,
                "name": "bytes_read",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "files_processed",
                "type": "int64"
              }
            ],
            "messages": [
              {
                "name": "ResumeInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "pos",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "DBExportManifest",
            "fields": [
              {
                "id": 1,
                "name": "files",
                "type": "File",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "File",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "encoding",
                    "type": "EncodingType"
                  },
                  {
                    "id": 3,
                    "name": "encoded_size",
                    "type": "int64"
                  },
                  {
                    "id": 4,
                    "name": "decoded_size",
                    "type": "int64"
                  },
                  {
                    "id": 5,
                    "name": "decoded_crc32",
                    "type": "fixed32"
                  }
                ]
              }
            ]
          },
          {
            "name": "DBExportFormat",
            "fields": [
              {
                "id": 1,
                "name": "format_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "files",
                "type": "File",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "File",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "optional",
                    "type": "bool"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetDBExportCapabilitiesResponse",
            "fields": [
              {
                "id": 1,
                "name": "formats",
                "type": "DBExportFormat",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "supported_encodings",
                "type": "DBExportManifest.EncodingType",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetActiveDBRestoreProcessResponse",
            "fields": [
              {
                "id": 1,
                "name": "active_status",
                "type": "DBRestoreProcessStatus"
              }
            ]
          },
          {
            "name": "InterruptDBRestoreProcessRequest",
            "fields": [
              {
                "id": 1,
                "name": "process_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "attempt_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "InterruptDBRestoreProcessResponse",
            "fields": [
              {
                "id": 1,
                "name": "resume_info",
                "type": "DBRestoreProcessStatus.ResumeInfo"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DBService",
            "rpcs": [
              {
                "name": "GetExportCapabilities",
                "in_type": "Empty",
                "out_type": "GetDBExportCapabilitiesResponse"
              },
              {
                "name": "GetActiveRestoreProcess",
                "in_type": "Empty",
                "out_type": "GetActiveDBRestoreProcessResponse"
              },
              {
                "name": "InterruptRestoreProcess",
                "in_type": "InterruptDBRestoreProcessRequest",
                "out_type": "InterruptDBRestoreProcessResponse"
              },
              {
                "name": "CancelRestoreProcess",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:debug_service.proto",
      "def": {
        "enums": [
          {
            "name": "Response.Status",
            "enum_fields": [
              {
                "name": "UNKNOWN_STATUS"
              },
              {
                "name": "SUCCESS",
                "integer": 1
              },
              {
                "name": "FAILURE",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetLogLevelRequest",
            "fields": [
              {
                "id": 1,
                "name": "modules",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LogLevelRequest",
            "fields": [
              {
                "id": 1,
                "name": "level",
                "type": "string"
              },
              {
                "id": 2,
                "name": "modules",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ModuleLevel",
            "fields": [
              {
                "id": 1,
                "name": "module",
                "type": "string"
              },
              {
                "id": 2,
                "name": "level",
                "type": "string"
              }
            ]
          },
          {
            "name": "LogLevelResponse",
            "fields": [
              {
                "id": 1,
                "name": "level",
                "type": "string"
              },
              {
                "id": 2,
                "name": "module_levels",
                "type": "ModuleLevel",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AuthorizationTraceResponse",
            "fields": [
              {
                "id": 1,
                "name": "arrived_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "processed_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "request",
                "type": "Request"
              },
              {
                "id": 4,
                "name": "response",
                "type": "Response"
              },
              {
                "id": 5,
                "name": "user",
                "type": "User"
              },
              {
                "id": 6,
                "name": "trace",
                "type": "Trace"
              }
            ],
            "messages": [
              {
                "name": "Request",
                "fields": [
                  {
                    "id": 1,
                    "name": "endpoint",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "method",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Response",
                "fields": [
                  {
                    "id": 1,
                    "name": "status",
                    "type": "Status"
                  },
                  {
                    "id": 2,
                    "name": "error",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "User",
                "fields": [
                  {
                    "id": 1,
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "friendly_name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "roles",
                    "type": "Role",
                    "is_repeated": true
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "aggregated_permissions",
                      "type": "storage.Access"
                    }
                  }
                ],
                "messages": [
                  {
                    "name": "Role",
                    "fields": [
                      {
                        "id": 1,
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "access_scope_name",
                        "type": "string"
                      },
                      {
                        "id": 4,
                        "name": "access_scope",
                        "type": "storage.SimpleAccessScope.Rules"
                      }
                    ],
                    "maps": [
                      {
                        "key_type": "string",
                        "field": {
                          "id": 2,
                          "name": "permissions",
                          "type": "storage.Access"
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Trace",
                "fields": [
                  {
                    "id": 1,
                    "name": "scope_checker_type",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "built_in",
                    "type": "BuiltInAuthorizer"
                  }
                ],
                "messages": [
                  {
                    "name": "BuiltInAuthorizer",
                    "fields": [
                      {
                        "id": 1,
                        "name": "clusters_total_num",
                        "type": "int32"
                      },
                      {
                        "id": 2,
                        "name": "namespaces_total_num",
                        "type": "int32"
                      }
                    ],
                    "maps": [
                      {
                        "key_type": "string",
                        "field": {
                          "id": 3,
                          "name": "denied_authz_decisions",
                          "type": "int32"
                        }
                      },
                      {
                        "key_type": "string",
                        "field": {
                          "id": 4,
                          "name": "allowed_authz_decisions",
                          "type": "int32"
                        }
                      },
                      {
                        "key_type": "string",
                        "field": {
                          "id": 5,
                          "name": "effective_access_scopes",
                          "type": "string"
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DebugService",
            "rpcs": [
              {
                "name": "GetLogLevel",
                "in_type": "GetLogLevelRequest",
                "out_type": "LogLevelResponse"
              },
              {
                "name": "SetLogLevel",
                "in_type": "LogLevelRequest",
                "out_type": "google.protobuf.Empty"
              },
              {
                "name": "StreamAuthzTraces",
                "in_type": "v1.Empty",
                "out_type": "AuthorizationTraceResponse",
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "google/protobuf/empty.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/role.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:deployment_service.proto",
      "def": {
        "messages": [
          {
            "name": "DeploymentLabelsResponse",
            "fields": [
              {
                "id": 2,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "labels",
                  "type": "LabelValues"
                }
              }
            ],
            "messages": [
              {
                "name": "LabelValues",
                "fields": [
                  {
                    "id": 1,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ListDeploymentsResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployments",
                "type": "storage.ListDeployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountDeploymentsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ListDeploymentsWithProcessInfoResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployments",
                "type": "DeploymentWithProcessInfo",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "DeploymentWithProcessInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "deployment",
                    "type": "storage.ListDeployment"
                  },
                  {
                    "id": 3,
                    "name": "baseline_statuses",
                    "type": "storage.ContainerNameAndBaselineStatus",
                    "is_repeated": true
                  }
                ],
                "reserved_ids": [
                  2
                ]
              }
            ]
          },
          {
            "name": "GetDeploymentWithRiskResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 2,
                "name": "risk",
                "type": "storage.Risk"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DeploymentService",
            "rpcs": [
              {
                "name": "GetDeployment",
                "in_type": "ResourceByID",
                "out_type": "storage.Deployment"
              },
              {
                "name": "GetDeploymentWithRisk",
                "in_type": "ResourceByID",
                "out_type": "GetDeploymentWithRiskResponse"
              },
              {
                "name": "CountDeployments",
                "in_type": "RawQuery",
                "out_type": "CountDeploymentsResponse"
              },
              {
                "name": "ListDeployments",
                "in_type": "RawQuery",
                "out_type": "ListDeploymentsResponse"
              },
              {
                "name": "ListDeploymentsWithProcessInfo",
                "in_type": "RawQuery",
                "out_type": "ListDeploymentsWithProcessInfoResponse"
              },
              {
                "name": "GetLabels",
                "in_type": "Empty",
                "out_type": "DeploymentLabelsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/risk.proto"
          },
          {
            "path": "storage/process_baseline.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:detection_service.proto",
      "def": {
        "messages": [
          {
            "name": "BuildDetectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.ContainerImage"
              },
              {
                "id": 3,
                "name": "image_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "no_external_metadata",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "send_notifications",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "force",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "policy_categories",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BuildDetectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "alerts",
                "type": "storage.Alert",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeployDetectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 2,
                "name": "no_external_metadata",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "enforcement_only",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeployYAMLDetectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "yaml",
                "type": "string"
              },
              {
                "id": 2,
                "name": "no_external_metadata",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "enforcement_only",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "force",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "policy_categories",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeployDetectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "runs",
                "type": "Run",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "ignored_object_refs",
                "type": "string",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Run",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "alerts",
                    "type": "storage.Alert",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DetectionService",
            "rpcs": [
              {
                "name": "DetectBuildTime",
                "in_type": "BuildDetectionRequest",
                "out_type": "BuildDetectionResponse"
              },
              {
                "name": "DetectDeployTime",
                "in_type": "DeployDetectionRequest",
                "out_type": "DeployDetectionResponse"
              },
              {
                "name": "DetectDeployTimeFromYAML",
                "in_type": "DeployYAMLDetectionRequest",
                "out_type": "DeployDetectionResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/alert.proto"
          },
          {
            "path": "storage/deployment.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:empty.proto",
      "def": {
        "messages": [
          {
            "name": "Empty"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:feature_flag_service.proto",
      "def": {
        "messages": [
          {
            "name": "FeatureFlag",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "env_var",
                "type": "string"
              },
              {
                "id": 3,
                "name": "enabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetFeatureFlagsResponse",
            "fields": [
              {
                "id": 1,
                "name": "feature_flags",
                "type": "FeatureFlag",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "FeatureFlagService",
            "rpcs": [
              {
                "name": "GetFeatureFlags",
                "in_type": "Empty",
                "out_type": "GetFeatureFlagsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:group_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetGroupsRequest",
            "fields": [
              {
                "id": 1,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetGroupsResponse",
            "fields": [
              {
                "id": 1,
                "name": "groups",
                "type": "storage.Group",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GroupBatchUpdateRequest",
            "fields": [
              {
                "id": 1,
                "name": "previous_groups",
                "type": "storage.Group",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "required_groups",
                "type": "storage.Group",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "force",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteGroupRequest",
            "fields": [
              {
                "id": 1,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "force",
                "type": "bool"
              }
            ]
          },
          {
            "name": "UpdateGroupRequest",
            "fields": [
              {
                "id": 1,
                "name": "group",
                "type": "storage.Group"
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "GroupService",
            "rpcs": [
              {
                "name": "GetGroups",
                "in_type": "GetGroupsRequest",
                "out_type": "GetGroupsResponse"
              },
              {
                "name": "GetGroup",
                "in_type": "storage.GroupProperties",
                "out_type": "storage.Group"
              },
              {
                "name": "BatchUpdate",
                "in_type": "GroupBatchUpdateRequest",
                "out_type": "Empty"
              },
              {
                "name": "CreateGroup",
                "in_type": "storage.Group",
                "out_type": "Empty"
              },
              {
                "name": "UpdateGroup",
                "in_type": "UpdateGroupRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeleteGroup",
                "in_type": "DeleteGroupRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/group.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:image_integration_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetImageIntegrationsRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetImageIntegrationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "integrations",
                "type": "storage.ImageIntegration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateImageIntegrationRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.ImageIntegration"
              },
              {
                "id": 2,
                "name": "updatePassword",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImageIntegrationService",
            "rpcs": [
              {
                "name": "GetImageIntegration",
                "in_type": "ResourceByID",
                "out_type": "storage.ImageIntegration"
              },
              {
                "name": "GetImageIntegrations",
                "in_type": "GetImageIntegrationsRequest",
                "out_type": "GetImageIntegrationsResponse"
              },
              {
                "name": "PostImageIntegration",
                "in_type": "storage.ImageIntegration",
                "out_type": "storage.ImageIntegration"
              },
              {
                "name": "PutImageIntegration",
                "in_type": "storage.ImageIntegration",
                "out_type": "Empty"
              },
              {
                "name": "TestImageIntegration",
                "in_type": "storage.ImageIntegration",
                "out_type": "Empty"
              },
              {
                "name": "DeleteImageIntegration",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "UpdateImageIntegration",
                "in_type": "UpdateImageIntegrationRequest",
                "out_type": "Empty"
              },
              {
                "name": "TestUpdatedImageIntegration",
                "in_type": "UpdateImageIntegrationRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/image_integration.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:image_service.proto",
      "def": {
        "enums": [
          {
            "name": "WatchImageResponse.ErrorType",
            "enum_fields": [
              {
                "name": "NO_ERROR"
              },
              {
                "name": "INVALID_IMAGE_NAME",
                "integer": 1
              },
              {
                "name": "NO_VALID_INTEGRATION",
                "integer": 2
              },
              {
                "name": "SCAN_FAILED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "include_snoozed",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "strip_description",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ListImagesResponse",
            "fields": [
              {
                "id": 1,
                "name": "images",
                "type": "storage.ListImage",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountImagesResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "ScanImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "include_snoozed",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ScanImageInternalRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.ContainerImage"
              },
              {
                "id": 3,
                "name": "cached_only",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "source",
                "type": "Source"
              }
            ],
            "reserved_ids": [
              2
            ],
            "messages": [
              {
                "name": "Source",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "image_pull_secrets",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ScanImageInternalResponse",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.Image"
              }
            ]
          },
          {
            "name": "GetImageVulnerabilitiesInternalRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image_name",
                "type": "storage.ImageName"
              },
              {
                "id": 3,
                "name": "metadata",
                "type": "storage.ImageMetadata"
              },
              {
                "id": 6,
                "name": "is_cluster_local",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "components",
                "type": "scannerV1.Components"
              },
              {
                "id": 5,
                "name": "notes",
                "type": "scannerV1.Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EnrichLocalImageInternalRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image_name",
                "type": "storage.ImageName"
              },
              {
                "id": 3,
                "name": "metadata",
                "type": "storage.ImageMetadata"
              },
              {
                "id": 4,
                "name": "image_signature",
                "type": "storage.ImageSignature"
              },
              {
                "id": 5,
                "name": "components",
                "type": "scannerV1.Components"
              },
              {
                "id": 6,
                "name": "notes",
                "type": "scannerV1.Note",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "image_notes",
                "type": "storage.Image.Note",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeleteImagesRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              },
              {
                "id": 2,
                "name": "confirm",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteImagesResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_deleted",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "dry_run",
                "type": "bool"
              }
            ]
          },
          {
            "name": "WatchImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "WatchImageResponse",
            "fields": [
              {
                "id": 1,
                "name": "normalized_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "error_type",
                "type": "ErrorType"
              },
              {
                "id": 3,
                "name": "error_message",
                "type": "string"
              }
            ]
          },
          {
            "name": "UnwatchImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetWatchedImagesResponse",
            "fields": [
              {
                "id": 1,
                "name": "watched_images",
                "type": "storage.WatchedImage",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScanImageInternalResponseDetails",
            "messages": [
              {
                "name": "TooManyParallelScans"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImageService",
            "rpcs": [
              {
                "name": "GetImage",
                "in_type": "GetImageRequest",
                "out_type": "storage.Image"
              },
              {
                "name": "CountImages",
                "in_type": "RawQuery",
                "out_type": "CountImagesResponse"
              },
              {
                "name": "ListImages",
                "in_type": "RawQuery",
                "out_type": "ListImagesResponse"
              },
              {
                "name": "ScanImage",
                "in_type": "ScanImageRequest",
                "out_type": "storage.Image"
              },
              {
                "name": "ScanImageInternal",
                "in_type": "ScanImageInternalRequest",
                "out_type": "ScanImageInternalResponse"
              },
              {
                "name": "GetImageVulnerabilitiesInternal",
                "in_type": "GetImageVulnerabilitiesInternalRequest",
                "out_type": "ScanImageInternalResponse"
              },
              {
                "name": "EnrichLocalImageInternal",
                "in_type": "EnrichLocalImageInternalRequest",
                "out_type": "ScanImageInternalResponse"
              },
              {
                "name": "InvalidateScanAndRegistryCaches",
                "in_type": "Empty",
                "out_type": "Empty"
              },
              {
                "name": "DeleteImages",
                "in_type": "DeleteImagesRequest",
                "out_type": "DeleteImagesResponse"
              },
              {
                "name": "WatchImage",
                "in_type": "WatchImageRequest",
                "out_type": "WatchImageResponse"
              },
              {
                "name": "UnwatchImage",
                "in_type": "UnwatchImageRequest",
                "out_type": "Empty"
              },
              {
                "name": "GetWatchedImages",
                "in_type": "Empty",
                "out_type": "GetWatchedImagesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "scanner/api/v1/component.proto"
          },
          {
            "path": "scanner/api/v1/note.proto"
          },
          {
            "path": "storage/image.proto"
          },
          {
            "path": "storage/deployment.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:integration_config.proto",
      "def": {
        "messages": [
          {
            "name": "IntegrationAsConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "external_backup",
                "type": "storage.ExternalBackup"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/external_backup.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:integration_health_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetIntegrationHealthResponse",
            "fields": [
              {
                "id": 1,
                "name": "integrationHealth",
                "type": "storage.IntegrationHealth",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "VulnDefinitionsInfo",
            "fields": [
              {
                "id": 1,
                "name": "last_updated_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "IntegrationHealthService",
            "rpcs": [
              {
                "name": "GetImageIntegrations",
                "in_type": "Empty",
                "out_type": "GetIntegrationHealthResponse"
              },
              {
                "name": "GetNotifiers",
                "in_type": "Empty",
                "out_type": "GetIntegrationHealthResponse"
              },
              {
                "name": "GetBackupPlugins",
                "in_type": "Empty",
                "out_type": "GetIntegrationHealthResponse"
              },
              {
                "name": "GetDeclarativeConfigs",
                "in_type": "Empty",
                "out_type": "GetIntegrationHealthResponse"
              },
              {
                "name": "GetVulnDefinitionsInfo",
                "in_type": "Empty",
                "out_type": "VulnDefinitionsInfo"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/integration_health.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:license_service.proto",
      "def": {
        "enums": [
          {
            "name": "LicenseInfo.Status",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "VALID",
                "integer": 1
              },
              {
                "name": "REVOKED",
                "integer": 2
              },
              {
                "name": "NOT_YET_VALID",
                "integer": 3
              },
              {
                "name": "EXPIRED",
                "integer": 4
              },
              {
                "name": "OTHER",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "LicenseInfo",
            "fields": [
              {
                "id": 1,
                "name": "license",
                "type": "license.License"
              },
              {
                "id": 2,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 3,
                "name": "status_reason",
                "type": "string"
              },
              {
                "id": 4,
                "name": "active",
                "type": "bool"
              }
            ]
          },
          {
            "name": "AddLicenseRequest",
            "fields": [
              {
                "id": 1,
                "name": "license_key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "activate",
                "type": "bool"
              }
            ]
          },
          {
            "name": "AddLicenseResponse",
            "fields": [
              {
                "id": 1,
                "name": "license",
                "type": "LicenseInfo"
              },
              {
                "id": 2,
                "name": "accepted",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetLicensesRequest",
            "fields": [
              {
                "id": 1,
                "name": "active",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "statuses",
                "type": "LicenseInfo.Status",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetLicensesResponse",
            "fields": [
              {
                "id": 1,
                "name": "licenses",
                "type": "LicenseInfo",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetActiveLicenseExpirationResponse",
            "fields": [
              {
                "id": 1,
                "name": "expiration_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "GetActiveLicenseKeyResponse",
            "fields": [
              {
                "id": 1,
                "name": "license_key",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "LicenseService",
            "rpcs": [
              {
                "name": "GetLicenses",
                "in_type": "GetLicensesRequest",
                "out_type": "GetLicensesResponse"
              },
              {
                "name": "AddLicense",
                "in_type": "AddLicenseRequest",
                "out_type": "AddLicenseResponse"
              },
              {
                "name": "GetActiveLicenseExpiration",
                "in_type": "Empty",
                "out_type": "GetActiveLicenseExpirationResponse"
              },
              {
                "name": "GetActiveLicenseKey",
                "in_type": "Empty",
                "out_type": "GetActiveLicenseKeyResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "shared/license/license.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:metadata_service.proto",
      "def": {
        "enums": [
          {
            "name": "Metadata.LicenseStatus",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "INVALID",
                "integer": 1
              },
              {
                "name": "EXPIRED",
                "integer": 2
              },
              {
                "name": "RESTARTING",
                "integer": 3
              },
              {
                "name": "VALID",
                "integer": 4
              }
            ]
          },
          {
            "name": "DatabaseStatus.DatabaseType",
            "enum_fields": [
              {
                "name": "Hidden"
              },
              {
                "name": "RocksDB",
                "integer": 1
              },
              {
                "name": "PostgresDB",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Metadata",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "build_flavor",
                "type": "string"
              },
              {
                "id": 3,
                "name": "release_build",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "license_status",
                "type": "LicenseStatus"
              }
            ]
          },
          {
            "name": "TrustInfo",
            "fields": [
              {
                "id": 1,
                "name": "cert_chain",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "sensor_challenge",
                "type": "string"
              },
              {
                "id": 3,
                "name": "central_challenge",
                "type": "string"
              },
              {
                "id": 4,
                "name": "additional_cas",
                "type": "bytes",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TLSChallengeResponse",
            "fields": [
              {
                "id": 1,
                "name": "trust_info_serialized",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "signature",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "TLSChallengeRequest",
            "fields": [
              {
                "id": 1,
                "name": "challenge_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "DatabaseStatus",
            "fields": [
              {
                "id": 1,
                "name": "database_available",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "database_type",
                "type": "DatabaseType"
              },
              {
                "id": 3,
                "name": "database_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "DatabaseBackupStatus",
            "fields": [
              {
                "id": 1,
                "name": "backup_info",
                "type": "storage.BackupInfo"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "MetadataService",
            "rpcs": [
              {
                "name": "GetMetadata",
                "in_type": "Empty",
                "out_type": "Metadata"
              },
              {
                "name": "TLSChallenge",
                "in_type": "TLSChallengeRequest",
                "out_type": "TLSChallengeResponse"
              },
              {
                "name": "GetDatabaseStatus",
                "in_type": "Empty",
                "out_type": "DatabaseStatus"
              },
              {
                "name": "GetDatabaseBackupStatus",
                "in_type": "Empty",
                "out_type": "DatabaseBackupStatus"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/system_info.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:mitre_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListMitreAttackVectorsResponse",
            "fields": [
              {
                "id": 1,
                "name": "mitre_attack_vectors",
                "type": "storage.MitreAttackVector",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetMitreVectorResponse",
            "fields": [
              {
                "id": 1,
                "name": "mitre_attack_vector",
                "type": "storage.MitreAttackVector"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "MitreAttackService",
            "rpcs": [
              {
                "name": "ListMitreAttackVectors",
                "in_type": "Empty",
                "out_type": "ListMitreAttackVectorsResponse"
              },
              {
                "name": "GetMitreAttackVector",
                "in_type": "ResourceByID",
                "out_type": "GetMitreVectorResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/mitre.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:namespace_service.proto",
      "def": {
        "messages": [
          {
            "name": "Namespace",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "storage.NamespaceMetadata"
              },
              {
                "id": 2,
                "name": "num_deployments",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "num_secrets",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "num_network_policies",
                "type": "int32"
              }
            ]
          },
          {
            "name": "GetNamespacesResponse",
            "fields": [
              {
                "id": 1,
                "name": "namespaces",
                "type": "Namespace",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNamespaceRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NamespaceService",
            "rpcs": [
              {
                "name": "GetNamespaces",
                "in_type": "GetNamespaceRequest",
                "out_type": "GetNamespacesResponse"
              },
              {
                "name": "GetNamespace",
                "in_type": "ResourceByID",
                "out_type": "Namespace"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "storage/namespace_metadata.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:network_baseline_service.proto",
      "def": {
        "enums": [
          {
            "name": "NetworkBaselinePeerStatus.Status",
            "enum_fields": [
              {
                "name": "BASELINE"
              },
              {
                "name": "ANOMALOUS",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "NetworkBaselinePeerEntity",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "storage.NetworkEntityInfo.Type"
              }
            ]
          },
          {
            "name": "NetworkBaselineStatusPeer",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "NetworkBaselinePeerEntity"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "storage.L4Protocol"
              },
              {
                "id": 4,
                "name": "ingress",
                "type": "bool"
              }
            ]
          },
          {
            "name": "NetworkBaselinePeerStatus",
            "fields": [
              {
                "id": 1,
                "name": "peer",
                "type": "NetworkBaselineStatusPeer"
              },
              {
                "id": 2,
                "name": "status",
                "type": "Status"
              }
            ]
          },
          {
            "name": "NetworkBaselineStatusRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "peers",
                "type": "NetworkBaselineStatusPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkBaselineStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "statuses",
                "type": "NetworkBaselinePeerStatus",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ModifyBaselineStatusForPeersRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "peers",
                "type": "NetworkBaselinePeerStatus",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NetworkBaselineService",
            "rpcs": [
              {
                "name": "GetNetworkBaselineStatusForFlows",
                "in_type": "NetworkBaselineStatusRequest",
                "out_type": "NetworkBaselineStatusResponse"
              },
              {
                "name": "GetNetworkBaseline",
                "in_type": "ResourceByID",
                "out_type": "storage.NetworkBaseline"
              },
              {
                "name": "ModifyBaselineStatusForPeers",
                "in_type": "ModifyBaselineStatusForPeersRequest",
                "out_type": "Empty"
              },
              {
                "name": "LockNetworkBaseline",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "UnlockNetworkBaseline",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/network_baseline.proto"
          },
          {
            "path": "storage/network_flow.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:network_graph_service.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkGraphScope",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkEdgeProperties",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "storage.L4Protocol"
              },
              {
                "id": 3,
                "name": "last_active_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NetworkEdgePropertiesBundle",
            "fields": [
              {
                "id": 1,
                "name": "properties",
                "type": "NetworkEdgeProperties",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkNode",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "storage.NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "internet_access",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "policy_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "non_isolated_ingress",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "non_isolated_egress",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "query_match",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "int32",
                "field": {
                  "id": 4,
                  "name": "out_edges",
                  "type": "NetworkEdgePropertiesBundle"
                }
              }
            ]
          },
          {
            "name": "NetworkGraphRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "since",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "include_ports",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "scope",
                "type": "NetworkGraphScope"
              },
              {
                "id": 6,
                "name": "include_policies",
                "type": "bool"
              }
            ]
          },
          {
            "name": "NetworkGraph",
            "fields": [
              {
                "id": 1,
                "name": "epoch",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "nodes",
                "type": "NetworkNode",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CreateNetworkEntityRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "entity",
                "type": "storage.NetworkEntityInfo.ExternalSource"
              }
            ]
          },
          {
            "name": "PatchNetworkEntityRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetExternalNetworkEntitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetExternalNetworkEntitiesResponse",
            "fields": [
              {
                "id": 1,
                "name": "entities",
                "type": "storage.NetworkEntity",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PutNetworkGraphConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.NetworkGraphConfig"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NetworkGraphService",
            "rpcs": [
              {
                "name": "GetNetworkGraph",
                "in_type": "NetworkGraphRequest",
                "out_type": "NetworkGraph"
              },
              {
                "name": "GetExternalNetworkEntities",
                "in_type": "GetExternalNetworkEntitiesRequest",
                "out_type": "GetExternalNetworkEntitiesResponse"
              },
              {
                "name": "CreateExternalNetworkEntity",
                "in_type": "CreateNetworkEntityRequest",
                "out_type": "storage.NetworkEntity"
              },
              {
                "name": "PatchExternalNetworkEntity",
                "in_type": "PatchNetworkEntityRequest",
                "out_type": "storage.NetworkEntity"
              },
              {
                "name": "DeleteExternalNetworkEntity",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetNetworkGraphConfig",
                "in_type": "Empty",
                "out_type": "storage.NetworkGraphConfig"
              },
              {
                "name": "PutNetworkGraphConfig",
                "in_type": "PutNetworkGraphConfigRequest",
                "out_type": "storage.NetworkGraphConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/network_graph_config.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:network_policy_service.proto",
      "def": {
        "enums": [
          {
            "name": "NetworkPolicyInSimulation.Status",
            "enum_fields": [
              {
                "name": "INVALID"
              },
              {
                "name": "UNCHANGED",
                "integer": 1
              },
              {
                "name": "MODIFIED",
                "integer": 2
              },
              {
                "name": "ADDED",
                "integer": 3
              },
              {
                "name": "DELETED",
                "integer": 4
              }
            ]
          },
          {
            "name": "GenerateNetworkPoliciesRequest.DeleteExistingPoliciesMode",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "NONE",
                "integer": 1
              },
              {
                "name": "GENERATED_ONLY",
                "integer": 2
              },
              {
                "name": "ALL",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GetNetworkPoliciesRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "deployment_query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "network_policies",
                "type": "storage.NetworkPolicy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SendNetworkPolicyYamlRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "notifier_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetNetworkGraphRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "include_ports",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "scope",
                "type": "NetworkGraphScope"
              }
            ]
          },
          {
            "name": "SimulateNetworkGraphRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              },
              {
                "id": 4,
                "name": "include_ports",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "include_node_diff",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "scope",
                "type": "NetworkGraphScope"
              }
            ]
          },
          {
            "name": "ApplyNetworkPolicyYamlRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetUndoModificationRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetUndoModificationResponse",
            "fields": [
              {
                "id": 1,
                "name": "undo_record",
                "type": "storage.NetworkPolicyApplicationUndoRecord"
              }
            ]
          },
          {
            "name": "NetworkPolicyInSimulation",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "storage.NetworkPolicy"
              },
              {
                "id": 2,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 3,
                "name": "old_policy",
                "type": "storage.NetworkPolicy"
              }
            ]
          },
          {
            "name": "NetworkNodeDiff",
            "fields": [
              {
                "id": 1,
                "name": "policy_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "non_isolated_ingress",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "non_isolated_egress",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "int32",
                "field": {
                  "id": 2,
                  "name": "DEPRECATED_out_edges",
                  "type": "NetworkEdgePropertiesBundle"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "out_edges",
                  "type": "NetworkEdgePropertiesBundle"
                }
              }
            ]
          },
          {
            "name": "NetworkGraphDiff",
            "maps": [
              {
                "key_type": "int32",
                "field": {
                  "id": 1,
                  "name": "DEPRECATED_node_diffs",
                  "type": "NetworkNodeDiff"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "node_diffs",
                  "type": "NetworkNodeDiff"
                }
              }
            ]
          },
          {
            "name": "SimulateNetworkGraphResponse",
            "fields": [
              {
                "id": 1,
                "name": "simulated_graph",
                "type": "NetworkGraph"
              },
              {
                "id": 2,
                "name": "policies",
                "type": "NetworkPolicyInSimulation",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "added",
                "type": "NetworkGraphDiff"
              },
              {
                "id": 4,
                "name": "removed",
                "type": "NetworkGraphDiff"
              }
            ]
          },
          {
            "name": "GetNetworkGraphEpochRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkGraphEpoch",
            "fields": [
              {
                "id": 1,
                "name": "epoch",
                "type": "uint32"
              }
            ]
          },
          {
            "name": "GenerateNetworkPoliciesRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "string"
              },
              {
                "id": 3,
                "name": "delete_existing",
                "type": "DeleteExistingPoliciesMode"
              },
              {
                "id": 4,
                "name": "network_data_since",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "include_ports",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GenerateNetworkPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetBaselineGeneratedPolicyForDeploymentRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "delete_existing",
                "type": "GenerateNetworkPoliciesRequest.DeleteExistingPoliciesMode"
              },
              {
                "id": 3,
                "name": "include_ports",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetBaselineGeneratedPolicyForDeploymentResponse",
            "fields": [
              {
                "id": 1,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetAllowedPeersFromCurrentPolicyForDeploymentResponse",
            "fields": [
              {
                "id": 1,
                "name": "allowed_peers",
                "type": "NetworkBaselineStatusPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ApplyNetworkPolicyYamlForDeploymentRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "GetUndoModificationForDeploymentResponse",
            "fields": [
              {
                "id": 1,
                "name": "undo_record",
                "type": "storage.NetworkPolicyApplicationUndoRecord"
              }
            ]
          },
          {
            "name": "GetDiffFlowsReconciledFlow",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "storage.NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "added",
                "type": "storage.NetworkBaselineConnectionProperties",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "removed",
                "type": "storage.NetworkBaselineConnectionProperties",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "unchanged",
                "type": "storage.NetworkBaselineConnectionProperties",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetDiffFlowsGroupedFlow",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "storage.NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "properties",
                "type": "storage.NetworkBaselineConnectionProperties",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetDiffFlowsResponse",
            "fields": [
              {
                "id": 1,
                "name": "added",
                "type": "GetDiffFlowsGroupedFlow",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "removed",
                "type": "GetDiffFlowsGroupedFlow",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "reconciled",
                "type": "GetDiffFlowsReconciledFlow",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NetworkPolicyService",
            "rpcs": [
              {
                "name": "GetNetworkPolicy",
                "in_type": "ResourceByID",
                "out_type": "storage.NetworkPolicy"
              },
              {
                "name": "GetNetworkPolicies",
                "in_type": "GetNetworkPoliciesRequest",
                "out_type": "NetworkPoliciesResponse"
              },
              {
                "name": "GetNetworkGraph",
                "in_type": "GetNetworkGraphRequest",
                "out_type": "NetworkGraph"
              },
              {
                "name": "GetNetworkGraphEpoch",
                "in_type": "GetNetworkGraphEpochRequest",
                "out_type": "NetworkGraphEpoch"
              },
              {
                "name": "ApplyNetworkPolicy",
                "in_type": "ApplyNetworkPolicyYamlRequest",
                "out_type": "Empty"
              },
              {
                "name": "GetUndoModification",
                "in_type": "GetUndoModificationRequest",
                "out_type": "GetUndoModificationResponse"
              },
              {
                "name": "SimulateNetworkGraph",
                "in_type": "SimulateNetworkGraphRequest",
                "out_type": "SimulateNetworkGraphResponse"
              },
              {
                "name": "SendNetworkPolicyYAML",
                "in_type": "SendNetworkPolicyYamlRequest",
                "out_type": "Empty"
              },
              {
                "name": "GenerateNetworkPolicies",
                "in_type": "GenerateNetworkPoliciesRequest",
                "out_type": "GenerateNetworkPoliciesResponse"
              },
              {
                "name": "GetBaselineGeneratedNetworkPolicyForDeployment",
                "in_type": "GetBaselineGeneratedPolicyForDeploymentRequest",
                "out_type": "GetBaselineGeneratedPolicyForDeploymentResponse"
              },
              {
                "name": "GetAllowedPeersFromCurrentPolicyForDeployment",
                "in_type": "ResourceByID",
                "out_type": "GetAllowedPeersFromCurrentPolicyForDeploymentResponse"
              },
              {
                "name": "ApplyNetworkPolicyYamlForDeployment",
                "in_type": "ApplyNetworkPolicyYamlForDeploymentRequest",
                "out_type": "Empty"
              },
              {
                "name": "GetUndoModificationForDeployment",
                "in_type": "ResourceByID",
                "out_type": "GetUndoModificationForDeploymentResponse"
              },
              {
                "name": "GetDiffFlowsBetweenPolicyAndBaselineForDeployment",
                "in_type": "ResourceByID",
                "out_type": "GetDiffFlowsResponse"
              },
              {
                "name": "GetDiffFlowsFromUndoModificationForDeployment",
                "in_type": "ResourceByID",
                "out_type": "GetDiffFlowsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "api/v1/network_baseline_service.proto"
          },
          {
            "path": "api/v1/network_graph_service.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/network_baseline.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/network_policy.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:node_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListNodesRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListNodesResponse",
            "fields": [
              {
                "id": 1,
                "name": "nodes",
                "type": "storage.Node",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNodeRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "node_id",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NodeService",
            "rpcs": [
              {
                "name": "ListNodes",
                "in_type": "ListNodesRequest",
                "out_type": "ListNodesResponse"
              },
              {
                "name": "GetNode",
                "in_type": "GetNodeRequest",
                "out_type": "storage.Node"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/node.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:notifications.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkPolicyNotification",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "string"
              },
              {
                "id": 2,
                "name": "yaml",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:notifier_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetNotifiersRequest",
            "reserved_ids": [
              1,
              2
            ]
          },
          {
            "name": "GetNotifiersResponse",
            "fields": [
              {
                "id": 1,
                "name": "notifiers",
                "type": "storage.Notifier",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeleteNotifierRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "force",
                "type": "bool"
              }
            ]
          },
          {
            "name": "UpdateNotifierRequest",
            "fields": [
              {
                "id": 1,
                "name": "notifier",
                "type": "storage.Notifier"
              },
              {
                "id": 2,
                "name": "update_password",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NotifierService",
            "rpcs": [
              {
                "name": "GetNotifier",
                "in_type": "ResourceByID",
                "out_type": "storage.Notifier"
              },
              {
                "name": "GetNotifiers",
                "in_type": "GetNotifiersRequest",
                "out_type": "GetNotifiersResponse"
              },
              {
                "name": "PutNotifier",
                "in_type": "storage.Notifier",
                "out_type": "Empty"
              },
              {
                "name": "PostNotifier",
                "in_type": "storage.Notifier",
                "out_type": "storage.Notifier"
              },
              {
                "name": "TestNotifier",
                "in_type": "storage.Notifier",
                "out_type": "Empty"
              },
              {
                "name": "DeleteNotifier",
                "in_type": "DeleteNotifierRequest",
                "out_type": "Empty"
              },
              {
                "name": "UpdateNotifier",
                "in_type": "UpdateNotifierRequest",
                "out_type": "Empty"
              },
              {
                "name": "TestUpdatedNotifier",
                "in_type": "UpdateNotifierRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/notifier.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:pagination.proto",
      "def": {
        "enums": [
          {
            "name": "Aggregation",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "COUNT",
                "integer": 1
              },
              {
                "name": "MIN",
                "integer": 2
              },
              {
                "name": "MAX",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "AggregateBy",
            "fields": [
              {
                "id": 1,
                "name": "aggrFunc",
                "type": "Aggregation"
              },
              {
                "id": 2,
                "name": "distinct",
                "type": "bool"
              }
            ]
          },
          {
            "name": "SortOption",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "string"
              },
              {
                "id": 2,
                "name": "reversed",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "aggregate_by",
                "type": "AggregateBy"
              }
            ]
          },
          {
            "name": "Pagination",
            "fields": [
              {
                "id": 1,
                "name": "limit",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "offset",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "sort_option",
                "type": "SortOption"
              },
              {
                "id": 4,
                "name": "sort_options",
                "type": "SortOption",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:ping_service.proto",
      "def": {
        "messages": [
          {
            "name": "PongMessage",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PingService",
            "rpcs": [
              {
                "name": "Ping",
                "in_type": "Empty",
                "out_type": "PongMessage"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:pod_service.proto",
      "def": {
        "messages": [
          {
            "name": "PodsResponse",
            "fields": [
              {
                "id": 1,
                "name": "pods",
                "type": "storage.Pod",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PodService",
            "rpcs": [
              {
                "name": "GetPods",
                "in_type": "RawQuery",
                "out_type": "PodsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "storage/deployment.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:policy_category_service.proto",
      "def": {
        "messages": [
          {
            "name": "PolicyCategory",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "isDefault",
                "type": "bool"
              }
            ]
          },
          {
            "name": "PostPolicyCategoryRequest",
            "fields": [
              {
                "id": 1,
                "name": "policyCategory",
                "type": "v1.PolicyCategory"
              }
            ]
          },
          {
            "name": "GetPolicyCategoriesResponse",
            "fields": [
              {
                "id": 1,
                "name": "categories",
                "type": "v1.PolicyCategory",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RenamePolicyCategoryRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "new_category_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "DeletePolicyCategoryRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PolicyCategoryService",
            "rpcs": [
              {
                "name": "GetPolicyCategory",
                "in_type": "ResourceByID",
                "out_type": "v1.PolicyCategory"
              },
              {
                "name": "GetPolicyCategories",
                "in_type": "RawQuery",
                "out_type": "GetPolicyCategoriesResponse"
              },
              {
                "name": "PostPolicyCategory",
                "in_type": "PostPolicyCategoryRequest",
                "out_type": "v1.PolicyCategory"
              },
              {
                "name": "RenamePolicyCategory",
                "in_type": "RenamePolicyCategoryRequest",
                "out_type": "v1.PolicyCategory"
              },
              {
                "name": "DeletePolicyCategory",
                "in_type": "DeletePolicyCategoryRequest",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:policy_service.proto",
      "def": {
        "messages": [
          {
            "name": "DryRunResponse",
            "fields": [
              {
                "id": 1,
                "name": "alerts",
                "type": "Alert",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Alert",
                "fields": [
                  {
                    "id": 1,
                    "name": "deployment",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "violations",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "JobId",
            "fields": [
              {
                "id": 1,
                "name": "job_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "DryRunJobStatusResponse",
            "fields": [
              {
                "id": 1,
                "name": "pending",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "result",
                "type": "DryRunResponse"
              }
            ]
          },
          {
            "name": "PolicyCategoriesResponse",
            "fields": [
              {
                "id": 1,
                "name": "categories",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EnableDisablePolicyNotificationRequest",
            "fields": [
              {
                "id": 1,
                "name": "policy_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "notifier_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "disable",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ListPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "storage.ListPolicy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PostPolicyRequest",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "storage.Policy"
              },
              {
                "id": 2,
                "name": "enable_strict_validation",
                "type": "bool"
              }
            ]
          },
          {
            "name": "PatchPolicyRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "disabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ExportPoliciesRequest",
            "fields": [
              {
                "id": 1,
                "name": "policy_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyError",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "string"
              }
            ]
          },
          {
            "name": "ExportPolicyError",
            "fields": [
              {
                "id": 1,
                "name": "policy_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "error",
                "type": "PolicyError"
              }
            ]
          },
          {
            "name": "ExportPoliciesErrorList",
            "fields": [
              {
                "id": 1,
                "name": "errors",
                "type": "ExportPolicyError",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyFromSearchRequest",
            "fields": [
              {
                "id": 1,
                "name": "search_params",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImportPoliciesMetadata",
            "fields": [
              {
                "id": 1,
                "name": "overwrite",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ImportPoliciesRequest",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "ImportPoliciesMetadata"
              },
              {
                "id": 2,
                "name": "policies",
                "type": "storage.Policy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ImportPolicyError",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "duplicate_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "validation_error",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImportPolicyResponse",
            "fields": [
              {
                "id": 1,
                "name": "succeeded",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "policy",
                "type": "storage.Policy"
              },
              {
                "id": 3,
                "name": "errors",
                "type": "ImportPolicyError",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ImportPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "responses",
                "type": "ImportPolicyResponse",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "all_succeeded",
                "type": "bool"
              }
            ]
          },
          {
            "name": "PolicyFromSearchResponse",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "storage.Policy"
              },
              {
                "id": 2,
                "name": "altered_search_terms",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "has_nested_fields",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetPolicyMitreVectorsRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "options",
                "type": "Options"
              }
            ],
            "messages": [
              {
                "name": "Options",
                "fields": [
                  {
                    "id": 1,
                    "name": "exclude_policy",
                    "type": "bool"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetPolicyMitreVectorsResponse",
            "fields": [
              {
                "id": 1,
                "name": "policy",
                "type": "storage.Policy"
              },
              {
                "id": 2,
                "name": "vectors",
                "type": "storage.MitreAttackVector",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PolicyService",
            "rpcs": [
              {
                "name": "GetPolicy",
                "in_type": "ResourceByID",
                "out_type": "storage.Policy"
              },
              {
                "name": "GetPolicyMitreVectors",
                "in_type": "GetPolicyMitreVectorsRequest",
                "out_type": "GetPolicyMitreVectorsResponse"
              },
              {
                "name": "ListPolicies",
                "in_type": "RawQuery",
                "out_type": "ListPoliciesResponse"
              },
              {
                "name": "PostPolicy",
                "in_type": "PostPolicyRequest",
                "out_type": "storage.Policy"
              },
              {
                "name": "PutPolicy",
                "in_type": "storage.Policy",
                "out_type": "Empty"
              },
              {
                "name": "PatchPolicy",
                "in_type": "PatchPolicyRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeletePolicy",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "EnableDisablePolicyNotification",
                "in_type": "EnableDisablePolicyNotificationRequest",
                "out_type": "Empty"
              },
              {
                "name": "ReassessPolicies",
                "in_type": "Empty",
                "out_type": "Empty"
              },
              {
                "name": "DryRunPolicy",
                "in_type": "storage.Policy",
                "out_type": "DryRunResponse"
              },
              {
                "name": "SubmitDryRunPolicyJob",
                "in_type": "storage.Policy",
                "out_type": "JobId"
              },
              {
                "name": "QueryDryRunJobStatus",
                "in_type": "JobId",
                "out_type": "DryRunJobStatusResponse"
              },
              {
                "name": "CancelDryRunJob",
                "in_type": "JobId",
                "out_type": "Empty"
              },
              {
                "name": "GetPolicyCategories",
                "in_type": "Empty",
                "out_type": "PolicyCategoriesResponse"
              },
              {
                "name": "ExportPolicies",
                "in_type": "ExportPoliciesRequest",
                "out_type": "storage.ExportPoliciesResponse"
              },
              {
                "name": "PolicyFromSearch",
                "in_type": "PolicyFromSearchRequest",
                "out_type": "PolicyFromSearchResponse"
              },
              {
                "name": "ImportPolicies",
                "in_type": "ImportPoliciesRequest",
                "out_type": "ImportPoliciesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "storage/mitre.proto"
          },
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:probe_upload_service.proto",
      "def": {
        "messages": [
          {
            "name": "ProbeUploadManifest",
            "fields": [
              {
                "id": 1,
                "name": "files",
                "type": "File",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "File",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "size",
                    "type": "int64"
                  },
                  {
                    "id": 3,
                    "name": "crc32",
                    "type": "uint32"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetExistingProbesRequest",
            "fields": [
              {
                "id": 1,
                "name": "files_to_check",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetExistingProbesResponse",
            "fields": [
              {
                "id": 1,
                "name": "existing_files",
                "type": "ProbeUploadManifest.File",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ProbeUploadService",
            "rpcs": [
              {
                "name": "GetExistingProbes",
                "in_type": "GetExistingProbesRequest",
                "out_type": "GetExistingProbesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:process_baseline_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetProcessBaselineRequest",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "storage.ProcessBaselineKey"
              }
            ]
          },
          {
            "name": "UpdateProcessBaselinesRequest",
            "fields": [
              {
                "id": 1,
                "name": "keys",
                "type": "storage.ProcessBaselineKey",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "add_elements",
                "type": "storage.BaselineItem",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "remove_elements",
                "type": "storage.BaselineItem",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessBaselinesResponse",
            "fields": [
              {
                "id": 1,
                "name": "baselines",
                "type": "storage.ProcessBaseline",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessBaselineUpdateError",
            "fields": [
              {
                "id": 1,
                "name": "error",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "storage.ProcessBaselineKey"
              }
            ]
          },
          {
            "name": "UpdateProcessBaselinesResponse",
            "fields": [
              {
                "id": 1,
                "name": "baselines",
                "type": "storage.ProcessBaseline",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "errors",
                "type": "ProcessBaselineUpdateError",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LockProcessBaselinesRequest",
            "fields": [
              {
                "id": 1,
                "name": "keys",
                "type": "storage.ProcessBaselineKey",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "locked",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteProcessBaselinesRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              },
              {
                "id": 2,
                "name": "confirm",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DeleteProcessBaselinesResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_deleted",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "dry_run",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ProcessBaselineService",
            "rpcs": [
              {
                "name": "GetProcessBaseline",
                "in_type": "GetProcessBaselineRequest",
                "out_type": "storage.ProcessBaseline"
              },
              {
                "name": "UpdateProcessBaselines",
                "in_type": "UpdateProcessBaselinesRequest",
                "out_type": "UpdateProcessBaselinesResponse"
              },
              {
                "name": "LockProcessBaselines",
                "in_type": "LockProcessBaselinesRequest",
                "out_type": "UpdateProcessBaselinesResponse"
              },
              {
                "name": "DeleteProcessBaselines",
                "in_type": "DeleteProcessBaselinesRequest",
                "out_type": "DeleteProcessBaselinesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/process_baseline.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:process_listening_on_port_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetProcessesListeningOnPortsRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetProcessesListeningOnPortsResponse",
            "fields": [
              {
                "id": 1,
                "name": "listening_endpoints",
                "type": "storage.ProcessListeningOnPort",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ListeningEndpointsService",
            "rpcs": [
              {
                "name": "GetListeningEndpoints",
                "in_type": "GetProcessesListeningOnPortsRequest",
                "out_type": "GetProcessesListeningOnPortsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/process_listening_on_port.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:process_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetProcessesByDeploymentRequest",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetProcessesResponse",
            "fields": [
              {
                "id": 1,
                "name": "processes",
                "type": "storage.ProcessIndicator",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessGroup",
            "fields": [
              {
                "id": 1,
                "name": "args",
                "type": "string"
              },
              {
                "id": 2,
                "name": "signals",
                "type": "storage.ProcessIndicator",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessNameGroup",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "times_executed",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "groups",
                "type": "ProcessGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetGroupedProcessesResponse",
            "fields": [
              {
                "id": 3,
                "name": "groups",
                "type": "ProcessNameGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ProcessNameAndContainerNameGroup",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "times_executed",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "groups",
                "type": "ProcessGroup",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "suspicious",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetGroupedProcessesWithContainerResponse",
            "fields": [
              {
                "id": 3,
                "name": "groups",
                "type": "ProcessNameAndContainerNameGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountProcessesResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ProcessService",
            "rpcs": [
              {
                "name": "CountProcesses",
                "in_type": "RawQuery",
                "out_type": "CountProcessesResponse"
              },
              {
                "name": "GetProcessesByDeployment",
                "in_type": "GetProcessesByDeploymentRequest",
                "out_type": "GetProcessesResponse"
              },
              {
                "name": "GetGroupedProcessByDeployment",
                "in_type": "GetProcessesByDeploymentRequest",
                "out_type": "GetGroupedProcessesResponse"
              },
              {
                "name": "GetGroupedProcessByDeploymentAndContainer",
                "in_type": "GetProcessesByDeploymentRequest",
                "out_type": "GetGroupedProcessesWithContainerResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:rbac_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListRolesResponse",
            "fields": [
              {
                "id": 1,
                "name": "roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetRoleResponse",
            "fields": [
              {
                "id": 1,
                "name": "role",
                "type": "storage.K8sRole"
              }
            ]
          },
          {
            "name": "ListRoleBindingsResponse",
            "fields": [
              {
                "id": 1,
                "name": "bindings",
                "type": "storage.K8sRoleBinding",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetRoleBindingResponse",
            "fields": [
              {
                "id": 1,
                "name": "binding",
                "type": "storage.K8sRoleBinding"
              }
            ]
          },
          {
            "name": "ListSubjectsResponse",
            "fields": [
              {
                "id": 1,
                "name": "subject_and_roles",
                "type": "SubjectAndRoles",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SubjectAndRoles",
            "fields": [
              {
                "id": 1,
                "name": "subject",
                "type": "storage.Subject"
              },
              {
                "id": 2,
                "name": "roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetSubjectResponse",
            "fields": [
              {
                "id": 1,
                "name": "subject",
                "type": "storage.Subject"
              },
              {
                "id": 2,
                "name": "cluster_roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "scoped_roles",
                "type": "ScopedRoles",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScopedRoles",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 2,
                "name": "roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "RbacService",
            "rpcs": [
              {
                "name": "GetRole",
                "in_type": "ResourceByID",
                "out_type": "GetRoleResponse"
              },
              {
                "name": "ListRoles",
                "in_type": "RawQuery",
                "out_type": "ListRolesResponse"
              },
              {
                "name": "GetRoleBinding",
                "in_type": "ResourceByID",
                "out_type": "GetRoleBindingResponse"
              },
              {
                "name": "ListRoleBindings",
                "in_type": "RawQuery",
                "out_type": "ListRoleBindingsResponse"
              },
              {
                "name": "GetSubject",
                "in_type": "ResourceByID",
                "out_type": "GetSubjectResponse"
              },
              {
                "name": "ListSubjects",
                "in_type": "RawQuery",
                "out_type": "ListSubjectsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "storage/rbac.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:report_configuration_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetReportConfigurationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "report_configs",
                "type": "storage.ReportConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetReportConfigurationResponse",
            "fields": [
              {
                "id": 1,
                "name": "report_config",
                "type": "storage.ReportConfiguration"
              }
            ]
          },
          {
            "name": "PostReportConfigurationResponse",
            "fields": [
              {
                "id": 1,
                "name": "report_config",
                "type": "storage.ReportConfiguration"
              }
            ]
          },
          {
            "name": "PostReportConfigurationRequest",
            "fields": [
              {
                "id": 1,
                "name": "report_config",
                "type": "storage.ReportConfiguration"
              }
            ]
          },
          {
            "name": "UpdateReportConfigurationRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "report_config",
                "type": "storage.ReportConfiguration"
              }
            ]
          },
          {
            "name": "CountReportConfigurationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ReportConfigurationService",
            "rpcs": [
              {
                "name": "GetReportConfigurations",
                "in_type": "RawQuery",
                "out_type": "GetReportConfigurationsResponse"
              },
              {
                "name": "GetReportConfiguration",
                "in_type": "ResourceByID",
                "out_type": "GetReportConfigurationResponse"
              },
              {
                "name": "PostReportConfiguration",
                "in_type": "PostReportConfigurationRequest",
                "out_type": "PostReportConfigurationResponse"
              },
              {
                "name": "UpdateReportConfiguration",
                "in_type": "UpdateReportConfigurationRequest",
                "out_type": "Empty"
              },
              {
                "name": "DeleteReportConfiguration",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "CountReportConfigurations",
                "in_type": "RawQuery",
                "out_type": "CountReportConfigurationsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "storage/report_configuration.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:report_service.proto",
      "def": {
        "services": [
          {
            "name": "ReportService",
            "rpcs": [
              {
                "name": "RunReport",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:resource_collection_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListCollectionSelectorsResponse",
            "fields": [
              {
                "id": 1,
                "name": "selectors",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetCollectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "options",
                "type": "CollectionDeploymentMatchOptions"
              }
            ]
          },
          {
            "name": "CollectionDeploymentMatchOptions",
            "fields": [
              {
                "id": 1,
                "name": "with_matches",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "filter_query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "GetCollectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "collection",
                "type": "storage.ResourceCollection"
              },
              {
                "id": 2,
                "name": "deployments",
                "type": "storage.ListDeployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetCollectionCountRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "GetCollectionCountResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          },
          {
            "name": "CreateCollectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "description",
                "type": "string"
              },
              {
                "id": 3,
                "name": "resource_selectors",
                "type": "storage.ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "embedded_collection_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CreateCollectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "collection",
                "type": "storage.ResourceCollection"
              }
            ]
          },
          {
            "name": "UpdateCollectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "resource_selectors",
                "type": "storage.ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "embedded_collection_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UpdateCollectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "collection",
                "type": "storage.ResourceCollection"
              }
            ]
          },
          {
            "name": "DryRunCollectionRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "resource_selectors",
                "type": "storage.ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "embedded_collection_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "options",
                "type": "CollectionDeploymentMatchOptions"
              }
            ]
          },
          {
            "name": "DryRunCollectionResponse",
            "fields": [
              {
                "id": 1,
                "name": "deployments",
                "type": "storage.ListDeployment",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListCollectionsRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "RawQuery"
              }
            ]
          },
          {
            "name": "ListCollectionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "collections",
                "type": "storage.ResourceCollection",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CollectionService",
            "rpcs": [
              {
                "name": "ListCollectionSelectors",
                "in_type": "Empty",
                "out_type": "ListCollectionSelectorsResponse"
              },
              {
                "name": "GetCollection",
                "in_type": "GetCollectionRequest",
                "out_type": "GetCollectionResponse"
              },
              {
                "name": "GetCollectionCount",
                "in_type": "GetCollectionCountRequest",
                "out_type": "GetCollectionCountResponse"
              },
              {
                "name": "CreateCollection",
                "in_type": "CreateCollectionRequest",
                "out_type": "CreateCollectionResponse"
              },
              {
                "name": "UpdateCollection",
                "in_type": "UpdateCollectionRequest",
                "out_type": "UpdateCollectionResponse"
              },
              {
                "name": "ListCollections",
                "in_type": "ListCollectionsRequest",
                "out_type": "ListCollectionsResponse"
              },
              {
                "name": "DeleteCollection",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "DryRunCollection",
                "in_type": "DryRunCollectionRequest",
                "out_type": "DryRunCollectionResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/resource_collection.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:role_service.proto",
      "def": {
        "enums": [
          {
            "name": "ComputeEffectiveAccessScopeRequest.Detail",
            "enum_fields": [
              {
                "name": "STANDARD"
              },
              {
                "name": "MINIMAL",
                "integer": 1
              },
              {
                "name": "HIGH",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Permission",
            "fields": [
              {
                "id": 1,
                "name": "resource",
                "type": "string"
              },
              {
                "id": 2,
                "name": "access",
                "type": "storage.Access"
              }
            ]
          },
          {
            "name": "GetRolesResponse",
            "fields": [
              {
                "id": 1,
                "name": "roles",
                "type": "storage.Role",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetPermissionsResponse",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "resource_to_access",
                  "type": "storage.Access"
                }
              }
            ],
            "reserved_ids": [
              1,
              2
            ]
          },
          {
            "name": "GetResourcesResponse",
            "fields": [
              {
                "id": 1,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListPermissionSetsResponse",
            "fields": [
              {
                "id": 1,
                "name": "permission_sets",
                "type": "storage.PermissionSet",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListSimpleAccessScopesResponse",
            "fields": [
              {
                "id": 1,
                "name": "access_scopes",
                "type": "storage.SimpleAccessScope",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScopeObject",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetClustersForPermissionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "ScopeObject",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNamespacesForClusterAndPermissionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "namespaces",
                "type": "ScopeObject",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComputeEffectiveAccessScopeRequest",
            "fields": [
              {
                "id": 1,
                "name": "detail",
                "type": "Detail"
              },
              {
                "id": 2,
                "name": "access_scope",
                "type": "Payload"
              }
            ],
            "messages": [
              {
                "name": "Payload",
                "fields": [
                  {
                    "id": 1,
                    "name": "simple_rules",
                    "type": "storage.SimpleAccessScope.Rules"
                  }
                ]
              }
            ]
          },
          {
            "name": "CreateRoleRequest",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "role",
                "type": "storage.Role"
              }
            ]
          },
          {
            "name": "GetClustersForPermissionsRequest",
            "fields": [
              {
                "id": 1,
                "name": "pagination",
                "type": "Pagination"
              },
              {
                "id": 2,
                "name": "permissions",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNamespaceForClusterAndPermissionsRequest",
            "fields": [
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "permissions",
                "type": "string",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              1
            ]
          }
        ],
        "services": [
          {
            "name": "RoleService",
            "rpcs": [
              {
                "name": "GetRoles",
                "in_type": "Empty",
                "out_type": "GetRolesResponse"
              },
              {
                "name": "GetRole",
                "in_type": "ResourceByID",
                "out_type": "storage.Role"
              },
              {
                "name": "GetMyPermissions",
                "in_type": "Empty",
                "out_type": "GetPermissionsResponse"
              },
              {
                "name": "CreateRole",
                "in_type": "CreateRoleRequest",
                "out_type": "Empty"
              },
              {
                "name": "UpdateRole",
                "in_type": "storage.Role",
                "out_type": "Empty"
              },
              {
                "name": "DeleteRole",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetResources",
                "in_type": "Empty",
                "out_type": "GetResourcesResponse"
              },
              {
                "name": "GetPermissionSet",
                "in_type": "ResourceByID",
                "out_type": "storage.PermissionSet"
              },
              {
                "name": "ListPermissionSets",
                "in_type": "Empty",
                "out_type": "ListPermissionSetsResponse"
              },
              {
                "name": "PostPermissionSet",
                "in_type": "storage.PermissionSet",
                "out_type": "storage.PermissionSet"
              },
              {
                "name": "PutPermissionSet",
                "in_type": "storage.PermissionSet",
                "out_type": "Empty"
              },
              {
                "name": "DeletePermissionSet",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "GetSimpleAccessScope",
                "in_type": "ResourceByID",
                "out_type": "storage.SimpleAccessScope"
              },
              {
                "name": "ListSimpleAccessScopes",
                "in_type": "Empty",
                "out_type": "ListSimpleAccessScopesResponse"
              },
              {
                "name": "PostSimpleAccessScope",
                "in_type": "storage.SimpleAccessScope",
                "out_type": "storage.SimpleAccessScope"
              },
              {
                "name": "PutSimpleAccessScope",
                "in_type": "storage.SimpleAccessScope",
                "out_type": "Empty"
              },
              {
                "name": "DeleteSimpleAccessScope",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "ComputeEffectiveAccessScope",
                "in_type": "ComputeEffectiveAccessScopeRequest",
                "out_type": "storage.EffectiveAccessScope"
              },
              {
                "name": "GetClustersForPermissions",
                "in_type": "GetClustersForPermissionsRequest",
                "out_type": "GetClustersForPermissionsResponse"
              },
              {
                "name": "GetNamespacesForClusterAndPermissions",
                "in_type": "GetNamespaceForClusterAndPermissionsRequest",
                "out_type": "GetNamespacesForClusterAndPermissionsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/pagination.proto"
          },
          {
            "path": "storage/role.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:search_service.proto",
      "def": {
        "enums": [
          {
            "name": "SearchCategory",
            "enum_fields": [
              {
                "name": "SEARCH_UNSET"
              },
              {
                "name": "ALERTS",
                "integer": 1
              },
              {
                "name": "IMAGES",
                "integer": 2
              },
              {
                "name": "IMAGE_COMPONENTS",
                "integer": 20
              },
              {
                "name": "IMAGE_VULN_EDGE",
                "integer": 27
              },
              {
                "name": "IMAGE_COMPONENT_EDGE",
                "integer": 23
              },
              {
                "name": "POLICIES",
                "integer": 3
              },
              {
                "name": "DEPLOYMENTS",
                "integer": 4
              },
              {
                "name": "ACTIVE_COMPONENT",
                "integer": 30
              },
              {
                "name": "PODS",
                "integer": 25
              },
              {
                "name": "SECRETS",
                "integer": 5
              },
              {
                "name": "PROCESS_INDICATORS",
                "integer": 6
              },
              {
                "name": "COMPLIANCE",
                "integer": 7
              },
              {
                "name": "CLUSTERS",
                "integer": 8
              },
              {
                "name": "NAMESPACES",
                "integer": 9
              },
              {
                "name": "NODES",
                "integer": 10
              },
              {
                "name": "NODE_COMPONENTS",
                "integer": 38
              },
              {
                "name": "NODE_VULN_EDGE",
                "integer": 28
              },
              {
                "name": "NODE_COMPONENT_EDGE",
                "integer": 29
              },
              {
                "name": "NODE_COMPONENT_CVE_EDGE",
                "integer": 33
              },
              {
                "name": "COMPLIANCE_STANDARD",
                "integer": 11
              },
              {
                "name": "COMPLIANCE_CONTROL_GROUP",
                "integer": 12
              },
              {
                "name": "COMPLIANCE_CONTROL",
                "integer": 13
              },
              {
                "name": "SERVICE_ACCOUNTS",
                "integer": 14
              },
              {
                "name": "ROLES",
                "integer": 15
              },
              {
                "name": "ROLEBINDINGS",
                "integer": 16
              },
              {
                "name": "REPORT_CONFIGURATIONS",
                "integer": 37
              },
              {
                "name": "PROCESS_BASELINES",
                "integer": 17
              },
              {
                "name": "SUBJECTS",
                "integer": 18
              },
              {
                "name": "RISKS",
                "integer": 19
              },
              {
                "name": "VULNERABILITIES",
                "integer": 21
              },
              {
                "name": "CLUSTER_VULNERABILITIES",
                "integer": 34
              },
              {
                "name": "IMAGE_VULNERABILITIES",
                "integer": 35
              },
              {
                "name": "NODE_VULNERABILITIES",
                "integer": 36
              },
              {
                "name": "COMPONENT_VULN_EDGE",
                "integer": 22
              },
              {
                "name": "CLUSTER_VULN_EDGE",
                "integer": 24
              },
              {
                "name": "NETWORK_ENTITY",
                "integer": 26
              },
              {
                "name": "VULN_REQUEST",
                "integer": 32
              },
              {
                "name": "NETWORK_BASELINE",
                "integer": 39
              },
              {
                "name": "NETWORK_POLICIES",
                "integer": 40
              },
              {
                "name": "PROCESS_BASELINE_RESULTS",
                "integer": 41
              },
              {
                "name": "COMPLIANCE_METADATA",
                "integer": 42
              },
              {
                "name": "COMPLIANCE_RESULTS",
                "integer": 43
              },
              {
                "name": "COMPLIANCE_DOMAIN",
                "integer": 44
              },
              {
                "name": "CLUSTER_HEALTH",
                "integer": 45
              },
              {
                "name": "POLICY_CATEGORIES",
                "integer": 46
              },
              {
                "name": "IMAGE_INTEGRATIONS",
                "integer": 47
              },
              {
                "name": "COLLECTIONS",
                "integer": 48
              },
              {
                "name": "POLICY_CATEGORY_EDGE",
                "integer": 49
              },
              {
                "name": "PROCESS_LISTENING_ON_PORT",
                "integer": 50
              },
              {
                "name": "API_TOKEN",
                "integer": 51
              }
            ]
          },
          {
            "name": "SearchDataType",
            "enum_fields": [
              {
                "name": "SEARCH_BOOL"
              },
              {
                "name": "SEARCH_NUMERIC",
                "integer": 1
              },
              {
                "name": "SEARCH_STRING",
                "integer": 2
              },
              {
                "name": "SEARCH_DATETIME",
                "integer": 3
              },
              {
                "name": "SEARCH_MAP",
                "integer": 4
              },
              {
                "name": "SEARCH_ENUM",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "RawQuery",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              },
              {
                "id": 2,
                "name": "pagination",
                "type": "Pagination"
              }
            ]
          },
          {
            "name": "RawSearchRequest",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              },
              {
                "id": 2,
                "name": "categories",
                "type": "SearchCategory",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "QuerySortOption",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "string"
              },
              {
                "id": 2,
                "name": "reversed",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "search_after",
                "type": "string"
              },
              {
                "id": 4,
                "name": "aggregate_by",
                "type": "AggregateBy"
              }
            ]
          },
          {
            "name": "QueryField",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "aggregate_func",
                "type": "string"
              },
              {
                "id": 3,
                "name": "distinct",
                "type": "bool"
              }
            ]
          },
          {
            "name": "QuerySelectFilter",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "query",
                "type": "Query"
              }
            ]
          },
          {
            "name": "QuerySelect",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "QueryField"
              },
              {
                "id": 2,
                "name": "filter",
                "type": "QuerySelectFilter"
              }
            ]
          },
          {
            "name": "QueryGroupBy",
            "fields": [
              {
                "id": 1,
                "name": "fields",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "QueryPagination",
            "fields": [
              {
                "id": 1,
                "name": "limit",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "offset",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "sort_options",
                "type": "QuerySortOption",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BooleanQuery",
            "fields": [
              {
                "id": 1,
                "name": "must",
                "type": "ConjunctionQuery"
              },
              {
                "id": 2,
                "name": "must_not",
                "type": "DisjunctionQuery"
              }
            ]
          },
          {
            "name": "Query",
            "fields": [
              {
                "id": 1,
                "name": "conjunction",
                "type": "ConjunctionQuery"
              },
              {
                "id": 2,
                "name": "disjunction",
                "type": "DisjunctionQuery"
              },
              {
                "id": 3,
                "name": "base_query",
                "type": "BaseQuery"
              },
              {
                "id": 6,
                "name": "boolean_query",
                "type": "BooleanQuery"
              },
              {
                "id": 8,
                "name": "selects",
                "type": "QuerySelect",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "group_by",
                "type": "QueryGroupBy"
              },
              {
                "id": 4,
                "name": "pagination",
                "type": "QueryPagination"
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "StringQuery",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "string"
              }
            ]
          },
          {
            "name": "MatchFieldQuery",
            "fields": [
              {
                "id": 1,
                "name": "field",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "highlight",
                "type": "bool"
              }
            ]
          },
          {
            "name": "MatchLinkedFieldsQuery",
            "fields": [
              {
                "id": 1,
                "name": "query",
                "type": "MatchFieldQuery",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DocIDQuery",
            "fields": [
              {
                "id": 1,
                "name": "ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "BaseQuery",
            "fields": [
              {
                "id": 2,
                "name": "match_field_query",
                "type": "MatchFieldQuery"
              },
              {
                "id": 3,
                "name": "match_linked_fields_query",
                "type": "MatchLinkedFieldsQuery"
              },
              {
                "id": 4,
                "name": "doc_id_query",
                "type": "DocIDQuery"
              },
              {
                "id": 5,
                "name": "match_none_query",
                "type": "MatchNoneQuery"
              }
            ]
          },
          {
            "name": "ConjunctionQuery",
            "fields": [
              {
                "id": 1,
                "name": "queries",
                "type": "Query",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DisjunctionQuery",
            "fields": [
              {
                "id": 1,
                "name": "queries",
                "type": "Query",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MatchNoneQuery"
          },
          {
            "name": "SearchResult",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "category",
                "type": "SearchCategory"
              },
              {
                "id": 5,
                "name": "score",
                "type": "double"
              },
              {
                "id": 6,
                "name": "location",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "field_to_matches",
                  "type": "Matches"
                }
              }
            ],
            "messages": [
              {
                "name": "Matches",
                "fields": [
                  {
                    "id": 1,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "SearchResponse",
            "fields": [
              {
                "id": 1,
                "name": "results",
                "type": "SearchResult",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "counts",
                "type": "Count",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Count",
                "fields": [
                  {
                    "id": 1,
                    "name": "category",
                    "type": "SearchCategory"
                  },
                  {
                    "id": 2,
                    "name": "count",
                    "type": "int64"
                  }
                ]
              }
            ]
          },
          {
            "name": "SearchOptionsRequest",
            "fields": [
              {
                "id": 1,
                "name": "categories",
                "type": "SearchCategory",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SearchOptionsResponse",
            "fields": [
              {
                "id": 1,
                "name": "options",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AutocompleteResponse",
            "fields": [
              {
                "id": 1,
                "name": "values",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SearchService",
            "rpcs": [
              {
                "name": "Search",
                "in_type": "RawSearchRequest",
                "out_type": "SearchResponse"
              },
              {
                "name": "Options",
                "in_type": "SearchOptionsRequest",
                "out_type": "SearchOptionsResponse"
              },
              {
                "name": "Autocomplete",
                "in_type": "RawSearchRequest",
                "out_type": "AutocompleteResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/pagination.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:secret_service.proto",
      "def": {
        "messages": [
          {
            "name": "SecretList",
            "fields": [
              {
                "id": 1,
                "name": "secrets",
                "type": "storage.Secret",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListSecretsResponse",
            "fields": [
              {
                "id": 1,
                "name": "secrets",
                "type": "storage.ListSecret",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CountSecretsResponse",
            "fields": [
              {
                "id": 1,
                "name": "count",
                "type": "int32"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SecretService",
            "rpcs": [
              {
                "name": "GetSecret",
                "in_type": "ResourceByID",
                "out_type": "storage.Secret"
              },
              {
                "name": "CountSecrets",
                "in_type": "RawQuery",
                "out_type": "CountSecretsResponse"
              },
              {
                "name": "ListSecrets",
                "in_type": "RawQuery",
                "out_type": "ListSecretsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "storage/secret.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:sensor_upgrade_service.proto",
      "def": {
        "enums": [
          {
            "name": "GetSensorUpgradeConfigResponse.SensorAutoUpgradeFeatureStatus",
            "enum_fields": [
              {
                "name": "NOT_SUPPORTED"
              },
              {
                "name": "SUPPORTED",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "UpdateSensorUpgradeConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.SensorUpgradeConfig"
              }
            ]
          },
          {
            "name": "GetSensorUpgradeConfigResponse",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "UpgradeConfig"
              }
            ],
            "messages": [
              {
                "name": "UpgradeConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "enable_auto_upgrade",
                    "type": "bool"
                  },
                  {
                    "id": 2,
                    "name": "auto_upgrade_feature",
                    "type": "SensorAutoUpgradeFeatureStatus"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SensorUpgradeService",
            "rpcs": [
              {
                "name": "GetSensorUpgradeConfig",
                "in_type": "Empty",
                "out_type": "GetSensorUpgradeConfigResponse"
              },
              {
                "name": "UpdateSensorUpgradeConfig",
                "in_type": "UpdateSensorUpgradeConfigRequest",
                "out_type": "Empty"
              },
              {
                "name": "TriggerSensorUpgrade",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              },
              {
                "name": "TriggerSensorCertRotation",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "storage/sensor_upgrade.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:service_account_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListServiceAccountResponse",
            "fields": [
              {
                "id": 1,
                "name": "sa_and_roles",
                "type": "ServiceAccountAndRoles",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ServiceAccountAndRoles",
            "fields": [
              {
                "id": 1,
                "name": "service_account",
                "type": "storage.ServiceAccount"
              },
              {
                "id": 2,
                "name": "cluster_roles",
                "type": "storage.K8sRole",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "scoped_roles",
                "type": "ScopedRoles",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "deployment_relationships",
                "type": "SADeploymentRelationship",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetServiceAccountResponse",
            "fields": [
              {
                "id": 1,
                "name": "sa_and_role",
                "type": "ServiceAccountAndRoles"
              }
            ]
          },
          {
            "name": "SADeploymentRelationship",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ServiceAccountService",
            "rpcs": [
              {
                "name": "GetServiceAccount",
                "in_type": "ResourceByID",
                "out_type": "GetServiceAccountResponse"
              },
              {
                "name": "ListServiceAccounts",
                "in_type": "RawQuery",
                "out_type": "ListServiceAccountResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "api/v1/rbac_service.proto"
          },
          {
            "path": "storage/service_account.proto"
          },
          {
            "path": "storage/rbac.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:service_identity_service.proto",
      "def": {
        "messages": [
          {
            "name": "ServiceIdentityResponse",
            "fields": [
              {
                "id": 1,
                "name": "identities",
                "type": "storage.ServiceIdentity",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CreateServiceIdentityRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "storage.ServiceType"
              }
            ]
          },
          {
            "name": "CreateServiceIdentityResponse",
            "fields": [
              {
                "id": 1,
                "name": "identity",
                "type": "storage.ServiceIdentity"
              },
              {
                "id": 2,
                "name": "certificate_pem",
                "type": "bytes"
              },
              {
                "id": 3,
                "name": "private_key_pem",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Authority",
            "fields": [
              {
                "id": 1,
                "name": "certificate_pem",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "Authorities",
            "fields": [
              {
                "id": 1,
                "name": "authorities",
                "type": "Authority",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ServiceIdentityService",
            "rpcs": [
              {
                "name": "GetServiceIdentities",
                "in_type": "Empty",
                "out_type": "ServiceIdentityResponse"
              },
              {
                "name": "CreateServiceIdentity",
                "in_type": "CreateServiceIdentityRequest",
                "out_type": "CreateServiceIdentityResponse"
              },
              {
                "name": "GetAuthorities",
                "in_type": "Empty",
                "out_type": "Authorities"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/service_identity.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:signal.proto",
      "def": {
        "messages": [
          {
            "name": "Signal",
            "fields": [
              {
                "id": 1,
                "name": "process_signal",
                "type": "storage.ProcessSignal"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:signature_integration_service.proto",
      "def": {
        "messages": [
          {
            "name": "ListSignatureIntegrationsResponse",
            "fields": [
              {
                "id": 1,
                "name": "integrations",
                "type": "storage.SignatureIntegration",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SignatureIntegrationService",
            "rpcs": [
              {
                "name": "ListSignatureIntegrations",
                "in_type": "Empty",
                "out_type": "ListSignatureIntegrationsResponse"
              },
              {
                "name": "GetSignatureIntegration",
                "in_type": "ResourceByID",
                "out_type": "storage.SignatureIntegration"
              },
              {
                "name": "PostSignatureIntegration",
                "in_type": "storage.SignatureIntegration",
                "out_type": "storage.SignatureIntegration"
              },
              {
                "name": "PutSignatureIntegration",
                "in_type": "storage.SignatureIntegration",
                "out_type": "Empty"
              },
              {
                "name": "DeleteSignatureIntegration",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "storage/signature_integration.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:summary_service.proto",
      "def": {
        "messages": [
          {
            "name": "SummaryCountsResponse",
            "fields": [
              {
                "id": 1,
                "name": "num_alerts",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "num_clusters",
                "type": "int64"
              },
              {
                "id": 3,
                "name": "num_deployments",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "num_images",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "num_secrets",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "num_nodes",
                "type": "int64"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SummaryService",
            "rpcs": [
              {
                "name": "GetSummaryCounts",
                "in_type": "Empty",
                "out_type": "SummaryCountsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:telemetry_service.proto",
      "def": {
        "messages": [
          {
            "name": "ConfigureTelemetryRequest",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "TelemetryService",
            "rpcs": [
              {
                "name": "GetTelemetryConfiguration",
                "in_type": "Empty",
                "out_type": "storage.TelemetryConfiguration"
              },
              {
                "name": "ConfigureTelemetry",
                "in_type": "ConfigureTelemetryRequest",
                "out_type": "storage.TelemetryConfiguration"
              },
              {
                "name": "GetConfig",
                "in_type": "Empty",
                "out_type": "central.TelemetryConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "storage/telemetry.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "internalapi/central/telemetry.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:user_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetUsersResponse",
            "fields": [
              {
                "id": 1,
                "name": "users",
                "type": "storage.User",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UserAttributeTuple",
            "fields": [
              {
                "id": 1,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetUsersAttributesResponse",
            "fields": [
              {
                "id": 1,
                "name": "users_attributes",
                "type": "UserAttributeTuple",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "UserService",
            "rpcs": [
              {
                "name": "GetUsers",
                "in_type": "Empty",
                "out_type": "GetUsersResponse"
              },
              {
                "name": "GetUser",
                "in_type": "ResourceByID",
                "out_type": "storage.User"
              },
              {
                "name": "GetUsersAttributes",
                "in_type": "Empty",
                "out_type": "GetUsersAttributesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v1:/:vuln_req_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetVulnerabilityRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "ListVulnerabilityRequestsResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_infos",
                "type": "storage.VulnerabilityRequest",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "DeferVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "cve",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              },
              {
                "id": 3,
                "name": "scope",
                "type": "storage.VulnerabilityRequest.Scope"
              },
              {
                "id": 4,
                "name": "expires_when_fixed",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "expires_on",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "DeferVulnResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "FalsePositiveVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "cve",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scope",
                "type": "storage.VulnerabilityRequest.Scope"
              },
              {
                "id": 3,
                "name": "comment",
                "type": "string"
              }
            ]
          },
          {
            "name": "FalsePositiveVulnResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "ApproveVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              }
            ]
          },
          {
            "name": "ApproveVulnRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "DenyVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              }
            ]
          },
          {
            "name": "DenyVulnRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "UpdateVulnRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "comment",
                "type": "string"
              },
              {
                "id": 3,
                "name": "expiry",
                "type": "storage.RequestExpiry"
              }
            ]
          },
          {
            "name": "UpdateVulnRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          },
          {
            "name": "UndoVulnRequestResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_info",
                "type": "storage.VulnerabilityRequest"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "VulnerabilityRequestService",
            "rpcs": [
              {
                "name": "GetVulnerabilityRequest",
                "in_type": "ResourceByID",
                "out_type": "GetVulnerabilityRequestResponse"
              },
              {
                "name": "ListVulnerabilityRequests",
                "in_type": "RawQuery",
                "out_type": "ListVulnerabilityRequestsResponse"
              },
              {
                "name": "DeferVulnerability",
                "in_type": "DeferVulnRequest",
                "out_type": "DeferVulnResponse"
              },
              {
                "name": "FalsePositiveVulnerability",
                "in_type": "FalsePositiveVulnRequest",
                "out_type": "FalsePositiveVulnResponse"
              },
              {
                "name": "ApproveVulnerabilityRequest",
                "in_type": "ApproveVulnRequest",
                "out_type": "ApproveVulnRequestResponse"
              },
              {
                "name": "DenyVulnerabilityRequest",
                "in_type": "DenyVulnRequest",
                "out_type": "DenyVulnRequestResponse"
              },
              {
                "name": "UpdateVulnerabilityRequest",
                "in_type": "UpdateVulnRequest",
                "out_type": "UpdateVulnRequestResponse"
              },
              {
                "name": "UndoVulnerabilityRequest",
                "in_type": "ResourceByID",
                "out_type": "UndoVulnRequestResponse"
              },
              {
                "name": "DeleteVulnerabilityRequest",
                "in_type": "ResourceByID",
                "out_type": "Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "storage/vuln_requests.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:api:/:v2:/:report_configuration_service.proto",
      "def": {
        "enums": [
          {
            "name": "ReportConfiguration.ReportType",
            "enum_fields": [
              {
                "name": "VULNERABILITY"
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.Fixability",
            "enum_fields": [
              {
                "name": "BOTH"
              },
              {
                "name": "FIXABLE",
                "integer": 1
              },
              {
                "name": "NOT_FIXABLE",
                "integer": 2
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.VulnerabilitySeverity",
            "enum_fields": [
              {
                "name": "UNKNOWN_VULNERABILITY_SEVERITY"
              },
              {
                "name": "LOW_VULNERABILITY_SEVERITY",
                "integer": 1
              },
              {
                "name": "MODERATE_VULNERABILITY_SEVERITY",
                "integer": 2
              },
              {
                "name": "IMPORTANT_VULNERABILITY_SEVERITY",
                "integer": 3
              },
              {
                "name": "CRITICAL_VULNERABILITY_SEVERITY",
                "integer": 4
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.ImageType",
            "enum_fields": [
              {
                "name": "DEPLOYED"
              },
              {
                "name": "WATCHED",
                "integer": 1
              }
            ]
          },
          {
            "name": "Schedule.IntervalType",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "DAILY",
                "integer": 1
              },
              {
                "name": "WEEKLY",
                "integer": 2
              },
              {
                "name": "MONTHLY",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ReportConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "ReportType"
              },
              {
                "id": 5,
                "name": "vuln_report_filters",
                "type": "VulnerabilityReportFilters"
              },
              {
                "id": 6,
                "name": "schedule",
                "type": "Schedule"
              },
              {
                "id": 7,
                "name": "resource_scope",
                "type": "ResourceScope"
              },
              {
                "id": 8,
                "name": "notifiers",
                "type": "NotifierConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters",
            "fields": [
              {
                "id": 1,
                "name": "fixability",
                "type": "Fixability"
              },
              {
                "id": 2,
                "name": "severities",
                "type": "VulnerabilitySeverity",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "image_types",
                "type": "ImageType",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "all_vuln",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "last_successful_report",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "start_date",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "Schedule",
            "fields": [
              {
                "id": 1,
                "name": "interval_type",
                "type": "IntervalType"
              },
              {
                "id": 2,
                "name": "hour",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "minute",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "weekly",
                "type": "WeeklyInterval"
              },
              {
                "id": 5,
                "name": "days_of_week",
                "type": "DaysOfWeek"
              },
              {
                "id": 6,
                "name": "days_of_month",
                "type": "DaysOfMonth"
              }
            ],
            "messages": [
              {
                "name": "WeeklyInterval",
                "fields": [
                  {
                    "id": 1,
                    "name": "day",
                    "type": "int32"
                  }
                ]
              },
              {
                "name": "DaysOfWeek",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "DaysOfMonth",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ResourceScope",
            "fields": [
              {
                "id": 1,
                "name": "collection_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NotifierConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "email_config",
                "type": "EmailNotifierConfiguration"
              }
            ]
          },
          {
            "name": "EmailNotifierConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "notifier_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "mailing_lists",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ReportConfigurationService",
            "rpcs": [
              {
                "name": "PostReportConfiguration",
                "in_type": "ReportConfiguration",
                "out_type": "ReportConfiguration"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "api/v1/common.proto"
          },
          {
            "path": "api/v1/empty.proto"
          },
          {
            "path": "api/v1/search_service.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "v1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:auth.proto",
      "def": {
        "messages": [
          {
            "name": "ServiceCertAuth",
            "fields": [
              {
                "id": 1,
                "name": "cert_der",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "current_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:baseline_sync.proto",
      "def": {
        "messages": [
          {
            "name": "BaselineSync",
            "fields": [
              {
                "id": 1,
                "name": "baselines",
                "type": "storage.ProcessBaseline",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/process_baseline.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:cluster_config.proto",
      "def": {
        "messages": [
          {
            "name": "ClusterConfig",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "storage.DynamicClusterConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:cluster_metrics.proto",
      "def": {
        "messages": [
          {
            "name": "ClusterMetrics",
            "fields": [
              {
                "id": 1,
                "name": "node_count",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "cpu_capacity",
                "type": "int64"
              }
            ]
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:cluster_status.proto",
      "def": {
        "messages": [
          {
            "name": "DeploymentEnvironmentUpdate",
            "fields": [
              {
                "id": 1,
                "name": "environments",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ClusterStatusUpdate",
            "fields": [
              {
                "id": 1,
                "name": "status",
                "type": "storage.ClusterStatus"
              },
              {
                "id": 2,
                "name": "deployment_env_update",
                "type": "DeploymentEnvironmentUpdate"
              }
            ]
          },
          {
            "name": "RawClusterHealthInfo",
            "fields": [
              {
                "id": 1,
                "name": "collector_health_info",
                "type": "storage.CollectorHealthInfo"
              },
              {
                "id": 2,
                "name": "admission_control_health_info",
                "type": "storage.AdmissionControlHealthInfo"
              },
              {
                "id": 3,
                "name": "scanner_health_info",
                "type": "storage.ScannerHealthInfo"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:development_service.proto",
      "def": {
        "enums": [
          {
            "name": "URLHasValidCertResponse.URLResult",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "CERT_SIGNED_BY_UNKNOWN_AUTHORITY",
                "integer": 1
              },
              {
                "name": "CERT_SIGNING_AUTHORITY_VALID_BUT_OTHER_ERROR",
                "integer": 2
              },
              {
                "name": "OTHER_GET_ERROR",
                "integer": 3
              },
              {
                "name": "REQUEST_SUCCEEDED",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "URLHasValidCertRequest",
            "fields": [
              {
                "id": 1,
                "name": "url",
                "type": "string"
              }
            ]
          },
          {
            "name": "URLHasValidCertResponse",
            "fields": [
              {
                "id": 1,
                "name": "result",
                "type": "URLResult"
              },
              {
                "id": 2,
                "name": "details",
                "type": "string"
              }
            ]
          },
          {
            "name": "RandomDataRequest",
            "fields": [
              {
                "id": 1,
                "name": "size",
                "type": "int32"
              }
            ]
          },
          {
            "name": "RandomDataResponse",
            "fields": [
              {
                "id": 1,
                "name": "data",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "EnvVarsResponse",
            "fields": [
              {
                "id": 1,
                "name": "env_vars",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReconciliationStatsByClusterResponse",
            "fields": [
              {
                "id": 1,
                "name": "stats",
                "type": "ReconciliationStatsForCluster",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ReconciliationStatsForCluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "reconciliation_done",
                    "type": "bool"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "deleted_objects_by_type",
                      "type": "int32"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "ReplicateImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "times",
                "type": "int32"
              }
            ]
          },
          {
            "name": "Empty"
          }
        ],
        "services": [
          {
            "name": "DevelopmentService",
            "rpcs": [
              {
                "name": "ReplicateImage",
                "in_type": "ReplicateImageRequest",
                "out_type": "Empty"
              },
              {
                "name": "URLHasValidCert",
                "in_type": "URLHasValidCertRequest",
                "out_type": "URLHasValidCertResponse"
              },
              {
                "name": "RandomData",
                "in_type": "RandomDataRequest",
                "out_type": "RandomDataResponse"
              },
              {
                "name": "EnvVars",
                "in_type": "Empty",
                "out_type": "EnvVarsResponse"
              },
              {
                "name": "ReconciliationStatsByCluster",
                "in_type": "Empty",
                "out_type": "ReconciliationStatsByClusterResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:hello.proto",
      "def": {
        "messages": [
          {
            "name": "HelmManagedConfigInit",
            "fields": [
              {
                "id": 1,
                "name": "cluster_config",
                "type": "storage.CompleteClusterConfig"
              },
              {
                "id": 2,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "not_helm_managed",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "managed_by",
                "type": "storage.ManagerType"
              }
            ]
          },
          {
            "name": "SensorHello",
            "fields": [
              {
                "id": 1,
                "name": "sensor_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "capabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "deployment_identification",
                "type": "storage.SensorDeploymentIdentification"
              },
              {
                "id": 3,
                "name": "helm_managed_config_init",
                "type": "HelmManagedConfigInit"
              },
              {
                "id": 4,
                "name": "policy_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "CentralHello",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "managed_central",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "cert_bundle",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:local_scanner.proto",
      "def": {
        "messages": [
          {
            "name": "LocalScannerCertsIssueError",
            "fields": [
              {
                "id": 1,
                "name": "message",
                "type": "string"
              }
            ]
          },
          {
            "name": "IssueLocalScannerCertsRequest",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "IssueLocalScannerCertsResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "certificates",
                "type": "storage.TypedServiceCertificateSet"
              },
              {
                "id": 3,
                "name": "error",
                "type": "LocalScannerCertsIssueError"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/service_identity.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:network_baseline_sync.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkBaselineSync",
            "fields": [
              {
                "id": 1,
                "name": "network_baselines",
                "type": "storage.NetworkBaseline",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/network_baseline.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:network_flow.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkFlowUpdate",
            "fields": [
              {
                "id": 1,
                "name": "updated",
                "type": "storage.NetworkFlow",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "updated_endpoints",
                "type": "storage.NetworkEndpoint",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "PushNetworkEntitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "entities",
                "type": "storage.NetworkEntityInfo",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "seqID",
                "type": "int64"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_flow.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:network_policy.proto",
      "def": {
        "messages": [
          {
            "name": "SendNetworkPolicyYamlRequest",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "notifier_ids",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "modification",
                "type": "storage.NetworkPolicyModification"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/network_policy.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:policy_sync.proto",
      "def": {
        "messages": [
          {
            "name": "PolicySync",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "storage.Policy",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:process_listening_on_ports_update.proto",
      "def": {
        "messages": [
          {
            "name": "ProcessListeningOnPortsUpdate",
            "fields": [
              {
                "id": 1,
                "name": "processes_listening_on_ports",
                "type": "storage.ProcessListeningOnPortFromSensor",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/process_listening_on_port.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:secured_cluster_notifier.proto",
      "def": {
        "messages": [
          {
            "name": "NotifierSync",
            "fields": [
              {
                "id": 1,
                "name": "notifiers",
                "type": "storage.Notifier",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "TestNotifierRequest",
            "fields": [
              {
                "id": 1,
                "name": "notifier",
                "type": "storage.Notifier"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/notifier.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:sensor_events.proto",
      "def": {
        "enums": [
          {
            "name": "ResourceAction",
            "enum_fields": [
              {
                "name": "UNSET_ACTION_RESOURCE"
              },
              {
                "name": "CREATE_RESOURCE",
                "integer": 1
              },
              {
                "name": "REMOVE_RESOURCE",
                "integer": 2
              },
              {
                "name": "UPDATE_RESOURCE",
                "integer": 3
              },
              {
                "name": "SYNC_RESOURCE",
                "integer": 4
              }
            ]
          },
          {
            "name": "AlertResults.Source",
            "enum_fields": [
              {
                "name": "DEPLOYMENT_EVENT"
              },
              {
                "name": "AUDIT_EVENT",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ReprocessDeploymentRisk",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "AlertResults",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "alerts",
                "type": "storage.Alert",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "stage",
                "type": "storage.LifecycleStage"
              },
              {
                "id": 4,
                "name": "source",
                "type": "Source"
              }
            ]
          },
          {
            "name": "Timing",
            "fields": [
              {
                "id": 1,
                "name": "dispatcher",
                "type": "string"
              },
              {
                "id": 2,
                "name": "resource",
                "type": "string"
              },
              {
                "id": 3,
                "name": "nanos",
                "type": "int64"
              }
            ]
          },
          {
            "name": "SensorEvent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "action",
                "type": "ResourceAction"
              },
              {
                "id": 3,
                "name": "timing",
                "type": "Timing"
              },
              {
                "id": 26,
                "name": "sensor_hash",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "network_policy",
                "type": "storage.NetworkPolicy"
              },
              {
                "id": 5,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 19,
                "name": "pod",
                "type": "storage.Pod"
              },
              {
                "id": 6,
                "name": "namespace",
                "type": "storage.NamespaceMetadata"
              },
              {
                "id": 7,
                "name": "secret",
                "type": "storage.Secret"
              },
              {
                "id": 9,
                "name": "node",
                "type": "storage.Node"
              },
              {
                "id": 25,
                "name": "node_inventory",
                "type": "storage.NodeInventory"
              },
              {
                "id": 14,
                "name": "service_account",
                "type": "storage.ServiceAccount"
              },
              {
                "id": 15,
                "name": "role",
                "type": "storage.K8sRole"
              },
              {
                "id": 16,
                "name": "binding",
                "type": "storage.K8sRoleBinding"
              },
              {
                "id": 8,
                "name": "process_indicator",
                "type": "storage.ProcessIndicator"
              },
              {
                "id": 10,
                "name": "provider_metadata",
                "type": "storage.ProviderMetadata"
              },
              {
                "id": 11,
                "name": "synced",
                "type": "ResourcesSynced"
              },
              {
                "id": 12,
                "name": "orchestrator_metadata",
                "type": "storage.OrchestratorMetadata"
              },
              {
                "id": 13,
                "name": "image_integration",
                "type": "storage.ImageIntegration"
              },
              {
                "id": 17,
                "name": "reprocess_deployment",
                "type": "ReprocessDeploymentRisk"
              },
              {
                "id": 18,
                "name": "alert_results",
                "type": "AlertResults"
              },
              {
                "id": 20,
                "name": "compliance_operator_result",
                "type": "storage.ComplianceOperatorCheckResult"
              },
              {
                "id": 21,
                "name": "compliance_operator_profile",
                "type": "storage.ComplianceOperatorProfile"
              },
              {
                "id": 22,
                "name": "compliance_operator_rule",
                "type": "storage.ComplianceOperatorRule"
              },
              {
                "id": 23,
                "name": "compliance_operator_scan_setting_binding",
                "type": "storage.ComplianceOperatorScanSettingBinding"
              },
              {
                "id": 24,
                "name": "compliance_operator_scan",
                "type": "storage.ComplianceOperatorScan"
              }
            ],
            "messages": [
              {
                "name": "ResourcesSynced"
              }
            ]
          },
          {
            "name": "SensorEnforcement",
            "fields": [
              {
                "id": 1,
                "name": "enforcement",
                "type": "storage.EnforcementAction"
              },
              {
                "id": 2,
                "name": "deployment",
                "type": "DeploymentEnforcement"
              },
              {
                "id": 3,
                "name": "container_instance",
                "type": "ContainerInstanceEnforcement"
              }
            ]
          },
          {
            "name": "DeploymentEnforcement",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "deployment_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment_type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "alert_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "policy_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ContainerInstanceEnforcement",
            "fields": [
              {
                "id": 2,
                "name": "pod_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment_enforcement",
                "type": "DeploymentEnforcement"
              }
            ]
          },
          {
            "name": "ScrapeCommand",
            "fields": [
              {
                "id": 1,
                "name": "scrape_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "start_scrape",
                "type": "StartScrape"
              },
              {
                "id": 3,
                "name": "kill_scrape",
                "type": "KillScrape"
              }
            ]
          },
          {
            "name": "StartScrape",
            "fields": [
              {
                "id": 1,
                "name": "hostnames",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "standards",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "KillScrape"
          },
          {
            "name": "ScrapeUpdate",
            "fields": [
              {
                "id": 1,
                "name": "scrape_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "compliance_return",
                "type": "compliance.ComplianceReturn"
              },
              {
                "id": 3,
                "name": "scrape_started",
                "type": "ScrapeStarted"
              },
              {
                "id": 4,
                "name": "scrape_killed",
                "type": "ScrapeKilled"
              }
            ]
          },
          {
            "name": "ScrapeStarted",
            "fields": [
              {
                "id": 1,
                "name": "error_message",
                "type": "string"
              }
            ]
          },
          {
            "name": "ScrapeKilled",
            "fields": [
              {
                "id": 1,
                "name": "error_message",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkPoliciesCommand",
            "fields": [
              {
                "id": 1,
                "name": "seq_id",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "payload",
                "type": "Payload"
              }
            ],
            "messages": [
              {
                "name": "Apply",
                "fields": [
                  {
                    "id": 1,
                    "name": "apply_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "modification",
                    "type": "storage.NetworkPolicyModification"
                  }
                ]
              },
              {
                "name": "Payload",
                "fields": [
                  {
                    "id": 1,
                    "name": "apply",
                    "type": "Apply"
                  }
                ]
              }
            ]
          },
          {
            "name": "NetworkPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "seq_id",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "payload",
                "type": "Payload"
              }
            ],
            "messages": [
              {
                "name": "Apply",
                "fields": [
                  {
                    "id": 1,
                    "name": "apply_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "undo_modification",
                    "type": "storage.NetworkPolicyModification"
                  }
                ]
              },
              {
                "name": "Error",
                "fields": [
                  {
                    "id": 1,
                    "name": "message",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Payload",
                "fields": [
                  {
                    "id": 1,
                    "name": "error",
                    "type": "Error"
                  },
                  {
                    "id": 2,
                    "name": "apply",
                    "type": "Apply"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/compliance/compliance_data.proto"
          },
          {
            "path": "storage/alert.proto"
          },
          {
            "path": "storage/cluster.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/namespace_metadata.proto"
          },
          {
            "path": "storage/network_policy.proto"
          },
          {
            "path": "storage/node.proto"
          },
          {
            "path": "storage/secret.proto"
          },
          {
            "path": "storage/service_account.proto"
          },
          {
            "path": "storage/rbac.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          },
          {
            "path": "storage/image_integration.proto"
          },
          {
            "path": "storage/compliance_operator.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:sensor_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "MsgFromSensor",
            "fields": [
              {
                "id": 7,
                "name": "hash_key",
                "type": "string"
              },
              {
                "id": 8,
                "name": "dedupe_key",
                "type": "string"
              },
              {
                "id": 15,
                "name": "processing_attempt",
                "type": "int32"
              },
              {
                "id": 1,
                "name": "event",
                "type": "SensorEvent"
              },
              {
                "id": 2,
                "name": "network_flow_update",
                "type": "NetworkFlowUpdate"
              },
              {
                "id": 3,
                "name": "scrape_update",
                "type": "ScrapeUpdate"
              },
              {
                "id": 4,
                "name": "network_policies_response",
                "type": "NetworkPoliciesResponse"
              },
              {
                "id": 5,
                "name": "cluster_status_update",
                "type": "ClusterStatusUpdate"
              },
              {
                "id": 6,
                "name": "telemetry_data_response",
                "type": "PullTelemetryDataResponse"
              },
              {
                "id": 9,
                "name": "cluster_health_info",
                "type": "RawClusterHealthInfo"
              },
              {
                "id": 10,
                "name": "hello",
                "type": "SensorHello"
              },
              {
                "id": 11,
                "name": "audit_log_status_info",
                "type": "AuditLogStatusInfo"
              },
              {
                "id": 12,
                "name": "issue_local_scanner_certs_request",
                "type": "IssueLocalScannerCertsRequest"
              },
              {
                "id": 13,
                "name": "cluster_metrics",
                "type": "ClusterMetrics"
              },
              {
                "id": 14,
                "name": "process_listening_on_port_update",
                "type": "ProcessListeningOnPortsUpdate"
              }
            ]
          },
          {
            "name": "ReassessPolicies"
          },
          {
            "name": "ReprocessDeployments"
          },
          {
            "name": "MsgToSensor",
            "fields": [
              {
                "id": 1,
                "name": "enforcement",
                "type": "SensorEnforcement"
              },
              {
                "id": 2,
                "name": "scrape_command",
                "type": "ScrapeCommand"
              },
              {
                "id": 3,
                "name": "network_policies_command",
                "type": "NetworkPoliciesCommand"
              },
              {
                "id": 4,
                "name": "cluster_config",
                "type": "ClusterConfig"
              },
              {
                "id": 5,
                "name": "sensor_upgrade_trigger",
                "type": "SensorUpgradeTrigger"
              },
              {
                "id": 6,
                "name": "telemetry_data_request",
                "type": "PullTelemetryDataRequest"
              },
              {
                "id": 7,
                "name": "policy_sync",
                "type": "PolicySync"
              },
              {
                "id": 8,
                "name": "reassess_policies",
                "type": "ReassessPolicies"
              },
              {
                "id": 9,
                "name": "baseline_sync",
                "type": "BaselineSync"
              },
              {
                "id": 10,
                "name": "cancel_pull_telemetry_data_request",
                "type": "CancelPullTelemetryDataRequest"
              },
              {
                "id": 11,
                "name": "push_network_entities_request",
                "type": "PushNetworkEntitiesRequest"
              },
              {
                "id": 12,
                "name": "hello",
                "type": "CentralHello"
              },
              {
                "id": 13,
                "name": "network_baseline_sync",
                "type": "NetworkBaselineSync"
              },
              {
                "id": 14,
                "name": "audit_log_sync",
                "type": "AuditLogSync"
              },
              {
                "id": 15,
                "name": "reprocess_deployment",
                "type": "ReprocessDeployment"
              },
              {
                "id": 16,
                "name": "invalidate_image_cache",
                "type": "InvalidateImageCache"
              },
              {
                "id": 17,
                "name": "issue_local_scanner_certs_response",
                "type": "IssueLocalScannerCertsResponse"
              },
              {
                "id": 18,
                "name": "updated_image",
                "type": "storage.Image"
              },
              {
                "id": 19,
                "name": "reprocess_deployments",
                "type": "ReprocessDeployments"
              },
              {
                "id": 20,
                "name": "notifier_sync",
                "type": "NotifierSync"
              },
              {
                "id": 21,
                "name": "test_notifier_request",
                "type": "TestNotifierRequest"
              },
              {
                "id": 22,
                "name": "send_network_policy_yaml",
                "type": "SendNetworkPolicyYamlRequest"
              }
            ]
          },
          {
            "name": "AuditLogSync",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "node_audit_log_file_states",
                  "type": "storage.AuditLogFileState"
                }
              }
            ]
          },
          {
            "name": "AuditLogStatusInfo",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "node_audit_log_file_states",
                  "type": "storage.AuditLogFileState"
                }
              }
            ]
          },
          {
            "name": "ReprocessDeployment",
            "fields": [
              {
                "id": 1,
                "name": "deployment_ids",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "InvalidateImageCache",
            "fields": [
              {
                "id": 1,
                "name": "image_keys",
                "type": "ImageKey",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ImageKey",
                "fields": [
                  {
                    "id": 1,
                    "name": "image_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "image_full_name",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SensorService",
            "rpcs": [
              {
                "name": "Communicate",
                "in_type": "MsgFromSensor",
                "out_type": "MsgToSensor",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/central/cluster_config.proto"
          },
          {
            "path": "internalapi/central/cluster_status.proto"
          },
          {
            "path": "internalapi/central/network_flow.proto"
          },
          {
            "path": "internalapi/central/policy_sync.proto"
          },
          {
            "path": "internalapi/central/sensor_events.proto"
          },
          {
            "path": "internalapi/central/sensor_upgrade.proto"
          },
          {
            "path": "internalapi/central/cluster_metrics.proto"
          },
          {
            "path": "internalapi/central/telemetry.proto"
          },
          {
            "path": "internalapi/central/baseline_sync.proto"
          },
          {
            "path": "internalapi/central/hello.proto"
          },
          {
            "path": "internalapi/central/network_baseline_sync.proto"
          },
          {
            "path": "internalapi/central/network_policy.proto"
          },
          {
            "path": "internalapi/central/local_scanner.proto"
          },
          {
            "path": "internalapi/central/process_listening_on_ports_update.proto"
          },
          {
            "path": "internalapi/central/secured_cluster_notifier.proto"
          },
          {
            "path": "storage/cluster.proto"
          },
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:sensor_upgrade.proto",
      "def": {
        "messages": [
          {
            "name": "SensorUpgradeTrigger",
            "fields": [
              {
                "id": 1,
                "name": "upgrade_process_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image",
                "type": "string"
              },
              {
                "id": 3,
                "name": "command",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "env_vars",
                "type": "EnvVarDef",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "EnvVarDef",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "source_env_var",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "default_value",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:sensor_upgrade_ctrl_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "UpgradeCheckInFromUpgraderRequest",
            "fields": [
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "upgrade_process_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "current_workflow",
                "type": "string"
              },
              {
                "id": 3,
                "name": "last_executed_stage",
                "type": "string"
              },
              {
                "id": 4,
                "name": "last_executed_stage_error",
                "type": "string"
              }
            ]
          },
          {
            "name": "UpgradeCheckInFromUpgraderResponse",
            "fields": [
              {
                "id": 1,
                "name": "workflow_to_execute",
                "type": "string"
              }
            ]
          },
          {
            "name": "UpgradeCheckInFromSensorRequest",
            "fields": [
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "upgrade_process_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "launch_error",
                "type": "string"
              },
              {
                "id": 3,
                "name": "pod_states",
                "type": "UpgraderPodStates"
              },
              {
                "id": 4,
                "name": "deployment_gone",
                "type": "bool"
              }
            ],
            "messages": [
              {
                "name": "PodErrorCondition",
                "fields": [
                  {
                    "id": 1,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "image_related",
                    "type": "bool"
                  }
                ]
              },
              {
                "name": "UpgraderPodState",
                "fields": [
                  {
                    "id": 1,
                    "name": "pod_name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "started",
                    "type": "bool"
                  },
                  {
                    "id": 3,
                    "name": "error",
                    "type": "PodErrorCondition"
                  }
                ]
              },
              {
                "name": "UpgraderPodStates",
                "fields": [
                  {
                    "id": 1,
                    "name": "states",
                    "type": "UpgraderPodState",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "UpgradeCheckInResponseDetails",
            "messages": [
              {
                "name": "NoUpgradeInProgress"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SensorUpgradeControlService",
            "rpcs": [
              {
                "name": "UpgradeCheckInFromUpgrader",
                "in_type": "UpgradeCheckInFromUpgraderRequest",
                "out_type": "UpgradeCheckInFromUpgraderResponse"
              },
              {
                "name": "UpgradeCheckInFromSensor",
                "in_type": "UpgradeCheckInFromSensorRequest",
                "out_type": "google.protobuf.Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/empty.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:central:/:telemetry.proto",
      "def": {
        "enums": [
          {
            "name": "PullTelemetryDataRequest.TelemetryDataType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "KUBERNETES_INFO",
                "integer": 1
              },
              {
                "name": "CLUSTER_INFO",
                "integer": 2
              },
              {
                "name": "METRICS",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CancelPullTelemetryDataRequest",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "PullTelemetryDataRequest",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "data_type",
                "type": "TelemetryDataType"
              },
              {
                "id": 3,
                "name": "timeout_ms",
                "type": "int64"
              },
              {
                "id": 4,
                "name": "since",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "TelemetryResponsePayload",
            "fields": [
              {
                "id": 1,
                "name": "end_of_stream",
                "type": "EndOfStream"
              },
              {
                "id": 2,
                "name": "kubernetes_info",
                "type": "KubernetesInfo"
              },
              {
                "id": 3,
                "name": "cluster_info",
                "type": "ClusterInfo"
              },
              {
                "id": 4,
                "name": "metrics_info",
                "type": "KubernetesInfo"
              }
            ],
            "messages": [
              {
                "name": "EndOfStream",
                "fields": [
                  {
                    "id": 1,
                    "name": "error_message",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "KubernetesInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "files",
                    "type": "File",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "File",
                    "fields": [
                      {
                        "id": 1,
                        "name": "path",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "contents",
                        "type": "bytes"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ClusterInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "chunk",
                    "type": "bytes"
                  }
                ]
              }
            ]
          },
          {
            "name": "PullTelemetryDataResponse",
            "fields": [
              {
                "id": 1,
                "name": "request_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "payload",
                "type": "TelemetryResponsePayload"
              }
            ]
          },
          {
            "name": "TelemetryConfig",
            "fields": [
              {
                "id": 1,
                "name": "user_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 3,
                "name": "storage_key_v1",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "central"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:compliance:/:compliance_data.proto",
      "def": {
        "messages": [
          {
            "name": "GZIPDataChunk",
            "fields": [
              {
                "id": 1,
                "name": "gzip",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "File",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "user",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "user_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "group",
                "type": "uint32"
              },
              {
                "id": 5,
                "name": "group_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "permissions",
                "type": "uint32"
              },
              {
                "id": 7,
                "name": "content",
                "type": "bytes"
              },
              {
                "id": 8,
                "name": "is_dir",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "children",
                "type": "File",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CommandLine",
            "fields": [
              {
                "id": 1,
                "name": "process",
                "type": "string"
              },
              {
                "id": 2,
                "name": "args",
                "type": "Args",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Args",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "file",
                    "type": "File"
                  }
                ]
              }
            ]
          },
          {
            "name": "InsecureRegistriesConfig",
            "fields": [
              {
                "id": 1,
                "name": "insecure_registries",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "insecure_cidrs",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ContainerRuntimeInfo",
            "fields": [
              {
                "id": 1,
                "name": "insecure_registries",
                "type": "InsecureRegistriesConfig"
              }
            ]
          },
          {
            "name": "ComplianceStandardResult",
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "node_check_results",
                  "type": "storage.ComplianceResultValue"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "cluster_check_results",
                  "type": "storage.ComplianceResultValue"
                }
              }
            ]
          },
          {
            "name": "ComplianceReturn",
            "fields": [
              {
                "id": 1,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scrape_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "docker_data",
                "type": "GZIPDataChunk"
              },
              {
                "id": 9,
                "name": "container_runtime_info",
                "type": "ContainerRuntimeInfo"
              },
              {
                "id": 7,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "evidence",
                "type": "GZIPDataChunk"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "command_lines",
                  "type": "CommandLine"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "files",
                  "type": "File"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "systemd_files",
                  "type": "File"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/compliance.proto"
          }
        ],
        "package": {
          "name": "compliance"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:sensor:/:admission_control.proto",
      "def": {
        "messages": [
          {
            "name": "AdmissionControlSettings",
            "fields": [
              {
                "id": 1,
                "name": "cluster_config",
                "type": "storage.DynamicClusterConfig"
              },
              {
                "id": 2,
                "name": "enforced_deploy_time_policies",
                "type": "storage.PolicyList"
              },
              {
                "id": 3,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "cache_version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "central_endpoint",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "runtime_policies",
                "type": "storage.PolicyList"
              },
              {
                "id": 8,
                "name": "notifier_sync",
                "type": "central.NotifierSync"
              }
            ]
          },
          {
            "name": "AdmissionControlAlerts",
            "fields": [
              {
                "id": 1,
                "name": "alert_results",
                "type": "central.AlertResults",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AdmCtrlUpdateResourceRequest",
            "fields": [
              {
                "id": 1,
                "name": "action",
                "type": "central.ResourceAction"
              },
              {
                "id": 2,
                "name": "deployment",
                "type": "storage.Deployment"
              },
              {
                "id": 3,
                "name": "pod",
                "type": "storage.Pod"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "storage.NamespaceMetadata"
              },
              {
                "id": 5,
                "name": "synced",
                "type": "ResourcesSynced"
              }
            ],
            "messages": [
              {
                "name": "ResourcesSynced"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          },
          {
            "path": "storage/namespace_metadata.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "internalapi/central/secured_cluster_notifier.proto"
          },
          {
            "path": "internalapi/central/sensor_events.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:sensor:/:admission_control_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "MsgFromAdmissionControl"
          },
          {
            "name": "MsgToAdmissionControl",
            "fields": [
              {
                "id": 1,
                "name": "settings_push",
                "type": "AdmissionControlSettings"
              },
              {
                "id": 2,
                "name": "update_resource_request",
                "type": "AdmCtrlUpdateResourceRequest"
              },
              {
                "id": 3,
                "name": "test_notifier_request",
                "type": "central.TestNotifierRequest"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "AdmissionControlManagementService",
            "rpcs": [
              {
                "name": "Communicate",
                "in_type": "MsgFromAdmissionControl",
                "out_type": "MsgToAdmissionControl",
                "in_streamed": true,
                "out_streamed": true
              },
              {
                "name": "PolicyAlerts",
                "in_type": "AdmissionControlAlerts",
                "out_type": "google.protobuf.Empty"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/sensor/admission_control.proto"
          },
          {
            "path": "internalapi/central/secured_cluster_notifier.proto"
          },
          {
            "path": "google/protobuf/empty.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:sensor:/:cert_distribution_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "FetchCertificateRequest",
            "fields": [
              {
                "id": 1,
                "name": "service_type",
                "type": "storage.ServiceType"
              },
              {
                "id": 2,
                "name": "service_account_token",
                "type": "string"
              }
            ]
          },
          {
            "name": "FetchCertificateResponse",
            "fields": [
              {
                "id": 1,
                "name": "pem_cert",
                "type": "string"
              },
              {
                "id": 2,
                "name": "pem_key",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "CertDistributionService",
            "rpcs": [
              {
                "name": "FetchCertificate",
                "in_type": "FetchCertificateRequest",
                "out_type": "FetchCertificateResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/service_identity.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:sensor:/:collector.proto",
      "def": {
        "messages": [
          {
            "name": "CollectorRegisterRequest",
            "fields": [
              {
                "id": 1,
                "name": "hostname",
                "type": "string"
              },
              {
                "id": 2,
                "name": "instance_id",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:sensor:/:compliance_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "GetScrapeConfigRequest",
            "fields": [
              {
                "id": 1,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scrape_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "AuditEvents",
            "fields": [
              {
                "id": 1,
                "name": "events",
                "type": "storage.KubernetesEvent",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MsgFromCompliance",
            "fields": [
              {
                "id": 1,
                "name": "node",
                "type": "string"
              },
              {
                "id": 2,
                "name": "return",
                "type": "compliance.ComplianceReturn"
              },
              {
                "id": 3,
                "name": "audit_events",
                "type": "AuditEvents"
              },
              {
                "id": 4,
                "name": "node_inventory",
                "type": "storage.NodeInventory"
              }
            ]
          },
          {
            "name": "MsgToCompliance",
            "fields": [
              {
                "id": 1,
                "name": "config",
                "type": "ScrapeConfig"
              },
              {
                "id": 2,
                "name": "trigger",
                "type": "TriggerRun"
              },
              {
                "id": 3,
                "name": "audit_log_collection_request",
                "type": "AuditLogCollectionRequest"
              }
            ],
            "messages": [
              {
                "name": "ScrapeConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "container_runtime",
                    "type": "storage.ContainerRuntime"
                  },
                  {
                    "id": 2,
                    "name": "is_master_node",
                    "type": "bool"
                  }
                ]
              },
              {
                "name": "TriggerRun",
                "fields": [
                  {
                    "id": 1,
                    "name": "scrape_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "standard_ids",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "AuditLogCollectionRequest",
                "fields": [
                  {
                    "id": 1,
                    "name": "start_req",
                    "type": "StartRequest"
                  },
                  {
                    "id": 2,
                    "name": "stop_req",
                    "type": "StopRequest"
                  }
                ],
                "messages": [
                  {
                    "name": "StartRequest",
                    "fields": [
                      {
                        "id": 1,
                        "name": "cluster_id",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "collect_start_state",
                        "type": "storage.AuditLogFileState"
                      }
                    ]
                  },
                  {
                    "name": "StopRequest"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ComplianceService",
            "rpcs": [
              {
                "name": "Communicate",
                "in_type": "MsgFromCompliance",
                "out_type": "MsgToCompliance",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/compliance/compliance_data.proto"
          },
          {
            "path": "storage/cluster.proto"
          },
          {
            "path": "storage/container_runtime.proto"
          },
          {
            "path": "storage/kube_event.proto"
          },
          {
            "path": "storage/node.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:sensor:/:deployment_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "GetDeploymentForPodRequest",
            "fields": [
              {
                "id": 1,
                "name": "pod_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "DeploymentService",
            "rpcs": [
              {
                "name": "GetDeploymentForPod",
                "in_type": "GetDeploymentForPodRequest",
                "out_type": "storage.Deployment"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/deployment.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:sensor:/:image_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "GetImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.ContainerImage"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 2,
                "name": "scan_inline",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetImageResponse",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "storage.Image"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImageService",
            "rpcs": [
              {
                "name": "GetImage",
                "in_type": "GetImageRequest",
                "out_type": "GetImageResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:sensor:/:network_connection_info.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkConnectionInfo",
            "fields": [
              {
                "id": 1,
                "name": "updated_connections",
                "type": "NetworkConnection",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "updated_endpoints",
                "type": "NetworkEndpoint",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NetworkConnection",
            "fields": [
              {
                "id": 1,
                "name": "socket_family",
                "type": "SocketFamily"
              },
              {
                "id": 2,
                "name": "local_address",
                "type": "NetworkAddress"
              },
              {
                "id": 3,
                "name": "remote_address",
                "type": "NetworkAddress"
              },
              {
                "id": 4,
                "name": "protocol",
                "type": "storage.L4Protocol"
              },
              {
                "id": 5,
                "name": "role",
                "type": "ClientServerRole"
              },
              {
                "id": 6,
                "name": "container_id",
                "type": "string"
              },
              {
                "id": 11,
                "name": "close_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NetworkEndpoint",
            "fields": [
              {
                "id": 1,
                "name": "socket_family",
                "type": "SocketFamily"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "storage.L4Protocol"
              },
              {
                "id": 3,
                "name": "listen_address",
                "type": "NetworkAddress"
              },
              {
                "id": 4,
                "name": "container_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "close_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "originator",
                "type": "storage.NetworkProcessUniqueKey"
              }
            ]
          },
          {
            "name": "NetworkAddress",
            "fields": [
              {
                "id": 1,
                "name": "address_data",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "ip_network",
                "type": "bytes"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "internalapi/sensor/network_enums.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:sensor:/:network_connection_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkConnectionInfoMessage",
            "fields": [
              {
                "id": 1,
                "name": "register",
                "type": "CollectorRegisterRequest"
              },
              {
                "id": 2,
                "name": "info",
                "type": "NetworkConnectionInfo"
              }
            ]
          },
          {
            "name": "NetworkFlowsControlMessage",
            "fields": [
              {
                "id": 1,
                "name": "public_ip_addresses",
                "type": "IPAddressList"
              },
              {
                "id": 2,
                "name": "ip_networks",
                "type": "IPNetworkList"
              }
            ]
          },
          {
            "name": "IPAddressList",
            "fields": [
              {
                "id": 1,
                "name": "ipv4_addresses",
                "type": "fixed32",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "ipv6_addresses",
                "type": "fixed64",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "IPNetworkList",
            "fields": [
              {
                "id": 1,
                "name": "ipv4_networks",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "ipv6_networks",
                "type": "bytes"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NetworkConnectionInfoService",
            "rpcs": [
              {
                "name": "PushNetworkConnectionInfo",
                "in_type": "NetworkConnectionInfoMessage",
                "out_type": "NetworkFlowsControlMessage",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/sensor/collector.proto"
          },
          {
            "path": "internalapi/sensor/network_connection_info.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:sensor:/:network_enums.proto",
      "def": {
        "enums": [
          {
            "name": "ClientServerRole",
            "enum_fields": [
              {
                "name": "ROLE_UNKNOWN"
              },
              {
                "name": "ROLE_SERVER",
                "integer": 1
              },
              {
                "name": "ROLE_CLIENT",
                "integer": 2
              }
            ]
          },
          {
            "name": "SocketFamily",
            "enum_fields": [
              {
                "name": "SOCKET_FAMILY_UNKNOWN"
              },
              {
                "name": "SOCKET_FAMILY_IPV4",
                "integer": 1
              },
              {
                "name": "SOCKET_FAMILY_IPV6",
                "integer": 2
              }
            ]
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:sensor:/:signal_iservice.proto",
      "def": {
        "messages": [
          {
            "name": "SignalStreamMessage",
            "fields": [
              {
                "id": 1,
                "name": "collector_register_request",
                "type": "CollectorRegisterRequest"
              },
              {
                "id": 2,
                "name": "signal",
                "type": "v1.Signal"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "SignalService",
            "rpcs": [
              {
                "name": "PushSignals",
                "in_type": "SignalStreamMessage",
                "out_type": "v1.Empty",
                "in_streamed": true,
                "out_streamed": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "internalapi/sensor/collector.proto"
          },
          {
            "path": "api/v1/signal.proto"
          },
          {
            "path": "api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "sensor"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:internalapi:/:wrapper:/:splunk_alert.proto",
      "def": {
        "messages": [
          {
            "name": "SplunkEvent",
            "fields": [
              {
                "id": 1,
                "name": "event",
                "type": "google.protobuf.Any"
              },
              {
                "id": 2,
                "name": "source",
                "type": "string"
              },
              {
                "id": 3,
                "name": "sourcetype",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "wrapper"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:scanner:/:api:/:v1:/:component.proto",
      "def": {
        "enums": [
          {
            "name": "SourceType",
            "enum_fields": [
              {
                "name": "UNSET_SOURCE_TYPE"
              },
              {
                "name": "JAVA",
                "integer": 1
              },
              {
                "name": "PYTHON",
                "integer": 2
              },
              {
                "name": "NPM",
                "integer": 3
              },
              {
                "name": "GEM",
                "integer": 4
              },
              {
                "name": "DOTNETCORERUNTIME",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Components",
            "fields": [
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 1,
                "name": "os_components",
                "type": "OSComponent",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "rhel_components",
                "type": "RHELComponent",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "language_components",
                "type": "LanguageComponent",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "rhel_content_sets",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "OSComponent",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "added_by",
                "type": "string"
              },
              {
                "id": 5,
                "name": "executables",
                "type": "Executable",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RHELComponent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "arch",
                "type": "string"
              },
              {
                "id": 6,
                "name": "module",
                "type": "string"
              },
              {
                "id": 7,
                "name": "cpes",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "added_by",
                "type": "string"
              },
              {
                "id": 9,
                "name": "executables",
                "type": "Executable",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LanguageComponent",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "SourceType"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "location",
                "type": "string"
              },
              {
                "id": 5,
                "name": "java",
                "type": "JavaComponent"
              },
              {
                "id": 6,
                "name": "python",
                "type": "PythonComponent"
              },
              {
                "id": 7,
                "name": "added_by",
                "type": "string"
              }
            ]
          },
          {
            "name": "JavaComponent",
            "fields": [
              {
                "id": 1,
                "name": "implementation_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "maven_version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "origins",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "specification_version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "bundle_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "PythonComponent",
            "fields": [
              {
                "id": 1,
                "name": "homepage",
                "type": "string"
              },
              {
                "id": 2,
                "name": "author_email",
                "type": "string"
              },
              {
                "id": 3,
                "name": "download_url",
                "type": "string"
              },
              {
                "id": 4,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 5,
                "name": "description",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "scanner/api/v1/vulnerability.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:scanner:/:api:/:v1:/:empty.proto",
      "def": {
        "messages": [
          {
            "name": "Empty"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:scanner:/:api:/:v1:/:image.proto",
      "def": {
        "messages": [
          {
            "name": "Image",
            "fields": [
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 1,
                "name": "features",
                "type": "Feature",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "scanner/api/v1/vulnerability.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:scanner:/:api:/:v1:/:image_scan_service.proto",
      "def": {
        "enums": [
          {
            "name": "ScanStatus",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "ANALYZING",
                "integer": 1
              },
              {
                "name": "FAILED",
                "integer": 2
              },
              {
                "name": "SUCCEEDED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ScanImageRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "string"
              },
              {
                "id": 2,
                "name": "registry",
                "type": "RegistryData"
              },
              {
                "id": 3,
                "name": "uncertifiedRHEL",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ScanImageResponse",
            "fields": [
              {
                "id": 3,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "status",
                "type": "ScanStatus"
              },
              {
                "id": 2,
                "name": "image",
                "type": "ImageSpec"
              }
            ]
          },
          {
            "name": "GetImageScanRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_spec",
                "type": "ImageSpec"
              },
              {
                "id": 2,
                "name": "uncertifiedRHEL",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetImageScanResponse",
            "fields": [
              {
                "id": 4,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "status",
                "type": "ScanStatus"
              },
              {
                "id": 2,
                "name": "image",
                "type": "Image"
              },
              {
                "id": 3,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetImageComponentsRequest",
            "fields": [
              {
                "id": 1,
                "name": "image",
                "type": "string"
              },
              {
                "id": 2,
                "name": "registry",
                "type": "RegistryData"
              }
            ]
          },
          {
            "name": "GetImageComponentsResponse",
            "fields": [
              {
                "id": 4,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "status",
                "type": "ScanStatus"
              },
              {
                "id": 2,
                "name": "components",
                "type": "Components"
              },
              {
                "id": 3,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetImageVulnerabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "components",
                "type": "Components"
              },
              {
                "id": 2,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetImageVulnerabilitiesResponse",
            "fields": [
              {
                "id": 3,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "status",
                "type": "ScanStatus"
              },
              {
                "id": 2,
                "name": "image",
                "type": "Image"
              }
            ]
          },
          {
            "name": "GetLanguageLevelComponentsRequest",
            "fields": [
              {
                "id": 1,
                "name": "image_spec",
                "type": "ImageSpec"
              },
              {
                "id": 2,
                "name": "uncertifiedRHEL",
                "type": "bool"
              }
            ]
          },
          {
            "name": "GetLanguageLevelComponentsResponse",
            "fields": [
              {
                "id": 2,
                "name": "scanner_version",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "layer_to_components",
                  "type": "LanguageLevelComponents"
                }
              }
            ]
          },
          {
            "name": "ImageSpec",
            "fields": [
              {
                "id": 1,
                "name": "digest",
                "type": "string"
              },
              {
                "id": 2,
                "name": "image",
                "type": "string"
              }
            ]
          },
          {
            "name": "RegistryData",
            "fields": [
              {
                "id": 1,
                "name": "url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "username",
                "type": "string"
              },
              {
                "id": 3,
                "name": "password",
                "type": "string"
              },
              {
                "id": 4,
                "name": "insecure",
                "type": "bool"
              }
            ]
          },
          {
            "name": "LanguageLevelComponents",
            "fields": [
              {
                "id": 1,
                "name": "components",
                "type": "LanguageLevelComponent",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "LanguageLevelComponent",
            "fields": [
              {
                "id": 1,
                "name": "source_type",
                "type": "SourceType"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "location",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "ImageScanService",
            "rpcs": [
              {
                "name": "ScanImage",
                "in_type": "ScanImageRequest",
                "out_type": "ScanImageResponse"
              },
              {
                "name": "GetImageScan",
                "in_type": "GetImageScanRequest",
                "out_type": "GetImageScanResponse"
              },
              {
                "name": "GetImageComponents",
                "in_type": "GetImageComponentsRequest",
                "out_type": "GetImageComponentsResponse"
              },
              {
                "name": "GetImageVulnerabilities",
                "in_type": "GetImageVulnerabilitiesRequest",
                "out_type": "GetImageVulnerabilitiesResponse"
              },
              {
                "name": "GetLanguageLevelComponents",
                "in_type": "GetLanguageLevelComponentsRequest",
                "out_type": "GetLanguageLevelComponentsResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "scanner/api/v1/component.proto"
          },
          {
            "path": "scanner/api/v1/image.proto"
          },
          {
            "path": "scanner/api/v1/note.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:scanner:/:api:/:v1:/:metadata_service.proto",
      "def": {
        "messages": [
          {
            "name": "VulnDefsMetadata",
            "fields": [
              {
                "id": 1,
                "name": "last_updated_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "VulnDefsService",
            "rpcs": [
              {
                "name": "GetVulnDefsMetadata",
                "in_type": "Empty",
                "out_type": "VulnDefsMetadata"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "scanner/api/v1/empty.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:scanner:/:api:/:v1:/:node_inventory_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetNodeInventoryResponse",
            "fields": [
              {
                "id": 1,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "components",
                "type": "Components"
              },
              {
                "id": 3,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetNodeInventoryRequest"
          }
        ],
        "services": [
          {
            "name": "NodeInventoryService",
            "rpcs": [
              {
                "name": "GetNodeInventory",
                "in_type": "GetNodeInventoryRequest",
                "out_type": "GetNodeInventoryResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "scanner/api/v1/note.proto"
          },
          {
            "path": "scanner/api/v1/component.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:scanner:/:api:/:v1:/:node_scan_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetNodeVulnerabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "os_image",
                "type": "string"
              },
              {
                "id": 2,
                "name": "kernel_version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "kubelet_version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "kubeproxy_version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "runtime",
                "type": "ContainerRuntime"
              },
              {
                "id": 6,
                "name": "components",
                "type": "Components"
              },
              {
                "id": 7,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ContainerRuntime",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "version",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "GetNodeVulnerabilitiesResponse",
            "fields": [
              {
                "id": 7,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 6,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 1,
                "name": "kernel_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "kubelet_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "kubeproxy_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "runtime_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "kernel_component",
                "type": "KernelComponent"
              },
              {
                "id": 8,
                "name": "node_notes",
                "type": "NodeNote",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "features",
                "type": "Feature",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "KernelComponent",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "version",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "services": [
          {
            "name": "NodeScanService",
            "rpcs": [
              {
                "name": "GetNodeVulnerabilities",
                "in_type": "GetNodeVulnerabilitiesRequest",
                "out_type": "GetNodeVulnerabilitiesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "scanner/api/v1/note.proto"
          },
          {
            "path": "scanner/api/v1/vulnerability.proto"
          },
          {
            "path": "scanner/api/v1/component.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:scanner:/:api:/:v1:/:note.proto",
      "def": {
        "enums": [
          {
            "name": "Note",
            "enum_fields": [
              {
                "name": "OS_CVES_UNAVAILABLE"
              },
              {
                "name": "OS_CVES_STALE",
                "integer": 1
              },
              {
                "name": "LANGUAGE_CVES_UNAVAILABLE",
                "integer": 2
              },
              {
                "name": "CERTIFIED_RHEL_SCAN_UNAVAILABLE",
                "integer": 3
              }
            ]
          },
          {
            "name": "NodeNote",
            "enum_fields": [
              {
                "name": "NODE_UNSUPPORTED"
              },
              {
                "name": "NODE_KERNEL_UNSUPPORTED",
                "integer": 1
              },
              {
                "name": "NODE_CERTIFIED_RHEL_CVES_UNAVAILABLE",
                "integer": 2
              }
            ]
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:scanner:/:api:/:v1:/:orchestrator_scan_service.proto",
      "def": {
        "messages": [
          {
            "name": "GetKubeVulnerabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "kubernetes_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetKubeVulnerabilitiesResponse",
            "fields": [
              {
                "id": 6,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "aggregator_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "apiserver_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "controller_manager_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "scheduler_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "generic_vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetIstioVulnerabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "istio_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetIstioVulnerabilitiesResponse",
            "fields": [
              {
                "id": 1,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "GetOpenShiftVulnerabilitiesRequest",
            "fields": [
              {
                "id": 1,
                "name": "openShift_version",
                "type": "string"
              }
            ]
          },
          {
            "name": "GetOpenShiftVulnerabilitiesResponse",
            "fields": [
              {
                "id": 2,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              }
            ]
          }
        ],
        "services": [
          {
            "name": "OrchestratorScanService",
            "rpcs": [
              {
                "name": "GetKubeVulnerabilities",
                "in_type": "GetKubeVulnerabilitiesRequest",
                "out_type": "GetKubeVulnerabilitiesResponse"
              },
              {
                "name": "GetOpenShiftVulnerabilities",
                "in_type": "GetOpenShiftVulnerabilitiesRequest",
                "out_type": "GetOpenShiftVulnerabilitiesResponse"
              },
              {
                "name": "GetIstioVulnerabilities",
                "in_type": "GetIstioVulnerabilitiesRequest",
                "out_type": "GetIstioVulnerabilitiesResponse"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "scanner/api/v1/vulnerability.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:scanner:/:api:/:v1:/:ping_service.proto",
      "def": {
        "messages": [
          {
            "name": "PongMessage",
            "fields": [
              {
                "id": 2,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "status",
                "type": "string"
              }
            ]
          }
        ],
        "services": [
          {
            "name": "PingService",
            "rpcs": [
              {
                "name": "Ping",
                "in_type": "Empty",
                "out_type": "PongMessage"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/annotations.proto"
          },
          {
            "path": "scanner/api/v1/empty.proto"
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:scanner:/:api:/:v1:/:vulnerability.proto",
      "def": {
        "messages": [
          {
            "name": "Feature",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "feature_type",
                "type": "string"
              },
              {
                "id": 5,
                "name": "added_by_layer",
                "type": "string"
              },
              {
                "id": 6,
                "name": "location",
                "type": "string"
              },
              {
                "id": 3,
                "name": "vulnerabilities",
                "type": "Vulnerability",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 7,
                "name": "provided_executables",
                "type": "Executable",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Executable",
            "fields": [
              {
                "id": 1,
                "name": "path",
                "type": "string"
              },
              {
                "id": 2,
                "name": "required_features",
                "type": "FeatureNameVersion",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "FeatureNameVersion",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              }
            ]
          },
          {
            "name": "Vulnerability",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "description",
                "type": "string"
              },
              {
                "id": 3,
                "name": "link",
                "type": "string"
              },
              {
                "id": 6,
                "name": "metadata_v2",
                "type": "Metadata"
              },
              {
                "id": 5,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 7,
                "name": "severity",
                "type": "string"
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "Metadata",
            "fields": [
              {
                "id": 1,
                "name": "published_date_time",
                "type": "string"
              },
              {
                "id": 2,
                "name": "last_modified_date_time",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cvss_v2",
                "type": "CVSSMetadata"
              },
              {
                "id": 4,
                "name": "cvss_v3",
                "type": "CVSSMetadata"
              }
            ]
          },
          {
            "name": "CVSSMetadata",
            "fields": [
              {
                "id": 1,
                "name": "vector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "score",
                "type": "float"
              },
              {
                "id": 3,
                "name": "exploitability_score",
                "type": "float"
              },
              {
                "id": 4,
                "name": "impact_score",
                "type": "float"
              }
            ]
          }
        ],
        "package": {
          "name": "scannerV1"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:shared:/:license:/:license.proto",
      "def": {
        "messages": [
          {
            "name": "License",
            "fields": [
              {
                "id": 1,
                "name": "metadata",
                "type": "Metadata"
              },
              {
                "id": 2,
                "name": "support_contact",
                "type": "Contact"
              },
              {
                "id": 3,
                "name": "restrictions",
                "type": "Restrictions"
              }
            ],
            "messages": [
              {
                "name": "Contact",
                "fields": [
                  {
                    "id": 1,
                    "name": "phone",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "email",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "url",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Metadata",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "signing_key_id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "issue_date",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 4,
                    "name": "licensed_for_id",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "licensed_for_name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Restrictions",
                "fields": [
                  {
                    "id": 1,
                    "name": "not_valid_before",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 2,
                    "name": "not_valid_after",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 3,
                    "name": "enforcement_url",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "allow_offline",
                    "type": "bool"
                  },
                  {
                    "id": 5,
                    "name": "max_nodes",
                    "type": "int32"
                  },
                  {
                    "id": 6,
                    "name": "no_node_restriction",
                    "type": "bool"
                  },
                  {
                    "id": 7,
                    "name": "build_flavors",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 8,
                    "name": "no_build_flavor_restriction",
                    "type": "bool"
                  },
                  {
                    "id": 9,
                    "name": "deployment_environments",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 10,
                    "name": "no_deployment_environment_restriction",
                    "type": "bool"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "license"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:active_component.proto",
      "def": {
        "messages": [
          {
            "name": "ActiveComponent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "component_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "active_contexts_slice",
                "type": "ActiveContext",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "DEPRECATED_active_contexts",
                  "type": "ActiveContext"
                }
              }
            ],
            "messages": [
              {
                "name": "ActiveContext",
                "fields": [
                  {
                    "id": 1,
                    "name": "container_name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "image_id",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:alert.proto",
      "def": {
        "enums": [
          {
            "name": "Resource.ResourceType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "SECRETS",
                "integer": 1
              },
              {
                "name": "CONFIGMAPS",
                "integer": 2
              }
            ]
          },
          {
            "name": "Violation.Type",
            "enum_fields": [
              {
                "name": "GENERIC"
              },
              {
                "name": "K8S_EVENT",
                "integer": 1
              },
              {
                "name": "NETWORK_FLOW",
                "integer": 2
              },
              {
                "name": "NETWORK_POLICY",
                "integer": 3
              }
            ]
          },
          {
            "name": "ListAlert.ResourceType",
            "enum_fields": [
              {
                "name": "DEPLOYMENT"
              },
              {
                "name": "SECRETS",
                "integer": 1
              },
              {
                "name": "CONFIGMAPS",
                "integer": 2
              }
            ]
          },
          {
            "name": "ViolationState",
            "enum_fields": [
              {
                "name": "ACTIVE"
              },
              {
                "name": "SNOOZED",
                "integer": 1
              },
              {
                "name": "RESOLVED",
                "integer": 2
              },
              {
                "name": "ATTEMPTED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Alert",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "policy",
                "type": "Policy"
              },
              {
                "id": 3,
                "name": "lifecycle_stage",
                "type": "LifecycleStage"
              },
              {
                "id": 18,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 19,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 20,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 21,
                "name": "namespace_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "deployment",
                "type": "Deployment"
              },
              {
                "id": 15,
                "name": "image",
                "type": "ContainerImage"
              },
              {
                "id": 16,
                "name": "resource",
                "type": "Resource"
              },
              {
                "id": 5,
                "name": "violations",
                "type": "Violation",
                "is_repeated": true
              },
              {
                "id": 13,
                "name": "process_violation",
                "type": "ProcessViolation"
              },
              {
                "id": 6,
                "name": "enforcement",
                "type": "Enforcement"
              },
              {
                "id": 7,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "first_occurred",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 17,
                "name": "resolved_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 11,
                "name": "state",
                "type": "ViolationState"
              },
              {
                "id": 12,
                "name": "snooze_till",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "reserved_ids": [
              14
            ],
            "messages": [
              {
                "name": "Deployment",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 16,
                    "name": "namespace_id",
                    "type": "string"
                  },
                  {
                    "id": 9,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 10,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 11,
                    "name": "containers",
                    "type": "Container",
                    "is_repeated": true
                  },
                  {
                    "id": 15,
                    "name": "inactive",
                    "type": "bool"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 7,
                      "name": "labels",
                      "type": "string"
                    }
                  },
                  {
                    "key_type": "string",
                    "field": {
                      "id": 14,
                      "name": "annotations",
                      "type": "string"
                    }
                  }
                ],
                "messages": [
                  {
                    "name": "Container",
                    "fields": [
                      {
                        "id": 3,
                        "name": "image",
                        "type": "ContainerImage"
                      },
                      {
                        "id": 10,
                        "name": "name",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Resource",
                "fields": [
                  {
                    "id": 1,
                    "name": "resource_type",
                    "type": "ResourceType"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 6,
                    "name": "namespace_id",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Violation",
                "fields": [
                  {
                    "id": 1,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "key_value_attrs",
                    "type": "KeyValueAttrs"
                  },
                  {
                    "id": 7,
                    "name": "network_flow_info",
                    "type": "NetworkFlowInfo"
                  },
                  {
                    "id": 5,
                    "name": "type",
                    "type": "Type"
                  },
                  {
                    "id": 6,
                    "name": "time",
                    "type": "google.protobuf.Timestamp"
                  }
                ],
                "reserved_ids": [
                  2,
                  3
                ],
                "messages": [
                  {
                    "name": "KeyValueAttrs",
                    "fields": [
                      {
                        "id": 1,
                        "name": "attrs",
                        "type": "KeyValueAttr",
                        "is_repeated": true
                      }
                    ],
                    "messages": [
                      {
                        "name": "KeyValueAttr",
                        "fields": [
                          {
                            "id": 1,
                            "name": "key",
                            "type": "string"
                          },
                          {
                            "id": 2,
                            "name": "value",
                            "type": "string"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "NetworkFlowInfo",
                    "fields": [
                      {
                        "id": 1,
                        "name": "protocol",
                        "type": "storage.L4Protocol"
                      },
                      {
                        "id": 2,
                        "name": "source",
                        "type": "Entity"
                      },
                      {
                        "id": 3,
                        "name": "destination",
                        "type": "Entity"
                      }
                    ],
                    "messages": [
                      {
                        "name": "Entity",
                        "fields": [
                          {
                            "id": 1,
                            "name": "name",
                            "type": "string"
                          },
                          {
                            "id": 2,
                            "name": "entity_type",
                            "type": "storage.NetworkEntityInfo.Type"
                          },
                          {
                            "id": 3,
                            "name": "deployment_namespace",
                            "type": "string"
                          },
                          {
                            "id": 5,
                            "name": "deployment_type",
                            "type": "string"
                          },
                          {
                            "id": 6,
                            "name": "port",
                            "type": "int32"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ProcessViolation",
                "fields": [
                  {
                    "id": 1,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "processes",
                    "type": "ProcessIndicator",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "Enforcement",
                "fields": [
                  {
                    "id": 1,
                    "name": "action",
                    "type": "storage.EnforcementAction"
                  },
                  {
                    "id": 2,
                    "name": "message",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListAlert",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "lifecycle_stage",
                "type": "LifecycleStage"
              },
              {
                "id": 3,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "policy",
                "type": "ListAlertPolicy"
              },
              {
                "id": 6,
                "name": "state",
                "type": "ViolationState"
              },
              {
                "id": 7,
                "name": "enforcement_count",
                "type": "int32"
              },
              {
                "id": 9,
                "name": "enforcement_action",
                "type": "storage.EnforcementAction"
              },
              {
                "id": 10,
                "name": "common_entity_info",
                "type": "CommonEntityInfo"
              },
              {
                "id": 5,
                "name": "deployment",
                "type": "ListAlertDeployment"
              },
              {
                "id": 11,
                "name": "resource",
                "type": "ResourceEntity"
              }
            ],
            "reserved_ids": [
              8
            ],
            "messages": [
              {
                "name": "CommonEntityInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "namespace_id",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "resource_type",
                    "type": "ResourceType"
                  }
                ]
              },
              {
                "name": "ResourceEntity",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListAlertPolicy",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "severity",
                "type": "Severity"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "categories",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "developer_internal_fields",
                "type": "DevFields"
              }
            ],
            "messages": [
              {
                "name": "DevFields",
                "fields": [
                  {
                    "id": 6,
                    "name": "SORT_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListAlertDeployment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "inactive",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "namespace_id",
                "type": "string"
              }
            ],
            "reserved_ids": [
              3
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/policy.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:api_token.proto",
      "def": {
        "messages": [
          {
            "name": "TokenMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 7,
                "name": "roles",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "issued_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "expiration",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "revoked",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "role",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:auth_provider.proto",
      "def": {
        "messages": [
          {
            "name": "AuthProvider",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "ui_endpoint",
                "type": "string"
              },
              {
                "id": 5,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "login_url",
                "type": "string"
              },
              {
                "id": 8,
                "name": "validated",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "extra_ui_endpoints",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "active",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "required_attributes",
                "type": "RequiredAttribute",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "traits",
                "type": "Traits"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "config",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 13,
                  "name": "claim_mappings",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "RequiredAttribute",
                "fields": [
                  {
                    "id": 1,
                    "name": "attribute_key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "attribute_value",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/traits.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:cluster.proto",
      "def": {
        "enums": [
          {
            "name": "ClusterType",
            "enum_fields": [
              {
                "name": "GENERIC_CLUSTER"
              },
              {
                "name": "KUBERNETES_CLUSTER",
                "integer": 1
              },
              {
                "name": "OPENSHIFT_CLUSTER",
                "integer": 2
              },
              {
                "name": "OPENSHIFT4_CLUSTER",
                "integer": 5
              }
            ],
            "reserved_ids": [
              3,
              4
            ]
          },
          {
            "name": "CollectionMethod",
            "enum_fields": [
              {
                "name": "UNSET_COLLECTION"
              },
              {
                "name": "NO_COLLECTION",
                "integer": 1
              },
              {
                "name": "KERNEL_MODULE",
                "integer": 2
              },
              {
                "name": "EBPF",
                "integer": 3
              },
              {
                "name": "CORE_BPF",
                "integer": 4
              }
            ]
          },
          {
            "name": "ManagerType",
            "enum_fields": [
              {
                "name": "MANAGER_TYPE_UNKNOWN"
              },
              {
                "name": "MANAGER_TYPE_MANUAL",
                "integer": 1
              },
              {
                "name": "MANAGER_TYPE_HELM_CHART",
                "integer": 2
              },
              {
                "name": "MANAGER_TYPE_KUBERNETES_OPERATOR",
                "integer": 3
              }
            ]
          },
          {
            "name": "ClusterUpgradeStatus.Upgradability",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "UP_TO_DATE",
                "integer": 1
              },
              {
                "name": "MANUAL_UPGRADE_REQUIRED",
                "integer": 2
              },
              {
                "name": "AUTO_UPGRADE_POSSIBLE",
                "integer": 3
              },
              {
                "name": "SENSOR_VERSION_HIGHER",
                "integer": 4
              }
            ]
          },
          {
            "name": "UpgradeProcessStatus.UpgradeProcessType",
            "enum_fields": [
              {
                "name": "UPGRADE"
              },
              {
                "name": "CERT_ROTATION",
                "integer": 1
              }
            ]
          },
          {
            "name": "UpgradeProgress.UpgradeState",
            "enum_fields": [
              {
                "name": "UPGRADE_INITIALIZING"
              },
              {
                "name": "UPGRADER_LAUNCHING",
                "integer": 1
              },
              {
                "name": "UPGRADER_LAUNCHED",
                "integer": 2
              },
              {
                "name": "PRE_FLIGHT_CHECKS_COMPLETE",
                "integer": 3
              },
              {
                "name": "UPGRADE_OPERATIONS_DONE",
                "integer": 4
              },
              {
                "name": "UPGRADE_COMPLETE",
                "integer": 10
              },
              {
                "name": "UPGRADE_INITIALIZATION_ERROR",
                "integer": 11
              },
              {
                "name": "PRE_FLIGHT_CHECKS_FAILED",
                "integer": 12
              },
              {
                "name": "UPGRADE_ERROR_ROLLING_BACK",
                "integer": 13
              },
              {
                "name": "UPGRADE_ERROR_ROLLED_BACK",
                "integer": 14
              },
              {
                "name": "UPGRADE_ERROR_ROLLBACK_FAILED",
                "integer": 15
              },
              {
                "name": "UPGRADE_ERROR_UNKNOWN",
                "integer": 16
              },
              {
                "name": "UPGRADE_TIMED_OUT",
                "integer": 17
              }
            ]
          },
          {
            "name": "ClusterHealthStatus.HealthStatusLabel",
            "enum_fields": [
              {
                "name": "UNINITIALIZED"
              },
              {
                "name": "UNAVAILABLE",
                "integer": 1
              },
              {
                "name": "UNHEALTHY",
                "integer": 2
              },
              {
                "name": "DEGRADED",
                "integer": 3
              },
              {
                "name": "HEALTHY",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "GoogleProviderMetadata",
            "fields": [
              {
                "id": 1,
                "name": "project",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "AWSProviderMetadata",
            "fields": [
              {
                "id": 1,
                "name": "account_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "AzureProviderMetadata",
            "fields": [
              {
                "id": 1,
                "name": "subscription_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProviderMetadata",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "string"
              },
              {
                "id": 2,
                "name": "zone",
                "type": "string"
              },
              {
                "id": 3,
                "name": "google",
                "type": "GoogleProviderMetadata"
              },
              {
                "id": 4,
                "name": "aws",
                "type": "AWSProviderMetadata"
              },
              {
                "id": 5,
                "name": "azure",
                "type": "AzureProviderMetadata"
              },
              {
                "id": 15,
                "name": "verified",
                "type": "bool"
              }
            ]
          },
          {
            "name": "OrchestratorMetadata",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "openshift_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "build_date",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "api_versions",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AdmissionControllerConfig",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "timeout_seconds",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "scan_inline",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "disable_bypass",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "enforce_on_updates",
                "type": "bool"
              }
            ]
          },
          {
            "name": "TolerationsConfig",
            "fields": [
              {
                "id": 1,
                "name": "disabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "StaticClusterConfig",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "ClusterType"
              },
              {
                "id": 2,
                "name": "main_image",
                "type": "string"
              },
              {
                "id": 3,
                "name": "central_api_endpoint",
                "type": "string"
              },
              {
                "id": 4,
                "name": "collection_method",
                "type": "CollectionMethod"
              },
              {
                "id": 5,
                "name": "collector_image",
                "type": "string"
              },
              {
                "id": 6,
                "name": "admission_controller",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "admission_controller_updates",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "tolerations_config",
                "type": "TolerationsConfig"
              },
              {
                "id": 9,
                "name": "slim_collector",
                "type": "bool"
              },
              {
                "id": 10,
                "name": "admission_controller_events",
                "type": "bool"
              }
            ]
          },
          {
            "name": "DynamicClusterConfig",
            "fields": [
              {
                "id": 1,
                "name": "admission_controller_config",
                "type": "AdmissionControllerConfig"
              },
              {
                "id": 2,
                "name": "registry_override",
                "type": "string"
              },
              {
                "id": 3,
                "name": "disable_audit_logs",
                "type": "bool"
              }
            ]
          },
          {
            "name": "CompleteClusterConfig",
            "fields": [
              {
                "id": 1,
                "name": "dynamic_config",
                "type": "DynamicClusterConfig"
              },
              {
                "id": 2,
                "name": "static_config",
                "type": "StaticClusterConfig"
              },
              {
                "id": 3,
                "name": "config_fingerprint",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "cluster_labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "SensorDeploymentIdentification",
            "fields": [
              {
                "id": 1,
                "name": "system_namespace_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "default_namespace_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "app_namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "app_namespace_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "app_serviceaccount_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "k8s_node_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "Cluster",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "ClusterType"
              },
              {
                "id": 4,
                "name": "main_image",
                "type": "string"
              },
              {
                "id": 16,
                "name": "collector_image",
                "type": "string"
              },
              {
                "id": 5,
                "name": "central_api_endpoint",
                "type": "string"
              },
              {
                "id": 7,
                "name": "runtime_support",
                "type": "bool"
              },
              {
                "id": 17,
                "name": "collection_method",
                "type": "CollectionMethod"
              },
              {
                "id": 13,
                "name": "admission_controller",
                "type": "bool"
              },
              {
                "id": 21,
                "name": "admission_controller_updates",
                "type": "bool"
              },
              {
                "id": 25,
                "name": "admission_controller_events",
                "type": "bool"
              },
              {
                "id": 15,
                "name": "status",
                "type": "ClusterStatus"
              },
              {
                "id": 18,
                "name": "dynamic_config",
                "type": "DynamicClusterConfig"
              },
              {
                "id": 19,
                "name": "tolerations_config",
                "type": "TolerationsConfig"
              },
              {
                "id": 20,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 22,
                "name": "health_status",
                "type": "ClusterHealthStatus"
              },
              {
                "id": 23,
                "name": "slim_collector",
                "type": "bool"
              },
              {
                "id": 24,
                "name": "helm_config",
                "type": "CompleteClusterConfig"
              },
              {
                "id": 26,
                "name": "most_recent_sensor_id",
                "type": "SensorDeploymentIdentification"
              },
              {
                "id": 29,
                "name": "init_bundle_id",
                "type": "string"
              },
              {
                "id": 30,
                "name": "managed_by",
                "type": "ManagerType"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 27,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 28,
                  "name": "audit_log_state",
                  "type": "AuditLogFileState"
                }
              }
            ],
            "reserved_ids": [
              6,
              8,
              9,
              10,
              11,
              12,
              14
            ]
          },
          {
            "name": "ClusterCertExpiryStatus",
            "fields": [
              {
                "id": 1,
                "name": "sensor_cert_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "sensor_cert_not_before",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ClusterStatus",
            "fields": [
              {
                "id": 1,
                "name": "sensor_version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "DEPRECATED_last_contact",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "provider_metadata",
                "type": "ProviderMetadata"
              },
              {
                "id": 4,
                "name": "orchestrator_metadata",
                "type": "OrchestratorMetadata"
              },
              {
                "id": 5,
                "name": "upgrade_status",
                "type": "ClusterUpgradeStatus"
              },
              {
                "id": 6,
                "name": "cert_expiry_status",
                "type": "ClusterCertExpiryStatus"
              }
            ]
          },
          {
            "name": "ClusterUpgradeStatus",
            "fields": [
              {
                "id": 1,
                "name": "upgradability",
                "type": "Upgradability"
              },
              {
                "id": 2,
                "name": "upgradability_status_reason",
                "type": "string"
              },
              {
                "id": 3,
                "name": "most_recent_process",
                "type": "UpgradeProcessStatus"
              }
            ],
            "messages": [
              {
                "name": "UpgradeProcessStatus",
                "fields": [
                  {
                    "id": 1,
                    "name": "active",
                    "type": "bool"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "target_version",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "upgrader_image",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "initiated_at",
                    "type": "google.protobuf.Timestamp"
                  },
                  {
                    "id": 6,
                    "name": "progress",
                    "type": "UpgradeProgress"
                  },
                  {
                    "id": 7,
                    "name": "type",
                    "type": "UpgradeProcessType"
                  }
                ]
              }
            ]
          },
          {
            "name": "UpgradeProgress",
            "fields": [
              {
                "id": 1,
                "name": "upgrade_state",
                "type": "UpgradeState"
              },
              {
                "id": 2,
                "name": "upgrade_status_detail",
                "type": "string"
              },
              {
                "id": 3,
                "name": "since",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "AuditLogFileState",
            "fields": [
              {
                "id": 1,
                "name": "collect_logs_since",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "last_audit_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ClusterHealthStatus",
            "fields": [
              {
                "id": 9,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "collector_health_info",
                "type": "CollectorHealthInfo"
              },
              {
                "id": 8,
                "name": "admission_control_health_info",
                "type": "AdmissionControlHealthInfo"
              },
              {
                "id": 10,
                "name": "scanner_health_info",
                "type": "ScannerHealthInfo"
              },
              {
                "id": 2,
                "name": "sensor_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 3,
                "name": "collector_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 4,
                "name": "overall_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 7,
                "name": "admission_control_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 11,
                "name": "scanner_health_status",
                "type": "HealthStatusLabel"
              },
              {
                "id": 5,
                "name": "last_contact",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "health_info_complete",
                "type": "bool"
              }
            ]
          },
          {
            "name": "CollectorHealthInfo",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "total_desired_pods",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "total_ready_pods",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "total_registered_nodes",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "status_errors",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "AdmissionControlHealthInfo",
            "fields": [
              {
                "id": 1,
                "name": "total_desired_pods",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "total_ready_pods",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "status_errors",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ScannerHealthInfo",
            "fields": [
              {
                "id": 1,
                "name": "total_desired_analyzer_pods",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "total_ready_analyzer_pods",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "total_desired_db_pods",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "total_ready_db_pods",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "status_errors",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:cluster_init.proto",
      "def": {
        "messages": [
          {
            "name": "InitBundleMeta",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "created_by",
                "type": "User"
              },
              {
                "id": 5,
                "name": "is_revoked",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "expires_at",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:common.proto",
      "def": {
        "messages": [
          {
            "name": "KeyValuePair",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:compliance.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceState",
            "enum_fields": [
              {
                "name": "COMPLIANCE_STATE_UNKNOWN"
              },
              {
                "name": "COMPLIANCE_STATE_SKIP",
                "integer": 1
              },
              {
                "name": "COMPLIANCE_STATE_NOTE",
                "integer": 2
              },
              {
                "name": "COMPLIANCE_STATE_SUCCESS",
                "integer": 3
              },
              {
                "name": "COMPLIANCE_STATE_FAILURE",
                "integer": 4
              },
              {
                "name": "COMPLIANCE_STATE_ERROR",
                "integer": 5
              }
            ]
          },
          {
            "name": "ComplianceAggregation.Scope",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "STANDARD",
                "integer": 1
              },
              {
                "name": "CLUSTER",
                "integer": 2
              },
              {
                "name": "CATEGORY",
                "integer": 3
              },
              {
                "name": "CONTROL",
                "integer": 4
              },
              {
                "name": "NAMESPACE",
                "integer": 5
              },
              {
                "name": "NODE",
                "integer": 6
              },
              {
                "name": "DEPLOYMENT",
                "integer": 7
              },
              {
                "name": "CHECK",
                "integer": 8
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceResource",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "ClusterName"
              },
              {
                "id": 2,
                "name": "deployment",
                "type": "DeploymentName"
              },
              {
                "id": 3,
                "name": "node",
                "type": "NodeName"
              },
              {
                "id": 4,
                "name": "image",
                "type": "ImageName"
              }
            ],
            "messages": [
              {
                "name": "ClusterName",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "DeploymentName",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster",
                    "type": "ClusterName"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "namespace",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "NodeName",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster",
                    "type": "ClusterName"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceResultValue",
            "fields": [
              {
                "id": 1,
                "name": "evidence",
                "type": "Evidence",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "overall_state",
                "type": "ComplianceState"
              }
            ],
            "messages": [
              {
                "name": "Evidence",
                "fields": [
                  {
                    "id": 1,
                    "name": "state",
                    "type": "ComplianceState"
                  },
                  {
                    "id": 2,
                    "name": "message",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "message_id",
                    "type": "int32"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceControlResult",
            "fields": [
              {
                "id": 1,
                "name": "resource",
                "type": "ComplianceResource"
              },
              {
                "id": 2,
                "name": "control_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "ComplianceResultValue"
              }
            ]
          },
          {
            "name": "ComplianceDomain",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "cluster",
                "type": "Cluster"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "nodes",
                  "type": "Node"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "deployments",
                  "type": "Deployment"
                }
              }
            ],
            "messages": [
              {
                "name": "Cluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Node",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "cluster_name",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Deployment",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 23,
                    "name": "namespace_id",
                    "type": "string"
                  },
                  {
                    "id": 9,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 10,
                    "name": "cluster_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceRunMetadata",
            "fields": [
              {
                "id": 1,
                "name": "run_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "standard_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "start_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "finish_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "success",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "error_message",
                "type": "string"
              },
              {
                "id": 8,
                "name": "domain_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComplianceRunResults",
            "fields": [
              {
                "id": 1,
                "name": "domain",
                "type": "ComplianceDomain"
              },
              {
                "id": 2,
                "name": "run_metadata",
                "type": "ComplianceRunMetadata"
              },
              {
                "id": 3,
                "name": "cluster_results",
                "type": "EntityResults"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "node_results",
                  "type": "EntityResults"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "deployment_results",
                  "type": "EntityResults"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "machine_config_results",
                  "type": "EntityResults"
                }
              }
            ],
            "messages": [
              {
                "name": "EntityResults",
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 1,
                      "name": "control_results",
                      "type": "ComplianceResultValue"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceStrings",
            "fields": [
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "strings",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ComplianceAggregation",
            "messages": [
              {
                "name": "AggregationKey",
                "fields": [
                  {
                    "id": 1,
                    "name": "scope",
                    "type": "Scope"
                  },
                  {
                    "id": 2,
                    "name": "id",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "Result",
                "fields": [
                  {
                    "id": 1,
                    "name": "aggregation_keys",
                    "type": "AggregationKey",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "unit",
                    "type": "Scope"
                  },
                  {
                    "id": 3,
                    "name": "num_passing",
                    "type": "int32"
                  },
                  {
                    "id": 4,
                    "name": "num_failing",
                    "type": "int32"
                  },
                  {
                    "id": 5,
                    "name": "num_skipped",
                    "type": "int32"
                  }
                ]
              },
              {
                "name": "Source",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "standard_id",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "successful_run",
                    "type": "storage.ComplianceRunMetadata"
                  },
                  {
                    "id": 4,
                    "name": "failed_runs",
                    "type": "storage.ComplianceRunMetadata",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "Response",
                "fields": [
                  {
                    "id": 1,
                    "name": "results",
                    "type": "Result",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "sources",
                    "type": "Source",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "error_message",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "PreComputedComplianceAggregation",
            "fields": [
              {
                "id": 1,
                "name": "results",
                "type": "ComplianceAggregation.Result",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "sources",
                "type": "ComplianceAggregation.Source",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "domain_pointers",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:compliance_operator.proto",
      "def": {
        "enums": [
          {
            "name": "ComplianceOperatorCheckResult.CheckStatus",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "PASS",
                "integer": 1
              },
              {
                "name": "FAIL",
                "integer": 2
              },
              {
                "name": "ERROR",
                "integer": 3
              },
              {
                "name": "INFO",
                "integer": 4
              },
              {
                "name": "MANUAL",
                "integer": 5
              },
              {
                "name": "NOT_APPLICABLE",
                "integer": 6
              },
              {
                "name": "INCONSISTENT",
                "integer": 7
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ComplianceOperatorCheckResult",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "check_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "check_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "status",
                "type": "CheckStatus"
              },
              {
                "id": 6,
                "name": "description",
                "type": "string"
              },
              {
                "id": 7,
                "name": "instructions",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 9,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ComplianceOperatorProfile",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "profile_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "description",
                "type": "string"
              },
              {
                "id": 8,
                "name": "rules",
                "type": "Rule",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Rule",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceOperatorRule",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "rule_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "title",
                "type": "string"
              },
              {
                "id": 8,
                "name": "description",
                "type": "string"
              },
              {
                "id": 9,
                "name": "rationale",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ComplianceOperatorScanSettingBinding",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "profiles",
                "type": "Profile",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Profile",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ComplianceOperatorScan",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "profile_id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:config.proto",
      "def": {
        "enums": [
          {
            "name": "BannerConfig.Size",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "SMALL",
                "integer": 1
              },
              {
                "name": "MEDIUM",
                "integer": 2
              },
              {
                "name": "LARGE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "LoginNotice",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "text",
                "type": "string"
              }
            ]
          },
          {
            "name": "BannerConfig",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "text",
                "type": "string"
              },
              {
                "id": 3,
                "name": "size",
                "type": "Size"
              },
              {
                "id": 4,
                "name": "color",
                "type": "string"
              },
              {
                "id": 5,
                "name": "background_color",
                "type": "string"
              }
            ]
          },
          {
            "name": "PublicConfig",
            "fields": [
              {
                "id": 1,
                "name": "login_notice",
                "type": "LoginNotice"
              },
              {
                "id": 2,
                "name": "header",
                "type": "BannerConfig"
              },
              {
                "id": 3,
                "name": "footer",
                "type": "BannerConfig"
              },
              {
                "id": 4,
                "name": "telemetry",
                "type": "TelemetryConfiguration"
              }
            ]
          },
          {
            "name": "AlertRetentionConfig",
            "fields": [
              {
                "id": 1,
                "name": "resolved_deploy_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "deleted_runtime_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "all_runtime_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "attempted_deploy_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "attempted_runtime_retention_duration_days",
                "type": "int32"
              }
            ]
          },
          {
            "name": "DecommissionedClusterRetentionConfig",
            "fields": [
              {
                "id": 1,
                "name": "retention_duration_days",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "ignore_cluster_labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PrivateConfig",
            "fields": [
              {
                "id": 1,
                "name": "DEPRECATED_alert_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "alert_config",
                "type": "AlertRetentionConfig"
              },
              {
                "id": 2,
                "name": "image_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "expired_vuln_req_retention_duration_days",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "decommissioned_cluster_retention",
                "type": "DecommissionedClusterRetentionConfig"
              }
            ]
          },
          {
            "name": "Config",
            "fields": [
              {
                "id": 1,
                "name": "public_config",
                "type": "PublicConfig"
              },
              {
                "id": 2,
                "name": "private_config",
                "type": "PrivateConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/telemetry.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:container_runtime.proto",
      "def": {
        "enums": [
          {
            "name": "ContainerRuntime",
            "enum_fields": [
              {
                "name": "UNKNOWN_CONTAINER_RUNTIME"
              },
              {
                "name": "DOCKER_CONTAINER_RUNTIME",
                "integer": 1
              },
              {
                "name": "CRIO_CONTAINER_RUNTIME",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ContainerRuntimeInfo",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "ContainerRuntime"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:cve.proto",
      "def": {
        "enums": [
          {
            "name": "VulnerabilityState",
            "enum_fields": [
              {
                "name": "OBSERVED"
              },
              {
                "name": "DEFERRED",
                "integer": 1
              },
              {
                "name": "FALSE_POSITIVE",
                "integer": 2
              }
            ]
          },
          {
            "name": "VulnerabilitySeverity",
            "enum_fields": [
              {
                "name": "UNKNOWN_VULNERABILITY_SEVERITY"
              },
              {
                "name": "LOW_VULNERABILITY_SEVERITY",
                "integer": 1
              },
              {
                "name": "MODERATE_VULNERABILITY_SEVERITY",
                "integer": 2
              },
              {
                "name": "IMPORTANT_VULNERABILITY_SEVERITY",
                "integer": 3
              },
              {
                "name": "CRITICAL_VULNERABILITY_SEVERITY",
                "integer": 4
              }
            ]
          },
          {
            "name": "CVE.CVEType",
            "enum_fields": [
              {
                "name": "UNKNOWN_CVE"
              },
              {
                "name": "IMAGE_CVE",
                "integer": 1
              },
              {
                "name": "K8S_CVE",
                "integer": 2
              },
              {
                "name": "ISTIO_CVE",
                "integer": 3
              },
              {
                "name": "NODE_CVE",
                "integer": 4
              },
              {
                "name": "OPENSHIFT_CVE",
                "integer": 5
              }
            ]
          },
          {
            "name": "CVE.ScoreVersion",
            "enum_fields": [
              {
                "name": "V2"
              },
              {
                "name": "V3",
                "integer": 1
              },
              {
                "name": "UNKNOWN",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVEInfo.ScoreVersion",
            "enum_fields": [
              {
                "name": "V2"
              },
              {
                "name": "V3",
                "integer": 1
              },
              {
                "name": "UNKNOWN",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.Impact",
            "enum_fields": [
              {
                "name": "IMPACT_NONE"
              },
              {
                "name": "IMPACT_PARTIAL",
                "integer": 1
              },
              {
                "name": "IMPACT_COMPLETE",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.AttackVector",
            "enum_fields": [
              {
                "name": "ATTACK_LOCAL"
              },
              {
                "name": "ATTACK_ADJACENT",
                "integer": 1
              },
              {
                "name": "ATTACK_NETWORK",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.AccessComplexity",
            "enum_fields": [
              {
                "name": "ACCESS_HIGH"
              },
              {
                "name": "ACCESS_MEDIUM",
                "integer": 1
              },
              {
                "name": "ACCESS_LOW",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.Authentication",
            "enum_fields": [
              {
                "name": "AUTH_MULTIPLE"
              },
              {
                "name": "AUTH_SINGLE",
                "integer": 1
              },
              {
                "name": "AUTH_NONE",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV2.Severity",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "LOW",
                "integer": 1
              },
              {
                "name": "MEDIUM",
                "integer": 2
              },
              {
                "name": "HIGH",
                "integer": 3
              }
            ]
          },
          {
            "name": "CVSSV3.Impact",
            "enum_fields": [
              {
                "name": "IMPACT_NONE"
              },
              {
                "name": "IMPACT_LOW",
                "integer": 1
              },
              {
                "name": "IMPACT_HIGH",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV3.AttackVector",
            "enum_fields": [
              {
                "name": "ATTACK_LOCAL"
              },
              {
                "name": "ATTACK_ADJACENT",
                "integer": 1
              },
              {
                "name": "ATTACK_NETWORK",
                "integer": 2
              },
              {
                "name": "ATTACK_PHYSICAL",
                "integer": 3
              }
            ]
          },
          {
            "name": "CVSSV3.Complexity",
            "enum_fields": [
              {
                "name": "COMPLEXITY_LOW"
              },
              {
                "name": "COMPLEXITY_HIGH",
                "integer": 1
              }
            ]
          },
          {
            "name": "CVSSV3.Privileges",
            "enum_fields": [
              {
                "name": "PRIVILEGE_NONE"
              },
              {
                "name": "PRIVILEGE_LOW",
                "integer": 1
              },
              {
                "name": "PRIVILEGE_HIGH",
                "integer": 2
              }
            ]
          },
          {
            "name": "CVSSV3.UserInteraction",
            "enum_fields": [
              {
                "name": "UI_NONE"
              },
              {
                "name": "UI_REQUIRED",
                "integer": 1
              }
            ]
          },
          {
            "name": "CVSSV3.Scope",
            "enum_fields": [
              {
                "name": "UNCHANGED"
              },
              {
                "name": "CHANGED",
                "integer": 1
              }
            ]
          },
          {
            "name": "CVSSV3.Severity",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "NONE",
                "integer": 1
              },
              {
                "name": "LOW",
                "integer": 2
              },
              {
                "name": "MEDIUM",
                "integer": 3
              },
              {
                "name": "HIGH",
                "integer": 4
              },
              {
                "name": "CRITICAL",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "CVE",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 14,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 3,
                "name": "type",
                "type": "CVEType"
              },
              {
                "id": 18,
                "name": "types",
                "type": "CVEType",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 5,
                "name": "link",
                "type": "string"
              },
              {
                "id": 6,
                "name": "published_on",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 15,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "last_modified",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "references",
                "type": "Reference",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "score_version",
                "type": "ScoreVersion"
              },
              {
                "id": 10,
                "name": "cvss_v2",
                "type": "CVSSV2"
              },
              {
                "id": 11,
                "name": "cvss_v3",
                "type": "CVSSV3"
              },
              {
                "id": 12,
                "name": "suppressed",
                "type": "bool"
              },
              {
                "id": 16,
                "name": "suppress_activation",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 17,
                "name": "suppress_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 20,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 19,
                  "name": "distro_specifics",
                  "type": "DistroSpecific"
                }
              }
            ],
            "reserved_ids": [
              22,
              21
            ],
            "messages": [
              {
                "name": "DistroSpecific",
                "fields": [
                  {
                    "id": 1,
                    "name": "severity",
                    "type": "VulnerabilitySeverity"
                  },
                  {
                    "id": 2,
                    "name": "cvss",
                    "type": "float"
                  },
                  {
                    "id": 3,
                    "name": "score_version",
                    "type": "ScoreVersion"
                  },
                  {
                    "id": 4,
                    "name": "cvss_v2",
                    "type": "CVSSV2"
                  },
                  {
                    "id": 5,
                    "name": "cvss_v3",
                    "type": "CVSSV3"
                  }
                ]
              },
              {
                "name": "Reference",
                "fields": [
                  {
                    "id": 1,
                    "name": "URI",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "tags",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "CVEInfo",
            "fields": [
              {
                "id": 1,
                "name": "cve",
                "type": "string"
              },
              {
                "id": 2,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 3,
                "name": "link",
                "type": "string"
              },
              {
                "id": 4,
                "name": "published_on",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "last_modified",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "score_version",
                "type": "ScoreVersion"
              },
              {
                "id": 8,
                "name": "cvss_v2",
                "type": "CVSSV2"
              },
              {
                "id": 9,
                "name": "cvss_v3",
                "type": "CVSSV3"
              },
              {
                "id": 10,
                "name": "references",
                "type": "Reference",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Reference",
                "fields": [
                  {
                    "id": 1,
                    "name": "URI",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "tags",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ImageCVE",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cve_base_info",
                "type": "CVEInfo"
              },
              {
                "id": 3,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 5,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 6,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 7,
                "name": "snoozed",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "snooze_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "snooze_expiry",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NodeCVE",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cve_base_info",
                "type": "CVEInfo"
              },
              {
                "id": 3,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 5,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 6,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 7,
                "name": "snoozed",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "snooze_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "snooze_expiry",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ClusterCVE",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cve_base_info",
                "type": "CVEInfo"
              },
              {
                "id": 3,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 4,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 5,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 6,
                "name": "snoozed",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "snooze_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "snooze_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "type",
                "type": "CVE.CVEType"
              }
            ]
          },
          {
            "name": "CVSSV2",
            "fields": [
              {
                "id": 1,
                "name": "vector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "attack_vector",
                "type": "AttackVector"
              },
              {
                "id": 3,
                "name": "access_complexity",
                "type": "AccessComplexity"
              },
              {
                "id": 4,
                "name": "authentication",
                "type": "Authentication"
              },
              {
                "id": 5,
                "name": "confidentiality",
                "type": "Impact"
              },
              {
                "id": 6,
                "name": "integrity",
                "type": "Impact"
              },
              {
                "id": 7,
                "name": "availability",
                "type": "Impact"
              },
              {
                "id": 8,
                "name": "exploitability_score",
                "type": "float"
              },
              {
                "id": 9,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 10,
                "name": "score",
                "type": "float"
              },
              {
                "id": 11,
                "name": "severity",
                "type": "Severity"
              }
            ]
          },
          {
            "name": "CVSSV3",
            "fields": [
              {
                "id": 1,
                "name": "vector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "exploitability_score",
                "type": "float"
              },
              {
                "id": 3,
                "name": "impact_score",
                "type": "float"
              },
              {
                "id": 4,
                "name": "attack_vector",
                "type": "AttackVector"
              },
              {
                "id": 5,
                "name": "attack_complexity",
                "type": "Complexity"
              },
              {
                "id": 6,
                "name": "privileges_required",
                "type": "Privileges"
              },
              {
                "id": 7,
                "name": "user_interaction",
                "type": "UserInteraction"
              },
              {
                "id": 8,
                "name": "scope",
                "type": "Scope"
              },
              {
                "id": 9,
                "name": "confidentiality",
                "type": "Impact"
              },
              {
                "id": 10,
                "name": "integrity",
                "type": "Impact"
              },
              {
                "id": 11,
                "name": "availability",
                "type": "Impact"
              },
              {
                "id": 12,
                "name": "score",
                "type": "float"
              },
              {
                "id": 13,
                "name": "severity",
                "type": "Severity"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:deployment.proto",
      "def": {
        "enums": [
          {
            "name": "Volume.MountPropagation",
            "enum_fields": [
              {
                "name": "NONE"
              },
              {
                "name": "HOST_TO_CONTAINER",
                "integer": 1
              },
              {
                "name": "BIDIRECTIONAL",
                "integer": 2
              }
            ]
          },
          {
            "name": "PortConfig.ExposureLevel",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "EXTERNAL",
                "integer": 1
              },
              {
                "name": "NODE",
                "integer": 2
              },
              {
                "name": "INTERNAL",
                "integer": 3
              },
              {
                "name": "HOST",
                "integer": 4
              },
              {
                "name": "ROUTE",
                "integer": 5
              }
            ]
          },
          {
            "name": "EnvironmentConfig.EnvVarSource",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "RAW",
                "integer": 1
              },
              {
                "name": "SECRET_KEY",
                "integer": 2
              },
              {
                "name": "CONFIG_MAP_KEY",
                "integer": 3
              },
              {
                "name": "FIELD",
                "integer": 4
              },
              {
                "name": "RESOURCE_FIELD",
                "integer": 5
              },
              {
                "name": "UNKNOWN",
                "integer": 6
              }
            ]
          },
          {
            "name": "SeccompProfile.ProfileType",
            "enum_fields": [
              {
                "name": "UNCONFINED"
              },
              {
                "name": "RUNTIME_DEFAULT",
                "integer": 1
              },
              {
                "name": "LOCALHOST",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Deployment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 26,
                "name": "hash",
                "type": "uint64"
              },
              {
                "id": 4,
                "name": "type",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 23,
                "name": "namespace_id",
                "type": "string"
              },
              {
                "id": 33,
                "name": "orchestrator_component",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "replicas",
                "type": "int64"
              },
              {
                "id": 20,
                "name": "label_selector",
                "type": "LabelSelector"
              },
              {
                "id": 8,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 10,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "containers",
                "type": "Container",
                "is_repeated": true
              },
              {
                "id": 15,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 16,
                "name": "inactive",
                "type": "bool"
              },
              {
                "id": 17,
                "name": "image_pull_secrets",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 28,
                "name": "service_account_permission_level",
                "type": "PermissionLevel"
              },
              {
                "id": 25,
                "name": "automount_service_account_token",
                "type": "bool"
              },
              {
                "id": 21,
                "name": "host_network",
                "type": "bool"
              },
              {
                "id": 31,
                "name": "host_pid",
                "type": "bool"
              },
              {
                "id": 32,
                "name": "host_ipc",
                "type": "bool"
              },
              {
                "id": 34,
                "name": "runtime_class",
                "type": "string"
              },
              {
                "id": 22,
                "name": "tolerations",
                "type": "Toleration",
                "is_repeated": true
              },
              {
                "id": 24,
                "name": "ports",
                "type": "PortConfig",
                "is_repeated": true
              },
              {
                "id": 27,
                "name": "state_timestamp",
                "type": "int64"
              },
              {
                "id": 29,
                "name": "risk_score",
                "type": "float"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 19,
                  "name": "pod_labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 14,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ],
            "reserved_ids": [
              3,
              12,
              30
            ]
          },
          {
            "name": "ContainerImage",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "name",
                "type": "ImageName"
              },
              {
                "id": 10,
                "name": "not_pullable",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "is_cluster_local",
                "type": "bool"
              }
            ],
            "reserved_ids": [
              2,
              3,
              5,
              6,
              7,
              8,
              9
            ]
          },
          {
            "name": "Container",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "config",
                "type": "ContainerConfig"
              },
              {
                "id": 3,
                "name": "image",
                "type": "ContainerImage"
              },
              {
                "id": 4,
                "name": "security_context",
                "type": "SecurityContext"
              },
              {
                "id": 5,
                "name": "volumes",
                "type": "Volume",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "ports",
                "type": "PortConfig",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "secrets",
                "type": "EmbeddedSecret",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "resources",
                "type": "Resources"
              },
              {
                "id": 10,
                "name": "name",
                "type": "string"
              },
              {
                "id": 11,
                "name": "liveness_probe",
                "type": "LivenessProbe"
              },
              {
                "id": 12,
                "name": "readiness_probe",
                "type": "ReadinessProbe"
              }
            ],
            "reserved_ids": [
              9
            ]
          },
          {
            "name": "Resources",
            "fields": [
              {
                "id": 1,
                "name": "cpu_cores_request",
                "type": "float"
              },
              {
                "id": 2,
                "name": "cpu_cores_limit",
                "type": "float"
              },
              {
                "id": 3,
                "name": "memory_mb_request",
                "type": "float"
              },
              {
                "id": 4,
                "name": "memory_mb_limit",
                "type": "float"
              }
            ]
          },
          {
            "name": "Volume",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "source",
                "type": "string"
              },
              {
                "id": 3,
                "name": "destination",
                "type": "string"
              },
              {
                "id": 4,
                "name": "read_only",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "type",
                "type": "string"
              },
              {
                "id": 6,
                "name": "mount_propagation",
                "type": "MountPropagation"
              }
            ]
          },
          {
            "name": "LivenessProbe",
            "fields": [
              {
                "id": 1,
                "name": "defined",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ReadinessProbe",
            "fields": [
              {
                "id": 1,
                "name": "defined",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Pod",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "live_instances",
                "type": "ContainerInstance",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "terminated_instances",
                "type": "ContainerInstanceList",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "started",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "messages": [
              {
                "name": "ContainerInstanceList",
                "fields": [
                  {
                    "id": 1,
                    "name": "instances",
                    "type": "ContainerInstance",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ContainerInstance",
            "fields": [
              {
                "id": 1,
                "name": "instance_id",
                "type": "ContainerInstanceID"
              },
              {
                "id": 2,
                "name": "containing_pod_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "container_ips",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "started",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "image_digest",
                "type": "string"
              },
              {
                "id": 7,
                "name": "finished",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "exit_code",
                "type": "int32"
              },
              {
                "id": 9,
                "name": "termination_reason",
                "type": "string"
              }
            ]
          },
          {
            "name": "ContainerInstanceID",
            "fields": [
              {
                "id": 1,
                "name": "container_runtime",
                "type": "ContainerRuntime"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "node",
                "type": "string"
              }
            ]
          },
          {
            "name": "EmbeddedSecret",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              }
            ]
          },
          {
            "name": "PortConfig",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_port",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "string"
              },
              {
                "id": 4,
                "name": "exposure",
                "type": "ExposureLevel"
              },
              {
                "id": 5,
                "name": "exposed_port",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "exposure_infos",
                "type": "ExposureInfo",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "ExposureInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "level",
                    "type": "ExposureLevel"
                  },
                  {
                    "id": 2,
                    "name": "service_name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "service_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "service_cluster_ip",
                    "type": "string"
                  },
                  {
                    "id": 5,
                    "name": "service_port",
                    "type": "int32"
                  },
                  {
                    "id": 6,
                    "name": "node_port",
                    "type": "int32"
                  },
                  {
                    "id": 7,
                    "name": "external_ips",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 8,
                    "name": "external_hostnames",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "ContainerConfig",
            "fields": [
              {
                "id": 1,
                "name": "env",
                "type": "EnvironmentConfig",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "command",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "args",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "directory",
                "type": "string"
              },
              {
                "id": 5,
                "name": "user",
                "type": "string"
              },
              {
                "id": 6,
                "name": "uid",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "app_armor_profile",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "EnvironmentConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "env_var_source",
                    "type": "EnvVarSource"
                  }
                ]
              }
            ]
          },
          {
            "name": "SecurityContext",
            "fields": [
              {
                "id": 1,
                "name": "privileged",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "selinux",
                "type": "SELinux"
              },
              {
                "id": 3,
                "name": "drop_capabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "add_capabilities",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "read_only_root_filesystem",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "seccomp_profile",
                "type": "SeccompProfile"
              },
              {
                "id": 7,
                "name": "allow_privilege_escalation",
                "type": "bool"
              }
            ],
            "messages": [
              {
                "name": "SELinux",
                "fields": [
                  {
                    "id": 1,
                    "name": "user",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "role",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "type",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "level",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "SeccompProfile",
                "fields": [
                  {
                    "id": 1,
                    "name": "type",
                    "type": "ProfileType"
                  },
                  {
                    "id": 2,
                    "name": "localhost_profile",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ListDeployment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "hash",
                "type": "uint64"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 6,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "priority",
                "type": "int64"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/container_runtime.proto"
          },
          {
            "path": "storage/labels.proto"
          },
          {
            "path": "storage/image.proto"
          },
          {
            "path": "storage/taints.proto"
          },
          {
            "path": "storage/rbac.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:external_backup.proto",
      "def": {
        "messages": [
          {
            "name": "ExternalBackup",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "schedule",
                "type": "storage.Schedule"
              },
              {
                "id": 5,
                "name": "backups_to_keep",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "s3",
                "type": "S3Config"
              },
              {
                "id": 7,
                "name": "gcs",
                "type": "GCSConfig"
              },
              {
                "id": 8,
                "name": "include_certificates",
                "type": "bool"
              }
            ]
          },
          {
            "name": "S3Config",
            "fields": [
              {
                "id": 1,
                "name": "bucket",
                "type": "string"
              },
              {
                "id": 2,
                "name": "use_iam",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "access_key_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "secret_access_key",
                "type": "string"
              },
              {
                "id": 5,
                "name": "region",
                "type": "string"
              },
              {
                "id": 6,
                "name": "object_prefix",
                "type": "string"
              },
              {
                "id": 7,
                "name": "endpoint",
                "type": "string"
              }
            ]
          },
          {
            "name": "GCSConfig",
            "fields": [
              {
                "id": 1,
                "name": "bucket",
                "type": "string"
              },
              {
                "id": 2,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 3,
                "name": "object_prefix",
                "type": "string"
              },
              {
                "id": 4,
                "name": "use_workload_id",
                "type": "bool"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/schedule.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:group.proto",
      "def": {
        "messages": [
          {
            "name": "Group",
            "fields": [
              {
                "id": 1,
                "name": "props",
                "type": "GroupProperties"
              },
              {
                "id": 3,
                "name": "role_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "GroupProperties",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "traits",
                "type": "Traits"
              },
              {
                "id": 1,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "string"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/traits.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:hash.proto",
      "def": {
        "messages": [
          {
            "name": "Hash",
            "fields": [
              {
                "id": 1,
                "name": "cluster_id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 2,
                  "name": "hashes",
                  "type": "uint64"
                }
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:helm_cluster.proto",
      "def": {
        "messages": [
          {
            "name": "HelmCluster",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "Cluster"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cluster.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:http_endpoint.proto",
      "def": {
        "messages": [
          {
            "name": "HTTPEndpointConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "skip_tls_verify",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "ca_cert",
                "type": "string"
              },
              {
                "id": 4,
                "name": "username",
                "type": "string"
              },
              {
                "id": 5,
                "name": "password",
                "type": "string"
              },
              {
                "id": 6,
                "name": "headers",
                "type": "KeyValuePair",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "client_cert_pem",
                "type": "string"
              },
              {
                "id": 8,
                "name": "client_key_pem",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/common.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:image.proto",
      "def": {
        "enums": [
          {
            "name": "Image.Note",
            "enum_fields": [
              {
                "name": "MISSING_METADATA"
              },
              {
                "name": "MISSING_SCAN_DATA",
                "integer": 1
              },
              {
                "name": "MISSING_SIGNATURE",
                "integer": 2
              },
              {
                "name": "MISSING_SIGNATURE_VERIFICATION_DATA",
                "integer": 3
              }
            ]
          },
          {
            "name": "ImageScan.Note",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "OS_UNAVAILABLE",
                "integer": 1
              },
              {
                "name": "PARTIAL_SCAN_DATA",
                "integer": 2
              },
              {
                "name": "OS_CVES_UNAVAILABLE",
                "integer": 3
              },
              {
                "name": "OS_CVES_STALE",
                "integer": 4
              },
              {
                "name": "LANGUAGE_CVES_UNAVAILABLE",
                "integer": 5
              },
              {
                "name": "CERTIFIED_RHEL_SCAN_UNAVAILABLE",
                "integer": 6
              }
            ]
          },
          {
            "name": "ImageSignatureVerificationResult.Status",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "VERIFIED",
                "integer": 1
              },
              {
                "name": "FAILED_VERIFICATION",
                "integer": 2
              },
              {
                "name": "INVALID_SIGNATURE_ALGO",
                "integer": 3
              },
              {
                "name": "CORRUPTED_SIGNATURE",
                "integer": 4
              },
              {
                "name": "GENERIC_ERROR",
                "integer": 5
              }
            ]
          },
          {
            "name": "SourceType",
            "enum_fields": [
              {
                "name": "OS"
              },
              {
                "name": "PYTHON",
                "integer": 1
              },
              {
                "name": "JAVA",
                "integer": 2
              },
              {
                "name": "RUBY",
                "integer": 3
              },
              {
                "name": "NODEJS",
                "integer": 4
              },
              {
                "name": "DOTNETCORERUNTIME",
                "integer": 5
              },
              {
                "name": "INFRASTRUCTURE",
                "integer": 6
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Image",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "name",
                "type": "ImageName"
              },
              {
                "id": 18,
                "name": "names",
                "type": "ImageName",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "metadata",
                "type": "ImageMetadata"
              },
              {
                "id": 3,
                "name": "scan",
                "type": "ImageScan"
              },
              {
                "id": 15,
                "name": "signature_verification_data",
                "type": "ImageSignatureVerificationData"
              },
              {
                "id": 16,
                "name": "signature",
                "type": "ImageSignature"
              },
              {
                "id": 7,
                "name": "components",
                "type": "int32"
              },
              {
                "id": 8,
                "name": "cves",
                "type": "int32"
              },
              {
                "id": 9,
                "name": "fixable_cves",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "not_pullable",
                "type": "bool"
              },
              {
                "id": 17,
                "name": "is_cluster_local",
                "type": "bool"
              },
              {
                "id": 11,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 12,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 13,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 14,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              6
            ]
          },
          {
            "name": "DataSource",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImageScan",
            "fields": [
              {
                "id": 6,
                "name": "scanner_version",
                "type": "string"
              },
              {
                "id": 1,
                "name": "scan_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "components",
                "type": "EmbeddedImageScanComponent",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 3,
                "name": "data_source",
                "type": "DataSource"
              },
              {
                "id": 5,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ImageSignatureVerificationData",
            "fields": [
              {
                "id": 1,
                "name": "results",
                "type": "ImageSignatureVerificationResult",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ImageSignatureVerificationResult",
            "fields": [
              {
                "id": 1,
                "name": "verification_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "verifier_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 4,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "verified_image_references",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "EmbeddedImageScanComponent",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "license",
                "type": "License"
              },
              {
                "id": 4,
                "name": "vulns",
                "type": "EmbeddedVulnerability",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "layer_index",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "source",
                "type": "SourceType"
              },
              {
                "id": 8,
                "name": "location",
                "type": "string"
              },
              {
                "id": 9,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 10,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 11,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 12,
                "name": "executables",
                "type": "Executable",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Executable",
                "fields": [
                  {
                    "id": 1,
                    "name": "path",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "dependencies",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "License",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "string"
              },
              {
                "id": 3,
                "name": "url",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImageMetadata",
            "fields": [
              {
                "id": 1,
                "name": "v1",
                "type": "V1Metadata"
              },
              {
                "id": 2,
                "name": "v2",
                "type": "V2Metadata"
              },
              {
                "id": 3,
                "name": "layer_shas",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "data_source",
                "type": "DataSource"
              },
              {
                "id": 5,
                "name": "version",
                "type": "uint64"
              }
            ]
          },
          {
            "name": "ImageSignature",
            "fields": [
              {
                "id": 1,
                "name": "signatures",
                "type": "Signature",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "fetched",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "Signature",
            "fields": [
              {
                "id": 1,
                "name": "cosign",
                "type": "CosignSignature"
              }
            ]
          },
          {
            "name": "CosignSignature",
            "fields": [
              {
                "id": 1,
                "name": "raw_signature",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "signature_payload",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "V2Metadata",
            "fields": [
              {
                "id": 1,
                "name": "digest",
                "type": "string"
              }
            ]
          },
          {
            "name": "V1Metadata",
            "fields": [
              {
                "id": 1,
                "name": "digest",
                "type": "string"
              },
              {
                "id": 2,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "author",
                "type": "string"
              },
              {
                "id": 4,
                "name": "layers",
                "type": "ImageLayer",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "user",
                "type": "string"
              },
              {
                "id": 6,
                "name": "command",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "entrypoint",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "volumes",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 9,
                  "name": "labels",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ImageLayer",
            "fields": [
              {
                "id": 1,
                "name": "instruction",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "author",
                "type": "string"
              },
              {
                "id": 6,
                "name": "empty",
                "type": "bool"
              }
            ],
            "reserved_ids": [
              5
            ]
          },
          {
            "name": "ImageName",
            "fields": [
              {
                "id": 1,
                "name": "registry",
                "type": "string"
              },
              {
                "id": 2,
                "name": "remote",
                "type": "string"
              },
              {
                "id": 3,
                "name": "tag",
                "type": "string"
              },
              {
                "id": 4,
                "name": "full_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ListImage",
            "fields": [
              {
                "id": 7,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "components",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "cves",
                "type": "int32"
              },
              {
                "id": 5,
                "name": "fixable_cves",
                "type": "int32"
              },
              {
                "id": 6,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "priority",
                "type": "int64"
              }
            ],
            "reserved_ids": [
              9
            ]
          },
          {
            "name": "WatchedImage",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/vulnerability.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:image_component.proto",
      "def": {
        "messages": [
          {
            "name": "ImageComponent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 4,
                "name": "license",
                "type": "License"
              },
              {
                "id": 5,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 6,
                "name": "source",
                "type": "SourceType"
              },
              {
                "id": 7,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 8,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 9,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 10,
                "name": "operating_system",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/image.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:image_integration.proto",
      "def": {
        "enums": [
          {
            "name": "ImageIntegrationCategory",
            "enum_fields": [
              {
                "name": "REGISTRY"
              },
              {
                "name": "SCANNER",
                "integer": 1
              },
              {
                "name": "NODE_SCANNER",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ImageIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 6,
                "name": "categories",
                "type": "ImageIntegrationCategory",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "clairify",
                "type": "ClairifyConfig"
              },
              {
                "id": 9,
                "name": "docker",
                "type": "DockerConfig"
              },
              {
                "id": 10,
                "name": "quay",
                "type": "QuayConfig"
              },
              {
                "id": 11,
                "name": "ecr",
                "type": "ECRConfig"
              },
              {
                "id": 13,
                "name": "google",
                "type": "GoogleConfig"
              },
              {
                "id": 14,
                "name": "clair",
                "type": "ClairConfig"
              },
              {
                "id": 22,
                "name": "clair_v4",
                "type": "ClairV4Config"
              },
              {
                "id": 20,
                "name": "ibm",
                "type": "IBMRegistryConfig"
              },
              {
                "id": 15,
                "name": "autogenerated",
                "type": "bool"
              },
              {
                "id": 16,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 18,
                "name": "skip_test_integration",
                "type": "bool"
              },
              {
                "id": 21,
                "name": "source",
                "type": "Source"
              }
            ],
            "reserved_ids": [
              4,
              5,
              7,
              12,
              17,
              19
            ],
            "messages": [
              {
                "name": "Source",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "image_pull_secret_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "IBMRegistryConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "api_key",
                "type": "string"
              }
            ]
          },
          {
            "name": "QuayConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "oauthToken",
                "type": "string"
              },
              {
                "id": 3,
                "name": "insecure",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "registry_robot_credentials",
                "type": "RobotAccount"
              }
            ],
            "messages": [
              {
                "name": "RobotAccount",
                "fields": [
                  {
                    "id": 1,
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "password",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ClairConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "insecure",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ClairV4Config",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "insecure",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ClairifyConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 3,
                "name": "grpc_endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "num_concurrent_scans",
                "type": "int32"
              }
            ]
          },
          {
            "name": "DockerConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "username",
                "type": "string"
              },
              {
                "id": 3,
                "name": "password",
                "type": "string"
              },
              {
                "id": 4,
                "name": "insecure",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ECRConfig",
            "fields": [
              {
                "id": 1,
                "name": "registry_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "access_key_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "secret_access_key",
                "type": "string"
              },
              {
                "id": 4,
                "name": "region",
                "type": "string"
              },
              {
                "id": 5,
                "name": "use_iam",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 7,
                "name": "use_assume_role",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "assume_role_id",
                "type": "string"
              },
              {
                "id": 9,
                "name": "assume_role_external_id",
                "type": "string"
              },
              {
                "id": 10,
                "name": "authorization_data",
                "type": "AuthorizationData"
              }
            ],
            "messages": [
              {
                "name": "AuthorizationData",
                "fields": [
                  {
                    "id": 1,
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "password",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "expires_at",
                    "type": "google.protobuf.Timestamp"
                  }
                ]
              }
            ]
          },
          {
            "name": "GoogleConfig",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 3,
                "name": "project",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:installation.proto",
      "def": {
        "messages": [
          {
            "name": "InstallationInfo",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:integration_health.proto",
      "def": {
        "enums": [
          {
            "name": "IntegrationHealth.Status",
            "enum_fields": [
              {
                "name": "UNINITIALIZED"
              },
              {
                "name": "UNHEALTHY",
                "integer": 1
              },
              {
                "name": "HEALTHY",
                "integer": 2
              }
            ]
          },
          {
            "name": "IntegrationHealth.Type",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "IMAGE_INTEGRATION",
                "integer": 1
              },
              {
                "name": "NOTIFIER",
                "integer": 2
              },
              {
                "name": "BACKUP",
                "integer": 3
              },
              {
                "name": "DECLARATIVE_CONFIG",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "IntegrationHealth",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 4,
                "name": "status",
                "type": "Status"
              },
              {
                "id": 5,
                "name": "error_message",
                "type": "string"
              },
              {
                "id": 6,
                "name": "last_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:kube_event.proto",
      "def": {
        "enums": [
          {
            "name": "KubernetesEvent.APIVerb",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "CREATE",
                "integer": 1
              },
              {
                "name": "UPDATE",
                "integer": 2
              },
              {
                "name": "PATCH",
                "integer": 3
              },
              {
                "name": "DELETE",
                "integer": 4
              },
              {
                "name": "LIST",
                "integer": 5
              },
              {
                "name": "GET",
                "integer": 6
              },
              {
                "name": "WATCH",
                "integer": 7
              },
              {
                "name": "PROXY",
                "integer": 8
              }
            ]
          },
          {
            "name": "Object.Resource",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "PODS_EXEC",
                "integer": 1
              },
              {
                "name": "PODS_PORTFORWARD",
                "integer": 2
              },
              {
                "name": "SECRETS",
                "integer": 3
              },
              {
                "name": "CONFIGMAPS",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "KubernetesEvent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "object",
                "type": "Object"
              },
              {
                "id": 3,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "api_verb",
                "type": "APIVerb"
              },
              {
                "id": 5,
                "name": "pod_exec_args",
                "type": "PodExecArgs"
              },
              {
                "id": 6,
                "name": "pod_port_forward_args",
                "type": "PodPortForwardArgs"
              },
              {
                "id": 15,
                "name": "user",
                "type": "User"
              },
              {
                "id": 16,
                "name": "impersonated_user",
                "type": "User"
              },
              {
                "id": 17,
                "name": "source_ips",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "user_agent",
                "type": "string"
              },
              {
                "id": 19,
                "name": "response_status",
                "type": "ResponseStatus"
              },
              {
                "id": 20,
                "name": "request_uri",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Object",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "resource",
                    "type": "Resource"
                  },
                  {
                    "id": 3,
                    "name": "cluster_id",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "namespace",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "PodExecArgs",
                "fields": [
                  {
                    "id": 1,
                    "name": "container",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "commands",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "PodPortForwardArgs",
                "fields": [
                  {
                    "id": 1,
                    "name": "ports",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "ResponseStatus",
                "fields": [
                  {
                    "id": 1,
                    "name": "status_code",
                    "type": "int32"
                  },
                  {
                    "id": 2,
                    "name": "reason",
                    "type": "string"
                  }
                ]
              },
              {
                "name": "User",
                "fields": [
                  {
                    "id": 1,
                    "name": "username",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "groups",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:labels.proto",
      "def": {
        "enums": [
          {
            "name": "LabelSelector.Operator",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "IN",
                "integer": 1
              },
              {
                "name": "NOT_IN",
                "integer": 2
              },
              {
                "name": "EXISTS",
                "integer": 3
              },
              {
                "name": "NOT_EXISTS",
                "integer": 4
              }
            ]
          },
          {
            "name": "SetBasedLabelSelector.Operator",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "IN",
                "integer": 1
              },
              {
                "name": "NOT_IN",
                "integer": 2
              },
              {
                "name": "EXISTS",
                "integer": 3
              },
              {
                "name": "NOT_EXISTS",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "LabelSelector",
            "fields": [
              {
                "id": 2,
                "name": "requirements",
                "type": "Requirement",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 1,
                  "name": "match_labels",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Requirement",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "op",
                    "type": "Operator"
                  },
                  {
                    "id": 3,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "SetBasedLabelSelector",
            "fields": [
              {
                "id": 2,
                "name": "requirements",
                "type": "Requirement",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              1
            ],
            "messages": [
              {
                "name": "Requirement",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "op",
                    "type": "Operator"
                  },
                  {
                    "id": 3,
                    "name": "values",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:license.proto",
      "def": {
        "messages": [
          {
            "name": "StoredLicenseKey",
            "fields": [
              {
                "id": 1,
                "name": "license_key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "license_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "selected",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:log.proto",
      "def": {
        "messages": [
          {
            "name": "LogImbue",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "log",
                "type": "bytes"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:mitre.proto",
      "def": {
        "messages": [
          {
            "name": "MitreTactic",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              }
            ]
          },
          {
            "name": "MitreTechnique",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              }
            ]
          },
          {
            "name": "MitreAttackVector",
            "fields": [
              {
                "id": 1,
                "name": "tactic",
                "type": "MitreTactic"
              },
              {
                "id": 2,
                "name": "techniques",
                "type": "MitreTechnique",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "MitreAttackMatrix",
            "fields": [
              {
                "id": 1,
                "name": "matrix_info",
                "type": "MatrixInfo"
              },
              {
                "id": 2,
                "name": "vectors",
                "type": "MitreAttackVector",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "MatrixInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "domain",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "platform",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "MitreAttackBundle",
            "fields": [
              {
                "id": 1,
                "name": "version",
                "type": "string"
              },
              {
                "id": 2,
                "name": "matrices",
                "type": "MitreAttackMatrix",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:namespace_metadata.proto",
      "def": {
        "messages": [
          {
            "name": "NamespaceMetadata",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "creation_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "priority",
                "type": "int64"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:network_baseline.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkBaselineConnectionProperties",
            "fields": [
              {
                "id": 1,
                "name": "ingress",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "L4Protocol"
              }
            ]
          },
          {
            "name": "NetworkBaselinePeer",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "NetworkEntity"
              },
              {
                "id": 2,
                "name": "properties",
                "type": "NetworkBaselineConnectionProperties",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkBaseline",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "peers",
                "type": "NetworkBaselinePeer",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "forbidden_peers",
                "type": "NetworkBaselinePeer",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "observation_period_end",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "locked",
                "type": "bool"
              },
              {
                "id": 8,
                "name": "deployment_name",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_flow.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:network_flow.proto",
      "def": {
        "enums": [
          {
            "name": "NetworkEntityInfo.Type",
            "enum_fields": [
              {
                "name": "UNKNOWN_TYPE"
              },
              {
                "name": "DEPLOYMENT",
                "integer": 1
              },
              {
                "name": "INTERNET",
                "integer": 2
              },
              {
                "name": "LISTEN_ENDPOINT",
                "integer": 3
              },
              {
                "name": "EXTERNAL_SOURCE",
                "integer": 4
              }
            ]
          },
          {
            "name": "L4Protocol",
            "enum_fields": [
              {
                "name": "L4_PROTOCOL_UNKNOWN"
              },
              {
                "name": "L4_PROTOCOL_TCP",
                "integer": 1
              },
              {
                "name": "L4_PROTOCOL_UDP",
                "integer": 2
              },
              {
                "name": "L4_PROTOCOL_ICMP",
                "integer": 3
              },
              {
                "name": "L4_PROTOCOL_RAW",
                "integer": 4
              },
              {
                "name": "L4_PROTOCOL_SCTP",
                "integer": 5
              },
              {
                "name": "L4_PROTOCOL_ANY",
                "integer": -1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "NetworkFlow",
            "fields": [
              {
                "id": 1,
                "name": "props",
                "type": "NetworkFlowProperties"
              },
              {
                "id": 2,
                "name": "last_seen_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkFlowProperties",
            "fields": [
              {
                "id": 1,
                "name": "src_entity",
                "type": "NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "dst_entity",
                "type": "NetworkEntityInfo"
              },
              {
                "id": 3,
                "name": "dst_port",
                "type": "uint32"
              },
              {
                "id": 4,
                "name": "l4protocol",
                "type": "L4Protocol"
              }
            ]
          },
          {
            "name": "NetworkEndpoint",
            "fields": [
              {
                "id": 1,
                "name": "props",
                "type": "NetworkEndpointProperties"
              },
              {
                "id": 2,
                "name": "last_active_timestamp",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "NetworkEndpointProperties",
            "fields": [
              {
                "id": 1,
                "name": "entity",
                "type": "NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "l4protocol",
                "type": "L4Protocol"
              }
            ]
          },
          {
            "name": "NetworkEntity",
            "fields": [
              {
                "id": 1,
                "name": "info",
                "type": "NetworkEntityInfo"
              },
              {
                "id": 2,
                "name": "scope",
                "type": "Scope"
              }
            ],
            "messages": [
              {
                "name": "Scope",
                "fields": [
                  {
                    "id": 1,
                    "name": "cluster_id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "NetworkEntityInfo",
            "fields": [
              {
                "id": 1,
                "name": "type",
                "type": "Type"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "deployment",
                "type": "Deployment"
              },
              {
                "id": 4,
                "name": "external_source",
                "type": "ExternalSource"
              }
            ],
            "messages": [
              {
                "name": "Deployment",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "cluster",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "listen_ports",
                    "type": "ListenPort",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "ListenPort",
                    "fields": [
                      {
                        "id": 1,
                        "name": "port",
                        "type": "uint32"
                      },
                      {
                        "id": 2,
                        "name": "l4protocol",
                        "type": "L4Protocol"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "ExternalSource",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "cidr",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "default",
                    "type": "bool"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:network_graph_config.proto",
      "def": {
        "messages": [
          {
            "name": "NetworkGraphConfig",
            "fields": [
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "hide_default_external_srcs",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:network_policy.proto",
      "def": {
        "enums": [
          {
            "name": "Protocol",
            "enum_fields": [
              {
                "name": "UNSET_PROTOCOL"
              },
              {
                "name": "TCP_PROTOCOL",
                "integer": 1
              },
              {
                "name": "UDP_PROTOCOL",
                "integer": 2
              },
              {
                "name": "SCTP_PROTOCOL",
                "integer": 3
              }
            ]
          },
          {
            "name": "NetworkPolicyType",
            "enum_fields": [
              {
                "name": "UNSET_NETWORK_POLICY_TYPE"
              },
              {
                "name": "INGRESS_NETWORK_POLICY_TYPE",
                "integer": 1
              },
              {
                "name": "EGRESS_NETWORK_POLICY_TYPE",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "NetworkPolicy",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 8,
                "name": "spec",
                "type": "NetworkPolicySpec"
              },
              {
                "id": 9,
                "name": "yaml",
                "type": "string"
              },
              {
                "id": 10,
                "name": "api_version",
                "type": "string"
              },
              {
                "id": 11,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "NetworkPolicySpec",
            "fields": [
              {
                "id": 1,
                "name": "pod_selector",
                "type": "LabelSelector"
              },
              {
                "id": 2,
                "name": "ingress",
                "type": "NetworkPolicyIngressRule",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "egress",
                "type": "NetworkPolicyEgressRule",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "policy_types",
                "type": "NetworkPolicyType",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyEgressRule",
            "fields": [
              {
                "id": 1,
                "name": "ports",
                "type": "NetworkPolicyPort",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "to",
                "type": "NetworkPolicyPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyPeer",
            "fields": [
              {
                "id": 1,
                "name": "pod_selector",
                "type": "LabelSelector"
              },
              {
                "id": 2,
                "name": "namespace_selector",
                "type": "LabelSelector"
              },
              {
                "id": 3,
                "name": "ip_block",
                "type": "IPBlock"
              }
            ]
          },
          {
            "name": "IPBlock",
            "fields": [
              {
                "id": 1,
                "name": "cidr",
                "type": "string"
              },
              {
                "id": 2,
                "name": "except",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyPort",
            "fields": [
              {
                "id": 1,
                "name": "protocol",
                "type": "Protocol"
              },
              {
                "id": 2,
                "name": "port",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "port_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkPolicyIngressRule",
            "fields": [
              {
                "id": 1,
                "name": "ports",
                "type": "NetworkPolicyPort",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "from",
                "type": "NetworkPolicyPeer",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyReference",
            "fields": [
              {
                "id": 1,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkPolicyModification",
            "fields": [
              {
                "id": 1,
                "name": "apply_yaml",
                "type": "string"
              },
              {
                "id": 2,
                "name": "to_delete",
                "type": "NetworkPolicyReference",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NetworkPolicyApplicationUndoRecord",
            "fields": [
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "user",
                "type": "string"
              },
              {
                "id": 2,
                "name": "apply_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "original_modification",
                "type": "NetworkPolicyModification"
              },
              {
                "id": 4,
                "name": "undo_modification",
                "type": "NetworkPolicyModification"
              }
            ]
          },
          {
            "name": "NetworkPolicyApplicationUndoDeploymentRecord",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "undo_record",
                "type": "NetworkPolicyApplicationUndoRecord"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/labels.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:node.proto",
      "def": {
        "enums": [
          {
            "name": "Node.Note",
            "enum_fields": [
              {
                "name": "MISSING_SCAN_DATA"
              }
            ]
          },
          {
            "name": "NodeScan.Note",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "UNSUPPORTED",
                "integer": 1
              },
              {
                "name": "KERNEL_UNSUPPORTED",
                "integer": 2
              },
              {
                "name": "CERTIFIED_RHEL_CVES_UNAVAILABLE",
                "integer": 3
              }
            ]
          },
          {
            "name": "NodeInventory.Note",
            "enum_fields": [
              {
                "name": "OS_CVES_UNAVAILABLE"
              },
              {
                "name": "OS_CVES_STALE",
                "integer": 1
              },
              {
                "name": "LANGUAGE_CVES_UNAVAILABLE",
                "integer": 2
              },
              {
                "name": "CERTIFIED_RHEL_SCAN_UNAVAILABLE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Node",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "taints",
                "type": "Taint",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 13,
                "name": "joined_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "internal_ip_addresses",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "external_ip_addresses",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "container_runtime_version",
                "type": "string"
              },
              {
                "id": 14,
                "name": "container_runtime",
                "type": "ContainerRuntimeInfo"
              },
              {
                "id": 11,
                "name": "kernel_version",
                "type": "string"
              },
              {
                "id": 17,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 12,
                "name": "os_image",
                "type": "string"
              },
              {
                "id": 15,
                "name": "kubelet_version",
                "type": "string"
              },
              {
                "id": 16,
                "name": "kube_proxy_version",
                "type": "string"
              },
              {
                "id": 25,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 26,
                "name": "k8s_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 18,
                "name": "scan",
                "type": "NodeScan"
              },
              {
                "id": 19,
                "name": "components",
                "type": "int32"
              },
              {
                "id": 20,
                "name": "cves",
                "type": "int32"
              },
              {
                "id": 21,
                "name": "fixable_cves",
                "type": "int32"
              },
              {
                "id": 22,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 23,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 24,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 27,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "NodeScan",
            "fields": [
              {
                "id": 1,
                "name": "scan_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "operating_system",
                "type": "string"
              },
              {
                "id": 2,
                "name": "components",
                "type": "EmbeddedNodeScanComponent",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "NodeInventory",
            "fields": [
              {
                "id": 1,
                "name": "node_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "node_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "scan_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "components",
                "type": "Components"
              },
              {
                "id": 5,
                "name": "notes",
                "type": "Note",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Components",
                "fields": [
                  {
                    "id": 1,
                    "name": "namespace",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "rhel_components",
                    "type": "RHELComponent",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "rhel_content_sets",
                    "type": "string",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "RHELComponent",
                    "fields": [
                      {
                        "id": 1,
                        "name": "id",
                        "type": "int64"
                      },
                      {
                        "id": 2,
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "namespace",
                        "type": "string"
                      },
                      {
                        "id": 4,
                        "name": "version",
                        "type": "string"
                      },
                      {
                        "id": 5,
                        "name": "arch",
                        "type": "string"
                      },
                      {
                        "id": 6,
                        "name": "module",
                        "type": "string"
                      },
                      {
                        "id": 7,
                        "name": "added_by",
                        "type": "string"
                      },
                      {
                        "id": 8,
                        "name": "executables",
                        "type": "Executable",
                        "is_repeated": true
                      }
                    ],
                    "messages": [
                      {
                        "name": "Executable",
                        "fields": [
                          {
                            "id": 1,
                            "name": "path",
                            "type": "string"
                          },
                          {
                            "id": 2,
                            "name": "required_features",
                            "type": "FeatureNameVersion",
                            "is_repeated": true
                          }
                        ],
                        "messages": [
                          {
                            "name": "FeatureNameVersion",
                            "fields": [
                              {
                                "id": 1,
                                "name": "name",
                                "type": "string"
                              },
                              {
                                "id": 2,
                                "name": "version",
                                "type": "string"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "EmbeddedNodeScanComponent",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "vulns",
                "type": "EmbeddedVulnerability",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "vulnerabilities",
                "type": "NodeVulnerability",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 6,
                "name": "risk_score",
                "type": "float"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/container_runtime.proto"
          },
          {
            "path": "storage/taints.proto"
          },
          {
            "path": "storage/vulnerability.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:node_component.proto",
      "def": {
        "messages": [
          {
            "name": "NodeComponent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "version",
                "type": "string"
              },
              {
                "id": 5,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "risk_score",
                "type": "float"
              },
              {
                "id": 8,
                "name": "top_cvss",
                "type": "float"
              },
              {
                "id": 9,
                "name": "operating_system",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:node_integration.proto",
      "def": {
        "messages": [
          {
            "name": "NodeIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "clairify",
                "type": "ClairifyConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/image_integration.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:notification_schedule.proto",
      "def": {
        "messages": [
          {
            "name": "NotificationSchedule",
            "fields": [
              {
                "id": 2,
                "name": "last_run",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "reserved_ids": [
              1
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:notifier.proto",
      "def": {
        "enums": [
          {
            "name": "Email.AuthMethod",
            "enum_fields": [
              {
                "name": "DISABLED"
              },
              {
                "name": "PLAIN",
                "integer": 1
              },
              {
                "name": "LOGIN",
                "integer": 2
              }
            ]
          },
          {
            "name": "Syslog.LocalFacility",
            "enum_fields": [
              {
                "name": "LOCAL0"
              },
              {
                "name": "LOCAL1",
                "integer": 1
              },
              {
                "name": "LOCAL2",
                "integer": 2
              },
              {
                "name": "LOCAL3",
                "integer": 3
              },
              {
                "name": "LOCAL4",
                "integer": 4
              },
              {
                "name": "LOCAL5",
                "integer": 5
              },
              {
                "name": "LOCAL6",
                "integer": 6
              },
              {
                "name": "LOCAL7",
                "integer": 7
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Notifier",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "ui_endpoint",
                "type": "string"
              },
              {
                "id": 8,
                "name": "label_key",
                "type": "string"
              },
              {
                "id": 9,
                "name": "label_default",
                "type": "string"
              },
              {
                "id": 10,
                "name": "jira",
                "type": "Jira"
              },
              {
                "id": 11,
                "name": "email",
                "type": "Email"
              },
              {
                "id": 12,
                "name": "cscc",
                "type": "CSCC"
              },
              {
                "id": 13,
                "name": "splunk",
                "type": "Splunk"
              },
              {
                "id": 14,
                "name": "pagerduty",
                "type": "PagerDuty"
              },
              {
                "id": 15,
                "name": "generic",
                "type": "Generic"
              },
              {
                "id": 16,
                "name": "sumologic",
                "type": "SumoLogic"
              },
              {
                "id": 17,
                "name": "aws_security_hub",
                "type": "AWSSecurityHub"
              },
              {
                "id": 18,
                "name": "syslog",
                "type": "Syslog"
              }
            ],
            "reserved_ids": [
              5
            ],
            "reserved_names": [
              "enabled"
            ]
          },
          {
            "name": "AWSSecurityHub",
            "fields": [
              {
                "id": 1,
                "name": "region",
                "type": "string"
              },
              {
                "id": 2,
                "name": "credentials",
                "type": "Credentials"
              },
              {
                "id": 3,
                "name": "account_id",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Credentials",
                "fields": [
                  {
                    "id": 1,
                    "name": "access_key_id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "secret_access_key",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "CSCC",
            "fields": [
              {
                "id": 1,
                "name": "service_account",
                "type": "string"
              },
              {
                "id": 4,
                "name": "source_id",
                "type": "string"
              }
            ],
            "reserved_ids": [
              2,
              3
            ]
          },
          {
            "name": "Jira",
            "fields": [
              {
                "id": 1,
                "name": "url",
                "type": "string"
              },
              {
                "id": 2,
                "name": "username",
                "type": "string"
              },
              {
                "id": 3,
                "name": "password",
                "type": "string"
              },
              {
                "id": 4,
                "name": "issue_type",
                "type": "string"
              },
              {
                "id": 5,
                "name": "priority_mappings",
                "type": "PriorityMapping",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "default_fields_json",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "PriorityMapping",
                "fields": [
                  {
                    "id": 1,
                    "name": "severity",
                    "type": "Severity"
                  },
                  {
                    "id": 2,
                    "name": "priority_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "Email",
            "fields": [
              {
                "id": 1,
                "name": "server",
                "type": "string"
              },
              {
                "id": 2,
                "name": "sender",
                "type": "string"
              },
              {
                "id": 3,
                "name": "username",
                "type": "string"
              },
              {
                "id": 4,
                "name": "password",
                "type": "string"
              },
              {
                "id": 5,
                "name": "disableTLS",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "DEPRECATED_useStartTLS",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "from",
                "type": "string"
              },
              {
                "id": 8,
                "name": "startTLSAuthMethod",
                "type": "AuthMethod"
              },
              {
                "id": 9,
                "name": "allow_unauthenticated_smtp",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Splunk",
            "fields": [
              {
                "id": 1,
                "name": "http_token",
                "type": "string"
              },
              {
                "id": 2,
                "name": "http_endpoint",
                "type": "string"
              },
              {
                "id": 3,
                "name": "insecure",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "truncate",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "audit_logging_enabled",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "derived_source_type",
                "type": "bool"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "source_types",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PagerDuty",
            "fields": [
              {
                "id": 1,
                "name": "api_key",
                "type": "string"
              }
            ]
          },
          {
            "name": "Generic",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "string"
              },
              {
                "id": 2,
                "name": "skipTLSVerify",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "ca_cert",
                "type": "string"
              },
              {
                "id": 4,
                "name": "username",
                "type": "string"
              },
              {
                "id": 5,
                "name": "password",
                "type": "string"
              },
              {
                "id": 6,
                "name": "headers",
                "type": "KeyValuePair",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "extra_fields",
                "type": "KeyValuePair",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "audit_logging_enabled",
                "type": "bool"
              }
            ]
          },
          {
            "name": "SumoLogic",
            "fields": [
              {
                "id": 1,
                "name": "http_source_address",
                "type": "string"
              },
              {
                "id": 2,
                "name": "skipTLSVerify",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Syslog",
            "fields": [
              {
                "id": 1,
                "name": "local_facility",
                "type": "LocalFacility"
              },
              {
                "id": 2,
                "name": "tcp_config",
                "type": "TCPConfig"
              },
              {
                "id": 3,
                "name": "extra_fields",
                "type": "KeyValuePair",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "TCPConfig",
                "fields": [
                  {
                    "id": 1,
                    "name": "hostname",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "port",
                    "type": "int32"
                  },
                  {
                    "id": 3,
                    "name": "skip_tls_verify",
                    "type": "bool"
                  },
                  {
                    "id": 4,
                    "name": "use_tls",
                    "type": "bool"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/common.proto"
          },
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:operation_status.proto",
      "def": {
        "enums": [
          {
            "name": "OperationStatus",
            "enum_fields": [
              {
                "name": "FAIL"
              },
              {
                "name": "PASS",
                "integer": 1
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:orchestrator_integration.proto",
      "def": {
        "messages": [
          {
            "name": "OrchestratorIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "string"
              },
              {
                "id": 4,
                "name": "clairify",
                "type": "ClairifyConfig"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/image_integration.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:policy.proto",
      "def": {
        "enums": [
          {
            "name": "EventSource",
            "enum_fields": [
              {
                "name": "NOT_APPLICABLE"
              },
              {
                "name": "DEPLOYMENT_EVENT",
                "integer": 1
              },
              {
                "name": "AUDIT_LOG_EVENT",
                "integer": 2
              }
            ]
          },
          {
            "name": "BooleanOperator",
            "enum_fields": [
              {
                "name": "OR"
              },
              {
                "name": "AND",
                "integer": 1
              }
            ]
          },
          {
            "name": "EnforcementAction",
            "enum_fields": [
              {
                "name": "UNSET_ENFORCEMENT"
              },
              {
                "name": "SCALE_TO_ZERO_ENFORCEMENT",
                "integer": 1
              },
              {
                "name": "UNSATISFIABLE_NODE_CONSTRAINT_ENFORCEMENT",
                "integer": 2
              },
              {
                "name": "KILL_POD_ENFORCEMENT",
                "integer": 3
              },
              {
                "name": "FAIL_BUILD_ENFORCEMENT",
                "integer": 4
              },
              {
                "name": "FAIL_KUBE_REQUEST_ENFORCEMENT",
                "integer": 5
              },
              {
                "name": "FAIL_DEPLOYMENT_CREATE_ENFORCEMENT",
                "integer": 6
              },
              {
                "name": "FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT",
                "integer": 7
              }
            ]
          },
          {
            "name": "Severity",
            "enum_fields": [
              {
                "name": "UNSET_SEVERITY"
              },
              {
                "name": "LOW_SEVERITY",
                "integer": 1
              },
              {
                "name": "MEDIUM_SEVERITY",
                "integer": 2
              },
              {
                "name": "HIGH_SEVERITY",
                "integer": 3
              },
              {
                "name": "CRITICAL_SEVERITY",
                "integer": 4
              }
            ]
          },
          {
            "name": "LifecycleStage",
            "enum_fields": [
              {
                "name": "DEPLOY"
              },
              {
                "name": "BUILD",
                "integer": 1
              },
              {
                "name": "RUNTIME",
                "integer": 2
              }
            ]
          },
          {
            "name": "Comparator",
            "enum_fields": [
              {
                "name": "LESS_THAN"
              },
              {
                "name": "LESS_THAN_OR_EQUALS",
                "integer": 1
              },
              {
                "name": "EQUALS",
                "integer": 2
              },
              {
                "name": "GREATER_THAN_OR_EQUALS",
                "integer": 3
              },
              {
                "name": "GREATER_THAN",
                "integer": 4
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Policy",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "rationale",
                "type": "string"
              },
              {
                "id": 5,
                "name": "remediation",
                "type": "string"
              },
              {
                "id": 6,
                "name": "disabled",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "categories",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "lifecycle_stages",
                "type": "LifecycleStage",
                "is_repeated": true
              },
              {
                "id": 22,
                "name": "event_source",
                "type": "EventSource"
              },
              {
                "id": 21,
                "name": "exclusions",
                "type": "Exclusion",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "scope",
                "type": "Scope",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "severity",
                "type": "Severity"
              },
              {
                "id": 13,
                "name": "enforcement_actions",
                "type": "EnforcementAction",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "notifiers",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 15,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 16,
                "name": "SORT_name",
                "type": "string"
              },
              {
                "id": 17,
                "name": "SORT_lifecycleStage",
                "type": "string"
              },
              {
                "id": 18,
                "name": "SORT_enforcement",
                "type": "bool"
              },
              {
                "id": 19,
                "name": "policy_version",
                "type": "string"
              },
              {
                "id": 20,
                "name": "policy_sections",
                "type": "PolicySection",
                "is_repeated": true
              },
              {
                "id": 23,
                "name": "mitre_attack_vectors",
                "type": "MitreAttackVectors",
                "is_repeated": true
              },
              {
                "id": 24,
                "name": "criteria_locked",
                "type": "bool"
              },
              {
                "id": 25,
                "name": "mitre_vectors_locked",
                "type": "bool"
              },
              {
                "id": 26,
                "name": "is_default",
                "type": "bool"
              }
            ],
            "reserved_ids": [
              8,
              10
            ],
            "messages": [
              {
                "name": "MitreAttackVectors",
                "fields": [
                  {
                    "id": 1,
                    "name": "tactic",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "techniques",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              }
            ]
          },
          {
            "name": "PolicySection",
            "fields": [
              {
                "id": 1,
                "name": "section_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "policy_groups",
                "type": "PolicyGroup",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyGroup",
            "fields": [
              {
                "id": 1,
                "name": "field_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "boolean_operator",
                "type": "BooleanOperator"
              },
              {
                "id": 3,
                "name": "negate",
                "type": "bool"
              },
              {
                "id": 4,
                "name": "values",
                "type": "PolicyValue",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "PolicyValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "PolicyList",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "Policy",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ListPolicy",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "severity",
                "type": "Severity"
              },
              {
                "id": 5,
                "name": "disabled",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "lifecycle_stages",
                "type": "LifecycleStage",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "notifiers",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "event_source",
                "type": "EventSource"
              },
              {
                "id": 10,
                "name": "is_default",
                "type": "bool"
              }
            ]
          },
          {
            "name": "Component",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              }
            ]
          },
          {
            "name": "DockerfileLineRuleField",
            "fields": [
              {
                "id": 1,
                "name": "instruction",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "KeyValuePolicy",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "env_var_source",
                "type": "ContainerConfig.EnvironmentConfig.EnvVarSource"
              }
            ]
          },
          {
            "name": "VolumePolicy",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "source",
                "type": "string"
              },
              {
                "id": 3,
                "name": "destination",
                "type": "string"
              },
              {
                "id": 4,
                "name": "read_only",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "type",
                "type": "string"
              }
            ]
          },
          {
            "name": "HostMountPolicy",
            "fields": [
              {
                "id": 1,
                "name": "read_only",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ProcessPolicy",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "args",
                "type": "string"
              },
              {
                "id": 3,
                "name": "ancestor",
                "type": "string"
              },
              {
                "id": 4,
                "name": "uid",
                "type": "string"
              }
            ]
          },
          {
            "name": "ResourcePolicy",
            "fields": [
              {
                "id": 1,
                "name": "cpu_resource_request",
                "type": "NumericalPolicy"
              },
              {
                "id": 2,
                "name": "cpu_resource_limit",
                "type": "NumericalPolicy"
              },
              {
                "id": 3,
                "name": "memory_resource_request",
                "type": "NumericalPolicy"
              },
              {
                "id": 4,
                "name": "memory_resource_limit",
                "type": "NumericalPolicy"
              }
            ]
          },
          {
            "name": "NumericalPolicy",
            "fields": [
              {
                "id": 1,
                "name": "op",
                "type": "Comparator"
              },
              {
                "id": 3,
                "name": "value",
                "type": "float"
              }
            ]
          },
          {
            "name": "PortPolicy",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "string"
              }
            ]
          },
          {
            "name": "PermissionPolicy",
            "fields": [
              {
                "id": 1,
                "name": "permission_level",
                "type": "PermissionLevel"
              }
            ]
          },
          {
            "name": "ImageNamePolicy",
            "fields": [
              {
                "id": 1,
                "name": "registry",
                "type": "string"
              },
              {
                "id": 2,
                "name": "remote",
                "type": "string"
              },
              {
                "id": 3,
                "name": "tag",
                "type": "string"
              }
            ]
          },
          {
            "name": "PortExposurePolicy",
            "fields": [
              {
                "id": 1,
                "name": "exposure_levels",
                "type": "PortConfig.ExposureLevel",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "Exclusion",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "deployment",
                "type": "Deployment"
              },
              {
                "id": 7,
                "name": "image",
                "type": "Image"
              },
              {
                "id": 6,
                "name": "expiration",
                "type": "google.protobuf.Timestamp"
              }
            ],
            "reserved_ids": [
              2
            ],
            "messages": [
              {
                "name": "Container",
                "fields": [
                  {
                    "id": 3,
                    "name": "image_name",
                    "type": "ImageName"
                  }
                ]
              },
              {
                "name": "Deployment",
                "fields": [
                  {
                    "id": 3,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 4,
                    "name": "scope",
                    "type": "Scope"
                  }
                ]
              },
              {
                "name": "Image",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ExportPoliciesResponse",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "storage.Policy",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/scope.proto"
          },
          {
            "path": "storage/image.proto"
          },
          {
            "path": "storage/deployment.proto"
          },
          {
            "path": "storage/rbac.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:policy_category.proto",
      "def": {
        "messages": [
          {
            "name": "PolicyCategory",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "isDefault",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:process_baseline.proto",
      "def": {
        "enums": [
          {
            "name": "ContainerNameAndBaselineStatus.BaselineStatus",
            "enum_fields": [
              {
                "name": "INVALID"
              },
              {
                "name": "NOT_GENERATED",
                "integer": 1
              },
              {
                "name": "UNLOCKED",
                "integer": 2
              },
              {
                "name": "LOCKED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ProcessBaselineKey",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProcessBaseline",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key",
                "type": "ProcessBaselineKey"
              },
              {
                "id": 3,
                "name": "elements",
                "type": "BaselineElement",
                "is_repeated": true
              },
              {
                "id": 8,
                "name": "element_graveyard",
                "type": "BaselineElement",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "created",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "user_locked_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "stack_rox_locked_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "last_update",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "BaselineElement",
            "fields": [
              {
                "id": 1,
                "name": "element",
                "type": "BaselineItem"
              },
              {
                "id": 2,
                "name": "auto",
                "type": "bool"
              }
            ]
          },
          {
            "name": "BaselineItem",
            "fields": [
              {
                "id": 1,
                "name": "process_name",
                "type": "string"
              }
            ]
          },
          {
            "name": "ContainerNameAndBaselineStatus",
            "fields": [
              {
                "id": 1,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "baseline_status",
                "type": "BaselineStatus"
              },
              {
                "id": 3,
                "name": "anomalous_processes_executed",
                "type": "bool"
              }
            ]
          },
          {
            "name": "ProcessBaselineResults",
            "fields": [
              {
                "id": 1,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 2,
                "name": "baseline_statuses",
                "type": "ContainerNameAndBaselineStatus",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:process_indicator.proto",
      "def": {
        "messages": [
          {
            "name": "ProcessIndicator",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "pod_id",
                "type": "string"
              },
              {
                "id": 11,
                "name": "pod_uid",
                "type": "string"
              },
              {
                "id": 6,
                "name": "signal",
                "type": "ProcessSignal"
              },
              {
                "id": 7,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 9,
                "name": "container_start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 12,
                "name": "image_id",
                "type": "string"
              }
            ],
            "reserved_ids": [
              10,
              5
            ]
          },
          {
            "name": "ProcessIndicatorUniqueKey",
            "fields": [
              {
                "id": 1,
                "name": "pod_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "process_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "process_exec_file_path",
                "type": "string"
              },
              {
                "id": 5,
                "name": "process_args",
                "type": "string"
              }
            ]
          },
          {
            "name": "NetworkProcessUniqueKey",
            "fields": [
              {
                "id": 1,
                "name": "process_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "process_exec_file_path",
                "type": "string"
              },
              {
                "id": 3,
                "name": "process_args",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProcessSignal",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "container_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 4,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "args",
                "type": "string"
              },
              {
                "id": 6,
                "name": "exec_file_path",
                "type": "string"
              },
              {
                "id": 7,
                "name": "pid",
                "type": "uint32"
              },
              {
                "id": 8,
                "name": "uid",
                "type": "uint32"
              },
              {
                "id": 9,
                "name": "gid",
                "type": "uint32"
              },
              {
                "id": 10,
                "name": "lineage",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "scraped",
                "type": "bool"
              },
              {
                "id": 12,
                "name": "lineage_info",
                "type": "LineageInfo",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "LineageInfo",
                "fields": [
                  {
                    "id": 1,
                    "name": "parent_uid",
                    "type": "uint32"
                  },
                  {
                    "id": 2,
                    "name": "parent_exec_file_path",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:process_listening_on_port.proto",
      "def": {
        "messages": [
          {
            "name": "ProcessListeningOnPort",
            "fields": [
              {
                "id": 1,
                "name": "endpoint",
                "type": "Endpoint"
              },
              {
                "id": 2,
                "name": "deployment_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "container_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "pod_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "pod_uid",
                "type": "string"
              },
              {
                "id": 6,
                "name": "signal",
                "type": "ProcessSignal"
              },
              {
                "id": 7,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 9,
                "name": "container_start_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "image_id",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Endpoint",
                "fields": [
                  {
                    "id": 1,
                    "name": "port",
                    "type": "uint32"
                  },
                  {
                    "id": 2,
                    "name": "protocol",
                    "type": "L4Protocol"
                  }
                ]
              }
            ]
          },
          {
            "name": "ProcessListeningOnPortFromSensor",
            "fields": [
              {
                "id": 1,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 2,
                "name": "protocol",
                "type": "L4Protocol"
              },
              {
                "id": 3,
                "name": "process",
                "type": "ProcessIndicatorUniqueKey"
              },
              {
                "id": 4,
                "name": "close_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ProcessListeningOnPortStorage",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "port",
                "type": "uint32"
              },
              {
                "id": 3,
                "name": "protocol",
                "type": "L4Protocol"
              },
              {
                "id": 4,
                "name": "close_timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "process_indicator_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "closed",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "process",
                "type": "ProcessIndicatorUniqueKey"
              },
              {
                "id": 8,
                "name": "deployment_id",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/network_flow.proto"
          },
          {
            "path": "storage/process_indicator.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:rbac.proto",
      "def": {
        "enums": [
          {
            "name": "SubjectKind",
            "enum_fields": [
              {
                "name": "UNSET_KIND"
              },
              {
                "name": "SERVICE_ACCOUNT",
                "integer": 1
              },
              {
                "name": "USER",
                "integer": 2
              },
              {
                "name": "GROUP",
                "integer": 3
              }
            ]
          },
          {
            "name": "PermissionLevel",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "NONE",
                "integer": 1
              },
              {
                "name": "DEFAULT",
                "integer": 2
              },
              {
                "name": "ELEVATED_IN_NAMESPACE",
                "integer": 3
              },
              {
                "name": "ELEVATED_CLUSTER_WIDE",
                "integer": 4
              },
              {
                "name": "CLUSTER_ADMIN",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "K8sRole",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_role",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "rules",
                "type": "PolicyRule",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "PolicyRule",
            "fields": [
              {
                "id": 1,
                "name": "verbs",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "api_groups",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "resources",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "non_resource_urls",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "resource_names",
                "type": "string",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "K8sRoleBinding",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_role",
                "type": "bool"
              },
              {
                "id": 9,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "subjects",
                "type": "Subject",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "role_id",
                "type": "string"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "Subject",
            "fields": [
              {
                "id": 4,
                "name": "id",
                "type": "string"
              },
              {
                "id": 1,
                "name": "kind",
                "type": "SubjectKind"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 6,
                "name": "cluster_name",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:relations.proto",
      "def": {
        "messages": [
          {
            "name": "ImageComponentEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "layer_index",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "location",
                "type": "string"
              },
              {
                "id": 4,
                "name": "image_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "image_component_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ComponentCVEEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "is_fixable",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 4,
                "name": "image_component_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "image_cve_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImageCVEEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "first_image_occurrence",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "state",
                "type": "VulnerabilityState"
              },
              {
                "id": 4,
                "name": "image_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "image_cve_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NodeComponentEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "node_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "node_component_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NodeComponentCVEEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "is_fixable",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 4,
                "name": "node_component_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "node_cve_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ClusterCVEEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "is_fixable",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cve_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "PolicyCategoryEdge",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "policy_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "category_id",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/cve.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:report_configuration.proto",
      "def": {
        "enums": [
          {
            "name": "ReportConfiguration.ReportType",
            "enum_fields": [
              {
                "name": "VULNERABILITY"
              }
            ]
          },
          {
            "name": "ReportLastRunStatus.RunStatus",
            "enum_fields": [
              {
                "name": "SUCCESS"
              },
              {
                "name": "FAILURE",
                "integer": 1
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.Fixability",
            "enum_fields": [
              {
                "name": "BOTH"
              },
              {
                "name": "FIXABLE",
                "integer": 1
              },
              {
                "name": "NOT_FIXABLE",
                "integer": 2
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters.ImageType",
            "enum_fields": [
              {
                "name": "DEPLOYED"
              },
              {
                "name": "WATCHED",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ReportConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "ReportType"
              },
              {
                "id": 5,
                "name": "vuln_report_filters",
                "type": "VulnerabilityReportFilters"
              },
              {
                "id": 6,
                "name": "scope_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "email_config",
                "type": "EmailNotifierConfiguration"
              },
              {
                "id": 8,
                "name": "schedule",
                "type": "storage.Schedule"
              },
              {
                "id": 9,
                "name": "last_run_status",
                "type": "ReportLastRunStatus"
              },
              {
                "id": 10,
                "name": "last_successful_run_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 11,
                "name": "resource_scope",
                "type": "ResourceScope"
              },
              {
                "id": 12,
                "name": "notifiers",
                "type": "NotifierConfiguration",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "ReportLastRunStatus",
            "fields": [
              {
                "id": 1,
                "name": "report_status",
                "type": "RunStatus"
              },
              {
                "id": 2,
                "name": "last_run_time",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 3,
                "name": "error_msg",
                "type": "string"
              }
            ]
          },
          {
            "name": "VulnerabilityReportFilters",
            "fields": [
              {
                "id": 1,
                "name": "fixability",
                "type": "Fixability"
              },
              {
                "id": 2,
                "name": "since_last_report",
                "type": "bool"
              },
              {
                "id": 3,
                "name": "severities",
                "type": "VulnerabilitySeverity",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "image_types",
                "type": "ImageType",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "all_vuln",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "last_successful_report",
                "type": "bool"
              },
              {
                "id": 7,
                "name": "start_date",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "ResourceScope",
            "fields": [
              {
                "id": 1,
                "name": "collection_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "NotifierConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "email_config",
                "type": "EmailNotifierConfiguration"
              }
            ]
          },
          {
            "name": "EmailNotifierConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "notifier_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "mailing_lists",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/cve.proto"
          },
          {
            "path": "storage/schedule.proto"
          },
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:resource_collection.proto",
      "def": {
        "enums": [
          {
            "name": "MatchType",
            "enum_fields": [
              {
                "name": "EXACT"
              },
              {
                "name": "REGEX",
                "integer": 1
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ResourceCollection",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "created_by",
                "type": "SlimUser"
              },
              {
                "id": 7,
                "name": "updated_by",
                "type": "SlimUser"
              },
              {
                "id": 8,
                "name": "resource_selectors",
                "type": "ResourceSelector",
                "is_repeated": true
              },
              {
                "id": 9,
                "name": "embedded_collections",
                "type": "EmbeddedResourceCollection",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "EmbeddedResourceCollection",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "ResourceSelector",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "SelectorRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SelectorRule",
            "fields": [
              {
                "id": 1,
                "name": "field_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "operator",
                "type": "BooleanOperator"
              },
              {
                "id": 3,
                "name": "values",
                "type": "RuleValue",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "RuleValue",
            "fields": [
              {
                "id": 1,
                "name": "value",
                "type": "string"
              },
              {
                "id": 2,
                "name": "match_type",
                "type": "MatchType"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/user.proto"
          },
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:risk.proto",
      "def": {
        "enums": [
          {
            "name": "RiskSubjectType",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "DEPLOYMENT",
                "integer": 1
              },
              {
                "name": "NAMESPACE",
                "integer": 2
              },
              {
                "name": "CLUSTER",
                "integer": 3
              },
              {
                "name": "NODE",
                "integer": 7
              },
              {
                "name": "NODE_COMPONENT",
                "integer": 8
              },
              {
                "name": "IMAGE",
                "integer": 4
              },
              {
                "name": "IMAGE_COMPONENT",
                "integer": 6
              },
              {
                "name": "SERVICEACCOUNT",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Risk",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "subject",
                "type": "RiskSubject"
              },
              {
                "id": 3,
                "name": "score",
                "type": "float"
              },
              {
                "id": 4,
                "name": "results",
                "type": "Result",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Result",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "factors",
                    "type": "Factor",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "score",
                    "type": "float"
                  }
                ],
                "messages": [
                  {
                    "name": "Factor",
                    "fields": [
                      {
                        "id": 1,
                        "name": "message",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "url",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "RiskSubject",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "type",
                "type": "RiskSubjectType"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:role.proto",
      "def": {
        "enums": [
          {
            "name": "Access",
            "enum_fields": [
              {
                "name": "NO_ACCESS"
              },
              {
                "name": "READ_ACCESS",
                "integer": 1
              },
              {
                "name": "READ_WRITE_ACCESS",
                "integer": 2
              }
            ]
          },
          {
            "name": "EffectiveAccessScope.State",
            "enum_fields": [
              {
                "name": "UNKNOWN"
              },
              {
                "name": "INCLUDED",
                "integer": 1
              },
              {
                "name": "EXCLUDED",
                "integer": 2
              },
              {
                "name": "PARTIAL",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Role",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "description",
                "type": "string"
              },
              {
                "id": 6,
                "name": "permission_set_id",
                "type": "string"
              },
              {
                "id": 7,
                "name": "access_scope_id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "global_access",
                "type": "Access"
              },
              {
                "id": 8,
                "name": "traits",
                "type": "Traits"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 3,
                  "name": "resource_to_access",
                  "type": "Access"
                }
              }
            ],
            "reserved_ids": [
              4
            ]
          },
          {
            "name": "PermissionSet",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 5,
                "name": "traits",
                "type": "Traits"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "resource_to_access",
                  "type": "Access"
                }
              }
            ]
          },
          {
            "name": "SimpleAccessScope",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "description",
                "type": "string"
              },
              {
                "id": 4,
                "name": "rules",
                "type": "Rules"
              },
              {
                "id": 5,
                "name": "traits",
                "type": "Traits"
              }
            ],
            "messages": [
              {
                "name": "Rules",
                "fields": [
                  {
                    "id": 1,
                    "name": "included_clusters",
                    "type": "string",
                    "is_repeated": true
                  },
                  {
                    "id": 2,
                    "name": "included_namespaces",
                    "type": "Namespace",
                    "is_repeated": true
                  },
                  {
                    "id": 3,
                    "name": "cluster_label_selectors",
                    "type": "SetBasedLabelSelector",
                    "is_repeated": true
                  },
                  {
                    "id": 4,
                    "name": "namespace_label_selectors",
                    "type": "SetBasedLabelSelector",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "Namespace",
                    "fields": [
                      {
                        "id": 1,
                        "name": "cluster_name",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "namespace_name",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "EffectiveAccessScope",
            "fields": [
              {
                "id": 1,
                "name": "clusters",
                "type": "Cluster",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Namespace",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "state",
                    "type": "State"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 4,
                      "name": "labels",
                      "type": "string"
                    }
                  }
                ]
              },
              {
                "name": "Cluster",
                "fields": [
                  {
                    "id": 1,
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "state",
                    "type": "State"
                  },
                  {
                    "id": 4,
                    "name": "namespaces",
                    "type": "Namespace",
                    "is_repeated": true
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 5,
                      "name": "labels",
                      "type": "string"
                    }
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/labels.proto"
          },
          {
            "path": "storage/traits.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:schedule.proto",
      "def": {
        "enums": [
          {
            "name": "Schedule.IntervalType",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "DAILY",
                "integer": 1
              },
              {
                "name": "WEEKLY",
                "integer": 2
              },
              {
                "name": "MONTHLY",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Schedule",
            "fields": [
              {
                "id": 1,
                "name": "interval_type",
                "type": "IntervalType"
              },
              {
                "id": 2,
                "name": "hour",
                "type": "int32"
              },
              {
                "id": 3,
                "name": "minute",
                "type": "int32"
              },
              {
                "id": 4,
                "name": "weekly",
                "type": "WeeklyInterval"
              },
              {
                "id": 5,
                "name": "days_of_week",
                "type": "DaysOfWeek"
              },
              {
                "id": 6,
                "name": "days_of_month",
                "type": "DaysOfMonth"
              }
            ],
            "messages": [
              {
                "name": "WeeklyInterval",
                "fields": [
                  {
                    "id": 1,
                    "name": "day",
                    "type": "int32"
                  }
                ]
              },
              {
                "name": "DaysOfWeek",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "DaysOfMonth",
                "fields": [
                  {
                    "id": 1,
                    "name": "days",
                    "type": "int32",
                    "is_repeated": true
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:scope.proto",
      "def": {
        "messages": [
          {
            "name": "Scope",
            "fields": [
              {
                "id": 1,
                "name": "cluster",
                "type": "string"
              },
              {
                "id": 2,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 3,
                "name": "label",
                "type": "Label"
              }
            ],
            "messages": [
              {
                "name": "Label",
                "fields": [
                  {
                    "id": 1,
                    "name": "key",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "value",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:secret.proto",
      "def": {
        "enums": [
          {
            "name": "SecretType",
            "enum_fields": [
              {
                "name": "UNDETERMINED"
              },
              {
                "name": "PUBLIC_CERTIFICATE",
                "integer": 1
              },
              {
                "name": "CERTIFICATE_REQUEST",
                "integer": 2
              },
              {
                "name": "PRIVACY_ENHANCED_MESSAGE",
                "integer": 3
              },
              {
                "name": "OPENSSH_PRIVATE_KEY",
                "integer": 4
              },
              {
                "name": "PGP_PRIVATE_KEY",
                "integer": 5
              },
              {
                "name": "EC_PRIVATE_KEY",
                "integer": 6
              },
              {
                "name": "RSA_PRIVATE_KEY",
                "integer": 7
              },
              {
                "name": "DSA_PRIVATE_KEY",
                "integer": 8
              },
              {
                "name": "CERT_PRIVATE_KEY",
                "integer": 9
              },
              {
                "name": "ENCRYPTED_PRIVATE_KEY",
                "integer": 10
              },
              {
                "name": "IMAGE_PULL_SECRET",
                "integer": 11
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Secret",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 6,
                "name": "type",
                "type": "string"
              },
              {
                "id": 9,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "files",
                "type": "SecretDataFile",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "relationship",
                "type": "SecretRelationship"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          },
          {
            "name": "ListSecret",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 7,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 5,
                "name": "types",
                "type": "SecretType",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "SecretRelationship",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "container_relationships",
                "type": "SecretContainerRelationship",
                "is_repeated": true
              },
              {
                "id": 5,
                "name": "deployment_relationships",
                "type": "SecretDeploymentRelationship",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "SecretDeploymentRelationship",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "SecretContainerRelationship",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              }
            ]
          },
          {
            "name": "ImagePullSecret",
            "fields": [
              {
                "id": 1,
                "name": "registries",
                "type": "Registry",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "Registry",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "username",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "SecretDataFile",
            "fields": [
              {
                "id": 1,
                "name": "name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "type",
                "type": "SecretType"
              },
              {
                "id": 3,
                "name": "cert",
                "type": "Cert"
              },
              {
                "id": 4,
                "name": "image_pull_secret",
                "type": "ImagePullSecret"
              }
            ]
          },
          {
            "name": "Cert",
            "fields": [
              {
                "id": 1,
                "name": "subject",
                "type": "CertName"
              },
              {
                "id": 2,
                "name": "issuer",
                "type": "CertName"
              },
              {
                "id": 3,
                "name": "sans",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "start_date",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 5,
                "name": "end_date",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 6,
                "name": "algorithm",
                "type": "string"
              }
            ]
          },
          {
            "name": "CertName",
            "fields": [
              {
                "id": 1,
                "name": "common_name",
                "type": "string"
              },
              {
                "id": 2,
                "name": "country",
                "type": "string"
              },
              {
                "id": 3,
                "name": "organization",
                "type": "string"
              },
              {
                "id": 4,
                "name": "organization_unit",
                "type": "string"
              },
              {
                "id": 5,
                "name": "locality",
                "type": "string"
              },
              {
                "id": 6,
                "name": "province",
                "type": "string"
              },
              {
                "id": 7,
                "name": "street_address",
                "type": "string"
              },
              {
                "id": 8,
                "name": "postal_code",
                "type": "string"
              },
              {
                "id": 9,
                "name": "names",
                "type": "string",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:sensor_upgrade.proto",
      "def": {
        "messages": [
          {
            "name": "SensorUpgradeConfig",
            "fields": [
              {
                "id": 1,
                "name": "enable_auto_upgrade",
                "type": "bool"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:service_account.proto",
      "def": {
        "messages": [
          {
            "name": "ServiceAccount",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "namespace",
                "type": "string"
              },
              {
                "id": 4,
                "name": "cluster_name",
                "type": "string"
              },
              {
                "id": 5,
                "name": "cluster_id",
                "type": "string"
              },
              {
                "id": 8,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "automount_token",
                "type": "bool"
              },
              {
                "id": 10,
                "name": "secrets",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 11,
                "name": "image_pull_secrets",
                "type": "string",
                "is_repeated": true
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 6,
                  "name": "labels",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 7,
                  "name": "annotations",
                  "type": "string"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:service_identity.proto",
      "def": {
        "enums": [
          {
            "name": "ServiceType",
            "enum_fields": [
              {
                "name": "UNKNOWN_SERVICE"
              },
              {
                "name": "SENSOR_SERVICE",
                "integer": 1
              },
              {
                "name": "CENTRAL_SERVICE",
                "integer": 2
              },
              {
                "name": "CENTRAL_DB_SERVICE",
                "integer": 12
              },
              {
                "name": "REMOTE_SERVICE",
                "integer": 3
              },
              {
                "name": "COLLECTOR_SERVICE",
                "integer": 4
              },
              {
                "name": "MONITORING_UI_SERVICE",
                "integer": 5
              },
              {
                "name": "MONITORING_DB_SERVICE",
                "integer": 6
              },
              {
                "name": "MONITORING_CLIENT_SERVICE",
                "integer": 7
              },
              {
                "name": "BENCHMARK_SERVICE",
                "integer": 8
              },
              {
                "name": "SCANNER_SERVICE",
                "integer": 9
              },
              {
                "name": "SCANNER_DB_SERVICE",
                "integer": 10
              },
              {
                "name": "ADMISSION_CONTROL_SERVICE",
                "integer": 11
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "ServiceIdentity",
            "fields": [
              {
                "id": 4,
                "name": "serial_str",
                "type": "string"
              },
              {
                "id": 1,
                "name": "serial",
                "type": "int64"
              },
              {
                "id": 2,
                "name": "id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "type",
                "type": "ServiceType"
              },
              {
                "id": 5,
                "name": "init_bundle_id",
                "type": "string"
              }
            ]
          },
          {
            "name": "ServiceCertificate",
            "fields": [
              {
                "id": 1,
                "name": "cert_pem",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "key_pem",
                "type": "bytes"
              }
            ]
          },
          {
            "name": "TypedServiceCertificate",
            "fields": [
              {
                "id": 1,
                "name": "service_type",
                "type": "ServiceType"
              },
              {
                "id": 2,
                "name": "cert",
                "type": "ServiceCertificate"
              }
            ]
          },
          {
            "name": "TypedServiceCertificateSet",
            "fields": [
              {
                "id": 1,
                "name": "ca_pem",
                "type": "bytes"
              },
              {
                "id": 2,
                "name": "service_certs",
                "type": "TypedServiceCertificate",
                "is_repeated": true
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:signature_integration.proto",
      "def": {
        "messages": [
          {
            "name": "SignatureIntegration",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "cosign",
                "type": "CosignPublicKeyVerification"
              }
            ]
          },
          {
            "name": "CosignPublicKeyVerification",
            "fields": [
              {
                "id": 3,
                "name": "public_keys",
                "type": "PublicKey",
                "is_repeated": true
              }
            ],
            "messages": [
              {
                "name": "PublicKey",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "public_key_pem_enc",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:system_info.proto",
      "def": {
        "messages": [
          {
            "name": "BackupInfo",
            "fields": [
              {
                "id": 1,
                "name": "backup_last_run_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 2,
                "name": "status",
                "type": "OperationStatus"
              },
              {
                "id": 3,
                "name": "requestor",
                "type": "SlimUser"
              }
            ]
          },
          {
            "name": "SystemInfo",
            "fields": [
              {
                "id": 1,
                "name": "backup_info",
                "type": "BackupInfo"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/operation_status.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:taints.proto",
      "def": {
        "enums": [
          {
            "name": "TaintEffect",
            "enum_fields": [
              {
                "name": "UNKNOWN_TAINT_EFFECT"
              },
              {
                "name": "NO_SCHEDULE_TAINT_EFFECT",
                "integer": 1
              },
              {
                "name": "PREFER_NO_SCHEDULE_TAINT_EFFECT",
                "integer": 2
              },
              {
                "name": "NO_EXECUTE_TAINT_EFFECT",
                "integer": 3
              }
            ]
          },
          {
            "name": "Toleration.Operator",
            "enum_fields": [
              {
                "name": "TOLERATION_OPERATION_UNKNOWN"
              },
              {
                "name": "TOLERATION_OPERATOR_EXISTS",
                "integer": 1
              },
              {
                "name": "TOLERATION_OPERATOR_EQUAL",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Taint",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              },
              {
                "id": 3,
                "name": "taint_effect",
                "type": "TaintEffect"
              }
            ]
          },
          {
            "name": "Toleration",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "operator",
                "type": "Operator"
              },
              {
                "id": 3,
                "name": "value",
                "type": "string"
              },
              {
                "id": 4,
                "name": "taint_effect",
                "type": "TaintEffect"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:telemetry.proto",
      "def": {
        "messages": [
          {
            "name": "TelemetryConfiguration",
            "fields": [
              {
                "id": 1,
                "name": "enabled",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "last_set_time",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:test.proto",
      "def": {
        "enums": [
          {
            "name": "TestSingleKeyStruct.Enum",
            "enum_fields": [
              {
                "name": "ENUM0"
              },
              {
                "name": "ENUM1",
                "integer": 1
              },
              {
                "name": "ENUM2",
                "integer": 2
              }
            ]
          },
          {
            "name": "TestSingleUUIDKeyStruct.Enum",
            "enum_fields": [
              {
                "name": "ENUM0"
              },
              {
                "name": "ENUM1",
                "integer": 1
              },
              {
                "name": "ENUM2",
                "integer": 2
              }
            ]
          },
          {
            "name": "TestMultiKeyStruct.Enum",
            "enum_fields": [
              {
                "name": "ENUM0"
              },
              {
                "name": "ENUM1",
                "integer": 1
              },
              {
                "name": "ENUM2",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "TestSingleKeyStruct",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "bool",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "uint64",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "int64",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "float",
                "type": "float"
              },
              {
                "id": 9,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "enum",
                "type": "Enum"
              },
              {
                "id": 11,
                "name": "enums",
                "type": "Enum",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "embedded",
                "type": "Embedded"
              },
              {
                "id": 13,
                "name": "nested",
                "type": "Nested",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "oneofstring",
                "type": "string"
              },
              {
                "id": 15,
                "name": "oneofnested",
                "type": "OneOfNested"
              },
              {
                "id": 16,
                "name": "bytess",
                "type": "bytes"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "labels",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Embedded",
                "fields": [
                  {
                    "id": 1,
                    "name": "embedded",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "Embedded2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "embedded",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Nested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "OneOfNested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "TestSingleUUIDKeyStruct",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              },
              {
                "id": 3,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "bool",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "uint64",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "int64",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "float",
                "type": "float"
              },
              {
                "id": 9,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "enum",
                "type": "Enum"
              },
              {
                "id": 11,
                "name": "enums",
                "type": "Enum",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "embedded",
                "type": "Embedded"
              },
              {
                "id": 13,
                "name": "nested",
                "type": "Nested",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "oneofstring",
                "type": "string"
              },
              {
                "id": 15,
                "name": "oneofnested",
                "type": "OneOfNested"
              },
              {
                "id": 16,
                "name": "bytess",
                "type": "bytes"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "labels",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Embedded",
                "fields": [
                  {
                    "id": 1,
                    "name": "embedded",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "Embedded2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "embedded",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Nested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "OneOfNested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "TestMultiKeyStruct",
            "fields": [
              {
                "id": 1,
                "name": "key1",
                "type": "string"
              },
              {
                "id": 2,
                "name": "key2",
                "type": "string"
              },
              {
                "id": 3,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "bool",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "uint64",
                "type": "uint64"
              },
              {
                "id": 6,
                "name": "int64",
                "type": "int64"
              },
              {
                "id": 7,
                "name": "float",
                "type": "float"
              },
              {
                "id": 9,
                "name": "timestamp",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "enum",
                "type": "Enum"
              },
              {
                "id": 11,
                "name": "enums",
                "type": "Enum",
                "is_repeated": true
              },
              {
                "id": 16,
                "name": "string",
                "type": "string"
              },
              {
                "id": 17,
                "name": "int_slice_deprecated",
                "type": "int64",
                "is_repeated": true
              },
              {
                "id": 18,
                "name": "int32_slice",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "embedded",
                "type": "Embedded"
              },
              {
                "id": 13,
                "name": "nested",
                "type": "Nested",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "oneofstring",
                "type": "string"
              },
              {
                "id": 15,
                "name": "oneofnested",
                "type": "OneOfNested"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 8,
                  "name": "labels",
                  "type": "string"
                }
              }
            ],
            "messages": [
              {
                "name": "Embedded",
                "fields": [
                  {
                    "id": 1,
                    "name": "embedded",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "Embedded2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "embedded",
                        "type": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "Nested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  },
                  {
                    "id": 3,
                    "name": "is_nested",
                    "type": "bool"
                  },
                  {
                    "id": 4,
                    "name": "int64",
                    "type": "int64"
                  },
                  {
                    "id": 2,
                    "name": "nested2",
                    "type": "Nested2"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "is_nested",
                        "type": "bool"
                      },
                      {
                        "id": 4,
                        "name": "int64",
                        "type": "int64"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "OneOfNested",
                "fields": [
                  {
                    "id": 1,
                    "name": "nested",
                    "type": "string"
                  }
                ],
                "messages": [
                  {
                    "name": "Nested2",
                    "fields": [
                      {
                        "id": 2,
                        "name": "nested2",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "TestGrandparent",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "val",
                "type": "string"
              },
              {
                "id": 3,
                "name": "embedded",
                "type": "Embedded",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "priority",
                "type": "int64"
              },
              {
                "id": 5,
                "name": "risk_score",
                "type": "float"
              }
            ],
            "messages": [
              {
                "name": "Embedded",
                "fields": [
                  {
                    "id": 1,
                    "name": "val",
                    "type": "string"
                  },
                  {
                    "id": 2,
                    "name": "embedded2",
                    "type": "Embedded2",
                    "is_repeated": true
                  }
                ],
                "messages": [
                  {
                    "name": "Embedded2",
                    "fields": [
                      {
                        "id": 1,
                        "name": "val",
                        "type": "string"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "name": "TestParent1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "children",
                "type": "Child1Ref",
                "is_repeated": true
              },
              {
                "id": 4,
                "name": "val",
                "type": "string"
              }
            ],
            "messages": [
              {
                "name": "Child1Ref",
                "fields": [
                  {
                    "id": 1,
                    "name": "child_id",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "name": "TestChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestGrandChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "child_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestGGrandChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestG2GrandChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "child_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestG3GrandChild1",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestParent2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestChild2",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "grandparent_id",
                "type": "string"
              },
              {
                "id": 4,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestParent3",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestParent4",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestChild1P4",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "parent_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "val",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestShortCircuit",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "child_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "g2_grandchild_id",
                "type": "string"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:traits.proto",
      "def": {
        "enums": [
          {
            "name": "Traits.MutabilityMode",
            "enum_fields": [
              {
                "name": "ALLOW_MUTATE"
              },
              {
                "name": "ALLOW_MUTATE_FORCED",
                "integer": 1
              }
            ]
          },
          {
            "name": "Traits.Visibility",
            "enum_fields": [
              {
                "name": "VISIBLE"
              },
              {
                "name": "HIDDEN",
                "integer": 1
              }
            ]
          },
          {
            "name": "Traits.Origin",
            "enum_fields": [
              {
                "name": "IMPERATIVE"
              },
              {
                "name": "DEFAULT",
                "integer": 1
              },
              {
                "name": "DECLARATIVE",
                "integer": 2
              },
              {
                "name": "DECLARATIVE_ORPHANED",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "Traits",
            "fields": [
              {
                "id": 1,
                "name": "mutability_mode",
                "type": "MutabilityMode"
              },
              {
                "id": 2,
                "name": "visibility",
                "type": "Visibility"
              },
              {
                "id": 3,
                "name": "origin",
                "type": "Origin"
              }
            ]
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:user.proto",
      "def": {
        "messages": [
          {
            "name": "SlimUser",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "name",
                "type": "string"
              }
            ]
          },
          {
            "name": "User",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "auth_provider_id",
                "type": "string"
              },
              {
                "id": 3,
                "name": "attributes",
                "type": "UserAttribute",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "UserAttribute",
            "fields": [
              {
                "id": 1,
                "name": "key",
                "type": "string"
              },
              {
                "id": 2,
                "name": "value",
                "type": "string"
              }
            ]
          },
          {
            "name": "UserInfo",
            "fields": [
              {
                "id": 1,
                "name": "username",
                "type": "string"
              },
              {
                "id": 2,
                "name": "friendly_name",
                "type": "string"
              },
              {
                "id": 4,
                "name": "permissions",
                "type": "ResourceToAccess"
              },
              {
                "id": 5,
                "name": "roles",
                "type": "Role",
                "is_repeated": true
              }
            ],
            "reserved_ids": [
              3
            ],
            "messages": [
              {
                "name": "Role",
                "fields": [
                  {
                    "id": 1,
                    "name": "name",
                    "type": "string"
                  }
                ],
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "resource_to_access",
                      "type": "Access"
                    }
                  }
                ],
                "reserved_ids": [
                  2
                ]
              },
              {
                "name": "ResourceToAccess",
                "maps": [
                  {
                    "key_type": "string",
                    "field": {
                      "id": 3,
                      "name": "resource_to_access",
                      "type": "Access"
                    }
                  }
                ],
                "reserved_ids": [
                  1,
                  2
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/role.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:version.proto",
      "def": {
        "messages": [
          {
            "name": "Version",
            "fields": [
              {
                "id": 1,
                "name": "seq_num",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "version",
                "type": "string"
              },
              {
                "id": 3,
                "name": "last_persisted",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:vuln_requests.proto",
      "def": {
        "enums": [
          {
            "name": "RequestStatus",
            "enum_fields": [
              {
                "name": "PENDING"
              },
              {
                "name": "APPROVED",
                "integer": 1
              },
              {
                "name": "DENIED",
                "integer": 2
              },
              {
                "name": "APPROVED_PENDING_UPDATE",
                "integer": 3
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "RequestComment",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "message",
                "type": "string"
              },
              {
                "id": 3,
                "name": "user",
                "type": "SlimUser"
              },
              {
                "id": 4,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "RequestExpiry",
            "fields": [
              {
                "id": 1,
                "name": "expires_when_fixed",
                "type": "bool"
              },
              {
                "id": 2,
                "name": "expires_on",
                "type": "google.protobuf.Timestamp"
              }
            ]
          },
          {
            "name": "DeferralRequest",
            "fields": [
              {
                "id": 1,
                "name": "expiry",
                "type": "RequestExpiry"
              }
            ]
          },
          {
            "name": "FalsePositiveRequest"
          },
          {
            "name": "VulnerabilityRequest",
            "fields": [
              {
                "id": 1,
                "name": "id",
                "type": "string"
              },
              {
                "id": 2,
                "name": "target_state",
                "type": "VulnerabilityState"
              },
              {
                "id": 3,
                "name": "status",
                "type": "RequestStatus"
              },
              {
                "id": 4,
                "name": "expired",
                "type": "bool"
              },
              {
                "id": 5,
                "name": "requestor",
                "type": "SlimUser"
              },
              {
                "id": 6,
                "name": "approvers",
                "type": "SlimUser",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "created_at",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "last_updated",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 9,
                "name": "comments",
                "type": "RequestComment",
                "is_repeated": true
              },
              {
                "id": 10,
                "name": "scope",
                "type": "Scope"
              },
              {
                "id": 11,
                "name": "deferral_req",
                "type": "DeferralRequest"
              },
              {
                "id": 12,
                "name": "fp_request",
                "type": "FalsePositiveRequest"
              },
              {
                "id": 16,
                "name": "cves",
                "type": "CVEs"
              },
              {
                "id": 21,
                "name": "updated_deferral_req",
                "type": "DeferralRequest"
              }
            ],
            "messages": [
              {
                "name": "CVEs",
                "fields": [
                  {
                    "id": 1,
                    "name": "cves",
                    "type": "string",
                    "is_repeated": true
                  }
                ]
              },
              {
                "name": "Scope",
                "fields": [
                  {
                    "id": 1,
                    "name": "image_scope",
                    "type": "Image"
                  },
                  {
                    "id": 2,
                    "name": "global_scope",
                    "type": "Global"
                  }
                ],
                "messages": [
                  {
                    "name": "Image",
                    "fields": [
                      {
                        "id": 1,
                        "name": "registry",
                        "type": "string"
                      },
                      {
                        "id": 2,
                        "name": "remote",
                        "type": "string"
                      },
                      {
                        "id": 3,
                        "name": "tag",
                        "type": "string"
                      }
                    ]
                  },
                  {
                    "name": "Global"
                  }
                ]
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/cve.proto"
          },
          {
            "path": "storage/user.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:storage:/:vulnerability.proto",
      "def": {
        "enums": [
          {
            "name": "EmbeddedVulnerability.ScoreVersion",
            "enum_fields": [
              {
                "name": "V2"
              },
              {
                "name": "V3",
                "integer": 1
              }
            ]
          },
          {
            "name": "EmbeddedVulnerability.VulnerabilityType",
            "enum_fields": [
              {
                "name": "UNKNOWN_VULNERABILITY"
              },
              {
                "name": "IMAGE_VULNERABILITY",
                "integer": 1
              },
              {
                "name": "K8S_VULNERABILITY",
                "integer": 2
              },
              {
                "name": "ISTIO_VULNERABILITY",
                "integer": 3
              },
              {
                "name": "NODE_VULNERABILITY",
                "integer": 4
              },
              {
                "name": "OPENSHIFT_VULNERABILITY",
                "integer": 5
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "EmbeddedVulnerability",
            "fields": [
              {
                "id": 1,
                "name": "cve",
                "type": "string"
              },
              {
                "id": 2,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 3,
                "name": "summary",
                "type": "string"
              },
              {
                "id": 4,
                "name": "link",
                "type": "string"
              },
              {
                "id": 5,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 8,
                "name": "score_version",
                "type": "ScoreVersion"
              },
              {
                "id": 6,
                "name": "cvss_v2",
                "type": "CVSSV2"
              },
              {
                "id": 7,
                "name": "cvss_v3",
                "type": "CVSSV3"
              },
              {
                "id": 9,
                "name": "published_on",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 10,
                "name": "last_modified",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 11,
                "name": "vulnerability_type",
                "type": "VulnerabilityType"
              },
              {
                "id": 18,
                "name": "vulnerability_types",
                "type": "VulnerabilityType",
                "is_repeated": true
              },
              {
                "id": 12,
                "name": "suppressed",
                "type": "bool"
              },
              {
                "id": 13,
                "name": "suppress_activation",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 14,
                "name": "suppress_expiry",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 15,
                "name": "first_system_occurrence",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 16,
                "name": "first_image_occurrence",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 19,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 20,
                "name": "state",
                "type": "VulnerabilityState"
              }
            ],
            "reserved_ids": [
              17
            ]
          },
          {
            "name": "NodeVulnerability",
            "fields": [
              {
                "id": 1,
                "name": "cve_base_info",
                "type": "CVEInfo"
              },
              {
                "id": 2,
                "name": "cvss",
                "type": "float"
              },
              {
                "id": 3,
                "name": "severity",
                "type": "VulnerabilitySeverity"
              },
              {
                "id": 4,
                "name": "fixed_by",
                "type": "string"
              },
              {
                "id": 5,
                "name": "snoozed",
                "type": "bool"
              },
              {
                "id": 6,
                "name": "snooze_start",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 7,
                "name": "snooze_expiry",
                "type": "google.protobuf.Timestamp"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "storage/cve.proto"
          }
        ],
        "package": {
          "name": "storage"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:test:/:test.proto",
      "def": {
        "enums": [
          {
            "name": "TestClone.CloneEnum",
            "enum_fields": [
              {
                "name": "UNSET"
              },
              {
                "name": "Val1",
                "integer": 1
              },
              {
                "name": "Val2",
                "integer": 2
              }
            ]
          }
        ],
        "messages": [
          {
            "name": "TestCloneSubMessage",
            "fields": [
              {
                "id": 1,
                "name": "int32",
                "type": "int32"
              },
              {
                "id": 2,
                "name": "string",
                "type": "string"
              }
            ]
          },
          {
            "name": "TestClone",
            "fields": [
              {
                "id": 1,
                "name": "int_slice",
                "type": "int32",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "string_slice",
                "type": "string",
                "is_repeated": true
              },
              {
                "id": 3,
                "name": "sub_messages",
                "type": "TestCloneSubMessage",
                "is_repeated": true
              },
              {
                "id": 6,
                "name": "enum_slice",
                "type": "CloneEnum",
                "is_repeated": true
              },
              {
                "id": 7,
                "name": "ts",
                "type": "google.protobuf.Timestamp"
              },
              {
                "id": 8,
                "name": "int32",
                "type": "int32"
              },
              {
                "id": 9,
                "name": "string",
                "type": "string"
              },
              {
                "id": 10,
                "name": "msg",
                "type": "TestCloneSubMessage"
              },
              {
                "id": 11,
                "name": "any",
                "type": "google.protobuf.Any"
              },
              {
                "id": 13,
                "name": "bytes_slice",
                "type": "bytes",
                "is_repeated": true
              },
              {
                "id": 14,
                "name": "bytes",
                "type": "bytes"
              },
              {
                "id": 15,
                "name": "sub_message",
                "type": "TestCloneSubMessage"
              }
            ],
            "maps": [
              {
                "key_type": "string",
                "field": {
                  "id": 4,
                  "name": "message_map",
                  "type": "TestCloneSubMessage"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 5,
                  "name": "string_map",
                  "type": "string"
                }
              },
              {
                "key_type": "string",
                "field": {
                  "id": 12,
                  "name": "bytes_map",
                  "type": "bytes"
                }
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/protobuf/timestamp.proto"
          },
          {
            "path": "google/protobuf/any.proto"
          }
        ],
        "package": {
          "name": "test"
        }
      }
    },
    {
      "protopath": "qa-tests-backend:/:src:/:main:/:proto:/:tools:/:local-sensor:/:message.proto",
      "def": {
        "messages": [
          {
            "name": "LocalSensorPolicies",
            "fields": [
              {
                "id": 1,
                "name": "policies",
                "type": "storage.Policy",
                "is_repeated": true
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "storage/policy.proto"
          }
        ],
        "package": {
          "name": "localSensor"
        }
      }
    },
    {
      "protopath": "third_party:/:googleapis:/:google:/:api:/:annotations.proto",
      "def": {
        "messages": [
          {
            "name": "google.protobuf.MethodOptions",
            "fields": [
              {
                "id": 72295728,
                "name": "http",
                "type": "HttpRule"
              }
            ]
          }
        ],
        "imports": [
          {
            "path": "google/api/http.proto"
          },
          {
            "path": "google/protobuf/descriptor.proto"
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    },
    {
      "protopath": "third_party:/:googleapis:/:google:/:api:/:http.proto",
      "def": {
        "messages": [
          {
            "name": "Http",
            "fields": [
              {
                "id": 1,
                "name": "rules",
                "type": "HttpRule",
                "is_repeated": true
              },
              {
                "id": 2,
                "name": "fully_decode_reserved_expansion",
                "type": "bool"
              }
            ]
          },
          {
            "name": "HttpRule",
            "fields": [
              {
                "id": 1,
                "name": "selector",
                "type": "string"
              },
              {
                "id": 2,
                "name": "get",
                "type": "string"
              },
              {
                "id": 3,
                "name": "put",
                "type": "string"
              },
              {
                "id": 4,
                "name": "post",
                "type": "string"
              },
              {
                "id": 5,
                "name": "delete",
                "type": "string"
              },
              {
                "id": 6,
                "name": "patch",
                "type": "string"
              },
              {
                "id": 8,
                "name": "custom",
                "type": "CustomHttpPattern"
              },
              {
                "id": 7,
                "name": "body",
                "type": "string"
              },
              {
                "id": 12,
                "name": "response_body",
                "type": "string"
              },
              {
                "id": 11,
                "name": "additional_bindings",
                "type": "HttpRule",
                "is_repeated": true
              }
            ]
          },
          {
            "name": "CustomHttpPattern",
            "fields": [
              {
                "id": 1,
                "name": "kind",
                "type": "string"
              },
              {
                "id": 2,
                "name": "path",
                "type": "string"
              }
            ]
          }
        ],
        "package": {
          "name": "google.api"
        }
      }
    }
  ]
}