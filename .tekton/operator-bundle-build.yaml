apiVersion: tekton.dev/v1
kind: PipelineRun

metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/stackrox/stackrox?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "500"
    # TODO(ROX-21073): re-enable for all PR branches
    pipelinesascode.tekton.dev/on-cel-expression: |
      (event == "push" && target_branch.matches("^(master|release-.*)$")) ||
      (event == "pull_request" && (source_branch.matches("(konflux|appstudio|rhtap)") || body.pull_request.labels.exists(l, l.name == "konflux-build")))
  labels:
    appstudio.openshift.io/application: acs
    appstudio.openshift.io/component: operator-bundle
    pipelines.appstudio.openshift.io/type: build
  name: operator-bundle-build
  namespace: rh-acs-tenant

spec:

  params:
  - name: dockerfile
    value: operator/konflux.bundle.Dockerfile
  - name: git-url
    value: '{{source_url}}'
  # TODO(ROX-24530): return expiration for non-released images to 13w
  - name: image-expires-after
    value: '52w'
  - name: output-image-repo
    value: quay.io/rhacs-eng/stackrox-operator-bundle
  - name: operator-image-repo
    value: quay.io/rhacs-eng/stackrox-operator
  - name: revision
    value: '{{revision}}'
  - name: rebuild
    value: 'true'
  # TODO(ROX-20234): Enable hermetic builds
  # - name: hermetic
  #   value: 'true'
  - name: prefetch-input
    value: ''
  - name: build-source-image
    value: 'true'
  - name: clone-depth
    value: '0'
  - name: clone-fetch-tags
    value: 'true'

  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'

  pipelineRef:
    name: operator-bundle-pipeline

  # The successful completion of the operator-bundle pipeline depends on all other ACS images
  # having been built, since their image digests need to be injected in the bundle's
  # ClusterServiceVersion file.
  #
  # To account for this inter-pipeline dependency, the cumulative tasks timeout set here
  # needs to be kept in sync with
  #
  # 1. the timeouts for waiting for ACS images;
  #    see  spec.tasks[] | select(.name | test("^wait-for-")) in operator-bundle-pipeline.yaml).
  #
  # 2. the overall timeouts for the respective image-building PipelineRuns.
  #
  # For example, in main-pipeline.yaml the maximum timeout for building main images is set to 2h.
  # Hence we set the tasks timeout here to 2h50m, because we need to give extra time for (i) completion
  # of the whole PipelineRun for building main images and for (ii) assembling of the operator-bundle.
  timeouts:
    tasks: 2h50m
    finally: 10m
    pipeline: 3h
