apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: fetch-scanner-vuln-mappings
  namespace: rh-acs-tenant
# TODO(ROX-22196): Refactor to a task bundle
spec:
  description: Fetches vulnerability mappings for Scanner v4 from StackRox artifacts to be baked into the image.
  params:
  - name: SOURCE_ARTIFACT
    description: The Trusted Artifact URI pointing to the application source code.
    type: string
  - name: ociStorage
    description: The OCI repository where the Trusted Artifacts are stored.
    type: string
  - name: ociArtifactExpiresAfter
    description: Expiration date for the trusted artifacts created in the
      OCI repository.
    type: string
  results:
  - name: SOURCE_ARTIFACT
    description: The Trusted Artifact URI pointing to the artifact with the application source code and
      additional vulnerability mappings.
    type: string
  volumes:
  - name: workdir
    emptyDir: { }
  stepTemplate:
    volumeMounts:
    - mountPath: /var/workdir
      name: workdir
  steps:
  - name: use-trusted-artifact
    image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:81c4864dae6bb11595f657be887e205262e70086a05ed16ada827fd6391926ac
    args:
    - use
    - $(params.SOURCE_ARTIFACT)=/var/workdir/source
  - name: fetch-vuln-mappings
    image: registry.access.redhat.com/ubi8-minimal:latest
    workingDir: /var/workdir/source
    script: scanner/image/scanner/download-mappings.sh .konflux/scanner-data
  - name: create-trusted-artifact
    image: quay.io/redhat-appstudio/build-trusted-artifacts:latest@sha256:81c4864dae6bb11595f657be887e205262e70086a05ed16ada827fd6391926ac
    args:
    - create
    - --store
    - $(params.ociStorage)
    - $(results.SOURCE_ARTIFACT.path)=/var/workdir/source
    env:
    - name: IMAGE_EXPIRES_AFTER
      value: $(params.ociArtifactExpiresAfter)
