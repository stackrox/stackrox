apiVersion: tekton.dev/v1
kind: PipelineRun

metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/stackrox/stackrox?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "500"
    # TODO(ROX-21073): re-enable for all PR branches
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && (source_branch.contains("konflux") || source_branch.contains("rhtap"))
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: acs
    appstudio.openshift.io/component: main
    pipelines.appstudio.openshift.io/type: build
  name: main-on-pull-request
  namespace: rh-acs-tenant

spec:

  params:
  - name: dockerfile
    value: image/rhel/konflux.Dockerfile
  - name: git-url
    value: '{{repo_url}}'
  - name: image-expires-after
    # TODO(ROX-24530): return expiration for non-released images to 13w
    value: '52w'
  - name: output-image-repo
    value: quay.io/rhacs-eng/main
  - name: path-context
    value: .
  - name: revision
    value: '{{revision}}'
  - name: rebuild
    value: 'true'
  # TODO(ROX-20234): Enable hermetic builds
  # - name: hermetic
  #   value: "true"
  - name: prefetch-input
    value: |
      [
        { "type": "npm", "path": "scripts/konflux/bootstrap-yarn" },
        { "type": "gomod", "path": "." }
      ]
  - name: build-source-image
    value: 'true'
  - name: clone-depth
    value: '0'
  - name: clone-fetch-tags
    value: 'true'

  workspaces:
  - name: workspace
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 3Gi
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
  - name: subscription-manager-activation-key
    secret:
      secretName: subscription-manager-activation-key

  taskRunSpecs:
  - pipelineTaskName: build-container
    stepSpecs:
    - name: build
      # CPU requests are increased to speed up builds compared to the defaults.
      # Defaults: https://github.com/redhat-appstudio/build-definitions/blob/main/task/buildah/0.1/buildah.yaml#L126
      #
      # Memory is increased for UI builds to succeed. Otherwise, there's an error like this in logs:
      # [build] @stackrox/platform-app: The build failed because the process exited too early. This probably means the system ran out of memory or someone called `kill -9` on the process.
      #
      # Not using buildah-6gb/-8gb/... because these don't have memory requests equal to limits which still occasionally
      # leads to failing builds.
      computeResources:
        limits:
          cpu: 4
          memory: 7Gi
        requests:
          cpu: 4
          memory: 7Gi
  - pipelineTaskName: clamav-scan
    stepSpecs:
    # Provision more CPU to speed up ClamAV scan compared to the defaults.
    # https://github.com/redhat-appstudio/build-definitions/blob/main/task/clamav-scan/0.1/clamav-scan.yaml#L48
    - name: extract-and-scan-image
      computeResources:
        requests:
          cpu: 1

  # The pipeline regularly takes >1h to finish.
  timeouts:
    pipeline: 1h30m0s

  pipelineRef:
    name: main-pipeline
