apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: operator-bundle-pipeline
spec:

  finally:
  - name: slack-notification
    params:
    - name: message
      value: ':x: `{{event_type}}` pipeline for <https://console.redhat.com/application-pipeline/workspaces/rh-acs/applications/acs/pipelineruns/$(context.pipelineRun.name)|$(context.pipelineRun.name)> (`$(params.output-image-repo)`, revision <$(params.git-url)/commit/$(params.revision)|$(params.revision)>) has failed.'
    - name: key-name
      value: 'acs-konflux-notifications'
    when:
    # Run when any task has Failed
    - input: $(tasks.status)
      operator: in
      values: ["Failed"]
    taskRef:
      params:
      - name: name
        value: slack-webhook-notification
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-slack-webhook-notification:0.1@sha256:dc17b70633363d78414b8c06dc1660d25742935f106a6116995638e1210c2730
      - name: kind
        value: task
      resolver: bundles

  - name: show-sbom
    params:
    - name: IMAGE_URL
      value: $(tasks.build-container.results.IMAGE_URL)
    taskRef:
      params:
      - name: name
        value: show-sbom
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-show-sbom:0.1@sha256:945a7c9066d3e0a95d3fddb7e8a6992e4d632a2a75d8f3a9bd2ff2fef0ec9aa0
      - name: kind
        value: task
      resolver: bundles

  params:
  - description: Source Repository URL
    name: git-url
    type: string
  - default: ""
    description: Revision of the Source Repository
    name: revision
    type: string
  - description: Output Image Repository
    name: output-image-repo
    type: string
  - default: "-fast"
    description: Suffix that will be appended to the output image tag.
    name: output-tag-suffix
    type: string
  - default: .
    description: Path to the source code of an application's component from where
      to build image.
    name: path-context
    type: string
  - default: Dockerfile
    description: Path to the Dockerfile inside the context specified by parameter
      path-context
    name: dockerfile
    type: string
  - default: "false"
    description: Force rebuild image
    name: rebuild
    type: string
  - default: "false"
    description: Skip checks against built image
    name: skip-checks
    type: string
  - default: "false"
    description: Execute the build with network isolation
    name: hermetic
    type: string
  - default: ""
    description: Build dependencies to be prefetched by Cachi2
    name: prefetch-input
    type: string
  - description: Image tag expiration time, time values could be something like
      1h, 2d, 3w for hours, days, and weeks, respectively.
    name: image-expires-after
    type: string
  - default: "true"
    description: Build a source image.
    name: build-source-image
    type: string
  - default: "0"
    description: Depth of the git clone in number of commits. Use "1" for shallow clone. Use "0" for deep clone, i.e. to fetch all commits.
    name: clone-depth
    type: string
  - default: "true"
    description: Fetch tags with git clone
    name: clone-fetch-tags
    type: string
  - default: "1d"
    description: This sets the expiration time for intermediate OCI artifacts produced and used during builds after which they can be garbage collected.
    name: oci-artifact-expires-after
    type: string

  - name: operator-image-build-repo
    description: Repository where the (unreleased) operator image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/stackrox-operator"
  - name: operator-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the operator image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-rhel8-operator"

  - name: main-image-build-repo
    description: Repository where the (unreleased) main image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/main"
  - name: main-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the main image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-main-rhel8"

  - name: scanner-image-build-repo
    description: Repository where the (unreleased) Scanner V2 image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/scanner"
  - name: scanner-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the Scanner V2 image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-scanner-rhel8"

  - name: scanner-db-image-build-repo
    description: Repository where the (unreleased) Scanner V2 DB image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/scanner-db"
  - name: scanner-db-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the Scanner V2 DB image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-scanner-db-rhel8"

  - name: scanner-slim-image-build-repo
    description: Repository where the (unreleased) Scanner V2 slim image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/scanner-slim"
  - name: scanner-slim-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the Scanner V2 slim image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-scanner-slim-rhel8"

  - name: scanner-db-slim-image-build-repo
    description: Repository where the (unreleased) Scanner V2 DB slim image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/scanner-db-slim"
  - name: scanner-db-slim-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the Scanner V2 DB slim image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-scanner-db-slim-rhel8"

  - name: scanner-v4-image-build-repo
    description: Repository where the (unreleased) Scanner V4 image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/scanner-v4"
  - name: scanner-v4-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the Scanner V4 image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-scanner-v4-rhel8"

  - name: scanner-v4-db-image-build-repo
    description: Repository where the (unreleased) Scanner V4 DB image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/scanner-v4-db"
  - name: scanner-v4-db-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the Scanner V4 DB image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-scanner-v4-db-rhel8"

  - name: collector-image-build-repo
    description: Repository where the (unreleased) collector full image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/collector"
  - name: collector-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the collector full image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-collector-rhel8"

  - name: roxctl-image-build-repo
    description: Repository where the (unreleased) roxctl image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/roxctl"
  - name: roxctl-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the roxctl image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-roxctl-rhel8"

  - name: central-db-image-build-repo
    description: Repository where the (unreleased) Central DB image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/central-db"
  - name: central-db-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the Central DB image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-central-db-rhel8"

  results:
  - description: ""
    name: IMAGE_URL
    value: $(tasks.build-container.results.IMAGE_URL)
  - description: ""
    name: IMAGE_DIGEST
    value: $(tasks.build-container.results.IMAGE_DIGEST)
  - description: ""
    name: CHAINS-GIT_URL
    value: $(tasks.clone-repository.results.url)
  - description: ""
    name: CHAINS-GIT_COMMIT
    value: $(tasks.clone-repository.results.commit)
  - description: ""
    name: SNAPSHOT_NAME
    value: $(tasks.create-acs-style-snapshot.results.SNAPSHOT_NAME)

  workspaces:
  - name: git-auth

  tasks:

  - name: init
    params:
    - name: image-url
      # We can't provide a StackRox-style tag because it is not known at this time (requires cloning source, etc.)
      # As a workaround, we still provide a unique tag that's based on a revision to this task to comply with its
      # expected input. We later actually add this tag on a built image with apply-tags task.
      value: $(params.output-image-repo):konflux-$(params.revision)
    - name: rebuild
      value: $(params.rebuild)
    - name: skip-checks
      value: $(params.skip-checks)
    taskRef:
      params:
      - name: name
        value: init
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:63eb4a4c0cfb491276bff86fdad1c96bf238506388848e79001058450a8e843a
      - name: kind
        value: task
      resolver: bundles

  - name: clone-repository
    params:
    - name: url
      value: $(params.git-url)
    - name: revision
      value: $(params.revision)
    - name: depth
      value: $(params.clone-depth)
    - name: fetchTags
      value: $(params.clone-fetch-tags)
    - name: ociStorage
      value: $(params.output-image-repo):konflux-$(params.revision).git
    - name: ociArtifactExpiresAfter
      value: $(params.oci-artifact-expires-after)
    taskRef:
      params:
      - name: name
        value: git-clone-oci-ta
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta:0.1@sha256:36d98ab04eaac2c964149060c773ac20df42f91527db6c40b7b250e6eeff5821
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(tasks.init.results.build)
      operator: in
      values: [ "true" ]
    workspaces:
    - name: basic-auth
      workspace: git-auth

  - name: determine-image-tag
    params:
    - name: TAG_SUFFIX
      value: $(params.output-tag-suffix)
    - name: SOURCE_ARTIFACT
      value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
    - name: SOURCE_BRANCH
      value: '{{source_branch}}'
    taskRef:
      params:
      - name: name
        value: determine-image-tag
      - name: bundle
        value: quay.io/rhacs-eng/konflux-tasks:latest@sha256:0c6cd49c7cab12f611986efd494ac5f5ca8a77993129612bdbce9cf9833a5fa6
      - name: kind
        value: task
      resolver: bundles

  - name: prefetch-dependencies
    params:
    - name: input
      value: $(params.prefetch-input)
    - name: SOURCE_ARTIFACT
      value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
    - name: ociStorage
      value: $(params.output-image-repo):konflux-$(params.revision).prefetch
    - name: ociArtifactExpiresAfter
      value: $(params.oci-artifact-expires-after)
    taskRef:
      params:
      - name: name
        value: prefetch-dependencies-oci-ta
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies-oci-ta:0.2@sha256:546e0a93f8bf6777a48082e07a43fd67a58474e1f922c2341e5a0f3bdb15187c
      - name: kind
        value: task
      resolver: bundles
    workspaces:
    - name: git-basic-auth
      workspace: git-auth

  - name: wait-for-operator-image
    params:
    - name: IMAGE
      value: "$(params.operator-image-build-repo):$(tasks.determine-image-tag.results.IMAGE_TAG)"
    taskRef: &wait-for-image-ref
      params:
      - name: name
        value: wait-for-image
      - name: bundle
        value: quay.io/rhacs-eng/konflux-tasks:latest@sha256:0c6cd49c7cab12f611986efd494ac5f5ca8a77993129612bdbce9cf9833a5fa6
      - name: kind
        value: task
      resolver: bundles
    # This timeout must be the same as the pipeline timeout in `operator-build.yaml`.
    timeout: 1h10m

  - name: wait-for-main-image
    params:
    - name: IMAGE
      value: "$(params.main-image-build-repo):$(tasks.determine-image-tag.results.IMAGE_TAG)"
    taskRef: *wait-for-image-ref
    # This timeout must be the same as the pipeline timeout in `main-build.yaml`.
    timeout: 2h40m

  - name: wait-for-scanner-image
    params:
    - name: IMAGE
      value: "$(params.scanner-image-build-repo):$(tasks.determine-image-tag.results.IMAGE_TAG)"
    taskRef: *wait-for-image-ref
    # This timeout must be the same as the pipeline timeout in `scanner-retag.yaml`
    timeout: 40m

  - name: wait-for-scanner-db-image
    params:
    - name: IMAGE
      value: "$(params.scanner-db-image-build-repo):$(tasks.determine-image-tag.results.IMAGE_TAG)"
    taskRef: *wait-for-image-ref
    # This timeout must be the same as the pipeline timeout in `scanner-db-retag.yaml`
    timeout: 40m

  - name: wait-for-scanner-slim-image
    params:
    - name: IMAGE
      value: "$(params.scanner-slim-image-build-repo):$(tasks.determine-image-tag.results.IMAGE_TAG)"
    taskRef: *wait-for-image-ref
    # This timeout must be the same as the pipeline timeout in `scanner-slim-retag.yaml`
    timeout: 40m

  - name: wait-for-scanner-db-slim-image
    params:
    - name: IMAGE
      value: "$(params.scanner-db-slim-image-build-repo):$(tasks.determine-image-tag.results.IMAGE_TAG)"
    taskRef: *wait-for-image-ref
    # This timeout must be the same as the pipeline timeout in `scanner-db-slim-retag.yaml`
    timeout: 40m

  - name: wait-for-scanner-v4-image
    params:
    - name: IMAGE
      value: "$(params.scanner-v4-image-build-repo):$(tasks.determine-image-tag.results.IMAGE_TAG)"
    taskRef: *wait-for-image-ref
    # This timeout must be the same as the pipeline timeout in `scanner-v4-build.yaml`.
    timeout: 1h10m

  - name: wait-for-scanner-v4-db-image
    params:
    - name: IMAGE
      value: "$(params.scanner-v4-db-image-build-repo):$(tasks.determine-image-tag.results.IMAGE_TAG)"
    taskRef: *wait-for-image-ref
    # This timeout must be the same as the pipeline timeout in `scanner-v4-db-build.yaml`.
    timeout: 1h10m

  - name: wait-for-collector-image
    params:
    - name: IMAGE
      value: "$(params.collector-image-build-repo):$(tasks.determine-image-tag.results.IMAGE_TAG)"
    taskRef: *wait-for-image-ref
    # The timeout must be the same as the pipeline timeout in `collector-retag.yaml`
    timeout: 40m

  - name: wait-for-roxctl-image
    params:
    - name: IMAGE
      value: "$(params.roxctl-image-build-repo):$(tasks.determine-image-tag.results.IMAGE_TAG)"
    taskRef: *wait-for-image-ref
    # This timeout must be the same as the pipeline timeout in `roxctl-build.yaml`.
    timeout: 1h10m

  - name: wait-for-central-db-image
    params:
    - name: IMAGE
      value: "$(params.central-db-image-build-repo):$(tasks.determine-image-tag.results.IMAGE_TAG)"
    taskRef: *wait-for-image-ref
    # This timeout must be the same as the pipeline timeout in `central-db-build.yaml`.
    timeout: 1h40m

  - name: build-container
    params:
    - name: IMAGE
      # Note the operator bundle tag is prefixed with "v".
      value: $(params.output-image-repo):v$(tasks.determine-image-tag.results.IMAGE_TAG)
    - name: DOCKERFILE
      value: $(params.dockerfile)
    - name: CONTEXT
      value: $(params.path-context)
    - name: HERMETIC
      value: $(params.hermetic)
    - name: PREFETCH_INPUT
      value: $(params.prefetch-input)
    - name: IMAGE_EXPIRES_AFTER
      value: $(params.image-expires-after)
    - name: COMMIT_SHA
      value: $(tasks.clone-repository.results.commit)
    - name: BUILD_ARGS
      value:
      - OPERATOR_IMAGE_TAG=$(tasks.determine-image-tag.results.IMAGE_TAG)
      - OPERATOR_IMAGE_REF=$(params.operator-image-catalog-repo)@$(tasks.wait-for-operator-image.results.IMAGE_DIGEST)
      - RELATED_IMAGE_MAIN=$(params.main-image-catalog-repo)@$(tasks.wait-for-main-image.results.IMAGE_DIGEST)
      - RELATED_IMAGE_SCANNER=$(params.scanner-image-catalog-repo)@$(tasks.wait-for-scanner-image.results.IMAGE_DIGEST)
      - RELATED_IMAGE_SCANNER_DB=$(params.scanner-db-image-catalog-repo)@$(tasks.wait-for-scanner-db-image.results.IMAGE_DIGEST)
      - RELATED_IMAGE_SCANNER_SLIM=$(params.scanner-slim-image-catalog-repo)@$(tasks.wait-for-scanner-slim-image.results.IMAGE_DIGEST)
      - RELATED_IMAGE_SCANNER_DB_SLIM=$(params.scanner-db-slim-image-catalog-repo)@$(tasks.wait-for-scanner-db-slim-image.results.IMAGE_DIGEST)
      - RELATED_IMAGE_SCANNER_V4=$(params.scanner-v4-image-catalog-repo)@$(tasks.wait-for-scanner-v4-image.results.IMAGE_DIGEST)
      - RELATED_IMAGE_SCANNER_V4_DB=$(params.scanner-v4-db-image-catalog-repo)@$(tasks.wait-for-scanner-v4-db-image.results.IMAGE_DIGEST)
      - RELATED_IMAGE_COLLECTOR=$(params.collector-image-catalog-repo)@$(tasks.wait-for-collector-image.results.IMAGE_DIGEST)
      - RELATED_IMAGE_ROXCTL=$(params.roxctl-image-catalog-repo)@$(tasks.wait-for-roxctl-image.results.IMAGE_DIGEST)
      - RELATED_IMAGE_CENTRAL_DB=$(params.central-db-image-catalog-repo)@$(tasks.wait-for-central-db-image.results.IMAGE_DIGEST)
    - name: SOURCE_ARTIFACT
      value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
    - name: CACHI2_ARTIFACT
      value: $(tasks.prefetch-dependencies.results.CACHI2_ARTIFACT)
    taskRef:
      params:
      - name: name
        value: buildah-oci-ta
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-buildah-oci-ta:0.4@sha256:63e57ac67f892a0e2990fc18db5c18ef5ad9de1db8df82c25d5813e2f84f5977
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(tasks.init.results.build)
      operator: in
      values: [ "true" ]

  - name: apply-tags
    params:
    - name: IMAGE
      value: $(tasks.build-container.results.IMAGE_URL)
    - name: ADDITIONAL_TAGS
      value:
      - konflux-$(params.revision)
    taskRef:
      params:
      - name: name
        value: apply-tags
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-apply-tags:0.1@sha256:5e5f290359fd34ae4cc77cbbba6ef8c9907d752572d6dc2a00f5a4c504eb48bb
      - name: kind
        value: task
      resolver: bundles

  - name: build-source-image
    params:
    - name: BINARY_IMAGE
      value: $(tasks.build-container.results.IMAGE_URL)
    - name: SOURCE_ARTIFACT
      value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
    - name: CACHI2_ARTIFACT
      value: $(tasks.prefetch-dependencies.results.CACHI2_ARTIFACT)
    taskRef:
      params:
      - name: name
        value: source-build-oci-ta
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-source-build-oci-ta:0.2@sha256:ac6c2141c21ef950dcb84dad5cd4d3a04fb758f82f9b5acc3612a584b4be5120
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(tasks.init.results.build)
      operator: in
      values: [ "true" ]
    - input: $(params.build-source-image)
      operator: in
      values: [ "true" ]

  - name: deprecated-base-image-check
    params:
    - name: IMAGE_URL
      value: $(tasks.build-container.results.IMAGE_URL)
    - name: IMAGE_DIGEST
      value: $(tasks.build-container.results.IMAGE_DIGEST)
    taskRef:
      params:
      - name: name
        value: deprecated-image-check
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check:0.5@sha256:ced089bd8d86f95ee70f6ee1a6941d677f1c66c3b8f02fa60f9309c6c32e1929
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values: [ "false" ]

  - name: clair-scan
    params:
    - name: image-digest
      value: $(tasks.build-container.results.IMAGE_DIGEST)
    - name: image-url
      value: $(tasks.build-container.results.IMAGE_URL)
    taskRef:
      params:
      - name: name
        value: clair-scan
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-clair-scan:0.2@sha256:f636f2cbe91d9d4d9685a38c8bc680a36e17f568ec0e60a93da82d1284b488c5
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values: [ "false" ]

  - name: sast-snyk-check
    params:
    - name: SOURCE_ARTIFACT
      value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
    - name: CACHI2_ARTIFACT
      value: $(tasks.prefetch-dependencies.results.CACHI2_ARTIFACT)
    - name: image-digest
      value: $(tasks.build-container.results.IMAGE_DIGEST)
    - name: image-url
      value: $(tasks.build-container.results.IMAGE_URL)
    taskRef:
      params:
      - name: name
        value: sast-snyk-check-oci-ta
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check-oci-ta:0.3@sha256:ed777841052e05c61abc9fc66f6aad65f113bad719eeb2e04ce490fc175aaebe
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values: [ "false" ]

  - name: clamav-scan
    params:
    - name: image-digest
      value: $(tasks.build-container.results.IMAGE_DIGEST)
    - name: image-url
      value: $(tasks.build-container.results.IMAGE_URL)
    taskRef:
      params:
      - name: name
        value: clamav-scan
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-clamav-scan:0.2@sha256:0db068e8a59612472a2483f5113893d0c5c9102e9ad7647d9a4789360e5bc2dc
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values: [ "false" ]

  - name: rpms-signature-scan
    params:
    - name: image-digest
      value: $(tasks.build-container.results.IMAGE_DIGEST)
    - name: image-url
      value: $(tasks.build-container.results.IMAGE_URL)
    taskRef:
      params:
      - name: name
        value: rpms-signature-scan
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan:0.2@sha256:e603b3df510aeefeaa12e8778c4642b21743cb0ae68704359dc7ffd2814249d2
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values: ["false"]

  - name: push-dockerfile
    params:
    - name: IMAGE
      value: $(tasks.build-container.results.IMAGE_URL)
    - name: IMAGE_DIGEST
      value: $(tasks.build-container.results.IMAGE_DIGEST)
    - name: DOCKERFILE
      value: $(params.dockerfile)
    - name: CONTEXT
      value: $(params.path-context)
    - name: SOURCE_ARTIFACT
      value: $(tasks.prefetch-dependencies.results.SOURCE_ARTIFACT)
    taskRef:
      params:
      - name: name
        value: push-dockerfile-oci-ta
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-push-dockerfile-oci-ta:0.1@sha256:77d691c17fae5e3e5301c230c2c41d363853f7bb2d6bb3870d0685811b6470d9
      - name: kind
        value: task
      resolver: bundles

  - name: create-acs-style-snapshot
    description: Creates a Snapshot representing a valid set of ACS containers unlike the Snapshots created by Konflux automatically
    # Explicitly running after all other tasks to ensure that
    # - there are no failures that should prevent a release of the operator-bundle image (missing RPMs signatures, deprecated base images, ...)
    # - the source image is present as it is required by EC
    # Use scripts/ci/jobs/check-konflux-pipelines.sh to validate and update the list.
    runAfter:
    - apply-tags
    - build-container
    - build-source-image
    - clair-scan
    - clamav-scan
    - clone-repository
    - deprecated-base-image-check
    - determine-image-tag
    - init
    - prefetch-dependencies
    - push-dockerfile
    - rpms-signature-scan
    - sast-snyk-check
    - wait-for-central-db-image
    - wait-for-collector-image
    - wait-for-main-image
    - wait-for-operator-image
    - wait-for-roxctl-image
    - wait-for-scanner-db-image
    - wait-for-scanner-db-slim-image
    - wait-for-scanner-image
    - wait-for-scanner-slim-image
    - wait-for-scanner-v4-db-image
    - wait-for-scanner-v4-image
    params:
    - name: PRODUCT_VERSION
      value: $(tasks.determine-image-tag.results.IMAGE_TAG)
    - name: COMPONENTS
      value: |
        [
          {
            "name": "central-db",
            "containerImage": "$(params.central-db-image-build-repo)@$(tasks.wait-for-central-db-image.results.IMAGE_DIGEST)",
            "repository": "$(tasks.wait-for-central-db-image.results.GIT_REPO)",
            "revision": "$(tasks.wait-for-central-db-image.results.GIT_REF)"
          },
          {
            "name": "collector",
            "containerImage": "$(params.collector-image-build-repo)@$(tasks.wait-for-collector-image.results.IMAGE_DIGEST)",
            "repository": "$(tasks.wait-for-collector-image.results.GIT_REPO)",
            "revision": "$(tasks.wait-for-collector-image.results.GIT_REF)"
          },
          {
            "name": "main",
            "containerImage": "$(params.main-image-build-repo)@$(tasks.wait-for-main-image.results.IMAGE_DIGEST)",
            "repository": "$(tasks.wait-for-main-image.results.GIT_REPO)",
            "revision": "$(tasks.wait-for-main-image.results.GIT_REF)"
          },
          {
            "name": "operator",
            "containerImage": "$(params.operator-image-build-repo)@$(tasks.wait-for-operator-image.results.IMAGE_DIGEST)",
            "repository": "$(tasks.wait-for-operator-image.results.GIT_REPO)",
            "revision": "$(tasks.wait-for-operator-image.results.GIT_REF)"
          },
          {
            "name": "operator-bundle",
            "containerImage": "$(tasks.build-container.results.IMAGE_URL)@$(tasks.build-container.results.IMAGE_DIGEST)",
            "repository": "$(params.git-url)",
            "revision": "$(params.revision)"
          },
          {
            "name": "roxctl",
            "containerImage": "$(params.roxctl-image-build-repo)@$(tasks.wait-for-roxctl-image.results.IMAGE_DIGEST)",
            "repository": "$(tasks.wait-for-roxctl-image.results.GIT_REPO)",
            "revision": "$(tasks.wait-for-roxctl-image.results.GIT_REF)"
          },
          {
            "name": "scanner-db",
            "containerImage": "$(params.scanner-db-image-build-repo)@$(tasks.wait-for-scanner-db-image.results.IMAGE_DIGEST)",
            "repository": "$(tasks.wait-for-scanner-db-image.results.GIT_REPO)",
            "revision": "$(tasks.wait-for-scanner-db-image.results.GIT_REF)"
          },
          {
            "name": "scanner-db-slim",
            "containerImage": "$(params.scanner-db-slim-image-build-repo)@$(tasks.wait-for-scanner-db-slim-image.results.IMAGE_DIGEST)",
            "repository": "$(tasks.wait-for-scanner-db-slim-image.results.GIT_REPO)",
            "revision": "$(tasks.wait-for-scanner-db-slim-image.results.GIT_REF)"
          },
          {
            "name": "scanner",
            "containerImage": "$(params.scanner-image-build-repo)@$(tasks.wait-for-scanner-image.results.IMAGE_DIGEST)",
            "repository": "$(tasks.wait-for-scanner-image.results.GIT_REPO)",
            "revision": "$(tasks.wait-for-scanner-image.results.GIT_REF)"
          },
          {
            "name": "scanner-slim",
            "containerImage": "$(params.scanner-slim-image-build-repo)@$(tasks.wait-for-scanner-slim-image.results.IMAGE_DIGEST)",
            "repository": "$(tasks.wait-for-scanner-slim-image.results.GIT_REPO)",
            "revision": "$(tasks.wait-for-scanner-slim-image.results.GIT_REF)"
          },
          {
            "name": "scanner-v4-db",
            "containerImage": "$(params.scanner-v4-db-image-build-repo)@$(tasks.wait-for-scanner-v4-db-image.results.IMAGE_DIGEST)",
            "repository": "$(tasks.wait-for-scanner-v4-db-image.results.GIT_REPO)",
            "revision": "$(tasks.wait-for-scanner-v4-db-image.results.GIT_REF)"
          },
          {
            "name": "scanner-v4",
            "containerImage": "$(params.scanner-v4-image-build-repo)@$(tasks.wait-for-scanner-v4-image.results.IMAGE_DIGEST)",
            "repository": "$(tasks.wait-for-scanner-v4-image.results.GIT_REPO)",
            "revision": "$(tasks.wait-for-scanner-v4-image.results.GIT_REF)"
          }
        ]
    taskRef:
      params:
      - name: name
        value: create-snapshot
      - name: bundle
        value: quay.io/rhacs-eng/konflux-tasks:latest@sha256:0c6cd49c7cab12f611986efd494ac5f5ca8a77993129612bdbce9cf9833a5fa6
      - name: kind
        value: task
      resolver: bundles
