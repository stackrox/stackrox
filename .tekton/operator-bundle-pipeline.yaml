apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: operator-bundle-pipeline
spec:

  finally:
  - name: slack-notification
    params:
    - name: message
      value: ':x: `{{event_type}}` pipeline for <https://console.redhat.com/application-pipeline/workspaces/rh-acs/applications/acs/pipelineruns/$(context.pipelineRun.name)|$(context.pipelineRun.name)> (`$(params.output-image-repo)`, revision <$(params.git-url)/commit/$(params.revision)|$(params.revision)>) has failed.'
    - name: key-name
      value: 'acs-konflux-notifications'
    when:
    # Run when any task has Failed
    - input: $(tasks.status)
      operator: in
      values: ["Failed"]
    taskRef:
      params:
      - name: name
        value: slack-webhook-notification
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-slack-webhook-notification:0.1@sha256:dc17b70633363d78414b8c06dc1660d25742935f106a6116995638e1210c2730
      - name: kind
        value: task
      resolver: bundles

  # - name: show-sbom
  #   params:
  #   - name: IMAGE_URL
  #     value: $(tasks.build-container.results.IMAGE_URL)
  #   taskRef:
  #     params:
  #     - name: name
  #       value: show-sbom
  #     - name: bundle
  #       value: quay.io/konflux-ci/tekton-catalog/task-show-sbom:0.1@sha256:945a7c9066d3e0a95d3fddb7e8a6992e4d632a2a75d8f3a9bd2ff2fef0ec9aa0
  #     - name: kind
  #       value: task
  #     resolver: bundles

  params:
  - description: Source Repository URL
    name: git-url
    type: string
  - default: ""
    description: Revision of the Source Repository
    name: revision
    type: string
  - description: Output Image Repository
    name: output-image-repo
    type: string
  - default: "-fast"
    description: Suffix that will be appended to the output image tag.
    name: output-tag-suffix
    type: string
  - default: .
    description: Path to the source code of an application's component from where
      to build image.
    name: path-context
    type: string
  - default: Dockerfile
    description: Path to the Dockerfile inside the context specified by parameter
      path-context
    name: dockerfile
    type: string
  - default: "false"
    description: Force rebuild image
    name: rebuild
    type: string
  - default: "false"
    description: Skip checks against built image
    name: skip-checks
    type: string
  - default: "false"
    description: Execute the build with network isolation
    name: hermetic
    type: string
  - default: ""
    description: Build dependencies to be prefetched by Cachi2
    name: prefetch-input
    type: string
  - default: "false"
    description: Java build
    name: java
    type: string
  - description: Image tag expiration time, time values could be something like
      1h, 2d, 3w for hours, days, and weeks, respectively.
    name: image-expires-after
    type: string
  - default: "true"
    description: Build a source image.
    name: build-source-image
    type: string
  - default: "0"
    description: Depth of the git clone in number of commits. Use "1" for shallow clone. Use "0" for deep clone, i.e. to fetch all commits.
    name: clone-depth
    type: string
  - default: "true"
    description: Fetch tags with git clone
    name: clone-fetch-tags
    type: string
  - default: "1d"
    description: This sets the expiration time for intermediate OCI artifacts produced and used during builds after which they can be garbage collected.
    name: oci-artifact-expires-after
    type: string

  - name: operator-image-build-repo
    description: Repository where the (unreleased) operator image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/stackrox-operator"
  - name: operator-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the operator image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-rhel8-operator"

  - name: main-image-build-repo
    description: Repository where the (unreleased) main image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/main"
  - name: main-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the main image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-main-rhel8"

  - name: scanner-image-build-repo
    description: Repository where the (unreleased) Scanner V2 image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/scanner"
  - name: scanner-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the Scanner V2 image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-scanner-rhel8"

  - name: scanner-db-image-build-repo
    description: Repository where the (unreleased) Scanner V2 DB image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/scanner-db"
  - name: scanner-db-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the Scanner V2 DB image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-scanner-db-rhel8"

  - name: scanner-slim-image-build-repo
    description: Repository where the (unreleased) Scanner V2 slim image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/scanner-slim"
  - name: scanner-slim-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the Scanner V2 slim image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-scanner-slim-rhel8"

  - name: scanner-db-slim-image-build-repo
    description: Repository where the (unreleased) Scanner V2 DB slim image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/scanner-db-slim"
  - name: scanner-db-slim-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the Scanner V2 DB slim image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-scanner-db-slim-rhel8"

  - name: scanner-v4-image-build-repo
    description: Repository where the (unreleased) Scanner V4 image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/scanner-v4"
  - name: scanner-v4-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the Scanner V4 image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-scanner-v4-rhel8"

  - name: scanner-v4-db-image-build-repo
    description: Repository where the (unreleased) Scanner V4 DB image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/scanner-v4-db"
  - name: scanner-v4-db-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the Scanner V4 DB image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-scanner-v4-db-rhel8"

  - name: collector-slim-image-build-repo
    description: Repository where the (unreleased) collector slim image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/collector-slim"
  - name: collector-slim-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the collector slim image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-collector-slim-rhel8"

  - name: collector-full-image-build-repo
    description: Repository where the (unreleased) collector full image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/collector"
  - name: collector-full-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the collector full image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-collector-rhel8"

  - name: roxctl-image-build-repo
    description: Repository where the (unreleased) roxctl image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/roxctl"
  - name: roxctl-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the roxctl image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-roxctl-rhel8"

  - name: central-db-image-build-repo
    description: Repository where the (unreleased) Central DB image is pushed by its build pipeline.
    type: string
    default: "quay.io/rhacs-eng/central-db"
  - name: central-db-image-catalog-repo
    description: Repository within the Red Hat Container Catalog where the Central DB image is pushed to during the release.
    type: string
    default: "registry.redhat.io/advanced-cluster-security/rhacs-central-db-rhel8"

  - name: application
    description: Name of the Konflux application that the bundle is created for to use in snapshot.
    type: string
    default: "acs"

  results:
  # - description: ""
  #   name: IMAGE_URL
  #   value: $(tasks.build-container.results.IMAGE_URL)
  # - description: ""
  #   name: IMAGE_DIGEST
  #   value: $(tasks.build-container.results.IMAGE_DIGEST)
  - description: ""
    name: CHAINS-GIT_URL
    value: $(tasks.clone-repository.results.url)
  - description: ""
    name: CHAINS-GIT_COMMIT
    value: $(tasks.clone-repository.results.commit)
  # - description: ""
  #   name: JAVA_COMMUNITY_DEPENDENCIES
  #   value: $(tasks.build-container.results.JAVA_COMMUNITY_DEPENDENCIES)

  workspaces:
  - name: git-auth

  tasks:

  - name: init
    params:
    - name: image-url
      # We can't provide a StackRox-style tag because it is not known at this time (requires cloning source, etc.)
      # As a workaround, we still provide a unique tag that's based on a revision to this task to comply with its
      # expected input. We later actually add this tag on a built image with apply-tags task.
      value: $(params.output-image-repo):konflux-$(params.revision)
    - name: rebuild
      value: $(params.rebuild)
    - name: skip-checks
      value: $(params.skip-checks)
    taskRef:
      params:
      - name: name
        value: init
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:0523b51c28375a3f222da91690e22eff11888ebc98a0c73c468af44762265c69
      - name: kind
        value: task
      resolver: bundles

  - name: clone-repository
    params:
    - name: url
      value: $(params.git-url)
    - name: revision
      value: $(params.revision)
    - name: depth
      value: $(params.clone-depth)
    - name: fetchTags
      value: $(params.clone-fetch-tags)
    - name: ociStorage
      value: $(params.output-image-repo):konflux-$(params.revision).git
    - name: ociArtifactExpiresAfter
      value: $(params.oci-artifact-expires-after)
    taskRef:
      params:
      - name: name
        value: git-clone-oci-ta
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta:0.1@sha256:4bf48d038ff12d25bdeb5ab3e98dc2271818056f454c83d7393ebbd413028147
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(tasks.init.results.build)
      operator: in
      values: [ "true" ]
    workspaces:
    - name: basic-auth
      workspace: git-auth

  - name: create-acs-style-snapshot
    params:
    - name: SOURCE_ARTIFACT
      value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
    - name: APPLICATION
      valueFrom:
        fieldRef:
          fieldPath: metadata.labels['appstudio.openshift.io/application']

    - name: IMAGE_REFS
      value: |
        [
          {
            component: scanner-slim,
            ref: quay.io/rhacs-eng/scanner-slim@sha256:7b8e00ffbad318ff0aca32ba484eaf9493335d26195938704fb25efc73d36302
          },
        ]
    taskRef:
      name: create-snapshot
