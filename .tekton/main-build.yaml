apiVersion: tekton.dev/v1
kind: PipelineRun

metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/stackrox/stackrox?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "500"
    # TODO(ROX-21073): re-enable for all PR branches
    pipelinesascode.tekton.dev/on-cel-expression: |
      (event == "push" && target_branch.matches("^(master|release-.*)$")) ||
      (event == "pull_request" && (source_branch.matches("(konflux|appstudio|rhtap)") || body.pull_request.labels.exists(l, l.name == "konflux-build")))
  labels:
    appstudio.openshift.io/application: acs
    appstudio.openshift.io/component: main
    pipelines.appstudio.openshift.io/type: build
  name: main-build
  namespace: rh-acs-tenant

spec:

  params:
  - name: dockerfile
    value: image/rhel/konflux.Dockerfile
  - name: git-url
    value: '{{repo_url}}'
  - name: image-expires-after
    # TODO(ROX-24530): return expiration for non-released images to 13w
    value: '52w'
  - name: output-image-repo
    value: quay.io/rhacs-eng/main
  - name: path-context
    value: .
  - name: revision
    value: '{{revision}}'
  - name: rebuild
    value: 'true'
  # TODO(ROX-20234): Enable hermetic builds
  # - name: hermetic
  #   value: "true"
  - name: prefetch-input
    value: |
      [
        { "type": "npm", "path": "ui/apps/platform" },
        { "type": "gomod", "path": "." }
      ]
  - name: build-source-image
    value: 'true'
  - name: clone-depth
    value: '0'
  - name: clone-fetch-tags
    value: 'true'

  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'

  timeouts:
    # Slow multiarch builds may take around 2h to finish.
    tasks: 2h30m
    # Reserve time for final tasks to run.
    finally: 10m
    pipeline: 2h40m

  pipelineRef:
    name: main-pipeline

  taskRunSpecs:
  # For all sbom-syft-generate steps:
  # Memory is increased for the syft command to succeed. Otherwise, there's an error like this in log and container
  # exits with 137 (OOMKilled):
  # /tekton/scripts/script-2-h7nll: line 7:    33 Killed                  syft dir:$(cat /shared/container_path) --output cyclonedx-json=/var/workdir/sbom-image.json
  - pipelineTaskName: build-container-amd64
    stepSpecs:
    - name: build
      # CPU requests are increased to speed up builds compared to the defaults.
      # Defaults: https://github.com/konflux-ci/build-definitions/blob/main/task/buildah/0.1/buildah.yaml#L147
      #
      # Memory is increased for UI builds to succeed. Otherwise, there's an error like this in logs:
      # [build] @stackrox/platform-app: The build failed because the process exited too early. This probably means the system ran out of memory or someone called `kill -9` on the process.
      #
      # Not using buildah-6gb/-8gb/... because these don't have memory requests equal to limits which still occasionally
      # leads to failing builds.
      computeResources:
        limits:
          cpu: 4
          memory: 7Gi
        requests:
          cpu: 4
          memory: 7Gi
    - name: sbom-syft-generate
      computeResources:
        limits:
          memory: 3Gi
        requests:
          memory: 3Gi
  - pipelineTaskName: build-container-s390x
    stepSpecs:
    - name: sbom-syft-generate
      computeResources:
        limits:
          memory: 3Gi
        requests:
          memory: 3Gi
  - pipelineTaskName: build-container-ppc64le
    stepSpecs:
    - name: sbom-syft-generate
      computeResources:
        limits:
          memory: 3Gi
        requests:
          memory: 3Gi
  - pipelineTaskName: build-container-arm64
    stepSpecs:
    - name: sbom-syft-generate
      computeResources:
        limits:
          memory: 3Gi
        requests:
          memory: 3Gi
  - pipelineTaskName: clamav-scan
    stepSpecs:
    # Provision more CPU to speed up ClamAV scan compared to the defaults.
    # https://github.com/redhat-appstudio/build-definitions/blob/main/task/clamav-scan/0.1/clamav-scan.yaml#L48
    - name: extract-and-scan-image
      computeResources:
        requests:
          cpu: 1
