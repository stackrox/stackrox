syntax = "proto3";

package storage;

import "google/protobuf/timestamp.proto";

option go_package = "./storage;storage";
option java_package = "io.stackrox.proto.storage";

// VulnerabilityState indicates if vulnerability is being observed or deferred(/suppressed). By default, it vulnerabilities are observed.
enum VulnerabilityState {
  OBSERVED = 0; // [Default state]
  DEFERRED = 1;
  FALSE_POSITIVE = 2;
}

enum VulnerabilitySeverity {
  UNKNOWN_VULNERABILITY_SEVERITY = 0;
  LOW_VULNERABILITY_SEVERITY = 1;
  MODERATE_VULNERABILITY_SEVERITY = 2;
  IMPORTANT_VULNERABILITY_SEVERITY = 3;
  CRITICAL_VULNERABILITY_SEVERITY = 4;
}

// ******************************
// This proto is deprecated.
// ******************************
// Next Tag: 23
message CVE {
  enum CVEType {
    UNKNOWN_CVE = 0;
    IMAGE_CVE = 1;
    K8S_CVE = 2;
    ISTIO_CVE = 3;
    NODE_CVE = 4;
    OPENSHIFT_CVE = 5;
  }
  message DistroSpecific {
    VulnerabilitySeverity severity = 1;
    float cvss = 2;
    ScoreVersion score_version = 3;
    CVSSV2 cvss_v2 = 4;
    CVSSV3 cvss_v3 = 5;
  }
  enum ScoreVersion {
    V2 = 0; // No unset for automatic backwards compatibility
    V3 = 1;
    UNKNOWN = 2;
  }
  message Reference {
    string URI = 1;
    repeated string tags = 2;
  }

  string id = 1; // @gotags: search:"CVE,store"
  // This was CVE which was added as a part of postgres migration.
  reserved 22;
  // This was operating system which was added as a part of postgres migration.
  reserved 21;
  float cvss = 2; // @gotags: search:"CVSS,store"
  float impact_score = 14; // @gotags: search:"Impact Score"

  // For internal purposes only. This will only be populated prior to upsert into datastore.
  // Cluster cves are split between k8s and istio. The type info is a relationship attribute and not a property of cve itself.
  // TODO: Move type to relationship objects.

  CVEType type = 3; // @gotags: sql:"-"
  repeated CVEType types = 18; // @gotags: search:"CVE Type"

  string summary = 4;
  string link = 5;
  // This indicates the timestamp when the cve was first published in the cve feeds.
  google.protobuf.Timestamp published_on = 6; // @gotags: search:"CVE Published On"
  // Time when the CVE was first seen in the system.
  google.protobuf.Timestamp created_at = 15; // @gotags: search:"CVE Created Time"
  google.protobuf.Timestamp last_modified = 7;
  repeated Reference references = 8;

  ScoreVersion score_version = 9;
  CVSSV2 cvss_v2 = 10;
  CVSSV3 cvss_v3 = 11;

  // TODO: Move suppression field out of CVE object. Maybe create equivalent dummy vulnerability requests.
  // Unfortunately, although there exists image SAC check on legacy suppress APIs,
  // one can snooze node and cluster type vulns, so we will have to carry over the support for node and cluster cves.

  bool suppressed = 12; // @gotags: search:"CVE Snoozed"
  google.protobuf.Timestamp suppress_activation = 16;
  google.protobuf.Timestamp suppress_expiry = 17; // @gotags: search:"CVE Snooze Expiry,hidden"

  map<string, DistroSpecific> distro_specifics = 19;
  VulnerabilitySeverity severity = 20; // @gotags: search:"Severity"
}

message CVEInfo {
  message Reference {
    string URI = 1;
    repeated string tags = 2;
  }
  enum ScoreVersion {
    V2 = 0; // No unset for automatic backwards compatibility
    V3 = 1;
    UNKNOWN = 2;
  }
  string cve = 1; // @gotags: search:"CVE,store" sql:"index=hash"
  string summary = 2;
  string link = 3;
  // This indicates the timestamp when the cve was first published in the cve feeds.
  google.protobuf.Timestamp published_on = 4; // @gotags: search:"CVE Published On"
  // Time when the CVE was first seen in the system.
  google.protobuf.Timestamp created_at = 5; // @gotags: search:"CVE Created Time"
  google.protobuf.Timestamp last_modified = 6;
  ScoreVersion score_version = 7;
  CVSSV2 cvss_v2 = 8;
  CVSSV3 cvss_v3 = 9;
  repeated Reference references = 10;
}

message ImageCVE {
  string id = 1; // This field is composite of cve and operating system. // @gotags: search:"CVE ID,hidden" sql:"pk,id"
  CVEInfo cve_base_info = 2;
  string operating_system = 3; // @gotags: search:"Operating System"

  float cvss = 4; // @gotags: search:"CVSS,store"
  VulnerabilitySeverity severity = 5; // @gotags: search:"Severity"
  float impact_score = 6; // @gotags: search:"Impact Score"

  bool snoozed = 7 [deprecated = true]; // @gotags: search:"CVE Snoozed"
  google.protobuf.Timestamp snooze_start = 8 [deprecated = true];
  google.protobuf.Timestamp snooze_expiry = 9 [deprecated = true]; // @gotags: search:"CVE Snooze Expiry,hidden"
}

message NodeCVE {
  string id = 1; // This field is composite of cve and operating system. // @gotags: search:"CVE ID,hidden" sql:"pk,id"
  CVEInfo cve_base_info = 2;
  string operating_system = 3; // @gotags: search:"Operating System"

  float cvss = 4; // @gotags: search:"CVSS,store"
  VulnerabilitySeverity severity = 5; // @gotags: search:"Severity"
  float impact_score = 6; // @gotags: search:"Impact Score"

  bool snoozed = 7; // @gotags: search:"CVE Snoozed"
  google.protobuf.Timestamp snooze_start = 8;
  google.protobuf.Timestamp snooze_expiry = 9; // @gotags: search:"CVE Snooze Expiry,hidden"

  bool orphaned = 10; // @gotags: search:"CVE Orphaned,hidden"
  google.protobuf.Timestamp orphaned_time = 11; // @gotags: search:"CVE Orphaned Time,hidden"
}

message ClusterCVE {
  string id = 1; // This field is composite of cve and type. // @gotags: search:"CVE ID,hidden" sql:"pk,id"
  CVEInfo cve_base_info = 2;

  float cvss = 3; // @gotags: search:"CVSS,store"
  VulnerabilitySeverity severity = 4; // @gotags: search:"Severity"
  float impact_score = 5; // @gotags: search:"Impact Score"

  bool snoozed = 6; // @gotags: search:"CVE Snoozed"
  google.protobuf.Timestamp snooze_start = 7;
  google.protobuf.Timestamp snooze_expiry = 8; // @gotags: search:"CVE Snooze Expiry,hidden"
  CVE.CVEType type = 9; // @gotags: search:"CVE Type"
}

message CVSSV2 {
  enum Impact {
    IMPACT_NONE = 0;
    IMPACT_PARTIAL = 1;
    IMPACT_COMPLETE = 2;
  }
  enum AttackVector {
    ATTACK_LOCAL = 0;
    ATTACK_ADJACENT = 1;
    ATTACK_NETWORK = 2;
  }
  enum AccessComplexity {
    ACCESS_HIGH = 0;
    ACCESS_MEDIUM = 1;
    ACCESS_LOW = 2;
  }
  enum Authentication {
    AUTH_MULTIPLE = 0;
    AUTH_SINGLE = 1;
    AUTH_NONE = 2;
  }
  enum Severity {
    UNKNOWN = 0;
    LOW = 1;
    MEDIUM = 2;
    HIGH = 3;
  }

  string vector = 1;
  AttackVector attack_vector = 2;
  AccessComplexity access_complexity = 3;
  Authentication authentication = 4;
  Impact confidentiality = 5;
  Impact integrity = 6;
  Impact availability = 7;
  float exploitability_score = 8;
  float impact_score = 9;
  float score = 10;
  Severity severity = 11;
}

message CVSSV3 {
  enum Impact {
    IMPACT_NONE = 0;
    IMPACT_LOW = 1;
    IMPACT_HIGH = 2;
  }
  enum AttackVector {
    ATTACK_LOCAL = 0;
    ATTACK_ADJACENT = 1;
    ATTACK_NETWORK = 2;
    ATTACK_PHYSICAL = 3;
  }
  enum Complexity {
    COMPLEXITY_LOW = 0;
    COMPLEXITY_HIGH = 1;
  }
  enum Privileges {
    PRIVILEGE_NONE = 0;
    PRIVILEGE_LOW = 1;
    PRIVILEGE_HIGH = 2;
  }
  enum UserInteraction {
    UI_NONE = 0;
    UI_REQUIRED = 1;
  }
  enum Scope {
    UNCHANGED = 0;
    CHANGED = 1;
  }
  enum Severity {
    UNKNOWN = 0;
    NONE = 1;
    LOW = 2;
    MEDIUM = 3;
    HIGH = 4;
    CRITICAL = 5;
  }

  string vector = 1;
  float exploitability_score = 2;
  float impact_score = 3;
  AttackVector attack_vector = 4;
  Complexity attack_complexity = 5;
  Privileges privileges_required = 6;
  UserInteraction user_interaction = 7;
  Scope scope = 8;
  Impact confidentiality = 9;
  Impact integrity = 10;
  Impact availability = 11;
  float score = 12;
  Severity severity = 13;
}
