edition = "2023";  // successor to proto2 and proto3

package storage;
import "google/protobuf/go_features.proto";

option go_package = "./storage;storage";
option java_package = "io.stackrox.proto.storage";
option features.(pb.go).api_level = API_HYBRID;
option features.field_presence = IMPLICIT;
option features.enum_type = OPEN;
// `packed=false` needs to be transformed to field-level repeated_field_encoding
// features in Editions syntax
option features.json_format = ALLOW;
option features.utf8_validation = VERIFY;

message ServiceIdentity {
  string serial_str = 4; // The serial number in decimal representation. @gotags: sql:"pk"
  oneof srl {
    int64 serial = 1 [deprecated = true];
  }
  string id = 2;
  ServiceType type = 3;
  string init_bundle_id = 5;
}

// Next available tag: 18
enum ServiceType {
  UNKNOWN_SERVICE = 0;
  SENSOR_SERVICE = 1;
  CENTRAL_SERVICE = 2;
  CENTRAL_DB_SERVICE = 12;
  REMOTE_SERVICE = 3;
  COLLECTOR_SERVICE = 4;
  MONITORING_UI_SERVICE = 5;
  MONITORING_DB_SERVICE = 6;
  MONITORING_CLIENT_SERVICE = 7;
  BENCHMARK_SERVICE = 8;
  SCANNER_SERVICE = 9;
  SCANNER_DB_SERVICE = 10;
  ADMISSION_CONTROL_SERVICE = 11;
  SCANNER_V4_INDEXER_SERVICE = 13;
  SCANNER_V4_MATCHER_SERVICE = 14;
  SCANNER_V4_DB_SERVICE = 15;
  // This is used when Scanner V4 is run in combo-mode.
  SCANNER_V4_SERVICE = 16;
  REGISTRANT_SERVICE = 17;
}

message ServiceCertificate {
  bytes cert_pem = 1;
  bytes key_pem = 2;
}

message TypedServiceCertificate {
  ServiceType service_type = 1;
  ServiceCertificate cert = 2;
}

message TypedServiceCertificateSet {
  bytes ca_pem = 1;
  repeated TypedServiceCertificate service_certs = 2 [lazy = true];
  // Optional: all CA certificates that Central trusts (primary + secondary)
  bytes ca_bundle_pem = 3;
}
