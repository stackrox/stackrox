syntax = "proto3";

package storage;

import "storage/traits.proto";

option go_package = "storage";
option java_package = "io.stackrox.proto.storage";

// Group is a GroupProperties : Role mapping.
message Group {
  // GroupProperties define the properties of a group, applying to users when their properties match.
  // They also uniquely identify the group with the props.id field.
  GroupProperties props = 1;

  // This is the name of the role that will apply to users in this group.
  string role_name = 3; // @gotags: search:"Role,hidden" sql:"index=name:groups_unique_indicator;category:unique"
}

// GroupProperties defines the properties of a group. Groups apply to users when
// their properties match. For instance:
//   - If GroupProperties has only an auth_provider_id, then that group applies
//     to all users logged in with that auth provider.
//   - If GroupProperties in addition has a claim key, then it applies to all
//     users with that auth provider and the claim key, etc.
// Note: Changes to GroupProperties may require changes to v1.DeleteGroupRequest.
message GroupProperties {
  // Unique identifier for group properties and respectively the group.
  string id = 4; // @gotags: sql:"pk"
  Traits traits = 5;

  string auth_provider_id = 1; // @gotags: search:"Group Auth Provider,hidden" sql:"index=category:unique;name:groups_unique_indicator"
  string key = 2; // @gotags: search:"Group Key,hidden" sql:"index=category:unique;name:groups_unique_indicator"
  string value = 3; // @gotags: search:"Group Value,hidden" sql:"index=category:unique;name:groups_unique_indicator"
}
