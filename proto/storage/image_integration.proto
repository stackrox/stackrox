syntax = "proto3";

option go_package = "storage";
option java_package = "io.stackrox.proto.storage";

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

package storage;

// Next Tag: 21
message ImageIntegration {
    string id                                    = 1;
    string name                                  = 2;
    string type                                  = 3;
    // Accidentally skipped or accidentally deleted?
    reserved 4;
    // Previously, repeated string clusters.
    reserved 5;
    repeated ImageIntegrationCategory categories = 6;

    oneof IntegrationConfig {
        DTRConfig         dtr       = 7;
        ClairifyConfig    clairify  = 8;
        DockerConfig      docker    = 9;
        QuayConfig        quay      = 10;
        ECRConfig         ecr       = 11;
        TenableConfig     tenable   = 12;
        GoogleConfig      google    = 13;
        ClairConfig       clair     = 14;
        AnchoreConfig     anchore   = 17;
        IBMRegistryConfig ibm       = 20;
    }

    bool   autogenerated         = 15;
    string cluster_id            = 16;
    bool   skip_test_integration = 18;

    reserved 19; // Previously, scannerv2
}

message IBMRegistryConfig {
    string endpoint = 1 [(gogoproto.moretags) = "scrub:\"dependent\" validate:\"nolocalendpoint\""];
    // The API key for the integration. The server will mask the value of this credential in responses and logs.
    string api_key  = 2 [(gogoproto.moretags) = "scrub:\"always\""];
}

message QuayConfig {
    string endpoint   = 1 [(gogoproto.moretags) = "scrub:\"dependent\" validate:\"nolocalendpoint\""];
    // The OAuth token for the integration. The server will mask the value of this credential in responses and logs.
    string oauthToken = 2 [(gogoproto.moretags) = "scrub:\"always\""];
    bool   insecure   = 3;
}

message ClairConfig {
    string endpoint = 1 [(gogoproto.moretags) = "validate:\"nolocalendpoint\""];
    bool   insecure = 2;
}

message ClairifyConfig {
    string endpoint             = 1 [(gogoproto.moretags) = "validate:\"nolocalendpoint\""];
    string grpc_endpoint        = 3 [(gogoproto.moretags) = "validate:\"nolocalendpoint\""];
    int32  num_concurrent_scans = 2;
}

message DockerConfig {
    string endpoint = 1 [(gogoproto.moretags) = "scrub:\"dependent\" validate:\"nolocalendpoint\""];
    string username = 2 [(gogoproto.moretags) = "scrub:\"dependent\""];
    // The password for the integration. The server will mask the value of this credential in responses and logs.
    string password = 3 [(gogoproto.moretags) = "scrub:\"always\""];
    bool   insecure = 4;
}

message ECRConfig {
    string registry_id                   = 1;
    // The access key ID for the integration. The server will mask the value of this credential in responses and logs.
    string access_key_id                 = 2 [(gogoproto.moretags) = "scrub:\"always\""];
    // The secret access key for the integration. The server will mask the value of this credential in responses and logs.
    string secret_access_key             = 3 [(gogoproto.moretags) = "scrub:\"always\""];
    string region                        = 4;
    bool   use_iam                       = 5 [(gogoproto.moretags) = "scrub:\"dependent\""];
    string endpoint                      = 6 [(gogoproto.moretags) = "scrub:\"dependent\" validate:\"nolocalendpoint\""];
    bool   use_assume_role               = 7;
    string assume_role_id                = 8;
    string assume_role_external_id       = 9;
    AuthorizationData authorization_data = 10;

    // An authorization data represents the IAM authentication credentials and
    // can be used to access any Amazon ECR registry that the IAM principal has
    // access to.
    message AuthorizationData {
        string username                      = 1;
        string password                      = 2 [(gogoproto.moretags) = "scrub:\"always\""];
        google.protobuf.Timestamp expires_at = 3;
    }
}

message DTRConfig {
    string username = 1 [(gogoproto.moretags) = "scrub:\"dependent\""];
    // The password for the integration. The server will mask the value of this credential in responses and logs.
    string password = 2 [(gogoproto.moretags) = "scrub:\"always\""];
    string endpoint = 3 [(gogoproto.moretags) = "scrub:\"dependent\" validate:\"nolocalendpoint\""];
    bool  insecure  = 4;
}

message GoogleConfig {
    string endpoint        = 1 [(gogoproto.moretags) = "scrub:\"dependent\" validate:\"nolocalendpoint\""];
    // The service account for the integration. The server will mask the value of this credential in responses and logs.
    string service_account = 2 [(gogoproto.moretags) = "scrub:\"always\""];
    string project         = 3;
}

message TenableConfig {
    // The access key for the integration. The server will mask the value of this credential in responses and logs.
    string access_key = 1 [(gogoproto.moretags) = "scrub:\"always\""];
    // The secret key for the integration. The server will mask the value of this credential in responses and logs.
    string secret_key = 2 [(gogoproto.moretags) = "scrub:\"always\""];
}

message AnchoreConfig {
    string endpoint = 1 [(gogoproto.moretags) = "scrub:\"dependent\" validate:\"nolocalendpoint\""];
    string username = 2 [(gogoproto.moretags) = "scrub:\"dependent\""];
    // The password for the integration. The server will mask the value of this credential in responses and logs.
    string password = 3 [(gogoproto.moretags) = "scrub:\"always\""];
    bool   insecure = 4;
}

enum ImageIntegrationCategory {
    REGISTRY     = 0;
    SCANNER      = 1;
    // Image and Node integrations are currently done on the same form in the UI
    // so the image integration is also currently used for node integrations.
    // This decision was made because we currently only support one node scanner (our scanner).
    NODE_SCANNER = 2;
}
