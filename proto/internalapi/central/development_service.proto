syntax = "proto3";

option go_package = "central";
option java_package = "io.stackrox.proto.internalapi.central";


import weak "google/api/annotations.proto";

// This is an internal service which contains tools intended to be used only for testing.
// It will NOT be available in Central in production builds.
package central;

message URLHasValidCertRequest {
    string url = 1;
}

message URLHasValidCertResponse {
    enum URLResult {
        UNSET = 0;
        CERT_SIGNED_BY_UNKNOWN_AUTHORITY = 1;
        CERT_SIGNING_AUTHORITY_VALID_BUT_OTHER_ERROR = 2;
        OTHER_GET_ERROR = 3;
        REQUEST_SUCCEEDED = 4;
    }
    URLResult result  = 1;
    string details    = 2;
}

message RandomDataRequest {
    int32 size = 1;
}

message RandomDataResponse {
    bytes data = 1;
}

message EnvVarsResponse {
    repeated string env_vars = 1;
}

message  ReconciliationStatsByClusterResponse {
    message ReconciliationStatsForCluster {
        string             cluster_id              = 1;
        bool               reconciliation_done     = 2;
        map<string, int32> deleted_objects_by_type = 3;
    }
    repeated ReconciliationStatsForCluster stats = 1;
}

message ReplicateImageRequest {
    string id    = 1;
    int32  times = 2;
}

message Empty {}

service DevelopmentService {
    rpc ReplicateImage (ReplicateImageRequest) returns (Empty) {
        option (google.api.http) = {
            post: "/v1/internal/dev/image/replicate"
            body: "*"
        };
    }

    rpc URLHasValidCert (URLHasValidCertRequest) returns (URLHasValidCertResponse) {
        option (google.api.http) = {
            get: "/v1/internal/dev/certcheck"
        };
    }

    rpc RandomData (RandomDataRequest) returns (RandomDataResponse) {
        option (google.api.http) = {
            get: "/v1/internal/dev/random"
        };
    }

    rpc EnvVars (Empty) returns (EnvVarsResponse) {
        option (google.api.http) = {
            get: "/v1/internal/dev/envvars"
        };
    }

    rpc ReconciliationStatsByCluster(Empty) returns (ReconciliationStatsByClusterResponse) {
        option (google.api.http) = {
            get: "/v1/internal/dev/reconciliationstats"
        };

    }
}
