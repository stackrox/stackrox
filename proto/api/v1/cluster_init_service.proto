syntax = "proto3";

option go_package = "v1";
option java_package = "io.stackrox.proto.api.v1";

import weak "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "api/v1/empty.proto";
import "storage/user.proto";

package v1;

message InitBundleMeta {
    message ImpactedCluster {
        string name = 1;
        string id   = 2;
    }

    string                    id                = 1;
    string                    name              = 2;
    repeated ImpactedCluster  impacted_clusters = 6;
    google.protobuf.Timestamp created_at        = 3;
    storage.User              created_by        = 4;
    google.protobuf.Timestamp expires_at        = 5;
}

message InitBundleGenResponse {
    InitBundleMeta meta               = 1;
    bytes          helm_values_bundle = 2;
    bytes          kubectl_bundle     = 3;
}

message GetCAConfigResponse {
    bytes helm_values_bundle = 1;
}

message InitBundleMetasResponse {
    repeated InitBundleMeta items = 1;
}

message InitBundleGenRequest {
    string name = 1;
}

message InitBundleRevokeRequest {
    repeated string ids                           = 1;
    repeated string confirm_impacted_clusters_ids = 2;

}


message InitBundleRevokeResponse {
    message InitBundleRevocationError {
        string                                  id                = 1;
        string                                  error             = 2;
        repeated InitBundleMeta.ImpactedCluster impacted_clusters = 3;
    }

    repeated InitBundleRevocationError init_bundle_revocation_errors = 2;
    repeated string init_bundle_revoked_ids = 3;
}

// ClusterInitService manages cluster init bundles.
service ClusterInitService {
    // RevokeInitBundle deletes cluster init bundle. If this operation impacts any cluster
    // then its ID should be included in request.
    // If confirm_impacted_clusters_ids does not match with current impacted clusters
    // then request will fail with error that includes all impacted clusters.
    rpc RevokeInitBundle(InitBundleRevokeRequest) returns (InitBundleRevokeResponse) {
        option (google.api.http) = {
            patch: "/v1/cluster-init/init-bundles/revoke",
            body: "*"
        };
    }

    rpc GetCAConfig(Empty) returns (GetCAConfigResponse) {
        option (google.api.http) = {
            get: "/v1/cluster-init/ca-config"
        };
    }

    rpc GetInitBundles(Empty) returns (InitBundleMetasResponse) {
        option (google.api.http) = {
            get: "/v1/cluster-init/init-bundles"
        };
    }

    rpc GenerateInitBundle(InitBundleGenRequest) returns (InitBundleGenResponse) {
        option (google.api.http) = {
            post: "/v1/cluster-init/init-bundles"
            body: "*"
        };
    }
}
