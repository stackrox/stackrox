syntax = "proto3";

package v1;

import "api/v1/empty.proto";
import weak "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "v1";

message UsageRequest {
  google.protobuf.Timestamp from = 1;
  google.protobuf.Timestamp to = 2;
}

message CurrentUsageResponse {
  google.protobuf.Timestamp timestamp = 1;

  int32 num_nodes = 2;
  int32 num_cores = 3;
}

message MaxUsageResponse {
  google.protobuf.Timestamp max_nodes_at = 1;
  int32 max_nodes = 2;
  google.protobuf.Timestamp max_cores_at = 3;
  int32 max_cores = 4;
}

service UsageService {
  // GetCurrentUsage
  //
  // Returns current usage, with about 5 minutes precision.
  rpc GetCurrentUsage(v1.Empty) returns (CurrentUsageResponse) {
    option (google.api.http) = {get: "/v1/usage/current"};
  }

  // GetMaxUsage
  //
  // Returns maximum, i.e. peak, usage for the given time frame together
  // with the time when this maximum was observed.
  rpc GetMaxUsage(UsageRequest) returns (MaxUsageResponse) {
    option (google.api.http) = {get: "/v1/usage/max"};
  }
}
