syntax = "proto3";

package v1;

import "api/v1/common.proto";
import "api/v1/search_service.proto";
import weak "google/api/annotations.proto";
import "storage/rbac.proto";

option go_package = "./;v1";
option java_package = "io.stackrox.proto.api.v1";

// API specific objects.
////////////////////////

// A list of k8s roles (free of scoped information)
// Next Tag: 2
message ListRolesResponse {
  repeated storage.K8sRole roles = 1;
}

message GetRoleResponse {
  storage.K8sRole role = 1;
}

// A list of k8s role bindings (free of scoped information)
// Next Tag: 2
message ListRoleBindingsResponse {
  repeated storage.K8sRoleBinding bindings = 1;
}

message GetRoleBindingResponse {
  storage.K8sRoleBinding binding = 1;
}

// A list of k8s subjects (users and groups only, for service accounts, try the service account service)
// Next Tag: 2
message ListSubjectsResponse {
  repeated SubjectAndRoles subject_and_roles = 1;
}

message SubjectAndRoles {
  storage.Subject subject = 1;
  repeated storage.K8sRole roles = 2;
}

message GetSubjectResponse {
  storage.Subject subject = 1;
  repeated storage.K8sRole cluster_roles = 2;
  repeated ScopedRoles scoped_roles = 3;
}

message ScopedRoles {
  string namespace = 1;
  repeated storage.K8sRole roles = 2;
}

service RbacService {
  rpc GetRole(ResourceByID) returns (GetRoleResponse) {
    option (google.api.http) = {get: "/v1/rbac/roles/{id}"};
  }

  rpc ListRoles(RawQuery) returns (ListRolesResponse) {
    option (google.api.http) = {get: "/v1/rbac/roles"};
  }

  rpc GetRoleBinding(ResourceByID) returns (GetRoleBindingResponse) {
    option (google.api.http) = {get: "/v1/rbac/bindings/{id}"};
  }

  rpc ListRoleBindings(RawQuery) returns (ListRoleBindingsResponse) {
    option (google.api.http) = {get: "/v1/rbac/bindings"};
  }

  // Subjects served from this API are Groups and Users only.
  // Id in this case is the Name field, since for users and groups, that is unique, and subjects do not have IDs.
  rpc GetSubject(ResourceByID) returns (GetSubjectResponse) {
    option (google.api.http) = {get: "/v1/rbac/subject/{id}"};
  }

  rpc ListSubjects(RawQuery) returns (ListSubjectsResponse) {
    option (google.api.http) = {get: "/v1/rbac/subjects"};
  }
}
