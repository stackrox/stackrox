syntax = "proto3";

option go_package = "v1";
option java_package = "io.stackrox.proto.api.v1";

import weak "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "api/v1/network_baseline_service.proto";
import "api/v1/network_graph_service.proto";
import "api/v1/common.proto";
import "api/v1/empty.proto";
import "storage/network_baseline.proto";
import "storage/network_flow.proto";
import "storage/network_policy.proto";

package v1;

// API specific objects.
////////////////////////

message GetNetworkPoliciesRequest {
    string cluster_id        = 1;
    string deployment_query  = 2;
    string namespace         = 3;
}

message NetworkPoliciesResponse {
    repeated storage.NetworkPolicy network_policies = 1;
}

message SendNetworkPolicyYamlRequest {
    string                     cluster_id   = 1;
    repeated string            notifier_ids = 2;
    storage.NetworkPolicyModification  modification = 3;
}

message GetNetworkGraphRequest {
    string cluster_id = 1;
    string query      = 2;

    // If set to true, include port-level information in the network policy graph.
    bool              include_ports = 3;
    NetworkGraphScope scope         = 4;
}

message SimulateNetworkGraphRequest {
    string                            cluster_id        = 1;
    string                            query             = 2;
    storage.NetworkPolicyModification modification      = 3;

    // If set to true, include port-level information in the network policy graph.
    bool                              include_ports     = 4;
    bool                              include_node_diff = 5;
    NetworkGraphScope                 scope             = 6;
}

message ApplyNetworkPolicyYamlRequest {
    string  cluster_id                     = 1;
    storage.NetworkPolicyModification modification = 2;
}

message GetUndoModificationRequest {
    string cluster_id = 1;
}

message GetUndoModificationResponse {
    storage.NetworkPolicyApplicationUndoRecord undo_record = 1;
}

message NetworkPolicyInSimulation {
    enum Status {
        INVALID = 0;
        UNCHANGED = 1;
        MODIFIED = 2;
        ADDED = 3;
        DELETED = 4;
    }

    storage.NetworkPolicy policy = 1;
    Status        status = 2;
    storage.NetworkPolicy old_policy = 3;  // if status is MODIFIED or DELETED, this contains the previous network policy.
}

message NetworkNodeDiff {
    repeated string policy_ids = 1;
    map<int32, NetworkEdgePropertiesBundle> DEPRECATED_out_edges = 2 [deprecated = true];
    map<string, NetworkEdgePropertiesBundle> out_edges = 5;

    bool non_isolated_ingress = 3;
    bool non_isolated_egress  = 4;
}

message NetworkGraphDiff {
    map<int32, NetworkNodeDiff> DEPRECATED_node_diffs = 1 [deprecated = true];
    map<string, NetworkNodeDiff> node_diffs = 2;
}

message SimulateNetworkGraphResponse {
    NetworkGraph simulated_graph                = 1;
    repeated NetworkPolicyInSimulation policies = 2;

    NetworkGraphDiff added   = 3;
    NetworkGraphDiff removed = 4;
}

message GetNetworkGraphEpochRequest {
    string cluster_id = 1;
}

message NetworkGraphEpoch {
    uint32 epoch = 1;
}

// Next available tag: 5
message GenerateNetworkPoliciesRequest {
    enum DeleteExistingPoliciesMode {
        UNKNOWN        = 0;
        NONE           = 1;  // Do not delete any existing network policies.
        GENERATED_ONLY = 2;  // Delete any existing *auto-generated* network policies.
        ALL            = 3;  // Delete all existing network policies in the respective namespace.
    }

    string cluster_id                          = 1;
    string query                               = 2;
    DeleteExistingPoliciesMode delete_existing = 3;

    google.protobuf.Timestamp network_data_since = 4;

    bool include_ports = 5;
}

// Next available tag: 2
message GenerateNetworkPoliciesResponse {
    storage.NetworkPolicyModification modification  = 1;
}

message GetBaselineGeneratedPolicyForDeploymentRequest {
    string deployment_id                          = 1;
    GenerateNetworkPoliciesRequest.DeleteExistingPoliciesMode delete_existing    = 2;
    bool include_ports = 3;
}

message GetBaselineGeneratedPolicyForDeploymentResponse {
    storage.NetworkPolicyModification modification = 1;
}

message GetAllowedPeersFromCurrentPolicyForDeploymentResponse {
    repeated NetworkBaselineStatusPeer allowed_peers = 1;
}

message ApplyNetworkPolicyYamlForDeploymentRequest {
    string deployment_id = 1;
    storage.NetworkPolicyModification modification = 2;
}

message GetUndoModificationForDeploymentResponse {
    storage.NetworkPolicyApplicationUndoRecord undo_record = 1;
}

message GetDiffFlowsReconciledFlow {
    storage.NetworkEntityInfo entity = 1;
    repeated storage.NetworkBaselineConnectionProperties added = 2;
    repeated storage.NetworkBaselineConnectionProperties removed = 3;
    repeated storage.NetworkBaselineConnectionProperties unchanged = 4;
}

message GetDiffFlowsGroupedFlow {
    storage.NetworkEntityInfo entity = 1;
    repeated storage.NetworkBaselineConnectionProperties properties = 2;
}

message GetDiffFlowsResponse {
    repeated GetDiffFlowsGroupedFlow added = 1;
    repeated GetDiffFlowsGroupedFlow removed = 2;
    repeated GetDiffFlowsReconciledFlow reconciled = 3;
}

service NetworkPolicyService {

    rpc GetNetworkPolicy (ResourceByID) returns (storage.NetworkPolicy) {
        option (google.api.http) = {
            get: "/v1/networkpolicies/{id}"
        };
    }

    rpc GetNetworkPolicies (GetNetworkPoliciesRequest) returns (NetworkPoliciesResponse) {
        option (google.api.http) = {
            get: "/v1/networkpolicies"
        };
    }

    rpc GetNetworkGraph (GetNetworkGraphRequest) returns (NetworkGraph) {
        option (google.api.http) = {
            get: "/v1/networkpolicies/cluster/{cluster_id}"
        };
    }

    rpc GetNetworkGraphEpoch (GetNetworkGraphEpochRequest) returns (NetworkGraphEpoch) {
        option (google.api.http) = {
            get: "/v1/networkpolicies/graph/epoch"
        };
    }

    rpc ApplyNetworkPolicy (ApplyNetworkPolicyYamlRequest) returns (Empty) {
        option (google.api.http) = {
            post: "/v1/networkpolicies/apply/{cluster_id}"
            body: "modification"
        };
    }

    rpc GetUndoModification (GetUndoModificationRequest) returns (GetUndoModificationResponse) {
        option (google.api.http) = {
            get: "/v1/networkpolicies/undo/{cluster_id}"
        };
    }

    rpc SimulateNetworkGraph (SimulateNetworkGraphRequest) returns (SimulateNetworkGraphResponse) {
        option (google.api.http) = {
            post: "/v1/networkpolicies/simulate/{cluster_id}"
            body: "modification"
        };
    }

    rpc SendNetworkPolicyYAML (SendNetworkPolicyYamlRequest) returns (Empty) {
        option (google.api.http) = {
            post: "/v1/networkpolicies/simulate/{cluster_id}/notify"
            body: "modification"
        };
    }

    rpc GenerateNetworkPolicies (GenerateNetworkPoliciesRequest) returns (GenerateNetworkPoliciesResponse) {
        option (google.api.http) = {
            get: "/v1/networkpolicies/generate/{cluster_id}"
        };
    }

    rpc GetBaselineGeneratedNetworkPolicyForDeployment (GetBaselineGeneratedPolicyForDeploymentRequest) returns (GetBaselineGeneratedPolicyForDeploymentResponse) {
        option (google.api.http) = {
            post: "/v1/networkpolicies/generate/baseline/{deployment_id}"
            body: "*"
        };
    }

    rpc GetAllowedPeersFromCurrentPolicyForDeployment (ResourceByID) returns (GetAllowedPeersFromCurrentPolicyForDeploymentResponse) {
        option (google.api.http) = {
            get: "/v1/networkpolicies/allowedpeers/{id}"
        };
    }

    rpc ApplyNetworkPolicyYamlForDeployment (ApplyNetworkPolicyYamlForDeploymentRequest) returns (Empty) {
        option (google.api.http) = {
            post: "/v1/networkpolicies/apply/deployment/{deployment_id}"
            body: "*"
        };
    }

    rpc GetUndoModificationForDeployment (ResourceByID) returns (GetUndoModificationForDeploymentResponse) {
        option (google.api.http) = {
            get: "/v1/networkpolicies/undo/deployment/{id}"
        };
    }

    rpc GetDiffFlowsBetweenPolicyAndBaselineForDeployment (ResourceByID) returns (GetDiffFlowsResponse) {
        option (google.api.http) = {
            get: "/v1/networkpolicies/baselinecomparison/{id}"
        };
    }

    rpc GetDiffFlowsFromUndoModificationForDeployment (ResourceByID) returns (GetDiffFlowsResponse) {
        option (google.api.http) = {
            get: "/v1/networkpolicies/undobaselinecomparison/{id}"
        };
    }
}
