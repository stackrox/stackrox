syntax = "proto3";

option go_package = "v1";
option java_package = "io.stackrox.proto.api.v1";

import weak "google/api/annotations.proto";
import "api/v1/empty.proto";
import "google/protobuf/timestamp.proto";

package v1;

// TimeRange allows for requesting data by a time range.
message TimeRange {
    google.protobuf.Timestamp from = 1;
    google.protobuf.Timestamp to   = 2;
}

// SecuredUnitsUsageResponse holds the values of the currently observable
// administration usage metrics.
message SecuredUnitsUsageResponse {
    int64 num_nodes     = 1;
    int64 num_cpu_units = 2;
}

// MaxSecuredUnitsUsageResponse holds the maximum values of the secured nodes
// and CPU Units (as reported by Kubernetes) with the time at which these
// values were aggregated, with the aggregation period accuracy (1h).
message MaxSecuredUnitsUsageResponse {
    google.protobuf.Timestamp max_nodes_at     = 1;
    int64 max_nodes                            = 2;
    google.protobuf.Timestamp max_cpu_units_at = 3;
    int64 max_cpu_units                        = 4;
}

service AdministrationUsageService {
    // GetCurrentSecuredUnitsUsage returns the current secured units usage
    // metrics values.
    //
    // Experimental API, feature in tech preview.
    //
    // The secured units metrics are collected from all connected clusters every
    // 5 minutes, so the returned result includes data for the connected
    // clusters accurate to about these 5 minutes, and potentially some outdated
    // data for the disconnected clusters.
    rpc GetCurrentSecuredUnitsUsage(v1.Empty) returns (SecuredUnitsUsageResponse) {
        option (google.api.http) = {
            get: "/v1/administration/usage/secured-units/current"
        };
    }

    // GetMaxSecuredUnitsUsage returns the maximum, i.e. peak, secured units
    // usage observed during a given time range, together with the time when
    // this maximum was aggregated and stored.
    //
    // Experimental API, feature in tech preview.
    //
    // The usage metrics are continuously collected from all the connected
    // clusters. The maximum values are kept for some period of time in memory,
    // and then, periodically, are stored to the database.
    // The last data from disconnected clusters are taken into account.
    rpc GetMaxSecuredUnitsUsage(TimeRange) returns (MaxSecuredUnitsUsageResponse) {
        option (google.api.http) = {
            get: "/v1/administration/usage/secured-units/max"
        };
    }
}
