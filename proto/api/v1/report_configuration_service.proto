syntax = "proto3";

option go_package = "v1";

option java_package = "io.stackrox.proto.api.v1";

import weak "google/api/annotations.proto";
import "api/v1/common.proto";
import "api/v1/empty.proto";
import "api/v1/search_service.proto";
import "storage/report_configuration.proto";

package v1;

message GetReportConfigurationsResponse {
    repeated storage.ReportConfiguration report_configs = 1;
}

message GetReportConfigurationResponse {
    storage.ReportConfiguration report_config = 1;
}

message PostReportConfigurationResponse {
    storage.ReportConfiguration report_config = 1;
}

message PostReportConfigurationRequest {
    storage.ReportConfiguration report_config = 1;
}

message UpdateReportConfigurationRequest {
    string id = 1;
    storage.ReportConfiguration report_config = 2;
}

message CountReportConfigurationsResponse {
    int32 count = 1;
}

service ReportConfigurationService {
    rpc GetReportConfigurations(RawQuery) returns (GetReportConfigurationsResponse) {
        option (google.api.http) = {
            get: "/v1/report/configurations"
        };
    }

    rpc GetReportConfiguration(ResourceByID) returns (GetReportConfigurationResponse) {
        option (google.api.http) = {
            get: "/v1/report/configurations/{id}"
        };
    }

    // PostReportConfiguration creates a report configuration
    rpc PostReportConfiguration (PostReportConfigurationRequest) returns (PostReportConfigurationResponse) {
        option (google.api.http) = {
            post: "/v1/report/configurations"
            body: "*"
        };
    }

    // UpdateReportConfiguration updates a report configuration
    rpc UpdateReportConfiguration (UpdateReportConfigurationRequest) returns (Empty) {
        option (google.api.http) = {
            put: "/v1/report/configurations/{id}"
            body: "*"
        };
    }

    // DeleteReportConfiguration removes a report configuration given its id
    rpc DeleteReportConfiguration (ResourceByID) returns (Empty) {
        option (google.api.http) = {
            delete: "/v1/report/configurations/{id}"
        };
    }

    // CountReportConfigurations returns the number of report configurations.
    rpc CountReportConfigurations (RawQuery) returns (CountReportConfigurationsResponse) {
        option (google.api.http) = {
            get: "/v1/report-configurations-count"
        };
    }
}

