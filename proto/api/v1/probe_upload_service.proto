edition = "2023";  // successor to proto2 and proto3

package v1;

import weak "google/api/annotations.proto";
import "google/protobuf/go_features.proto";

option go_package = "./api/v1;v1";
option java_package = "io.stackrox.proto.api.v1";
option features.(pb.go).api_level = API_HYBRID;
option features.field_presence = IMPLICIT;
option features.enum_type = OPEN;
// `packed=false` needs to be transformed to field-level repeated_field_encoding
// features in Editions syntax
option features.json_format = ALLOW;
option features.utf8_validation = VERIFY;

message ProbeUploadManifest {
  message File {
    string name = 1;
    int64 size = 2;
    uint32 crc32 = 3;
  }

  repeated File files = 1 [lazy = true];
}

message GetExistingProbesRequest {
  repeated string files_to_check = 1;
}

message GetExistingProbesResponse {
  repeated ProbeUploadManifest.File existing_files = 1 [lazy = true];
}

service ProbeUploadService {
  rpc GetExistingProbes(GetExistingProbesRequest) returns (GetExistingProbesResponse) {
    option (google.api.http) = {post: "/v1/probeupload/getexisting"};
  }
}
