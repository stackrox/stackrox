syntax = "proto3";

package v1;

import "api/v1/common.proto";
import "api/v1/rbac_service.proto";
import "api/v1/search_service.proto";
import weak "google/api/annotations.proto";
import "storage/rbac.proto";
import "storage/service_account.proto";

option go_package = "./;v1";
option java_package = "io.stackrox.proto.api.v1";

// API specific objects.
////////////////////////

// A list of service accounts (free of scoped information)
// Next Tag: 2
message ListServiceAccountResponse {
  repeated ServiceAccountAndRoles sa_and_roles = 1;
}

// A service account and the roles that reference it
// Next Tag: 5
message ServiceAccountAndRoles {
  storage.ServiceAccount service_account = 1;
  repeated storage.K8sRole cluster_roles = 2;
  repeated ScopedRoles scoped_roles = 3;
  repeated SADeploymentRelationship deployment_relationships = 4;
}

// One service account
// Next Tag: 2
message GetServiceAccountResponse {
  ServiceAccountAndRoles sa_and_role = 1;
}

// Service accounts can be used by a deployment.
// Next Tag: 3
message SADeploymentRelationship {
  // Id of the deployment using the service account
  string id = 1;
  // Name of the deployment.
  string name = 2;
}

service ServiceAccountService {
  rpc GetServiceAccount(ResourceByID) returns (GetServiceAccountResponse) {
    option (google.api.http) = {get: "/v1/serviceaccounts/{id}"};
  }

  rpc ListServiceAccounts(RawQuery) returns (ListServiceAccountResponse) {
    option (google.api.http) = {get: "/v1/serviceaccounts"};
  }
}
