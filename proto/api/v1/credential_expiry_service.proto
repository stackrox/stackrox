edition = "2023";  // successor to proto2 and proto3

package v1;

import weak "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/go_features.proto";

option go_package = "./api/v1;v1";
option java_package = "io.stackrox.proto.api.v1";
option features.(pb.go).api_level = API_HYBRID;
option features.field_presence = IMPLICIT;
option features.enum_type = OPEN;
// `packed=false` needs to be transformed to field-level repeated_field_encoding
// features in Editions syntax
option features.json_format = ALLOW;
option features.utf8_validation = VERIFY;

message GetCertExpiry {
  enum Component {
    UNKNOWN = 0;
    CENTRAL = 1;
    SCANNER = 2;
    SCANNER_V4 = 3;
    CENTRAL_DB = 4;
  }

  message Request {
    Component component = 1;
  }

  message Response {
    google.protobuf.Timestamp expiry = 1 [lazy = true];
  }
}

// CredentialExpiryService APIs can be used to retrieve information related to expiry
// of credentials of various StackRox services.
service CredentialExpiryService {
  // GetCertExpiry returns information related to the expiry component mTLS certificate.
  rpc GetCertExpiry(GetCertExpiry.Request) returns (GetCertExpiry.Response) {
    option (google.api.http) = {get: "/v1/credentialexpiry"};
  }
}
