edition = "2023";  // successor to proto2 and proto3

package v1;

import "api/v1/search_service.proto";
import weak "google/api/annotations.proto";
import "storage/deployment.proto";
import "google/protobuf/go_features.proto";

option go_package = "./api/v1;v1";
option java_package = "io.stackrox.proto.api.v1";
option features.(pb.go).api_level = API_HYBRID;
option features.field_presence = IMPLICIT;
option features.enum_type = OPEN;
// `packed=false` needs to be transformed to field-level repeated_field_encoding
// features in Editions syntax
option features.json_format = ALLOW;
option features.utf8_validation = VERIFY;

message PodsResponse {
  repeated storage.Pod pods = 1 [lazy = true];
}

message ExportPodRequest {
  int32 timeout = 1;
  string query = 2;
}

message ExportPodResponse {
  storage.Pod pod = 1 [lazy = true];
}

// PodService APIs can be used to manage pods.
service PodService {
  // GetPods returns the pods.
  rpc GetPods(RawQuery) returns (PodsResponse) {
    option (google.api.http) = {get: "/v1/pods"};
  }

  rpc ExportPods(ExportPodRequest) returns (stream ExportPodResponse) {
    option (google.api.http) = {get: "/v1/export/pods"};
  }
}
