syntax = "proto3";

package v2;

import "api/v2/vuln_state.proto";
import "google/protobuf/timestamp.proto";

option go_package = "./api/v2;v2";
option java_package = "io.stackrox.proto.api.v2";

enum VulnerabilityType {
  UNKNOWN_VULNERABILITY = 0;
  IMAGE_VULNERABILITY = 1;
  K8S_VULNERABILITY = 2;
  ISTIO_VULNERABILITY = 3;
  NODE_VULNERABILITY = 4;
  OPENSHIFT_VULNERABILITY = 5;
}

message EmbeddedVulnerability {
  string cve = 1;
  Advisory advisory = 2;
  float cvss = 3;
  string summary = 4;
  string link = 5;
  oneof set_fixed_by {
    string fixed_by = 6;
  }
  CVSSV3 cvss_v3 = 7;
  google.protobuf.Timestamp published_on = 8;
  google.protobuf.Timestamp last_modified = 9;
  // For internal purposes only.
  VulnerabilityType vulnerability_type = 10;
  repeated VulnerabilityType vulnerability_types = 11;
  bool suppressed = 12;
  google.protobuf.Timestamp suppress_activation = 13;
  google.protobuf.Timestamp suppress_expiry = 14;
  // Time when the CVE was first seen, for this specific distro, in the system.
  google.protobuf.Timestamp first_system_occurrence = 15;
  // Time when the CVE was first seen in this image.
  google.protobuf.Timestamp first_image_occurrence = 16;

  VulnerabilitySeverity severity = 17;
  VulnerabilityState state = 18;
  // cvss_metrics stores list of cvss scores from different sources like nvd, Redhat etc
  repeated CVSSScore cvss_metrics = 19;
  float nvd_cvss = 20;
  EPSS epss = 21;
}

message NodeVulnerability {
  CVEInfo cve_base_info = 1;

  float cvss = 2;
  VulnerabilitySeverity severity = 3;
  oneof set_fixed_by {
    string fixed_by = 4;
  }

  bool snoozed = 5;
  google.protobuf.Timestamp snooze_start = 6;
  google.protobuf.Timestamp snooze_expiry = 7;
}

enum VulnerabilitySeverity {
  UNKNOWN_VULNERABILITY_SEVERITY = 0;
  LOW_VULNERABILITY_SEVERITY = 1;
  MODERATE_VULNERABILITY_SEVERITY = 2;
  IMPORTANT_VULNERABILITY_SEVERITY = 3;
  CRITICAL_VULNERABILITY_SEVERITY = 4;
}

enum Source {
  SOURCE_UNKNOWN = 0;
  SOURCE_RED_HAT = 1;
  SOURCE_OSV = 2;
  SOURCE_NVD = 3;
}

//Added this score version for nvd cvss score. moving out and re using score version from cveinfo will cause backward compatibility issue
enum CvssScoreVersion {
  UNKNOWN_VERSION = 0;
  V2 = 1; // No unset for automatic backwards compatibility
  V3 = 2;
}

// EPSS Score stores two epss metrics returned by scanner - epss probability and epss percentile
message EPSS {
  float epss_probability = 1;
  float epss_percentile = 2;
}

message CVEInfo {
  message Reference {
    string URI = 1;
    repeated string tags = 2;
  }
  // ScoreVersion can be deprecated ROX-26066
  enum ScoreVersion {
    V2 = 0; // No unset for automatic backwards compatibility
    V3 = 1;
    UNKNOWN = 2;
  }
  string cve = 1;
  string summary = 2;
  string link = 3;
  // This indicates the timestamp when the cve was first published in the cve feeds.
  google.protobuf.Timestamp published_on = 4;
  // Time when the CVE was first seen in the system.
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp last_modified = 6;
  ScoreVersion score_version = 7;
  // CVSSV2 CVSSV3 ScoreVersion can be deprecated ROX-26066
  CVSSV2 cvss_v2 = 8;
  CVSSV3 cvss_v3 = 9;
  repeated Reference references = 10;

  // cvss_metrics stores list of cvss scores from different sources like nvd, Redhat etc
  repeated CVSSScore cvss_metrics = 11;
  EPSS epss = 12;
}

message Advisory {
  string name = 1;
  string link = 2;
}

message ImageCVE {
  // keeping id similar construction for now during investigation.  It will include component and index
  // within the component
  string id = 1;
  // was hash index, making it btree
  string image_id = 2;
  CVEInfo cve_base_info = 3;
  // cvss stores ACS preferred cvss score
  float cvss = 4;
  VulnerabilitySeverity severity = 5;
  float impact_score = 6;

  // nvdcvss stores cvss score for a cve from NVD
  float nvdcvss = 7;
  CvssScoreVersion nvd_score_version = 8;
  google.protobuf.Timestamp first_image_occurrence = 9;
  VulnerabilityState state = 10;

  bool is_fixable = 11;
  // Whether there is a version the CVE is fixed in the component.
  oneof has_fixed_by {
    string fixed_by = 12;
  }

  string component_id = 13;
  Advisory advisory = 14;
}

message NodeCVE {
  string id = 1; // This field is composite of cve and operating system.
  CVEInfo cve_base_info = 2;
  string operating_system = 3;

  float cvss = 4;
  VulnerabilitySeverity severity = 5;
  float impact_score = 6;

  bool snoozed = 7;
  google.protobuf.Timestamp snooze_start = 8;
  google.protobuf.Timestamp snooze_expiry = 9;

  bool orphaned = 10;
  google.protobuf.Timestamp orphaned_time = 11;
}

message ClusterCVE {
  string id = 1;
  CVEInfo cve_base_info = 2;

  float cvss = 3;
  VulnerabilitySeverity severity = 4;
  float impact_score = 5;

  bool snoozed = 6;
  google.protobuf.Timestamp snooze_start = 7;
  google.protobuf.Timestamp snooze_expiry = 8;
  VulnerabilityType type = 9;
}

message CVSSScore {
  Source source = 1;
  string url = 2;
  oneof cvss_score {
    CVSSV2 cvssv2 = 3;
    CVSSV3 cvssv3 = 4;
  }
}

message CVSSV2 {
  enum Impact {
    IMPACT_NONE = 0;
    IMPACT_PARTIAL = 1;
    IMPACT_COMPLETE = 2;
  }
  enum AttackVector {
    ATTACK_LOCAL = 0;
    ATTACK_ADJACENT = 1;
    ATTACK_NETWORK = 2;
  }
  enum AccessComplexity {
    ACCESS_HIGH = 0;
    ACCESS_MEDIUM = 1;
    ACCESS_LOW = 2;
  }
  enum Authentication {
    AUTH_MULTIPLE = 0;
    AUTH_SINGLE = 1;
    AUTH_NONE = 2;
  }
  enum Severity {
    UNKNOWN = 0;
    LOW = 1;
    MEDIUM = 2;
    HIGH = 3;
  }

  string vector = 1;
  AttackVector attack_vector = 2;
  AccessComplexity access_complexity = 3;
  Authentication authentication = 4;
  Impact confidentiality = 5;
  Impact integrity = 6;
  Impact availability = 7;
  float exploitability_score = 8;
  float impact_score = 9;
  float score = 10;
  Severity severity = 11;
}

message CVSSV3 {
  enum Impact {
    IMPACT_NONE = 0;
    IMPACT_LOW = 1;
    IMPACT_HIGH = 2;
  }
  enum AttackVector {
    ATTACK_LOCAL = 0;
    ATTACK_ADJACENT = 1;
    ATTACK_NETWORK = 2;
    ATTACK_PHYSICAL = 3;
  }
  enum Complexity {
    COMPLEXITY_LOW = 0;
    COMPLEXITY_HIGH = 1;
  }
  enum Privileges {
    PRIVILEGE_NONE = 0;
    PRIVILEGE_LOW = 1;
    PRIVILEGE_HIGH = 2;
  }
  enum UserInteraction {
    UI_NONE = 0;
    UI_REQUIRED = 1;
  }
  enum Scope {
    UNCHANGED = 0;
    CHANGED = 1;
  }
  enum Severity {
    UNKNOWN = 0;
    NONE = 1;
    LOW = 2;
    MEDIUM = 3;
    HIGH = 4;
    CRITICAL = 5;
  }

  string vector = 1;
  float exploitability_score = 2;
  float impact_score = 3;
  AttackVector attack_vector = 4;
  Complexity attack_complexity = 5;
  Privileges privileges_required = 6;
  UserInteraction user_interaction = 7;
  Scope scope = 8;
  Impact confidentiality = 9;
  Impact integrity = 10;
  Impact availability = 11;
  float score = 12;
  Severity severity = 13;
}
