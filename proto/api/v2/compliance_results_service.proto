syntax = "proto3";

option go_package = "v2";
option java_package = "io.stackrox.proto.api.v2";

import "google/protobuf/timestamp.proto";
import weak "google/api/annotations.proto";
import "api/v2/search_query.proto";

package v2;

enum ComplianceCheckStatus {
    UNSET_CHECK_STATUS = 0;
    PASS               = 1;
    FAIL               = 2;
    ERROR              = 3;
    INFO               = 4;
    MANUAL             = 5;
    NOT_APPLICABLE     = 6;
    INCONSISTENT       = 7;
}

message ComplianceScanCluster {
    string cluster_id   = 1;
    string cluster_name = 2;
}

// ComplianceCheckResult provides the results of a compliance check against a rule
message ComplianceCheckResult {
    string                     check_id     = 1;
    string                     check_name   = 2;

    // ClusterCheckStatus groups the result of the check by cluster
    message ClusterCheckStatus {
        ComplianceScanCluster      cluster      = 1;
        ComplianceCheckStatus      status       = 2;
        google.protobuf.Timestamp  created_time = 3;
    }
    repeated ClusterCheckStatus clusters     = 3;
    string                      description  = 4;
    string                      instructions = 5;
    string                      standard     = 6;
    string                      control      = 7;
}

// ComplianceScanResult provides the results of a scan
message ComplianceScanResult {
    string                         scan_name     = 1;
    string                         profile_name  = 2;
    repeated ComplianceCheckResult check_results = 3;
}

// ComplianceScanStatsShim models statistics of checks for a given scan configuration
message ComplianceScanStatsShim {
    string                                  scan_name = 1;

    // Group the number of occurrences by status
    message ComplianceCheckStatusCount {
        int32                  count  = 1;
        ComplianceCheckStatus  status = 2;
    }
    repeated ComplianceCheckStatusCount     check_stats = 2;
    google.protobuf.Timestamp               last_scan   = 3;
}

// ComplianceScanResultsOverview provides an overview and stats of the results of a scan configuration
message ComplianceScanResultsOverview {
    ComplianceScanStatsShim        scan_stats   = 1;
    repeated string                profile_name = 2;
    repeated ComplianceScanCluster cluster      = 3;
}

// ComplianceProfileScanStats provides scan stats overview based on profile
message ComplianceProfileScanStats {
    ComplianceScanStatsShim       scan_stats            = 1;
    string                        profile_name          = 2;
}

// ComplianceClusterScanStats provides scan stats overview based on cluster
message ComplianceClusterScanStats {
    ComplianceScanStatsShim  scan_stats = 1;
    ComplianceScanCluster    cluster    = 2;
}

// ListComplianceScanResultsOverviewResponse provides overviews for scans
message ListComplianceScanResultsOverviewResponse {
    repeated ComplianceScanResultsOverview scan_overviews = 1;
}

// ListComplianceProfileScanStatsResponse provides stats for the profiles within the scans
message ListComplianceProfileScanStatsResponse {
    repeated ComplianceProfileScanStats scan_stats = 1;
}

// ListComplianceClusterScanStatsResponse provides stats for the clusters within the scans
message ListComplianceClusterScanStatsResponse {
    repeated ComplianceClusterScanStats scan_stats = 1;
}

// ListComplianceScanResultsResponse provides the complete scan results
message ListComplianceScanResultsResponse {
    repeated ComplianceScanResult scan_results = 1;
}

service ComplianceResultsService {
    // GetComplianceScanResultsOverview lists current scan configurations with most recent results overview that match the query
    // Optional RawQuery query fields can be combined.
    // Commonly used ones include but are not limited to
    // - scan: id(s) of the compliance scan
    // - cluster: id(s) of the cluster
    // - profile: id(s) of the profile
    rpc GetComplianceScanResultsOverview (RawQuery) returns (ListComplianceScanResultsOverviewResponse) {
        option (google.api.http) = {
            get: "/v2/compliance/scan/overview"
        };
    }

    // GetComplianceScanResults retrieves the most recent compliance operator scan results for the specified query
    // Optional RawQuery query fields can be combined.
    // Commonly used ones include but are not limited to
    // - scan: id(s) of the compliance scan
    // - cluster: id(s) of the cluster
    // - profile: id(s) of the profile
    rpc GetComplianceScanResults (RawQuery) returns (ListComplianceScanResultsResponse) {
        option (google.api.http) = {
            get: "/v2/compliance/scan/results"
        };
    }

    // GetComplianceProfileScanStats lists current scan stats grouped by profile
    // Optional RawQuery query fields can be combined.
    // Commonly used ones include but are not limited to
    // - scan: id(s) of the compliance scan
    // - cluster: id(s) of the cluster
    // - profile: id(s) of the profile
    rpc GetComplianceProfileScanStats (RawQuery) returns (ListComplianceProfileScanStatsResponse) {
        option (google.api.http) = {
            get: "/v2/compliance/scan/stats/profile"
        };
    }

    // GetComplianceClusterScanStats lists current scan stats grouped by cluster
    // Optional RawQuery query fields can be combined.
    // Commonly used ones include but are not limited to
    // - scan: id(s) of the compliance scan
    // - cluster: id(s) of the cluster
    // - profile: id(s) of the profile
    rpc GetComplianceClusterScanStats (RawQuery) returns (ListComplianceClusterScanStatsResponse) {
        option (google.api.http) = {
            get: "/v2/compliance/scan/stats/cluster"
        };
    }
}
