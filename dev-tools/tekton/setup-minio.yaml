apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: default
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio:latest
        args:
        - server
        - /data
        - --console-address
        - ":9001"
        ports:
        - containerPort: 9000
          name: api
        - containerPort: 9001
          name: console
        env:
        - name: MINIO_ROOT_USER
          value: "minioadmin"
        - name: MINIO_ROOT_PASSWORD
          value: "minioadmin"
        volumeMounts:
        - name: data
          mountPath: /data
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: data
        emptyDir:
          sizeLimit: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: default
  labels:
    app: minio
spec:
  selector:
    app: minio
  ports:
  - name: api
    port: 9000
    targetPort: 9000
    protocol: TCP
  - name: console
    port: 9001
    targetPort: 9001
    protocol: TCP

---
# Create the cache bucket automatically
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-setup-bucket
  namespace: default
spec:
  template:
    spec:
      containers:
      - name: mc
        image: minio/mc:latest
        command:
        - /bin/sh
        - -c
        - |
          set -e
          echo "Waiting for MinIO to be ready..."
          until mc alias set local http://minio:9000 minioadmin minioadmin; do
            echo "MinIO not ready yet, waiting..."
            sleep 5
          done

          echo "Creating cache bucket..."
          mc mb local/local-dev-cache --ignore-existing

          echo "Setting bucket policy to public (for local development)..."
          mc anonymous set public local/local-dev-cache

          echo "MinIO setup complete!"
          mc ls local/
      restartPolicy: OnFailure
  backoffLimit: 3