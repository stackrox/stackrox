// Code generated by MockGen. DO NOT EDIT.
// Source: store.go
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/store.go -source store.go
//
// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockMetadataStore is a mock of MetadataStore interface.
type MockMetadataStore struct {
	ctrl     *gomock.Controller
	recorder *MockMetadataStoreMockRecorder
}

// MockMetadataStoreMockRecorder is the mock recorder for MockMetadataStore.
type MockMetadataStoreMockRecorder struct {
	mock *MockMetadataStore
}

// NewMockMetadataStore creates a new mock instance.
func NewMockMetadataStore(ctrl *gomock.Controller) *MockMetadataStore {
	mock := &MockMetadataStore{ctrl: ctrl}
	mock.recorder = &MockMetadataStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetadataStore) EXPECT() *MockMetadataStoreMockRecorder {
	return m.recorder
}

// GetLastVulnerabilityUpdate mocks base method.
func (m *MockMetadataStore) GetLastVulnerabilityUpdate(arg0 context.Context) (time.Time, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLastVulnerabilityUpdate", arg0)
	ret0, _ := ret[0].(time.Time)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLastVulnerabilityUpdate indicates an expected call of GetLastVulnerabilityUpdate.
func (mr *MockMetadataStoreMockRecorder) GetLastVulnerabilityUpdate(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLastVulnerabilityUpdate", reflect.TypeOf((*MockMetadataStore)(nil).GetLastVulnerabilityUpdate), arg0)
}

// SetLastVulnerabilityUpdate mocks base method.
func (m *MockMetadataStore) SetLastVulnerabilityUpdate(arg0 context.Context, arg1 time.Time) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetLastVulnerabilityUpdate", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetLastVulnerabilityUpdate indicates an expected call of SetLastVulnerabilityUpdate.
func (mr *MockMetadataStoreMockRecorder) SetLastVulnerabilityUpdate(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetLastVulnerabilityUpdate", reflect.TypeOf((*MockMetadataStore)(nil).SetLastVulnerabilityUpdate), arg0, arg1)
}
