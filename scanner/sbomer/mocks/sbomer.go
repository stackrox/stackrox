// Code generated by MockGen. DO NOT EDIT.
// Source: sbomer.go
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/sbomer.go -source sbomer.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	claircore "github.com/quay/claircore"
	gomock "go.uber.org/mock/gomock"
)

// MockSBOMer is a mock of SBOMer interface.
type MockSBOMer struct {
	ctrl     *gomock.Controller
	recorder *MockSBOMerMockRecorder
	isgomock struct{}
}

// MockSBOMerMockRecorder is the mock recorder for MockSBOMer.
type MockSBOMerMockRecorder struct {
	mock *MockSBOMer
}

// NewMockSBOMer creates a new mock instance.
func NewMockSBOMer(ctrl *gomock.Controller) *MockSBOMer {
	mock := &MockSBOMer{ctrl: ctrl}
	mock.recorder = &MockSBOMerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSBOMer) EXPECT() *MockSBOMerMockRecorder {
	return m.recorder
}

// GetSBOM mocks base method.
func (m *MockSBOMer) GetSBOM(ctx context.Context, imageDigest claircore.Digest, ir *claircore.IndexReport) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSBOM", ctx, imageDigest, ir)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSBOM indicates an expected call of GetSBOM.
func (mr *MockSBOMerMockRecorder) GetSBOM(ctx, imageDigest, ir any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSBOM", reflect.TypeOf((*MockSBOMer)(nil).GetSBOM), ctx, imageDigest, ir)
}
