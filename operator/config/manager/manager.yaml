apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app: rhacs-operator
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    app: rhacs-operator
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      app: rhacs-operator
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        app: rhacs-operator
    spec:
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution.
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
      securityContext:
        runAsNonRoot: true
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # Please uncomment the following code if your project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        # seccompProfile:
        #   type: RuntimeDefault
      containers:
      - args:
        - "--health-probe-bind-address=:8081"
        - "--metrics-bind-address=0.0.0.0:8443"
        - --leader-elect
        env:
        - name: RELATED_IMAGE_MAIN
        - name: RELATED_IMAGE_SCANNER
        - name: RELATED_IMAGE_SCANNER_SLIM
        - name: RELATED_IMAGE_SCANNER_DB
        - name: RELATED_IMAGE_SCANNER_DB_SLIM
        - name: RELATED_IMAGE_COLLECTOR_SLIM
        - name: RELATED_IMAGE_COLLECTOR_FULL
        - name: RELATED_IMAGE_ROXCTL
        - name: RELATED_IMAGE_CENTRAL_DB
        - name: RELATED_IMAGE_SCANNER_V4_DB
        - name: RELATED_IMAGE_SCANNER_V4
        - name: MEMORY_LIMIT_BYTES
          valueFrom:
            resourceFieldRef:
              containerName: manager
              resource: limits.memory
        image: controller:latest
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        ports:
        - containerPort: 8443
          protocol: TCP
          name: https
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 200Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
