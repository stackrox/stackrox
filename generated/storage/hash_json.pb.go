// Code generated by protoc-gen-go-json. DO NOT EDIT.

package storage

import (
	_ "bytes"
	fmt "fmt"
	strings "strings"
	_ "time"
	unsafe "unsafe"
)

func (m *Hash) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}
func (m *Hash) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetClusterId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("clusterId")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetHashes(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("hashes")
		buf.WriteString("\"")
		buf.WriteString(":")
		trailingComma = false
		buf.WriteString("{")
		for k, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			fmt.Fprintf(buf, "%q", k)
			buf.WriteString(":")
			fmt.Fprintf(buf, "\"%d\"", v)
		}
		buf.WriteString("}")
	}
	buf.WriteString("}")
	return nil
}
