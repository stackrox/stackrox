// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package storage

import (
	"iter"
	"time"
)

// ImmutableClusterMetadata is an immutable interface for ClusterMetadata
type ImmutableClusterMetadata interface {
	GetType() ClusterMetadata_Type
	// Name represents the name under which the cluster is registered with the
	// cloud provider. In case of self managed OpenShift it is the name chosen
	// by the OpenShift installer.
	GetName() string
	// Id represents a unique ID under which the cluster is registered with the
	// cloud provider. Not all cluster types have an id. For all OpenShift
	// clusters, this is the Red Hat `cluster_id` registered with OCM.
	GetId() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ClusterMetadata
}

// Verify that ClusterMetadata implements ImmutableClusterMetadata
var _ ImmutableClusterMetadata = (*ClusterMetadata)(nil)

// ImmutableGoogleProviderMetadata is an immutable interface for GoogleProviderMetadata
type ImmutableGoogleProviderMetadata interface {
	GetProject() string
	// Deprecated in favor of providerMetadata.cluster.name.
	GetClusterName() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *GoogleProviderMetadata
}

// Verify that GoogleProviderMetadata implements ImmutableGoogleProviderMetadata
var _ ImmutableGoogleProviderMetadata = (*GoogleProviderMetadata)(nil)

// ImmutableAWSProviderMetadata is an immutable interface for AWSProviderMetadata
type ImmutableAWSProviderMetadata interface {
	GetAccountId() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *AWSProviderMetadata
}

// Verify that AWSProviderMetadata implements ImmutableAWSProviderMetadata
var _ ImmutableAWSProviderMetadata = (*AWSProviderMetadata)(nil)

// ImmutableAzureProviderMetadata is an immutable interface for AzureProviderMetadata
type ImmutableAzureProviderMetadata interface {
	GetSubscriptionId() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *AzureProviderMetadata
}

// Verify that AzureProviderMetadata implements ImmutableAzureProviderMetadata
var _ ImmutableAzureProviderMetadata = (*AzureProviderMetadata)(nil)

// ImmutableProviderMetadata is an immutable interface for ProviderMetadata
type ImmutableProviderMetadata interface {
	GetRegion() string
	GetZone() string
	GetImmutableGoogle() ImmutableGoogleProviderMetadata
	GetImmutableAws() ImmutableAWSProviderMetadata
	GetImmutableAzure() ImmutableAzureProviderMetadata
	GetVerified() bool
	GetImmutableCluster() ImmutableClusterMetadata
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ProviderMetadata
}

// GetImmutableGoogle implements ImmutableProviderMetadata
func (m *ProviderMetadata) GetImmutableGoogle() ImmutableGoogleProviderMetadata {
	return m.GetGoogle()
}

// GetImmutableAws implements ImmutableProviderMetadata
func (m *ProviderMetadata) GetImmutableAws() ImmutableAWSProviderMetadata {
	return m.GetAws()
}

// GetImmutableAzure implements ImmutableProviderMetadata
func (m *ProviderMetadata) GetImmutableAzure() ImmutableAzureProviderMetadata {
	return m.GetAzure()
}

// GetImmutableCluster implements ImmutableProviderMetadata
func (m *ProviderMetadata) GetImmutableCluster() ImmutableClusterMetadata {
	return m.GetCluster()
}

// Verify that ProviderMetadata implements ImmutableProviderMetadata
var _ ImmutableProviderMetadata = (*ProviderMetadata)(nil)

// ImmutableOrchestratorMetadata is an immutable interface for OrchestratorMetadata
type ImmutableOrchestratorMetadata interface {
	GetVersion() string
	GetOpenshiftVersion() string
	GetImmutableBuildDate() time.Time
	GetImmutableApiVersions() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *OrchestratorMetadata
}

// GetImmutableBuildDate implements ImmutableOrchestratorMetadata
func (m *OrchestratorMetadata) GetImmutableBuildDate() time.Time {
	if m == nil || m.BuildDate == nil {
		return time.Time{}
	}
	return m.BuildDate.AsTime()
}

// GetImmutableApiVersions implements ImmutableOrchestratorMetadata
func (m *OrchestratorMetadata) GetImmutableApiVersions() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.ApiVersions == nil {
			return
		}
		for _, v := range m.ApiVersions {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that OrchestratorMetadata implements ImmutableOrchestratorMetadata
var _ ImmutableOrchestratorMetadata = (*OrchestratorMetadata)(nil)

// ImmutableAdmissionControllerConfig is an immutable interface for AdmissionControllerConfig
type ImmutableAdmissionControllerConfig interface {
	GetEnabled() bool
	GetTimeoutSeconds() int32
	GetScanInline() bool
	GetDisableBypass() bool
	GetEnforceOnUpdates() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *AdmissionControllerConfig
}

// Verify that AdmissionControllerConfig implements ImmutableAdmissionControllerConfig
var _ ImmutableAdmissionControllerConfig = (*AdmissionControllerConfig)(nil)

// ImmutableTolerationsConfig is an immutable interface for TolerationsConfig
type ImmutableTolerationsConfig interface {
	GetDisabled() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TolerationsConfig
}

// Verify that TolerationsConfig implements ImmutableTolerationsConfig
var _ ImmutableTolerationsConfig = (*TolerationsConfig)(nil)

// ImmutableStaticClusterConfig is an immutable interface for StaticClusterConfig
type ImmutableStaticClusterConfig interface {
	GetType() ClusterType
	GetMainImage() string
	GetCentralApiEndpoint() string
	GetCollectionMethod() CollectionMethod
	GetCollectorImage() string
	GetAdmissionController() bool
	GetAdmissionControllerUpdates() bool
	GetImmutableTolerationsConfig() ImmutableTolerationsConfig
	GetSlimCollector() bool
	GetAdmissionControllerEvents() bool
	GetAdmissionControllerFailOnError() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *StaticClusterConfig
}

// GetImmutableTolerationsConfig implements ImmutableStaticClusterConfig
func (m *StaticClusterConfig) GetImmutableTolerationsConfig() ImmutableTolerationsConfig {
	return m.GetTolerationsConfig()
}

// Verify that StaticClusterConfig implements ImmutableStaticClusterConfig
var _ ImmutableStaticClusterConfig = (*StaticClusterConfig)(nil)

// ImmutableAutoLockProcessBaselinesConfig is an immutable interface for AutoLockProcessBaselinesConfig
type ImmutableAutoLockProcessBaselinesConfig interface {
	// More fields can be added later to control the feature at the
	// namespace level
	GetEnabled() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *AutoLockProcessBaselinesConfig
}

// Verify that AutoLockProcessBaselinesConfig implements ImmutableAutoLockProcessBaselinesConfig
var _ ImmutableAutoLockProcessBaselinesConfig = (*AutoLockProcessBaselinesConfig)(nil)

// ImmutableDynamicClusterConfig is an immutable interface for DynamicClusterConfig
type ImmutableDynamicClusterConfig interface {
	GetImmutableAdmissionControllerConfig() ImmutableAdmissionControllerConfig
	GetRegistryOverride() string
	GetDisableAuditLogs() bool
	GetImmutableAutoLockProcessBaselinesConfig() ImmutableAutoLockProcessBaselinesConfig
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *DynamicClusterConfig
}

// GetImmutableAdmissionControllerConfig implements ImmutableDynamicClusterConfig
func (m *DynamicClusterConfig) GetImmutableAdmissionControllerConfig() ImmutableAdmissionControllerConfig {
	return m.GetAdmissionControllerConfig()
}

// GetImmutableAutoLockProcessBaselinesConfig implements ImmutableDynamicClusterConfig
func (m *DynamicClusterConfig) GetImmutableAutoLockProcessBaselinesConfig() ImmutableAutoLockProcessBaselinesConfig {
	return m.GetAutoLockProcessBaselinesConfig()
}

// Verify that DynamicClusterConfig implements ImmutableDynamicClusterConfig
var _ ImmutableDynamicClusterConfig = (*DynamicClusterConfig)(nil)

// ImmutableCompleteClusterConfig is an immutable interface for CompleteClusterConfig
type ImmutableCompleteClusterConfig interface {
	GetImmutableDynamicConfig() ImmutableDynamicClusterConfig
	GetImmutableStaticConfig() ImmutableStaticClusterConfig
	GetConfigFingerprint() string
	GetImmutableClusterLabels() iter.Seq2[string, string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *CompleteClusterConfig
}

// GetImmutableDynamicConfig implements ImmutableCompleteClusterConfig
func (m *CompleteClusterConfig) GetImmutableDynamicConfig() ImmutableDynamicClusterConfig {
	return m.GetDynamicConfig()
}

// GetImmutableStaticConfig implements ImmutableCompleteClusterConfig
func (m *CompleteClusterConfig) GetImmutableStaticConfig() ImmutableStaticClusterConfig {
	return m.GetStaticConfig()
}

// GetImmutableClusterLabels implements ImmutableCompleteClusterConfig
func (m *CompleteClusterConfig) GetImmutableClusterLabels() iter.Seq2[string, string] {
	return func(yield func(string, string) bool) {
		if m == nil || m.ClusterLabels == nil {
			return
		}
		for k, v := range m.ClusterLabels {
			if !yield(k, v) {
				return
			}
		}
	}
}

// Verify that CompleteClusterConfig implements ImmutableCompleteClusterConfig
var _ ImmutableCompleteClusterConfig = (*CompleteClusterConfig)(nil)

// ImmutableSensorDeploymentIdentification is an immutable interface for SensorDeploymentIdentification
type ImmutableSensorDeploymentIdentification interface {
	GetSystemNamespaceId() string
	GetDefaultNamespaceId() string
	GetAppNamespace() string
	GetAppNamespaceId() string
	GetAppServiceaccountId() string
	GetK8SNodeName() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *SensorDeploymentIdentification
}

// Verify that SensorDeploymentIdentification implements ImmutableSensorDeploymentIdentification
var _ ImmutableSensorDeploymentIdentification = (*SensorDeploymentIdentification)(nil)

// ImmutableCluster is an immutable interface for Cluster
type ImmutableCluster interface {
	GetId() string
	GetName() string
	GetType() ClusterType
	GetImmutableLabels() iter.Seq2[string, string]
	GetMainImage() string
	GetCollectorImage() string
	GetCentralApiEndpoint() string
	GetRuntimeSupport() bool
	GetCollectionMethod() CollectionMethod
	GetAdmissionController() bool
	GetAdmissionControllerUpdates() bool
	GetAdmissionControllerEvents() bool
	GetImmutableStatus() ImmutableClusterStatus
	GetImmutableDynamicConfig() ImmutableDynamicClusterConfig
	GetImmutableTolerationsConfig() ImmutableTolerationsConfig
	GetPriority() int64
	GetImmutableHealthStatus() ImmutableClusterHealthStatus
	GetSlimCollector() bool
	// The Helm configuration of a cluster is only present in case the cluster is Helm- or Operator-managed.
	GetImmutableHelmConfig() ImmutableCompleteClusterConfig
	// most_recent_sensor_id is the current or most recent identification of a successfully connected sensor (if any).
	GetImmutableMostRecentSensorId() ImmutableSensorDeploymentIdentification
	// For internal use only.
	GetImmutableAuditLogState() iter.Seq2[string, ImmutableAuditLogFileState]
	GetInitBundleId() string
	GetManagedBy() ManagerType
	GetImmutableSensorCapabilities() iter.Seq[string]
	GetAdmissionControllerFailOnError() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *Cluster
}

// GetImmutableLabels implements ImmutableCluster
func (m *Cluster) GetImmutableLabels() iter.Seq2[string, string] {
	return func(yield func(string, string) bool) {
		if m == nil || m.Labels == nil {
			return
		}
		for k, v := range m.Labels {
			if !yield(k, v) {
				return
			}
		}
	}
}

// GetImmutableStatus implements ImmutableCluster
func (m *Cluster) GetImmutableStatus() ImmutableClusterStatus {
	return m.GetStatus()
}

// GetImmutableDynamicConfig implements ImmutableCluster
func (m *Cluster) GetImmutableDynamicConfig() ImmutableDynamicClusterConfig {
	return m.GetDynamicConfig()
}

// GetImmutableTolerationsConfig implements ImmutableCluster
func (m *Cluster) GetImmutableTolerationsConfig() ImmutableTolerationsConfig {
	return m.GetTolerationsConfig()
}

// GetImmutableHealthStatus implements ImmutableCluster
func (m *Cluster) GetImmutableHealthStatus() ImmutableClusterHealthStatus {
	return m.GetHealthStatus()
}

// GetImmutableHelmConfig implements ImmutableCluster
func (m *Cluster) GetImmutableHelmConfig() ImmutableCompleteClusterConfig {
	return m.GetHelmConfig()
}

// GetImmutableMostRecentSensorId implements ImmutableCluster
func (m *Cluster) GetImmutableMostRecentSensorId() ImmutableSensorDeploymentIdentification {
	return m.GetMostRecentSensorId()
}

// GetImmutableAuditLogState implements ImmutableCluster
func (m *Cluster) GetImmutableAuditLogState() iter.Seq2[string, ImmutableAuditLogFileState] {
	return func(yield func(string, ImmutableAuditLogFileState) bool) {
		if m == nil || m.AuditLogState == nil {
			return
		}
		for k, v := range m.AuditLogState {
			if !yield(k, v) {
				return
			}
		}
	}
}

// GetImmutableSensorCapabilities implements ImmutableCluster
func (m *Cluster) GetImmutableSensorCapabilities() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.SensorCapabilities == nil {
			return
		}
		for _, v := range m.SensorCapabilities {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that Cluster implements ImmutableCluster
var _ ImmutableCluster = (*Cluster)(nil)

// ImmutableClusterCertExpiryStatus is an immutable interface for ClusterCertExpiryStatus
type ImmutableClusterCertExpiryStatus interface {
	GetImmutableSensorCertExpiry() time.Time
	GetImmutableSensorCertNotBefore() time.Time
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ClusterCertExpiryStatus
}

// GetImmutableSensorCertExpiry implements ImmutableClusterCertExpiryStatus
func (m *ClusterCertExpiryStatus) GetImmutableSensorCertExpiry() time.Time {
	if m == nil || m.SensorCertExpiry == nil {
		return time.Time{}
	}
	return m.SensorCertExpiry.AsTime()
}

// GetImmutableSensorCertNotBefore implements ImmutableClusterCertExpiryStatus
func (m *ClusterCertExpiryStatus) GetImmutableSensorCertNotBefore() time.Time {
	if m == nil || m.SensorCertNotBefore == nil {
		return time.Time{}
	}
	return m.SensorCertNotBefore.AsTime()
}

// Verify that ClusterCertExpiryStatus implements ImmutableClusterCertExpiryStatus
var _ ImmutableClusterCertExpiryStatus = (*ClusterCertExpiryStatus)(nil)

// ImmutableClusterStatus is an immutable interface for ClusterStatus
type ImmutableClusterStatus interface {
	GetSensorVersion() string
	// This field has been deprecated starting release 49.0. Use healthStatus.lastContact instead.
	GetImmutableDEPRECATEDLastContact() time.Time
	GetImmutableProviderMetadata() ImmutableProviderMetadata
	GetImmutableOrchestratorMetadata() ImmutableOrchestratorMetadata
	GetImmutableUpgradeStatus() ImmutableClusterUpgradeStatus
	GetImmutableCertExpiryStatus() ImmutableClusterCertExpiryStatus
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ClusterStatus
}

// GetImmutableDEPRECATEDLastContact implements ImmutableClusterStatus
func (m *ClusterStatus) GetImmutableDEPRECATEDLastContact() time.Time {
	if m == nil || m.DEPRECATEDLastContact == nil {
		return time.Time{}
	}
	return m.DEPRECATEDLastContact.AsTime()
}

// GetImmutableProviderMetadata implements ImmutableClusterStatus
func (m *ClusterStatus) GetImmutableProviderMetadata() ImmutableProviderMetadata {
	return m.GetProviderMetadata()
}

// GetImmutableOrchestratorMetadata implements ImmutableClusterStatus
func (m *ClusterStatus) GetImmutableOrchestratorMetadata() ImmutableOrchestratorMetadata {
	return m.GetOrchestratorMetadata()
}

// GetImmutableUpgradeStatus implements ImmutableClusterStatus
func (m *ClusterStatus) GetImmutableUpgradeStatus() ImmutableClusterUpgradeStatus {
	return m.GetUpgradeStatus()
}

// GetImmutableCertExpiryStatus implements ImmutableClusterStatus
func (m *ClusterStatus) GetImmutableCertExpiryStatus() ImmutableClusterCertExpiryStatus {
	return m.GetCertExpiryStatus()
}

// Verify that ClusterStatus implements ImmutableClusterStatus
var _ ImmutableClusterStatus = (*ClusterStatus)(nil)

// ImmutableClusterUpgradeStatus is an immutable interface for ClusterUpgradeStatus
type ImmutableClusterUpgradeStatus interface {
	GetUpgradability() ClusterUpgradeStatus_Upgradability
	GetUpgradabilityStatusReason() string
	// The progress of the current or most recent upgrade, if any,
	// Note that we don't store any historical data -- the moment
	// a new upgrade attempt is triggered, we overwrite
	// information from the previous attempt.
	GetImmutableMostRecentProcess() ImmutableClusterUpgradeStatus_UpgradeProcessStatus
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ClusterUpgradeStatus
}

// GetImmutableMostRecentProcess implements ImmutableClusterUpgradeStatus
func (m *ClusterUpgradeStatus) GetImmutableMostRecentProcess() ImmutableClusterUpgradeStatus_UpgradeProcessStatus {
	return m.GetMostRecentProcess()
}

// Verify that ClusterUpgradeStatus implements ImmutableClusterUpgradeStatus
var _ ImmutableClusterUpgradeStatus = (*ClusterUpgradeStatus)(nil)

// ImmutableClusterUpgradeStatus_UpgradeProcessStatus is an immutable interface for ClusterUpgradeStatus_UpgradeProcessStatus
type ImmutableClusterUpgradeStatus_UpgradeProcessStatus interface {
	GetActive() bool
	GetId() string
	GetTargetVersion() string
	GetUpgraderImage() string
	GetImmutableInitiatedAt() time.Time
	GetImmutableProgress() ImmutableUpgradeProgress
	GetType() ClusterUpgradeStatus_UpgradeProcessStatus_UpgradeProcessType
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ClusterUpgradeStatus_UpgradeProcessStatus
}

// GetImmutableInitiatedAt implements ImmutableClusterUpgradeStatus_UpgradeProcessStatus
func (m *ClusterUpgradeStatus_UpgradeProcessStatus) GetImmutableInitiatedAt() time.Time {
	if m == nil || m.InitiatedAt == nil {
		return time.Time{}
	}
	return m.InitiatedAt.AsTime()
}

// GetImmutableProgress implements ImmutableClusterUpgradeStatus_UpgradeProcessStatus
func (m *ClusterUpgradeStatus_UpgradeProcessStatus) GetImmutableProgress() ImmutableUpgradeProgress {
	return m.GetProgress()
}

// Verify that ClusterUpgradeStatus_UpgradeProcessStatus implements ImmutableClusterUpgradeStatus_UpgradeProcessStatus
var _ ImmutableClusterUpgradeStatus_UpgradeProcessStatus = (*ClusterUpgradeStatus_UpgradeProcessStatus)(nil)

// ImmutableUpgradeProgress is an immutable interface for UpgradeProgress
type ImmutableUpgradeProgress interface {
	GetUpgradeState() UpgradeProgress_UpgradeState
	GetUpgradeStatusDetail() string
	GetImmutableSince() time.Time
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *UpgradeProgress
}

// GetImmutableSince implements ImmutableUpgradeProgress
func (m *UpgradeProgress) GetImmutableSince() time.Time {
	if m == nil || m.Since == nil {
		return time.Time{}
	}
	return m.Since.AsTime()
}

// Verify that UpgradeProgress implements ImmutableUpgradeProgress
var _ ImmutableUpgradeProgress = (*UpgradeProgress)(nil)

// ImmutableAuditLogFileState is an immutable interface for AuditLogFileState
type ImmutableAuditLogFileState interface {
	GetImmutableCollectLogsSince() time.Time
	GetLastAuditId() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *AuditLogFileState
}

// GetImmutableCollectLogsSince implements ImmutableAuditLogFileState
func (m *AuditLogFileState) GetImmutableCollectLogsSince() time.Time {
	if m == nil || m.CollectLogsSince == nil {
		return time.Time{}
	}
	return m.CollectLogsSince.AsTime()
}

// Verify that AuditLogFileState implements ImmutableAuditLogFileState
var _ ImmutableAuditLogFileState = (*AuditLogFileState)(nil)

// ImmutableClusterHealthStatus is an immutable interface for ClusterHealthStatus
type ImmutableClusterHealthStatus interface {
	GetId() string
	GetImmutableCollectorHealthInfo() ImmutableCollectorHealthInfo
	GetImmutableAdmissionControlHealthInfo() ImmutableAdmissionControlHealthInfo
	// scanner_health_info is filled when the scanner is deployed on a secured cluster (so called "local scanner").
	// Please do not confuse this with the default scanner deployment on a central cluster.
	GetImmutableScannerHealthInfo() ImmutableScannerHealthInfo
	// The following _health_status fields provide aggregated health status of the respective components and are assigned by central.
	GetSensorHealthStatus() ClusterHealthStatus_HealthStatusLabel
	GetCollectorHealthStatus() ClusterHealthStatus_HealthStatusLabel
	GetOverallHealthStatus() ClusterHealthStatus_HealthStatusLabel
	GetAdmissionControlHealthStatus() ClusterHealthStatus_HealthStatusLabel
	GetScannerHealthStatus() ClusterHealthStatus_HealthStatusLabel
	// For sensors not having health capability, this will be filled with gRPC connection poll. Otherwise,
	// this timestamp will be updated by central pipeline when message is processed.
	//
	// Note: we use this setting to guard against a specific attack vector during CRS-based cluster registration.
	// Assuming that a CRS was used to register a cluster A and the CRS is leaked, an attacker shall not be able
	// to re-run the CRS-flow which would then equip the attacker with a certificate & key issued to the cluster A.
	// As countermeasure we only allow re-running the CRS-flow only as long as the last_contact field is empty,
	// indicating that the legit cluster A's sensor has not yet connected with the CRS-issued service certificates.
	GetImmutableLastContact() time.Time
	// To track cases such as when sensor is healthy, but collector status data is unavailable because the sensor is on an old version
	GetHealthInfoComplete() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ClusterHealthStatus
}

// GetImmutableCollectorHealthInfo implements ImmutableClusterHealthStatus
func (m *ClusterHealthStatus) GetImmutableCollectorHealthInfo() ImmutableCollectorHealthInfo {
	return m.GetCollectorHealthInfo()
}

// GetImmutableAdmissionControlHealthInfo implements ImmutableClusterHealthStatus
func (m *ClusterHealthStatus) GetImmutableAdmissionControlHealthInfo() ImmutableAdmissionControlHealthInfo {
	return m.GetAdmissionControlHealthInfo()
}

// GetImmutableScannerHealthInfo implements ImmutableClusterHealthStatus
func (m *ClusterHealthStatus) GetImmutableScannerHealthInfo() ImmutableScannerHealthInfo {
	return m.GetScannerHealthInfo()
}

// GetImmutableLastContact implements ImmutableClusterHealthStatus
func (m *ClusterHealthStatus) GetImmutableLastContact() time.Time {
	if m == nil || m.LastContact == nil {
		return time.Time{}
	}
	return m.LastContact.AsTime()
}

// Verify that ClusterHealthStatus implements ImmutableClusterHealthStatus
var _ ImmutableClusterHealthStatus = (*ClusterHealthStatus)(nil)

// ImmutableCollectorHealthInfo is an immutable interface for CollectorHealthInfo
type ImmutableCollectorHealthInfo interface {
	// This is the version of the collector deamonset as returned by k8s API
	GetVersion() string
	GetTotalDesiredPods() int32
	GetTotalReadyPods() int32
	GetTotalRegisteredNodes() int32
	// Collection of errors that occurred while trying to obtain collector health info.
	GetImmutableStatusErrors() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *CollectorHealthInfo
}

// GetImmutableStatusErrors implements ImmutableCollectorHealthInfo
func (m *CollectorHealthInfo) GetImmutableStatusErrors() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.StatusErrors == nil {
			return
		}
		for _, v := range m.StatusErrors {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that CollectorHealthInfo implements ImmutableCollectorHealthInfo
var _ ImmutableCollectorHealthInfo = (*CollectorHealthInfo)(nil)

// ImmutableAdmissionControlHealthInfo is an immutable interface for AdmissionControlHealthInfo
type ImmutableAdmissionControlHealthInfo interface {
	GetTotalDesiredPods() int32
	GetTotalReadyPods() int32
	// Collection of errors that occurred while trying to obtain admission control health info.
	GetImmutableStatusErrors() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *AdmissionControlHealthInfo
}

// GetImmutableStatusErrors implements ImmutableAdmissionControlHealthInfo
func (m *AdmissionControlHealthInfo) GetImmutableStatusErrors() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.StatusErrors == nil {
			return
		}
		for _, v := range m.StatusErrors {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that AdmissionControlHealthInfo implements ImmutableAdmissionControlHealthInfo
var _ ImmutableAdmissionControlHealthInfo = (*AdmissionControlHealthInfo)(nil)

// ImmutableScannerHealthInfo is an immutable interface for ScannerHealthInfo
type ImmutableScannerHealthInfo interface {
	GetTotalDesiredAnalyzerPods() int32
	GetTotalReadyAnalyzerPods() int32
	GetTotalDesiredDbPods() int32
	GetTotalReadyDbPods() int32
	// Collection of errors that occurred while trying to obtain scanner health info.
	GetImmutableStatusErrors() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ScannerHealthInfo
}

// GetImmutableStatusErrors implements ImmutableScannerHealthInfo
func (m *ScannerHealthInfo) GetImmutableStatusErrors() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.StatusErrors == nil {
			return
		}
		for _, v := range m.StatusErrors {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that ScannerHealthInfo implements ImmutableScannerHealthInfo
var _ ImmutableScannerHealthInfo = (*ScannerHealthInfo)(nil)
