// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package storage

import (
	"iter"
	"time"
)

// ImmutableServiceAccount is an immutable interface for ServiceAccount
type ImmutableServiceAccount interface {
	GetId() string
	GetName() string
	GetNamespace() string
	GetClusterName() string
	GetClusterId() string
	GetImmutableLabels() iter.Seq2[string, string]
	GetImmutableAnnotations() iter.Seq2[string, string]
	GetImmutableCreatedAt() time.Time
	GetAutomountToken() bool
	GetImmutableSecrets() iter.Seq[string]
	GetImmutableImagePullSecrets() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ServiceAccount
}

// GetImmutableLabels implements ImmutableServiceAccount
func (m *ServiceAccount) GetImmutableLabels() iter.Seq2[string, string] {
	return func(yield func(string, string) bool) {
		if m == nil || m.Labels == nil {
			return
		}
		for k, v := range m.Labels {
			if !yield(k, v) {
				return
			}
		}
	}
}

// GetImmutableAnnotations implements ImmutableServiceAccount
func (m *ServiceAccount) GetImmutableAnnotations() iter.Seq2[string, string] {
	return func(yield func(string, string) bool) {
		if m == nil || m.Annotations == nil {
			return
		}
		for k, v := range m.Annotations {
			if !yield(k, v) {
				return
			}
		}
	}
}

// GetImmutableCreatedAt implements ImmutableServiceAccount
func (m *ServiceAccount) GetImmutableCreatedAt() time.Time {
	if m == nil || m.CreatedAt == nil {
		return time.Time{}
	}
	return m.CreatedAt.AsTime()
}

// GetImmutableSecrets implements ImmutableServiceAccount
func (m *ServiceAccount) GetImmutableSecrets() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.Secrets == nil {
			return
		}
		for _, v := range m.Secrets {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableImagePullSecrets implements ImmutableServiceAccount
func (m *ServiceAccount) GetImmutableImagePullSecrets() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.ImagePullSecrets == nil {
			return
		}
		for _, v := range m.ImagePullSecrets {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that ServiceAccount implements ImmutableServiceAccount
var _ ImmutableServiceAccount = (*ServiceAccount)(nil)
