// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/risk.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Next tag: 9
type RiskSubjectType int32

const (
	RiskSubjectType_UNKNOWN         RiskSubjectType = 0
	RiskSubjectType_DEPLOYMENT      RiskSubjectType = 1
	RiskSubjectType_NAMESPACE       RiskSubjectType = 2
	RiskSubjectType_CLUSTER         RiskSubjectType = 3
	RiskSubjectType_NODE            RiskSubjectType = 7
	RiskSubjectType_NODE_COMPONENT  RiskSubjectType = 8
	RiskSubjectType_IMAGE           RiskSubjectType = 4
	RiskSubjectType_IMAGE_COMPONENT RiskSubjectType = 6
	RiskSubjectType_SERVICEACCOUNT  RiskSubjectType = 5
)

// Enum value maps for RiskSubjectType.
var (
	RiskSubjectType_name = map[int32]string{
		0: "UNKNOWN",
		1: "DEPLOYMENT",
		2: "NAMESPACE",
		3: "CLUSTER",
		7: "NODE",
		8: "NODE_COMPONENT",
		4: "IMAGE",
		6: "IMAGE_COMPONENT",
		5: "SERVICEACCOUNT",
	}
	RiskSubjectType_value = map[string]int32{
		"UNKNOWN":         0,
		"DEPLOYMENT":      1,
		"NAMESPACE":       2,
		"CLUSTER":         3,
		"NODE":            7,
		"NODE_COMPONENT":  8,
		"IMAGE":           4,
		"IMAGE_COMPONENT": 6,
		"SERVICEACCOUNT":  5,
	}
)

func (x RiskSubjectType) Enum() *RiskSubjectType {
	p := new(RiskSubjectType)
	*p = x
	return p
}

func (x RiskSubjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RiskSubjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_risk_proto_enumTypes[0].Descriptor()
}

func (RiskSubjectType) Type() protoreflect.EnumType {
	return &file_storage_risk_proto_enumTypes[0]
}

func (x RiskSubjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Risk struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Subject     *RiskSubject           `protobuf:"bytes,2,opt,name=subject"`
	xxx_hidden_Score       float32                `protobuf:"fixed32,3,opt,name=score"`
	xxx_hidden_Results     *[]*Risk_Result        `protobuf:"bytes,4,rep,name=results"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Risk) Reset() {
	*x = Risk{}
	mi := &file_storage_risk_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Risk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Risk) ProtoMessage() {}

func (x *Risk) ProtoReflect() protoreflect.Message {
	mi := &file_storage_risk_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Risk) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Risk) GetSubject() *RiskSubject {
	if x != nil {
		return x.xxx_hidden_Subject
	}
	return nil
}

func (x *Risk) GetScore() float32 {
	if x != nil {
		return x.xxx_hidden_Score
	}
	return 0
}

func (x *Risk) GetResults() []*Risk_Result {
	if x != nil {
		if x.xxx_hidden_Results != nil {
			return *x.xxx_hidden_Results
		}
	}
	return nil
}

func (x *Risk) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *Risk) SetSubject(v *RiskSubject) {
	x.xxx_hidden_Subject = v
}

func (x *Risk) SetScore(v float32) {
	x.xxx_hidden_Score = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *Risk) SetResults(v []*Risk_Result) {
	x.xxx_hidden_Results = &v
}

func (x *Risk) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Risk) HasSubject() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Subject != nil
}

func (x *Risk) HasScore() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Risk) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Risk) ClearSubject() {
	x.xxx_hidden_Subject = nil
}

func (x *Risk) ClearScore() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Score = 0
}

type Risk_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *string
	Subject *RiskSubject
	Score   *float32
	Results []*Risk_Result
}

func (b0 Risk_builder) Build() *Risk {
	m0 := &Risk{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = b.Id
	}
	x.xxx_hidden_Subject = b.Subject
	if b.Score != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Score = *b.Score
	}
	x.xxx_hidden_Results = &b.Results
	return m0
}

type RiskSubject struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_ClusterId   *string                `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_Type        RiskSubjectType        `protobuf:"varint,4,opt,name=type,enum=storage.RiskSubjectType"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RiskSubject) Reset() {
	*x = RiskSubject{}
	mi := &file_storage_risk_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RiskSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiskSubject) ProtoMessage() {}

func (x *RiskSubject) ProtoReflect() protoreflect.Message {
	mi := &file_storage_risk_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RiskSubject) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *RiskSubject) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *RiskSubject) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *RiskSubject) GetType() RiskSubjectType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_Type
		}
	}
	return RiskSubjectType_UNKNOWN
}

func (x *RiskSubject) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *RiskSubject) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *RiskSubject) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *RiskSubject) SetType(v RiskSubjectType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *RiskSubject) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RiskSubject) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *RiskSubject) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RiskSubject) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *RiskSubject) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *RiskSubject) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *RiskSubject) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ClusterId = nil
}

func (x *RiskSubject) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Type = RiskSubjectType_UNKNOWN
}

type RiskSubject_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id        *string
	Namespace *string
	ClusterId *string
	Type      *RiskSubjectType
}

func (b0 RiskSubject_builder) Build() *RiskSubject {
	m0 := &RiskSubject{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = b.Id
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Type = *b.Type
	}
	return m0
}

type Risk_Result struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Factors     *[]*Risk_Result_Factor `protobuf:"bytes,2,rep,name=factors"`
	xxx_hidden_Score       float32                `protobuf:"fixed32,3,opt,name=score"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Risk_Result) Reset() {
	*x = Risk_Result{}
	mi := &file_storage_risk_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Risk_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Risk_Result) ProtoMessage() {}

func (x *Risk_Result) ProtoReflect() protoreflect.Message {
	mi := &file_storage_risk_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Risk_Result) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Risk_Result) GetFactors() []*Risk_Result_Factor {
	if x != nil {
		if x.xxx_hidden_Factors != nil {
			return *x.xxx_hidden_Factors
		}
	}
	return nil
}

func (x *Risk_Result) GetScore() float32 {
	if x != nil {
		return x.xxx_hidden_Score
	}
	return 0
}

func (x *Risk_Result) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Risk_Result) SetFactors(v []*Risk_Result_Factor) {
	x.xxx_hidden_Factors = &v
}

func (x *Risk_Result) SetScore(v float32) {
	x.xxx_hidden_Score = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Risk_Result) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Risk_Result) HasScore() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Risk_Result) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Risk_Result) ClearScore() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Score = 0
}

type Risk_Result_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name    *string
	Factors []*Risk_Result_Factor
	Score   *float32
}

func (b0 Risk_Result_builder) Build() *Risk_Result {
	m0 := &Risk_Result{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Factors = &b.Factors
	if b.Score != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Score = *b.Score
	}
	return m0
}

type Risk_Result_Factor struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Message     *string                `protobuf:"bytes,1,opt,name=message"`
	xxx_hidden_Url         *string                `protobuf:"bytes,2,opt,name=url"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Risk_Result_Factor) Reset() {
	*x = Risk_Result_Factor{}
	mi := &file_storage_risk_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Risk_Result_Factor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Risk_Result_Factor) ProtoMessage() {}

func (x *Risk_Result_Factor) ProtoReflect() protoreflect.Message {
	mi := &file_storage_risk_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Risk_Result_Factor) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *Risk_Result_Factor) GetUrl() string {
	if x != nil {
		if x.xxx_hidden_Url != nil {
			return *x.xxx_hidden_Url
		}
		return ""
	}
	return ""
}

func (x *Risk_Result_Factor) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Risk_Result_Factor) SetUrl(v string) {
	x.xxx_hidden_Url = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Risk_Result_Factor) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Risk_Result_Factor) HasUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Risk_Result_Factor) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Message = nil
}

func (x *Risk_Result_Factor) ClearUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Url = nil
}

type Risk_Result_Factor_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Message *string
	Url     *string
}

func (b0 Risk_Result_Factor_builder) Build() *Risk_Result_Factor {
	m0 := &Risk_Result_Factor{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Message = b.Message
	}
	if b.Url != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Url = b.Url
	}
	return m0
}

var File_storage_risk_proto protoreflect.FileDescriptor

const file_storage_risk_proto_rawDesc = "" +
	"\n" +
	"\x12storage/risk.proto\x12\astorage\x1a!google/protobuf/go_features.proto\"\xae\x02\n" +
	"\x04Risk\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12.\n" +
	"\asubject\x18\x02 \x01(\v2\x14.storage.RiskSubjectR\asubject\x12\x14\n" +
	"\x05score\x18\x03 \x01(\x02R\x05score\x12.\n" +
	"\aresults\x18\x04 \x03(\v2\x14.storage.Risk.ResultR\aresults\x1a\x9f\x01\n" +
	"\x06Result\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x125\n" +
	"\afactors\x18\x02 \x03(\v2\x1b.storage.Risk.Result.FactorR\afactors\x12\x14\n" +
	"\x05score\x18\x03 \x01(\x02R\x05score\x1a4\n" +
	"\x06Factor\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\"\x88\x01\n" +
	"\vRiskSubject\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\x12,\n" +
	"\x04type\x18\x04 \x01(\x0e2\x18.storage.RiskSubjectTypeR\x04type*\x9c\x01\n" +
	"\x0fRiskSubjectType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"DEPLOYMENT\x10\x01\x12\r\n" +
	"\tNAMESPACE\x10\x02\x12\v\n" +
	"\aCLUSTER\x10\x03\x12\b\n" +
	"\x04NODE\x10\a\x12\x12\n" +
	"\x0eNODE_COMPONENT\x10\b\x12\t\n" +
	"\x05IMAGE\x10\x04\x12\x13\n" +
	"\x0fIMAGE_COMPONENT\x10\x06\x12\x12\n" +
	"\x0eSERVICEACCOUNT\x10\x05B6\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storage\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_storage_risk_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storage_risk_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_storage_risk_proto_goTypes = []any{
	(RiskSubjectType)(0),       // 0: storage.RiskSubjectType
	(*Risk)(nil),               // 1: storage.Risk
	(*RiskSubject)(nil),        // 2: storage.RiskSubject
	(*Risk_Result)(nil),        // 3: storage.Risk.Result
	(*Risk_Result_Factor)(nil), // 4: storage.Risk.Result.Factor
}
var file_storage_risk_proto_depIdxs = []int32{
	2, // 0: storage.Risk.subject:type_name -> storage.RiskSubject
	3, // 1: storage.Risk.results:type_name -> storage.Risk.Result
	0, // 2: storage.RiskSubject.type:type_name -> storage.RiskSubjectType
	4, // 3: storage.Risk.Result.factors:type_name -> storage.Risk.Result.Factor
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_storage_risk_proto_init() }
func file_storage_risk_proto_init() {
	if File_storage_risk_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_risk_proto_rawDesc), len(file_storage_risk_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_risk_proto_goTypes,
		DependencyIndexes: file_storage_risk_proto_depIdxs,
		EnumInfos:         file_storage_risk_proto_enumTypes,
		MessageInfos:      file_storage_risk_proto_msgTypes,
	}.Build()
	File_storage_risk_proto = out.File
	file_storage_risk_proto_goTypes = nil
	file_storage_risk_proto_depIdxs = nil
}
