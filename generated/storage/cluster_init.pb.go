// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage/cluster_init.proto

package storage

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	types "github.com/gogo/protobuf/types"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InitBundleMeta struct {
	Id                   string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" sql:"pk"`
	Name                 string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt            *types.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy            *User            `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	IsRevoked            bool             `protobuf:"varint,5,opt,name=is_revoked,json=isRevoked,proto3" json:"is_revoked,omitempty"`
	ExpiresAt            *types.Timestamp `protobuf:"bytes,6,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *InitBundleMeta) Reset()         { *m = InitBundleMeta{} }
func (m *InitBundleMeta) String() string { return proto.CompactTextString(m) }
func (*InitBundleMeta) ProtoMessage()    {}
func (*InitBundleMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd67d3248f7aceeb, []int{0}
}
func (m *InitBundleMeta) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InitBundleMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InitBundleMeta.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InitBundleMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitBundleMeta.Merge(m, src)
}
func (m *InitBundleMeta) XXX_Size() int {
	return m.Size()
}
func (m *InitBundleMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_InitBundleMeta.DiscardUnknown(m)
}

var xxx_messageInfo_InitBundleMeta proto.InternalMessageInfo

func (m *InitBundleMeta) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InitBundleMeta) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InitBundleMeta) GetCreatedAt() *types.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *InitBundleMeta) GetCreatedBy() *User {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *InitBundleMeta) GetIsRevoked() bool {
	if m != nil {
		return m.IsRevoked
	}
	return false
}

func (m *InitBundleMeta) GetExpiresAt() *types.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

func (m *InitBundleMeta) MessageClone() proto.Message {
	return m.Clone()
}
func (m *InitBundleMeta) Clone() *InitBundleMeta {
	if m == nil {
		return nil
	}
	cloned := new(InitBundleMeta)
	*cloned = *m

	cloned.CreatedAt = m.CreatedAt.Clone()
	cloned.CreatedBy = m.CreatedBy.Clone()
	cloned.ExpiresAt = m.ExpiresAt.Clone()
	return cloned
}

func init() {
	proto.RegisterType((*InitBundleMeta)(nil), "storage.InitBundleMeta")
}

func init() { proto.RegisterFile("storage/cluster_init.proto", fileDescriptor_bd67d3248f7aceeb) }

var fileDescriptor_bd67d3248f7aceeb = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x3d, 0x4e, 0xc3, 0x30,
	0x18, 0x86, 0x71, 0x28, 0xa5, 0x35, 0x3f, 0x83, 0xc5, 0x10, 0x22, 0x48, 0xab, 0x4e, 0x1d, 0x90,
	0x23, 0x01, 0x0b, 0x6c, 0xcd, 0xc6, 0xc0, 0x12, 0xc1, 0xc2, 0x52, 0xb9, 0xc9, 0x47, 0x64, 0xe5,
	0xc7, 0xc1, 0xfe, 0x82, 0xda, 0x03, 0x70, 0x07, 0x8e, 0xc4, 0xc8, 0x09, 0x10, 0x0a, 0x37, 0xe0,
	0x04, 0x28, 0x7f, 0x30, 0xb2, 0xbd, 0x7a, 0xbe, 0xf7, 0xb5, 0x1e, 0xc9, 0xd4, 0x31, 0xa8, 0xb4,
	0x88, 0xc1, 0x0b, 0xd3, 0xd2, 0x20, 0xe8, 0xa5, 0xcc, 0x25, 0xf2, 0x42, 0x2b, 0x54, 0x6c, 0xb7,
	0xbb, 0x39, 0x93, 0x58, 0xa9, 0x38, 0x05, 0xaf, 0xc1, 0xab, 0xf2, 0xd1, 0x43, 0x99, 0x81, 0x41,
	0x91, 0x15, 0x6d, 0xd3, 0x61, 0xfd, 0x2b, 0xa5, 0x01, 0xdd, 0xb1, 0xa3, 0x58, 0xc5, 0xaa, 0x89,
	0x5e, 0x9d, 0x5a, 0x3a, 0x7b, 0xb1, 0xe8, 0xe1, 0x4d, 0x2e, 0xd1, 0x2f, 0xf3, 0x28, 0x85, 0x5b,
	0x40, 0xc1, 0x4e, 0xa8, 0x25, 0x23, 0x9b, 0x4c, 0xc9, 0x7c, 0xec, 0xef, 0x7f, 0x7f, 0x4c, 0x46,
	0xe6, 0x29, 0xbd, 0x9e, 0x15, 0xc9, 0x2c, 0xb0, 0x64, 0xc4, 0x18, 0x1d, 0xe4, 0x22, 0x03, 0xdb,
	0xaa, 0xef, 0x41, 0x93, 0xd9, 0x15, 0xa5, 0xa1, 0x06, 0x81, 0x10, 0x2d, 0x05, 0xda, 0xdb, 0x53,
	0x32, 0xdf, 0x3b, 0x77, 0x78, 0x2b, 0xc9, 0x7b, 0x49, 0x7e, 0xd7, 0x4b, 0x06, 0xe3, 0xae, 0xbd,
	0x40, 0x76, 0xf6, 0x37, 0x5d, 0x6d, 0xec, 0x41, 0x33, 0x3d, 0xe0, 0x9d, 0x3e, 0xbf, 0x37, 0xa0,
	0x7f, 0xdb, 0xfe, 0x86, 0x9d, 0x52, 0x2a, 0xcd, 0x52, 0xc3, 0xb3, 0x4a, 0x20, 0xb2, 0x77, 0xa6,
	0x64, 0x3e, 0x0a, 0xc6, 0xd2, 0x04, 0x2d, 0xa8, 0x3d, 0x60, 0x5d, 0x48, 0x0d, 0xa6, 0xf6, 0x18,
	0xfe, 0xef, 0xd1, 0xb5, 0x17, 0xe8, 0x5f, 0xbe, 0x55, 0x2e, 0x79, 0xaf, 0x5c, 0xf2, 0x59, 0xb9,
	0xe4, 0xf5, 0xcb, 0xdd, 0xa2, 0xc7, 0x52, 0x71, 0x83, 0x22, 0x4c, 0xb4, 0x5a, 0xb7, 0xe3, 0x5e,
	0xeb, 0xa1, 0xff, 0x88, 0xd5, 0xb0, 0xe1, 0x17, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5d, 0x11,
	0x84, 0xe6, 0xb6, 0x01, 0x00, 0x00,
}

func (m *InitBundleMeta) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InitBundleMeta) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InitBundleMeta) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ExpiresAt != nil {
		{
			size, err := m.ExpiresAt.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintClusterInit(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.IsRevoked {
		i--
		if m.IsRevoked {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.CreatedBy != nil {
		{
			size, err := m.CreatedBy.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintClusterInit(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.CreatedAt != nil {
		{
			size, err := m.CreatedAt.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintClusterInit(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintClusterInit(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintClusterInit(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintClusterInit(dAtA []byte, offset int, v uint64) int {
	offset -= sovClusterInit(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *InitBundleMeta) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovClusterInit(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovClusterInit(uint64(l))
	}
	if m.CreatedAt != nil {
		l = m.CreatedAt.Size()
		n += 1 + l + sovClusterInit(uint64(l))
	}
	if m.CreatedBy != nil {
		l = m.CreatedBy.Size()
		n += 1 + l + sovClusterInit(uint64(l))
	}
	if m.IsRevoked {
		n += 2
	}
	if m.ExpiresAt != nil {
		l = m.ExpiresAt.Size()
		n += 1 + l + sovClusterInit(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovClusterInit(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozClusterInit(x uint64) (n int) {
	return sovClusterInit(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *InitBundleMeta) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClusterInit
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InitBundleMeta: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InitBundleMeta: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterInit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClusterInit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClusterInit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterInit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClusterInit
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClusterInit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterInit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClusterInit
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClusterInit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedAt == nil {
				m.CreatedAt = &types.Timestamp{}
			}
			if err := m.CreatedAt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedBy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterInit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClusterInit
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClusterInit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreatedBy == nil {
				m.CreatedBy = &User{}
			}
			if err := m.CreatedBy.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsRevoked", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterInit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsRevoked = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiresAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterInit
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClusterInit
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClusterInit
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExpiresAt == nil {
				m.ExpiresAt = &types.Timestamp{}
			}
			if err := m.ExpiresAt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipClusterInit(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthClusterInit
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipClusterInit(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowClusterInit
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClusterInit
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClusterInit
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthClusterInit
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupClusterInit
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthClusterInit
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthClusterInit        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowClusterInit          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupClusterInit = fmt.Errorf("proto: unexpected end of group")
)
