// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/process_baseline.proto

//go:build !protoopaque

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContainerNameAndBaselineStatus_BaselineStatus int32

const (
	ContainerNameAndBaselineStatus_INVALID       ContainerNameAndBaselineStatus_BaselineStatus = 0
	ContainerNameAndBaselineStatus_NOT_GENERATED ContainerNameAndBaselineStatus_BaselineStatus = 1 // In current implementation, this is a temporary condition.
	ContainerNameAndBaselineStatus_UNLOCKED      ContainerNameAndBaselineStatus_BaselineStatus = 2
	ContainerNameAndBaselineStatus_LOCKED        ContainerNameAndBaselineStatus_BaselineStatus = 3
)

// Enum value maps for ContainerNameAndBaselineStatus_BaselineStatus.
var (
	ContainerNameAndBaselineStatus_BaselineStatus_name = map[int32]string{
		0: "INVALID",
		1: "NOT_GENERATED",
		2: "UNLOCKED",
		3: "LOCKED",
	}
	ContainerNameAndBaselineStatus_BaselineStatus_value = map[string]int32{
		"INVALID":       0,
		"NOT_GENERATED": 1,
		"UNLOCKED":      2,
		"LOCKED":        3,
	}
)

func (x ContainerNameAndBaselineStatus_BaselineStatus) Enum() *ContainerNameAndBaselineStatus_BaselineStatus {
	p := new(ContainerNameAndBaselineStatus_BaselineStatus)
	*p = x
	return p
}

func (x ContainerNameAndBaselineStatus_BaselineStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerNameAndBaselineStatus_BaselineStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_process_baseline_proto_enumTypes[0].Descriptor()
}

func (ContainerNameAndBaselineStatus_BaselineStatus) Type() protoreflect.EnumType {
	return &file_storage_process_baseline_proto_enumTypes[0]
}

func (x ContainerNameAndBaselineStatus_BaselineStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ProcessBaselineKey struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// The idea is for the keys to be flexible.
	// Only certain combinations of these will be supported.
	DeploymentId  *string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId" json:"deployment_id,omitempty" search:"Deployment ID,hidden" sql:"type(uuid),index=hash"` // @gotags: search:"Deployment ID,hidden" sql:"type(uuid),index=hash"
	ContainerName *string `protobuf:"bytes,2,opt,name=container_name,json=containerName" json:"container_name,omitempty"`
	ClusterId     *string `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty" search:"Cluster ID,hidden,store" sql:"type(uuid)"` // @gotags: search:"Cluster ID,hidden,store" sql:"type(uuid)"
	Namespace     *string `protobuf:"bytes,4,opt,name=namespace" json:"namespace,omitempty" search:"Namespace,hidden,store"`                  // @gotags: search:"Namespace,hidden,store"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessBaselineKey) Reset() {
	*x = ProcessBaselineKey{}
	mi := &file_storage_process_baseline_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessBaselineKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessBaselineKey) ProtoMessage() {}

func (x *ProcessBaselineKey) ProtoReflect() protoreflect.Message {
	mi := &file_storage_process_baseline_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProcessBaselineKey) GetDeploymentId() string {
	if x != nil && x.DeploymentId != nil {
		return *x.DeploymentId
	}
	return ""
}

func (x *ProcessBaselineKey) GetContainerName() string {
	if x != nil && x.ContainerName != nil {
		return *x.ContainerName
	}
	return ""
}

func (x *ProcessBaselineKey) GetClusterId() string {
	if x != nil && x.ClusterId != nil {
		return *x.ClusterId
	}
	return ""
}

func (x *ProcessBaselineKey) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *ProcessBaselineKey) SetDeploymentId(v string) {
	x.DeploymentId = &v
}

func (x *ProcessBaselineKey) SetContainerName(v string) {
	x.ContainerName = &v
}

func (x *ProcessBaselineKey) SetClusterId(v string) {
	x.ClusterId = &v
}

func (x *ProcessBaselineKey) SetNamespace(v string) {
	x.Namespace = &v
}

func (x *ProcessBaselineKey) HasDeploymentId() bool {
	if x == nil {
		return false
	}
	return x.DeploymentId != nil
}

func (x *ProcessBaselineKey) HasContainerName() bool {
	if x == nil {
		return false
	}
	return x.ContainerName != nil
}

func (x *ProcessBaselineKey) HasClusterId() bool {
	if x == nil {
		return false
	}
	return x.ClusterId != nil
}

func (x *ProcessBaselineKey) HasNamespace() bool {
	if x == nil {
		return false
	}
	return x.Namespace != nil
}

func (x *ProcessBaselineKey) ClearDeploymentId() {
	x.DeploymentId = nil
}

func (x *ProcessBaselineKey) ClearContainerName() {
	x.ContainerName = nil
}

func (x *ProcessBaselineKey) ClearClusterId() {
	x.ClusterId = nil
}

func (x *ProcessBaselineKey) ClearNamespace() {
	x.Namespace = nil
}

type ProcessBaselineKey_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The idea is for the keys to be flexible.
	// Only certain combinations of these will be supported.
	DeploymentId  *string
	ContainerName *string
	ClusterId     *string
	Namespace     *string
}

func (b0 ProcessBaselineKey_builder) Build() *ProcessBaselineKey {
	m0 := &ProcessBaselineKey{}
	b, x := &b0, m0
	_, _ = b, x
	x.DeploymentId = b.DeploymentId
	x.ContainerName = b.ContainerName
	x.ClusterId = b.ClusterId
	x.Namespace = b.Namespace
	return m0
}

type ProcessBaseline struct {
	state                   protoimpl.MessageState `protogen:"hybrid.v1"`
	Id                      *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" sql:"pk"` // @gotags: sql:"pk"
	Key                     *ProcessBaselineKey    `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Elements                []*BaselineElement     `protobuf:"bytes,3,rep,name=elements" json:"elements,omitempty"`
	ElementGraveyard        []*BaselineElement     `protobuf:"bytes,8,rep,name=element_graveyard,json=elementGraveyard" json:"element_graveyard,omitempty" search:"-"` // @gotags: search:"-"
	Created                 *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created" json:"created,omitempty"`
	UserLockedTimestamp     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=user_locked_timestamp,json=userLockedTimestamp" json:"user_locked_timestamp,omitempty"`
	StackRoxLockedTimestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=stack_rox_locked_timestamp,json=stackRoxLockedTimestamp" json:"stack_rox_locked_timestamp,omitempty"`
	LastUpdate              *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_update,json=lastUpdate" json:"last_update,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ProcessBaseline) Reset() {
	*x = ProcessBaseline{}
	mi := &file_storage_process_baseline_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessBaseline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessBaseline) ProtoMessage() {}

func (x *ProcessBaseline) ProtoReflect() protoreflect.Message {
	mi := &file_storage_process_baseline_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProcessBaseline) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ProcessBaseline) GetKey() *ProcessBaselineKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ProcessBaseline) GetElements() []*BaselineElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *ProcessBaseline) GetElementGraveyard() []*BaselineElement {
	if x != nil {
		return x.ElementGraveyard
	}
	return nil
}

func (x *ProcessBaseline) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *ProcessBaseline) GetUserLockedTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.UserLockedTimestamp
	}
	return nil
}

func (x *ProcessBaseline) GetStackRoxLockedTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.StackRoxLockedTimestamp
	}
	return nil
}

func (x *ProcessBaseline) GetLastUpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdate
	}
	return nil
}

func (x *ProcessBaseline) SetId(v string) {
	x.Id = &v
}

func (x *ProcessBaseline) SetKey(v *ProcessBaselineKey) {
	x.Key = v
}

func (x *ProcessBaseline) SetElements(v []*BaselineElement) {
	x.Elements = v
}

func (x *ProcessBaseline) SetElementGraveyard(v []*BaselineElement) {
	x.ElementGraveyard = v
}

func (x *ProcessBaseline) SetCreated(v *timestamppb.Timestamp) {
	x.Created = v
}

func (x *ProcessBaseline) SetUserLockedTimestamp(v *timestamppb.Timestamp) {
	x.UserLockedTimestamp = v
}

func (x *ProcessBaseline) SetStackRoxLockedTimestamp(v *timestamppb.Timestamp) {
	x.StackRoxLockedTimestamp = v
}

func (x *ProcessBaseline) SetLastUpdate(v *timestamppb.Timestamp) {
	x.LastUpdate = v
}

func (x *ProcessBaseline) HasId() bool {
	if x == nil {
		return false
	}
	return x.Id != nil
}

func (x *ProcessBaseline) HasKey() bool {
	if x == nil {
		return false
	}
	return x.Key != nil
}

func (x *ProcessBaseline) HasCreated() bool {
	if x == nil {
		return false
	}
	return x.Created != nil
}

func (x *ProcessBaseline) HasUserLockedTimestamp() bool {
	if x == nil {
		return false
	}
	return x.UserLockedTimestamp != nil
}

func (x *ProcessBaseline) HasStackRoxLockedTimestamp() bool {
	if x == nil {
		return false
	}
	return x.StackRoxLockedTimestamp != nil
}

func (x *ProcessBaseline) HasLastUpdate() bool {
	if x == nil {
		return false
	}
	return x.LastUpdate != nil
}

func (x *ProcessBaseline) ClearId() {
	x.Id = nil
}

func (x *ProcessBaseline) ClearKey() {
	x.Key = nil
}

func (x *ProcessBaseline) ClearCreated() {
	x.Created = nil
}

func (x *ProcessBaseline) ClearUserLockedTimestamp() {
	x.UserLockedTimestamp = nil
}

func (x *ProcessBaseline) ClearStackRoxLockedTimestamp() {
	x.StackRoxLockedTimestamp = nil
}

func (x *ProcessBaseline) ClearLastUpdate() {
	x.LastUpdate = nil
}

type ProcessBaseline_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                      *string
	Key                     *ProcessBaselineKey
	Elements                []*BaselineElement
	ElementGraveyard        []*BaselineElement
	Created                 *timestamppb.Timestamp
	UserLockedTimestamp     *timestamppb.Timestamp
	StackRoxLockedTimestamp *timestamppb.Timestamp
	LastUpdate              *timestamppb.Timestamp
}

func (b0 ProcessBaseline_builder) Build() *ProcessBaseline {
	m0 := &ProcessBaseline{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	x.Key = b.Key
	x.Elements = b.Elements
	x.ElementGraveyard = b.ElementGraveyard
	x.Created = b.Created
	x.UserLockedTimestamp = b.UserLockedTimestamp
	x.StackRoxLockedTimestamp = b.StackRoxLockedTimestamp
	x.LastUpdate = b.LastUpdate
	return m0
}

type BaselineElement struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Element       *BaselineItem          `protobuf:"bytes,1,opt,name=element" json:"element,omitempty"`
	Auto          *bool                  `protobuf:"varint,2,opt,name=auto" json:"auto,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaselineElement) Reset() {
	*x = BaselineElement{}
	mi := &file_storage_process_baseline_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaselineElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaselineElement) ProtoMessage() {}

func (x *BaselineElement) ProtoReflect() protoreflect.Message {
	mi := &file_storage_process_baseline_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BaselineElement) GetElement() *BaselineItem {
	if x != nil {
		return x.Element
	}
	return nil
}

func (x *BaselineElement) GetAuto() bool {
	if x != nil && x.Auto != nil {
		return *x.Auto
	}
	return false
}

func (x *BaselineElement) SetElement(v *BaselineItem) {
	x.Element = v
}

func (x *BaselineElement) SetAuto(v bool) {
	x.Auto = &v
}

func (x *BaselineElement) HasElement() bool {
	if x == nil {
		return false
	}
	return x.Element != nil
}

func (x *BaselineElement) HasAuto() bool {
	if x == nil {
		return false
	}
	return x.Auto != nil
}

func (x *BaselineElement) ClearElement() {
	x.Element = nil
}

func (x *BaselineElement) ClearAuto() {
	x.Auto = nil
}

type BaselineElement_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Element *BaselineItem
	Auto    *bool
}

func (b0 BaselineElement_builder) Build() *BaselineElement {
	m0 := &BaselineElement{}
	b, x := &b0, m0
	_, _ = b, x
	x.Element = b.Element
	x.Auto = b.Auto
	return m0
}

type BaselineItem struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Types that are valid to be assigned to Item:
	//
	//	*BaselineItem_ProcessName
	Item          isBaselineItem_Item `protobuf_oneof:"item"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaselineItem) Reset() {
	*x = BaselineItem{}
	mi := &file_storage_process_baseline_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaselineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaselineItem) ProtoMessage() {}

func (x *BaselineItem) ProtoReflect() protoreflect.Message {
	mi := &file_storage_process_baseline_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BaselineItem) GetItem() isBaselineItem_Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *BaselineItem) GetProcessName() string {
	if x != nil {
		if x, ok := x.Item.(*BaselineItem_ProcessName); ok {
			return x.ProcessName
		}
	}
	return ""
}

func (x *BaselineItem) SetProcessName(v string) {
	x.Item = &BaselineItem_ProcessName{v}
}

func (x *BaselineItem) HasItem() bool {
	if x == nil {
		return false
	}
	return x.Item != nil
}

func (x *BaselineItem) HasProcessName() bool {
	if x == nil {
		return false
	}
	_, ok := x.Item.(*BaselineItem_ProcessName)
	return ok
}

func (x *BaselineItem) ClearItem() {
	x.Item = nil
}

func (x *BaselineItem) ClearProcessName() {
	if _, ok := x.Item.(*BaselineItem_ProcessName); ok {
		x.Item = nil
	}
}

const BaselineItem_Item_not_set_case case_BaselineItem_Item = 0
const BaselineItem_ProcessName_case case_BaselineItem_Item = 1

func (x *BaselineItem) WhichItem() case_BaselineItem_Item {
	if x == nil {
		return BaselineItem_Item_not_set_case
	}
	switch x.Item.(type) {
	case *BaselineItem_ProcessName:
		return BaselineItem_ProcessName_case
	default:
		return BaselineItem_Item_not_set_case
	}
}

type BaselineItem_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof Item:
	ProcessName *string
	// -- end of Item
}

func (b0 BaselineItem_builder) Build() *BaselineItem {
	m0 := &BaselineItem{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ProcessName != nil {
		x.Item = &BaselineItem_ProcessName{*b.ProcessName}
	}
	return m0
}

type case_BaselineItem_Item protoreflect.FieldNumber

func (x case_BaselineItem_Item) String() string {
	md := file_storage_process_baseline_proto_msgTypes[3].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isBaselineItem_Item interface {
	isBaselineItem_Item()
}

type BaselineItem_ProcessName struct {
	ProcessName string `protobuf:"bytes,1,opt,name=process_name,json=processName,oneof"`
}

func (*BaselineItem_ProcessName) isBaselineItem_Item() {}

// `ContainerNameAndBaselineStatus` represents a cached result
// of process evaluation on a specific container name.
type ContainerNameAndBaselineStatus struct {
	state                      protoimpl.MessageState                         `protogen:"hybrid.v1"`
	ContainerName              *string                                        `protobuf:"bytes,1,opt,name=container_name,json=containerName" json:"container_name,omitempty"`
	BaselineStatus             *ContainerNameAndBaselineStatus_BaselineStatus `protobuf:"varint,2,opt,name=baseline_status,json=baselineStatus,enum=storage.ContainerNameAndBaselineStatus_BaselineStatus" json:"baseline_status,omitempty"`
	AnomalousProcessesExecuted *bool                                          `protobuf:"varint,3,opt,name=anomalous_processes_executed,json=anomalousProcessesExecuted" json:"anomalous_processes_executed,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ContainerNameAndBaselineStatus) Reset() {
	*x = ContainerNameAndBaselineStatus{}
	mi := &file_storage_process_baseline_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerNameAndBaselineStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerNameAndBaselineStatus) ProtoMessage() {}

func (x *ContainerNameAndBaselineStatus) ProtoReflect() protoreflect.Message {
	mi := &file_storage_process_baseline_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ContainerNameAndBaselineStatus) GetContainerName() string {
	if x != nil && x.ContainerName != nil {
		return *x.ContainerName
	}
	return ""
}

func (x *ContainerNameAndBaselineStatus) GetBaselineStatus() ContainerNameAndBaselineStatus_BaselineStatus {
	if x != nil && x.BaselineStatus != nil {
		return *x.BaselineStatus
	}
	return ContainerNameAndBaselineStatus_INVALID
}

func (x *ContainerNameAndBaselineStatus) GetAnomalousProcessesExecuted() bool {
	if x != nil && x.AnomalousProcessesExecuted != nil {
		return *x.AnomalousProcessesExecuted
	}
	return false
}

func (x *ContainerNameAndBaselineStatus) SetContainerName(v string) {
	x.ContainerName = &v
}

func (x *ContainerNameAndBaselineStatus) SetBaselineStatus(v ContainerNameAndBaselineStatus_BaselineStatus) {
	x.BaselineStatus = &v
}

func (x *ContainerNameAndBaselineStatus) SetAnomalousProcessesExecuted(v bool) {
	x.AnomalousProcessesExecuted = &v
}

func (x *ContainerNameAndBaselineStatus) HasContainerName() bool {
	if x == nil {
		return false
	}
	return x.ContainerName != nil
}

func (x *ContainerNameAndBaselineStatus) HasBaselineStatus() bool {
	if x == nil {
		return false
	}
	return x.BaselineStatus != nil
}

func (x *ContainerNameAndBaselineStatus) HasAnomalousProcessesExecuted() bool {
	if x == nil {
		return false
	}
	return x.AnomalousProcessesExecuted != nil
}

func (x *ContainerNameAndBaselineStatus) ClearContainerName() {
	x.ContainerName = nil
}

func (x *ContainerNameAndBaselineStatus) ClearBaselineStatus() {
	x.BaselineStatus = nil
}

func (x *ContainerNameAndBaselineStatus) ClearAnomalousProcessesExecuted() {
	x.AnomalousProcessesExecuted = nil
}

type ContainerNameAndBaselineStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ContainerName              *string
	BaselineStatus             *ContainerNameAndBaselineStatus_BaselineStatus
	AnomalousProcessesExecuted *bool
}

func (b0 ContainerNameAndBaselineStatus_builder) Build() *ContainerNameAndBaselineStatus {
	m0 := &ContainerNameAndBaselineStatus{}
	b, x := &b0, m0
	_, _ = b, x
	x.ContainerName = b.ContainerName
	x.BaselineStatus = b.BaselineStatus
	x.AnomalousProcessesExecuted = b.AnomalousProcessesExecuted
	return m0
}

// `ProcessBaselineResults` represent cached results of process baseline evaluation.
type ProcessBaselineResults struct {
	state            protoimpl.MessageState            `protogen:"hybrid.v1"`
	DeploymentId     *string                           `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId" json:"deployment_id,omitempty" sql:"pk,type(uuid)"` // @gotags: sql:"pk,type(uuid)"
	ClusterId        *string                           `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty" search:"Cluster ID,hidden,store" sql:"type(uuid)"`          // @gotags: search:"Cluster ID,hidden,store"  sql:"type(uuid)"
	Namespace        *string                           `protobuf:"bytes,4,opt,name=namespace" json:"namespace,omitempty" search:"Namespace,hidden,store"`                           // @gotags: search:"Namespace,hidden,store"
	BaselineStatuses []*ContainerNameAndBaselineStatus `protobuf:"bytes,2,rep,name=baseline_statuses,json=baselineStatuses" json:"baseline_statuses,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ProcessBaselineResults) Reset() {
	*x = ProcessBaselineResults{}
	mi := &file_storage_process_baseline_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessBaselineResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessBaselineResults) ProtoMessage() {}

func (x *ProcessBaselineResults) ProtoReflect() protoreflect.Message {
	mi := &file_storage_process_baseline_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProcessBaselineResults) GetDeploymentId() string {
	if x != nil && x.DeploymentId != nil {
		return *x.DeploymentId
	}
	return ""
}

func (x *ProcessBaselineResults) GetClusterId() string {
	if x != nil && x.ClusterId != nil {
		return *x.ClusterId
	}
	return ""
}

func (x *ProcessBaselineResults) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *ProcessBaselineResults) GetBaselineStatuses() []*ContainerNameAndBaselineStatus {
	if x != nil {
		return x.BaselineStatuses
	}
	return nil
}

func (x *ProcessBaselineResults) SetDeploymentId(v string) {
	x.DeploymentId = &v
}

func (x *ProcessBaselineResults) SetClusterId(v string) {
	x.ClusterId = &v
}

func (x *ProcessBaselineResults) SetNamespace(v string) {
	x.Namespace = &v
}

func (x *ProcessBaselineResults) SetBaselineStatuses(v []*ContainerNameAndBaselineStatus) {
	x.BaselineStatuses = v
}

func (x *ProcessBaselineResults) HasDeploymentId() bool {
	if x == nil {
		return false
	}
	return x.DeploymentId != nil
}

func (x *ProcessBaselineResults) HasClusterId() bool {
	if x == nil {
		return false
	}
	return x.ClusterId != nil
}

func (x *ProcessBaselineResults) HasNamespace() bool {
	if x == nil {
		return false
	}
	return x.Namespace != nil
}

func (x *ProcessBaselineResults) ClearDeploymentId() {
	x.DeploymentId = nil
}

func (x *ProcessBaselineResults) ClearClusterId() {
	x.ClusterId = nil
}

func (x *ProcessBaselineResults) ClearNamespace() {
	x.Namespace = nil
}

type ProcessBaselineResults_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DeploymentId     *string
	ClusterId        *string
	Namespace        *string
	BaselineStatuses []*ContainerNameAndBaselineStatus
}

func (b0 ProcessBaselineResults_builder) Build() *ProcessBaselineResults {
	m0 := &ProcessBaselineResults{}
	b, x := &b0, m0
	_, _ = b, x
	x.DeploymentId = b.DeploymentId
	x.ClusterId = b.ClusterId
	x.Namespace = b.Namespace
	x.BaselineStatuses = b.BaselineStatuses
	return m0
}

var File_storage_process_baseline_proto protoreflect.FileDescriptor

const file_storage_process_baseline_proto_rawDesc = "" +
	"\n" +
	"\x1estorage/process_baseline.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\x1a!google/protobuf/go_features.proto\"\x9d\x01\n" +
	"\x12ProcessBaselineKey\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\x12%\n" +
	"\x0econtainer_name\x18\x02 \x01(\tR\rcontainerName\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\"\xe9\x03\n" +
	"\x0fProcessBaseline\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12-\n" +
	"\x03key\x18\x02 \x01(\v2\x1b.storage.ProcessBaselineKeyR\x03key\x124\n" +
	"\belements\x18\x03 \x03(\v2\x18.storage.BaselineElementR\belements\x12E\n" +
	"\x11element_graveyard\x18\b \x03(\v2\x18.storage.BaselineElementR\x10elementGraveyard\x124\n" +
	"\acreated\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x12N\n" +
	"\x15user_locked_timestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x13userLockedTimestamp\x12W\n" +
	"\x1astack_rox_locked_timestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x17stackRoxLockedTimestamp\x12;\n" +
	"\vlast_update\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastUpdate\"V\n" +
	"\x0fBaselineElement\x12/\n" +
	"\aelement\x18\x01 \x01(\v2\x15.storage.BaselineItemR\aelement\x12\x12\n" +
	"\x04auto\x18\x02 \x01(\bR\x04auto\";\n" +
	"\fBaselineItem\x12#\n" +
	"\fprocess_name\x18\x01 \x01(\tH\x00R\vprocessNameB\x06\n" +
	"\x04item\"\xb6\x02\n" +
	"\x1eContainerNameAndBaselineStatus\x12%\n" +
	"\x0econtainer_name\x18\x01 \x01(\tR\rcontainerName\x12_\n" +
	"\x0fbaseline_status\x18\x02 \x01(\x0e26.storage.ContainerNameAndBaselineStatus.BaselineStatusR\x0ebaselineStatus\x12@\n" +
	"\x1canomalous_processes_executed\x18\x03 \x01(\bR\x1aanomalousProcessesExecuted\"J\n" +
	"\x0eBaselineStatus\x12\v\n" +
	"\aINVALID\x10\x00\x12\x11\n" +
	"\rNOT_GENERATED\x10\x01\x12\f\n" +
	"\bUNLOCKED\x10\x02\x12\n" +
	"\n" +
	"\x06LOCKED\x10\x03\"\xd0\x01\n" +
	"\x16ProcessBaselineResults\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12T\n" +
	"\x11baseline_statuses\x18\x02 \x03(\v2'.storage.ContainerNameAndBaselineStatusR\x10baselineStatusesB9\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storage\xf8\x01\x01\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_storage_process_baseline_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storage_process_baseline_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_storage_process_baseline_proto_goTypes = []any{
	(ContainerNameAndBaselineStatus_BaselineStatus)(0), // 0: storage.ContainerNameAndBaselineStatus.BaselineStatus
	(*ProcessBaselineKey)(nil),                         // 1: storage.ProcessBaselineKey
	(*ProcessBaseline)(nil),                            // 2: storage.ProcessBaseline
	(*BaselineElement)(nil),                            // 3: storage.BaselineElement
	(*BaselineItem)(nil),                               // 4: storage.BaselineItem
	(*ContainerNameAndBaselineStatus)(nil),             // 5: storage.ContainerNameAndBaselineStatus
	(*ProcessBaselineResults)(nil),                     // 6: storage.ProcessBaselineResults
	(*timestamppb.Timestamp)(nil),                      // 7: google.protobuf.Timestamp
}
var file_storage_process_baseline_proto_depIdxs = []int32{
	1,  // 0: storage.ProcessBaseline.key:type_name -> storage.ProcessBaselineKey
	3,  // 1: storage.ProcessBaseline.elements:type_name -> storage.BaselineElement
	3,  // 2: storage.ProcessBaseline.element_graveyard:type_name -> storage.BaselineElement
	7,  // 3: storage.ProcessBaseline.created:type_name -> google.protobuf.Timestamp
	7,  // 4: storage.ProcessBaseline.user_locked_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 5: storage.ProcessBaseline.stack_rox_locked_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 6: storage.ProcessBaseline.last_update:type_name -> google.protobuf.Timestamp
	4,  // 7: storage.BaselineElement.element:type_name -> storage.BaselineItem
	0,  // 8: storage.ContainerNameAndBaselineStatus.baseline_status:type_name -> storage.ContainerNameAndBaselineStatus.BaselineStatus
	5,  // 9: storage.ProcessBaselineResults.baseline_statuses:type_name -> storage.ContainerNameAndBaselineStatus
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_storage_process_baseline_proto_init() }
func file_storage_process_baseline_proto_init() {
	if File_storage_process_baseline_proto != nil {
		return
	}
	file_storage_process_baseline_proto_msgTypes[3].OneofWrappers = []any{
		(*BaselineItem_ProcessName)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_process_baseline_proto_rawDesc), len(file_storage_process_baseline_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_process_baseline_proto_goTypes,
		DependencyIndexes: file_storage_process_baseline_proto_depIdxs,
		EnumInfos:         file_storage_process_baseline_proto_enumTypes,
		MessageInfos:      file_storage_process_baseline_proto_msgTypes,
	}.Build()
	File_storage_process_baseline_proto = out.File
	file_storage_process_baseline_proto_goTypes = nil
	file_storage_process_baseline_proto_depIdxs = nil
}
