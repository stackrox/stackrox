// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/compliance.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComplianceState int32

const (
	ComplianceState_COMPLIANCE_STATE_UNKNOWN ComplianceState = 0
	ComplianceState_COMPLIANCE_STATE_SKIP    ComplianceState = 1
	ComplianceState_COMPLIANCE_STATE_NOTE    ComplianceState = 2
	ComplianceState_COMPLIANCE_STATE_SUCCESS ComplianceState = 3
	ComplianceState_COMPLIANCE_STATE_FAILURE ComplianceState = 4
	ComplianceState_COMPLIANCE_STATE_ERROR   ComplianceState = 5
)

// Enum value maps for ComplianceState.
var (
	ComplianceState_name = map[int32]string{
		0: "COMPLIANCE_STATE_UNKNOWN",
		1: "COMPLIANCE_STATE_SKIP",
		2: "COMPLIANCE_STATE_NOTE",
		3: "COMPLIANCE_STATE_SUCCESS",
		4: "COMPLIANCE_STATE_FAILURE",
		5: "COMPLIANCE_STATE_ERROR",
	}
	ComplianceState_value = map[string]int32{
		"COMPLIANCE_STATE_UNKNOWN": 0,
		"COMPLIANCE_STATE_SKIP":    1,
		"COMPLIANCE_STATE_NOTE":    2,
		"COMPLIANCE_STATE_SUCCESS": 3,
		"COMPLIANCE_STATE_FAILURE": 4,
		"COMPLIANCE_STATE_ERROR":   5,
	}
)

func (x ComplianceState) Enum() *ComplianceState {
	p := new(ComplianceState)
	*p = x
	return p
}

func (x ComplianceState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComplianceState) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_compliance_proto_enumTypes[0].Descriptor()
}

func (ComplianceState) Type() protoreflect.EnumType {
	return &file_storage_compliance_proto_enumTypes[0]
}

func (x ComplianceState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ComplianceAggregation_Scope int32

const (
	ComplianceAggregation_UNKNOWN    ComplianceAggregation_Scope = 0
	ComplianceAggregation_STANDARD   ComplianceAggregation_Scope = 1
	ComplianceAggregation_CLUSTER    ComplianceAggregation_Scope = 2
	ComplianceAggregation_CATEGORY   ComplianceAggregation_Scope = 3
	ComplianceAggregation_CONTROL    ComplianceAggregation_Scope = 4
	ComplianceAggregation_NAMESPACE  ComplianceAggregation_Scope = 5
	ComplianceAggregation_NODE       ComplianceAggregation_Scope = 6
	ComplianceAggregation_DEPLOYMENT ComplianceAggregation_Scope = 7
	ComplianceAggregation_CHECK      ComplianceAggregation_Scope = 8
)

// Enum value maps for ComplianceAggregation_Scope.
var (
	ComplianceAggregation_Scope_name = map[int32]string{
		0: "UNKNOWN",
		1: "STANDARD",
		2: "CLUSTER",
		3: "CATEGORY",
		4: "CONTROL",
		5: "NAMESPACE",
		6: "NODE",
		7: "DEPLOYMENT",
		8: "CHECK",
	}
	ComplianceAggregation_Scope_value = map[string]int32{
		"UNKNOWN":    0,
		"STANDARD":   1,
		"CLUSTER":    2,
		"CATEGORY":   3,
		"CONTROL":    4,
		"NAMESPACE":  5,
		"NODE":       6,
		"DEPLOYMENT": 7,
		"CHECK":      8,
	}
)

func (x ComplianceAggregation_Scope) Enum() *ComplianceAggregation_Scope {
	p := new(ComplianceAggregation_Scope)
	*p = x
	return p
}

func (x ComplianceAggregation_Scope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComplianceAggregation_Scope) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_compliance_proto_enumTypes[1].Descriptor()
}

func (ComplianceAggregation_Scope) Type() protoreflect.EnumType {
	return &file_storage_compliance_proto_enumTypes[1]
}

func (x ComplianceAggregation_Scope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ComplianceResource struct {
	state               protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_Resource isComplianceResource_Resource `protobuf_oneof:"resource"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ComplianceResource) Reset() {
	*x = ComplianceResource{}
	mi := &file_storage_compliance_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceResource) ProtoMessage() {}

func (x *ComplianceResource) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceResource) GetCluster() *ComplianceResource_ClusterName {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*complianceResource_Cluster); ok {
			return x.Cluster
		}
	}
	return nil
}

func (x *ComplianceResource) GetDeployment() *ComplianceResource_DeploymentName {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*complianceResource_Deployment); ok {
			return x.Deployment
		}
	}
	return nil
}

func (x *ComplianceResource) GetNode() *ComplianceResource_NodeName {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*complianceResource_Node); ok {
			return x.Node
		}
	}
	return nil
}

func (x *ComplianceResource) GetImage() *ImageName {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*complianceResource_Image); ok {
			return x.Image
		}
	}
	return nil
}

func (x *ComplianceResource) SetCluster(v *ComplianceResource_ClusterName) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &complianceResource_Cluster{v}
}

func (x *ComplianceResource) SetDeployment(v *ComplianceResource_DeploymentName) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &complianceResource_Deployment{v}
}

func (x *ComplianceResource) SetNode(v *ComplianceResource_NodeName) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &complianceResource_Node{v}
}

func (x *ComplianceResource) SetImage(v *ImageName) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &complianceResource_Image{v}
}

func (x *ComplianceResource) HasResource() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Resource != nil
}

func (x *ComplianceResource) HasCluster() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*complianceResource_Cluster)
	return ok
}

func (x *ComplianceResource) HasDeployment() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*complianceResource_Deployment)
	return ok
}

func (x *ComplianceResource) HasNode() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*complianceResource_Node)
	return ok
}

func (x *ComplianceResource) HasImage() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*complianceResource_Image)
	return ok
}

func (x *ComplianceResource) ClearResource() {
	x.xxx_hidden_Resource = nil
}

func (x *ComplianceResource) ClearCluster() {
	if _, ok := x.xxx_hidden_Resource.(*complianceResource_Cluster); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *ComplianceResource) ClearDeployment() {
	if _, ok := x.xxx_hidden_Resource.(*complianceResource_Deployment); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *ComplianceResource) ClearNode() {
	if _, ok := x.xxx_hidden_Resource.(*complianceResource_Node); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *ComplianceResource) ClearImage() {
	if _, ok := x.xxx_hidden_Resource.(*complianceResource_Image); ok {
		x.xxx_hidden_Resource = nil
	}
}

const ComplianceResource_Resource_not_set_case case_ComplianceResource_Resource = 0
const ComplianceResource_Cluster_case case_ComplianceResource_Resource = 1
const ComplianceResource_Deployment_case case_ComplianceResource_Resource = 2
const ComplianceResource_Node_case case_ComplianceResource_Resource = 3
const ComplianceResource_Image_case case_ComplianceResource_Resource = 4

func (x *ComplianceResource) WhichResource() case_ComplianceResource_Resource {
	if x == nil {
		return ComplianceResource_Resource_not_set_case
	}
	switch x.xxx_hidden_Resource.(type) {
	case *complianceResource_Cluster:
		return ComplianceResource_Cluster_case
	case *complianceResource_Deployment:
		return ComplianceResource_Deployment_case
	case *complianceResource_Node:
		return ComplianceResource_Node_case
	case *complianceResource_Image:
		return ComplianceResource_Image_case
	default:
		return ComplianceResource_Resource_not_set_case
	}
}

type ComplianceResource_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Resource:
	Cluster    *ComplianceResource_ClusterName
	Deployment *ComplianceResource_DeploymentName
	Node       *ComplianceResource_NodeName
	Image      *ImageName
	// -- end of xxx_hidden_Resource
}

func (b0 ComplianceResource_builder) Build() *ComplianceResource {
	m0 := &ComplianceResource{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Cluster != nil {
		x.xxx_hidden_Resource = &complianceResource_Cluster{b.Cluster}
	}
	if b.Deployment != nil {
		x.xxx_hidden_Resource = &complianceResource_Deployment{b.Deployment}
	}
	if b.Node != nil {
		x.xxx_hidden_Resource = &complianceResource_Node{b.Node}
	}
	if b.Image != nil {
		x.xxx_hidden_Resource = &complianceResource_Image{b.Image}
	}
	return m0
}

type case_ComplianceResource_Resource protoreflect.FieldNumber

func (x case_ComplianceResource_Resource) String() string {
	md := file_storage_compliance_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isComplianceResource_Resource interface {
	isComplianceResource_Resource()
}

type complianceResource_Cluster struct {
	Cluster *ComplianceResource_ClusterName `protobuf:"bytes,1,opt,name=cluster,oneof"`
}

type complianceResource_Deployment struct {
	Deployment *ComplianceResource_DeploymentName `protobuf:"bytes,2,opt,name=deployment,oneof"`
}

type complianceResource_Node struct {
	Node *ComplianceResource_NodeName `protobuf:"bytes,3,opt,name=node,oneof"`
}

type complianceResource_Image struct {
	Image *ImageName `protobuf:"bytes,4,opt,name=image,oneof"`
}

func (*complianceResource_Cluster) isComplianceResource_Resource() {}

func (*complianceResource_Deployment) isComplianceResource_Resource() {}

func (*complianceResource_Node) isComplianceResource_Resource() {}

func (*complianceResource_Image) isComplianceResource_Resource() {}

type ComplianceResultValue struct {
	state                   protoimpl.MessageState             `protogen:"opaque.v1"`
	xxx_hidden_Evidence     *[]*ComplianceResultValue_Evidence `protobuf:"bytes,1,rep,name=evidence"`
	xxx_hidden_OverallState ComplianceState                    `protobuf:"varint,2,opt,name=overall_state,json=overallState,enum=storage.ComplianceState"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ComplianceResultValue) Reset() {
	*x = ComplianceResultValue{}
	mi := &file_storage_compliance_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceResultValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceResultValue) ProtoMessage() {}

func (x *ComplianceResultValue) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceResultValue) GetEvidence() []*ComplianceResultValue_Evidence {
	if x != nil {
		if x.xxx_hidden_Evidence != nil {
			return *x.xxx_hidden_Evidence
		}
	}
	return nil
}

func (x *ComplianceResultValue) GetOverallState() ComplianceState {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_OverallState
		}
	}
	return ComplianceState_COMPLIANCE_STATE_UNKNOWN
}

func (x *ComplianceResultValue) SetEvidence(v []*ComplianceResultValue_Evidence) {
	x.xxx_hidden_Evidence = &v
}

func (x *ComplianceResultValue) SetOverallState(v ComplianceState) {
	x.xxx_hidden_OverallState = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ComplianceResultValue) HasOverallState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceResultValue) ClearOverallState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OverallState = ComplianceState_COMPLIANCE_STATE_UNKNOWN
}

type ComplianceResultValue_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Evidence     []*ComplianceResultValue_Evidence
	OverallState *ComplianceState
}

func (b0 ComplianceResultValue_builder) Build() *ComplianceResultValue {
	m0 := &ComplianceResultValue{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Evidence = &b.Evidence
	if b.OverallState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_OverallState = *b.OverallState
	}
	return m0
}

type ComplianceControlResult struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Resource    *ComplianceResource    `protobuf:"bytes,1,opt,name=resource"`
	xxx_hidden_ControlId   *string                `protobuf:"bytes,2,opt,name=control_id,json=controlId"`
	xxx_hidden_Value       *ComplianceResultValue `protobuf:"bytes,3,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceControlResult) Reset() {
	*x = ComplianceControlResult{}
	mi := &file_storage_compliance_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceControlResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceControlResult) ProtoMessage() {}

func (x *ComplianceControlResult) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceControlResult) GetResource() *ComplianceResource {
	if x != nil {
		return x.xxx_hidden_Resource
	}
	return nil
}

func (x *ComplianceControlResult) GetControlId() string {
	if x != nil {
		if x.xxx_hidden_ControlId != nil {
			return *x.xxx_hidden_ControlId
		}
		return ""
	}
	return ""
}

func (x *ComplianceControlResult) GetValue() *ComplianceResultValue {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return nil
}

func (x *ComplianceControlResult) SetResource(v *ComplianceResource) {
	x.xxx_hidden_Resource = v
}

func (x *ComplianceControlResult) SetControlId(v string) {
	x.xxx_hidden_ControlId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ComplianceControlResult) SetValue(v *ComplianceResultValue) {
	x.xxx_hidden_Value = v
}

func (x *ComplianceControlResult) HasResource() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Resource != nil
}

func (x *ComplianceControlResult) HasControlId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceControlResult) HasValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Value != nil
}

func (x *ComplianceControlResult) ClearResource() {
	x.xxx_hidden_Resource = nil
}

func (x *ComplianceControlResult) ClearControlId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ControlId = nil
}

func (x *ComplianceControlResult) ClearValue() {
	x.xxx_hidden_Value = nil
}

type ComplianceControlResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Resource  *ComplianceResource
	ControlId *string
	Value     *ComplianceResultValue
}

func (b0 ComplianceControlResult_builder) Build() *ComplianceControlResult {
	m0 := &ComplianceControlResult{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Resource = b.Resource
	if b.ControlId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ControlId = b.ControlId
	}
	x.xxx_hidden_Value = b.Value
	return m0
}

// Next available tag: 5
type ComplianceDomain struct {
	state                  protoimpl.MessageState                  `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                                 `protobuf:"bytes,4,opt,name=id"`
	xxx_hidden_Cluster     *ComplianceDomain_Cluster               `protobuf:"bytes,1,opt,name=cluster"`
	xxx_hidden_Nodes       map[string]*ComplianceDomain_Node       `protobuf:"bytes,2,rep,name=nodes" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Deployments map[string]*ComplianceDomain_Deployment `protobuf:"bytes,3,rep,name=deployments" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceDomain) Reset() {
	*x = ComplianceDomain{}
	mi := &file_storage_compliance_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceDomain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceDomain) ProtoMessage() {}

func (x *ComplianceDomain) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceDomain) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceDomain) GetCluster() *ComplianceDomain_Cluster {
	if x != nil {
		return x.xxx_hidden_Cluster
	}
	return nil
}

func (x *ComplianceDomain) GetNodes() map[string]*ComplianceDomain_Node {
	if x != nil {
		return x.xxx_hidden_Nodes
	}
	return nil
}

func (x *ComplianceDomain) GetDeployments() map[string]*ComplianceDomain_Deployment {
	if x != nil {
		return x.xxx_hidden_Deployments
	}
	return nil
}

func (x *ComplianceDomain) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ComplianceDomain) SetCluster(v *ComplianceDomain_Cluster) {
	x.xxx_hidden_Cluster = v
}

func (x *ComplianceDomain) SetNodes(v map[string]*ComplianceDomain_Node) {
	x.xxx_hidden_Nodes = v
}

func (x *ComplianceDomain) SetDeployments(v map[string]*ComplianceDomain_Deployment) {
	x.xxx_hidden_Deployments = v
}

func (x *ComplianceDomain) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceDomain) HasCluster() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Cluster != nil
}

func (x *ComplianceDomain) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceDomain) ClearCluster() {
	x.xxx_hidden_Cluster = nil
}

type ComplianceDomain_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *string
	Cluster     *ComplianceDomain_Cluster
	Nodes       map[string]*ComplianceDomain_Node
	Deployments map[string]*ComplianceDomain_Deployment
}

func (b0 ComplianceDomain_builder) Build() *ComplianceDomain {
	m0 := &ComplianceDomain{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = b.Id
	}
	x.xxx_hidden_Cluster = b.Cluster
	x.xxx_hidden_Nodes = b.Nodes
	x.xxx_hidden_Deployments = b.Deployments
	return m0
}

// Next available tag: 5
type ComplianceRunMetadata struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RunId           *string                `protobuf:"bytes,1,opt,name=run_id,json=runId"`
	xxx_hidden_StandardId      *string                `protobuf:"bytes,2,opt,name=standard_id,json=standardId"`
	xxx_hidden_ClusterId       *string                `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_StartTimestamp  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_timestamp,json=startTimestamp"`
	xxx_hidden_FinishTimestamp *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=finish_timestamp,json=finishTimestamp"`
	xxx_hidden_Success         bool                   `protobuf:"varint,6,opt,name=success"`
	xxx_hidden_ErrorMessage    *string                `protobuf:"bytes,7,opt,name=error_message,json=errorMessage"`
	xxx_hidden_DomainId        *string                `protobuf:"bytes,8,opt,name=domain_id,json=domainId"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ComplianceRunMetadata) Reset() {
	*x = ComplianceRunMetadata{}
	mi := &file_storage_compliance_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceRunMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceRunMetadata) ProtoMessage() {}

func (x *ComplianceRunMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceRunMetadata) GetRunId() string {
	if x != nil {
		if x.xxx_hidden_RunId != nil {
			return *x.xxx_hidden_RunId
		}
		return ""
	}
	return ""
}

func (x *ComplianceRunMetadata) GetStandardId() string {
	if x != nil {
		if x.xxx_hidden_StandardId != nil {
			return *x.xxx_hidden_StandardId
		}
		return ""
	}
	return ""
}

func (x *ComplianceRunMetadata) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceRunMetadata) GetStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_StartTimestamp
	}
	return nil
}

func (x *ComplianceRunMetadata) GetFinishTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_FinishTimestamp
	}
	return nil
}

func (x *ComplianceRunMetadata) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *ComplianceRunMetadata) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *ComplianceRunMetadata) GetDomainId() string {
	if x != nil {
		if x.xxx_hidden_DomainId != nil {
			return *x.xxx_hidden_DomainId
		}
		return ""
	}
	return ""
}

func (x *ComplianceRunMetadata) SetRunId(v string) {
	x.xxx_hidden_RunId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *ComplianceRunMetadata) SetStandardId(v string) {
	x.xxx_hidden_StandardId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *ComplianceRunMetadata) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *ComplianceRunMetadata) SetStartTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_StartTimestamp = v
}

func (x *ComplianceRunMetadata) SetFinishTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_FinishTimestamp = v
}

func (x *ComplianceRunMetadata) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *ComplianceRunMetadata) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *ComplianceRunMetadata) SetDomainId(v string) {
	x.xxx_hidden_DomainId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *ComplianceRunMetadata) HasRunId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceRunMetadata) HasStandardId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceRunMetadata) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceRunMetadata) HasStartTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StartTimestamp != nil
}

func (x *ComplianceRunMetadata) HasFinishTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FinishTimestamp != nil
}

func (x *ComplianceRunMetadata) HasSuccess() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ComplianceRunMetadata) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ComplianceRunMetadata) HasDomainId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ComplianceRunMetadata) ClearRunId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RunId = nil
}

func (x *ComplianceRunMetadata) ClearStandardId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_StandardId = nil
}

func (x *ComplianceRunMetadata) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceRunMetadata) ClearStartTimestamp() {
	x.xxx_hidden_StartTimestamp = nil
}

func (x *ComplianceRunMetadata) ClearFinishTimestamp() {
	x.xxx_hidden_FinishTimestamp = nil
}

func (x *ComplianceRunMetadata) ClearSuccess() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Success = false
}

func (x *ComplianceRunMetadata) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ErrorMessage = nil
}

func (x *ComplianceRunMetadata) ClearDomainId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_DomainId = nil
}

type ComplianceRunMetadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RunId           *string
	StandardId      *string
	ClusterId       *string
	StartTimestamp  *timestamppb.Timestamp
	FinishTimestamp *timestamppb.Timestamp
	Success         *bool
	ErrorMessage    *string
	DomainId        *string
}

func (b0 ComplianceRunMetadata_builder) Build() *ComplianceRunMetadata {
	m0 := &ComplianceRunMetadata{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RunId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_RunId = b.RunId
	}
	if b.StandardId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_StandardId = b.StandardId
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	x.xxx_hidden_StartTimestamp = b.StartTimestamp
	x.xxx_hidden_FinishTimestamp = b.FinishTimestamp
	if b.Success != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_Success = *b.Success
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	if b.DomainId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_DomainId = b.DomainId
	}
	return m0
}

// Next available tag: 6
type ComplianceRunResults struct {
	state                           protoimpl.MessageState                         `protogen:"opaque.v1"`
	xxx_hidden_Domain               *ComplianceDomain                              `protobuf:"bytes,1,opt,name=domain"`
	xxx_hidden_RunMetadata          *ComplianceRunMetadata                         `protobuf:"bytes,2,opt,name=run_metadata,json=runMetadata"`
	xxx_hidden_ClusterResults       *ComplianceRunResults_EntityResults            `protobuf:"bytes,3,opt,name=cluster_results,json=clusterResults"`
	xxx_hidden_NodeResults          map[string]*ComplianceRunResults_EntityResults `protobuf:"bytes,4,rep,name=node_results,json=nodeResults" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_DeploymentResults    map[string]*ComplianceRunResults_EntityResults `protobuf:"bytes,5,rep,name=deployment_results,json=deploymentResults" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_MachineConfigResults map[string]*ComplianceRunResults_EntityResults `protobuf:"bytes,6,rep,name=machine_config_results,json=machineConfigResults" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *ComplianceRunResults) Reset() {
	*x = ComplianceRunResults{}
	mi := &file_storage_compliance_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceRunResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceRunResults) ProtoMessage() {}

func (x *ComplianceRunResults) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceRunResults) GetDomain() *ComplianceDomain {
	if x != nil {
		return x.xxx_hidden_Domain
	}
	return nil
}

func (x *ComplianceRunResults) GetRunMetadata() *ComplianceRunMetadata {
	if x != nil {
		return x.xxx_hidden_RunMetadata
	}
	return nil
}

func (x *ComplianceRunResults) GetClusterResults() *ComplianceRunResults_EntityResults {
	if x != nil {
		return x.xxx_hidden_ClusterResults
	}
	return nil
}

func (x *ComplianceRunResults) GetNodeResults() map[string]*ComplianceRunResults_EntityResults {
	if x != nil {
		return x.xxx_hidden_NodeResults
	}
	return nil
}

func (x *ComplianceRunResults) GetDeploymentResults() map[string]*ComplianceRunResults_EntityResults {
	if x != nil {
		return x.xxx_hidden_DeploymentResults
	}
	return nil
}

func (x *ComplianceRunResults) GetMachineConfigResults() map[string]*ComplianceRunResults_EntityResults {
	if x != nil {
		return x.xxx_hidden_MachineConfigResults
	}
	return nil
}

func (x *ComplianceRunResults) SetDomain(v *ComplianceDomain) {
	x.xxx_hidden_Domain = v
}

func (x *ComplianceRunResults) SetRunMetadata(v *ComplianceRunMetadata) {
	x.xxx_hidden_RunMetadata = v
}

func (x *ComplianceRunResults) SetClusterResults(v *ComplianceRunResults_EntityResults) {
	x.xxx_hidden_ClusterResults = v
}

func (x *ComplianceRunResults) SetNodeResults(v map[string]*ComplianceRunResults_EntityResults) {
	x.xxx_hidden_NodeResults = v
}

func (x *ComplianceRunResults) SetDeploymentResults(v map[string]*ComplianceRunResults_EntityResults) {
	x.xxx_hidden_DeploymentResults = v
}

func (x *ComplianceRunResults) SetMachineConfigResults(v map[string]*ComplianceRunResults_EntityResults) {
	x.xxx_hidden_MachineConfigResults = v
}

func (x *ComplianceRunResults) HasDomain() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Domain != nil
}

func (x *ComplianceRunResults) HasRunMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RunMetadata != nil
}

func (x *ComplianceRunResults) HasClusterResults() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ClusterResults != nil
}

func (x *ComplianceRunResults) ClearDomain() {
	x.xxx_hidden_Domain = nil
}

func (x *ComplianceRunResults) ClearRunMetadata() {
	x.xxx_hidden_RunMetadata = nil
}

func (x *ComplianceRunResults) ClearClusterResults() {
	x.xxx_hidden_ClusterResults = nil
}

type ComplianceRunResults_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Domain               *ComplianceDomain
	RunMetadata          *ComplianceRunMetadata
	ClusterResults       *ComplianceRunResults_EntityResults
	NodeResults          map[string]*ComplianceRunResults_EntityResults
	DeploymentResults    map[string]*ComplianceRunResults_EntityResults
	MachineConfigResults map[string]*ComplianceRunResults_EntityResults
}

func (b0 ComplianceRunResults_builder) Build() *ComplianceRunResults {
	m0 := &ComplianceRunResults{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Domain = b.Domain
	x.xxx_hidden_RunMetadata = b.RunMetadata
	x.xxx_hidden_ClusterResults = b.ClusterResults
	x.xxx_hidden_NodeResults = b.NodeResults
	x.xxx_hidden_DeploymentResults = b.DeploymentResults
	x.xxx_hidden_MachineConfigResults = b.MachineConfigResults
	return m0
}

// Next available tag: 2
type ComplianceStrings struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,2,opt,name=id"`
	xxx_hidden_Strings     []string               `protobuf:"bytes,1,rep,name=strings"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceStrings) Reset() {
	*x = ComplianceStrings{}
	mi := &file_storage_compliance_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceStrings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceStrings) ProtoMessage() {}

func (x *ComplianceStrings) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceStrings) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceStrings) GetStrings() []string {
	if x != nil {
		return x.xxx_hidden_Strings
	}
	return nil
}

func (x *ComplianceStrings) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ComplianceStrings) SetStrings(v []string) {
	x.xxx_hidden_Strings = v
}

func (x *ComplianceStrings) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceStrings) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

type ComplianceStrings_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *string
	Strings []string
}

func (b0 ComplianceStrings_builder) Build() *ComplianceStrings {
	m0 := &ComplianceStrings{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	x.xxx_hidden_Strings = b.Strings
	return m0
}

type ComplianceAggregation struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComplianceAggregation) Reset() {
	*x = ComplianceAggregation{}
	mi := &file_storage_compliance_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceAggregation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceAggregation) ProtoMessage() {}

func (x *ComplianceAggregation) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type ComplianceAggregation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 ComplianceAggregation_builder) Build() *ComplianceAggregation {
	m0 := &ComplianceAggregation{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type PreComputedComplianceAggregation struct {
	state                     protoimpl.MessageState           `protogen:"opaque.v1"`
	xxx_hidden_Results        *[]*ComplianceAggregation_Result `protobuf:"bytes,1,rep,name=results"`
	xxx_hidden_Sources        *[]*ComplianceAggregation_Source `protobuf:"bytes,2,rep,name=sources"`
	xxx_hidden_DomainPointers []string                         `protobuf:"bytes,3,rep,name=domain_pointers,json=domainPointers"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *PreComputedComplianceAggregation) Reset() {
	*x = PreComputedComplianceAggregation{}
	mi := &file_storage_compliance_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreComputedComplianceAggregation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreComputedComplianceAggregation) ProtoMessage() {}

func (x *PreComputedComplianceAggregation) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PreComputedComplianceAggregation) GetResults() []*ComplianceAggregation_Result {
	if x != nil {
		if x.xxx_hidden_Results != nil {
			return *x.xxx_hidden_Results
		}
	}
	return nil
}

func (x *PreComputedComplianceAggregation) GetSources() []*ComplianceAggregation_Source {
	if x != nil {
		if x.xxx_hidden_Sources != nil {
			return *x.xxx_hidden_Sources
		}
	}
	return nil
}

func (x *PreComputedComplianceAggregation) GetDomainPointers() []string {
	if x != nil {
		return x.xxx_hidden_DomainPointers
	}
	return nil
}

func (x *PreComputedComplianceAggregation) SetResults(v []*ComplianceAggregation_Result) {
	x.xxx_hidden_Results = &v
}

func (x *PreComputedComplianceAggregation) SetSources(v []*ComplianceAggregation_Source) {
	x.xxx_hidden_Sources = &v
}

func (x *PreComputedComplianceAggregation) SetDomainPointers(v []string) {
	x.xxx_hidden_DomainPointers = v
}

type PreComputedComplianceAggregation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Results        []*ComplianceAggregation_Result
	Sources        []*ComplianceAggregation_Source
	DomainPointers []string
}

func (b0 PreComputedComplianceAggregation_builder) Build() *PreComputedComplianceAggregation {
	m0 := &PreComputedComplianceAggregation{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Results = &b.Results
	x.xxx_hidden_Sources = &b.Sources
	x.xxx_hidden_DomainPointers = b.DomainPointers
	return m0
}

type ComplianceResource_ClusterName struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceResource_ClusterName) Reset() {
	*x = ComplianceResource_ClusterName{}
	mi := &file_storage_compliance_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceResource_ClusterName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceResource_ClusterName) ProtoMessage() {}

func (x *ComplianceResource_ClusterName) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceResource_ClusterName) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceResource_ClusterName) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceResource_ClusterName) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ComplianceResource_ClusterName) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ComplianceResource_ClusterName) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceResource_ClusterName) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceResource_ClusterName) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceResource_ClusterName) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type ComplianceResource_ClusterName_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id   *string
	Name *string
}

func (b0 ComplianceResource_ClusterName_builder) Build() *ComplianceResource_ClusterName {
	m0 := &ComplianceResource_ClusterName{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type ComplianceResource_DeploymentName struct {
	state                  protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_Cluster     *ComplianceResource_ClusterName `protobuf:"bytes,1,opt,name=cluster"`
	xxx_hidden_Id          *string                         `protobuf:"bytes,2,opt,name=id"`
	xxx_hidden_Name        *string                         `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Namespace   *string                         `protobuf:"bytes,4,opt,name=namespace"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceResource_DeploymentName) Reset() {
	*x = ComplianceResource_DeploymentName{}
	mi := &file_storage_compliance_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceResource_DeploymentName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceResource_DeploymentName) ProtoMessage() {}

func (x *ComplianceResource_DeploymentName) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceResource_DeploymentName) GetCluster() *ComplianceResource_ClusterName {
	if x != nil {
		return x.xxx_hidden_Cluster
	}
	return nil
}

func (x *ComplianceResource_DeploymentName) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceResource_DeploymentName) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceResource_DeploymentName) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ComplianceResource_DeploymentName) SetCluster(v *ComplianceResource_ClusterName) {
	x.xxx_hidden_Cluster = v
}

func (x *ComplianceResource_DeploymentName) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ComplianceResource_DeploymentName) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ComplianceResource_DeploymentName) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ComplianceResource_DeploymentName) HasCluster() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Cluster != nil
}

func (x *ComplianceResource_DeploymentName) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceResource_DeploymentName) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceResource_DeploymentName) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceResource_DeploymentName) ClearCluster() {
	x.xxx_hidden_Cluster = nil
}

func (x *ComplianceResource_DeploymentName) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceResource_DeploymentName) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceResource_DeploymentName) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

type ComplianceResource_DeploymentName_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Cluster   *ComplianceResource_ClusterName
	Id        *string
	Name      *string
	Namespace *string
}

func (b0 ComplianceResource_DeploymentName_builder) Build() *ComplianceResource_DeploymentName {
	m0 := &ComplianceResource_DeploymentName{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Cluster = b.Cluster
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ComplianceResource_NodeName struct {
	state                  protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_Cluster     *ComplianceResource_ClusterName `protobuf:"bytes,1,opt,name=cluster"`
	xxx_hidden_Id          *string                         `protobuf:"bytes,2,opt,name=id"`
	xxx_hidden_Name        *string                         `protobuf:"bytes,3,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceResource_NodeName) Reset() {
	*x = ComplianceResource_NodeName{}
	mi := &file_storage_compliance_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceResource_NodeName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceResource_NodeName) ProtoMessage() {}

func (x *ComplianceResource_NodeName) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceResource_NodeName) GetCluster() *ComplianceResource_ClusterName {
	if x != nil {
		return x.xxx_hidden_Cluster
	}
	return nil
}

func (x *ComplianceResource_NodeName) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceResource_NodeName) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceResource_NodeName) SetCluster(v *ComplianceResource_ClusterName) {
	x.xxx_hidden_Cluster = v
}

func (x *ComplianceResource_NodeName) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ComplianceResource_NodeName) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ComplianceResource_NodeName) HasCluster() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Cluster != nil
}

func (x *ComplianceResource_NodeName) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceResource_NodeName) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceResource_NodeName) ClearCluster() {
	x.xxx_hidden_Cluster = nil
}

func (x *ComplianceResource_NodeName) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceResource_NodeName) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

type ComplianceResource_NodeName_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Cluster *ComplianceResource_ClusterName
	Id      *string
	Name    *string
}

func (b0 ComplianceResource_NodeName_builder) Build() *ComplianceResource_NodeName {
	m0 := &ComplianceResource_NodeName{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Cluster = b.Cluster
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type ComplianceResultValue_Evidence struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_State       ComplianceState        `protobuf:"varint,1,opt,name=state,enum=storage.ComplianceState"`
	xxx_hidden_Message     *string                `protobuf:"bytes,2,opt,name=message"`
	xxx_hidden_MessageId   int32                  `protobuf:"varint,3,opt,name=message_id,json=messageId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceResultValue_Evidence) Reset() {
	*x = ComplianceResultValue_Evidence{}
	mi := &file_storage_compliance_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceResultValue_Evidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceResultValue_Evidence) ProtoMessage() {}

func (x *ComplianceResultValue_Evidence) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceResultValue_Evidence) GetState() ComplianceState {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_State
		}
	}
	return ComplianceState_COMPLIANCE_STATE_UNKNOWN
}

func (x *ComplianceResultValue_Evidence) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *ComplianceResultValue_Evidence) GetMessageId() int32 {
	if x != nil {
		return x.xxx_hidden_MessageId
	}
	return 0
}

func (x *ComplianceResultValue_Evidence) SetState(v ComplianceState) {
	x.xxx_hidden_State = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ComplianceResultValue_Evidence) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ComplianceResultValue_Evidence) SetMessageId(v int32) {
	x.xxx_hidden_MessageId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ComplianceResultValue_Evidence) HasState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceResultValue_Evidence) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceResultValue_Evidence) HasMessageId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceResultValue_Evidence) ClearState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_State = ComplianceState_COMPLIANCE_STATE_UNKNOWN
}

func (x *ComplianceResultValue_Evidence) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Message = nil
}

func (x *ComplianceResultValue_Evidence) ClearMessageId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MessageId = 0
}

type ComplianceResultValue_Evidence_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	State     *ComplianceState
	Message   *string
	MessageId *int32
}

func (b0 ComplianceResultValue_Evidence_builder) Build() *ComplianceResultValue_Evidence {
	m0 := &ComplianceResultValue_Evidence{}
	b, x := &b0, m0
	_, _ = b, x
	if b.State != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_State = *b.State
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Message = b.Message
	}
	if b.MessageId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_MessageId = *b.MessageId
	}
	return m0
}

// These must mirror the tags _exactly_ in cluster.proto for backwards compatibility
type ComplianceDomain_Cluster struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceDomain_Cluster) Reset() {
	*x = ComplianceDomain_Cluster{}
	mi := &file_storage_compliance_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceDomain_Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceDomain_Cluster) ProtoMessage() {}

func (x *ComplianceDomain_Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceDomain_Cluster) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceDomain_Cluster) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceDomain_Cluster) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ComplianceDomain_Cluster) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ComplianceDomain_Cluster) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceDomain_Cluster) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceDomain_Cluster) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceDomain_Cluster) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type ComplianceDomain_Cluster_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id   *string
	Name *string
}

func (b0 ComplianceDomain_Cluster_builder) Build() *ComplianceDomain_Cluster {
	m0 := &ComplianceDomain_Cluster{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

// These must mirror the tags _exactly_ in node.proto for backwards compatibility
type ComplianceDomain_Node struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_ClusterId   *string                `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_ClusterName *string                `protobuf:"bytes,5,opt,name=cluster_name,json=clusterName"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceDomain_Node) Reset() {
	*x = ComplianceDomain_Node{}
	mi := &file_storage_compliance_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceDomain_Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceDomain_Node) ProtoMessage() {}

func (x *ComplianceDomain_Node) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceDomain_Node) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceDomain_Node) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceDomain_Node) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceDomain_Node) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *ComplianceDomain_Node) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ComplianceDomain_Node) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ComplianceDomain_Node) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ComplianceDomain_Node) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *ComplianceDomain_Node) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceDomain_Node) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceDomain_Node) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceDomain_Node) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceDomain_Node) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceDomain_Node) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceDomain_Node) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceDomain_Node) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ClusterName = nil
}

type ComplianceDomain_Node_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *string
	Name        *string
	ClusterId   *string
	ClusterName *string
}

func (b0 ComplianceDomain_Node_builder) Build() *ComplianceDomain_Node {
	m0 := &ComplianceDomain_Node{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	return m0
}

// This must mirror the tags _exactly_ in deployment.proto for backwards compatibility
type ComplianceDomain_Deployment struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Type        *string                `protobuf:"bytes,4,opt,name=type"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,5,opt,name=namespace"`
	xxx_hidden_NamespaceId *string                `protobuf:"bytes,23,opt,name=namespace_id,json=namespaceId"`
	xxx_hidden_ClusterId   *string                `protobuf:"bytes,9,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_ClusterName *string                `protobuf:"bytes,10,opt,name=cluster_name,json=clusterName"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceDomain_Deployment) Reset() {
	*x = ComplianceDomain_Deployment{}
	mi := &file_storage_compliance_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceDomain_Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceDomain_Deployment) ProtoMessage() {}

func (x *ComplianceDomain_Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceDomain_Deployment) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceDomain_Deployment) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceDomain_Deployment) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *ComplianceDomain_Deployment) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ComplianceDomain_Deployment) GetNamespaceId() string {
	if x != nil {
		if x.xxx_hidden_NamespaceId != nil {
			return *x.xxx_hidden_NamespaceId
		}
		return ""
	}
	return ""
}

func (x *ComplianceDomain_Deployment) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceDomain_Deployment) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *ComplianceDomain_Deployment) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *ComplianceDomain_Deployment) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *ComplianceDomain_Deployment) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *ComplianceDomain_Deployment) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *ComplianceDomain_Deployment) SetNamespaceId(v string) {
	x.xxx_hidden_NamespaceId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *ComplianceDomain_Deployment) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *ComplianceDomain_Deployment) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *ComplianceDomain_Deployment) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceDomain_Deployment) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceDomain_Deployment) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceDomain_Deployment) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceDomain_Deployment) HasNamespaceId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ComplianceDomain_Deployment) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ComplianceDomain_Deployment) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ComplianceDomain_Deployment) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceDomain_Deployment) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceDomain_Deployment) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Type = nil
}

func (x *ComplianceDomain_Deployment) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

func (x *ComplianceDomain_Deployment) ClearNamespaceId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_NamespaceId = nil
}

func (x *ComplianceDomain_Deployment) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceDomain_Deployment) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ClusterName = nil
}

type ComplianceDomain_Deployment_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *string
	Name        *string
	Type        *string
	Namespace   *string
	NamespaceId *string
	ClusterId   *string
	ClusterName *string
}

func (b0 ComplianceDomain_Deployment_builder) Build() *ComplianceDomain_Deployment {
	m0 := &ComplianceDomain_Deployment{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Type = b.Type
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.NamespaceId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_NamespaceId = b.NamespaceId
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	return m0
}

type ComplianceRunResults_EntityResults struct {
	state                     protoimpl.MessageState            `protogen:"opaque.v1"`
	xxx_hidden_ControlResults map[string]*ComplianceResultValue `protobuf:"bytes,1,rep,name=control_results,json=controlResults" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ComplianceRunResults_EntityResults) Reset() {
	*x = ComplianceRunResults_EntityResults{}
	mi := &file_storage_compliance_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceRunResults_EntityResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceRunResults_EntityResults) ProtoMessage() {}

func (x *ComplianceRunResults_EntityResults) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceRunResults_EntityResults) GetControlResults() map[string]*ComplianceResultValue {
	if x != nil {
		return x.xxx_hidden_ControlResults
	}
	return nil
}

func (x *ComplianceRunResults_EntityResults) SetControlResults(v map[string]*ComplianceResultValue) {
	x.xxx_hidden_ControlResults = v
}

type ComplianceRunResults_EntityResults_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ControlResults map[string]*ComplianceResultValue
}

func (b0 ComplianceRunResults_EntityResults_builder) Build() *ComplianceRunResults_EntityResults {
	m0 := &ComplianceRunResults_EntityResults{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ControlResults = b.ControlResults
	return m0
}

// Next available tag: 3
type ComplianceAggregation_AggregationKey struct {
	state                  protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_Scope       ComplianceAggregation_Scope `protobuf:"varint,1,opt,name=scope,enum=storage.ComplianceAggregation_Scope"`
	xxx_hidden_Id          *string                     `protobuf:"bytes,2,opt,name=id"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceAggregation_AggregationKey) Reset() {
	*x = ComplianceAggregation_AggregationKey{}
	mi := &file_storage_compliance_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceAggregation_AggregationKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceAggregation_AggregationKey) ProtoMessage() {}

func (x *ComplianceAggregation_AggregationKey) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceAggregation_AggregationKey) GetScope() ComplianceAggregation_Scope {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Scope
		}
	}
	return ComplianceAggregation_UNKNOWN
}

func (x *ComplianceAggregation_AggregationKey) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceAggregation_AggregationKey) SetScope(v ComplianceAggregation_Scope) {
	x.xxx_hidden_Scope = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ComplianceAggregation_AggregationKey) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ComplianceAggregation_AggregationKey) HasScope() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceAggregation_AggregationKey) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceAggregation_AggregationKey) ClearScope() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Scope = ComplianceAggregation_UNKNOWN
}

func (x *ComplianceAggregation_AggregationKey) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Id = nil
}

type ComplianceAggregation_AggregationKey_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Scope *ComplianceAggregation_Scope
	Id    *string
}

func (b0 ComplianceAggregation_AggregationKey_builder) Build() *ComplianceAggregation_AggregationKey {
	m0 := &ComplianceAggregation_AggregationKey{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Scope != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Scope = *b.Scope
	}
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Id = b.Id
	}
	return m0
}

// Next available tag: 5
type ComplianceAggregation_Result struct {
	state                      protoimpl.MessageState                   `protogen:"opaque.v1"`
	xxx_hidden_AggregationKeys *[]*ComplianceAggregation_AggregationKey `protobuf:"bytes,1,rep,name=aggregation_keys,json=aggregationKeys"`
	xxx_hidden_Unit            ComplianceAggregation_Scope              `protobuf:"varint,2,opt,name=unit,enum=storage.ComplianceAggregation_Scope"`
	xxx_hidden_NumPassing      int32                                    `protobuf:"varint,3,opt,name=num_passing,json=numPassing"`
	xxx_hidden_NumFailing      int32                                    `protobuf:"varint,4,opt,name=num_failing,json=numFailing"`
	xxx_hidden_NumSkipped      int32                                    `protobuf:"varint,5,opt,name=num_skipped,json=numSkipped"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ComplianceAggregation_Result) Reset() {
	*x = ComplianceAggregation_Result{}
	mi := &file_storage_compliance_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceAggregation_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceAggregation_Result) ProtoMessage() {}

func (x *ComplianceAggregation_Result) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceAggregation_Result) GetAggregationKeys() []*ComplianceAggregation_AggregationKey {
	if x != nil {
		if x.xxx_hidden_AggregationKeys != nil {
			return *x.xxx_hidden_AggregationKeys
		}
	}
	return nil
}

func (x *ComplianceAggregation_Result) GetUnit() ComplianceAggregation_Scope {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Unit
		}
	}
	return ComplianceAggregation_UNKNOWN
}

func (x *ComplianceAggregation_Result) GetNumPassing() int32 {
	if x != nil {
		return x.xxx_hidden_NumPassing
	}
	return 0
}

func (x *ComplianceAggregation_Result) GetNumFailing() int32 {
	if x != nil {
		return x.xxx_hidden_NumFailing
	}
	return 0
}

func (x *ComplianceAggregation_Result) GetNumSkipped() int32 {
	if x != nil {
		return x.xxx_hidden_NumSkipped
	}
	return 0
}

func (x *ComplianceAggregation_Result) SetAggregationKeys(v []*ComplianceAggregation_AggregationKey) {
	x.xxx_hidden_AggregationKeys = &v
}

func (x *ComplianceAggregation_Result) SetUnit(v ComplianceAggregation_Scope) {
	x.xxx_hidden_Unit = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ComplianceAggregation_Result) SetNumPassing(v int32) {
	x.xxx_hidden_NumPassing = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *ComplianceAggregation_Result) SetNumFailing(v int32) {
	x.xxx_hidden_NumFailing = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ComplianceAggregation_Result) SetNumSkipped(v int32) {
	x.xxx_hidden_NumSkipped = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *ComplianceAggregation_Result) HasUnit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceAggregation_Result) HasNumPassing() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceAggregation_Result) HasNumFailing() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceAggregation_Result) HasNumSkipped() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ComplianceAggregation_Result) ClearUnit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Unit = ComplianceAggregation_UNKNOWN
}

func (x *ComplianceAggregation_Result) ClearNumPassing() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_NumPassing = 0
}

func (x *ComplianceAggregation_Result) ClearNumFailing() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_NumFailing = 0
}

func (x *ComplianceAggregation_Result) ClearNumSkipped() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_NumSkipped = 0
}

type ComplianceAggregation_Result_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AggregationKeys []*ComplianceAggregation_AggregationKey
	Unit            *ComplianceAggregation_Scope
	NumPassing      *int32
	NumFailing      *int32
	NumSkipped      *int32
}

func (b0 ComplianceAggregation_Result_builder) Build() *ComplianceAggregation_Result {
	m0 := &ComplianceAggregation_Result{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_AggregationKeys = &b.AggregationKeys
	if b.Unit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Unit = *b.Unit
	}
	if b.NumPassing != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_NumPassing = *b.NumPassing
	}
	if b.NumFailing != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_NumFailing = *b.NumFailing
	}
	if b.NumSkipped != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_NumSkipped = *b.NumSkipped
	}
	return m0
}

// Next available tag: 5
type ComplianceAggregation_Source struct {
	state                    protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_ClusterId     *string                   `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_StandardId    *string                   `protobuf:"bytes,2,opt,name=standard_id,json=standardId"`
	xxx_hidden_SuccessfulRun *ComplianceRunMetadata    `protobuf:"bytes,3,opt,name=successful_run,json=successfulRun"`
	xxx_hidden_FailedRuns    *[]*ComplianceRunMetadata `protobuf:"bytes,4,rep,name=failed_runs,json=failedRuns"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ComplianceAggregation_Source) Reset() {
	*x = ComplianceAggregation_Source{}
	mi := &file_storage_compliance_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceAggregation_Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceAggregation_Source) ProtoMessage() {}

func (x *ComplianceAggregation_Source) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceAggregation_Source) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceAggregation_Source) GetStandardId() string {
	if x != nil {
		if x.xxx_hidden_StandardId != nil {
			return *x.xxx_hidden_StandardId
		}
		return ""
	}
	return ""
}

func (x *ComplianceAggregation_Source) GetSuccessfulRun() *ComplianceRunMetadata {
	if x != nil {
		return x.xxx_hidden_SuccessfulRun
	}
	return nil
}

func (x *ComplianceAggregation_Source) GetFailedRuns() []*ComplianceRunMetadata {
	if x != nil {
		if x.xxx_hidden_FailedRuns != nil {
			return *x.xxx_hidden_FailedRuns
		}
	}
	return nil
}

func (x *ComplianceAggregation_Source) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ComplianceAggregation_Source) SetStandardId(v string) {
	x.xxx_hidden_StandardId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ComplianceAggregation_Source) SetSuccessfulRun(v *ComplianceRunMetadata) {
	x.xxx_hidden_SuccessfulRun = v
}

func (x *ComplianceAggregation_Source) SetFailedRuns(v []*ComplianceRunMetadata) {
	x.xxx_hidden_FailedRuns = &v
}

func (x *ComplianceAggregation_Source) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceAggregation_Source) HasStandardId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceAggregation_Source) HasSuccessfulRun() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SuccessfulRun != nil
}

func (x *ComplianceAggregation_Source) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceAggregation_Source) ClearStandardId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_StandardId = nil
}

func (x *ComplianceAggregation_Source) ClearSuccessfulRun() {
	x.xxx_hidden_SuccessfulRun = nil
}

type ComplianceAggregation_Source_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ClusterId     *string
	StandardId    *string
	SuccessfulRun *ComplianceRunMetadata
	FailedRuns    []*ComplianceRunMetadata
}

func (b0 ComplianceAggregation_Source_builder) Build() *ComplianceAggregation_Source {
	m0 := &ComplianceAggregation_Source{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.StandardId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_StandardId = b.StandardId
	}
	x.xxx_hidden_SuccessfulRun = b.SuccessfulRun
	x.xxx_hidden_FailedRuns = &b.FailedRuns
	return m0
}

// Next available tag: 3
type ComplianceAggregation_Response struct {
	state                   protoimpl.MessageState           `protogen:"opaque.v1"`
	xxx_hidden_Results      *[]*ComplianceAggregation_Result `protobuf:"bytes,1,rep,name=results"`
	xxx_hidden_Sources      *[]*ComplianceAggregation_Source `protobuf:"bytes,2,rep,name=sources"`
	xxx_hidden_ErrorMessage *string                          `protobuf:"bytes,3,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ComplianceAggregation_Response) Reset() {
	*x = ComplianceAggregation_Response{}
	mi := &file_storage_compliance_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceAggregation_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceAggregation_Response) ProtoMessage() {}

func (x *ComplianceAggregation_Response) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceAggregation_Response) GetResults() []*ComplianceAggregation_Result {
	if x != nil {
		if x.xxx_hidden_Results != nil {
			return *x.xxx_hidden_Results
		}
	}
	return nil
}

func (x *ComplianceAggregation_Response) GetSources() []*ComplianceAggregation_Source {
	if x != nil {
		if x.xxx_hidden_Sources != nil {
			return *x.xxx_hidden_Sources
		}
	}
	return nil
}

func (x *ComplianceAggregation_Response) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *ComplianceAggregation_Response) SetResults(v []*ComplianceAggregation_Result) {
	x.xxx_hidden_Results = &v
}

func (x *ComplianceAggregation_Response) SetSources(v []*ComplianceAggregation_Source) {
	x.xxx_hidden_Sources = &v
}

func (x *ComplianceAggregation_Response) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ComplianceAggregation_Response) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceAggregation_Response) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ErrorMessage = nil
}

type ComplianceAggregation_Response_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Results      []*ComplianceAggregation_Result
	Sources      []*ComplianceAggregation_Source
	ErrorMessage *string
}

func (b0 ComplianceAggregation_Response_builder) Build() *ComplianceAggregation_Response {
	m0 := &ComplianceAggregation_Response{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Results = &b.Results
	x.xxx_hidden_Sources = &b.Sources
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	return m0
}

var File_storage_compliance_proto protoreflect.FileDescriptor

const file_storage_compliance_proto_rawDesc = "" +
	"\n" +
	"\x18storage/compliance.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x13storage/image.proto\x1a!google/protobuf/go_features.proto\"\xd9\x04\n" +
	"\x12ComplianceResource\x12C\n" +
	"\acluster\x18\x01 \x01(\v2'.storage.ComplianceResource.ClusterNameH\x00R\acluster\x12L\n" +
	"\n" +
	"deployment\x18\x02 \x01(\v2*.storage.ComplianceResource.DeploymentNameH\x00R\n" +
	"deployment\x12:\n" +
	"\x04node\x18\x03 \x01(\v2$.storage.ComplianceResource.NodeNameH\x00R\x04node\x12*\n" +
	"\x05image\x18\x04 \x01(\v2\x12.storage.ImageNameH\x00R\x05image\x1a1\n" +
	"\vClusterName\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x1a\x95\x01\n" +
	"\x0eDeploymentName\x12A\n" +
	"\acluster\x18\x01 \x01(\v2'.storage.ComplianceResource.ClusterNameR\acluster\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x1aq\n" +
	"\bNodeName\x12A\n" +
	"\acluster\x18\x01 \x01(\v2'.storage.ComplianceResource.ClusterNameR\acluster\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04nameB\n" +
	"\n" +
	"\bresource\"\x90\x02\n" +
	"\x15ComplianceResultValue\x12C\n" +
	"\bevidence\x18\x01 \x03(\v2'.storage.ComplianceResultValue.EvidenceR\bevidence\x12=\n" +
	"\roverall_state\x18\x02 \x01(\x0e2\x18.storage.ComplianceStateR\foverallState\x1as\n" +
	"\bEvidence\x12.\n" +
	"\x05state\x18\x01 \x01(\x0e2\x18.storage.ComplianceStateR\x05state\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x03 \x01(\x05R\tmessageId\"\xa7\x01\n" +
	"\x17ComplianceControlResult\x127\n" +
	"\bresource\x18\x01 \x01(\v2\x1b.storage.ComplianceResourceR\bresource\x12\x1d\n" +
	"\n" +
	"control_id\x18\x02 \x01(\tR\tcontrolId\x124\n" +
	"\x05value\x18\x03 \x01(\v2\x1e.storage.ComplianceResultValueR\x05value\"\x90\x06\n" +
	"\x10ComplianceDomain\x12\x0e\n" +
	"\x02id\x18\x04 \x01(\tR\x02id\x12;\n" +
	"\acluster\x18\x01 \x01(\v2!.storage.ComplianceDomain.ClusterR\acluster\x12:\n" +
	"\x05nodes\x18\x02 \x03(\v2$.storage.ComplianceDomain.NodesEntryR\x05nodes\x12L\n" +
	"\vdeployments\x18\x03 \x03(\v2*.storage.ComplianceDomain.DeploymentsEntryR\vdeployments\x1a-\n" +
	"\aCluster\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x1al\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x04 \x01(\tR\tclusterId\x12!\n" +
	"\fcluster_name\x18\x05 \x01(\tR\vclusterName\x1aX\n" +
	"\n" +
	"NodesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.storage.ComplianceDomain.NodeR\x05value:\x028\x01\x1a\xc7\x01\n" +
	"\n" +
	"Deployment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12\x1c\n" +
	"\tnamespace\x18\x05 \x01(\tR\tnamespace\x12!\n" +
	"\fnamespace_id\x18\x17 \x01(\tR\vnamespaceId\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\t \x01(\tR\tclusterId\x12!\n" +
	"\fcluster_name\x18\n" +
	" \x01(\tR\vclusterName\x1ad\n" +
	"\x10DeploymentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12:\n" +
	"\x05value\x18\x02 \x01(\v2$.storage.ComplianceDomain.DeploymentR\x05value:\x028\x01\"\xd6\x02\n" +
	"\x15ComplianceRunMetadata\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\x12\x1f\n" +
	"\vstandard_id\x18\x02 \x01(\tR\n" +
	"standardId\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\x12C\n" +
	"\x0fstart_timestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x0estartTimestamp\x12E\n" +
	"\x10finish_timestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x0ffinishTimestamp\x12\x18\n" +
	"\asuccess\x18\x06 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\a \x01(\tR\ferrorMessage\x12\x1b\n" +
	"\tdomain_id\x18\b \x01(\tR\bdomainId\"\xbe\b\n" +
	"\x14ComplianceRunResults\x121\n" +
	"\x06domain\x18\x01 \x01(\v2\x19.storage.ComplianceDomainR\x06domain\x12A\n" +
	"\frun_metadata\x18\x02 \x01(\v2\x1e.storage.ComplianceRunMetadataR\vrunMetadata\x12T\n" +
	"\x0fcluster_results\x18\x03 \x01(\v2+.storage.ComplianceRunResults.EntityResultsR\x0eclusterResults\x12Q\n" +
	"\fnode_results\x18\x04 \x03(\v2..storage.ComplianceRunResults.NodeResultsEntryR\vnodeResults\x12c\n" +
	"\x12deployment_results\x18\x05 \x03(\v24.storage.ComplianceRunResults.DeploymentResultsEntryR\x11deploymentResults\x12m\n" +
	"\x16machine_config_results\x18\x06 \x03(\v27.storage.ComplianceRunResults.MachineConfigResultsEntryR\x14machineConfigResults\x1a\xdc\x01\n" +
	"\rEntityResults\x12h\n" +
	"\x0fcontrol_results\x18\x01 \x03(\v2?.storage.ComplianceRunResults.EntityResults.ControlResultsEntryR\x0econtrolResults\x1aa\n" +
	"\x13ControlResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.storage.ComplianceResultValueR\x05value:\x028\x01\x1ak\n" +
	"\x10NodeResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12A\n" +
	"\x05value\x18\x02 \x01(\v2+.storage.ComplianceRunResults.EntityResultsR\x05value:\x028\x01\x1aq\n" +
	"\x16DeploymentResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12A\n" +
	"\x05value\x18\x02 \x01(\v2+.storage.ComplianceRunResults.EntityResultsR\x05value:\x028\x01\x1at\n" +
	"\x19MachineConfigResultsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12A\n" +
	"\x05value\x18\x02 \x01(\v2+.storage.ComplianceRunResults.EntityResultsR\x05value:\x028\x01\"=\n" +
	"\x11ComplianceStrings\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x18\n" +
	"\astrings\x18\x01 \x03(\tR\astrings\"\xfe\x06\n" +
	"\x15ComplianceAggregation\x1a\\\n" +
	"\x0eAggregationKey\x12:\n" +
	"\x05scope\x18\x01 \x01(\x0e2$.storage.ComplianceAggregation.ScopeR\x05scope\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x1a\xff\x01\n" +
	"\x06Result\x12X\n" +
	"\x10aggregation_keys\x18\x01 \x03(\v2-.storage.ComplianceAggregation.AggregationKeyR\x0faggregationKeys\x128\n" +
	"\x04unit\x18\x02 \x01(\x0e2$.storage.ComplianceAggregation.ScopeR\x04unit\x12\x1f\n" +
	"\vnum_passing\x18\x03 \x01(\x05R\n" +
	"numPassing\x12\x1f\n" +
	"\vnum_failing\x18\x04 \x01(\x05R\n" +
	"numFailing\x12\x1f\n" +
	"\vnum_skipped\x18\x05 \x01(\x05R\n" +
	"numSkipped\x1a\xd0\x01\n" +
	"\x06Source\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1f\n" +
	"\vstandard_id\x18\x02 \x01(\tR\n" +
	"standardId\x12E\n" +
	"\x0esuccessful_run\x18\x03 \x01(\v2\x1e.storage.ComplianceRunMetadataR\rsuccessfulRun\x12?\n" +
	"\vfailed_runs\x18\x04 \x03(\v2\x1e.storage.ComplianceRunMetadataR\n" +
	"failedRuns\x1a\xb1\x01\n" +
	"\bResponse\x12?\n" +
	"\aresults\x18\x01 \x03(\v2%.storage.ComplianceAggregation.ResultR\aresults\x12?\n" +
	"\asources\x18\x02 \x03(\v2%.storage.ComplianceAggregation.SourceR\asources\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"~\n" +
	"\x05Scope\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\f\n" +
	"\bSTANDARD\x10\x01\x12\v\n" +
	"\aCLUSTER\x10\x02\x12\f\n" +
	"\bCATEGORY\x10\x03\x12\v\n" +
	"\aCONTROL\x10\x04\x12\r\n" +
	"\tNAMESPACE\x10\x05\x12\b\n" +
	"\x04NODE\x10\x06\x12\x0e\n" +
	"\n" +
	"DEPLOYMENT\x10\a\x12\t\n" +
	"\x05CHECK\x10\b\"\xcd\x01\n" +
	" PreComputedComplianceAggregation\x12?\n" +
	"\aresults\x18\x01 \x03(\v2%.storage.ComplianceAggregation.ResultR\aresults\x12?\n" +
	"\asources\x18\x02 \x03(\v2%.storage.ComplianceAggregation.SourceR\asources\x12'\n" +
	"\x0fdomain_pointers\x18\x03 \x03(\tR\x0edomainPointers*\xbd\x01\n" +
	"\x0fComplianceState\x12\x1c\n" +
	"\x18COMPLIANCE_STATE_UNKNOWN\x10\x00\x12\x19\n" +
	"\x15COMPLIANCE_STATE_SKIP\x10\x01\x12\x19\n" +
	"\x15COMPLIANCE_STATE_NOTE\x10\x02\x12\x1c\n" +
	"\x18COMPLIANCE_STATE_SUCCESS\x10\x03\x12\x1c\n" +
	"\x18COMPLIANCE_STATE_FAILURE\x10\x04\x12\x1a\n" +
	"\x16COMPLIANCE_STATE_ERROR\x10\x05B6\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storage\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_storage_compliance_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_storage_compliance_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_storage_compliance_proto_goTypes = []any{
	(ComplianceState)(0),                       // 0: storage.ComplianceState
	(ComplianceAggregation_Scope)(0),           // 1: storage.ComplianceAggregation.Scope
	(*ComplianceResource)(nil),                 // 2: storage.ComplianceResource
	(*ComplianceResultValue)(nil),              // 3: storage.ComplianceResultValue
	(*ComplianceControlResult)(nil),            // 4: storage.ComplianceControlResult
	(*ComplianceDomain)(nil),                   // 5: storage.ComplianceDomain
	(*ComplianceRunMetadata)(nil),              // 6: storage.ComplianceRunMetadata
	(*ComplianceRunResults)(nil),               // 7: storage.ComplianceRunResults
	(*ComplianceStrings)(nil),                  // 8: storage.ComplianceStrings
	(*ComplianceAggregation)(nil),              // 9: storage.ComplianceAggregation
	(*PreComputedComplianceAggregation)(nil),   // 10: storage.PreComputedComplianceAggregation
	(*ComplianceResource_ClusterName)(nil),     // 11: storage.ComplianceResource.ClusterName
	(*ComplianceResource_DeploymentName)(nil),  // 12: storage.ComplianceResource.DeploymentName
	(*ComplianceResource_NodeName)(nil),        // 13: storage.ComplianceResource.NodeName
	(*ComplianceResultValue_Evidence)(nil),     // 14: storage.ComplianceResultValue.Evidence
	(*ComplianceDomain_Cluster)(nil),           // 15: storage.ComplianceDomain.Cluster
	(*ComplianceDomain_Node)(nil),              // 16: storage.ComplianceDomain.Node
	nil,                                        // 17: storage.ComplianceDomain.NodesEntry
	(*ComplianceDomain_Deployment)(nil),        // 18: storage.ComplianceDomain.Deployment
	nil,                                        // 19: storage.ComplianceDomain.DeploymentsEntry
	(*ComplianceRunResults_EntityResults)(nil), // 20: storage.ComplianceRunResults.EntityResults
	nil, // 21: storage.ComplianceRunResults.NodeResultsEntry
	nil, // 22: storage.ComplianceRunResults.DeploymentResultsEntry
	nil, // 23: storage.ComplianceRunResults.MachineConfigResultsEntry
	nil, // 24: storage.ComplianceRunResults.EntityResults.ControlResultsEntry
	(*ComplianceAggregation_AggregationKey)(nil), // 25: storage.ComplianceAggregation.AggregationKey
	(*ComplianceAggregation_Result)(nil),         // 26: storage.ComplianceAggregation.Result
	(*ComplianceAggregation_Source)(nil),         // 27: storage.ComplianceAggregation.Source
	(*ComplianceAggregation_Response)(nil),       // 28: storage.ComplianceAggregation.Response
	(*ImageName)(nil),                            // 29: storage.ImageName
	(*timestamppb.Timestamp)(nil),                // 30: google.protobuf.Timestamp
}
var file_storage_compliance_proto_depIdxs = []int32{
	11, // 0: storage.ComplianceResource.cluster:type_name -> storage.ComplianceResource.ClusterName
	12, // 1: storage.ComplianceResource.deployment:type_name -> storage.ComplianceResource.DeploymentName
	13, // 2: storage.ComplianceResource.node:type_name -> storage.ComplianceResource.NodeName
	29, // 3: storage.ComplianceResource.image:type_name -> storage.ImageName
	14, // 4: storage.ComplianceResultValue.evidence:type_name -> storage.ComplianceResultValue.Evidence
	0,  // 5: storage.ComplianceResultValue.overall_state:type_name -> storage.ComplianceState
	2,  // 6: storage.ComplianceControlResult.resource:type_name -> storage.ComplianceResource
	3,  // 7: storage.ComplianceControlResult.value:type_name -> storage.ComplianceResultValue
	15, // 8: storage.ComplianceDomain.cluster:type_name -> storage.ComplianceDomain.Cluster
	17, // 9: storage.ComplianceDomain.nodes:type_name -> storage.ComplianceDomain.NodesEntry
	19, // 10: storage.ComplianceDomain.deployments:type_name -> storage.ComplianceDomain.DeploymentsEntry
	30, // 11: storage.ComplianceRunMetadata.start_timestamp:type_name -> google.protobuf.Timestamp
	30, // 12: storage.ComplianceRunMetadata.finish_timestamp:type_name -> google.protobuf.Timestamp
	5,  // 13: storage.ComplianceRunResults.domain:type_name -> storage.ComplianceDomain
	6,  // 14: storage.ComplianceRunResults.run_metadata:type_name -> storage.ComplianceRunMetadata
	20, // 15: storage.ComplianceRunResults.cluster_results:type_name -> storage.ComplianceRunResults.EntityResults
	21, // 16: storage.ComplianceRunResults.node_results:type_name -> storage.ComplianceRunResults.NodeResultsEntry
	22, // 17: storage.ComplianceRunResults.deployment_results:type_name -> storage.ComplianceRunResults.DeploymentResultsEntry
	23, // 18: storage.ComplianceRunResults.machine_config_results:type_name -> storage.ComplianceRunResults.MachineConfigResultsEntry
	26, // 19: storage.PreComputedComplianceAggregation.results:type_name -> storage.ComplianceAggregation.Result
	27, // 20: storage.PreComputedComplianceAggregation.sources:type_name -> storage.ComplianceAggregation.Source
	11, // 21: storage.ComplianceResource.DeploymentName.cluster:type_name -> storage.ComplianceResource.ClusterName
	11, // 22: storage.ComplianceResource.NodeName.cluster:type_name -> storage.ComplianceResource.ClusterName
	0,  // 23: storage.ComplianceResultValue.Evidence.state:type_name -> storage.ComplianceState
	16, // 24: storage.ComplianceDomain.NodesEntry.value:type_name -> storage.ComplianceDomain.Node
	18, // 25: storage.ComplianceDomain.DeploymentsEntry.value:type_name -> storage.ComplianceDomain.Deployment
	24, // 26: storage.ComplianceRunResults.EntityResults.control_results:type_name -> storage.ComplianceRunResults.EntityResults.ControlResultsEntry
	20, // 27: storage.ComplianceRunResults.NodeResultsEntry.value:type_name -> storage.ComplianceRunResults.EntityResults
	20, // 28: storage.ComplianceRunResults.DeploymentResultsEntry.value:type_name -> storage.ComplianceRunResults.EntityResults
	20, // 29: storage.ComplianceRunResults.MachineConfigResultsEntry.value:type_name -> storage.ComplianceRunResults.EntityResults
	3,  // 30: storage.ComplianceRunResults.EntityResults.ControlResultsEntry.value:type_name -> storage.ComplianceResultValue
	1,  // 31: storage.ComplianceAggregation.AggregationKey.scope:type_name -> storage.ComplianceAggregation.Scope
	25, // 32: storage.ComplianceAggregation.Result.aggregation_keys:type_name -> storage.ComplianceAggregation.AggregationKey
	1,  // 33: storage.ComplianceAggregation.Result.unit:type_name -> storage.ComplianceAggregation.Scope
	6,  // 34: storage.ComplianceAggregation.Source.successful_run:type_name -> storage.ComplianceRunMetadata
	6,  // 35: storage.ComplianceAggregation.Source.failed_runs:type_name -> storage.ComplianceRunMetadata
	26, // 36: storage.ComplianceAggregation.Response.results:type_name -> storage.ComplianceAggregation.Result
	27, // 37: storage.ComplianceAggregation.Response.sources:type_name -> storage.ComplianceAggregation.Source
	38, // [38:38] is the sub-list for method output_type
	38, // [38:38] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_storage_compliance_proto_init() }
func file_storage_compliance_proto_init() {
	if File_storage_compliance_proto != nil {
		return
	}
	file_storage_image_proto_init()
	file_storage_compliance_proto_msgTypes[0].OneofWrappers = []any{
		(*complianceResource_Cluster)(nil),
		(*complianceResource_Deployment)(nil),
		(*complianceResource_Node)(nil),
		(*complianceResource_Image)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_compliance_proto_rawDesc), len(file_storage_compliance_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_compliance_proto_goTypes,
		DependencyIndexes: file_storage_compliance_proto_depIdxs,
		EnumInfos:         file_storage_compliance_proto_enumTypes,
		MessageInfos:      file_storage_compliance_proto_msgTypes,
	}.Build()
	File_storage_compliance_proto = out.File
	file_storage_compliance_proto_goTypes = nil
	file_storage_compliance_proto_depIdxs = nil
}
