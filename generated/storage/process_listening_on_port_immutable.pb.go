// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package storage

import (
	"time"
)

// ImmutableProcessListeningOnPort is an immutable interface for ProcessListeningOnPort
type ImmutableProcessListeningOnPort interface {
	GetImmutableEndpoint() ImmutableProcessListeningOnPort_Endpoint
	GetDeploymentId() string
	GetContainerName() string
	GetPodId() string
	GetPodUid() string
	GetImmutableSignal() ImmutableProcessSignal
	GetClusterId() string
	GetNamespace() string
	GetImmutableContainerStartTime() time.Time
	GetImageId() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ProcessListeningOnPort
}

// GetImmutableEndpoint implements ImmutableProcessListeningOnPort
func (m *ProcessListeningOnPort) GetImmutableEndpoint() ImmutableProcessListeningOnPort_Endpoint {
	return m.GetEndpoint()
}

// GetImmutableSignal implements ImmutableProcessListeningOnPort
func (m *ProcessListeningOnPort) GetImmutableSignal() ImmutableProcessSignal {
	return m.GetSignal()
}

// GetImmutableContainerStartTime implements ImmutableProcessListeningOnPort
func (m *ProcessListeningOnPort) GetImmutableContainerStartTime() time.Time {
	if m == nil || m.ContainerStartTime == nil {
		return time.Time{}
	}
	return m.ContainerStartTime.AsTime()
}

// Verify that ProcessListeningOnPort implements ImmutableProcessListeningOnPort
var _ ImmutableProcessListeningOnPort = (*ProcessListeningOnPort)(nil)

// ImmutableProcessListeningOnPort_Endpoint is an immutable interface for ProcessListeningOnPort_Endpoint
type ImmutableProcessListeningOnPort_Endpoint interface {
	GetPort() uint32
	GetProtocol() L4Protocol
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ProcessListeningOnPort_Endpoint
}

// Verify that ProcessListeningOnPort_Endpoint implements ImmutableProcessListeningOnPort_Endpoint
var _ ImmutableProcessListeningOnPort_Endpoint = (*ProcessListeningOnPort_Endpoint)(nil)

// ImmutableProcessListeningOnPortFromSensor is an immutable interface for ProcessListeningOnPortFromSensor
type ImmutableProcessListeningOnPortFromSensor interface {
	GetPort() uint32
	GetProtocol() L4Protocol
	GetImmutableProcess() ImmutableProcessIndicatorUniqueKey
	GetImmutableCloseTimestamp() time.Time
	GetClusterId() string
	GetDeploymentId() string
	GetPodUid() string
	GetNamespace() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ProcessListeningOnPortFromSensor
}

// GetImmutableProcess implements ImmutableProcessListeningOnPortFromSensor
func (m *ProcessListeningOnPortFromSensor) GetImmutableProcess() ImmutableProcessIndicatorUniqueKey {
	return m.GetProcess()
}

// GetImmutableCloseTimestamp implements ImmutableProcessListeningOnPortFromSensor
func (m *ProcessListeningOnPortFromSensor) GetImmutableCloseTimestamp() time.Time {
	if m == nil || m.CloseTimestamp == nil {
		return time.Time{}
	}
	return m.CloseTimestamp.AsTime()
}

// Verify that ProcessListeningOnPortFromSensor implements ImmutableProcessListeningOnPortFromSensor
var _ ImmutableProcessListeningOnPortFromSensor = (*ProcessListeningOnPortFromSensor)(nil)

// ImmutableProcessListeningOnPortStorage is an immutable interface for ProcessListeningOnPortStorage
type ImmutableProcessListeningOnPortStorage interface {
	// Ideally it has to be GENERATED ALWAYS AS IDENTITY, which will make it a
	// bigint with a sequence. Unfortunately at the moment some bits of store
	// generator assume an id has to be a string.
	GetId() string
	GetPort() uint32
	GetProtocol() L4Protocol
	GetImmutableCloseTimestamp() time.Time
	GetProcessIndicatorId() string
	// XXX: Make it a partial index on only active, not closed, PLOP
	GetClosed() bool
	// ProcessIndicator will be not empty only for those cases when we were not
	// able to find references process in the database
	GetImmutableProcess() ImmutableProcessIndicatorUniqueKey
	GetDeploymentId() string
	GetPodUid() string
	GetClusterId() string
	GetNamespace() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ProcessListeningOnPortStorage
}

// GetImmutableCloseTimestamp implements ImmutableProcessListeningOnPortStorage
func (m *ProcessListeningOnPortStorage) GetImmutableCloseTimestamp() time.Time {
	if m == nil || m.CloseTimestamp == nil {
		return time.Time{}
	}
	return m.CloseTimestamp.AsTime()
}

// GetImmutableProcess implements ImmutableProcessListeningOnPortStorage
func (m *ProcessListeningOnPortStorage) GetImmutableProcess() ImmutableProcessIndicatorUniqueKey {
	return m.GetProcess()
}

// Verify that ProcessListeningOnPortStorage implements ImmutableProcessListeningOnPortStorage
var _ ImmutableProcessListeningOnPortStorage = (*ProcessListeningOnPortStorage)(nil)
