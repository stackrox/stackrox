// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: storage/alert.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ViolationState int32

const (
	ViolationState_ACTIVE    ViolationState = 0
	ViolationState_SNOOZED   ViolationState = 1
	ViolationState_RESOLVED  ViolationState = 2
	ViolationState_ATTEMPTED ViolationState = 3
)

// Enum value maps for ViolationState.
var (
	ViolationState_name = map[int32]string{
		0: "ACTIVE",
		1: "SNOOZED",
		2: "RESOLVED",
		3: "ATTEMPTED",
	}
	ViolationState_value = map[string]int32{
		"ACTIVE":    0,
		"SNOOZED":   1,
		"RESOLVED":  2,
		"ATTEMPTED": 3,
	}
)

func (x ViolationState) Enum() *ViolationState {
	p := new(ViolationState)
	*p = x
	return p
}

func (x ViolationState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ViolationState) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_alert_proto_enumTypes[0].Descriptor()
}

func (ViolationState) Type() protoreflect.EnumType {
	return &file_storage_alert_proto_enumTypes[0]
}

func (x ViolationState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ViolationState.Descriptor instead.
func (ViolationState) EnumDescriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{0}
}

type Alert_Resource_ResourceType int32

const (
	Alert_Resource_UNKNOWN                      Alert_Resource_ResourceType = 0
	Alert_Resource_SECRETS                      Alert_Resource_ResourceType = 1
	Alert_Resource_CONFIGMAPS                   Alert_Resource_ResourceType = 2
	Alert_Resource_CLUSTER_ROLES                Alert_Resource_ResourceType = 3
	Alert_Resource_CLUSTER_ROLE_BINDINGS        Alert_Resource_ResourceType = 4
	Alert_Resource_NETWORK_POLICIES             Alert_Resource_ResourceType = 5
	Alert_Resource_SECURITY_CONTEXT_CONSTRAINTS Alert_Resource_ResourceType = 6
	Alert_Resource_EGRESS_FIREWALLS             Alert_Resource_ResourceType = 7
)

// Enum value maps for Alert_Resource_ResourceType.
var (
	Alert_Resource_ResourceType_name = map[int32]string{
		0: "UNKNOWN",
		1: "SECRETS",
		2: "CONFIGMAPS",
		3: "CLUSTER_ROLES",
		4: "CLUSTER_ROLE_BINDINGS",
		5: "NETWORK_POLICIES",
		6: "SECURITY_CONTEXT_CONSTRAINTS",
		7: "EGRESS_FIREWALLS",
	}
	Alert_Resource_ResourceType_value = map[string]int32{
		"UNKNOWN":                      0,
		"SECRETS":                      1,
		"CONFIGMAPS":                   2,
		"CLUSTER_ROLES":                3,
		"CLUSTER_ROLE_BINDINGS":        4,
		"NETWORK_POLICIES":             5,
		"SECURITY_CONTEXT_CONSTRAINTS": 6,
		"EGRESS_FIREWALLS":             7,
	}
)

func (x Alert_Resource_ResourceType) Enum() *Alert_Resource_ResourceType {
	p := new(Alert_Resource_ResourceType)
	*p = x
	return p
}

func (x Alert_Resource_ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Alert_Resource_ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_alert_proto_enumTypes[1].Descriptor()
}

func (Alert_Resource_ResourceType) Type() protoreflect.EnumType {
	return &file_storage_alert_proto_enumTypes[1]
}

func (x Alert_Resource_ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Alert_Resource_ResourceType.Descriptor instead.
func (Alert_Resource_ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{0, 1, 0}
}

type Alert_Violation_Type int32

const (
	Alert_Violation_GENERIC        Alert_Violation_Type = 0
	Alert_Violation_K8S_EVENT      Alert_Violation_Type = 1
	Alert_Violation_NETWORK_FLOW   Alert_Violation_Type = 2
	Alert_Violation_NETWORK_POLICY Alert_Violation_Type = 3
)

// Enum value maps for Alert_Violation_Type.
var (
	Alert_Violation_Type_name = map[int32]string{
		0: "GENERIC",
		1: "K8S_EVENT",
		2: "NETWORK_FLOW",
		3: "NETWORK_POLICY",
	}
	Alert_Violation_Type_value = map[string]int32{
		"GENERIC":        0,
		"K8S_EVENT":      1,
		"NETWORK_FLOW":   2,
		"NETWORK_POLICY": 3,
	}
)

func (x Alert_Violation_Type) Enum() *Alert_Violation_Type {
	p := new(Alert_Violation_Type)
	*p = x
	return p
}

func (x Alert_Violation_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Alert_Violation_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_alert_proto_enumTypes[2].Descriptor()
}

func (Alert_Violation_Type) Type() protoreflect.EnumType {
	return &file_storage_alert_proto_enumTypes[2]
}

func (x Alert_Violation_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Alert_Violation_Type.Descriptor instead.
func (Alert_Violation_Type) EnumDescriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{0, 2, 0}
}

// A special ListAlert-only enumeration of all resource types. Unlike Alert.Resource.ResourceType this also includes deployment as a type
// This must be kept in sync with Alert.Resource.ResourceType (excluding the deployment value)
type ListAlert_ResourceType int32

const (
	ListAlert_DEPLOYMENT                   ListAlert_ResourceType = 0
	ListAlert_SECRETS                      ListAlert_ResourceType = 1
	ListAlert_CONFIGMAPS                   ListAlert_ResourceType = 2
	ListAlert_CLUSTER_ROLES                ListAlert_ResourceType = 3
	ListAlert_CLUSTER_ROLE_BINDINGS        ListAlert_ResourceType = 4
	ListAlert_NETWORK_POLICIES             ListAlert_ResourceType = 5
	ListAlert_SECURITY_CONTEXT_CONSTRAINTS ListAlert_ResourceType = 6
	ListAlert_EGRESS_FIREWALLS             ListAlert_ResourceType = 7
)

// Enum value maps for ListAlert_ResourceType.
var (
	ListAlert_ResourceType_name = map[int32]string{
		0: "DEPLOYMENT",
		1: "SECRETS",
		2: "CONFIGMAPS",
		3: "CLUSTER_ROLES",
		4: "CLUSTER_ROLE_BINDINGS",
		5: "NETWORK_POLICIES",
		6: "SECURITY_CONTEXT_CONSTRAINTS",
		7: "EGRESS_FIREWALLS",
	}
	ListAlert_ResourceType_value = map[string]int32{
		"DEPLOYMENT":                   0,
		"SECRETS":                      1,
		"CONFIGMAPS":                   2,
		"CLUSTER_ROLES":                3,
		"CLUSTER_ROLE_BINDINGS":        4,
		"NETWORK_POLICIES":             5,
		"SECURITY_CONTEXT_CONSTRAINTS": 6,
		"EGRESS_FIREWALLS":             7,
	}
)

func (x ListAlert_ResourceType) Enum() *ListAlert_ResourceType {
	p := new(ListAlert_ResourceType)
	*p = x
	return p
}

func (x ListAlert_ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAlert_ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_alert_proto_enumTypes[3].Descriptor()
}

func (ListAlert_ResourceType) Type() protoreflect.EnumType {
	return &file_storage_alert_proto_enumTypes[3]
}

func (x ListAlert_ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAlert_ResourceType.Descriptor instead.
func (ListAlert_ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{1, 0}
}

type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" search:"Alert ID,hidden" sensorhash:"ignore" sql:"pk,type(uuid)"`                                                                            // Internal use only // @gotags: search:"Alert ID,hidden" sensorhash:"ignore" sql:"pk,type(uuid)"
	Policy         *Policy        `protobuf:"bytes,2,opt,name=policy,proto3" json:"policy,omitempty" sql:"ignore_pk,ignore_unique,ignore_labels(Lifecycle Stage)"`                                                                    // @gotags: sql:"ignore_pk,ignore_unique,ignore_labels(Lifecycle Stage)"
	LifecycleStage LifecycleStage `protobuf:"varint,3,opt,name=lifecycle_stage,json=lifecycleStage,proto3,enum=storage.LifecycleStage" json:"lifecycle_stage,omitempty" search:"Lifecycle Stage" sql:"index=btree"` // @gotags: search:"Lifecycle Stage" sql:"index=btree"
	ClusterId      string         `protobuf:"bytes,18,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty" search:"Cluster ID,store" sql:"type(uuid)"`                                            // @gotags: search:"Cluster ID,store" sql:"type(uuid)"
	ClusterName    string         `protobuf:"bytes,19,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty" search:"Cluster,store"`                                      // @gotags: search:"Cluster,store"
	Namespace      string         `protobuf:"bytes,20,opt,name=namespace,proto3" json:"namespace,omitempty" search:"Namespace,store"`                                                             // @gotags: search:"Namespace,store"
	NamespaceId    string         `protobuf:"bytes,21,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty" search:"Namespace ID" sql:"type(uuid)"`                                      // @gotags: search:"Namespace ID" sql:"type(uuid)"
	// Types that are assignable to Entity:
	//
	//	*Alert_Deployment_
	//	*Alert_Image
	//	*Alert_Resource_
	Entity isAlert_Entity `protobuf_oneof:"Entity"`
	// For run-time phase alert, a maximum of 40 violations are retained.
	Violations       []*Alert_Violation      `protobuf:"bytes,5,rep,name=violations,proto3" json:"violations,omitempty" search:"-"`                                      // @gotags: search:"-"
	ProcessViolation *Alert_ProcessViolation `protobuf:"bytes,13,opt,name=process_violation,json=processViolation,proto3" json:"process_violation,omitempty" search:"-"` // @gotags: search:"-"
	Enforcement      *Alert_Enforcement      `protobuf:"bytes,6,opt,name=enforcement,proto3" json:"enforcement,omitempty"`
	Time             *timestamppb.Timestamp  `protobuf:"bytes,7,opt,name=time,proto3" json:"time,omitempty" sensorhash:"ignore" search:"Violation Time"`                                         // @gotags: sensorhash:"ignore" search:"Violation Time"
	FirstOccurred    *timestamppb.Timestamp  `protobuf:"bytes,10,opt,name=first_occurred,json=firstOccurred,proto3" json:"first_occurred,omitempty" sensorhash:"ignore"` // @gotags: sensorhash:"ignore"
	// The time at which the alert was resolved. Only set if ViolationState is RESOLVED.
	ResolvedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=resolved_at,json=resolvedAt,proto3" json:"resolved_at,omitempty" sensorhash:"ignore"`  // @gotags: sensorhash:"ignore"
	State      ViolationState         `protobuf:"varint,11,opt,name=state,proto3,enum=storage.ViolationState" json:"state,omitempty" search:"Violation State,store" sql:"index=btree"` // @gotags: search:"Violation State,store" sql:"index=btree"
	SnoozeTill *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=snooze_till,json=snoozeTill,proto3" json:"snooze_till,omitempty"`
}

func (x *Alert) Reset() {
	*x = Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{0}
}

func (x *Alert) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Alert) GetPolicy() *Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *Alert) GetLifecycleStage() LifecycleStage {
	if x != nil {
		return x.LifecycleStage
	}
	return LifecycleStage_DEPLOY
}

func (x *Alert) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *Alert) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *Alert) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Alert) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (m *Alert) GetEntity() isAlert_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (x *Alert) GetDeployment() *Alert_Deployment {
	if x, ok := x.GetEntity().(*Alert_Deployment_); ok {
		return x.Deployment
	}
	return nil
}

func (x *Alert) GetImage() *ContainerImage {
	if x, ok := x.GetEntity().(*Alert_Image); ok {
		return x.Image
	}
	return nil
}

func (x *Alert) GetResource() *Alert_Resource {
	if x, ok := x.GetEntity().(*Alert_Resource_); ok {
		return x.Resource
	}
	return nil
}

func (x *Alert) GetViolations() []*Alert_Violation {
	if x != nil {
		return x.Violations
	}
	return nil
}

func (x *Alert) GetProcessViolation() *Alert_ProcessViolation {
	if x != nil {
		return x.ProcessViolation
	}
	return nil
}

func (x *Alert) GetEnforcement() *Alert_Enforcement {
	if x != nil {
		return x.Enforcement
	}
	return nil
}

func (x *Alert) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Alert) GetFirstOccurred() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstOccurred
	}
	return nil
}

func (x *Alert) GetResolvedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ResolvedAt
	}
	return nil
}

func (x *Alert) GetState() ViolationState {
	if x != nil {
		return x.State
	}
	return ViolationState_ACTIVE
}

func (x *Alert) GetSnoozeTill() *timestamppb.Timestamp {
	if x != nil {
		return x.SnoozeTill
	}
	return nil
}

type isAlert_Entity interface {
	isAlert_Entity()
}

type Alert_Deployment_ struct {
	// Represents an alert on a deployment
	// An alert cannot be on more than one entity (deployment, container image, resource, etc.)
	Deployment *Alert_Deployment `protobuf:"bytes,4,opt,name=deployment,proto3,oneof"`
}

type Alert_Image struct {
	// Represents an alert on a container image.
	// An alert cannot be on more than one entity (deployment, container image, resource, etc.)
	Image *ContainerImage `protobuf:"bytes,15,opt,name=image,proto3,oneof" sql:"ignore-fks,ignore-index"` // @gotags: sql:"ignore-fks,ignore-index"
}

type Alert_Resource_ struct {
	// Represents an alert on a kubernetes resource (configmaps, secrets, etc.)
	// An alert cannot be on more than one entity (deployment, container image, resource, etc.)
	Resource *Alert_Resource `protobuf:"bytes,16,opt,name=resource,proto3,oneof"`
}

func (*Alert_Deployment_) isAlert_Entity() {}

func (*Alert_Image) isAlert_Entity() {}

func (*Alert_Resource_) isAlert_Entity() {}

type ListAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LifecycleStage    LifecycleStage              `protobuf:"varint,2,opt,name=lifecycle_stage,json=lifecycleStage,proto3,enum=storage.LifecycleStage" json:"lifecycle_stage,omitempty" search:"Lifecycle Stage,store"` // @gotags: search:"Lifecycle Stage,store"
	Time              *timestamppb.Timestamp      `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty" search:"Violation Time"`                                                                        // @gotags: search:"Violation Time"
	Policy            *ListAlertPolicy            `protobuf:"bytes,4,opt,name=policy,proto3" json:"policy,omitempty"`
	State             ViolationState              `protobuf:"varint,6,opt,name=state,proto3,enum=storage.ViolationState" json:"state,omitempty" search:"Violation State,store"` // @gotags: search:"Violation State,store"
	EnforcementCount  int32                       `protobuf:"varint,7,opt,name=enforcement_count,json=enforcementCount,proto3" json:"enforcement_count,omitempty"`
	EnforcementAction EnforcementAction           `protobuf:"varint,9,opt,name=enforcement_action,json=enforcementAction,proto3,enum=storage.EnforcementAction" json:"enforcement_action,omitempty" search:"Enforcement"` // @gotags: search:"Enforcement"
	CommonEntityInfo  *ListAlert_CommonEntityInfo `protobuf:"bytes,10,opt,name=common_entity_info,json=commonEntityInfo,proto3" json:"common_entity_info,omitempty"`
	// Tags 5, 11-15 reserved for this oneof. Next available tag: 12
	//
	// Types that are assignable to Entity:
	//
	//	*ListAlert_Deployment
	//	*ListAlert_Resource
	Entity isListAlert_Entity `protobuf_oneof:"Entity"`
}

func (x *ListAlert) Reset() {
	*x = ListAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlert) ProtoMessage() {}

func (x *ListAlert) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlert.ProtoReflect.Descriptor instead.
func (*ListAlert) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{1}
}

func (x *ListAlert) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListAlert) GetLifecycleStage() LifecycleStage {
	if x != nil {
		return x.LifecycleStage
	}
	return LifecycleStage_DEPLOY
}

func (x *ListAlert) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *ListAlert) GetPolicy() *ListAlertPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *ListAlert) GetState() ViolationState {
	if x != nil {
		return x.State
	}
	return ViolationState_ACTIVE
}

func (x *ListAlert) GetEnforcementCount() int32 {
	if x != nil {
		return x.EnforcementCount
	}
	return 0
}

func (x *ListAlert) GetEnforcementAction() EnforcementAction {
	if x != nil {
		return x.EnforcementAction
	}
	return EnforcementAction_UNSET_ENFORCEMENT
}

func (x *ListAlert) GetCommonEntityInfo() *ListAlert_CommonEntityInfo {
	if x != nil {
		return x.CommonEntityInfo
	}
	return nil
}

func (m *ListAlert) GetEntity() isListAlert_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (x *ListAlert) GetDeployment() *ListAlertDeployment {
	if x, ok := x.GetEntity().(*ListAlert_Deployment); ok {
		return x.Deployment
	}
	return nil
}

func (x *ListAlert) GetResource() *ListAlert_ResourceEntity {
	if x, ok := x.GetEntity().(*ListAlert_Resource); ok {
		return x.Resource
	}
	return nil
}

type isListAlert_Entity interface {
	isListAlert_Entity()
}

type ListAlert_Deployment struct {
	// Represents an alert on a deployment
	// An alert cannot be on more than one entity (deployment, container image, resource, etc.)
	Deployment *ListAlertDeployment `protobuf:"bytes,5,opt,name=deployment,proto3,oneof"`
}

type ListAlert_Resource struct {
	// Represents an alert on a kubernetes resource (configmaps, secrets, etc.)
	// An alert cannot be on more than one entity (deployment, container image, resource, etc.)
	Resource *ListAlert_ResourceEntity `protobuf:"bytes,11,opt,name=resource,proto3,oneof"`
}

func (*ListAlert_Deployment) isListAlert_Entity() {}

func (*ListAlert_Resource) isListAlert_Entity() {}

type ListAlertPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" search:"Policy ID,store,hidden"`                                    // @gotags: search:"Policy ID,store,hidden"
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" search:"Policy,store"`                                // @gotags: search:"Policy,store"
	Severity    Severity `protobuf:"varint,3,opt,name=severity,proto3,enum=storage.Severity" json:"severity,omitempty" search:"Severity,store"` // @gotags: search:"Severity,store"
	Description string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Categories  []string `protobuf:"bytes,5,rep,name=categories,proto3" json:"categories,omitempty" search:"Category,store"` // @gotags: search:"Category,store"
	// For internal use only.
	DeveloperInternalFields *ListAlertPolicy_DevFields `protobuf:"bytes,6,opt,name=developer_internal_fields,json=developerInternalFields,proto3" json:"developer_internal_fields,omitempty"`
}

func (x *ListAlertPolicy) Reset() {
	*x = ListAlertPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertPolicy) ProtoMessage() {}

func (x *ListAlertPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertPolicy.ProtoReflect.Descriptor instead.
func (*ListAlertPolicy) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{2}
}

func (x *ListAlertPolicy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListAlertPolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListAlertPolicy) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_UNSET_SEVERITY
}

func (x *ListAlertPolicy) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListAlertPolicy) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *ListAlertPolicy) GetDeveloperInternalFields() *ListAlertPolicy_DevFields {
	if x != nil {
		return x.DeveloperInternalFields
	}
	return nil
}

type ListAlertDeployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" search:"Deployment ID,store,hidden"`     // @gotags: search:"Deployment ID,store,hidden"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" search:"Deployment,store"` // @gotags: search:"Deployment,store"
	// This field is deprecated and can be found in CommonEntityInfo. It will be removed from here in a future release.
	//
	// Deprecated: Marked as deprecated in storage/alert.proto.
	ClusterName string `protobuf:"bytes,4,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"` // This field has moved to CommonEntityInfo
	// This field is deprecated and can be found in CommonEntityInfo. It will be removed from here in a future release.
	//
	// Deprecated: Marked as deprecated in storage/alert.proto.
	Namespace string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"` // This field has moved to CommonEntityInfo
	// This field is deprecated and can be found in CommonEntityInfo. It will be removed from here in a future release.
	//
	// Deprecated: Marked as deprecated in storage/alert.proto.
	ClusterId string `protobuf:"bytes,6,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"` // This field has moved to CommonEntityInfo
	Inactive  bool   `protobuf:"varint,7,opt,name=inactive,proto3" json:"inactive,omitempty" search:"Inactive Deployment"`                   // @gotags: search:"Inactive Deployment"
	// This field is deprecated and can be found in CommonEntityInfo. It will be removed from here in a future release.
	//
	// Deprecated: Marked as deprecated in storage/alert.proto.
	NamespaceId    string `protobuf:"bytes,8,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"` // This field has moved to CommonEntityInfo
	DeploymentType string `protobuf:"bytes,9,opt,name=deployment_type,json=deploymentType,proto3" json:"deployment_type,omitempty"`
}

func (x *ListAlertDeployment) Reset() {
	*x = ListAlertDeployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertDeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertDeployment) ProtoMessage() {}

func (x *ListAlertDeployment) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertDeployment.ProtoReflect.Descriptor instead.
func (*ListAlertDeployment) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{3}
}

func (x *ListAlertDeployment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListAlertDeployment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Deprecated: Marked as deprecated in storage/alert.proto.
func (x *ListAlertDeployment) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

// Deprecated: Marked as deprecated in storage/alert.proto.
func (x *ListAlertDeployment) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// Deprecated: Marked as deprecated in storage/alert.proto.
func (x *ListAlertDeployment) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListAlertDeployment) GetInactive() bool {
	if x != nil {
		return x.Inactive
	}
	return false
}

// Deprecated: Marked as deprecated in storage/alert.proto.
func (x *ListAlertDeployment) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ListAlertDeployment) GetDeploymentType() string {
	if x != nil {
		return x.DeploymentType
	}
	return ""
}

type Alert_Deployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" search:"Deployment ID,store,hidden" sql:"index=hash,type(uuid)"`     // @gotags: search:"Deployment ID,store,hidden" sql:"index=hash,type(uuid)"
	Name        string                        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" search:"Deployment,store"` // @gotags: search:"Deployment,store"
	Type        string                        `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Namespace   string                        `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`                                                                                   // This field has to be duplicated in Alert for scope management and search.
	NamespaceId string                        `protobuf:"bytes,16,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`                                                           // This field has to be duplicated in Alert for scope management and search.
	Labels      map[string]string             `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" sensorhash:"ignore"` // @gotags: sensorhash:"ignore"
	ClusterId   string                        `protobuf:"bytes,9,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`                                                                  // This field has to be duplicated in Alert for scope management and search.
	ClusterName string                        `protobuf:"bytes,10,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`                                                           // This field has to be duplicated in Alert for scope management and search.
	Containers  []*Alert_Deployment_Container `protobuf:"bytes,11,rep,name=containers,proto3" json:"containers,omitempty"`
	Annotations map[string]string             `protobuf:"bytes,14,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" sensorhash:"ignore"` // @gotags: sensorhash:"ignore"
	Inactive    bool                          `protobuf:"varint,15,opt,name=inactive,proto3" json:"inactive,omitempty" search:"Inactive Deployment"`                                                                                              // @gotags: search:"Inactive Deployment"
}

func (x *Alert_Deployment) Reset() {
	*x = Alert_Deployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_Deployment) ProtoMessage() {}

func (x *Alert_Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_Deployment.ProtoReflect.Descriptor instead.
func (*Alert_Deployment) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Alert_Deployment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Alert_Deployment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Alert_Deployment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Alert_Deployment) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Alert_Deployment) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *Alert_Deployment) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Alert_Deployment) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *Alert_Deployment) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *Alert_Deployment) GetContainers() []*Alert_Deployment_Container {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *Alert_Deployment) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Alert_Deployment) GetInactive() bool {
	if x != nil {
		return x.Inactive
	}
	return false
}

// Represents an alert on a kubernetes resource other than a deployment (configmaps, secrets, etc.)
type Alert_Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceType Alert_Resource_ResourceType `protobuf:"varint,1,opt,name=resource_type,json=resourceType,proto3,enum=storage.Alert_Resource_ResourceType" json:"resource_type,omitempty" search:"Resource Type,store"` // @gotags: search:"Resource Type,store"
	Name         string                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" search:"Resource"`                                                                               // @gotags: search:"Resource"
	ClusterId    string                      `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`                                                    // This field has to be duplicated in Alert for scope management and search.
	ClusterName  string                      `protobuf:"bytes,4,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`                                              // This field has to be duplicated in Alert for scope management and search.
	Namespace    string                      `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`                                                                     // This field has to be duplicated in Alert for scope management and search.
	NamespaceId  string                      `protobuf:"bytes,6,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`                                              // This field has to be duplicated in Alert for scope management and search.
}

func (x *Alert_Resource) Reset() {
	*x = Alert_Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_Resource) ProtoMessage() {}

func (x *Alert_Resource) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_Resource.ProtoReflect.Descriptor instead.
func (*Alert_Resource) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Alert_Resource) GetResourceType() Alert_Resource_ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return Alert_Resource_UNKNOWN
}

func (x *Alert_Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Alert_Resource) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *Alert_Resource) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *Alert_Resource) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Alert_Resource) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

type Alert_Violation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// Types that are assignable to MessageAttributes:
	//
	//	*Alert_Violation_KeyValueAttrs_
	//	*Alert_Violation_NetworkFlowInfo_
	MessageAttributes isAlert_Violation_MessageAttributes `protobuf_oneof:"MessageAttributes"`
	// 'type' is for internal use only.
	Type Alert_Violation_Type `protobuf:"varint,5,opt,name=type,proto3,enum=storage.Alert_Violation_Type" json:"type,omitempty"`
	// Indicates violation time. This field differs from top-level field 'time' which represents last time the alert
	// occurred in case of multiple occurrences of the policy alert. As of 55.0, this field is set only for kubernetes
	// event violations, but may not be limited to it in future.
	Time *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *Alert_Violation) Reset() {
	*x = Alert_Violation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_Violation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_Violation) ProtoMessage() {}

func (x *Alert_Violation) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_Violation.ProtoReflect.Descriptor instead.
func (*Alert_Violation) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Alert_Violation) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (m *Alert_Violation) GetMessageAttributes() isAlert_Violation_MessageAttributes {
	if m != nil {
		return m.MessageAttributes
	}
	return nil
}

func (x *Alert_Violation) GetKeyValueAttrs() *Alert_Violation_KeyValueAttrs {
	if x, ok := x.GetMessageAttributes().(*Alert_Violation_KeyValueAttrs_); ok {
		return x.KeyValueAttrs
	}
	return nil
}

func (x *Alert_Violation) GetNetworkFlowInfo() *Alert_Violation_NetworkFlowInfo {
	if x, ok := x.GetMessageAttributes().(*Alert_Violation_NetworkFlowInfo_); ok {
		return x.NetworkFlowInfo
	}
	return nil
}

func (x *Alert_Violation) GetType() Alert_Violation_Type {
	if x != nil {
		return x.Type
	}
	return Alert_Violation_GENERIC
}

func (x *Alert_Violation) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type isAlert_Violation_MessageAttributes interface {
	isAlert_Violation_MessageAttributes()
}

type Alert_Violation_KeyValueAttrs_ struct {
	KeyValueAttrs *Alert_Violation_KeyValueAttrs `protobuf:"bytes,4,opt,name=key_value_attrs,json=keyValueAttrs,proto3,oneof"`
}

type Alert_Violation_NetworkFlowInfo_ struct {
	NetworkFlowInfo *Alert_Violation_NetworkFlowInfo `protobuf:"bytes,7,opt,name=network_flow_info,json=networkFlowInfo,proto3,oneof" search:"-" sql:"-"` // @gotags: search:"-" sql:"-"
}

func (*Alert_Violation_KeyValueAttrs_) isAlert_Violation_MessageAttributes() {}

func (*Alert_Violation_NetworkFlowInfo_) isAlert_Violation_MessageAttributes() {}

type Alert_ProcessViolation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message   string              `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Processes []*ProcessIndicator `protobuf:"bytes,2,rep,name=processes,proto3" json:"processes,omitempty" sql:"ignore-fks"` // @gotags: sql:"ignore-fks"
}

func (x *Alert_ProcessViolation) Reset() {
	*x = Alert_ProcessViolation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_ProcessViolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_ProcessViolation) ProtoMessage() {}

func (x *Alert_ProcessViolation) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_ProcessViolation.ProtoReflect.Descriptor instead.
func (*Alert_ProcessViolation) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Alert_ProcessViolation) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Alert_ProcessViolation) GetProcesses() []*ProcessIndicator {
	if x != nil {
		return x.Processes
	}
	return nil
}

type Alert_Enforcement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action  EnforcementAction `protobuf:"varint,1,opt,name=action,proto3,enum=storage.EnforcementAction" json:"action,omitempty" search:"Enforcement"` // @gotags: search:"Enforcement"
	Message string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Alert_Enforcement) Reset() {
	*x = Alert_Enforcement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_Enforcement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_Enforcement) ProtoMessage() {}

func (x *Alert_Enforcement) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_Enforcement.ProtoReflect.Descriptor instead.
func (*Alert_Enforcement) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Alert_Enforcement) GetAction() EnforcementAction {
	if x != nil {
		return x.Action
	}
	return EnforcementAction_UNSET_ENFORCEMENT
}

func (x *Alert_Enforcement) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Alert_Deployment_Container struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image *ContainerImage `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty" search:"-" sql:"ignore-fks,ignore-index"` // @gotags: search:"-" sql:"ignore-fks,ignore-index"
	Name  string          `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Alert_Deployment_Container) Reset() {
	*x = Alert_Deployment_Container{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_Deployment_Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_Deployment_Container) ProtoMessage() {}

func (x *Alert_Deployment_Container) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_Deployment_Container.ProtoReflect.Descriptor instead.
func (*Alert_Deployment_Container) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *Alert_Deployment_Container) GetImage() *ContainerImage {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Alert_Deployment_Container) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Alert_Violation_KeyValueAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attrs []*Alert_Violation_KeyValueAttrs_KeyValueAttr `protobuf:"bytes,1,rep,name=attrs,proto3" json:"attrs,omitempty"`
}

func (x *Alert_Violation_KeyValueAttrs) Reset() {
	*x = Alert_Violation_KeyValueAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_Violation_KeyValueAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_Violation_KeyValueAttrs) ProtoMessage() {}

func (x *Alert_Violation_KeyValueAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_Violation_KeyValueAttrs.ProtoReflect.Descriptor instead.
func (*Alert_Violation_KeyValueAttrs) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *Alert_Violation_KeyValueAttrs) GetAttrs() []*Alert_Violation_KeyValueAttrs_KeyValueAttr {
	if x != nil {
		return x.Attrs
	}
	return nil
}

type Alert_Violation_NetworkFlowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol    L4Protocol                              `protobuf:"varint,1,opt,name=protocol,proto3,enum=storage.L4Protocol" json:"protocol,omitempty"`
	Source      *Alert_Violation_NetworkFlowInfo_Entity `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Destination *Alert_Violation_NetworkFlowInfo_Entity `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *Alert_Violation_NetworkFlowInfo) Reset() {
	*x = Alert_Violation_NetworkFlowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_Violation_NetworkFlowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_Violation_NetworkFlowInfo) ProtoMessage() {}

func (x *Alert_Violation_NetworkFlowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_Violation_NetworkFlowInfo.ProtoReflect.Descriptor instead.
func (*Alert_Violation_NetworkFlowInfo) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{0, 2, 1}
}

func (x *Alert_Violation_NetworkFlowInfo) GetProtocol() L4Protocol {
	if x != nil {
		return x.Protocol
	}
	return L4Protocol_L4_PROTOCOL_UNKNOWN
}

func (x *Alert_Violation_NetworkFlowInfo) GetSource() *Alert_Violation_NetworkFlowInfo_Entity {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Alert_Violation_NetworkFlowInfo) GetDestination() *Alert_Violation_NetworkFlowInfo_Entity {
	if x != nil {
		return x.Destination
	}
	return nil
}

type Alert_Violation_KeyValueAttrs_KeyValueAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Alert_Violation_KeyValueAttrs_KeyValueAttr) Reset() {
	*x = Alert_Violation_KeyValueAttrs_KeyValueAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_Violation_KeyValueAttrs_KeyValueAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_Violation_KeyValueAttrs_KeyValueAttr) ProtoMessage() {}

func (x *Alert_Violation_KeyValueAttrs_KeyValueAttr) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_Violation_KeyValueAttrs_KeyValueAttr.ProtoReflect.Descriptor instead.
func (*Alert_Violation_KeyValueAttrs_KeyValueAttr) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{0, 2, 0, 0}
}

func (x *Alert_Violation_KeyValueAttrs_KeyValueAttr) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Alert_Violation_KeyValueAttrs_KeyValueAttr) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Alert_Violation_NetworkFlowInfo_Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	EntityType          NetworkEntityInfo_Type `protobuf:"varint,2,opt,name=entity_type,json=entityType,proto3,enum=storage.NetworkEntityInfo_Type" json:"entity_type,omitempty"`
	DeploymentNamespace string                 `protobuf:"bytes,3,opt,name=deployment_namespace,json=deploymentNamespace,proto3" json:"deployment_namespace,omitempty"`
	DeploymentType      string                 `protobuf:"bytes,5,opt,name=deployment_type,json=deploymentType,proto3" json:"deployment_type,omitempty"`
	Port                int32                  `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *Alert_Violation_NetworkFlowInfo_Entity) Reset() {
	*x = Alert_Violation_NetworkFlowInfo_Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert_Violation_NetworkFlowInfo_Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert_Violation_NetworkFlowInfo_Entity) ProtoMessage() {}

func (x *Alert_Violation_NetworkFlowInfo_Entity) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert_Violation_NetworkFlowInfo_Entity.ProtoReflect.Descriptor instead.
func (*Alert_Violation_NetworkFlowInfo_Entity) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{0, 2, 1, 0}
}

func (x *Alert_Violation_NetworkFlowInfo_Entity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Alert_Violation_NetworkFlowInfo_Entity) GetEntityType() NetworkEntityInfo_Type {
	if x != nil {
		return x.EntityType
	}
	return NetworkEntityInfo_UNKNOWN_TYPE
}

func (x *Alert_Violation_NetworkFlowInfo_Entity) GetDeploymentNamespace() string {
	if x != nil {
		return x.DeploymentNamespace
	}
	return ""
}

func (x *Alert_Violation_NetworkFlowInfo_Entity) GetDeploymentType() string {
	if x != nil {
		return x.DeploymentType
	}
	return ""
}

func (x *Alert_Violation_NetworkFlowInfo_Entity) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// Fields common to all entities that an alert might belong to.
type ListAlert_CommonEntityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName  string                 `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty" search:"Cluster,store"`                                         // @gotags: search:"Cluster,store"
	Namespace    string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" search:"Namespace,store"`                                                                // @gotags: search:"Namespace,store"
	ClusterId    string                 `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty" search:"Cluster ID,store" sql:"type(uuid)"`                                               // @gotags: search:"Cluster ID,store" sql:"type(uuid)"
	NamespaceId  string                 `protobuf:"bytes,4,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty" search:"Namespace ID" sql:"type(uuid)"`                                         // @gotags: search:"Namespace ID" sql:"type(uuid)"
	ResourceType ListAlert_ResourceType `protobuf:"varint,5,opt,name=resource_type,json=resourceType,proto3,enum=storage.ListAlert_ResourceType" json:"resource_type,omitempty" search:"Resource Type,store"` // @gotags: search:"Resource Type,store"
}

func (x *ListAlert_CommonEntityInfo) Reset() {
	*x = ListAlert_CommonEntityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlert_CommonEntityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlert_CommonEntityInfo) ProtoMessage() {}

func (x *ListAlert_CommonEntityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlert_CommonEntityInfo.ProtoReflect.Descriptor instead.
func (*ListAlert_CommonEntityInfo) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListAlert_CommonEntityInfo) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ListAlert_CommonEntityInfo) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListAlert_CommonEntityInfo) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListAlert_CommonEntityInfo) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ListAlert_CommonEntityInfo) GetResourceType() ListAlert_ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ListAlert_DEPLOYMENT
}

type ListAlert_ResourceEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" search:"Resource"` // @gotags: search:"Resource"
}

func (x *ListAlert_ResourceEntity) Reset() {
	*x = ListAlert_ResourceEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlert_ResourceEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlert_ResourceEntity) ProtoMessage() {}

func (x *ListAlert_ResourceEntity) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlert_ResourceEntity.ProtoReflect.Descriptor instead.
func (*ListAlert_ResourceEntity) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ListAlert_ResourceEntity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListAlertPolicy_DevFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SORTName string `protobuf:"bytes,6,opt,name=SORT_name,json=SORTName,proto3" json:"SORT_name,omitempty" search:"SORT_Policy,hidden,analyzer=keyword"` // @gotags: search:"SORT_Policy,hidden,analyzer=keyword"
}

func (x *ListAlertPolicy_DevFields) Reset() {
	*x = ListAlertPolicy_DevFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_alert_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertPolicy_DevFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertPolicy_DevFields) ProtoMessage() {}

func (x *ListAlertPolicy_DevFields) ProtoReflect() protoreflect.Message {
	mi := &file_storage_alert_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertPolicy_DevFields.ProtoReflect.Descriptor instead.
func (*ListAlertPolicy_DevFields) Descriptor() ([]byte, []int) {
	return file_storage_alert_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ListAlertPolicy_DevFields) GetSORTName() string {
	if x != nil {
		return x.SORTName
	}
	return ""
}

var File_storage_alert_proto protoreflect.FileDescriptor

var file_storage_alert_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x18, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x18, 0x0a,
	0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x40, 0x0a, 0x0f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x52, 0x0e, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x76, 0x69, 0x6f,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x56, 0x69,
	0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x76,
	0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x41, 0x0a, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x2d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3b,
	0x0a, 0x0b, 0x73, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x5f, 0x74, 0x69, 0x6c, 0x6c, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x73, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x54, 0x69, 0x6c, 0x6c, 0x1a, 0x80, 0x05, 0x0a, 0x0a,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x4c, 0x0a, 0x0b, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4e,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x3e,
	0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xa3,
	0x03, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0xb4, 0x01,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x45, 0x43, 0x52, 0x45, 0x54, 0x53, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x4d, 0x41, 0x50, 0x53, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4c, 0x55, 0x53,
	0x54, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x53, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x43,
	0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x42, 0x49, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x53, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52,
	0x4b, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x49, 0x45, 0x53, 0x10, 0x05, 0x12, 0x20, 0x0a, 0x1c,
	0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x58, 0x54,
	0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x54, 0x53, 0x10, 0x06, 0x12, 0x14,
	0x0a, 0x10, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x46, 0x49, 0x52, 0x45, 0x57, 0x41, 0x4c,
	0x4c, 0x53, 0x10, 0x07, 0x1a, 0xe4, 0x07, 0x0a, 0x09, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x0f,
	0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x48, 0x00, 0x52,
	0x0d, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x56,
	0x0a, 0x11, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c,
	0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x2e, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x92, 0x01, 0x0a, 0x0d, 0x4b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x49, 0x0a, 0x05, 0x61,
	0x74, 0x74, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x56, 0x69, 0x6f, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x73, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72, 0x52,
	0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x1a, 0x36, 0x0a, 0x0c, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x41, 0x74, 0x74, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xaf,
	0x03, 0x0a, 0x0f, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4c,
	0x34, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0xce, 0x01, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40,
	0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x31, 0x0a, 0x14, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x22, 0x48, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x45, 0x4e, 0x45,
	0x52, 0x49, 0x43, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4b, 0x38, 0x53, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f,
	0x46, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52,
	0x4b, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x10, 0x03, 0x42, 0x13, 0x0a, 0x11, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x4a,
	0x04, 0x08, 0x02, 0x10, 0x03, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x1a, 0x65, 0x0a, 0x10, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x1a, 0x5b, 0x0a, 0x0b, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x32, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x08, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4a, 0x04, 0x08, 0x0e, 0x10, 0x0f, 0x22,
	0x88, 0x08, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x40, 0x0a,
	0x0f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52,
	0x0e, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12,
	0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x30, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x69, 0x6f, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x65, 0x6e, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x49, 0x0a,
	0x12, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x0a, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0xdb, 0x01, 0x0a,
	0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x24, 0x0a, 0x0e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xb7, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x53, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x4d, 0x41, 0x50, 0x53, 0x10, 0x02, 0x12, 0x11,
	0x0a, 0x0d, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x53, 0x10,
	0x03, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c,
	0x45, 0x5f, 0x42, 0x49, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x53, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10,
	0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x49, 0x45, 0x53,
	0x10, 0x05, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43,
	0x4f, 0x4e, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52, 0x41, 0x49, 0x4e,
	0x54, 0x53, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x46,
	0x49, 0x52, 0x45, 0x57, 0x41, 0x4c, 0x4c, 0x53, 0x10, 0x07, 0x42, 0x08, 0x0a, 0x06, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4a, 0x04, 0x08, 0x08, 0x10, 0x09, 0x22, 0xb0, 0x02, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x5e, 0x0a, 0x19, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x44, 0x65, 0x76, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x17, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x1a, 0x28, 0x0a, 0x09, 0x44, 0x65, 0x76, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x4f, 0x52, 0x54, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x97, 0x02,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0c, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x21, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x25, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x2a, 0x46, 0x0a, 0x0e, 0x56, 0x69, 0x6f, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x4e, 0x4f, 0x4f, 0x5a, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x41, 0x54, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x45, 0x44, 0x10, 0x03, 0x42,
	0x2e, 0x0a, 0x19, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x72, 0x6f, 0x78, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5a, 0x11, 0x2e, 0x2f,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x3b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_storage_alert_proto_rawDescOnce sync.Once
	file_storage_alert_proto_rawDescData = file_storage_alert_proto_rawDesc
)

func file_storage_alert_proto_rawDescGZIP() []byte {
	file_storage_alert_proto_rawDescOnce.Do(func() {
		file_storage_alert_proto_rawDescData = protoimpl.X.CompressGZIP(file_storage_alert_proto_rawDescData)
	})
	return file_storage_alert_proto_rawDescData
}

var file_storage_alert_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_storage_alert_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_storage_alert_proto_goTypes = []any{
	(ViolationState)(0),                     // 0: storage.ViolationState
	(Alert_Resource_ResourceType)(0),        // 1: storage.Alert.Resource.ResourceType
	(Alert_Violation_Type)(0),               // 2: storage.Alert.Violation.Type
	(ListAlert_ResourceType)(0),             // 3: storage.ListAlert.ResourceType
	(*Alert)(nil),                           // 4: storage.Alert
	(*ListAlert)(nil),                       // 5: storage.ListAlert
	(*ListAlertPolicy)(nil),                 // 6: storage.ListAlertPolicy
	(*ListAlertDeployment)(nil),             // 7: storage.ListAlertDeployment
	(*Alert_Deployment)(nil),                // 8: storage.Alert.Deployment
	(*Alert_Resource)(nil),                  // 9: storage.Alert.Resource
	(*Alert_Violation)(nil),                 // 10: storage.Alert.Violation
	(*Alert_ProcessViolation)(nil),          // 11: storage.Alert.ProcessViolation
	(*Alert_Enforcement)(nil),               // 12: storage.Alert.Enforcement
	nil,                                     // 13: storage.Alert.Deployment.LabelsEntry
	(*Alert_Deployment_Container)(nil),      // 14: storage.Alert.Deployment.Container
	nil,                                     // 15: storage.Alert.Deployment.AnnotationsEntry
	(*Alert_Violation_KeyValueAttrs)(nil),   // 16: storage.Alert.Violation.KeyValueAttrs
	(*Alert_Violation_NetworkFlowInfo)(nil), // 17: storage.Alert.Violation.NetworkFlowInfo
	(*Alert_Violation_KeyValueAttrs_KeyValueAttr)(nil), // 18: storage.Alert.Violation.KeyValueAttrs.KeyValueAttr
	(*Alert_Violation_NetworkFlowInfo_Entity)(nil),     // 19: storage.Alert.Violation.NetworkFlowInfo.Entity
	(*ListAlert_CommonEntityInfo)(nil),                 // 20: storage.ListAlert.CommonEntityInfo
	(*ListAlert_ResourceEntity)(nil),                   // 21: storage.ListAlert.ResourceEntity
	(*ListAlertPolicy_DevFields)(nil),                  // 22: storage.ListAlertPolicy.DevFields
	(*Policy)(nil),                                     // 23: storage.Policy
	(LifecycleStage)(0),                                // 24: storage.LifecycleStage
	(*ContainerImage)(nil),                             // 25: storage.ContainerImage
	(*timestamppb.Timestamp)(nil),                      // 26: google.protobuf.Timestamp
	(EnforcementAction)(0),                             // 27: storage.EnforcementAction
	(Severity)(0),                                      // 28: storage.Severity
	(*ProcessIndicator)(nil),                           // 29: storage.ProcessIndicator
	(L4Protocol)(0),                                    // 30: storage.L4Protocol
	(NetworkEntityInfo_Type)(0),                        // 31: storage.NetworkEntityInfo.Type
}
var file_storage_alert_proto_depIdxs = []int32{
	23, // 0: storage.Alert.policy:type_name -> storage.Policy
	24, // 1: storage.Alert.lifecycle_stage:type_name -> storage.LifecycleStage
	8,  // 2: storage.Alert.deployment:type_name -> storage.Alert.Deployment
	25, // 3: storage.Alert.image:type_name -> storage.ContainerImage
	9,  // 4: storage.Alert.resource:type_name -> storage.Alert.Resource
	10, // 5: storage.Alert.violations:type_name -> storage.Alert.Violation
	11, // 6: storage.Alert.process_violation:type_name -> storage.Alert.ProcessViolation
	12, // 7: storage.Alert.enforcement:type_name -> storage.Alert.Enforcement
	26, // 8: storage.Alert.time:type_name -> google.protobuf.Timestamp
	26, // 9: storage.Alert.first_occurred:type_name -> google.protobuf.Timestamp
	26, // 10: storage.Alert.resolved_at:type_name -> google.protobuf.Timestamp
	0,  // 11: storage.Alert.state:type_name -> storage.ViolationState
	26, // 12: storage.Alert.snooze_till:type_name -> google.protobuf.Timestamp
	24, // 13: storage.ListAlert.lifecycle_stage:type_name -> storage.LifecycleStage
	26, // 14: storage.ListAlert.time:type_name -> google.protobuf.Timestamp
	6,  // 15: storage.ListAlert.policy:type_name -> storage.ListAlertPolicy
	0,  // 16: storage.ListAlert.state:type_name -> storage.ViolationState
	27, // 17: storage.ListAlert.enforcement_action:type_name -> storage.EnforcementAction
	20, // 18: storage.ListAlert.common_entity_info:type_name -> storage.ListAlert.CommonEntityInfo
	7,  // 19: storage.ListAlert.deployment:type_name -> storage.ListAlertDeployment
	21, // 20: storage.ListAlert.resource:type_name -> storage.ListAlert.ResourceEntity
	28, // 21: storage.ListAlertPolicy.severity:type_name -> storage.Severity
	22, // 22: storage.ListAlertPolicy.developer_internal_fields:type_name -> storage.ListAlertPolicy.DevFields
	13, // 23: storage.Alert.Deployment.labels:type_name -> storage.Alert.Deployment.LabelsEntry
	14, // 24: storage.Alert.Deployment.containers:type_name -> storage.Alert.Deployment.Container
	15, // 25: storage.Alert.Deployment.annotations:type_name -> storage.Alert.Deployment.AnnotationsEntry
	1,  // 26: storage.Alert.Resource.resource_type:type_name -> storage.Alert.Resource.ResourceType
	16, // 27: storage.Alert.Violation.key_value_attrs:type_name -> storage.Alert.Violation.KeyValueAttrs
	17, // 28: storage.Alert.Violation.network_flow_info:type_name -> storage.Alert.Violation.NetworkFlowInfo
	2,  // 29: storage.Alert.Violation.type:type_name -> storage.Alert.Violation.Type
	26, // 30: storage.Alert.Violation.time:type_name -> google.protobuf.Timestamp
	29, // 31: storage.Alert.ProcessViolation.processes:type_name -> storage.ProcessIndicator
	27, // 32: storage.Alert.Enforcement.action:type_name -> storage.EnforcementAction
	25, // 33: storage.Alert.Deployment.Container.image:type_name -> storage.ContainerImage
	18, // 34: storage.Alert.Violation.KeyValueAttrs.attrs:type_name -> storage.Alert.Violation.KeyValueAttrs.KeyValueAttr
	30, // 35: storage.Alert.Violation.NetworkFlowInfo.protocol:type_name -> storage.L4Protocol
	19, // 36: storage.Alert.Violation.NetworkFlowInfo.source:type_name -> storage.Alert.Violation.NetworkFlowInfo.Entity
	19, // 37: storage.Alert.Violation.NetworkFlowInfo.destination:type_name -> storage.Alert.Violation.NetworkFlowInfo.Entity
	31, // 38: storage.Alert.Violation.NetworkFlowInfo.Entity.entity_type:type_name -> storage.NetworkEntityInfo.Type
	3,  // 39: storage.ListAlert.CommonEntityInfo.resource_type:type_name -> storage.ListAlert.ResourceType
	40, // [40:40] is the sub-list for method output_type
	40, // [40:40] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_storage_alert_proto_init() }
func file_storage_alert_proto_init() {
	if File_storage_alert_proto != nil {
		return
	}
	file_storage_deployment_proto_init()
	file_storage_network_flow_proto_init()
	file_storage_policy_proto_init()
	file_storage_process_indicator_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_storage_alert_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_alert_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_alert_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListAlertPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_alert_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListAlertDeployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_alert_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Alert_Deployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_alert_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Alert_Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_alert_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Alert_Violation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_alert_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Alert_ProcessViolation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_alert_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Alert_Enforcement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_alert_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Alert_Deployment_Container); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_alert_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Alert_Violation_KeyValueAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_alert_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Alert_Violation_NetworkFlowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_alert_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Alert_Violation_KeyValueAttrs_KeyValueAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_alert_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Alert_Violation_NetworkFlowInfo_Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_alert_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ListAlert_CommonEntityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_alert_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ListAlert_ResourceEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_alert_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ListAlertPolicy_DevFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_storage_alert_proto_msgTypes[0].OneofWrappers = []any{
		(*Alert_Deployment_)(nil),
		(*Alert_Image)(nil),
		(*Alert_Resource_)(nil),
	}
	file_storage_alert_proto_msgTypes[1].OneofWrappers = []any{
		(*ListAlert_Deployment)(nil),
		(*ListAlert_Resource)(nil),
	}
	file_storage_alert_proto_msgTypes[6].OneofWrappers = []any{
		(*Alert_Violation_KeyValueAttrs_)(nil),
		(*Alert_Violation_NetworkFlowInfo_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_storage_alert_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_alert_proto_goTypes,
		DependencyIndexes: file_storage_alert_proto_depIdxs,
		EnumInfos:         file_storage_alert_proto_enumTypes,
		MessageInfos:      file_storage_alert_proto_msgTypes,
	}.Build()
	File_storage_alert_proto = out.File
	file_storage_alert_proto_rawDesc = nil
	file_storage_alert_proto_goTypes = nil
	file_storage_alert_proto_depIdxs = nil
}
