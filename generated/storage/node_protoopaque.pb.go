// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/node.proto

//go:build protoopaque

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Node_Note int32

const (
	Node_MISSING_SCAN_DATA Node_Note = 0
)

// Enum value maps for Node_Note.
var (
	Node_Note_name = map[int32]string{
		0: "MISSING_SCAN_DATA",
	}
	Node_Note_value = map[string]int32{
		"MISSING_SCAN_DATA": 0,
	}
)

func (x Node_Note) Enum() *Node_Note {
	p := new(Node_Note)
	*p = x
	return p
}

func (x Node_Note) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Node_Note) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_node_proto_enumTypes[0].Descriptor()
}

func (Node_Note) Type() protoreflect.EnumType {
	return &file_storage_node_proto_enumTypes[0]
}

func (x Node_Note) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type NodeScan_Note int32

const (
	NodeScan_UNSET                           NodeScan_Note = 0
	NodeScan_UNSUPPORTED                     NodeScan_Note = 1
	NodeScan_KERNEL_UNSUPPORTED              NodeScan_Note = 2
	NodeScan_CERTIFIED_RHEL_CVES_UNAVAILABLE NodeScan_Note = 3
)

// Enum value maps for NodeScan_Note.
var (
	NodeScan_Note_name = map[int32]string{
		0: "UNSET",
		1: "UNSUPPORTED",
		2: "KERNEL_UNSUPPORTED",
		3: "CERTIFIED_RHEL_CVES_UNAVAILABLE",
	}
	NodeScan_Note_value = map[string]int32{
		"UNSET":                           0,
		"UNSUPPORTED":                     1,
		"KERNEL_UNSUPPORTED":              2,
		"CERTIFIED_RHEL_CVES_UNAVAILABLE": 3,
	}
)

func (x NodeScan_Note) Enum() *NodeScan_Note {
	p := new(NodeScan_Note)
	*p = x
	return p
}

func (x NodeScan_Note) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeScan_Note) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_node_proto_enumTypes[1].Descriptor()
}

func (NodeScan_Note) Type() protoreflect.EnumType {
	return &file_storage_node_proto_enumTypes[1]
}

func (x NodeScan_Note) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type NodeScan_Scanner int32

const (
	NodeScan_SCANNER    NodeScan_Scanner = 0
	NodeScan_SCANNER_V4 NodeScan_Scanner = 1
)

// Enum value maps for NodeScan_Scanner.
var (
	NodeScan_Scanner_name = map[int32]string{
		0: "SCANNER",
		1: "SCANNER_V4",
	}
	NodeScan_Scanner_value = map[string]int32{
		"SCANNER":    0,
		"SCANNER_V4": 1,
	}
)

func (x NodeScan_Scanner) Enum() *NodeScan_Scanner {
	p := new(NodeScan_Scanner)
	*p = x
	return p
}

func (x NodeScan_Scanner) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeScan_Scanner) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_node_proto_enumTypes[2].Descriptor()
}

func (NodeScan_Scanner) Type() protoreflect.EnumType {
	return &file_storage_node_proto_enumTypes[2]
}

func (x NodeScan_Scanner) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type NodeInventory_Note int32

const (
	NodeInventory_OS_CVES_UNAVAILABLE             NodeInventory_Note = 0
	NodeInventory_OS_CVES_STALE                   NodeInventory_Note = 1
	NodeInventory_LANGUAGE_CVES_UNAVAILABLE       NodeInventory_Note = 2
	NodeInventory_CERTIFIED_RHEL_SCAN_UNAVAILABLE NodeInventory_Note = 3
)

// Enum value maps for NodeInventory_Note.
var (
	NodeInventory_Note_name = map[int32]string{
		0: "OS_CVES_UNAVAILABLE",
		1: "OS_CVES_STALE",
		2: "LANGUAGE_CVES_UNAVAILABLE",
		3: "CERTIFIED_RHEL_SCAN_UNAVAILABLE",
	}
	NodeInventory_Note_value = map[string]int32{
		"OS_CVES_UNAVAILABLE":             0,
		"OS_CVES_STALE":                   1,
		"LANGUAGE_CVES_UNAVAILABLE":       2,
		"CERTIFIED_RHEL_SCAN_UNAVAILABLE": 3,
	}
)

func (x NodeInventory_Note) Enum() *NodeInventory_Note {
	p := new(NodeInventory_Note)
	*p = x
	return p
}

func (x NodeInventory_Note) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeInventory_Note) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_node_proto_enumTypes[3].Descriptor()
}

func (NodeInventory_Note) Type() protoreflect.EnumType {
	return &file_storage_node_proto_enumTypes[3]
}

func (x NodeInventory_Note) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Node represents information about a node in the cluster.
// next available tag: 28
type Node struct {
	state                              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id                      *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name                    *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Taints                  *[]*Taint              `protobuf:"bytes,3,rep,name=taints"`
	xxx_hidden_ClusterId               *string                `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_ClusterName             *string                `protobuf:"bytes,5,opt,name=cluster_name,json=clusterName"`
	xxx_hidden_Labels                  map[string]string      `protobuf:"bytes,6,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Annotations             map[string]string      `protobuf:"bytes,7,rep,name=annotations" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_JoinedAt                *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=joined_at,json=joinedAt"`
	xxx_hidden_InternalIpAddresses     []string               `protobuf:"bytes,8,rep,name=internal_ip_addresses,json=internalIpAddresses"`
	xxx_hidden_ExternalIpAddresses     []string               `protobuf:"bytes,9,rep,name=external_ip_addresses,json=externalIpAddresses"`
	xxx_hidden_ContainerRuntimeVersion *string                `protobuf:"bytes,10,opt,name=container_runtime_version,json=containerRuntimeVersion"`
	xxx_hidden_ContainerRuntime        *ContainerRuntimeInfo  `protobuf:"bytes,14,opt,name=container_runtime,json=containerRuntime"`
	xxx_hidden_KernelVersion           *string                `protobuf:"bytes,11,opt,name=kernel_version,json=kernelVersion"`
	xxx_hidden_OperatingSystem         *string                `protobuf:"bytes,17,opt,name=operating_system,json=operatingSystem"`
	xxx_hidden_OsImage                 *string                `protobuf:"bytes,12,opt,name=os_image,json=osImage"`
	xxx_hidden_KubeletVersion          *string                `protobuf:"bytes,15,opt,name=kubelet_version,json=kubeletVersion"`
	xxx_hidden_KubeProxyVersion        *string                `protobuf:"bytes,16,opt,name=kube_proxy_version,json=kubeProxyVersion"`
	xxx_hidden_LastUpdated             *timestamppb.Timestamp `protobuf:"bytes,25,opt,name=last_updated,json=lastUpdated"`
	xxx_hidden_K8SUpdated              *timestamppb.Timestamp `protobuf:"bytes,26,opt,name=k8s_updated,json=k8sUpdated"`
	xxx_hidden_Scan                    *NodeScan              `protobuf:"bytes,18,opt,name=scan"`
	xxx_hidden_SetComponents           isNode_SetComponents   `protobuf_oneof:"set_components"`
	xxx_hidden_SetCves                 isNode_SetCves         `protobuf_oneof:"set_cves"`
	xxx_hidden_SetFixable              isNode_SetFixable      `protobuf_oneof:"set_fixable"`
	xxx_hidden_Priority                int64                  `protobuf:"varint,22,opt,name=priority"`
	xxx_hidden_RiskScore               float32                `protobuf:"fixed32,23,opt,name=risk_score,json=riskScore"`
	xxx_hidden_SetTopCvss              isNode_SetTopCvss      `protobuf_oneof:"set_top_cvss"`
	xxx_hidden_Notes                   []Node_Note            `protobuf:"varint,27,rep,packed,name=notes,enum=storage.Node_Note"`
	XXX_raceDetectHookData             protoimpl.RaceDetectHookData
	XXX_presence                       [1]uint32
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_storage_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_storage_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Node) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Node) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Node) GetTaints() []*Taint {
	if x != nil {
		if x.xxx_hidden_Taints != nil {
			return *x.xxx_hidden_Taints
		}
	}
	return nil
}

func (x *Node) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *Node) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *Node) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *Node) GetAnnotations() map[string]string {
	if x != nil {
		return x.xxx_hidden_Annotations
	}
	return nil
}

func (x *Node) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_JoinedAt
	}
	return nil
}

func (x *Node) GetInternalIpAddresses() []string {
	if x != nil {
		return x.xxx_hidden_InternalIpAddresses
	}
	return nil
}

func (x *Node) GetExternalIpAddresses() []string {
	if x != nil {
		return x.xxx_hidden_ExternalIpAddresses
	}
	return nil
}

// Deprecated: Marked as deprecated in storage/node.proto.
func (x *Node) GetContainerRuntimeVersion() string {
	if x != nil {
		if x.xxx_hidden_ContainerRuntimeVersion != nil {
			return *x.xxx_hidden_ContainerRuntimeVersion
		}
		return ""
	}
	return ""
}

func (x *Node) GetContainerRuntime() *ContainerRuntimeInfo {
	if x != nil {
		return x.xxx_hidden_ContainerRuntime
	}
	return nil
}

func (x *Node) GetKernelVersion() string {
	if x != nil {
		if x.xxx_hidden_KernelVersion != nil {
			return *x.xxx_hidden_KernelVersion
		}
		return ""
	}
	return ""
}

func (x *Node) GetOperatingSystem() string {
	if x != nil {
		if x.xxx_hidden_OperatingSystem != nil {
			return *x.xxx_hidden_OperatingSystem
		}
		return ""
	}
	return ""
}

func (x *Node) GetOsImage() string {
	if x != nil {
		if x.xxx_hidden_OsImage != nil {
			return *x.xxx_hidden_OsImage
		}
		return ""
	}
	return ""
}

func (x *Node) GetKubeletVersion() string {
	if x != nil {
		if x.xxx_hidden_KubeletVersion != nil {
			return *x.xxx_hidden_KubeletVersion
		}
		return ""
	}
	return ""
}

func (x *Node) GetKubeProxyVersion() string {
	if x != nil {
		if x.xxx_hidden_KubeProxyVersion != nil {
			return *x.xxx_hidden_KubeProxyVersion
		}
		return ""
	}
	return ""
}

func (x *Node) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastUpdated
	}
	return nil
}

func (x *Node) GetK8SUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_K8SUpdated
	}
	return nil
}

func (x *Node) GetScan() *NodeScan {
	if x != nil {
		return x.xxx_hidden_Scan
	}
	return nil
}

func (x *Node) GetComponents() int32 {
	if x != nil {
		if x, ok := x.xxx_hidden_SetComponents.(*node_Components); ok {
			return x.Components
		}
	}
	return 0
}

func (x *Node) GetCves() int32 {
	if x != nil {
		if x, ok := x.xxx_hidden_SetCves.(*node_Cves); ok {
			return x.Cves
		}
	}
	return 0
}

func (x *Node) GetFixableCves() int32 {
	if x != nil {
		if x, ok := x.xxx_hidden_SetFixable.(*node_FixableCves); ok {
			return x.FixableCves
		}
	}
	return 0
}

func (x *Node) GetPriority() int64 {
	if x != nil {
		return x.xxx_hidden_Priority
	}
	return 0
}

func (x *Node) GetRiskScore() float32 {
	if x != nil {
		return x.xxx_hidden_RiskScore
	}
	return 0
}

func (x *Node) GetTopCvss() float32 {
	if x != nil {
		if x, ok := x.xxx_hidden_SetTopCvss.(*node_TopCvss); ok {
			return x.TopCvss
		}
	}
	return 0
}

func (x *Node) GetNotes() []Node_Note {
	if x != nil {
		return x.xxx_hidden_Notes
	}
	return nil
}

func (x *Node) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 27)
}

func (x *Node) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 27)
}

func (x *Node) SetTaints(v []*Taint) {
	x.xxx_hidden_Taints = &v
}

func (x *Node) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 27)
}

func (x *Node) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 27)
}

func (x *Node) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *Node) SetAnnotations(v map[string]string) {
	x.xxx_hidden_Annotations = v
}

func (x *Node) SetJoinedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_JoinedAt = v
}

func (x *Node) SetInternalIpAddresses(v []string) {
	x.xxx_hidden_InternalIpAddresses = v
}

func (x *Node) SetExternalIpAddresses(v []string) {
	x.xxx_hidden_ExternalIpAddresses = v
}

// Deprecated: Marked as deprecated in storage/node.proto.
func (x *Node) SetContainerRuntimeVersion(v string) {
	x.xxx_hidden_ContainerRuntimeVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 27)
}

func (x *Node) SetContainerRuntime(v *ContainerRuntimeInfo) {
	x.xxx_hidden_ContainerRuntime = v
}

func (x *Node) SetKernelVersion(v string) {
	x.xxx_hidden_KernelVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 27)
}

func (x *Node) SetOperatingSystem(v string) {
	x.xxx_hidden_OperatingSystem = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 27)
}

func (x *Node) SetOsImage(v string) {
	x.xxx_hidden_OsImage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 27)
}

func (x *Node) SetKubeletVersion(v string) {
	x.xxx_hidden_KubeletVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 27)
}

func (x *Node) SetKubeProxyVersion(v string) {
	x.xxx_hidden_KubeProxyVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 16, 27)
}

func (x *Node) SetLastUpdated(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastUpdated = v
}

func (x *Node) SetK8SUpdated(v *timestamppb.Timestamp) {
	x.xxx_hidden_K8SUpdated = v
}

func (x *Node) SetScan(v *NodeScan) {
	x.xxx_hidden_Scan = v
}

func (x *Node) SetComponents(v int32) {
	x.xxx_hidden_SetComponents = &node_Components{v}
}

func (x *Node) SetCves(v int32) {
	x.xxx_hidden_SetCves = &node_Cves{v}
}

func (x *Node) SetFixableCves(v int32) {
	x.xxx_hidden_SetFixable = &node_FixableCves{v}
}

func (x *Node) SetPriority(v int64) {
	x.xxx_hidden_Priority = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 23, 27)
}

func (x *Node) SetRiskScore(v float32) {
	x.xxx_hidden_RiskScore = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 24, 27)
}

func (x *Node) SetTopCvss(v float32) {
	x.xxx_hidden_SetTopCvss = &node_TopCvss{v}
}

func (x *Node) SetNotes(v []Node_Note) {
	x.xxx_hidden_Notes = v
}

func (x *Node) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Node) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Node) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Node) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Node) HasJoinedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_JoinedAt != nil
}

// Deprecated: Marked as deprecated in storage/node.proto.
func (x *Node) HasContainerRuntimeVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *Node) HasContainerRuntime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ContainerRuntime != nil
}

func (x *Node) HasKernelVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *Node) HasOperatingSystem() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *Node) HasOsImage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *Node) HasKubeletVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *Node) HasKubeProxyVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 16)
}

func (x *Node) HasLastUpdated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastUpdated != nil
}

func (x *Node) HasK8SUpdated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_K8SUpdated != nil
}

func (x *Node) HasScan() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Scan != nil
}

func (x *Node) HasSetComponents() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SetComponents != nil
}

func (x *Node) HasComponents() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_SetComponents.(*node_Components)
	return ok
}

func (x *Node) HasSetCves() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SetCves != nil
}

func (x *Node) HasCves() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_SetCves.(*node_Cves)
	return ok
}

func (x *Node) HasSetFixable() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SetFixable != nil
}

func (x *Node) HasFixableCves() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_SetFixable.(*node_FixableCves)
	return ok
}

func (x *Node) HasPriority() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 23)
}

func (x *Node) HasRiskScore() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 24)
}

func (x *Node) HasSetTopCvss() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SetTopCvss != nil
}

func (x *Node) HasTopCvss() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_SetTopCvss.(*node_TopCvss)
	return ok
}

func (x *Node) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Node) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Node) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ClusterId = nil
}

func (x *Node) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ClusterName = nil
}

func (x *Node) ClearJoinedAt() {
	x.xxx_hidden_JoinedAt = nil
}

// Deprecated: Marked as deprecated in storage/node.proto.
func (x *Node) ClearContainerRuntimeVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_ContainerRuntimeVersion = nil
}

func (x *Node) ClearContainerRuntime() {
	x.xxx_hidden_ContainerRuntime = nil
}

func (x *Node) ClearKernelVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_KernelVersion = nil
}

func (x *Node) ClearOperatingSystem() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_OperatingSystem = nil
}

func (x *Node) ClearOsImage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_OsImage = nil
}

func (x *Node) ClearKubeletVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_KubeletVersion = nil
}

func (x *Node) ClearKubeProxyVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 16)
	x.xxx_hidden_KubeProxyVersion = nil
}

func (x *Node) ClearLastUpdated() {
	x.xxx_hidden_LastUpdated = nil
}

func (x *Node) ClearK8SUpdated() {
	x.xxx_hidden_K8SUpdated = nil
}

func (x *Node) ClearScan() {
	x.xxx_hidden_Scan = nil
}

func (x *Node) ClearSetComponents() {
	x.xxx_hidden_SetComponents = nil
}

func (x *Node) ClearComponents() {
	if _, ok := x.xxx_hidden_SetComponents.(*node_Components); ok {
		x.xxx_hidden_SetComponents = nil
	}
}

func (x *Node) ClearSetCves() {
	x.xxx_hidden_SetCves = nil
}

func (x *Node) ClearCves() {
	if _, ok := x.xxx_hidden_SetCves.(*node_Cves); ok {
		x.xxx_hidden_SetCves = nil
	}
}

func (x *Node) ClearSetFixable() {
	x.xxx_hidden_SetFixable = nil
}

func (x *Node) ClearFixableCves() {
	if _, ok := x.xxx_hidden_SetFixable.(*node_FixableCves); ok {
		x.xxx_hidden_SetFixable = nil
	}
}

func (x *Node) ClearPriority() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 23)
	x.xxx_hidden_Priority = 0
}

func (x *Node) ClearRiskScore() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 24)
	x.xxx_hidden_RiskScore = 0
}

func (x *Node) ClearSetTopCvss() {
	x.xxx_hidden_SetTopCvss = nil
}

func (x *Node) ClearTopCvss() {
	if _, ok := x.xxx_hidden_SetTopCvss.(*node_TopCvss); ok {
		x.xxx_hidden_SetTopCvss = nil
	}
}

const Node_SetComponents_not_set_case case_Node_SetComponents = 0
const Node_Components_case case_Node_SetComponents = 19

func (x *Node) WhichSetComponents() case_Node_SetComponents {
	if x == nil {
		return Node_SetComponents_not_set_case
	}
	switch x.xxx_hidden_SetComponents.(type) {
	case *node_Components:
		return Node_Components_case
	default:
		return Node_SetComponents_not_set_case
	}
}

const Node_SetCves_not_set_case case_Node_SetCves = 0
const Node_Cves_case case_Node_SetCves = 20

func (x *Node) WhichSetCves() case_Node_SetCves {
	if x == nil {
		return Node_SetCves_not_set_case
	}
	switch x.xxx_hidden_SetCves.(type) {
	case *node_Cves:
		return Node_Cves_case
	default:
		return Node_SetCves_not_set_case
	}
}

const Node_SetFixable_not_set_case case_Node_SetFixable = 0
const Node_FixableCves_case case_Node_SetFixable = 21

func (x *Node) WhichSetFixable() case_Node_SetFixable {
	if x == nil {
		return Node_SetFixable_not_set_case
	}
	switch x.xxx_hidden_SetFixable.(type) {
	case *node_FixableCves:
		return Node_FixableCves_case
	default:
		return Node_SetFixable_not_set_case
	}
}

const Node_SetTopCvss_not_set_case case_Node_SetTopCvss = 0
const Node_TopCvss_case case_Node_SetTopCvss = 24

func (x *Node) WhichSetTopCvss() case_Node_SetTopCvss {
	if x == nil {
		return Node_SetTopCvss_not_set_case
	}
	switch x.xxx_hidden_SetTopCvss.(type) {
	case *node_TopCvss:
		return Node_TopCvss_case
	default:
		return Node_SetTopCvss_not_set_case
	}
}

type Node_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// A unique ID identifying this node.
	Id *string
	// The (host)name of the node. Might or might not be the same as ID.
	Name *string
	// Taints on the host
	Taints      []*Taint
	ClusterId   *string
	ClusterName *string
	Labels      map[string]string
	Annotations map[string]string
	// When the cluster reported the node was added
	JoinedAt *timestamppb.Timestamp
	// node internal IP addresses
	InternalIpAddresses []string
	// node external IP addresses
	ExternalIpAddresses []string
	// From NodeInfo
	//
	// Deprecated: Marked as deprecated in storage/node.proto.
	ContainerRuntimeVersion *string
	ContainerRuntime        *ContainerRuntimeInfo
	KernelVersion           *string
	// From NodeInfo. Operating system reported by the node (ex: linux).
	OperatingSystem *string
	// From NodeInfo. OS image reported by the node from /etc/os-release.
	OsImage          *string
	KubeletVersion   *string
	KubeProxyVersion *string
	LastUpdated      *timestamppb.Timestamp
	// Time we received an update from Kubernetes.
	K8SUpdated *timestamppb.Timestamp
	Scan       *NodeScan
	// Fields of oneof xxx_hidden_SetComponents:
	Components *int32
	// -- end of xxx_hidden_SetComponents
	// Fields of oneof xxx_hidden_SetCves:
	Cves *int32
	// -- end of xxx_hidden_SetCves
	// Fields of oneof xxx_hidden_SetFixable:
	FixableCves *int32
	// -- end of xxx_hidden_SetFixable
	Priority  *int64
	RiskScore *float32
	// Fields of oneof xxx_hidden_SetTopCvss:
	TopCvss *float32
	// -- end of xxx_hidden_SetTopCvss
	Notes []Node_Note
}

func (b0 Node_builder) Build() *Node {
	m0 := &Node{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 27)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 27)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Taints = &b.Taints
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 27)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 27)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Annotations = b.Annotations
	x.xxx_hidden_JoinedAt = b.JoinedAt
	x.xxx_hidden_InternalIpAddresses = b.InternalIpAddresses
	x.xxx_hidden_ExternalIpAddresses = b.ExternalIpAddresses
	if b.ContainerRuntimeVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 27)
		x.xxx_hidden_ContainerRuntimeVersion = b.ContainerRuntimeVersion
	}
	x.xxx_hidden_ContainerRuntime = b.ContainerRuntime
	if b.KernelVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 27)
		x.xxx_hidden_KernelVersion = b.KernelVersion
	}
	if b.OperatingSystem != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 27)
		x.xxx_hidden_OperatingSystem = b.OperatingSystem
	}
	if b.OsImage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 27)
		x.xxx_hidden_OsImage = b.OsImage
	}
	if b.KubeletVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 27)
		x.xxx_hidden_KubeletVersion = b.KubeletVersion
	}
	if b.KubeProxyVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 16, 27)
		x.xxx_hidden_KubeProxyVersion = b.KubeProxyVersion
	}
	x.xxx_hidden_LastUpdated = b.LastUpdated
	x.xxx_hidden_K8SUpdated = b.K8SUpdated
	x.xxx_hidden_Scan = b.Scan
	if b.Components != nil {
		x.xxx_hidden_SetComponents = &node_Components{*b.Components}
	}
	if b.Cves != nil {
		x.xxx_hidden_SetCves = &node_Cves{*b.Cves}
	}
	if b.FixableCves != nil {
		x.xxx_hidden_SetFixable = &node_FixableCves{*b.FixableCves}
	}
	if b.Priority != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 23, 27)
		x.xxx_hidden_Priority = *b.Priority
	}
	if b.RiskScore != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 24, 27)
		x.xxx_hidden_RiskScore = *b.RiskScore
	}
	if b.TopCvss != nil {
		x.xxx_hidden_SetTopCvss = &node_TopCvss{*b.TopCvss}
	}
	x.xxx_hidden_Notes = b.Notes
	return m0
}

type case_Node_SetComponents protoreflect.FieldNumber

func (x case_Node_SetComponents) String() string {
	md := file_storage_node_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type case_Node_SetCves protoreflect.FieldNumber

func (x case_Node_SetCves) String() string {
	md := file_storage_node_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type case_Node_SetFixable protoreflect.FieldNumber

func (x case_Node_SetFixable) String() string {
	md := file_storage_node_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type case_Node_SetTopCvss protoreflect.FieldNumber

func (x case_Node_SetTopCvss) String() string {
	md := file_storage_node_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isNode_SetComponents interface {
	isNode_SetComponents()
}

type node_Components struct {
	Components int32 `protobuf:"varint,19,opt,name=components,oneof" search:"Component Count,store,hidden"` // @gotags: search:"Component Count,store,hidden"
}

func (*node_Components) isNode_SetComponents() {}

type isNode_SetCves interface {
	isNode_SetCves()
}

type node_Cves struct {
	Cves int32 `protobuf:"varint,20,opt,name=cves,oneof" search:"CVE Count,store,hidden"` // @gotags: search:"CVE Count,store,hidden"
}

func (*node_Cves) isNode_SetCves() {}

type isNode_SetFixable interface {
	isNode_SetFixable()
}

type node_FixableCves struct {
	FixableCves int32 `protobuf:"varint,21,opt,name=fixable_cves,json=fixableCves,oneof" search:"Fixable CVE Count,store,hidden"` // @gotags: search:"Fixable CVE Count,store,hidden"
}

func (*node_FixableCves) isNode_SetFixable() {}

type isNode_SetTopCvss interface {
	isNode_SetTopCvss()
}

type node_TopCvss struct {
	TopCvss float32 `protobuf:"fixed32,24,opt,name=top_cvss,json=topCvss,oneof" search:"Node Top CVSS,store"` // @gotags: search:"Node Top CVSS,store"
}

func (*node_TopCvss) isNode_SetTopCvss() {}

// Next tag: 5
type NodeScan struct {
	state                      protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_ScanTime        *timestamppb.Timestamp        `protobuf:"bytes,1,opt,name=scan_time,json=scanTime"`
	xxx_hidden_OperatingSystem *string                       `protobuf:"bytes,3,opt,name=operating_system,json=operatingSystem"`
	xxx_hidden_Components      *[]*EmbeddedNodeScanComponent `protobuf:"bytes,2,rep,name=components"`
	xxx_hidden_Notes           []NodeScan_Note               `protobuf:"varint,4,rep,packed,name=notes,enum=storage.NodeScan_Note"`
	xxx_hidden_ScannerVersion  NodeScan_Scanner              `protobuf:"varint,5,opt,name=scanner_version,json=scannerVersion,enum=storage.NodeScan_Scanner"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *NodeScan) Reset() {
	*x = NodeScan{}
	mi := &file_storage_node_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeScan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeScan) ProtoMessage() {}

func (x *NodeScan) ProtoReflect() protoreflect.Message {
	mi := &file_storage_node_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NodeScan) GetScanTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ScanTime
	}
	return nil
}

func (x *NodeScan) GetOperatingSystem() string {
	if x != nil {
		if x.xxx_hidden_OperatingSystem != nil {
			return *x.xxx_hidden_OperatingSystem
		}
		return ""
	}
	return ""
}

func (x *NodeScan) GetComponents() []*EmbeddedNodeScanComponent {
	if x != nil {
		if x.xxx_hidden_Components != nil {
			return *x.xxx_hidden_Components
		}
	}
	return nil
}

func (x *NodeScan) GetNotes() []NodeScan_Note {
	if x != nil {
		return x.xxx_hidden_Notes
	}
	return nil
}

func (x *NodeScan) GetScannerVersion() NodeScan_Scanner {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_ScannerVersion
		}
	}
	return NodeScan_SCANNER
}

func (x *NodeScan) SetScanTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_ScanTime = v
}

func (x *NodeScan) SetOperatingSystem(v string) {
	x.xxx_hidden_OperatingSystem = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *NodeScan) SetComponents(v []*EmbeddedNodeScanComponent) {
	x.xxx_hidden_Components = &v
}

func (x *NodeScan) SetNotes(v []NodeScan_Note) {
	x.xxx_hidden_Notes = v
}

func (x *NodeScan) SetScannerVersion(v NodeScan_Scanner) {
	x.xxx_hidden_ScannerVersion = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *NodeScan) HasScanTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ScanTime != nil
}

func (x *NodeScan) HasOperatingSystem() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NodeScan) HasScannerVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *NodeScan) ClearScanTime() {
	x.xxx_hidden_ScanTime = nil
}

func (x *NodeScan) ClearOperatingSystem() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OperatingSystem = nil
}

func (x *NodeScan) ClearScannerVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ScannerVersion = NodeScan_SCANNER
}

type NodeScan_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScanTime        *timestamppb.Timestamp
	OperatingSystem *string
	Components      []*EmbeddedNodeScanComponent
	Notes           []NodeScan_Note
	ScannerVersion  *NodeScan_Scanner
}

func (b0 NodeScan_builder) Build() *NodeScan {
	m0 := &NodeScan{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ScanTime = b.ScanTime
	if b.OperatingSystem != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_OperatingSystem = b.OperatingSystem
	}
	x.xxx_hidden_Components = &b.Components
	x.xxx_hidden_Notes = b.Notes
	if b.ScannerVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_ScannerVersion = *b.ScannerVersion
	}
	return m0
}

type NodeInventory struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_NodeId      *string                   `protobuf:"bytes,1,opt,name=node_id,json=nodeId"`
	xxx_hidden_NodeName    *string                   `protobuf:"bytes,2,opt,name=node_name,json=nodeName"`
	xxx_hidden_ScanTime    *timestamppb.Timestamp    `protobuf:"bytes,3,opt,name=scan_time,json=scanTime"`
	xxx_hidden_Components  *NodeInventory_Components `protobuf:"bytes,4,opt,name=components"`
	xxx_hidden_Notes       []NodeInventory_Note      `protobuf:"varint,5,rep,packed,name=notes,enum=storage.NodeInventory_Note"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NodeInventory) Reset() {
	*x = NodeInventory{}
	mi := &file_storage_node_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInventory) ProtoMessage() {}

func (x *NodeInventory) ProtoReflect() protoreflect.Message {
	mi := &file_storage_node_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NodeInventory) GetNodeId() string {
	if x != nil {
		if x.xxx_hidden_NodeId != nil {
			return *x.xxx_hidden_NodeId
		}
		return ""
	}
	return ""
}

func (x *NodeInventory) GetNodeName() string {
	if x != nil {
		if x.xxx_hidden_NodeName != nil {
			return *x.xxx_hidden_NodeName
		}
		return ""
	}
	return ""
}

func (x *NodeInventory) GetScanTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ScanTime
	}
	return nil
}

func (x *NodeInventory) GetComponents() *NodeInventory_Components {
	if x != nil {
		return x.xxx_hidden_Components
	}
	return nil
}

func (x *NodeInventory) GetNotes() []NodeInventory_Note {
	if x != nil {
		return x.xxx_hidden_Notes
	}
	return nil
}

func (x *NodeInventory) SetNodeId(v string) {
	x.xxx_hidden_NodeId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *NodeInventory) SetNodeName(v string) {
	x.xxx_hidden_NodeName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *NodeInventory) SetScanTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_ScanTime = v
}

func (x *NodeInventory) SetComponents(v *NodeInventory_Components) {
	x.xxx_hidden_Components = v
}

func (x *NodeInventory) SetNotes(v []NodeInventory_Note) {
	x.xxx_hidden_Notes = v
}

func (x *NodeInventory) HasNodeId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NodeInventory) HasNodeName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NodeInventory) HasScanTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ScanTime != nil
}

func (x *NodeInventory) HasComponents() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Components != nil
}

func (x *NodeInventory) ClearNodeId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_NodeId = nil
}

func (x *NodeInventory) ClearNodeName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_NodeName = nil
}

func (x *NodeInventory) ClearScanTime() {
	x.xxx_hidden_ScanTime = nil
}

func (x *NodeInventory) ClearComponents() {
	x.xxx_hidden_Components = nil
}

type NodeInventory_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	NodeId   *string
	NodeName *string
	ScanTime *timestamppb.Timestamp
	// Components represents a subset of the scannerV1.Components proto message containing only fields required for RHCOS node scanning.
	// Keep scanner Components and NodeInventory_Components in sync to the degree defined by fuctions:
	// func convertAndDedupRHELComponents (in pkg 'nodeinventorizer'), and the respective reverse convertion in pkg 'clairify'.
	// We are not using scannerV1.Components here for the following reasons:
	// - to avoid conflicts between v1 and scannerV1 APIs when generating the code in central/graphql/resolvers/generated.go
	// - to not expose scanner v1 API over stackrox graphql API
	Components *NodeInventory_Components
	// Note represents scannerV1.Note
	Notes []NodeInventory_Note
}

func (b0 NodeInventory_builder) Build() *NodeInventory {
	m0 := &NodeInventory{}
	b, x := &b0, m0
	_, _ = b, x
	if b.NodeId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_NodeId = b.NodeId
	}
	if b.NodeName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_NodeName = b.NodeName
	}
	x.xxx_hidden_ScanTime = b.ScanTime
	x.xxx_hidden_Components = b.Components
	x.xxx_hidden_Notes = b.Notes
	return m0
}

type EmbeddedNodeScanComponent struct {
	state                      protoimpl.MessageState                 `protogen:"opaque.v1"`
	xxx_hidden_Name            *string                                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Version         *string                                `protobuf:"bytes,2,opt,name=version"`
	xxx_hidden_Vulns           *[]*EmbeddedVulnerability              `protobuf:"bytes,3,rep,name=vulns"`
	xxx_hidden_Vulnerabilities *[]*NodeVulnerability                  `protobuf:"bytes,7,rep,name=vulnerabilities"`
	xxx_hidden_Priority        int64                                  `protobuf:"varint,4,opt,name=priority"`
	xxx_hidden_SetTopCvss      isEmbeddedNodeScanComponent_SetTopCvss `protobuf_oneof:"set_top_cvss"`
	xxx_hidden_RiskScore       float32                                `protobuf:"fixed32,6,opt,name=risk_score,json=riskScore"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *EmbeddedNodeScanComponent) Reset() {
	*x = EmbeddedNodeScanComponent{}
	mi := &file_storage_node_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmbeddedNodeScanComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddedNodeScanComponent) ProtoMessage() {}

func (x *EmbeddedNodeScanComponent) ProtoReflect() protoreflect.Message {
	mi := &file_storage_node_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EmbeddedNodeScanComponent) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *EmbeddedNodeScanComponent) GetVersion() string {
	if x != nil {
		if x.xxx_hidden_Version != nil {
			return *x.xxx_hidden_Version
		}
		return ""
	}
	return ""
}

func (x *EmbeddedNodeScanComponent) GetVulns() []*EmbeddedVulnerability {
	if x != nil {
		if x.xxx_hidden_Vulns != nil {
			return *x.xxx_hidden_Vulns
		}
	}
	return nil
}

func (x *EmbeddedNodeScanComponent) GetVulnerabilities() []*NodeVulnerability {
	if x != nil {
		if x.xxx_hidden_Vulnerabilities != nil {
			return *x.xxx_hidden_Vulnerabilities
		}
	}
	return nil
}

func (x *EmbeddedNodeScanComponent) GetPriority() int64 {
	if x != nil {
		return x.xxx_hidden_Priority
	}
	return 0
}

func (x *EmbeddedNodeScanComponent) GetTopCvss() float32 {
	if x != nil {
		if x, ok := x.xxx_hidden_SetTopCvss.(*embeddedNodeScanComponent_TopCvss); ok {
			return x.TopCvss
		}
	}
	return 0
}

func (x *EmbeddedNodeScanComponent) GetRiskScore() float32 {
	if x != nil {
		return x.xxx_hidden_RiskScore
	}
	return 0
}

func (x *EmbeddedNodeScanComponent) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *EmbeddedNodeScanComponent) SetVersion(v string) {
	x.xxx_hidden_Version = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *EmbeddedNodeScanComponent) SetVulns(v []*EmbeddedVulnerability) {
	x.xxx_hidden_Vulns = &v
}

func (x *EmbeddedNodeScanComponent) SetVulnerabilities(v []*NodeVulnerability) {
	x.xxx_hidden_Vulnerabilities = &v
}

func (x *EmbeddedNodeScanComponent) SetPriority(v int64) {
	x.xxx_hidden_Priority = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *EmbeddedNodeScanComponent) SetTopCvss(v float32) {
	x.xxx_hidden_SetTopCvss = &embeddedNodeScanComponent_TopCvss{v}
}

func (x *EmbeddedNodeScanComponent) SetRiskScore(v float32) {
	x.xxx_hidden_RiskScore = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *EmbeddedNodeScanComponent) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *EmbeddedNodeScanComponent) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *EmbeddedNodeScanComponent) HasPriority() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *EmbeddedNodeScanComponent) HasSetTopCvss() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SetTopCvss != nil
}

func (x *EmbeddedNodeScanComponent) HasTopCvss() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_SetTopCvss.(*embeddedNodeScanComponent_TopCvss)
	return ok
}

func (x *EmbeddedNodeScanComponent) HasRiskScore() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *EmbeddedNodeScanComponent) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *EmbeddedNodeScanComponent) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Version = nil
}

func (x *EmbeddedNodeScanComponent) ClearPriority() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Priority = 0
}

func (x *EmbeddedNodeScanComponent) ClearSetTopCvss() {
	x.xxx_hidden_SetTopCvss = nil
}

func (x *EmbeddedNodeScanComponent) ClearTopCvss() {
	if _, ok := x.xxx_hidden_SetTopCvss.(*embeddedNodeScanComponent_TopCvss); ok {
		x.xxx_hidden_SetTopCvss = nil
	}
}

func (x *EmbeddedNodeScanComponent) ClearRiskScore() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_RiskScore = 0
}

const EmbeddedNodeScanComponent_SetTopCvss_not_set_case case_EmbeddedNodeScanComponent_SetTopCvss = 0
const EmbeddedNodeScanComponent_TopCvss_case case_EmbeddedNodeScanComponent_SetTopCvss = 5

func (x *EmbeddedNodeScanComponent) WhichSetTopCvss() case_EmbeddedNodeScanComponent_SetTopCvss {
	if x == nil {
		return EmbeddedNodeScanComponent_SetTopCvss_not_set_case
	}
	switch x.xxx_hidden_SetTopCvss.(type) {
	case *embeddedNodeScanComponent_TopCvss:
		return EmbeddedNodeScanComponent_TopCvss_case
	default:
		return EmbeddedNodeScanComponent_SetTopCvss_not_set_case
	}
}

type EmbeddedNodeScanComponent_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name            *string
	Version         *string
	Vulns           []*EmbeddedVulnerability
	Vulnerabilities []*NodeVulnerability
	Priority        *int64
	// Fields of oneof xxx_hidden_SetTopCvss:
	TopCvss *float32
	// -- end of xxx_hidden_SetTopCvss
	RiskScore *float32
}

func (b0 EmbeddedNodeScanComponent_builder) Build() *EmbeddedNodeScanComponent {
	m0 := &EmbeddedNodeScanComponent{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Version = b.Version
	}
	x.xxx_hidden_Vulns = &b.Vulns
	x.xxx_hidden_Vulnerabilities = &b.Vulnerabilities
	if b.Priority != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_Priority = *b.Priority
	}
	if b.TopCvss != nil {
		x.xxx_hidden_SetTopCvss = &embeddedNodeScanComponent_TopCvss{*b.TopCvss}
	}
	if b.RiskScore != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_RiskScore = *b.RiskScore
	}
	return m0
}

type case_EmbeddedNodeScanComponent_SetTopCvss protoreflect.FieldNumber

func (x case_EmbeddedNodeScanComponent_SetTopCvss) String() string {
	md := file_storage_node_proto_msgTypes[3].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isEmbeddedNodeScanComponent_SetTopCvss interface {
	isEmbeddedNodeScanComponent_SetTopCvss()
}

type embeddedNodeScanComponent_TopCvss struct {
	TopCvss float32 `protobuf:"fixed32,5,opt,name=top_cvss,json=topCvss,oneof"`
}

func (*embeddedNodeScanComponent_TopCvss) isEmbeddedNodeScanComponent_SetTopCvss() {}

type NodeInventory_Components struct {
	state                      protoimpl.MessageState                     `protogen:"opaque.v1"`
	xxx_hidden_Namespace       *string                                    `protobuf:"bytes,1,opt,name=namespace"`
	xxx_hidden_RhelComponents  *[]*NodeInventory_Components_RHELComponent `protobuf:"bytes,2,rep,name=rhel_components,json=rhelComponents"`
	xxx_hidden_RhelContentSets []string                                   `protobuf:"bytes,3,rep,name=rhel_content_sets,json=rhelContentSets"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *NodeInventory_Components) Reset() {
	*x = NodeInventory_Components{}
	mi := &file_storage_node_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInventory_Components) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInventory_Components) ProtoMessage() {}

func (x *NodeInventory_Components) ProtoReflect() protoreflect.Message {
	mi := &file_storage_node_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NodeInventory_Components) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *NodeInventory_Components) GetRhelComponents() []*NodeInventory_Components_RHELComponent {
	if x != nil {
		if x.xxx_hidden_RhelComponents != nil {
			return *x.xxx_hidden_RhelComponents
		}
	}
	return nil
}

func (x *NodeInventory_Components) GetRhelContentSets() []string {
	if x != nil {
		return x.xxx_hidden_RhelContentSets
	}
	return nil
}

func (x *NodeInventory_Components) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *NodeInventory_Components) SetRhelComponents(v []*NodeInventory_Components_RHELComponent) {
	x.xxx_hidden_RhelComponents = &v
}

func (x *NodeInventory_Components) SetRhelContentSets(v []string) {
	x.xxx_hidden_RhelContentSets = v
}

func (x *NodeInventory_Components) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NodeInventory_Components) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Namespace = nil
}

type NodeInventory_Components_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Namespace       *string
	RhelComponents  []*NodeInventory_Components_RHELComponent
	RhelContentSets []string
}

func (b0 NodeInventory_Components_builder) Build() *NodeInventory_Components {
	m0 := &NodeInventory_Components{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Namespace = b.Namespace
	}
	x.xxx_hidden_RhelComponents = &b.RhelComponents
	x.xxx_hidden_RhelContentSets = b.RhelContentSets
	return m0
}

type NodeInventory_Components_RHELComponent struct {
	state                  protoimpl.MessageState                                `protogen:"opaque.v1"`
	xxx_hidden_Id          int64                                                 `protobuf:"varint,1,opt,name=id"`
	xxx_hidden_Name        *string                                               `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Namespace   *string                                               `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Version     *string                                               `protobuf:"bytes,4,opt,name=version"`
	xxx_hidden_Arch        *string                                               `protobuf:"bytes,5,opt,name=arch"`
	xxx_hidden_Module      *string                                               `protobuf:"bytes,6,opt,name=module"`
	xxx_hidden_AddedBy     *string                                               `protobuf:"bytes,7,opt,name=added_by,json=addedBy"`
	xxx_hidden_Executables *[]*NodeInventory_Components_RHELComponent_Executable `protobuf:"bytes,8,rep,name=executables"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NodeInventory_Components_RHELComponent) Reset() {
	*x = NodeInventory_Components_RHELComponent{}
	mi := &file_storage_node_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInventory_Components_RHELComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInventory_Components_RHELComponent) ProtoMessage() {}

func (x *NodeInventory_Components_RHELComponent) ProtoReflect() protoreflect.Message {
	mi := &file_storage_node_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NodeInventory_Components_RHELComponent) GetId() int64 {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return 0
}

func (x *NodeInventory_Components_RHELComponent) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *NodeInventory_Components_RHELComponent) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *NodeInventory_Components_RHELComponent) GetVersion() string {
	if x != nil {
		if x.xxx_hidden_Version != nil {
			return *x.xxx_hidden_Version
		}
		return ""
	}
	return ""
}

func (x *NodeInventory_Components_RHELComponent) GetArch() string {
	if x != nil {
		if x.xxx_hidden_Arch != nil {
			return *x.xxx_hidden_Arch
		}
		return ""
	}
	return ""
}

func (x *NodeInventory_Components_RHELComponent) GetModule() string {
	if x != nil {
		if x.xxx_hidden_Module != nil {
			return *x.xxx_hidden_Module
		}
		return ""
	}
	return ""
}

func (x *NodeInventory_Components_RHELComponent) GetAddedBy() string {
	if x != nil {
		if x.xxx_hidden_AddedBy != nil {
			return *x.xxx_hidden_AddedBy
		}
		return ""
	}
	return ""
}

func (x *NodeInventory_Components_RHELComponent) GetExecutables() []*NodeInventory_Components_RHELComponent_Executable {
	if x != nil {
		if x.xxx_hidden_Executables != nil {
			return *x.xxx_hidden_Executables
		}
	}
	return nil
}

func (x *NodeInventory_Components_RHELComponent) SetId(v int64) {
	x.xxx_hidden_Id = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *NodeInventory_Components_RHELComponent) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *NodeInventory_Components_RHELComponent) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *NodeInventory_Components_RHELComponent) SetVersion(v string) {
	x.xxx_hidden_Version = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *NodeInventory_Components_RHELComponent) SetArch(v string) {
	x.xxx_hidden_Arch = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *NodeInventory_Components_RHELComponent) SetModule(v string) {
	x.xxx_hidden_Module = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *NodeInventory_Components_RHELComponent) SetAddedBy(v string) {
	x.xxx_hidden_AddedBy = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *NodeInventory_Components_RHELComponent) SetExecutables(v []*NodeInventory_Components_RHELComponent_Executable) {
	x.xxx_hidden_Executables = &v
}

func (x *NodeInventory_Components_RHELComponent) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NodeInventory_Components_RHELComponent) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NodeInventory_Components_RHELComponent) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *NodeInventory_Components_RHELComponent) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *NodeInventory_Components_RHELComponent) HasArch() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *NodeInventory_Components_RHELComponent) HasModule() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *NodeInventory_Components_RHELComponent) HasAddedBy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *NodeInventory_Components_RHELComponent) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = 0
}

func (x *NodeInventory_Components_RHELComponent) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *NodeInventory_Components_RHELComponent) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *NodeInventory_Components_RHELComponent) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Version = nil
}

func (x *NodeInventory_Components_RHELComponent) ClearArch() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Arch = nil
}

func (x *NodeInventory_Components_RHELComponent) ClearModule() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Module = nil
}

func (x *NodeInventory_Components_RHELComponent) ClearAddedBy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_AddedBy = nil
}

type NodeInventory_Components_RHELComponent_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *int64
	Name        *string
	Namespace   *string
	Version     *string
	Arch        *string
	Module      *string
	AddedBy     *string
	Executables []*NodeInventory_Components_RHELComponent_Executable
}

func (b0 NodeInventory_Components_RHELComponent_builder) Build() *NodeInventory_Components_RHELComponent {
	m0 := &NodeInventory_Components_RHELComponent{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_Id = *b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_Name = b.Name
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_Version = b.Version
	}
	if b.Arch != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_Arch = b.Arch
	}
	if b.Module != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_Module = b.Module
	}
	if b.AddedBy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_AddedBy = b.AddedBy
	}
	x.xxx_hidden_Executables = &b.Executables
	return m0
}

type NodeInventory_Components_RHELComponent_Executable struct {
	state                       protoimpl.MessageState                                                   `protogen:"opaque.v1"`
	xxx_hidden_Path             *string                                                                  `protobuf:"bytes,1,opt,name=path"`
	xxx_hidden_RequiredFeatures *[]*NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion `protobuf:"bytes,2,rep,name=required_features,json=requiredFeatures"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *NodeInventory_Components_RHELComponent_Executable) Reset() {
	*x = NodeInventory_Components_RHELComponent_Executable{}
	mi := &file_storage_node_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInventory_Components_RHELComponent_Executable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInventory_Components_RHELComponent_Executable) ProtoMessage() {}

func (x *NodeInventory_Components_RHELComponent_Executable) ProtoReflect() protoreflect.Message {
	mi := &file_storage_node_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NodeInventory_Components_RHELComponent_Executable) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *NodeInventory_Components_RHELComponent_Executable) GetRequiredFeatures() []*NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion {
	if x != nil {
		if x.xxx_hidden_RequiredFeatures != nil {
			return *x.xxx_hidden_RequiredFeatures
		}
	}
	return nil
}

func (x *NodeInventory_Components_RHELComponent_Executable) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *NodeInventory_Components_RHELComponent_Executable) SetRequiredFeatures(v []*NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion) {
	x.xxx_hidden_RequiredFeatures = &v
}

func (x *NodeInventory_Components_RHELComponent_Executable) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NodeInventory_Components_RHELComponent_Executable) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Path = nil
}

type NodeInventory_Components_RHELComponent_Executable_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Path             *string
	RequiredFeatures []*NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion
}

func (b0 NodeInventory_Components_RHELComponent_Executable_builder) Build() *NodeInventory_Components_RHELComponent_Executable {
	m0 := &NodeInventory_Components_RHELComponent_Executable{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Path = b.Path
	}
	x.xxx_hidden_RequiredFeatures = &b.RequiredFeatures
	return m0
}

type NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Version     *string                `protobuf:"bytes,2,opt,name=version"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion) Reset() {
	*x = NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion{}
	mi := &file_storage_node_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion) ProtoMessage() {}

func (x *NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion) ProtoReflect() protoreflect.Message {
	mi := &file_storage_node_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion) GetVersion() string {
	if x != nil {
		if x.xxx_hidden_Version != nil {
			return *x.xxx_hidden_Version
		}
		return ""
	}
	return ""
}

func (x *NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion) SetVersion(v string) {
	x.xxx_hidden_Version = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Version = nil
}

type NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name    *string
	Version *string
}

func (b0 NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion_builder) Build() *NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion {
	m0 := &NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Version = b.Version
	}
	return m0
}

var File_storage_node_proto protoreflect.FileDescriptor

const file_storage_node_proto_rawDesc = "" +
	"\n" +
	"\x12storage/node.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1fstorage/container_runtime.proto\x1a\x14storage/taints.proto\x1a\x1bstorage/vulnerability.proto\x1a!google/protobuf/go_features.proto\"\xd3\n" +
	"\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12&\n" +
	"\x06taints\x18\x03 \x03(\v2\x0e.storage.TaintR\x06taints\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x04 \x01(\tR\tclusterId\x12!\n" +
	"\fcluster_name\x18\x05 \x01(\tR\vclusterName\x121\n" +
	"\x06labels\x18\x06 \x03(\v2\x19.storage.Node.LabelsEntryR\x06labels\x12@\n" +
	"\vannotations\x18\a \x03(\v2\x1e.storage.Node.AnnotationsEntryR\vannotations\x127\n" +
	"\tjoined_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\bjoinedAt\x122\n" +
	"\x15internal_ip_addresses\x18\b \x03(\tR\x13internalIpAddresses\x122\n" +
	"\x15external_ip_addresses\x18\t \x03(\tR\x13externalIpAddresses\x12>\n" +
	"\x19container_runtime_version\x18\n" +
	" \x01(\tB\x02\x18\x01R\x17containerRuntimeVersion\x12J\n" +
	"\x11container_runtime\x18\x0e \x01(\v2\x1d.storage.ContainerRuntimeInfoR\x10containerRuntime\x12%\n" +
	"\x0ekernel_version\x18\v \x01(\tR\rkernelVersion\x12)\n" +
	"\x10operating_system\x18\x11 \x01(\tR\x0foperatingSystem\x12\x19\n" +
	"\bos_image\x18\f \x01(\tR\aosImage\x12'\n" +
	"\x0fkubelet_version\x18\x0f \x01(\tR\x0ekubeletVersion\x12,\n" +
	"\x12kube_proxy_version\x18\x10 \x01(\tR\x10kubeProxyVersion\x12=\n" +
	"\flast_updated\x18\x19 \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\x12;\n" +
	"\vk8s_updated\x18\x1a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"k8sUpdated\x12%\n" +
	"\x04scan\x18\x12 \x01(\v2\x11.storage.NodeScanR\x04scan\x12 \n" +
	"\n" +
	"components\x18\x13 \x01(\x05H\x00R\n" +
	"components\x12\x14\n" +
	"\x04cves\x18\x14 \x01(\x05H\x01R\x04cves\x12#\n" +
	"\ffixable_cves\x18\x15 \x01(\x05H\x02R\vfixableCves\x12\x1a\n" +
	"\bpriority\x18\x16 \x01(\x03R\bpriority\x12\x1d\n" +
	"\n" +
	"risk_score\x18\x17 \x01(\x02R\triskScore\x12\x1b\n" +
	"\btop_cvss\x18\x18 \x01(\x02H\x03R\atopCvss\x12(\n" +
	"\x05notes\x18\x1b \x03(\x0e2\x12.storage.Node.NoteR\x05notes\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x1d\n" +
	"\x04Note\x12\x15\n" +
	"\x11MISSING_SCAN_DATA\x10\x00B\x10\n" +
	"\x0eset_componentsB\n" +
	"\n" +
	"\bset_cvesB\r\n" +
	"\vset_fixableB\x0e\n" +
	"\fset_top_cvss\"\xad\x03\n" +
	"\bNodeScan\x127\n" +
	"\tscan_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bscanTime\x12)\n" +
	"\x10operating_system\x18\x03 \x01(\tR\x0foperatingSystem\x12B\n" +
	"\n" +
	"components\x18\x02 \x03(\v2\".storage.EmbeddedNodeScanComponentR\n" +
	"components\x12,\n" +
	"\x05notes\x18\x04 \x03(\x0e2\x16.storage.NodeScan.NoteR\x05notes\x12B\n" +
	"\x0fscanner_version\x18\x05 \x01(\x0e2\x19.storage.NodeScan.ScannerR\x0escannerVersion\"_\n" +
	"\x04Note\x12\t\n" +
	"\x05UNSET\x10\x00\x12\x0f\n" +
	"\vUNSUPPORTED\x10\x01\x12\x16\n" +
	"\x12KERNEL_UNSUPPORTED\x10\x02\x12#\n" +
	"\x1fCERTIFIED_RHEL_CVES_UNAVAILABLE\x10\x03\"&\n" +
	"\aScanner\x12\v\n" +
	"\aSCANNER\x10\x00\x12\x0e\n" +
	"\n" +
	"SCANNER_V4\x10\x01\"\x95\b\n" +
	"\rNodeInventory\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\tnode_name\x18\x02 \x01(\tR\bnodeName\x127\n" +
	"\tscan_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\bscanTime\x12A\n" +
	"\n" +
	"components\x18\x04 \x01(\v2!.storage.NodeInventory.ComponentsR\n" +
	"components\x121\n" +
	"\x05notes\x18\x05 \x03(\x0e2\x1b.storage.NodeInventory.NoteR\x05notes\x1a\xa6\x05\n" +
	"\n" +
	"Components\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12X\n" +
	"\x0frhel_components\x18\x02 \x03(\v2/.storage.NodeInventory.Components.RHELComponentR\x0erhelComponents\x12*\n" +
	"\x11rhel_content_sets\x18\x03 \x03(\tR\x0frhelContentSets\x1a\xf3\x03\n" +
	"\rRHELComponent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12\x12\n" +
	"\x04arch\x18\x05 \x01(\tR\x04arch\x12\x16\n" +
	"\x06module\x18\x06 \x01(\tR\x06module\x12\x19\n" +
	"\badded_by\x18\a \x01(\tR\aaddedBy\x12\\\n" +
	"\vexecutables\x18\b \x03(\v2:.storage.NodeInventory.Components.RHELComponent.ExecutableR\vexecutables\x1a\xe0\x01\n" +
	"\n" +
	"Executable\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12z\n" +
	"\x11required_features\x18\x02 \x03(\v2M.storage.NodeInventory.Components.RHELComponent.Executable.FeatureNameVersionR\x10requiredFeatures\x1aB\n" +
	"\x12FeatureNameVersion\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"v\n" +
	"\x04Note\x12\x17\n" +
	"\x13OS_CVES_UNAVAILABLE\x10\x00\x12\x11\n" +
	"\rOS_CVES_STALE\x10\x01\x12\x1d\n" +
	"\x19LANGUAGE_CVES_UNAVAILABLE\x10\x02\x12#\n" +
	"\x1fCERTIFIED_RHEL_SCAN_UNAVAILABLE\x10\x03\"\xad\x02\n" +
	"\x19EmbeddedNodeScanComponent\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x124\n" +
	"\x05vulns\x18\x03 \x03(\v2\x1e.storage.EmbeddedVulnerabilityR\x05vulns\x12D\n" +
	"\x0fvulnerabilities\x18\a \x03(\v2\x1a.storage.NodeVulnerabilityR\x0fvulnerabilities\x12\x1a\n" +
	"\bpriority\x18\x04 \x01(\x03R\bpriority\x12\x1b\n" +
	"\btop_cvss\x18\x05 \x01(\x02H\x00R\atopCvss\x12\x1d\n" +
	"\n" +
	"risk_score\x18\x06 \x01(\x02R\triskScoreB\x0e\n" +
	"\fset_top_cvssB6\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storage\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_storage_node_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_storage_node_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_storage_node_proto_goTypes = []any{
	(Node_Note)(0),                    // 0: storage.Node.Note
	(NodeScan_Note)(0),                // 1: storage.NodeScan.Note
	(NodeScan_Scanner)(0),             // 2: storage.NodeScan.Scanner
	(NodeInventory_Note)(0),           // 3: storage.NodeInventory.Note
	(*Node)(nil),                      // 4: storage.Node
	(*NodeScan)(nil),                  // 5: storage.NodeScan
	(*NodeInventory)(nil),             // 6: storage.NodeInventory
	(*EmbeddedNodeScanComponent)(nil), // 7: storage.EmbeddedNodeScanComponent
	nil,                               // 8: storage.Node.LabelsEntry
	nil,                               // 9: storage.Node.AnnotationsEntry
	(*NodeInventory_Components)(nil),  // 10: storage.NodeInventory.Components
	(*NodeInventory_Components_RHELComponent)(nil),                               // 11: storage.NodeInventory.Components.RHELComponent
	(*NodeInventory_Components_RHELComponent_Executable)(nil),                    // 12: storage.NodeInventory.Components.RHELComponent.Executable
	(*NodeInventory_Components_RHELComponent_Executable_FeatureNameVersion)(nil), // 13: storage.NodeInventory.Components.RHELComponent.Executable.FeatureNameVersion
	(*Taint)(nil),                 // 14: storage.Taint
	(*timestamppb.Timestamp)(nil), // 15: google.protobuf.Timestamp
	(*ContainerRuntimeInfo)(nil),  // 16: storage.ContainerRuntimeInfo
	(*EmbeddedVulnerability)(nil), // 17: storage.EmbeddedVulnerability
	(*NodeVulnerability)(nil),     // 18: storage.NodeVulnerability
}
var file_storage_node_proto_depIdxs = []int32{
	14, // 0: storage.Node.taints:type_name -> storage.Taint
	8,  // 1: storage.Node.labels:type_name -> storage.Node.LabelsEntry
	9,  // 2: storage.Node.annotations:type_name -> storage.Node.AnnotationsEntry
	15, // 3: storage.Node.joined_at:type_name -> google.protobuf.Timestamp
	16, // 4: storage.Node.container_runtime:type_name -> storage.ContainerRuntimeInfo
	15, // 5: storage.Node.last_updated:type_name -> google.protobuf.Timestamp
	15, // 6: storage.Node.k8s_updated:type_name -> google.protobuf.Timestamp
	5,  // 7: storage.Node.scan:type_name -> storage.NodeScan
	0,  // 8: storage.Node.notes:type_name -> storage.Node.Note
	15, // 9: storage.NodeScan.scan_time:type_name -> google.protobuf.Timestamp
	7,  // 10: storage.NodeScan.components:type_name -> storage.EmbeddedNodeScanComponent
	1,  // 11: storage.NodeScan.notes:type_name -> storage.NodeScan.Note
	2,  // 12: storage.NodeScan.scanner_version:type_name -> storage.NodeScan.Scanner
	15, // 13: storage.NodeInventory.scan_time:type_name -> google.protobuf.Timestamp
	10, // 14: storage.NodeInventory.components:type_name -> storage.NodeInventory.Components
	3,  // 15: storage.NodeInventory.notes:type_name -> storage.NodeInventory.Note
	17, // 16: storage.EmbeddedNodeScanComponent.vulns:type_name -> storage.EmbeddedVulnerability
	18, // 17: storage.EmbeddedNodeScanComponent.vulnerabilities:type_name -> storage.NodeVulnerability
	11, // 18: storage.NodeInventory.Components.rhel_components:type_name -> storage.NodeInventory.Components.RHELComponent
	12, // 19: storage.NodeInventory.Components.RHELComponent.executables:type_name -> storage.NodeInventory.Components.RHELComponent.Executable
	13, // 20: storage.NodeInventory.Components.RHELComponent.Executable.required_features:type_name -> storage.NodeInventory.Components.RHELComponent.Executable.FeatureNameVersion
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_storage_node_proto_init() }
func file_storage_node_proto_init() {
	if File_storage_node_proto != nil {
		return
	}
	file_storage_container_runtime_proto_init()
	file_storage_taints_proto_init()
	file_storage_vulnerability_proto_init()
	file_storage_node_proto_msgTypes[0].OneofWrappers = []any{
		(*node_Components)(nil),
		(*node_Cves)(nil),
		(*node_FixableCves)(nil),
		(*node_TopCvss)(nil),
	}
	file_storage_node_proto_msgTypes[3].OneofWrappers = []any{
		(*embeddedNodeScanComponent_TopCvss)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_node_proto_rawDesc), len(file_storage_node_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_node_proto_goTypes,
		DependencyIndexes: file_storage_node_proto_depIdxs,
		EnumInfos:         file_storage_node_proto_enumTypes,
		MessageInfos:      file_storage_node_proto_msgTypes,
	}.Build()
	File_storage_node_proto = out.File
	file_storage_node_proto_goTypes = nil
	file_storage_node_proto_depIdxs = nil
}
