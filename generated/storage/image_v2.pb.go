// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v4.25.3
// source: storage/image_v2.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImageV2_Note int32

const (
	ImageV2_MISSING_METADATA                    ImageV2_Note = 0
	ImageV2_MISSING_SCAN_DATA                   ImageV2_Note = 1
	ImageV2_MISSING_SIGNATURE                   ImageV2_Note = 2
	ImageV2_MISSING_SIGNATURE_VERIFICATION_DATA ImageV2_Note = 3
)

// Enum value maps for ImageV2_Note.
var (
	ImageV2_Note_name = map[int32]string{
		0: "MISSING_METADATA",
		1: "MISSING_SCAN_DATA",
		2: "MISSING_SIGNATURE",
		3: "MISSING_SIGNATURE_VERIFICATION_DATA",
	}
	ImageV2_Note_value = map[string]int32{
		"MISSING_METADATA":                    0,
		"MISSING_SCAN_DATA":                   1,
		"MISSING_SIGNATURE":                   2,
		"MISSING_SIGNATURE_VERIFICATION_DATA": 3,
	}
)

func (x ImageV2_Note) Enum() *ImageV2_Note {
	p := new(ImageV2_Note)
	*p = x
	return p
}

func (x ImageV2_Note) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageV2_Note) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_image_v2_proto_enumTypes[0].Descriptor()
}

func (ImageV2_Note) Type() protoreflect.EnumType {
	return &file_storage_image_v2_proto_enumTypes[0]
}

func (x ImageV2_Note) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageV2_Note.Descriptor instead.
func (ImageV2_Note) EnumDescriptor() ([]byte, []int) {
	return file_storage_image_v2_proto_rawDescGZIP(), []int{0, 0}
}

// Next tag: 28
type ImageV2 struct {
	state                     protoimpl.MessageState          `protogen:"open.v1"`
	Id                        string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" search:"Image ID,hidden" sql:"pk"`         // @gotags: search:"Image ID,hidden" sql:"pk"
	Digest                    string                          `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty" search:"Image Sha"` // @gotags: search:"Image Sha"
	Name                      *ImageName                      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Metadata                  *ImageMetadata                  `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Scan                      *ImageScan                      `protobuf:"bytes,5,opt,name=scan,proto3" json:"scan,omitempty" policy:"Image Scan"` // @gotags: policy:"Image Scan"
	SignatureVerificationData *ImageSignatureVerificationData `protobuf:"bytes,6,opt,name=signature_verification_data,json=signatureVerificationData,proto3" json:"signature_verification_data,omitempty"`
	Signature                 *ImageSignature                 `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
	ScanStats                 *ImageV2_ScanStats              `protobuf:"bytes,8,opt,name=scan_stats,json=scanStats,proto3" json:"scan_stats,omitempty"`
	LastUpdated               *timestamppb.Timestamp          `protobuf:"bytes,9,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty" search:"Last Updated,hidden"` // @gotags: search:"Last Updated,hidden"
	NotPullable               bool                            `protobuf:"varint,10,opt,name=not_pullable,json=notPullable,proto3" json:"not_pullable,omitempty"`
	IsClusterLocal            bool                            `protobuf:"varint,11,opt,name=is_cluster_local,json=isClusterLocal,proto3" json:"is_cluster_local,omitempty"`
	Priority                  int64                           `protobuf:"varint,12,opt,name=priority,proto3" json:"priority,omitempty" search:"Image Risk Priority,hidden"`                     // @gotags: search:"Image Risk Priority,hidden"
	RiskScore                 float32                         `protobuf:"fixed32,13,opt,name=risk_score,json=riskScore,proto3" json:"risk_score,omitempty" search:"Image Risk Score,hidden"` // @gotags: search:"Image Risk Score,hidden"
	// Caching top cvss to avoid re-calculating it by joining on the cve table.
	TopCvss       float32        `protobuf:"fixed32,14,opt,name=top_cvss,json=topCvss,proto3" json:"top_cvss,omitempty" search:"Image Top CVSS,store"` // @gotags: search:"Image Top CVSS,store"
	Notes         []ImageV2_Note `protobuf:"varint,15,rep,packed,name=notes,proto3,enum=storage.ImageV2_Note" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageV2) Reset() {
	*x = ImageV2{}
	mi := &file_storage_image_v2_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageV2) ProtoMessage() {}

func (x *ImageV2) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_v2_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageV2.ProtoReflect.Descriptor instead.
func (*ImageV2) Descriptor() ([]byte, []int) {
	return file_storage_image_v2_proto_rawDescGZIP(), []int{0}
}

func (x *ImageV2) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ImageV2) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *ImageV2) GetName() *ImageName {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ImageV2) GetMetadata() *ImageMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ImageV2) GetScan() *ImageScan {
	if x != nil {
		return x.Scan
	}
	return nil
}

func (x *ImageV2) GetSignatureVerificationData() *ImageSignatureVerificationData {
	if x != nil {
		return x.SignatureVerificationData
	}
	return nil
}

func (x *ImageV2) GetSignature() *ImageSignature {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ImageV2) GetScanStats() *ImageV2_ScanStats {
	if x != nil {
		return x.ScanStats
	}
	return nil
}

func (x *ImageV2) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *ImageV2) GetNotPullable() bool {
	if x != nil {
		return x.NotPullable
	}
	return false
}

func (x *ImageV2) GetIsClusterLocal() bool {
	if x != nil {
		return x.IsClusterLocal
	}
	return false
}

func (x *ImageV2) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ImageV2) GetRiskScore() float32 {
	if x != nil {
		return x.RiskScore
	}
	return 0
}

func (x *ImageV2) GetTopCvss() float32 {
	if x != nil {
		return x.TopCvss
	}
	return 0
}

func (x *ImageV2) GetNotes() []ImageV2_Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

type ListImageV2 struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ComponentCount  int32                  `protobuf:"varint,3,opt,name=component_count,json=componentCount,proto3" json:"component_count,omitempty"`
	CveCount        int32                  `protobuf:"varint,4,opt,name=cve_count,json=cveCount,proto3" json:"cve_count,omitempty"`
	FixableCveCount int32                  `protobuf:"varint,5,opt,name=fixable_cve_count,json=fixableCveCount,proto3" json:"fixable_cve_count,omitempty"`
	Created         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdated     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	Priority        int64                  `protobuf:"varint,10,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListImageV2) Reset() {
	*x = ListImageV2{}
	mi := &file_storage_image_v2_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImageV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImageV2) ProtoMessage() {}

func (x *ListImageV2) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_v2_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImageV2.ProtoReflect.Descriptor instead.
func (*ListImageV2) Descriptor() ([]byte, []int) {
	return file_storage_image_v2_proto_rawDescGZIP(), []int{1}
}

func (x *ListImageV2) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListImageV2) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListImageV2) GetComponentCount() int32 {
	if x != nil {
		return x.ComponentCount
	}
	return 0
}

func (x *ListImageV2) GetCveCount() int32 {
	if x != nil {
		return x.CveCount
	}
	return 0
}

func (x *ListImageV2) GetFixableCveCount() int32 {
	if x != nil {
		return x.FixableCveCount
	}
	return 0
}

func (x *ListImageV2) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *ListImageV2) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *ListImageV2) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type ImageV2_ScanStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Caching component count to avoid re-calculating it by joining on the component table.
	ComponentCount int32 `protobuf:"varint,1,opt,name=component_count,json=componentCount,proto3" json:"component_count,omitempty" search:"Component Count,hidden"` // @gotags: search:"Component Count,hidden"
	// Caching cve count to avoid re-calculating it by joining on the cve table.
	CveCount int32 `protobuf:"varint,2,opt,name=cve_count,json=cveCount,proto3" json:"cve_count,omitempty" search:"Image CVE Count,hidden"` // @gotags: search:"Image CVE Count,hidden"
	// Caching fixable cve count to avoid re-calculating it by joining on the cve table.
	FixableCveCount int32 `protobuf:"varint,3,opt,name=fixable_cve_count,json=fixableCveCount,proto3" json:"fixable_cve_count,omitempty" search:"Fixable CVE Count,hidden"` // @gotags: search:"Fixable CVE Count,hidden"
	// Caching unknown cve count to avoid re-calculating it by joining on the cve table.
	UnknownCveCount int32 `protobuf:"varint,4,opt,name=unknown_cve_count,json=unknownCveCount,proto3" json:"unknown_cve_count,omitempty" search:"Unknown CVE Count,hidden"` // @gotags: search:"Unknown CVE Count,hidden"
	// Caching fixable unknown cve count to avoid re-calculating it by joining on the cve table.
	FixableUnknownCveCount int32 `protobuf:"varint,5,opt,name=fixable_unknown_cve_count,json=fixableUnknownCveCount,proto3" json:"fixable_unknown_cve_count,omitempty" search:"Fixable Unknown CVE Count,hidden"` // @gotags: search:"Fixable Unknown CVE Count,hidden"
	// Caching critical cve count to avoid re-calculating it by joining on the cve table.
	CriticalCveCount int32 `protobuf:"varint,6,opt,name=critical_cve_count,json=criticalCveCount,proto3" json:"critical_cve_count,omitempty" search:"Critical CVE Count,hidden"` // @gotags: search:"Critical CVE Count,hidden"
	// Caching fixable critical cve count to avoid re-calculating it by joining on the cve table.
	FixableCriticalCveCount int32 `protobuf:"varint,7,opt,name=fixable_critical_cve_count,json=fixableCriticalCveCount,proto3" json:"fixable_critical_cve_count,omitempty" search:"Fixable Critical CVE Count,hidden"` // @gotags: search:"Fixable Critical CVE Count,hidden"
	// Caching important cve count to avoid re-calculating it by joining on the cve table.
	ImportantCveCount int32 `protobuf:"varint,8,opt,name=important_cve_count,json=importantCveCount,proto3" json:"important_cve_count,omitempty" search:"Important CVE Count,hidden"` // @gotags: search:"Important CVE Count,hidden"
	// Caching fixable important cve count to avoid re-calculating it by joining on the cve table.
	FixableImportantCveCount int32 `protobuf:"varint,9,opt,name=fixable_important_cve_count,json=fixableImportantCveCount,proto3" json:"fixable_important_cve_count,omitempty" search:"Fixable Important CVE Count,hidden"` // @gotags: search:"Fixable Important CVE Count,hidden"
	// Caching moderate cve count to avoid re-calculating it by joining on the cve table.
	ModerateCveCount int32 `protobuf:"varint,10,opt,name=moderate_cve_count,json=moderateCveCount,proto3" json:"moderate_cve_count,omitempty" search:"Moderate CVE Count,hidden"` // @gotags: search:"Moderate CVE Count,hidden"
	// Caching fixable moderate cve count to avoid re-calculating it by joining on the cve table.
	FixableModerateCveCount int32 `protobuf:"varint,11,opt,name=fixable_moderate_cve_count,json=fixableModerateCveCount,proto3" json:"fixable_moderate_cve_count,omitempty" search:"Fixable Moderate CVE Count,hidden"` // @gotags: search:"Fixable Moderate CVE Count,hidden"
	// Caching low cve count to avoid re-calculating it by joining on the cve table.
	LowCveCount int32 `protobuf:"varint,12,opt,name=low_cve_count,json=lowCveCount,proto3" json:"low_cve_count,omitempty" search:"Low CVE Count,hidden"` // @gotags: search:"Low CVE Count,hidden"
	// Caching fixable low cve count to avoid re-calculating it by joining on the cve table.
	FixableLowCveCount int32 `protobuf:"varint,13,opt,name=fixable_low_cve_count,json=fixableLowCveCount,proto3" json:"fixable_low_cve_count,omitempty" search:"Fixable Low CVE Count,hidden"` // @gotags: search:"Fixable Low CVE Count,hidden"
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ImageV2_ScanStats) Reset() {
	*x = ImageV2_ScanStats{}
	mi := &file_storage_image_v2_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageV2_ScanStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageV2_ScanStats) ProtoMessage() {}

func (x *ImageV2_ScanStats) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_v2_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageV2_ScanStats.ProtoReflect.Descriptor instead.
func (*ImageV2_ScanStats) Descriptor() ([]byte, []int) {
	return file_storage_image_v2_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ImageV2_ScanStats) GetComponentCount() int32 {
	if x != nil {
		return x.ComponentCount
	}
	return 0
}

func (x *ImageV2_ScanStats) GetCveCount() int32 {
	if x != nil {
		return x.CveCount
	}
	return 0
}

func (x *ImageV2_ScanStats) GetFixableCveCount() int32 {
	if x != nil {
		return x.FixableCveCount
	}
	return 0
}

func (x *ImageV2_ScanStats) GetUnknownCveCount() int32 {
	if x != nil {
		return x.UnknownCveCount
	}
	return 0
}

func (x *ImageV2_ScanStats) GetFixableUnknownCveCount() int32 {
	if x != nil {
		return x.FixableUnknownCveCount
	}
	return 0
}

func (x *ImageV2_ScanStats) GetCriticalCveCount() int32 {
	if x != nil {
		return x.CriticalCveCount
	}
	return 0
}

func (x *ImageV2_ScanStats) GetFixableCriticalCveCount() int32 {
	if x != nil {
		return x.FixableCriticalCveCount
	}
	return 0
}

func (x *ImageV2_ScanStats) GetImportantCveCount() int32 {
	if x != nil {
		return x.ImportantCveCount
	}
	return 0
}

func (x *ImageV2_ScanStats) GetFixableImportantCveCount() int32 {
	if x != nil {
		return x.FixableImportantCveCount
	}
	return 0
}

func (x *ImageV2_ScanStats) GetModerateCveCount() int32 {
	if x != nil {
		return x.ModerateCveCount
	}
	return 0
}

func (x *ImageV2_ScanStats) GetFixableModerateCveCount() int32 {
	if x != nil {
		return x.FixableModerateCveCount
	}
	return 0
}

func (x *ImageV2_ScanStats) GetLowCveCount() int32 {
	if x != nil {
		return x.LowCveCount
	}
	return 0
}

func (x *ImageV2_ScanStats) GetFixableLowCveCount() int32 {
	if x != nil {
		return x.FixableLowCveCount
	}
	return 0
}

var File_storage_image_v2_proto protoreflect.FileDescriptor

const file_storage_image_v2_proto_rawDesc = "" +
	"\n" +
	"\x16storage/image_v2.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x13storage/image.proto\"\x97\v\n" +
	"\aImageV2\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06digest\x18\x02 \x01(\tR\x06digest\x12&\n" +
	"\x04name\x18\x03 \x01(\v2\x12.storage.ImageNameR\x04name\x122\n" +
	"\bmetadata\x18\x04 \x01(\v2\x16.storage.ImageMetadataR\bmetadata\x12&\n" +
	"\x04scan\x18\x05 \x01(\v2\x12.storage.ImageScanR\x04scan\x12g\n" +
	"\x1bsignature_verification_data\x18\x06 \x01(\v2'.storage.ImageSignatureVerificationDataR\x19signatureVerificationData\x125\n" +
	"\tsignature\x18\a \x01(\v2\x17.storage.ImageSignatureR\tsignature\x129\n" +
	"\n" +
	"scan_stats\x18\b \x01(\v2\x1a.storage.ImageV2.ScanStatsR\tscanStats\x12=\n" +
	"\flast_updated\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\x12!\n" +
	"\fnot_pullable\x18\n" +
	" \x01(\bR\vnotPullable\x12(\n" +
	"\x10is_cluster_local\x18\v \x01(\bR\x0eisClusterLocal\x12\x1a\n" +
	"\bpriority\x18\f \x01(\x03R\bpriority\x12\x1d\n" +
	"\n" +
	"risk_score\x18\r \x01(\x02R\triskScore\x12\x19\n" +
	"\btop_cvss\x18\x0e \x01(\x02R\atopCvss\x12+\n" +
	"\x05notes\x18\x0f \x03(\x0e2\x15.storage.ImageV2.NoteR\x05notes\x1a\x80\x05\n" +
	"\tScanStats\x12'\n" +
	"\x0fcomponent_count\x18\x01 \x01(\x05R\x0ecomponentCount\x12\x1b\n" +
	"\tcve_count\x18\x02 \x01(\x05R\bcveCount\x12*\n" +
	"\x11fixable_cve_count\x18\x03 \x01(\x05R\x0ffixableCveCount\x12*\n" +
	"\x11unknown_cve_count\x18\x04 \x01(\x05R\x0funknownCveCount\x129\n" +
	"\x19fixable_unknown_cve_count\x18\x05 \x01(\x05R\x16fixableUnknownCveCount\x12,\n" +
	"\x12critical_cve_count\x18\x06 \x01(\x05R\x10criticalCveCount\x12;\n" +
	"\x1afixable_critical_cve_count\x18\a \x01(\x05R\x17fixableCriticalCveCount\x12.\n" +
	"\x13important_cve_count\x18\b \x01(\x05R\x11importantCveCount\x12=\n" +
	"\x1bfixable_important_cve_count\x18\t \x01(\x05R\x18fixableImportantCveCount\x12,\n" +
	"\x12moderate_cve_count\x18\n" +
	" \x01(\x05R\x10moderateCveCount\x12;\n" +
	"\x1afixable_moderate_cve_count\x18\v \x01(\x05R\x17fixableModerateCveCount\x12\"\n" +
	"\rlow_cve_count\x18\f \x01(\x05R\vlowCveCount\x121\n" +
	"\x15fixable_low_cve_count\x18\r \x01(\x05R\x12fixableLowCveCount\"s\n" +
	"\x04Note\x12\x14\n" +
	"\x10MISSING_METADATA\x10\x00\x12\x15\n" +
	"\x11MISSING_SCAN_DATA\x10\x01\x12\x15\n" +
	"\x11MISSING_SIGNATURE\x10\x02\x12'\n" +
	"#MISSING_SIGNATURE_VERIFICATION_DATA\x10\x03\"\xba\x02\n" +
	"\vListImageV2\x12\x0e\n" +
	"\x02id\x18\a \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12'\n" +
	"\x0fcomponent_count\x18\x03 \x01(\x05R\x0ecomponentCount\x12\x1b\n" +
	"\tcve_count\x18\x04 \x01(\x05R\bcveCount\x12*\n" +
	"\x11fixable_cve_count\x18\x05 \x01(\x05R\x0ffixableCveCount\x124\n" +
	"\acreated\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x12=\n" +
	"\flast_updated\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\x12\x1a\n" +
	"\bpriority\x18\n" +
	" \x01(\x03R\bpriorityJ\x04\b\t\x10\n" +
	"B.\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storageb\x06proto3"

var (
	file_storage_image_v2_proto_rawDescOnce sync.Once
	file_storage_image_v2_proto_rawDescData []byte
)

func file_storage_image_v2_proto_rawDescGZIP() []byte {
	file_storage_image_v2_proto_rawDescOnce.Do(func() {
		file_storage_image_v2_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_storage_image_v2_proto_rawDesc), len(file_storage_image_v2_proto_rawDesc)))
	})
	return file_storage_image_v2_proto_rawDescData
}

var file_storage_image_v2_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storage_image_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_storage_image_v2_proto_goTypes = []any{
	(ImageV2_Note)(0),                      // 0: storage.ImageV2.Note
	(*ImageV2)(nil),                        // 1: storage.ImageV2
	(*ListImageV2)(nil),                    // 2: storage.ListImageV2
	(*ImageV2_ScanStats)(nil),              // 3: storage.ImageV2.ScanStats
	(*ImageName)(nil),                      // 4: storage.ImageName
	(*ImageMetadata)(nil),                  // 5: storage.ImageMetadata
	(*ImageScan)(nil),                      // 6: storage.ImageScan
	(*ImageSignatureVerificationData)(nil), // 7: storage.ImageSignatureVerificationData
	(*ImageSignature)(nil),                 // 8: storage.ImageSignature
	(*timestamppb.Timestamp)(nil),          // 9: google.protobuf.Timestamp
}
var file_storage_image_v2_proto_depIdxs = []int32{
	4,  // 0: storage.ImageV2.name:type_name -> storage.ImageName
	5,  // 1: storage.ImageV2.metadata:type_name -> storage.ImageMetadata
	6,  // 2: storage.ImageV2.scan:type_name -> storage.ImageScan
	7,  // 3: storage.ImageV2.signature_verification_data:type_name -> storage.ImageSignatureVerificationData
	8,  // 4: storage.ImageV2.signature:type_name -> storage.ImageSignature
	3,  // 5: storage.ImageV2.scan_stats:type_name -> storage.ImageV2.ScanStats
	9,  // 6: storage.ImageV2.last_updated:type_name -> google.protobuf.Timestamp
	0,  // 7: storage.ImageV2.notes:type_name -> storage.ImageV2.Note
	9,  // 8: storage.ListImageV2.created:type_name -> google.protobuf.Timestamp
	9,  // 9: storage.ListImageV2.last_updated:type_name -> google.protobuf.Timestamp
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_storage_image_v2_proto_init() }
func file_storage_image_v2_proto_init() {
	if File_storage_image_v2_proto != nil {
		return
	}
	file_storage_image_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_image_v2_proto_rawDesc), len(file_storage_image_v2_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_image_v2_proto_goTypes,
		DependencyIndexes: file_storage_image_v2_proto_depIdxs,
		EnumInfos:         file_storage_image_v2_proto_enumTypes,
		MessageInfos:      file_storage_image_v2_proto_msgTypes,
	}.Build()
	File_storage_image_v2_proto = out.File
	file_storage_image_v2_proto_goTypes = nil
	file_storage_image_v2_proto_depIdxs = nil
}
