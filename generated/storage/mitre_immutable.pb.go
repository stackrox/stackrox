// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package storage

import (
	"iter"
)

// ImmutableMitreTactic is an immutable interface for MitreTactic
type ImmutableMitreTactic interface {
	GetId() string
	GetName() string
	GetDescription() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *MitreTactic
}

// Verify that MitreTactic implements ImmutableMitreTactic
var _ ImmutableMitreTactic = (*MitreTactic)(nil)

// ImmutableMitreTechnique is an immutable interface for MitreTechnique
type ImmutableMitreTechnique interface {
	GetId() string
	GetName() string
	GetDescription() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *MitreTechnique
}

// Verify that MitreTechnique implements ImmutableMitreTechnique
var _ ImmutableMitreTechnique = (*MitreTechnique)(nil)

// ImmutableMitreAttackVector is an immutable interface for MitreAttackVector
type ImmutableMitreAttackVector interface {
	GetImmutableTactic() ImmutableMitreTactic
	GetImmutableTechniques() iter.Seq[ImmutableMitreTechnique]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *MitreAttackVector
}

// GetImmutableTactic implements ImmutableMitreAttackVector
func (m *MitreAttackVector) GetImmutableTactic() ImmutableMitreTactic {
	return m.GetTactic()
}

// GetImmutableTechniques implements ImmutableMitreAttackVector
func (m *MitreAttackVector) GetImmutableTechniques() iter.Seq[ImmutableMitreTechnique] {
	return func(yield func(ImmutableMitreTechnique) bool) {
		if m == nil || m.Techniques == nil {
			return
		}
		for _, v := range m.Techniques {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that MitreAttackVector implements ImmutableMitreAttackVector
var _ ImmutableMitreAttackVector = (*MitreAttackVector)(nil)

// ImmutableMitreAttackMatrix is an immutable interface for MitreAttackMatrix
type ImmutableMitreAttackMatrix interface {
	GetImmutableMatrixInfo() ImmutableMitreAttackMatrix_MatrixInfo
	GetImmutableVectors() iter.Seq[ImmutableMitreAttackVector]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *MitreAttackMatrix
}

// GetImmutableMatrixInfo implements ImmutableMitreAttackMatrix
func (m *MitreAttackMatrix) GetImmutableMatrixInfo() ImmutableMitreAttackMatrix_MatrixInfo {
	return m.GetMatrixInfo()
}

// GetImmutableVectors implements ImmutableMitreAttackMatrix
func (m *MitreAttackMatrix) GetImmutableVectors() iter.Seq[ImmutableMitreAttackVector] {
	return func(yield func(ImmutableMitreAttackVector) bool) {
		if m == nil || m.Vectors == nil {
			return
		}
		for _, v := range m.Vectors {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that MitreAttackMatrix implements ImmutableMitreAttackMatrix
var _ ImmutableMitreAttackMatrix = (*MitreAttackMatrix)(nil)

// ImmutableMitreAttackMatrix_MatrixInfo is an immutable interface for MitreAttackMatrix_MatrixInfo
type ImmutableMitreAttackMatrix_MatrixInfo interface {
	GetDomain() string
	GetPlatform() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *MitreAttackMatrix_MatrixInfo
}

// Verify that MitreAttackMatrix_MatrixInfo implements ImmutableMitreAttackMatrix_MatrixInfo
var _ ImmutableMitreAttackMatrix_MatrixInfo = (*MitreAttackMatrix_MatrixInfo)(nil)

// ImmutableMitreAttackBundle is an immutable interface for MitreAttackBundle
type ImmutableMitreAttackBundle interface {
	GetVersion() string
	GetImmutableMatrices() iter.Seq[ImmutableMitreAttackMatrix]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *MitreAttackBundle
}

// GetImmutableMatrices implements ImmutableMitreAttackBundle
func (m *MitreAttackBundle) GetImmutableMatrices() iter.Seq[ImmutableMitreAttackMatrix] {
	return func(yield func(ImmutableMitreAttackMatrix) bool) {
		if m == nil || m.Matrices == nil {
			return
		}
		for _, v := range m.Matrices {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that MitreAttackBundle implements ImmutableMitreAttackBundle
var _ ImmutableMitreAttackBundle = (*MitreAttackBundle)(nil)
