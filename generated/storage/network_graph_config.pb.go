// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage/network_graph_config.proto

package storage

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NetworkGraphConfig struct {
	Id                      string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty" sql:"pk"`
	HideDefaultExternalSrcs bool     `protobuf:"varint,1,opt,name=hide_default_external_srcs,json=hideDefaultExternalSrcs,proto3" json:"hide_default_external_srcs,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *NetworkGraphConfig) Reset()         { *m = NetworkGraphConfig{} }
func (m *NetworkGraphConfig) String() string { return proto.CompactTextString(m) }
func (*NetworkGraphConfig) ProtoMessage()    {}
func (*NetworkGraphConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_66edcc8cca394cec, []int{0}
}
func (m *NetworkGraphConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkGraphConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NetworkGraphConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NetworkGraphConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkGraphConfig.Merge(m, src)
}
func (m *NetworkGraphConfig) XXX_Size() int {
	return m.Size()
}
func (m *NetworkGraphConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkGraphConfig.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkGraphConfig proto.InternalMessageInfo

func (m *NetworkGraphConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NetworkGraphConfig) GetHideDefaultExternalSrcs() bool {
	if m != nil {
		return m.HideDefaultExternalSrcs
	}
	return false
}

func (m *NetworkGraphConfig) MessageClone() proto.Message {
	return m.Clone()
}
func (m *NetworkGraphConfig) Clone() *NetworkGraphConfig {
	if m == nil {
		return nil
	}
	cloned := new(NetworkGraphConfig)
	*cloned = *m

	return cloned
}

func init() {
	proto.RegisterType((*NetworkGraphConfig)(nil), "storage.NetworkGraphConfig")
}

func init() {
	proto.RegisterFile("storage/network_graph_config.proto", fileDescriptor_66edcc8cca394cec)
}

var fileDescriptor_66edcc8cca394cec = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2a, 0x2e, 0xc9, 0x2f,
	0x4a, 0x4c, 0x4f, 0xd5, 0xcf, 0x4b, 0x2d, 0x29, 0xcf, 0x2f, 0xca, 0x8e, 0x4f, 0x2f, 0x4a, 0x2c,
	0xc8, 0x88, 0x4f, 0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x87, 0xaa, 0x91, 0x12, 0x49, 0xcf, 0x4f, 0xcf, 0x07, 0x8b, 0xe9, 0x83, 0x58, 0x10, 0x69, 0xa5,
	0x7c, 0x2e, 0x21, 0x3f, 0x88, 0x66, 0x77, 0x90, 0x5e, 0x67, 0xb0, 0x56, 0x21, 0x19, 0x2e, 0xa6,
	0xcc, 0x14, 0x09, 0x26, 0x05, 0x46, 0x0d, 0x4e, 0x27, 0x9e, 0x4f, 0xf7, 0xe4, 0x39, 0x8a, 0x0b,
	0x73, 0xac, 0x94, 0x0a, 0xb2, 0x95, 0x82, 0x98, 0x32, 0x53, 0x84, 0xac, 0xb9, 0xa4, 0x32, 0x32,
	0x53, 0x52, 0xe3, 0x53, 0x52, 0xd3, 0x12, 0x4b, 0x73, 0x4a, 0xe2, 0x53, 0x2b, 0x4a, 0x52, 0x8b,
	0xf2, 0x12, 0x73, 0xe2, 0x8b, 0x8b, 0x92, 0x8b, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x82, 0xc4,
	0x41, 0x2a, 0x5c, 0x20, 0x0a, 0x5c, 0xa1, 0xf2, 0xc1, 0x45, 0xc9, 0xc5, 0x4e, 0x26, 0x27, 0x1e,
	0xc9, 0x31, 0x5e, 0x78, 0x24, 0xc7, 0xf8, 0xe0, 0x91, 0x1c, 0xe3, 0x8c, 0xc7, 0x72, 0x0c, 0x5c,
	0x92, 0x99, 0xf9, 0x7a, 0xc5, 0x25, 0x89, 0xc9, 0xd9, 0x45, 0xf9, 0x15, 0x10, 0x57, 0xe9, 0x41,
	0xdd, 0x1c, 0x05, 0x73, 0x7c, 0x12, 0x1b, 0x58, 0xdc, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x2a,
	0x12, 0x06, 0x18, 0xf2, 0x00, 0x00, 0x00,
}

func (m *NetworkGraphConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkGraphConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkGraphConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintNetworkGraphConfig(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if m.HideDefaultExternalSrcs {
		i--
		if m.HideDefaultExternalSrcs {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintNetworkGraphConfig(dAtA []byte, offset int, v uint64) int {
	offset -= sovNetworkGraphConfig(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *NetworkGraphConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HideDefaultExternalSrcs {
		n += 2
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovNetworkGraphConfig(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovNetworkGraphConfig(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozNetworkGraphConfig(x uint64) (n int) {
	return sovNetworkGraphConfig(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NetworkGraphConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNetworkGraphConfig
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkGraphConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkGraphConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HideDefaultExternalSrcs", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNetworkGraphConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HideDefaultExternalSrcs = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNetworkGraphConfig
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNetworkGraphConfig
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNetworkGraphConfig
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNetworkGraphConfig(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthNetworkGraphConfig
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipNetworkGraphConfig(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowNetworkGraphConfig
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowNetworkGraphConfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowNetworkGraphConfig
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthNetworkGraphConfig
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupNetworkGraphConfig
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthNetworkGraphConfig
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthNetworkGraphConfig        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowNetworkGraphConfig          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupNetworkGraphConfig = fmt.Errorf("proto: unexpected end of group")
)
