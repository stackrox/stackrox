// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage/relations.proto

package storage

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	_ "github.com/gogo/protobuf/types"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ImageComponentEdge struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	/// Layer that contains this component
	//
	// Types that are valid to be assigned to HasLayerIndex:
	//	*ImageComponentEdge_LayerIndex
	HasLayerIndex        isImageComponentEdge_HasLayerIndex `protobuf_oneof:"has_layer_index"`
	Location             string                             `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty" search:"Component Location,store,hidden"`
	ImageId              string                             `protobuf:"bytes,4,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty" sql:"pk"`
	OperatingName        string                             `protobuf:"bytes,5,opt,name=operating_name,json=operatingName,proto3" json:"operating_name,omitempty" sql:"pk"`
	ComponentName        string                             `protobuf:"bytes,6,opt,name=component_name,json=componentName,proto3" json:"component_name,omitempty" sql:"pk"`
	ComponentVersion     string                             `protobuf:"bytes,7,opt,name=component_version,json=componentVersion,proto3" json:"component_version,omitempty" sql:"pk"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ImageComponentEdge) Reset()         { *m = ImageComponentEdge{} }
func (m *ImageComponentEdge) String() string { return proto.CompactTextString(m) }
func (*ImageComponentEdge) ProtoMessage()    {}
func (*ImageComponentEdge) Descriptor() ([]byte, []int) {
	return fileDescriptor_62f882e266fcf764, []int{0}
}
func (m *ImageComponentEdge) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ImageComponentEdge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ImageComponentEdge.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ImageComponentEdge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageComponentEdge.Merge(m, src)
}
func (m *ImageComponentEdge) XXX_Size() int {
	return m.Size()
}
func (m *ImageComponentEdge) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageComponentEdge.DiscardUnknown(m)
}

var xxx_messageInfo_ImageComponentEdge proto.InternalMessageInfo

type isImageComponentEdge_HasLayerIndex interface {
	isImageComponentEdge_HasLayerIndex()
	MarshalTo([]byte) (int, error)
	Size() int
	Clone() isImageComponentEdge_HasLayerIndex
}

type ImageComponentEdge_LayerIndex struct {
	LayerIndex int32 `protobuf:"varint,2,opt,name=layer_index,json=layerIndex,proto3,oneof" json:"layer_index,omitempty"`
}

func (*ImageComponentEdge_LayerIndex) isImageComponentEdge_HasLayerIndex() {}
func (m *ImageComponentEdge_LayerIndex) Clone() isImageComponentEdge_HasLayerIndex {
	if m == nil {
		return nil
	}
	cloned := new(ImageComponentEdge_LayerIndex)
	*cloned = *m

	return cloned
}

func (m *ImageComponentEdge) GetHasLayerIndex() isImageComponentEdge_HasLayerIndex {
	if m != nil {
		return m.HasLayerIndex
	}
	return nil
}

func (m *ImageComponentEdge) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ImageComponentEdge) GetLayerIndex() int32 {
	if x, ok := m.GetHasLayerIndex().(*ImageComponentEdge_LayerIndex); ok {
		return x.LayerIndex
	}
	return 0
}

func (m *ImageComponentEdge) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *ImageComponentEdge) GetImageId() string {
	if m != nil {
		return m.ImageId
	}
	return ""
}

func (m *ImageComponentEdge) GetOperatingName() string {
	if m != nil {
		return m.OperatingName
	}
	return ""
}

func (m *ImageComponentEdge) GetComponentName() string {
	if m != nil {
		return m.ComponentName
	}
	return ""
}

func (m *ImageComponentEdge) GetComponentVersion() string {
	if m != nil {
		return m.ComponentVersion
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ImageComponentEdge) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ImageComponentEdge_LayerIndex)(nil),
	}
}

func (m *ImageComponentEdge) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ImageComponentEdge) Clone() *ImageComponentEdge {
	if m == nil {
		return nil
	}
	cloned := new(ImageComponentEdge)
	*cloned = *m

	if m.HasLayerIndex != nil {
		cloned.HasLayerIndex = m.HasLayerIndex.Clone()
	}
	return cloned
}

func init() {
	proto.RegisterType((*ImageComponentEdge)(nil), "storage.ImageComponentEdge")
}

func init() { proto.RegisterFile("storage/relations.proto", fileDescriptor_62f882e266fcf764) }

var fileDescriptor_62f882e266fcf764 = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xcf, 0x4e, 0xea, 0x40,
	0x14, 0xc6, 0x69, 0xef, 0xe5, 0xcf, 0x9d, 0xab, 0x28, 0x8d, 0x89, 0x95, 0x45, 0xc1, 0x6e, 0x64,
	0x41, 0xe8, 0x02, 0x37, 0xb2, 0xc4, 0x98, 0x40, 0x62, 0x5c, 0x74, 0xe1, 0xc2, 0x4d, 0x33, 0x74,
	0x8e, 0xc3, 0x84, 0xb6, 0x53, 0x67, 0x46, 0x83, 0x6f, 0xe2, 0x23, 0xb9, 0xf4, 0x09, 0x88, 0xc1,
	0x37, 0xe0, 0x09, 0xcc, 0x4c, 0xa1, 0xba, 0x60, 0x37, 0xf9, 0xce, 0xef, 0x77, 0xf2, 0xb5, 0x07,
	0x9d, 0x4a, 0xc5, 0x05, 0xa6, 0x10, 0x08, 0x48, 0xb0, 0x62, 0x3c, 0x93, 0x83, 0x5c, 0x70, 0xc5,
	0x9d, 0xfa, 0x76, 0xd0, 0xee, 0x50, 0xce, 0x69, 0x02, 0x81, 0x89, 0x67, 0xcf, 0x8f, 0x81, 0x62,
	0x29, 0x48, 0x85, 0xd3, 0xbc, 0x20, 0xdb, 0x27, 0x94, 0x53, 0x6e, 0x9e, 0x81, 0x7e, 0x15, 0xa9,
	0xbf, 0xb1, 0x91, 0x33, 0x4d, 0x31, 0x85, 0x6b, 0x9e, 0xe6, 0x3c, 0x83, 0x4c, 0xdd, 0x10, 0x0a,
	0x4e, 0x13, 0xd9, 0x8c, 0xb8, 0x56, 0xd7, 0xea, 0xfd, 0x0b, 0x6d, 0x46, 0x9c, 0x73, 0xf4, 0x3f,
	0xc1, 0xaf, 0x20, 0x22, 0x96, 0x11, 0x58, 0xba, 0x76, 0xd7, 0xea, 0x55, 0x27, 0x95, 0x10, 0x99,
	0x70, 0xaa, 0x33, 0x67, 0x82, 0x1a, 0x09, 0x8f, 0x4d, 0x39, 0xf7, 0x8f, 0x16, 0xc7, 0xfd, 0xcd,
	0xaa, 0xd3, 0x93, 0x80, 0x45, 0x3c, 0x1f, 0xf9, 0xe5, 0xfe, 0xee, 0xed, 0x96, 0xea, 0xeb, 0xea,
	0xd0, 0x9f, 0x33, 0x42, 0x20, 0xf3, 0xc3, 0xd2, 0x76, 0x2e, 0x50, 0x83, 0xe9, 0x4a, 0x11, 0x23,
	0xee, 0x5f, 0xb3, 0xe9, 0x60, 0xb3, 0xea, 0x34, 0xe4, 0x53, 0x32, 0xf2, 0xf3, 0x85, 0x1f, 0xd6,
	0xcd, 0x74, 0x4a, 0x9c, 0x21, 0x6a, 0xf2, 0x1c, 0x04, 0x56, 0x2c, 0xa3, 0x51, 0x86, 0x53, 0x70,
	0xab, 0x7b, 0xf0, 0xc3, 0x92, 0xb9, 0xc3, 0x29, 0x68, 0x29, 0xde, 0x75, 0x29, 0xa4, 0xda, 0x3e,
	0xa9, 0x64, 0x8c, 0x74, 0x85, 0x5a, 0x3f, 0xd2, 0x0b, 0x08, 0xa9, 0xbf, 0xb2, 0xbe, 0xc7, 0x3b,
	0x2e, 0xb1, 0xfb, 0x82, 0x1a, 0xb7, 0xd0, 0xd1, 0x1c, 0xcb, 0xe8, 0xd7, 0xef, 0x1b, 0x5f, 0xbe,
	0xaf, 0x3d, 0xeb, 0x63, 0xed, 0x59, 0x9f, 0x6b, 0xcf, 0x7a, 0xfb, 0xf2, 0x2a, 0xe8, 0x8c, 0xf1,
	0x81, 0x54, 0x38, 0x5e, 0x08, 0xbe, 0x2c, 0x2e, 0x33, 0xd8, 0x1e, 0xf6, 0x61, 0x77, 0xe1, 0x59,
	0xcd, 0xe4, 0xc3, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x44, 0xbd, 0xb2, 0x8b, 0x0c, 0x02, 0x00,
	0x00,
}

func (m *ImageComponentEdge) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ImageComponentEdge) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ImageComponentEdge) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ComponentVersion) > 0 {
		i -= len(m.ComponentVersion)
		copy(dAtA[i:], m.ComponentVersion)
		i = encodeVarintRelations(dAtA, i, uint64(len(m.ComponentVersion)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.ComponentName) > 0 {
		i -= len(m.ComponentName)
		copy(dAtA[i:], m.ComponentName)
		i = encodeVarintRelations(dAtA, i, uint64(len(m.ComponentName)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.OperatingName) > 0 {
		i -= len(m.OperatingName)
		copy(dAtA[i:], m.OperatingName)
		i = encodeVarintRelations(dAtA, i, uint64(len(m.OperatingName)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ImageId) > 0 {
		i -= len(m.ImageId)
		copy(dAtA[i:], m.ImageId)
		i = encodeVarintRelations(dAtA, i, uint64(len(m.ImageId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintRelations(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x1a
	}
	if m.HasLayerIndex != nil {
		{
			size := m.HasLayerIndex.Size()
			i -= size
			if _, err := m.HasLayerIndex.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintRelations(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ImageComponentEdge_LayerIndex) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ImageComponentEdge_LayerIndex) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i = encodeVarintRelations(dAtA, i, uint64(m.LayerIndex))
	i--
	dAtA[i] = 0x10
	return len(dAtA) - i, nil
}
func encodeVarintRelations(dAtA []byte, offset int, v uint64) int {
	offset -= sovRelations(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ImageComponentEdge) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovRelations(uint64(l))
	}
	if m.HasLayerIndex != nil {
		n += m.HasLayerIndex.Size()
	}
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovRelations(uint64(l))
	}
	l = len(m.ImageId)
	if l > 0 {
		n += 1 + l + sovRelations(uint64(l))
	}
	l = len(m.OperatingName)
	if l > 0 {
		n += 1 + l + sovRelations(uint64(l))
	}
	l = len(m.ComponentName)
	if l > 0 {
		n += 1 + l + sovRelations(uint64(l))
	}
	l = len(m.ComponentVersion)
	if l > 0 {
		n += 1 + l + sovRelations(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ImageComponentEdge_LayerIndex) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovRelations(uint64(m.LayerIndex))
	return n
}

func sovRelations(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRelations(x uint64) (n int) {
	return sovRelations(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ImageComponentEdge) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRelations
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ImageComponentEdge: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ImageComponentEdge: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LayerIndex", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasLayerIndex = &ImageComponentEdge_LayerIndex{v}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatingName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OperatingName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComponentVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRelations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRelations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRelations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ComponentVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRelations(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRelations
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRelations(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRelations
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRelations
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRelations
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRelations
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRelations
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRelations
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRelations        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRelations          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRelations = fmt.Errorf("proto: unexpected end of group")
)
