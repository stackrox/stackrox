// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: storage/namespace_metadata.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NamespaceMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" search:"Namespace ID" sql:"pk,type(uuid)"`                                                                                   // @gotags: search:"Namespace ID" sql:"pk,type(uuid)"
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" search:"Namespace,store"`                                                                               // @gotags: search:"Namespace,store"
	ClusterId     string                 `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty" search:"Cluster ID,hidden,store" sql:"fk(Cluster:id),no-fk-constraint,type(uuid)"`                                                    // @gotags: search:"Cluster ID,hidden,store" sql:"fk(Cluster:id),no-fk-constraint,type(uuid)"
	ClusterName   string                 `protobuf:"bytes,4,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty" search:"Cluster"`                                              // @gotags: search:"Cluster"
	Labels        map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" search:"Namespace Label"` // @gotags: search:"Namespace Label"
	CreationTime  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	Priority      int64                  `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`
	Annotations   map[string]string      `protobuf:"bytes,8,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" search:"Namespace Annotation"` // @gotags: search:"Namespace Annotation"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespaceMetadata) Reset() {
	*x = NamespaceMetadata{}
	mi := &file_storage_namespace_metadata_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceMetadata) ProtoMessage() {}

func (x *NamespaceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_storage_namespace_metadata_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceMetadata.ProtoReflect.Descriptor instead.
func (*NamespaceMetadata) Descriptor() ([]byte, []int) {
	return file_storage_namespace_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *NamespaceMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NamespaceMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NamespaceMetadata) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *NamespaceMetadata) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *NamespaceMetadata) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *NamespaceMetadata) GetCreationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationTime
	}
	return nil
}

func (x *NamespaceMetadata) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *NamespaceMetadata) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

var File_storage_namespace_metadata_proto protoreflect.FileDescriptor

const file_storage_namespace_metadata_proto_rawDesc = "" +
	"\n" +
	" storage/namespace_metadata.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\"\xe0\x03\n" +
	"\x11NamespaceMetadata\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\x12!\n" +
	"\fcluster_name\x18\x04 \x01(\tR\vclusterName\x12>\n" +
	"\x06labels\x18\x05 \x03(\v2&.storage.NamespaceMetadata.LabelsEntryR\x06labels\x12?\n" +
	"\rcreation_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\fcreationTime\x12\x1a\n" +
	"\bpriority\x18\a \x01(\x03R\bpriority\x12M\n" +
	"\vannotations\x18\b \x03(\v2+.storage.NamespaceMetadata.AnnotationsEntryR\vannotations\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B.\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storageb\x06proto3"

var (
	file_storage_namespace_metadata_proto_rawDescOnce sync.Once
	file_storage_namespace_metadata_proto_rawDescData []byte
)

func file_storage_namespace_metadata_proto_rawDescGZIP() []byte {
	file_storage_namespace_metadata_proto_rawDescOnce.Do(func() {
		file_storage_namespace_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_storage_namespace_metadata_proto_rawDesc), len(file_storage_namespace_metadata_proto_rawDesc)))
	})
	return file_storage_namespace_metadata_proto_rawDescData
}

var file_storage_namespace_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_storage_namespace_metadata_proto_goTypes = []any{
	(*NamespaceMetadata)(nil),     // 0: storage.NamespaceMetadata
	nil,                           // 1: storage.NamespaceMetadata.LabelsEntry
	nil,                           // 2: storage.NamespaceMetadata.AnnotationsEntry
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_storage_namespace_metadata_proto_depIdxs = []int32{
	1, // 0: storage.NamespaceMetadata.labels:type_name -> storage.NamespaceMetadata.LabelsEntry
	3, // 1: storage.NamespaceMetadata.creation_time:type_name -> google.protobuf.Timestamp
	2, // 2: storage.NamespaceMetadata.annotations:type_name -> storage.NamespaceMetadata.AnnotationsEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_storage_namespace_metadata_proto_init() }
func file_storage_namespace_metadata_proto_init() {
	if File_storage_namespace_metadata_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_namespace_metadata_proto_rawDesc), len(file_storage_namespace_metadata_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_namespace_metadata_proto_goTypes,
		DependencyIndexes: file_storage_namespace_metadata_proto_depIdxs,
		MessageInfos:      file_storage_namespace_metadata_proto_msgTypes,
	}.Build()
	File_storage_namespace_metadata_proto = out.File
	file_storage_namespace_metadata_proto_goTypes = nil
	file_storage_namespace_metadata_proto_depIdxs = nil
}
