// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: storage/secret.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SecretType int32

const (
	SecretType_UNDETERMINED             SecretType = 0
	SecretType_PUBLIC_CERTIFICATE       SecretType = 1
	SecretType_CERTIFICATE_REQUEST      SecretType = 2
	SecretType_PRIVACY_ENHANCED_MESSAGE SecretType = 3
	SecretType_OPENSSH_PRIVATE_KEY      SecretType = 4
	SecretType_PGP_PRIVATE_KEY          SecretType = 5
	SecretType_EC_PRIVATE_KEY           SecretType = 6
	SecretType_RSA_PRIVATE_KEY          SecretType = 7
	SecretType_DSA_PRIVATE_KEY          SecretType = 8
	SecretType_CERT_PRIVATE_KEY         SecretType = 9
	SecretType_ENCRYPTED_PRIVATE_KEY    SecretType = 10
	SecretType_IMAGE_PULL_SECRET        SecretType = 11
)

// Enum value maps for SecretType.
var (
	SecretType_name = map[int32]string{
		0:  "UNDETERMINED",
		1:  "PUBLIC_CERTIFICATE",
		2:  "CERTIFICATE_REQUEST",
		3:  "PRIVACY_ENHANCED_MESSAGE",
		4:  "OPENSSH_PRIVATE_KEY",
		5:  "PGP_PRIVATE_KEY",
		6:  "EC_PRIVATE_KEY",
		7:  "RSA_PRIVATE_KEY",
		8:  "DSA_PRIVATE_KEY",
		9:  "CERT_PRIVATE_KEY",
		10: "ENCRYPTED_PRIVATE_KEY",
		11: "IMAGE_PULL_SECRET",
	}
	SecretType_value = map[string]int32{
		"UNDETERMINED":             0,
		"PUBLIC_CERTIFICATE":       1,
		"CERTIFICATE_REQUEST":      2,
		"PRIVACY_ENHANCED_MESSAGE": 3,
		"OPENSSH_PRIVATE_KEY":      4,
		"PGP_PRIVATE_KEY":          5,
		"EC_PRIVATE_KEY":           6,
		"RSA_PRIVATE_KEY":          7,
		"DSA_PRIVATE_KEY":          8,
		"CERT_PRIVATE_KEY":         9,
		"ENCRYPTED_PRIVATE_KEY":    10,
		"IMAGE_PULL_SECRET":        11,
	}
)

func (x SecretType) Enum() *SecretType {
	p := new(SecretType)
	*p = x
	return p
}

func (x SecretType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecretType) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_secret_proto_enumTypes[0].Descriptor()
}

func (SecretType) Type() protoreflect.EnumType {
	return &file_storage_secret_proto_enumTypes[0]
}

func (x SecretType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecretType.Descriptor instead.
func (SecretType) EnumDescriptor() ([]byte, []int) {
	return file_storage_secret_proto_rawDescGZIP(), []int{0}
}

// Flat secret object.
// Any properties of an individual secret.
// (regardless of time, scope, or context)
// ////////////////////////////////////////
type Secret struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" search:"Secret ID,store,hidden" sql:"pk,type(uuid)"`                                      // @gotags: search:"Secret ID,store,hidden" sql:"pk,type(uuid)"
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" search:"Secret,store"`                                  // @gotags: search:"Secret,store"
	ClusterId   string                 `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty" search:"Cluster ID,store,hidden" sql:"type(uuid)"`       // @gotags: search:"Cluster ID,store,hidden" sql:"type(uuid)"
	ClusterName string                 `protobuf:"bytes,4,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty" search:"Cluster,store"` // @gotags: search:"Cluster,store"
	Namespace   string                 `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty" search:"Namespace,store"`                        // @gotags: search:"Namespace,store"
	Type        string                 `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Labels      map[string]string      `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Annotations map[string]string      `protobuf:"bytes,8,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" search:"Created Time"` // @gotags: search:"Created Time"
	// Metadata about the secrets.
	// The secret need not be a file, but rather may be an arbitrary value.
	Files         []*SecretDataFile   `protobuf:"bytes,10,rep,name=files,proto3" json:"files,omitempty"`
	Relationship  *SecretRelationship `protobuf:"bytes,11,opt,name=relationship,proto3" json:"relationship,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Secret) Reset() {
	*x = Secret{}
	mi := &file_storage_secret_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_storage_secret_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_storage_secret_proto_rawDescGZIP(), []int{0}
}

func (x *Secret) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Secret) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Secret) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *Secret) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *Secret) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Secret) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Secret) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Secret) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Secret) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Secret) GetFiles() []*SecretDataFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Secret) GetRelationship() *SecretRelationship {
	if x != nil {
		return x.Relationship
	}
	return nil
}

type ListSecret struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ClusterId     string                 `protobuf:"bytes,7,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	ClusterName   string                 `protobuf:"bytes,3,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	Namespace     string                 `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Types         []SecretType           `protobuf:"varint,5,rep,packed,name=types,proto3,enum=storage.SecretType" json:"types,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSecret) Reset() {
	*x = ListSecret{}
	mi := &file_storage_secret_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSecret) ProtoMessage() {}

func (x *ListSecret) ProtoReflect() protoreflect.Message {
	mi := &file_storage_secret_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSecret.ProtoReflect.Descriptor instead.
func (*ListSecret) Descriptor() ([]byte, []int) {
	return file_storage_secret_proto_rawDescGZIP(), []int{1}
}

func (x *ListSecret) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListSecret) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListSecret) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ListSecret) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ListSecret) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListSecret) GetTypes() []SecretType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *ListSecret) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// The combined relationships that belong to the secret.
// Next Tag: 6
type SecretRelationship struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Secret id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Container id to relationship.s
	ContainerRelationships []*SecretContainerRelationship `protobuf:"bytes,4,rep,name=container_relationships,json=containerRelationships,proto3" json:"container_relationships,omitempty"`
	// Deployment id to relationship.
	DeploymentRelationships []*SecretDeploymentRelationship `protobuf:"bytes,5,rep,name=deployment_relationships,json=deploymentRelationships,proto3" json:"deployment_relationships,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SecretRelationship) Reset() {
	*x = SecretRelationship{}
	mi := &file_storage_secret_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecretRelationship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretRelationship) ProtoMessage() {}

func (x *SecretRelationship) ProtoReflect() protoreflect.Message {
	mi := &file_storage_secret_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretRelationship.ProtoReflect.Descriptor instead.
func (*SecretRelationship) Descriptor() ([]byte, []int) {
	return file_storage_secret_proto_rawDescGZIP(), []int{2}
}

func (x *SecretRelationship) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SecretRelationship) GetContainerRelationships() []*SecretContainerRelationship {
	if x != nil {
		return x.ContainerRelationships
	}
	return nil
}

func (x *SecretRelationship) GetDeploymentRelationships() []*SecretDeploymentRelationship {
	if x != nil {
		return x.DeploymentRelationships
	}
	return nil
}

// Secrets can be used by a deployment.
// Next Tag: 3
type SecretDeploymentRelationship struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of the deployment using the secret within a container.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the deployment.
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecretDeploymentRelationship) Reset() {
	*x = SecretDeploymentRelationship{}
	mi := &file_storage_secret_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecretDeploymentRelationship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretDeploymentRelationship) ProtoMessage() {}

func (x *SecretDeploymentRelationship) ProtoReflect() protoreflect.Message {
	mi := &file_storage_secret_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretDeploymentRelationship.ProtoReflect.Descriptor instead.
func (*SecretDeploymentRelationship) Descriptor() ([]byte, []int) {
	return file_storage_secret_proto_rawDescGZIP(), []int{3}
}

func (x *SecretDeploymentRelationship) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SecretDeploymentRelationship) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Secrets can be mounted in a path in a container.
// Next Tag: 3
type SecretContainerRelationship struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of the container the secret is mounted in.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Path is a container specific mounting directory.
	Path          string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecretContainerRelationship) Reset() {
	*x = SecretContainerRelationship{}
	mi := &file_storage_secret_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecretContainerRelationship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretContainerRelationship) ProtoMessage() {}

func (x *SecretContainerRelationship) ProtoReflect() protoreflect.Message {
	mi := &file_storage_secret_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretContainerRelationship.ProtoReflect.Descriptor instead.
func (*SecretContainerRelationship) Descriptor() ([]byte, []int) {
	return file_storage_secret_proto_rawDescGZIP(), []int{4}
}

func (x *SecretContainerRelationship) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SecretContainerRelationship) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ImagePullSecret struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Registries    []*ImagePullSecret_Registry `protobuf:"bytes,1,rep,name=registries,proto3" json:"registries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImagePullSecret) Reset() {
	*x = ImagePullSecret{}
	mi := &file_storage_secret_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImagePullSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagePullSecret) ProtoMessage() {}

func (x *ImagePullSecret) ProtoReflect() protoreflect.Message {
	mi := &file_storage_secret_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagePullSecret.ProtoReflect.Descriptor instead.
func (*ImagePullSecret) Descriptor() ([]byte, []int) {
	return file_storage_secret_proto_rawDescGZIP(), []int{5}
}

func (x *ImagePullSecret) GetRegistries() []*ImagePullSecret_Registry {
	if x != nil {
		return x.Registries
	}
	return nil
}

// Metadata about secret. Additional information is presented for a certificate file and
// imagePullSecret, but the "file" may also represent some arbitrary value.
type SecretDataFile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type  SecretType             `protobuf:"varint,2,opt,name=type,proto3,enum=storage.SecretType" json:"type,omitempty" search:"Secret Type"` // @gotags: search:"Secret Type"
	// Types that are valid to be assigned to Metadata:
	//
	//	*SecretDataFile_Cert
	//	*SecretDataFile_ImagePullSecret
	Metadata      isSecretDataFile_Metadata `protobuf_oneof:"metadata"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecretDataFile) Reset() {
	*x = SecretDataFile{}
	mi := &file_storage_secret_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecretDataFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretDataFile) ProtoMessage() {}

func (x *SecretDataFile) ProtoReflect() protoreflect.Message {
	mi := &file_storage_secret_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretDataFile.ProtoReflect.Descriptor instead.
func (*SecretDataFile) Descriptor() ([]byte, []int) {
	return file_storage_secret_proto_rawDescGZIP(), []int{6}
}

func (x *SecretDataFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SecretDataFile) GetType() SecretType {
	if x != nil {
		return x.Type
	}
	return SecretType_UNDETERMINED
}

func (x *SecretDataFile) GetMetadata() isSecretDataFile_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SecretDataFile) GetCert() *Cert {
	if x != nil {
		if x, ok := x.Metadata.(*SecretDataFile_Cert); ok {
			return x.Cert
		}
	}
	return nil
}

func (x *SecretDataFile) GetImagePullSecret() *ImagePullSecret {
	if x != nil {
		if x, ok := x.Metadata.(*SecretDataFile_ImagePullSecret); ok {
			return x.ImagePullSecret
		}
	}
	return nil
}

type isSecretDataFile_Metadata interface {
	isSecretDataFile_Metadata()
}

type SecretDataFile_Cert struct {
	Cert *Cert `protobuf:"bytes,3,opt,name=cert,proto3,oneof"`
}

type SecretDataFile_ImagePullSecret struct {
	ImagePullSecret *ImagePullSecret `protobuf:"bytes,4,opt,name=image_pull_secret,json=imagePullSecret,proto3,oneof"`
}

func (*SecretDataFile_Cert) isSecretDataFile_Metadata() {}

func (*SecretDataFile_ImagePullSecret) isSecretDataFile_Metadata() {}

type Cert struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subject       *CertName              `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Issuer        *CertName              `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Sans          []string               `protobuf:"bytes,3,rep,name=sans,proto3" json:"sans,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty" search:"Cert Expiration"` // @gotags: search:"Cert Expiration"
	Algorithm     string                 `protobuf:"bytes,6,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cert) Reset() {
	*x = Cert{}
	mi := &file_storage_secret_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cert) ProtoMessage() {}

func (x *Cert) ProtoReflect() protoreflect.Message {
	mi := &file_storage_secret_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cert.ProtoReflect.Descriptor instead.
func (*Cert) Descriptor() ([]byte, []int) {
	return file_storage_secret_proto_rawDescGZIP(), []int{7}
}

func (x *Cert) GetSubject() *CertName {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *Cert) GetIssuer() *CertName {
	if x != nil {
		return x.Issuer
	}
	return nil
}

func (x *Cert) GetSans() []string {
	if x != nil {
		return x.Sans
	}
	return nil
}

func (x *Cert) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Cert) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Cert) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

type CertName struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CommonName       string                 `protobuf:"bytes,1,opt,name=common_name,json=commonName,proto3" json:"common_name,omitempty"`
	Country          string                 `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	Organization     string                 `protobuf:"bytes,3,opt,name=organization,proto3" json:"organization,omitempty"`
	OrganizationUnit string                 `protobuf:"bytes,4,opt,name=organization_unit,json=organizationUnit,proto3" json:"organization_unit,omitempty"`
	Locality         string                 `protobuf:"bytes,5,opt,name=locality,proto3" json:"locality,omitempty"`
	Province         string                 `protobuf:"bytes,6,opt,name=province,proto3" json:"province,omitempty"`
	StreetAddress    string                 `protobuf:"bytes,7,opt,name=street_address,json=streetAddress,proto3" json:"street_address,omitempty"`
	PostalCode       string                 `protobuf:"bytes,8,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	Names            []string               `protobuf:"bytes,9,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CertName) Reset() {
	*x = CertName{}
	mi := &file_storage_secret_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CertName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertName) ProtoMessage() {}

func (x *CertName) ProtoReflect() protoreflect.Message {
	mi := &file_storage_secret_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertName.ProtoReflect.Descriptor instead.
func (*CertName) Descriptor() ([]byte, []int) {
	return file_storage_secret_proto_rawDescGZIP(), []int{8}
}

func (x *CertName) GetCommonName() string {
	if x != nil {
		return x.CommonName
	}
	return ""
}

func (x *CertName) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CertName) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *CertName) GetOrganizationUnit() string {
	if x != nil {
		return x.OrganizationUnit
	}
	return ""
}

func (x *CertName) GetLocality() string {
	if x != nil {
		return x.Locality
	}
	return ""
}

func (x *CertName) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *CertName) GetStreetAddress() string {
	if x != nil {
		return x.StreetAddress
	}
	return ""
}

func (x *CertName) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *CertName) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type ImagePullSecret_Registry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" search:"Image Pull Secret Registry,store"` // @gotags: search:"Image Pull Secret Registry,store"
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImagePullSecret_Registry) Reset() {
	*x = ImagePullSecret_Registry{}
	mi := &file_storage_secret_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImagePullSecret_Registry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagePullSecret_Registry) ProtoMessage() {}

func (x *ImagePullSecret_Registry) ProtoReflect() protoreflect.Message {
	mi := &file_storage_secret_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagePullSecret_Registry.ProtoReflect.Descriptor instead.
func (*ImagePullSecret_Registry) Descriptor() ([]byte, []int) {
	return file_storage_secret_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ImagePullSecret_Registry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImagePullSecret_Registry) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

var File_storage_secret_proto protoreflect.FileDescriptor

const file_storage_secret_proto_rawDesc = "" +
	"\n" +
	"\x14storage/secret.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\"\xbf\x04\n" +
	"\x06Secret\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\x12!\n" +
	"\fcluster_name\x18\x04 \x01(\tR\vclusterName\x12\x1c\n" +
	"\tnamespace\x18\x05 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04type\x18\x06 \x01(\tR\x04type\x123\n" +
	"\x06labels\x18\a \x03(\v2\x1b.storage.Secret.LabelsEntryR\x06labels\x12B\n" +
	"\vannotations\x18\b \x03(\v2 .storage.Secret.AnnotationsEntryR\vannotations\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12-\n" +
	"\x05files\x18\n" +
	" \x03(\v2\x17.storage.SecretDataFileR\x05files\x12?\n" +
	"\frelationship\x18\v \x01(\v2\x1b.storage.SecretRelationshipR\frelationship\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf6\x01\n" +
	"\n" +
	"ListSecret\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\a \x01(\tR\tclusterId\x12!\n" +
	"\fcluster_name\x18\x03 \x01(\tR\vclusterName\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12)\n" +
	"\x05types\x18\x05 \x03(\x0e2\x13.storage.SecretTypeR\x05types\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xe5\x01\n" +
	"\x12SecretRelationship\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12]\n" +
	"\x17container_relationships\x18\x04 \x03(\v2$.storage.SecretContainerRelationshipR\x16containerRelationships\x12`\n" +
	"\x18deployment_relationships\x18\x05 \x03(\v2%.storage.SecretDeploymentRelationshipR\x17deploymentRelationships\"B\n" +
	"\x1cSecretDeploymentRelationship\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"A\n" +
	"\x1bSecretContainerRelationship\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"\x90\x01\n" +
	"\x0fImagePullSecret\x12A\n" +
	"\n" +
	"registries\x18\x01 \x03(\v2!.storage.ImagePullSecret.RegistryR\n" +
	"registries\x1a:\n" +
	"\bRegistry\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\"\xc6\x01\n" +
	"\x0eSecretDataFile\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12'\n" +
	"\x04type\x18\x02 \x01(\x0e2\x13.storage.SecretTypeR\x04type\x12#\n" +
	"\x04cert\x18\x03 \x01(\v2\r.storage.CertH\x00R\x04cert\x12F\n" +
	"\x11image_pull_secret\x18\x04 \x01(\v2\x18.storage.ImagePullSecretH\x00R\x0fimagePullSecretB\n" +
	"\n" +
	"\bmetadata\"\x82\x02\n" +
	"\x04Cert\x12+\n" +
	"\asubject\x18\x01 \x01(\v2\x11.storage.CertNameR\asubject\x12)\n" +
	"\x06issuer\x18\x02 \x01(\v2\x11.storage.CertNameR\x06issuer\x12\x12\n" +
	"\x04sans\x18\x03 \x03(\tR\x04sans\x129\n" +
	"\n" +
	"start_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x12\x1c\n" +
	"\talgorithm\x18\x06 \x01(\tR\talgorithm\"\xac\x02\n" +
	"\bCertName\x12\x1f\n" +
	"\vcommon_name\x18\x01 \x01(\tR\n" +
	"commonName\x12\x18\n" +
	"\acountry\x18\x02 \x01(\tR\acountry\x12\"\n" +
	"\forganization\x18\x03 \x01(\tR\forganization\x12+\n" +
	"\x11organization_unit\x18\x04 \x01(\tR\x10organizationUnit\x12\x1a\n" +
	"\blocality\x18\x05 \x01(\tR\blocality\x12\x1a\n" +
	"\bprovince\x18\x06 \x01(\tR\bprovince\x12%\n" +
	"\x0estreet_address\x18\a \x01(\tR\rstreetAddress\x12\x1f\n" +
	"\vpostal_code\x18\b \x01(\tR\n" +
	"postalCode\x12\x14\n" +
	"\x05names\x18\t \x03(\tR\x05names*\xa1\x02\n" +
	"\n" +
	"SecretType\x12\x10\n" +
	"\fUNDETERMINED\x10\x00\x12\x16\n" +
	"\x12PUBLIC_CERTIFICATE\x10\x01\x12\x17\n" +
	"\x13CERTIFICATE_REQUEST\x10\x02\x12\x1c\n" +
	"\x18PRIVACY_ENHANCED_MESSAGE\x10\x03\x12\x17\n" +
	"\x13OPENSSH_PRIVATE_KEY\x10\x04\x12\x13\n" +
	"\x0fPGP_PRIVATE_KEY\x10\x05\x12\x12\n" +
	"\x0eEC_PRIVATE_KEY\x10\x06\x12\x13\n" +
	"\x0fRSA_PRIVATE_KEY\x10\a\x12\x13\n" +
	"\x0fDSA_PRIVATE_KEY\x10\b\x12\x14\n" +
	"\x10CERT_PRIVATE_KEY\x10\t\x12\x19\n" +
	"\x15ENCRYPTED_PRIVATE_KEY\x10\n" +
	"\x12\x15\n" +
	"\x11IMAGE_PULL_SECRET\x10\vB.\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storageb\x06proto3"

var (
	file_storage_secret_proto_rawDescOnce sync.Once
	file_storage_secret_proto_rawDescData []byte
)

func file_storage_secret_proto_rawDescGZIP() []byte {
	file_storage_secret_proto_rawDescOnce.Do(func() {
		file_storage_secret_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_storage_secret_proto_rawDesc), len(file_storage_secret_proto_rawDesc)))
	})
	return file_storage_secret_proto_rawDescData
}

var file_storage_secret_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storage_secret_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_storage_secret_proto_goTypes = []any{
	(SecretType)(0),                      // 0: storage.SecretType
	(*Secret)(nil),                       // 1: storage.Secret
	(*ListSecret)(nil),                   // 2: storage.ListSecret
	(*SecretRelationship)(nil),           // 3: storage.SecretRelationship
	(*SecretDeploymentRelationship)(nil), // 4: storage.SecretDeploymentRelationship
	(*SecretContainerRelationship)(nil),  // 5: storage.SecretContainerRelationship
	(*ImagePullSecret)(nil),              // 6: storage.ImagePullSecret
	(*SecretDataFile)(nil),               // 7: storage.SecretDataFile
	(*Cert)(nil),                         // 8: storage.Cert
	(*CertName)(nil),                     // 9: storage.CertName
	nil,                                  // 10: storage.Secret.LabelsEntry
	nil,                                  // 11: storage.Secret.AnnotationsEntry
	(*ImagePullSecret_Registry)(nil),     // 12: storage.ImagePullSecret.Registry
	(*timestamppb.Timestamp)(nil),        // 13: google.protobuf.Timestamp
}
var file_storage_secret_proto_depIdxs = []int32{
	10, // 0: storage.Secret.labels:type_name -> storage.Secret.LabelsEntry
	11, // 1: storage.Secret.annotations:type_name -> storage.Secret.AnnotationsEntry
	13, // 2: storage.Secret.created_at:type_name -> google.protobuf.Timestamp
	7,  // 3: storage.Secret.files:type_name -> storage.SecretDataFile
	3,  // 4: storage.Secret.relationship:type_name -> storage.SecretRelationship
	0,  // 5: storage.ListSecret.types:type_name -> storage.SecretType
	13, // 6: storage.ListSecret.created_at:type_name -> google.protobuf.Timestamp
	5,  // 7: storage.SecretRelationship.container_relationships:type_name -> storage.SecretContainerRelationship
	4,  // 8: storage.SecretRelationship.deployment_relationships:type_name -> storage.SecretDeploymentRelationship
	12, // 9: storage.ImagePullSecret.registries:type_name -> storage.ImagePullSecret.Registry
	0,  // 10: storage.SecretDataFile.type:type_name -> storage.SecretType
	8,  // 11: storage.SecretDataFile.cert:type_name -> storage.Cert
	6,  // 12: storage.SecretDataFile.image_pull_secret:type_name -> storage.ImagePullSecret
	9,  // 13: storage.Cert.subject:type_name -> storage.CertName
	9,  // 14: storage.Cert.issuer:type_name -> storage.CertName
	13, // 15: storage.Cert.start_date:type_name -> google.protobuf.Timestamp
	13, // 16: storage.Cert.end_date:type_name -> google.protobuf.Timestamp
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_storage_secret_proto_init() }
func file_storage_secret_proto_init() {
	if File_storage_secret_proto != nil {
		return
	}
	file_storage_secret_proto_msgTypes[6].OneofWrappers = []any{
		(*SecretDataFile_Cert)(nil),
		(*SecretDataFile_ImagePullSecret)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_secret_proto_rawDesc), len(file_storage_secret_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_secret_proto_goTypes,
		DependencyIndexes: file_storage_secret_proto_depIdxs,
		EnumInfos:         file_storage_secret_proto_enumTypes,
		MessageInfos:      file_storage_secret_proto_msgTypes,
	}.Build()
	File_storage_secret_proto = out.File
	file_storage_secret_proto_goTypes = nil
	file_storage_secret_proto_depIdxs = nil
}
