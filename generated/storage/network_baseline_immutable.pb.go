// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package storage

import (
	"iter"
	"time"
)

// ImmutableNetworkBaselineConnectionProperties is an immutable interface for NetworkBaselineConnectionProperties
type ImmutableNetworkBaselineConnectionProperties interface {
	// Whether this connection is an ingress/egress, from the PoV
	// of the deployment whose baseline this is in
	GetIngress() bool
	// May be 0 if not applicable (e.g., icmp), and denotes the destination port
	GetPort() uint32
	GetProtocol() L4Protocol
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *NetworkBaselineConnectionProperties
}

// Verify that NetworkBaselineConnectionProperties implements ImmutableNetworkBaselineConnectionProperties
var _ ImmutableNetworkBaselineConnectionProperties = (*NetworkBaselineConnectionProperties)(nil)

// ImmutableNetworkBaselinePeer is an immutable interface for NetworkBaselinePeer
type ImmutableNetworkBaselinePeer interface {
	GetImmutableEntity() ImmutableNetworkEntity
	// Will always have at least one element
	GetImmutableProperties() iter.Seq[ImmutableNetworkBaselineConnectionProperties]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *NetworkBaselinePeer
}

// GetImmutableEntity implements ImmutableNetworkBaselinePeer
func (m *NetworkBaselinePeer) GetImmutableEntity() ImmutableNetworkEntity {
	return m.GetEntity()
}

// GetImmutableProperties implements ImmutableNetworkBaselinePeer
func (m *NetworkBaselinePeer) GetImmutableProperties() iter.Seq[ImmutableNetworkBaselineConnectionProperties] {
	return func(yield func(ImmutableNetworkBaselineConnectionProperties) bool) {
		if m == nil || m.Properties == nil {
			return
		}
		for _, v := range m.Properties {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that NetworkBaselinePeer implements ImmutableNetworkBaselinePeer
var _ ImmutableNetworkBaselinePeer = (*NetworkBaselinePeer)(nil)

// ImmutableNetworkBaseline is an immutable interface for NetworkBaseline
type ImmutableNetworkBaseline interface {
	// This is the ID of the baseline.
	GetDeploymentId() string
	GetClusterId() string
	GetNamespace() string
	GetImmutablePeers() iter.Seq[ImmutableNetworkBaselinePeer]
	// A list of peers that will never be added to the baseline.
	// For now, this contains peers that the user has manually removed.
	// This is used to ensure we don't add it back in the event
	// we see the flow again.
	GetImmutableForbiddenPeers() iter.Seq[ImmutableNetworkBaselinePeer]
	GetImmutableObservationPeriodEnd() time.Time
	// Indicates if this baseline has been locked by user.
	// Here locking means:
	// 1: Do not let system automatically add any allowed peer to baseline
	// 2: Start reporting violations on flows that are not in the baseline
	GetLocked() bool
	GetDeploymentName() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *NetworkBaseline
}

// GetImmutablePeers implements ImmutableNetworkBaseline
func (m *NetworkBaseline) GetImmutablePeers() iter.Seq[ImmutableNetworkBaselinePeer] {
	return func(yield func(ImmutableNetworkBaselinePeer) bool) {
		if m == nil || m.Peers == nil {
			return
		}
		for _, v := range m.Peers {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableForbiddenPeers implements ImmutableNetworkBaseline
func (m *NetworkBaseline) GetImmutableForbiddenPeers() iter.Seq[ImmutableNetworkBaselinePeer] {
	return func(yield func(ImmutableNetworkBaselinePeer) bool) {
		if m == nil || m.ForbiddenPeers == nil {
			return
		}
		for _, v := range m.ForbiddenPeers {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableObservationPeriodEnd implements ImmutableNetworkBaseline
func (m *NetworkBaseline) GetImmutableObservationPeriodEnd() time.Time {
	if m == nil || m.ObservationPeriodEnd == nil {
		return time.Time{}
	}
	return m.ObservationPeriodEnd.AsTime()
}

// Verify that NetworkBaseline implements ImmutableNetworkBaseline
var _ ImmutableNetworkBaseline = (*NetworkBaseline)(nil)
