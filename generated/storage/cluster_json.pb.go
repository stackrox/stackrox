// Code generated by protoc-gen-go-json. DO NOT EDIT.

package storage

import (
	fmt "fmt"
	strings "strings"
	unsafe "unsafe"
)

func (m *ClusterMetadata) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *ClusterMetadata) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetType(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("type")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetName(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("name")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("id")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	buf.WriteString("}")
	return nil
}

func (m *GoogleProviderMetadata) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *GoogleProviderMetadata) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetProject(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("project")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetClusterName(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("clusterName")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	buf.WriteString("}")
	return nil
}

func (m *AWSProviderMetadata) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *AWSProviderMetadata) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetAccountId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("accountId")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	buf.WriteString("}")
	return nil
}

func (m *AzureProviderMetadata) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *AzureProviderMetadata) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetSubscriptionId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("subscriptionId")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	buf.WriteString("}")
	return nil
}

func (m *ProviderMetadata) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *ProviderMetadata) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetRegion(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("region")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetZone(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("zone")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetGoogle(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("google")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetAws(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("aws")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetAzure(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("azure")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetVerified(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("verified")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetCluster(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("cluster")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *OrchestratorMetadata) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *OrchestratorMetadata) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetVersion(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("version")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetOpenshiftVersion(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("openshiftVersion")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetBuildDate(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("buildDate")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if t := x; t == nil {
			buf.WriteString("null")
		} else {
			tf := t.AsTime().UTC().Format("2006-01-02T15:04:05.000000000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, ".000")
			buf.WriteString("\"" + tf + "Z" + "\"")
		}
	}
	if x := m.GetApiVersions(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("apiVersions")
		buf.WriteByte('"')
		buf.WriteByte(':')
		trailingComma = false
		buf.WriteByte('[')
		for _, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			fmt.Fprintf(buf, "%q", v)
		}
		buf.WriteByte(']')
	}
	buf.WriteString("}")
	return nil
}

func (m *AdmissionControllerConfig) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *AdmissionControllerConfig) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetEnabled(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("enabled")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetTimeoutSeconds(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("timeoutSeconds")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%d", x)
	}
	if x := m.GetScanInline(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("scanInline")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetDisableBypass(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("disableBypass")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetEnforceOnUpdates(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("enforceOnUpdates")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *TolerationsConfig) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *TolerationsConfig) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetDisabled(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("disabled")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *StaticClusterConfig) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *StaticClusterConfig) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetType(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("type")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetMainImage(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("mainImage")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetCentralApiEndpoint(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("centralApiEndpoint")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetCollectionMethod(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("collectionMethod")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetCollectorImage(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("collectorImage")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetAdmissionController(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("admissionController")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetAdmissionControllerUpdates(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("admissionControllerUpdates")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetTolerationsConfig(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("tolerationsConfig")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetSlimCollector(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("slimCollector")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetAdmissionControllerEvents(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("admissionControllerEvents")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *DynamicClusterConfig) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *DynamicClusterConfig) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetAdmissionControllerConfig(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("admissionControllerConfig")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetRegistryOverride(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("registryOverride")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetDisableAuditLogs(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("disableAuditLogs")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *CompleteClusterConfig) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *CompleteClusterConfig) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetDynamicConfig(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("dynamicConfig")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetStaticConfig(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("staticConfig")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetConfigFingerprint(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("configFingerprint")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetClusterLabels(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("clusterLabels")
		buf.WriteByte('"')
		buf.WriteByte(':')
		trailingComma = false
		buf.WriteByte('{')
		for k, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			fmt.Fprintf(buf, "%q", k)
			buf.WriteByte(':')
			fmt.Fprintf(buf, "%q", v)
		}
		buf.WriteByte('}')
	}
	buf.WriteString("}")
	return nil
}

func (m *SensorDeploymentIdentification) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *SensorDeploymentIdentification) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetSystemNamespaceId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("systemNamespaceId")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetDefaultNamespaceId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("defaultNamespaceId")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetAppNamespace(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("appNamespace")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetAppNamespaceId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("appNamespaceId")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetAppServiceaccountId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("appServiceaccountId")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetK8SNodeName(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("k8sNodeName")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	buf.WriteString("}")
	return nil
}

func (m *Cluster) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *Cluster) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("id")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetName(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("name")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetType(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("type")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetLabels(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("labels")
		buf.WriteByte('"')
		buf.WriteByte(':')
		trailingComma = false
		buf.WriteByte('{')
		for k, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			fmt.Fprintf(buf, "%q", k)
			buf.WriteByte(':')
			fmt.Fprintf(buf, "%q", v)
		}
		buf.WriteByte('}')
	}
	if x := m.GetMainImage(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("mainImage")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetCollectorImage(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("collectorImage")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetCentralApiEndpoint(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("centralApiEndpoint")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetRuntimeSupport(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("runtimeSupport")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetCollectionMethod(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("collectionMethod")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetAdmissionController(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("admissionController")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetAdmissionControllerUpdates(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("admissionControllerUpdates")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetAdmissionControllerEvents(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("admissionControllerEvents")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetStatus(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("status")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetDynamicConfig(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("dynamicConfig")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetTolerationsConfig(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("tolerationsConfig")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetPriority(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("priority")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "\"%d\"", x)
	}
	if x := m.GetHealthStatus(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("healthStatus")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetSlimCollector(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("slimCollector")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetHelmConfig(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("helmConfig")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetMostRecentSensorId(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("mostRecentSensorId")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetAuditLogState(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("auditLogState")
		buf.WriteByte('"')
		buf.WriteByte(':')
		trailingComma = false
		buf.WriteByte('{')
		for k, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			fmt.Fprintf(buf, "%q", k)
			buf.WriteByte(':')
			if err := v.marshalJSON(buf); err != nil {
				return err
			}
		}
		buf.WriteByte('}')
	}
	if x := m.GetInitBundleId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("initBundleId")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetManagedBy(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("managedBy")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetSensorCapabilities(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("sensorCapabilities")
		buf.WriteByte('"')
		buf.WriteByte(':')
		trailingComma = false
		buf.WriteByte('[')
		for _, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			fmt.Fprintf(buf, "%q", v)
		}
		buf.WriteByte(']')
	}
	buf.WriteString("}")
	return nil
}

func (m *ClusterCertExpiryStatus) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *ClusterCertExpiryStatus) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetSensorCertExpiry(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("sensorCertExpiry")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if t := x; t == nil {
			buf.WriteString("null")
		} else {
			tf := t.AsTime().UTC().Format("2006-01-02T15:04:05.000000000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, ".000")
			buf.WriteString("\"" + tf + "Z" + "\"")
		}
	}
	if x := m.GetSensorCertNotBefore(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("sensorCertNotBefore")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if t := x; t == nil {
			buf.WriteString("null")
		} else {
			tf := t.AsTime().UTC().Format("2006-01-02T15:04:05.000000000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, ".000")
			buf.WriteString("\"" + tf + "Z" + "\"")
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *ClusterStatus) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *ClusterStatus) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetSensorVersion(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("sensorVersion")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetDEPRECATEDLastContact(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("DEPRECATEDLastContact")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if t := x; t == nil {
			buf.WriteString("null")
		} else {
			tf := t.AsTime().UTC().Format("2006-01-02T15:04:05.000000000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, ".000")
			buf.WriteString("\"" + tf + "Z" + "\"")
		}
	}
	if x := m.GetProviderMetadata(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("providerMetadata")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetOrchestratorMetadata(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("orchestratorMetadata")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetUpgradeStatus(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("upgradeStatus")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetCertExpiryStatus(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("certExpiryStatus")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *ClusterUpgradeStatus) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *ClusterUpgradeStatus) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetUpgradability(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("upgradability")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetUpgradabilityStatusReason(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("upgradabilityStatusReason")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetMostRecentProcess(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("mostRecentProcess")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *ClusterUpgradeStatus_UpgradeProcessStatus) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *ClusterUpgradeStatus_UpgradeProcessStatus) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetActive(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("active")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("id")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetTargetVersion(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("targetVersion")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetUpgraderImage(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("upgraderImage")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetInitiatedAt(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("initiatedAt")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if t := x; t == nil {
			buf.WriteString("null")
		} else {
			tf := t.AsTime().UTC().Format("2006-01-02T15:04:05.000000000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, ".000")
			buf.WriteString("\"" + tf + "Z" + "\"")
		}
	}
	if x := m.GetProgress(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("progress")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetType(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("type")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	buf.WriteString("}")
	return nil
}

func (m *UpgradeProgress) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *UpgradeProgress) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetUpgradeState(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("upgradeState")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetUpgradeStatusDetail(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("upgradeStatusDetail")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetSince(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("since")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if t := x; t == nil {
			buf.WriteString("null")
		} else {
			tf := t.AsTime().UTC().Format("2006-01-02T15:04:05.000000000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, ".000")
			buf.WriteString("\"" + tf + "Z" + "\"")
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *AuditLogFileState) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *AuditLogFileState) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetCollectLogsSince(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("collectLogsSince")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if t := x; t == nil {
			buf.WriteString("null")
		} else {
			tf := t.AsTime().UTC().Format("2006-01-02T15:04:05.000000000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, ".000")
			buf.WriteString("\"" + tf + "Z" + "\"")
		}
	}
	if x := m.GetLastAuditId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("lastAuditId")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	buf.WriteString("}")
	return nil
}

func (m *ClusterHealthStatus) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *ClusterHealthStatus) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("id")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetCollectorHealthInfo(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("collectorHealthInfo")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetAdmissionControlHealthInfo(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("admissionControlHealthInfo")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetScannerHealthInfo(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("scannerHealthInfo")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetSensorHealthStatus(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("sensorHealthStatus")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetCollectorHealthStatus(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("collectorHealthStatus")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetOverallHealthStatus(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("overallHealthStatus")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetAdmissionControlHealthStatus(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("admissionControlHealthStatus")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetScannerHealthStatus(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("scannerHealthStatus")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetLastContact(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("lastContact")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if t := x; t == nil {
			buf.WriteString("null")
		} else {
			tf := t.AsTime().UTC().Format("2006-01-02T15:04:05.000000000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, ".000")
			buf.WriteString("\"" + tf + "Z" + "\"")
		}
	}
	if x := m.GetHealthInfoComplete(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("healthInfoComplete")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *CollectorHealthInfo) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *CollectorHealthInfo) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetVersion(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("version")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetTotalDesiredPods(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("totalDesiredPods")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%d", x)
	}
	if x := m.GetTotalReadyPods(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("totalReadyPods")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%d", x)
	}
	if x := m.GetTotalRegisteredNodes(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("totalRegisteredNodes")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%d", x)
	}
	if x := m.GetStatusErrors(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("statusErrors")
		buf.WriteByte('"')
		buf.WriteByte(':')
		trailingComma = false
		buf.WriteByte('[')
		for _, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			fmt.Fprintf(buf, "%q", v)
		}
		buf.WriteByte(']')
	}
	buf.WriteString("}")
	return nil
}

func (m *AdmissionControlHealthInfo) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *AdmissionControlHealthInfo) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetTotalDesiredPods(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("totalDesiredPods")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%d", x)
	}
	if x := m.GetTotalReadyPods(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("totalReadyPods")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%d", x)
	}
	if x := m.GetStatusErrors(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("statusErrors")
		buf.WriteByte('"')
		buf.WriteByte(':')
		trailingComma = false
		buf.WriteByte('[')
		for _, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			fmt.Fprintf(buf, "%q", v)
		}
		buf.WriteByte(']')
	}
	buf.WriteString("}")
	return nil
}

func (m *ScannerHealthInfo) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *ScannerHealthInfo) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetTotalDesiredAnalyzerPods(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("totalDesiredAnalyzerPods")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%d", x)
	}
	if x := m.GetTotalReadyAnalyzerPods(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("totalReadyAnalyzerPods")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%d", x)
	}
	if x := m.GetTotalDesiredDbPods(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("totalDesiredDbPods")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%d", x)
	}
	if x := m.GetTotalReadyDbPods(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("totalReadyDbPods")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%d", x)
	}
	if x := m.GetStatusErrors(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("statusErrors")
		buf.WriteByte('"')
		buf.WriteByte(':')
		trailingComma = false
		buf.WriteByte('[')
		for _, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			fmt.Fprintf(buf, "%q", v)
		}
		buf.WriteByte(']')
	}
	buf.WriteString("}")
	return nil
}
