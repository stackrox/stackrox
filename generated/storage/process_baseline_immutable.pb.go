// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package storage

import (
	"iter"
	"time"
)

// ImmutableProcessBaselineKey is an immutable interface for ProcessBaselineKey
type ImmutableProcessBaselineKey interface {
	// The idea is for the keys to be flexible.
	// Only certain combinations of these will be supported.
	GetDeploymentId() string
	GetContainerName() string
	GetClusterId() string
	GetNamespace() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ProcessBaselineKey
}

// Verify that ProcessBaselineKey implements ImmutableProcessBaselineKey
var _ ImmutableProcessBaselineKey = (*ProcessBaselineKey)(nil)

// ImmutableProcessBaseline is an immutable interface for ProcessBaseline
type ImmutableProcessBaseline interface {
	GetId() string
	GetImmutableKey() ImmutableProcessBaselineKey
	GetImmutableElements() iter.Seq[ImmutableBaselineElement]
	GetImmutableElementGraveyard() iter.Seq[ImmutableBaselineElement]
	GetImmutableCreated() time.Time
	GetImmutableUserLockedTimestamp() time.Time
	GetImmutableStackRoxLockedTimestamp() time.Time
	GetImmutableLastUpdate() time.Time
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ProcessBaseline
}

// GetImmutableKey implements ImmutableProcessBaseline
func (m *ProcessBaseline) GetImmutableKey() ImmutableProcessBaselineKey {
	return m.GetKey()
}

// GetImmutableElements implements ImmutableProcessBaseline
func (m *ProcessBaseline) GetImmutableElements() iter.Seq[ImmutableBaselineElement] {
	return func(yield func(ImmutableBaselineElement) bool) {
		if m == nil || m.Elements == nil {
			return
		}
		for _, v := range m.Elements {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableElementGraveyard implements ImmutableProcessBaseline
func (m *ProcessBaseline) GetImmutableElementGraveyard() iter.Seq[ImmutableBaselineElement] {
	return func(yield func(ImmutableBaselineElement) bool) {
		if m == nil || m.ElementGraveyard == nil {
			return
		}
		for _, v := range m.ElementGraveyard {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableCreated implements ImmutableProcessBaseline
func (m *ProcessBaseline) GetImmutableCreated() time.Time {
	if m == nil || m.Created == nil {
		return time.Time{}
	}
	return m.Created.AsTime()
}

// GetImmutableUserLockedTimestamp implements ImmutableProcessBaseline
func (m *ProcessBaseline) GetImmutableUserLockedTimestamp() time.Time {
	if m == nil || m.UserLockedTimestamp == nil {
		return time.Time{}
	}
	return m.UserLockedTimestamp.AsTime()
}

// GetImmutableStackRoxLockedTimestamp implements ImmutableProcessBaseline
func (m *ProcessBaseline) GetImmutableStackRoxLockedTimestamp() time.Time {
	if m == nil || m.StackRoxLockedTimestamp == nil {
		return time.Time{}
	}
	return m.StackRoxLockedTimestamp.AsTime()
}

// GetImmutableLastUpdate implements ImmutableProcessBaseline
func (m *ProcessBaseline) GetImmutableLastUpdate() time.Time {
	if m == nil || m.LastUpdate == nil {
		return time.Time{}
	}
	return m.LastUpdate.AsTime()
}

// Verify that ProcessBaseline implements ImmutableProcessBaseline
var _ ImmutableProcessBaseline = (*ProcessBaseline)(nil)

// ImmutableBaselineElement is an immutable interface for BaselineElement
type ImmutableBaselineElement interface {
	GetImmutableElement() ImmutableBaselineItem
	GetAuto() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *BaselineElement
}

// GetImmutableElement implements ImmutableBaselineElement
func (m *BaselineElement) GetImmutableElement() ImmutableBaselineItem {
	return m.GetElement()
}

// Verify that BaselineElement implements ImmutableBaselineElement
var _ ImmutableBaselineElement = (*BaselineElement)(nil)

// ImmutableBaselineItem is an immutable interface for BaselineItem
type ImmutableBaselineItem interface {
	GetProcessName() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *BaselineItem
}

// Verify that BaselineItem implements ImmutableBaselineItem
var _ ImmutableBaselineItem = (*BaselineItem)(nil)

// ImmutableContainerNameAndBaselineStatus is an immutable interface for ContainerNameAndBaselineStatus
type ImmutableContainerNameAndBaselineStatus interface {
	GetContainerName() string
	GetBaselineStatus() ContainerNameAndBaselineStatus_BaselineStatus
	GetAnomalousProcessesExecuted() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ContainerNameAndBaselineStatus
}

// Verify that ContainerNameAndBaselineStatus implements ImmutableContainerNameAndBaselineStatus
var _ ImmutableContainerNameAndBaselineStatus = (*ContainerNameAndBaselineStatus)(nil)

// ImmutableProcessBaselineResults is an immutable interface for ProcessBaselineResults
type ImmutableProcessBaselineResults interface {
	GetDeploymentId() string
	GetClusterId() string
	GetNamespace() string
	GetImmutableBaselineStatuses() iter.Seq[ImmutableContainerNameAndBaselineStatus]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ProcessBaselineResults
}

// GetImmutableBaselineStatuses implements ImmutableProcessBaselineResults
func (m *ProcessBaselineResults) GetImmutableBaselineStatuses() iter.Seq[ImmutableContainerNameAndBaselineStatus] {
	return func(yield func(ImmutableContainerNameAndBaselineStatus) bool) {
		if m == nil || m.BaselineStatuses == nil {
			return
		}
		for _, v := range m.BaselineStatuses {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that ProcessBaselineResults implements ImmutableProcessBaselineResults
var _ ImmutableProcessBaselineResults = (*ProcessBaselineResults)(nil)
