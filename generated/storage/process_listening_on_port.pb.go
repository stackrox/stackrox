// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/process_listening_on_port.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The API returns an array of these
type ProcessListeningOnPort struct {
	state                         protoimpl.MessageState           `protogen:"opaque.v1"`
	xxx_hidden_Endpoint           *ProcessListeningOnPort_Endpoint `protobuf:"bytes,1,opt,name=endpoint"`
	xxx_hidden_DeploymentId       *string                          `protobuf:"bytes,2,opt,name=deployment_id,json=deploymentId"`
	xxx_hidden_ContainerName      *string                          `protobuf:"bytes,3,opt,name=container_name,json=containerName"`
	xxx_hidden_PodId              *string                          `protobuf:"bytes,4,opt,name=pod_id,json=podId"`
	xxx_hidden_PodUid             *string                          `protobuf:"bytes,5,opt,name=pod_uid,json=podUid"`
	xxx_hidden_Signal             *ProcessSignal                   `protobuf:"bytes,6,opt,name=signal"`
	xxx_hidden_ClusterId          *string                          `protobuf:"bytes,7,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_Namespace          *string                          `protobuf:"bytes,8,opt,name=namespace"`
	xxx_hidden_ContainerStartTime *timestamppb.Timestamp           `protobuf:"bytes,9,opt,name=container_start_time,json=containerStartTime"`
	xxx_hidden_ImageId            *string                          `protobuf:"bytes,10,opt,name=image_id,json=imageId"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ProcessListeningOnPort) Reset() {
	*x = ProcessListeningOnPort{}
	mi := &file_storage_process_listening_on_port_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessListeningOnPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessListeningOnPort) ProtoMessage() {}

func (x *ProcessListeningOnPort) ProtoReflect() protoreflect.Message {
	mi := &file_storage_process_listening_on_port_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProcessListeningOnPort) GetEndpoint() *ProcessListeningOnPort_Endpoint {
	if x != nil {
		return x.xxx_hidden_Endpoint
	}
	return nil
}

func (x *ProcessListeningOnPort) GetDeploymentId() string {
	if x != nil {
		if x.xxx_hidden_DeploymentId != nil {
			return *x.xxx_hidden_DeploymentId
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPort) GetContainerName() string {
	if x != nil {
		if x.xxx_hidden_ContainerName != nil {
			return *x.xxx_hidden_ContainerName
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPort) GetPodId() string {
	if x != nil {
		if x.xxx_hidden_PodId != nil {
			return *x.xxx_hidden_PodId
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPort) GetPodUid() string {
	if x != nil {
		if x.xxx_hidden_PodUid != nil {
			return *x.xxx_hidden_PodUid
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPort) GetSignal() *ProcessSignal {
	if x != nil {
		return x.xxx_hidden_Signal
	}
	return nil
}

func (x *ProcessListeningOnPort) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPort) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPort) GetContainerStartTime() *timestamppb.Timestamp {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 8) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_ContainerStartTime) {
				protoimpl.X.UnmarshalField(x, 9)
			}
			var rv *timestamppb.Timestamp
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_ContainerStartTime), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *ProcessListeningOnPort) GetImageId() string {
	if x != nil {
		if x.xxx_hidden_ImageId != nil {
			return *x.xxx_hidden_ImageId
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPort) SetEndpoint(v *ProcessListeningOnPort_Endpoint) {
	x.xxx_hidden_Endpoint = v
}

func (x *ProcessListeningOnPort) SetDeploymentId(v string) {
	x.xxx_hidden_DeploymentId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *ProcessListeningOnPort) SetContainerName(v string) {
	x.xxx_hidden_ContainerName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *ProcessListeningOnPort) SetPodId(v string) {
	x.xxx_hidden_PodId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *ProcessListeningOnPort) SetPodUid(v string) {
	x.xxx_hidden_PodUid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *ProcessListeningOnPort) SetSignal(v *ProcessSignal) {
	x.xxx_hidden_Signal = v
}

func (x *ProcessListeningOnPort) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 10)
}

func (x *ProcessListeningOnPort) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 10)
}

func (x *ProcessListeningOnPort) SetContainerStartTime(v *timestamppb.Timestamp) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_ContainerStartTime, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 10)
	}
}

func (x *ProcessListeningOnPort) SetImageId(v string) {
	x.xxx_hidden_ImageId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 10)
}

func (x *ProcessListeningOnPort) HasEndpoint() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Endpoint != nil
}

func (x *ProcessListeningOnPort) HasDeploymentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ProcessListeningOnPort) HasContainerName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ProcessListeningOnPort) HasPodId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ProcessListeningOnPort) HasPodUid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ProcessListeningOnPort) HasSignal() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Signal != nil
}

func (x *ProcessListeningOnPort) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ProcessListeningOnPort) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ProcessListeningOnPort) HasContainerStartTime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *ProcessListeningOnPort) HasImageId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *ProcessListeningOnPort) ClearEndpoint() {
	x.xxx_hidden_Endpoint = nil
}

func (x *ProcessListeningOnPort) ClearDeploymentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DeploymentId = nil
}

func (x *ProcessListeningOnPort) ClearContainerName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ContainerName = nil
}

func (x *ProcessListeningOnPort) ClearPodId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_PodId = nil
}

func (x *ProcessListeningOnPort) ClearPodUid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_PodUid = nil
}

func (x *ProcessListeningOnPort) ClearSignal() {
	x.xxx_hidden_Signal = nil
}

func (x *ProcessListeningOnPort) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ClusterId = nil
}

func (x *ProcessListeningOnPort) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Namespace = nil
}

func (x *ProcessListeningOnPort) ClearContainerStartTime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_ContainerStartTime, (*timestamppb.Timestamp)(nil))
}

func (x *ProcessListeningOnPort) ClearImageId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_ImageId = nil
}

type ProcessListeningOnPort_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Endpoint           *ProcessListeningOnPort_Endpoint
	DeploymentId       *string
	ContainerName      *string
	PodId              *string
	PodUid             *string
	Signal             *ProcessSignal
	ClusterId          *string
	Namespace          *string
	ContainerStartTime *timestamppb.Timestamp
	ImageId            *string
}

func (b0 ProcessListeningOnPort_builder) Build() *ProcessListeningOnPort {
	m0 := &ProcessListeningOnPort{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Endpoint = b.Endpoint
	if b.DeploymentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_DeploymentId = b.DeploymentId
	}
	if b.ContainerName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_ContainerName = b.ContainerName
	}
	if b.PodId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_PodId = b.PodId
	}
	if b.PodUid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_PodUid = b.PodUid
	}
	x.xxx_hidden_Signal = b.Signal
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 10)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 10)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.ContainerStartTime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 10)
		x.xxx_hidden_ContainerStartTime = b.ContainerStartTime
	}
	if b.ImageId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 10)
		x.xxx_hidden_ImageId = b.ImageId
	}
	return m0
}

// This is what sensor sends to central
type ProcessListeningOnPortFromSensor struct {
	state                     protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_Port           uint32                     `protobuf:"varint,1,opt,name=port"`
	xxx_hidden_Protocol       L4Protocol                 `protobuf:"varint,2,opt,name=protocol,enum=storage.L4Protocol"`
	xxx_hidden_Process        *ProcessIndicatorUniqueKey `protobuf:"bytes,3,opt,name=process"`
	xxx_hidden_CloseTimestamp *timestamppb.Timestamp     `protobuf:"bytes,4,opt,name=close_timestamp,json=closeTimestamp"`
	xxx_hidden_ClusterId      *string                    `protobuf:"bytes,6,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_DeploymentId   *string                    `protobuf:"bytes,7,opt,name=deployment_id,json=deploymentId"`
	xxx_hidden_PodUid         *string                    `protobuf:"bytes,8,opt,name=pod_uid,json=podUid"`
	xxx_hidden_Namespace      *string                    `protobuf:"bytes,9,opt,name=namespace"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ProcessListeningOnPortFromSensor) Reset() {
	*x = ProcessListeningOnPortFromSensor{}
	mi := &file_storage_process_listening_on_port_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessListeningOnPortFromSensor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessListeningOnPortFromSensor) ProtoMessage() {}

func (x *ProcessListeningOnPortFromSensor) ProtoReflect() protoreflect.Message {
	mi := &file_storage_process_listening_on_port_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProcessListeningOnPortFromSensor) GetPort() uint32 {
	if x != nil {
		return x.xxx_hidden_Port
	}
	return 0
}

func (x *ProcessListeningOnPortFromSensor) GetProtocol() L4Protocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Protocol
		}
	}
	return L4Protocol_L4_PROTOCOL_UNKNOWN
}

func (x *ProcessListeningOnPortFromSensor) GetProcess() *ProcessIndicatorUniqueKey {
	if x != nil {
		return x.xxx_hidden_Process
	}
	return nil
}

func (x *ProcessListeningOnPortFromSensor) GetCloseTimestamp() *timestamppb.Timestamp {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_CloseTimestamp) {
				protoimpl.X.UnmarshalField(x, 4)
			}
			var rv *timestamppb.Timestamp
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_CloseTimestamp), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *ProcessListeningOnPortFromSensor) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPortFromSensor) GetDeploymentId() string {
	if x != nil {
		if x.xxx_hidden_DeploymentId != nil {
			return *x.xxx_hidden_DeploymentId
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPortFromSensor) GetPodUid() string {
	if x != nil {
		if x.xxx_hidden_PodUid != nil {
			return *x.xxx_hidden_PodUid
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPortFromSensor) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPortFromSensor) SetPort(v uint32) {
	x.xxx_hidden_Port = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *ProcessListeningOnPortFromSensor) SetProtocol(v L4Protocol) {
	x.xxx_hidden_Protocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *ProcessListeningOnPortFromSensor) SetProcess(v *ProcessIndicatorUniqueKey) {
	x.xxx_hidden_Process = v
}

func (x *ProcessListeningOnPortFromSensor) SetCloseTimestamp(v *timestamppb.Timestamp) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_CloseTimestamp, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
	}
}

func (x *ProcessListeningOnPortFromSensor) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *ProcessListeningOnPortFromSensor) SetDeploymentId(v string) {
	x.xxx_hidden_DeploymentId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *ProcessListeningOnPortFromSensor) SetPodUid(v string) {
	x.xxx_hidden_PodUid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *ProcessListeningOnPortFromSensor) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *ProcessListeningOnPortFromSensor) HasPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ProcessListeningOnPortFromSensor) HasProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ProcessListeningOnPortFromSensor) HasProcess() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Process != nil
}

func (x *ProcessListeningOnPortFromSensor) HasCloseTimestamp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ProcessListeningOnPortFromSensor) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ProcessListeningOnPortFromSensor) HasDeploymentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ProcessListeningOnPortFromSensor) HasPodUid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ProcessListeningOnPortFromSensor) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ProcessListeningOnPortFromSensor) ClearPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Port = 0
}

func (x *ProcessListeningOnPortFromSensor) ClearProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Protocol = L4Protocol_L4_PROTOCOL_UNKNOWN
}

func (x *ProcessListeningOnPortFromSensor) ClearProcess() {
	x.xxx_hidden_Process = nil
}

func (x *ProcessListeningOnPortFromSensor) ClearCloseTimestamp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_CloseTimestamp, (*timestamppb.Timestamp)(nil))
}

func (x *ProcessListeningOnPortFromSensor) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ClusterId = nil
}

func (x *ProcessListeningOnPortFromSensor) ClearDeploymentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_DeploymentId = nil
}

func (x *ProcessListeningOnPortFromSensor) ClearPodUid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_PodUid = nil
}

func (x *ProcessListeningOnPortFromSensor) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Namespace = nil
}

type ProcessListeningOnPortFromSensor_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Port           *uint32
	Protocol       *L4Protocol
	Process        *ProcessIndicatorUniqueKey
	CloseTimestamp *timestamppb.Timestamp
	ClusterId      *string
	DeploymentId   *string
	PodUid         *string
	Namespace      *string
}

func (b0 ProcessListeningOnPortFromSensor_builder) Build() *ProcessListeningOnPortFromSensor {
	m0 := &ProcessListeningOnPortFromSensor{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Port != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_Port = *b.Port
	}
	if b.Protocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_Protocol = *b.Protocol
	}
	x.xxx_hidden_Process = b.Process
	if b.CloseTimestamp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_CloseTimestamp = b.CloseTimestamp
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.DeploymentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_DeploymentId = b.DeploymentId
	}
	if b.PodUid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_PodUid = b.PodUid
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

// This is what is stored in the database
type ProcessListeningOnPortStorage struct {
	state                         protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_Id                 *string                    `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Port               uint32                     `protobuf:"varint,2,opt,name=port"`
	xxx_hidden_Protocol           L4Protocol                 `protobuf:"varint,3,opt,name=protocol,enum=storage.L4Protocol"`
	xxx_hidden_CloseTimestamp     *timestamppb.Timestamp     `protobuf:"bytes,4,opt,name=close_timestamp,json=closeTimestamp"`
	xxx_hidden_ProcessIndicatorId *string                    `protobuf:"bytes,5,opt,name=process_indicator_id,json=processIndicatorId"`
	xxx_hidden_Closed             bool                       `protobuf:"varint,6,opt,name=closed"`
	xxx_hidden_Process            *ProcessIndicatorUniqueKey `protobuf:"bytes,7,opt,name=process"`
	xxx_hidden_DeploymentId       *string                    `protobuf:"bytes,8,opt,name=deployment_id,json=deploymentId"`
	xxx_hidden_PodUid             *string                    `protobuf:"bytes,9,opt,name=pod_uid,json=podUid"`
	xxx_hidden_ClusterId          *string                    `protobuf:"bytes,10,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_Namespace          *string                    `protobuf:"bytes,11,opt,name=namespace"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ProcessListeningOnPortStorage) Reset() {
	*x = ProcessListeningOnPortStorage{}
	mi := &file_storage_process_listening_on_port_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessListeningOnPortStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessListeningOnPortStorage) ProtoMessage() {}

func (x *ProcessListeningOnPortStorage) ProtoReflect() protoreflect.Message {
	mi := &file_storage_process_listening_on_port_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProcessListeningOnPortStorage) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPortStorage) GetPort() uint32 {
	if x != nil {
		return x.xxx_hidden_Port
	}
	return 0
}

func (x *ProcessListeningOnPortStorage) GetProtocol() L4Protocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_Protocol
		}
	}
	return L4Protocol_L4_PROTOCOL_UNKNOWN
}

func (x *ProcessListeningOnPortStorage) GetCloseTimestamp() *timestamppb.Timestamp {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_CloseTimestamp) {
				protoimpl.X.UnmarshalField(x, 4)
			}
			var rv *timestamppb.Timestamp
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_CloseTimestamp), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *ProcessListeningOnPortStorage) GetProcessIndicatorId() string {
	if x != nil {
		if x.xxx_hidden_ProcessIndicatorId != nil {
			return *x.xxx_hidden_ProcessIndicatorId
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPortStorage) GetClosed() bool {
	if x != nil {
		return x.xxx_hidden_Closed
	}
	return false
}

func (x *ProcessListeningOnPortStorage) GetProcess() *ProcessIndicatorUniqueKey {
	if x != nil {
		return x.xxx_hidden_Process
	}
	return nil
}

func (x *ProcessListeningOnPortStorage) GetDeploymentId() string {
	if x != nil {
		if x.xxx_hidden_DeploymentId != nil {
			return *x.xxx_hidden_DeploymentId
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPortStorage) GetPodUid() string {
	if x != nil {
		if x.xxx_hidden_PodUid != nil {
			return *x.xxx_hidden_PodUid
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPortStorage) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPortStorage) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ProcessListeningOnPortStorage) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 11)
}

func (x *ProcessListeningOnPortStorage) SetPort(v uint32) {
	x.xxx_hidden_Port = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 11)
}

func (x *ProcessListeningOnPortStorage) SetProtocol(v L4Protocol) {
	x.xxx_hidden_Protocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 11)
}

func (x *ProcessListeningOnPortStorage) SetCloseTimestamp(v *timestamppb.Timestamp) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_CloseTimestamp, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 11)
	}
}

func (x *ProcessListeningOnPortStorage) SetProcessIndicatorId(v string) {
	x.xxx_hidden_ProcessIndicatorId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 11)
}

func (x *ProcessListeningOnPortStorage) SetClosed(v bool) {
	x.xxx_hidden_Closed = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 11)
}

func (x *ProcessListeningOnPortStorage) SetProcess(v *ProcessIndicatorUniqueKey) {
	x.xxx_hidden_Process = v
}

func (x *ProcessListeningOnPortStorage) SetDeploymentId(v string) {
	x.xxx_hidden_DeploymentId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 11)
}

func (x *ProcessListeningOnPortStorage) SetPodUid(v string) {
	x.xxx_hidden_PodUid = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 11)
}

func (x *ProcessListeningOnPortStorage) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 11)
}

func (x *ProcessListeningOnPortStorage) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 11)
}

func (x *ProcessListeningOnPortStorage) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ProcessListeningOnPortStorage) HasPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ProcessListeningOnPortStorage) HasProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ProcessListeningOnPortStorage) HasCloseTimestamp() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ProcessListeningOnPortStorage) HasProcessIndicatorId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ProcessListeningOnPortStorage) HasClosed() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ProcessListeningOnPortStorage) HasProcess() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Process != nil
}

func (x *ProcessListeningOnPortStorage) HasDeploymentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ProcessListeningOnPortStorage) HasPodUid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *ProcessListeningOnPortStorage) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *ProcessListeningOnPortStorage) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *ProcessListeningOnPortStorage) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ProcessListeningOnPortStorage) ClearPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Port = 0
}

func (x *ProcessListeningOnPortStorage) ClearProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Protocol = L4Protocol_L4_PROTOCOL_UNKNOWN
}

func (x *ProcessListeningOnPortStorage) ClearCloseTimestamp() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_CloseTimestamp, (*timestamppb.Timestamp)(nil))
}

func (x *ProcessListeningOnPortStorage) ClearProcessIndicatorId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ProcessIndicatorId = nil
}

func (x *ProcessListeningOnPortStorage) ClearClosed() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Closed = false
}

func (x *ProcessListeningOnPortStorage) ClearProcess() {
	x.xxx_hidden_Process = nil
}

func (x *ProcessListeningOnPortStorage) ClearDeploymentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_DeploymentId = nil
}

func (x *ProcessListeningOnPortStorage) ClearPodUid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_PodUid = nil
}

func (x *ProcessListeningOnPortStorage) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_ClusterId = nil
}

func (x *ProcessListeningOnPortStorage) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_Namespace = nil
}

type ProcessListeningOnPortStorage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Ideally it has to be GENERATED ALWAYS AS IDENTITY, which will make it a
	// bigint with a sequence. Unfortunately at the moment some bits of store
	// generator assume an id has to be a string.
	Id                 *string
	Port               *uint32
	Protocol           *L4Protocol
	CloseTimestamp     *timestamppb.Timestamp
	ProcessIndicatorId *string
	// XXX: Make it a partial index on only active, not closed, PLOP
	Closed *bool
	// ProcessIndicator will be not empty only for those cases when we were not
	// able to find references process in the database
	Process      *ProcessIndicatorUniqueKey
	DeploymentId *string
	PodUid       *string
	ClusterId    *string
	Namespace    *string
}

func (b0 ProcessListeningOnPortStorage_builder) Build() *ProcessListeningOnPortStorage {
	m0 := &ProcessListeningOnPortStorage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 11)
		x.xxx_hidden_Id = b.Id
	}
	if b.Port != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 11)
		x.xxx_hidden_Port = *b.Port
	}
	if b.Protocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 11)
		x.xxx_hidden_Protocol = *b.Protocol
	}
	if b.CloseTimestamp != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 11)
		x.xxx_hidden_CloseTimestamp = b.CloseTimestamp
	}
	if b.ProcessIndicatorId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 11)
		x.xxx_hidden_ProcessIndicatorId = b.ProcessIndicatorId
	}
	if b.Closed != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 11)
		x.xxx_hidden_Closed = *b.Closed
	}
	x.xxx_hidden_Process = b.Process
	if b.DeploymentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 11)
		x.xxx_hidden_DeploymentId = b.DeploymentId
	}
	if b.PodUid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 11)
		x.xxx_hidden_PodUid = b.PodUid
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 11)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 11)
		x.xxx_hidden_Namespace = b.Namespace
	}
	return m0
}

type ProcessListeningOnPort_Endpoint struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Port        uint32                 `protobuf:"varint,1,opt,name=port"`
	xxx_hidden_Protocol    L4Protocol             `protobuf:"varint,2,opt,name=protocol,enum=storage.L4Protocol"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ProcessListeningOnPort_Endpoint) Reset() {
	*x = ProcessListeningOnPort_Endpoint{}
	mi := &file_storage_process_listening_on_port_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessListeningOnPort_Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessListeningOnPort_Endpoint) ProtoMessage() {}

func (x *ProcessListeningOnPort_Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_storage_process_listening_on_port_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProcessListeningOnPort_Endpoint) GetPort() uint32 {
	if x != nil {
		return x.xxx_hidden_Port
	}
	return 0
}

func (x *ProcessListeningOnPort_Endpoint) GetProtocol() L4Protocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Protocol
		}
	}
	return L4Protocol_L4_PROTOCOL_UNKNOWN
}

func (x *ProcessListeningOnPort_Endpoint) SetPort(v uint32) {
	x.xxx_hidden_Port = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ProcessListeningOnPort_Endpoint) SetProtocol(v L4Protocol) {
	x.xxx_hidden_Protocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ProcessListeningOnPort_Endpoint) HasPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ProcessListeningOnPort_Endpoint) HasProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ProcessListeningOnPort_Endpoint) ClearPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Port = 0
}

func (x *ProcessListeningOnPort_Endpoint) ClearProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Protocol = L4Protocol_L4_PROTOCOL_UNKNOWN
}

type ProcessListeningOnPort_Endpoint_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Port     *uint32
	Protocol *L4Protocol
}

func (b0 ProcessListeningOnPort_Endpoint_builder) Build() *ProcessListeningOnPort_Endpoint {
	m0 := &ProcessListeningOnPort_Endpoint{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Port != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Port = *b.Port
	}
	if b.Protocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Protocol = *b.Protocol
	}
	return m0
}

var File_storage_process_listening_on_port_proto protoreflect.FileDescriptor

const file_storage_process_listening_on_port_proto_rawDesc = "" +
	"\n" +
	"'storage/process_listening_on_port.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1astorage/network_flow.proto\x1a\x1fstorage/process_indicator.proto\x1a!google/protobuf/go_features.proto\"\x85\x04\n" +
	"\x16ProcessListeningOnPort\x12D\n" +
	"\bendpoint\x18\x01 \x01(\v2(.storage.ProcessListeningOnPort.EndpointR\bendpoint\x12#\n" +
	"\rdeployment_id\x18\x02 \x01(\tR\fdeploymentId\x12%\n" +
	"\x0econtainer_name\x18\x03 \x01(\tR\rcontainerName\x12\x15\n" +
	"\x06pod_id\x18\x04 \x01(\tR\x05podId\x12\x17\n" +
	"\apod_uid\x18\x05 \x01(\tR\x06podUid\x12.\n" +
	"\x06signal\x18\x06 \x01(\v2\x16.storage.ProcessSignalR\x06signal\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\a \x01(\tR\tclusterId\x12\x1c\n" +
	"\tnamespace\x18\b \x01(\tR\tnamespace\x12P\n" +
	"\x14container_start_time\x18\t \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\x12containerStartTime\x12\x19\n" +
	"\bimage_id\x18\n" +
	" \x01(\tR\aimageId\x1aO\n" +
	"\bEndpoint\x12\x12\n" +
	"\x04port\x18\x01 \x01(\rR\x04port\x12/\n" +
	"\bprotocol\x18\x02 \x01(\x0e2\x13.storage.L4ProtocolR\bprotocol\"\xe9\x02\n" +
	" ProcessListeningOnPortFromSensor\x12\x12\n" +
	"\x04port\x18\x01 \x01(\rR\x04port\x12/\n" +
	"\bprotocol\x18\x02 \x01(\x0e2\x13.storage.L4ProtocolR\bprotocol\x12<\n" +
	"\aprocess\x18\x03 \x01(\v2\".storage.ProcessIndicatorUniqueKeyR\aprocess\x12G\n" +
	"\x0fclose_timestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\x0ecloseTimestamp\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x06 \x01(\tR\tclusterId\x12#\n" +
	"\rdeployment_id\x18\a \x01(\tR\fdeploymentId\x12\x17\n" +
	"\apod_uid\x18\b \x01(\tR\x06podUid\x12\x1c\n" +
	"\tnamespace\x18\t \x01(\tR\tnamespace\"\xc0\x03\n" +
	"\x1dProcessListeningOnPortStorage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12/\n" +
	"\bprotocol\x18\x03 \x01(\x0e2\x13.storage.L4ProtocolR\bprotocol\x12G\n" +
	"\x0fclose_timestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\x0ecloseTimestamp\x120\n" +
	"\x14process_indicator_id\x18\x05 \x01(\tR\x12processIndicatorId\x12\x16\n" +
	"\x06closed\x18\x06 \x01(\bR\x06closed\x12<\n" +
	"\aprocess\x18\a \x01(\v2\".storage.ProcessIndicatorUniqueKeyR\aprocess\x12#\n" +
	"\rdeployment_id\x18\b \x01(\tR\fdeploymentId\x12\x17\n" +
	"\apod_uid\x18\t \x01(\tR\x06podUid\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\n" +
	" \x01(\tR\tclusterId\x12\x1c\n" +
	"\tnamespace\x18\v \x01(\tR\tnamespaceB\x1eZ\x11./storage;storage\xf8\x01\x01\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_storage_process_listening_on_port_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_storage_process_listening_on_port_proto_goTypes = []any{
	(*ProcessListeningOnPort)(nil),           // 0: storage.ProcessListeningOnPort
	(*ProcessListeningOnPortFromSensor)(nil), // 1: storage.ProcessListeningOnPortFromSensor
	(*ProcessListeningOnPortStorage)(nil),    // 2: storage.ProcessListeningOnPortStorage
	(*ProcessListeningOnPort_Endpoint)(nil),  // 3: storage.ProcessListeningOnPort.Endpoint
	(*ProcessSignal)(nil),                    // 4: storage.ProcessSignal
	(*timestamppb.Timestamp)(nil),            // 5: google.protobuf.Timestamp
	(L4Protocol)(0),                          // 6: storage.L4Protocol
	(*ProcessIndicatorUniqueKey)(nil),        // 7: storage.ProcessIndicatorUniqueKey
}
var file_storage_process_listening_on_port_proto_depIdxs = []int32{
	3,  // 0: storage.ProcessListeningOnPort.endpoint:type_name -> storage.ProcessListeningOnPort.Endpoint
	4,  // 1: storage.ProcessListeningOnPort.signal:type_name -> storage.ProcessSignal
	5,  // 2: storage.ProcessListeningOnPort.container_start_time:type_name -> google.protobuf.Timestamp
	6,  // 3: storage.ProcessListeningOnPortFromSensor.protocol:type_name -> storage.L4Protocol
	7,  // 4: storage.ProcessListeningOnPortFromSensor.process:type_name -> storage.ProcessIndicatorUniqueKey
	5,  // 5: storage.ProcessListeningOnPortFromSensor.close_timestamp:type_name -> google.protobuf.Timestamp
	6,  // 6: storage.ProcessListeningOnPortStorage.protocol:type_name -> storage.L4Protocol
	5,  // 7: storage.ProcessListeningOnPortStorage.close_timestamp:type_name -> google.protobuf.Timestamp
	7,  // 8: storage.ProcessListeningOnPortStorage.process:type_name -> storage.ProcessIndicatorUniqueKey
	6,  // 9: storage.ProcessListeningOnPort.Endpoint.protocol:type_name -> storage.L4Protocol
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_storage_process_listening_on_port_proto_init() }
func file_storage_process_listening_on_port_proto_init() {
	if File_storage_process_listening_on_port_proto != nil {
		return
	}
	file_storage_network_flow_proto_init()
	file_storage_process_indicator_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_process_listening_on_port_proto_rawDesc), len(file_storage_process_listening_on_port_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_process_listening_on_port_proto_goTypes,
		DependencyIndexes: file_storage_process_listening_on_port_proto_depIdxs,
		MessageInfos:      file_storage_process_listening_on_port_proto_msgTypes,
	}.Build()
	File_storage_process_listening_on_port_proto = out.File
	file_storage_process_listening_on_port_proto_goTypes = nil
	file_storage_process_listening_on_port_proto_depIdxs = nil
}
