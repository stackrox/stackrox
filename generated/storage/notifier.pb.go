// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: storage/notifier.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Email_AuthMethod int32

const (
	Email_DISABLED Email_AuthMethod = 0
	Email_PLAIN    Email_AuthMethod = 1
	Email_LOGIN    Email_AuthMethod = 2
)

// Enum value maps for Email_AuthMethod.
var (
	Email_AuthMethod_name = map[int32]string{
		0: "DISABLED",
		1: "PLAIN",
		2: "LOGIN",
	}
	Email_AuthMethod_value = map[string]int32{
		"DISABLED": 0,
		"PLAIN":    1,
		"LOGIN":    2,
	}
)

func (x Email_AuthMethod) Enum() *Email_AuthMethod {
	p := new(Email_AuthMethod)
	*p = x
	return p
}

func (x Email_AuthMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Email_AuthMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_notifier_proto_enumTypes[0].Descriptor()
}

func (Email_AuthMethod) Type() protoreflect.EnumType {
	return &file_storage_notifier_proto_enumTypes[0]
}

func (x Email_AuthMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Email_AuthMethod.Descriptor instead.
func (Email_AuthMethod) EnumDescriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{4, 0}
}

type Syslog_LocalFacility int32

const (
	Syslog_LOCAL0 Syslog_LocalFacility = 0
	Syslog_LOCAL1 Syslog_LocalFacility = 1
	Syslog_LOCAL2 Syslog_LocalFacility = 2
	Syslog_LOCAL3 Syslog_LocalFacility = 3
	Syslog_LOCAL4 Syslog_LocalFacility = 4
	Syslog_LOCAL5 Syslog_LocalFacility = 5
	Syslog_LOCAL6 Syslog_LocalFacility = 6
	Syslog_LOCAL7 Syslog_LocalFacility = 7
)

// Enum value maps for Syslog_LocalFacility.
var (
	Syslog_LocalFacility_name = map[int32]string{
		0: "LOCAL0",
		1: "LOCAL1",
		2: "LOCAL2",
		3: "LOCAL3",
		4: "LOCAL4",
		5: "LOCAL5",
		6: "LOCAL6",
		7: "LOCAL7",
	}
	Syslog_LocalFacility_value = map[string]int32{
		"LOCAL0": 0,
		"LOCAL1": 1,
		"LOCAL2": 2,
		"LOCAL3": 3,
		"LOCAL4": 4,
		"LOCAL5": 5,
		"LOCAL6": 6,
		"LOCAL7": 7,
	}
)

func (x Syslog_LocalFacility) Enum() *Syslog_LocalFacility {
	p := new(Syslog_LocalFacility)
	*p = x
	return p
}

func (x Syslog_LocalFacility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Syslog_LocalFacility) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_notifier_proto_enumTypes[1].Descriptor()
}

func (Syslog_LocalFacility) Type() protoreflect.EnumType {
	return &file_storage_notifier_proto_enumTypes[1]
}

func (x Syslog_LocalFacility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Syslog_LocalFacility.Descriptor instead.
func (Syslog_LocalFacility) EnumDescriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{10, 0}
}

type Syslog_MessageFormat int32

const (
	Syslog_LEGACY Syslog_MessageFormat = 0
	Syslog_CEF    Syslog_MessageFormat = 1
)

// Enum value maps for Syslog_MessageFormat.
var (
	Syslog_MessageFormat_name = map[int32]string{
		0: "LEGACY",
		1: "CEF",
	}
	Syslog_MessageFormat_value = map[string]int32{
		"LEGACY": 0,
		"CEF":    1,
	}
)

func (x Syslog_MessageFormat) Enum() *Syslog_MessageFormat {
	p := new(Syslog_MessageFormat)
	*p = x
	return p
}

func (x Syslog_MessageFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Syslog_MessageFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_notifier_proto_enumTypes[2].Descriptor()
}

func (Syslog_MessageFormat) Type() protoreflect.EnumType {
	return &file_storage_notifier_proto_enumTypes[2]
}

func (x Syslog_MessageFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Syslog_MessageFormat.Descriptor instead.
func (Syslog_MessageFormat) EnumDescriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{10, 1}
}

// Next Tag: 21
type Notifier struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" sql:"pk"`     // @gotags: sql:"pk"
	Name         string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" sql:"unique"` // @gotags: sql:"unique"
	Type         string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	UiEndpoint   string                 `protobuf:"bytes,4,opt,name=ui_endpoint,json=uiEndpoint,proto3" json:"ui_endpoint,omitempty"`
	LabelKey     string                 `protobuf:"bytes,8,opt,name=label_key,json=labelKey,proto3" json:"label_key,omitempty"`
	LabelDefault string                 `protobuf:"bytes,9,opt,name=label_default,json=labelDefault,proto3" json:"label_default,omitempty"`
	// Types that are valid to be assigned to Config:
	//
	//	*Notifier_Jira
	//	*Notifier_Email
	//	*Notifier_Cscc
	//	*Notifier_Splunk
	//	*Notifier_Pagerduty
	//	*Notifier_Generic
	//	*Notifier_Sumologic
	//	*Notifier_AwsSecurityHub
	//	*Notifier_Syslog
	//	*Notifier_MicrosoftSentinel
	Config         isNotifier_Config `protobuf_oneof:"config"`
	NotifierSecret string            `protobuf:"bytes,19,opt,name=notifier_secret,json=notifierSecret,proto3" json:"notifier_secret,omitempty" scrub:"always"` // @gotags: scrub:"always"
	Traits         *Traits           `protobuf:"bytes,50,opt,name=traits,proto3" json:"traits,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Notifier) Reset() {
	*x = Notifier{}
	mi := &file_storage_notifier_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notifier) ProtoMessage() {}

func (x *Notifier) ProtoReflect() protoreflect.Message {
	mi := &file_storage_notifier_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notifier.ProtoReflect.Descriptor instead.
func (*Notifier) Descriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{0}
}

func (x *Notifier) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Notifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Notifier) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Notifier) GetUiEndpoint() string {
	if x != nil {
		return x.UiEndpoint
	}
	return ""
}

func (x *Notifier) GetLabelKey() string {
	if x != nil {
		return x.LabelKey
	}
	return ""
}

func (x *Notifier) GetLabelDefault() string {
	if x != nil {
		return x.LabelDefault
	}
	return ""
}

func (x *Notifier) GetConfig() isNotifier_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Notifier) GetJira() *Jira {
	if x != nil {
		if x, ok := x.Config.(*Notifier_Jira); ok {
			return x.Jira
		}
	}
	return nil
}

func (x *Notifier) GetEmail() *Email {
	if x != nil {
		if x, ok := x.Config.(*Notifier_Email); ok {
			return x.Email
		}
	}
	return nil
}

func (x *Notifier) GetCscc() *CSCC {
	if x != nil {
		if x, ok := x.Config.(*Notifier_Cscc); ok {
			return x.Cscc
		}
	}
	return nil
}

func (x *Notifier) GetSplunk() *Splunk {
	if x != nil {
		if x, ok := x.Config.(*Notifier_Splunk); ok {
			return x.Splunk
		}
	}
	return nil
}

func (x *Notifier) GetPagerduty() *PagerDuty {
	if x != nil {
		if x, ok := x.Config.(*Notifier_Pagerduty); ok {
			return x.Pagerduty
		}
	}
	return nil
}

func (x *Notifier) GetGeneric() *Generic {
	if x != nil {
		if x, ok := x.Config.(*Notifier_Generic); ok {
			return x.Generic
		}
	}
	return nil
}

func (x *Notifier) GetSumologic() *SumoLogic {
	if x != nil {
		if x, ok := x.Config.(*Notifier_Sumologic); ok {
			return x.Sumologic
		}
	}
	return nil
}

func (x *Notifier) GetAwsSecurityHub() *AWSSecurityHub {
	if x != nil {
		if x, ok := x.Config.(*Notifier_AwsSecurityHub); ok {
			return x.AwsSecurityHub
		}
	}
	return nil
}

func (x *Notifier) GetSyslog() *Syslog {
	if x != nil {
		if x, ok := x.Config.(*Notifier_Syslog); ok {
			return x.Syslog
		}
	}
	return nil
}

func (x *Notifier) GetMicrosoftSentinel() *MicrosoftSentinel {
	if x != nil {
		if x, ok := x.Config.(*Notifier_MicrosoftSentinel); ok {
			return x.MicrosoftSentinel
		}
	}
	return nil
}

func (x *Notifier) GetNotifierSecret() string {
	if x != nil {
		return x.NotifierSecret
	}
	return ""
}

func (x *Notifier) GetTraits() *Traits {
	if x != nil {
		return x.Traits
	}
	return nil
}

type isNotifier_Config interface {
	isNotifier_Config()
}

type Notifier_Jira struct {
	Jira *Jira `protobuf:"bytes,10,opt,name=jira,proto3,oneof"`
}

type Notifier_Email struct {
	Email *Email `protobuf:"bytes,11,opt,name=email,proto3,oneof"`
}

type Notifier_Cscc struct {
	Cscc *CSCC `protobuf:"bytes,12,opt,name=cscc,proto3,oneof"`
}

type Notifier_Splunk struct {
	Splunk *Splunk `protobuf:"bytes,13,opt,name=splunk,proto3,oneof"`
}

type Notifier_Pagerduty struct {
	Pagerduty *PagerDuty `protobuf:"bytes,14,opt,name=pagerduty,proto3,oneof"`
}

type Notifier_Generic struct {
	Generic *Generic `protobuf:"bytes,15,opt,name=generic,proto3,oneof"`
}

type Notifier_Sumologic struct {
	Sumologic *SumoLogic `protobuf:"bytes,16,opt,name=sumologic,proto3,oneof"`
}

type Notifier_AwsSecurityHub struct {
	AwsSecurityHub *AWSSecurityHub `protobuf:"bytes,17,opt,name=aws_security_hub,json=awsSecurityHub,proto3,oneof"`
}

type Notifier_Syslog struct {
	Syslog *Syslog `protobuf:"bytes,18,opt,name=syslog,proto3,oneof"`
}

type Notifier_MicrosoftSentinel struct {
	MicrosoftSentinel *MicrosoftSentinel `protobuf:"bytes,20,opt,name=microsoft_sentinel,json=microsoftSentinel,proto3,oneof"`
}

func (*Notifier_Jira) isNotifier_Config() {}

func (*Notifier_Email) isNotifier_Config() {}

func (*Notifier_Cscc) isNotifier_Config() {}

func (*Notifier_Splunk) isNotifier_Config() {}

func (*Notifier_Pagerduty) isNotifier_Config() {}

func (*Notifier_Generic) isNotifier_Config() {}

func (*Notifier_Sumologic) isNotifier_Config() {}

func (*Notifier_AwsSecurityHub) isNotifier_Config() {}

func (*Notifier_Syslog) isNotifier_Config() {}

func (*Notifier_MicrosoftSentinel) isNotifier_Config() {}

type AWSSecurityHub struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Region        string                      `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Credentials   *AWSSecurityHub_Credentials `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"`
	AccountId     string                      `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AWSSecurityHub) Reset() {
	*x = AWSSecurityHub{}
	mi := &file_storage_notifier_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AWSSecurityHub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSSecurityHub) ProtoMessage() {}

func (x *AWSSecurityHub) ProtoReflect() protoreflect.Message {
	mi := &file_storage_notifier_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSSecurityHub.ProtoReflect.Descriptor instead.
func (*AWSSecurityHub) Descriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{1}
}

func (x *AWSSecurityHub) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AWSSecurityHub) GetCredentials() *AWSSecurityHub_Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *AWSSecurityHub) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type CSCC struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The service account for the integration. The server will mask the value of this credential in responses and logs.
	ServiceAccount string `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty" scrub:"always"` // @gotags: scrub:"always"
	SourceId       string `protobuf:"bytes,4,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	WifEnabled     bool   `protobuf:"varint,5,opt,name=wif_enabled,json=wifEnabled,proto3" json:"wif_enabled,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CSCC) Reset() {
	*x = CSCC{}
	mi := &file_storage_notifier_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSCC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSCC) ProtoMessage() {}

func (x *CSCC) ProtoReflect() protoreflect.Message {
	mi := &file_storage_notifier_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSCC.ProtoReflect.Descriptor instead.
func (*CSCC) Descriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{2}
}

func (x *CSCC) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

func (x *CSCC) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *CSCC) GetWifEnabled() bool {
	if x != nil {
		return x.WifEnabled
	}
	return false
}

type Jira struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Url      string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty" scrub:"dependent" validate:"nolocalendpoint"`           // @gotags: scrub:"dependent" validate:"nolocalendpoint"
	Username string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty" scrub:"dependent"` // @gotags: scrub:"dependent"
	// The password for the integration. The server will mask the value of this credential in responses and logs.
	Password          string                  `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty" scrub:"always"` // @gotags: scrub:"always"
	IssueType         string                  `protobuf:"bytes,4,opt,name=issue_type,json=issueType,proto3" json:"issue_type,omitempty"`
	PriorityMappings  []*Jira_PriorityMapping `protobuf:"bytes,5,rep,name=priority_mappings,json=priorityMappings,proto3" json:"priority_mappings,omitempty"`
	DefaultFieldsJson string                  `protobuf:"bytes,6,opt,name=default_fields_json,json=defaultFieldsJson,proto3" json:"default_fields_json,omitempty"`
	DisablePriority   bool                    `protobuf:"varint,7,opt,name=disablePriority,proto3" json:"disablePriority,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Jira) Reset() {
	*x = Jira{}
	mi := &file_storage_notifier_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jira) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jira) ProtoMessage() {}

func (x *Jira) ProtoReflect() protoreflect.Message {
	mi := &file_storage_notifier_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jira.ProtoReflect.Descriptor instead.
func (*Jira) Descriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{3}
}

func (x *Jira) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Jira) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Jira) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Jira) GetIssueType() string {
	if x != nil {
		return x.IssueType
	}
	return ""
}

func (x *Jira) GetPriorityMappings() []*Jira_PriorityMapping {
	if x != nil {
		return x.PriorityMappings
	}
	return nil
}

func (x *Jira) GetDefaultFieldsJson() string {
	if x != nil {
		return x.DefaultFieldsJson
	}
	return ""
}

func (x *Jira) GetDisablePriority() bool {
	if x != nil {
		return x.DisablePriority
	}
	return false
}

type Email struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Server   string                 `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty" scrub:"dependent"` // @gotags: scrub:"dependent"
	Sender   string                 `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Username string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty" scrub:"dependent"` // @gotags: scrub:"dependent"
	// The password for the integration. The server will mask the value of this credential in responses and logs.
	Password              string           `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty" scrub:"always"` // @gotags: scrub:"always"
	DisableTLS            bool             `protobuf:"varint,5,opt,name=disableTLS,proto3" json:"disableTLS,omitempty"`
	DEPRECATEDUseStartTLS bool             `protobuf:"varint,6,opt,name=DEPRECATED_useStartTLS,json=DEPRECATEDUseStartTLS,proto3" json:"DEPRECATED_useStartTLS,omitempty"` // useStartTLS has been deprecated for startTLSAuthMethod
	From                  string           `protobuf:"bytes,7,opt,name=from,proto3" json:"from,omitempty"`
	StartTLSAuthMethod    Email_AuthMethod `protobuf:"varint,8,opt,name=startTLSAuthMethod,proto3,enum=storage.Email_AuthMethod" json:"startTLSAuthMethod,omitempty"`
	// Set to true to allow unauthenticated SMTP
	AllowUnauthenticatedSmtp bool `protobuf:"varint,9,opt,name=allow_unauthenticated_smtp,json=allowUnauthenticatedSmtp,proto3" json:"allow_unauthenticated_smtp,omitempty" scrub:"disableDependentIfTrue"` // @gotags: scrub:"disableDependentIfTrue"
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Email) Reset() {
	*x = Email{}
	mi := &file_storage_notifier_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Email) ProtoMessage() {}

func (x *Email) ProtoReflect() protoreflect.Message {
	mi := &file_storage_notifier_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Email.ProtoReflect.Descriptor instead.
func (*Email) Descriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{4}
}

func (x *Email) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *Email) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Email) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Email) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Email) GetDisableTLS() bool {
	if x != nil {
		return x.DisableTLS
	}
	return false
}

func (x *Email) GetDEPRECATEDUseStartTLS() bool {
	if x != nil {
		return x.DEPRECATEDUseStartTLS
	}
	return false
}

func (x *Email) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Email) GetStartTLSAuthMethod() Email_AuthMethod {
	if x != nil {
		return x.StartTLSAuthMethod
	}
	return Email_DISABLED
}

func (x *Email) GetAllowUnauthenticatedSmtp() bool {
	if x != nil {
		return x.AllowUnauthenticatedSmtp
	}
	return false
}

type Splunk struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The HTTP token for the integration. The server will mask the value of this credential in responses and logs.
	HttpToken           string `protobuf:"bytes,1,opt,name=http_token,json=httpToken,proto3" json:"http_token,omitempty" scrub:"always"`          // @gotags: scrub:"always"
	HttpEndpoint        string `protobuf:"bytes,2,opt,name=http_endpoint,json=httpEndpoint,proto3" json:"http_endpoint,omitempty" scrub:"dependent" validate:"nolocalendpoint"` // @gotags: scrub:"dependent" validate:"nolocalendpoint"
	Insecure            bool   `protobuf:"varint,3,opt,name=insecure,proto3" json:"insecure,omitempty"`
	Truncate            int64  `protobuf:"varint,4,opt,name=truncate,proto3" json:"truncate,omitempty"`
	AuditLoggingEnabled bool   `protobuf:"varint,5,opt,name=audit_logging_enabled,json=auditLoggingEnabled,proto3" json:"audit_logging_enabled,omitempty"`
	// Types that are valid to be assigned to DerivedSourceTypeDeprecated:
	//
	//	*Splunk_DerivedSourceType
	DerivedSourceTypeDeprecated isSplunk_DerivedSourceTypeDeprecated `protobuf_oneof:"derived_source_type_deprecated"`
	SourceTypes                 map[string]string                    `protobuf:"bytes,7,rep,name=source_types,json=sourceTypes,proto3" json:"source_types,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *Splunk) Reset() {
	*x = Splunk{}
	mi := &file_storage_notifier_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Splunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Splunk) ProtoMessage() {}

func (x *Splunk) ProtoReflect() protoreflect.Message {
	mi := &file_storage_notifier_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Splunk.ProtoReflect.Descriptor instead.
func (*Splunk) Descriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{5}
}

func (x *Splunk) GetHttpToken() string {
	if x != nil {
		return x.HttpToken
	}
	return ""
}

func (x *Splunk) GetHttpEndpoint() string {
	if x != nil {
		return x.HttpEndpoint
	}
	return ""
}

func (x *Splunk) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

func (x *Splunk) GetTruncate() int64 {
	if x != nil {
		return x.Truncate
	}
	return 0
}

func (x *Splunk) GetAuditLoggingEnabled() bool {
	if x != nil {
		return x.AuditLoggingEnabled
	}
	return false
}

func (x *Splunk) GetDerivedSourceTypeDeprecated() isSplunk_DerivedSourceTypeDeprecated {
	if x != nil {
		return x.DerivedSourceTypeDeprecated
	}
	return nil
}

// Deprecated: Marked as deprecated in storage/notifier.proto.
func (x *Splunk) GetDerivedSourceType() bool {
	if x != nil {
		if x, ok := x.DerivedSourceTypeDeprecated.(*Splunk_DerivedSourceType); ok {
			return x.DerivedSourceType
		}
	}
	return false
}

func (x *Splunk) GetSourceTypes() map[string]string {
	if x != nil {
		return x.SourceTypes
	}
	return nil
}

type isSplunk_DerivedSourceTypeDeprecated interface {
	isSplunk_DerivedSourceTypeDeprecated()
}

type Splunk_DerivedSourceType struct {
	// derived_source_type is deprecated in lieu of source_types
	//
	// Deprecated: Marked as deprecated in storage/notifier.proto.
	DerivedSourceType bool `protobuf:"varint,6,opt,name=derived_source_type,json=derivedSourceType,proto3,oneof"`
}

func (*Splunk_DerivedSourceType) isSplunk_DerivedSourceTypeDeprecated() {}

type PagerDuty struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The API key for the integration. The server will mask the value of this credential in responses and logs.
	ApiKey        string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty" scrub:"always"` // @gotags: scrub:"always"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PagerDuty) Reset() {
	*x = PagerDuty{}
	mi := &file_storage_notifier_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PagerDuty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagerDuty) ProtoMessage() {}

func (x *PagerDuty) ProtoReflect() protoreflect.Message {
	mi := &file_storage_notifier_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagerDuty.ProtoReflect.Descriptor instead.
func (*PagerDuty) Descriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{6}
}

func (x *PagerDuty) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type Generic struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty" scrub:"dependent" validate:"nolocalendpoint"` // @gotags: scrub:"dependent" validate:"nolocalendpoint"
	SkipTLSVerify bool                   `protobuf:"varint,2,opt,name=skipTLSVerify,proto3" json:"skipTLSVerify,omitempty"`
	CaCert        string                 `protobuf:"bytes,3,opt,name=ca_cert,json=caCert,proto3" json:"ca_cert,omitempty"`
	Username      string                 `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty" scrub:"dependent"` // @gotags: scrub:"dependent"
	// The password for the integration. The server will mask the value of this credential in responses and logs.
	Password            string          `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty" scrub:"always"` // @gotags: scrub:"always"
	Headers             []*KeyValuePair `protobuf:"bytes,6,rep,name=headers,proto3" json:"headers,omitempty"`
	ExtraFields         []*KeyValuePair `protobuf:"bytes,7,rep,name=extra_fields,json=extraFields,proto3" json:"extra_fields,omitempty"`
	AuditLoggingEnabled bool            `protobuf:"varint,8,opt,name=audit_logging_enabled,json=auditLoggingEnabled,proto3" json:"audit_logging_enabled,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Generic) Reset() {
	*x = Generic{}
	mi := &file_storage_notifier_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Generic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Generic) ProtoMessage() {}

func (x *Generic) ProtoReflect() protoreflect.Message {
	mi := &file_storage_notifier_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Generic.ProtoReflect.Descriptor instead.
func (*Generic) Descriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{7}
}

func (x *Generic) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Generic) GetSkipTLSVerify() bool {
	if x != nil {
		return x.SkipTLSVerify
	}
	return false
}

func (x *Generic) GetCaCert() string {
	if x != nil {
		return x.CaCert
	}
	return ""
}

func (x *Generic) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Generic) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Generic) GetHeaders() []*KeyValuePair {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Generic) GetExtraFields() []*KeyValuePair {
	if x != nil {
		return x.ExtraFields
	}
	return nil
}

func (x *Generic) GetAuditLoggingEnabled() bool {
	if x != nil {
		return x.AuditLoggingEnabled
	}
	return false
}

type SumoLogic struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	HttpSourceAddress string                 `protobuf:"bytes,1,opt,name=http_source_address,json=httpSourceAddress,proto3" json:"http_source_address,omitempty" validate:"nolocalendpoint"` // @gotags: validate:"nolocalendpoint"
	SkipTLSVerify     bool                   `protobuf:"varint,2,opt,name=skipTLSVerify,proto3" json:"skipTLSVerify,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SumoLogic) Reset() {
	*x = SumoLogic{}
	mi := &file_storage_notifier_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SumoLogic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumoLogic) ProtoMessage() {}

func (x *SumoLogic) ProtoReflect() protoreflect.Message {
	mi := &file_storage_notifier_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumoLogic.ProtoReflect.Descriptor instead.
func (*SumoLogic) Descriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{8}
}

func (x *SumoLogic) GetHttpSourceAddress() string {
	if x != nil {
		return x.HttpSourceAddress
	}
	return ""
}

func (x *SumoLogic) GetSkipTLSVerify() bool {
	if x != nil {
		return x.SkipTLSVerify
	}
	return false
}

type MicrosoftSentinel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// log_ingestion_endpoint is the log ingestion endpoint.
	LogIngestionEndpoint string `protobuf:"bytes,1,opt,name=log_ingestion_endpoint,json=logIngestionEndpoint,proto3" json:"log_ingestion_endpoint,omitempty"`
	// directory_tenant_id contains the ID of the Microsoft Directory ID of the selected tenant.
	DirectoryTenantId string `protobuf:"bytes,2,opt,name=directory_tenant_id,json=directoryTenantId,proto3" json:"directory_tenant_id,omitempty"`
	// application_client_id contains the ID of the application ID of the service principal.
	ApplicationClientId string `protobuf:"bytes,3,opt,name=application_client_id,json=applicationClientId,proto3" json:"application_client_id,omitempty"`
	// secret contains the client secret.
	Secret               string                                      `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty" scrub:"always"` // @gotags: scrub:"always"
	AlertDcrConfig       *MicrosoftSentinel_DataCollectionRuleConfig `protobuf:"bytes,5,opt,name=alert_dcr_config,json=alertDcrConfig,proto3" json:"alert_dcr_config,omitempty"`
	AuditLogDcrConfig    *MicrosoftSentinel_DataCollectionRuleConfig `protobuf:"bytes,6,opt,name=audit_log_dcr_config,json=auditLogDcrConfig,proto3" json:"audit_log_dcr_config,omitempty"`
	ClientCertAuthConfig *MicrosoftSentinel_ClientCertAuthConfig     `protobuf:"bytes,7,opt,name=client_cert_auth_config,json=clientCertAuthConfig,proto3" json:"client_cert_auth_config,omitempty"`
	// Enables authentication with short-lived tokens using Azure managed identities
	// or Azure workload identities.
	// The toggle exists to make the use of Azure default credentials explicit rather
	// than always using them as a fallback. The explicit behavior is more consistent
	// with other integrations.
	WifEnabled    bool `protobuf:"varint,8,opt,name=wif_enabled,json=wifEnabled,proto3" json:"wif_enabled,omitempty" scrub:"dependent"` // @gotags: scrub:"dependent"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MicrosoftSentinel) Reset() {
	*x = MicrosoftSentinel{}
	mi := &file_storage_notifier_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MicrosoftSentinel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicrosoftSentinel) ProtoMessage() {}

func (x *MicrosoftSentinel) ProtoReflect() protoreflect.Message {
	mi := &file_storage_notifier_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicrosoftSentinel.ProtoReflect.Descriptor instead.
func (*MicrosoftSentinel) Descriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{9}
}

func (x *MicrosoftSentinel) GetLogIngestionEndpoint() string {
	if x != nil {
		return x.LogIngestionEndpoint
	}
	return ""
}

func (x *MicrosoftSentinel) GetDirectoryTenantId() string {
	if x != nil {
		return x.DirectoryTenantId
	}
	return ""
}

func (x *MicrosoftSentinel) GetApplicationClientId() string {
	if x != nil {
		return x.ApplicationClientId
	}
	return ""
}

func (x *MicrosoftSentinel) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *MicrosoftSentinel) GetAlertDcrConfig() *MicrosoftSentinel_DataCollectionRuleConfig {
	if x != nil {
		return x.AlertDcrConfig
	}
	return nil
}

func (x *MicrosoftSentinel) GetAuditLogDcrConfig() *MicrosoftSentinel_DataCollectionRuleConfig {
	if x != nil {
		return x.AuditLogDcrConfig
	}
	return nil
}

func (x *MicrosoftSentinel) GetClientCertAuthConfig() *MicrosoftSentinel_ClientCertAuthConfig {
	if x != nil {
		return x.ClientCertAuthConfig
	}
	return nil
}

func (x *MicrosoftSentinel) GetWifEnabled() bool {
	if x != nil {
		return x.WifEnabled
	}
	return false
}

type Syslog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LocalFacility Syslog_LocalFacility   `protobuf:"varint,1,opt,name=local_facility,json=localFacility,proto3,enum=storage.Syslog_LocalFacility" json:"local_facility,omitempty"`
	// Eventually this will support TCP, UDP, and local endpoints
	//
	// Types that are valid to be assigned to Endpoint:
	//
	//	*Syslog_TcpConfig
	Endpoint      isSyslog_Endpoint    `protobuf_oneof:"endpoint"`
	ExtraFields   []*KeyValuePair      `protobuf:"bytes,3,rep,name=extra_fields,json=extraFields,proto3" json:"extra_fields,omitempty"`
	MessageFormat Syslog_MessageFormat `protobuf:"varint,4,opt,name=message_format,json=messageFormat,proto3,enum=storage.Syslog_MessageFormat" json:"message_format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Syslog) Reset() {
	*x = Syslog{}
	mi := &file_storage_notifier_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Syslog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog) ProtoMessage() {}

func (x *Syslog) ProtoReflect() protoreflect.Message {
	mi := &file_storage_notifier_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog.ProtoReflect.Descriptor instead.
func (*Syslog) Descriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{10}
}

func (x *Syslog) GetLocalFacility() Syslog_LocalFacility {
	if x != nil {
		return x.LocalFacility
	}
	return Syslog_LOCAL0
}

func (x *Syslog) GetEndpoint() isSyslog_Endpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *Syslog) GetTcpConfig() *Syslog_TCPConfig {
	if x != nil {
		if x, ok := x.Endpoint.(*Syslog_TcpConfig); ok {
			return x.TcpConfig
		}
	}
	return nil
}

func (x *Syslog) GetExtraFields() []*KeyValuePair {
	if x != nil {
		return x.ExtraFields
	}
	return nil
}

func (x *Syslog) GetMessageFormat() Syslog_MessageFormat {
	if x != nil {
		return x.MessageFormat
	}
	return Syslog_LEGACY
}

type isSyslog_Endpoint interface {
	isSyslog_Endpoint()
}

type Syslog_TcpConfig struct {
	TcpConfig *Syslog_TCPConfig `protobuf:"bytes,2,opt,name=tcp_config,json=tcpConfig,proto3,oneof"`
}

func (*Syslog_TcpConfig) isSyslog_Endpoint() {}

type AWSSecurityHub_Credentials struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AccessKeyId     string                 `protobuf:"bytes,1,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty" scrub:"always"`             // @gotags: scrub:"always"
	SecretAccessKey string                 `protobuf:"bytes,2,opt,name=secret_access_key,json=secretAccessKey,proto3" json:"secret_access_key,omitempty" scrub:"always"` // @gotags: scrub:"always"
	StsEnabled      bool                   `protobuf:"varint,3,opt,name=sts_enabled,json=stsEnabled,proto3" json:"sts_enabled,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AWSSecurityHub_Credentials) Reset() {
	*x = AWSSecurityHub_Credentials{}
	mi := &file_storage_notifier_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AWSSecurityHub_Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSSecurityHub_Credentials) ProtoMessage() {}

func (x *AWSSecurityHub_Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_storage_notifier_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSSecurityHub_Credentials.ProtoReflect.Descriptor instead.
func (*AWSSecurityHub_Credentials) Descriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{1, 0}
}

func (x *AWSSecurityHub_Credentials) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *AWSSecurityHub_Credentials) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

func (x *AWSSecurityHub_Credentials) GetStsEnabled() bool {
	if x != nil {
		return x.StsEnabled
	}
	return false
}

type Jira_PriorityMapping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Severity      Severity               `protobuf:"varint,1,opt,name=severity,proto3,enum=storage.Severity" json:"severity,omitempty"`
	PriorityName  string                 `protobuf:"bytes,2,opt,name=priority_name,json=priorityName,proto3" json:"priority_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Jira_PriorityMapping) Reset() {
	*x = Jira_PriorityMapping{}
	mi := &file_storage_notifier_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jira_PriorityMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jira_PriorityMapping) ProtoMessage() {}

func (x *Jira_PriorityMapping) ProtoReflect() protoreflect.Message {
	mi := &file_storage_notifier_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jira_PriorityMapping.ProtoReflect.Descriptor instead.
func (*Jira_PriorityMapping) Descriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Jira_PriorityMapping) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_UNSET_SEVERITY
}

func (x *Jira_PriorityMapping) GetPriorityName() string {
	if x != nil {
		return x.PriorityName
	}
	return ""
}

// DataCollectionRuleConfig contains information about the data collection rule which is a config per notifier type.
type MicrosoftSentinel_DataCollectionRuleConfig struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	StreamName           string                 `protobuf:"bytes,1,opt,name=stream_name,json=streamName,proto3" json:"stream_name,omitempty"`
	DataCollectionRuleId string                 `protobuf:"bytes,2,opt,name=data_collection_rule_id,json=dataCollectionRuleId,proto3" json:"data_collection_rule_id,omitempty"`
	Enabled              bool                   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *MicrosoftSentinel_DataCollectionRuleConfig) Reset() {
	*x = MicrosoftSentinel_DataCollectionRuleConfig{}
	mi := &file_storage_notifier_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MicrosoftSentinel_DataCollectionRuleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicrosoftSentinel_DataCollectionRuleConfig) ProtoMessage() {}

func (x *MicrosoftSentinel_DataCollectionRuleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_notifier_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicrosoftSentinel_DataCollectionRuleConfig.ProtoReflect.Descriptor instead.
func (*MicrosoftSentinel_DataCollectionRuleConfig) Descriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{9, 0}
}

func (x *MicrosoftSentinel_DataCollectionRuleConfig) GetStreamName() string {
	if x != nil {
		return x.StreamName
	}
	return ""
}

func (x *MicrosoftSentinel_DataCollectionRuleConfig) GetDataCollectionRuleId() string {
	if x != nil {
		return x.DataCollectionRuleId
	}
	return ""
}

func (x *MicrosoftSentinel_DataCollectionRuleConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// client certificate which is used for authentication
type MicrosoftSentinel_ClientCertAuthConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PEM encoded ASN.1 DER format.
	ClientCert string `protobuf:"bytes,1,opt,name=client_cert,json=clientCert,proto3" json:"client_cert,omitempty"`
	// PEM encoded PKCS #8, ASN.1 DER format.
	PrivateKey    string `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty" scrub:"always"` // @gotags: scrub:"always"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MicrosoftSentinel_ClientCertAuthConfig) Reset() {
	*x = MicrosoftSentinel_ClientCertAuthConfig{}
	mi := &file_storage_notifier_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MicrosoftSentinel_ClientCertAuthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicrosoftSentinel_ClientCertAuthConfig) ProtoMessage() {}

func (x *MicrosoftSentinel_ClientCertAuthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_notifier_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicrosoftSentinel_ClientCertAuthConfig.ProtoReflect.Descriptor instead.
func (*MicrosoftSentinel_ClientCertAuthConfig) Descriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{9, 1}
}

func (x *MicrosoftSentinel_ClientCertAuthConfig) GetClientCert() string {
	if x != nil {
		return x.ClientCert
	}
	return ""
}

func (x *MicrosoftSentinel_ClientCertAuthConfig) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

type Syslog_TCPConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty" scrub:"dependent"` // @gotags: scrub:"dependent"
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	SkipTlsVerify bool                   `protobuf:"varint,3,opt,name=skip_tls_verify,json=skipTlsVerify,proto3" json:"skip_tls_verify,omitempty"`
	UseTls        bool                   `protobuf:"varint,4,opt,name=use_tls,json=useTls,proto3" json:"use_tls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Syslog_TCPConfig) Reset() {
	*x = Syslog_TCPConfig{}
	mi := &file_storage_notifier_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Syslog_TCPConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syslog_TCPConfig) ProtoMessage() {}

func (x *Syslog_TCPConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_notifier_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syslog_TCPConfig.ProtoReflect.Descriptor instead.
func (*Syslog_TCPConfig) Descriptor() ([]byte, []int) {
	return file_storage_notifier_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Syslog_TCPConfig) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Syslog_TCPConfig) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Syslog_TCPConfig) GetSkipTlsVerify() bool {
	if x != nil {
		return x.SkipTlsVerify
	}
	return false
}

func (x *Syslog_TCPConfig) GetUseTls() bool {
	if x != nil {
		return x.UseTls
	}
	return false
}

var File_storage_notifier_proto protoreflect.FileDescriptor

const file_storage_notifier_proto_rawDesc = "" +
	"\n" +
	"\x16storage/notifier.proto\x12\astorage\x1a\x14storage/common.proto\x1a\x14storage/policy.proto\x1a\x14storage/traits.proto\"\x80\x06\n" +
	"\bNotifier\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1f\n" +
	"\vui_endpoint\x18\x04 \x01(\tR\n" +
	"uiEndpoint\x12\x1b\n" +
	"\tlabel_key\x18\b \x01(\tR\blabelKey\x12#\n" +
	"\rlabel_default\x18\t \x01(\tR\flabelDefault\x12#\n" +
	"\x04jira\x18\n" +
	" \x01(\v2\r.storage.JiraH\x00R\x04jira\x12&\n" +
	"\x05email\x18\v \x01(\v2\x0e.storage.EmailH\x00R\x05email\x12#\n" +
	"\x04cscc\x18\f \x01(\v2\r.storage.CSCCH\x00R\x04cscc\x12)\n" +
	"\x06splunk\x18\r \x01(\v2\x0f.storage.SplunkH\x00R\x06splunk\x122\n" +
	"\tpagerduty\x18\x0e \x01(\v2\x12.storage.PagerDutyH\x00R\tpagerduty\x12,\n" +
	"\ageneric\x18\x0f \x01(\v2\x10.storage.GenericH\x00R\ageneric\x122\n" +
	"\tsumologic\x18\x10 \x01(\v2\x12.storage.SumoLogicH\x00R\tsumologic\x12C\n" +
	"\x10aws_security_hub\x18\x11 \x01(\v2\x17.storage.AWSSecurityHubH\x00R\x0eawsSecurityHub\x12)\n" +
	"\x06syslog\x18\x12 \x01(\v2\x0f.storage.SyslogH\x00R\x06syslog\x12K\n" +
	"\x12microsoft_sentinel\x18\x14 \x01(\v2\x1a.storage.MicrosoftSentinelH\x00R\x11microsoftSentinel\x12'\n" +
	"\x0fnotifier_secret\x18\x13 \x01(\tR\x0enotifierSecret\x12'\n" +
	"\x06traits\x182 \x01(\v2\x0f.storage.TraitsR\x06traitsB\b\n" +
	"\x06configJ\x04\b\x05\x10\x06R\aenabled\"\x8e\x02\n" +
	"\x0eAWSSecurityHub\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\x12E\n" +
	"\vcredentials\x18\x02 \x01(\v2#.storage.AWSSecurityHub.CredentialsR\vcredentials\x12\x1d\n" +
	"\n" +
	"account_id\x18\x03 \x01(\tR\taccountId\x1a~\n" +
	"\vCredentials\x12\"\n" +
	"\raccess_key_id\x18\x01 \x01(\tR\vaccessKeyId\x12*\n" +
	"\x11secret_access_key\x18\x02 \x01(\tR\x0fsecretAccessKey\x12\x1f\n" +
	"\vsts_enabled\x18\x03 \x01(\bR\n" +
	"stsEnabled\"y\n" +
	"\x04CSCC\x12'\n" +
	"\x0fservice_account\x18\x01 \x01(\tR\x0eserviceAccount\x12\x1b\n" +
	"\tsource_id\x18\x04 \x01(\tR\bsourceId\x12\x1f\n" +
	"\vwif_enabled\x18\x05 \x01(\bR\n" +
	"wifEnabledJ\x04\b\x02\x10\x03J\x04\b\x03\x10\x04\"\xfc\x02\n" +
	"\x04Jira\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x1d\n" +
	"\n" +
	"issue_type\x18\x04 \x01(\tR\tissueType\x12J\n" +
	"\x11priority_mappings\x18\x05 \x03(\v2\x1d.storage.Jira.PriorityMappingR\x10priorityMappings\x12.\n" +
	"\x13default_fields_json\x18\x06 \x01(\tR\x11defaultFieldsJson\x12(\n" +
	"\x0fdisablePriority\x18\a \x01(\bR\x0fdisablePriority\x1ae\n" +
	"\x0fPriorityMapping\x12-\n" +
	"\bseverity\x18\x01 \x01(\x0e2\x11.storage.SeverityR\bseverity\x12#\n" +
	"\rpriority_name\x18\x02 \x01(\tR\fpriorityName\"\x95\x03\n" +
	"\x05Email\x12\x16\n" +
	"\x06server\x18\x01 \x01(\tR\x06server\x12\x16\n" +
	"\x06sender\x18\x02 \x01(\tR\x06sender\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x1e\n" +
	"\n" +
	"disableTLS\x18\x05 \x01(\bR\n" +
	"disableTLS\x125\n" +
	"\x16DEPRECATED_useStartTLS\x18\x06 \x01(\bR\x15DEPRECATEDUseStartTLS\x12\x12\n" +
	"\x04from\x18\a \x01(\tR\x04from\x12I\n" +
	"\x12startTLSAuthMethod\x18\b \x01(\x0e2\x19.storage.Email.AuthMethodR\x12startTLSAuthMethod\x12<\n" +
	"\x1aallow_unauthenticated_smtp\x18\t \x01(\bR\x18allowUnauthenticatedSmtp\"0\n" +
	"\n" +
	"AuthMethod\x12\f\n" +
	"\bDISABLED\x10\x00\x12\t\n" +
	"\x05PLAIN\x10\x01\x12\t\n" +
	"\x05LOGIN\x10\x02\"\x95\x03\n" +
	"\x06Splunk\x12\x1d\n" +
	"\n" +
	"http_token\x18\x01 \x01(\tR\thttpToken\x12#\n" +
	"\rhttp_endpoint\x18\x02 \x01(\tR\fhttpEndpoint\x12\x1a\n" +
	"\binsecure\x18\x03 \x01(\bR\binsecure\x12\x1a\n" +
	"\btruncate\x18\x04 \x01(\x03R\btruncate\x122\n" +
	"\x15audit_logging_enabled\x18\x05 \x01(\bR\x13auditLoggingEnabled\x124\n" +
	"\x13derived_source_type\x18\x06 \x01(\bB\x02\x18\x01H\x00R\x11derivedSourceType\x12C\n" +
	"\fsource_types\x18\a \x03(\v2 .storage.Splunk.SourceTypesEntryR\vsourceTypes\x1a>\n" +
	"\x10SourceTypesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B \n" +
	"\x1ederived_source_type_deprecated\"$\n" +
	"\tPagerDuty\x12\x17\n" +
	"\aapi_key\x18\x01 \x01(\tR\x06apiKey\"\xbb\x02\n" +
	"\aGeneric\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12$\n" +
	"\rskipTLSVerify\x18\x02 \x01(\bR\rskipTLSVerify\x12\x17\n" +
	"\aca_cert\x18\x03 \x01(\tR\x06caCert\x12\x1a\n" +
	"\busername\x18\x04 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x05 \x01(\tR\bpassword\x12/\n" +
	"\aheaders\x18\x06 \x03(\v2\x15.storage.KeyValuePairR\aheaders\x128\n" +
	"\fextra_fields\x18\a \x03(\v2\x15.storage.KeyValuePairR\vextraFields\x122\n" +
	"\x15audit_logging_enabled\x18\b \x01(\bR\x13auditLoggingEnabled\"a\n" +
	"\tSumoLogic\x12.\n" +
	"\x13http_source_address\x18\x01 \x01(\tR\x11httpSourceAddress\x12$\n" +
	"\rskipTLSVerify\x18\x02 \x01(\bR\rskipTLSVerify\"\xfc\x05\n" +
	"\x11MicrosoftSentinel\x124\n" +
	"\x16log_ingestion_endpoint\x18\x01 \x01(\tR\x14logIngestionEndpoint\x12.\n" +
	"\x13directory_tenant_id\x18\x02 \x01(\tR\x11directoryTenantId\x122\n" +
	"\x15application_client_id\x18\x03 \x01(\tR\x13applicationClientId\x12\x16\n" +
	"\x06secret\x18\x04 \x01(\tR\x06secret\x12]\n" +
	"\x10alert_dcr_config\x18\x05 \x01(\v23.storage.MicrosoftSentinel.DataCollectionRuleConfigR\x0ealertDcrConfig\x12d\n" +
	"\x14audit_log_dcr_config\x18\x06 \x01(\v23.storage.MicrosoftSentinel.DataCollectionRuleConfigR\x11auditLogDcrConfig\x12f\n" +
	"\x17client_cert_auth_config\x18\a \x01(\v2/.storage.MicrosoftSentinel.ClientCertAuthConfigR\x14clientCertAuthConfig\x12\x1f\n" +
	"\vwif_enabled\x18\b \x01(\bR\n" +
	"wifEnabled\x1a\x8c\x01\n" +
	"\x18DataCollectionRuleConfig\x12\x1f\n" +
	"\vstream_name\x18\x01 \x01(\tR\n" +
	"streamName\x125\n" +
	"\x17data_collection_rule_id\x18\x02 \x01(\tR\x14dataCollectionRuleId\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\x1aX\n" +
	"\x14ClientCertAuthConfig\x12\x1f\n" +
	"\vclient_cert\x18\x01 \x01(\tR\n" +
	"clientCert\x12\x1f\n" +
	"\vprivate_key\x18\x02 \x01(\tR\n" +
	"privateKey\"\xab\x04\n" +
	"\x06Syslog\x12D\n" +
	"\x0elocal_facility\x18\x01 \x01(\x0e2\x1d.storage.Syslog.LocalFacilityR\rlocalFacility\x12:\n" +
	"\n" +
	"tcp_config\x18\x02 \x01(\v2\x19.storage.Syslog.TCPConfigH\x00R\ttcpConfig\x128\n" +
	"\fextra_fields\x18\x03 \x03(\v2\x15.storage.KeyValuePairR\vextraFields\x12D\n" +
	"\x0emessage_format\x18\x04 \x01(\x0e2\x1d.storage.Syslog.MessageFormatR\rmessageFormat\x1a|\n" +
	"\tTCPConfig\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12&\n" +
	"\x0fskip_tls_verify\x18\x03 \x01(\bR\rskipTlsVerify\x12\x17\n" +
	"\ause_tls\x18\x04 \x01(\bR\x06useTls\"o\n" +
	"\rLocalFacility\x12\n" +
	"\n" +
	"\x06LOCAL0\x10\x00\x12\n" +
	"\n" +
	"\x06LOCAL1\x10\x01\x12\n" +
	"\n" +
	"\x06LOCAL2\x10\x02\x12\n" +
	"\n" +
	"\x06LOCAL3\x10\x03\x12\n" +
	"\n" +
	"\x06LOCAL4\x10\x04\x12\n" +
	"\n" +
	"\x06LOCAL5\x10\x05\x12\n" +
	"\n" +
	"\x06LOCAL6\x10\x06\x12\n" +
	"\n" +
	"\x06LOCAL7\x10\a\"$\n" +
	"\rMessageFormat\x12\n" +
	"\n" +
	"\x06LEGACY\x10\x00\x12\a\n" +
	"\x03CEF\x10\x01B\n" +
	"\n" +
	"\bendpointB.\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storageb\x06proto3"

var (
	file_storage_notifier_proto_rawDescOnce sync.Once
	file_storage_notifier_proto_rawDescData []byte
)

func file_storage_notifier_proto_rawDescGZIP() []byte {
	file_storage_notifier_proto_rawDescOnce.Do(func() {
		file_storage_notifier_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_storage_notifier_proto_rawDesc), len(file_storage_notifier_proto_rawDesc)))
	})
	return file_storage_notifier_proto_rawDescData
}

var file_storage_notifier_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_storage_notifier_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_storage_notifier_proto_goTypes = []any{
	(Email_AuthMethod)(0),              // 0: storage.Email.AuthMethod
	(Syslog_LocalFacility)(0),          // 1: storage.Syslog.LocalFacility
	(Syslog_MessageFormat)(0),          // 2: storage.Syslog.MessageFormat
	(*Notifier)(nil),                   // 3: storage.Notifier
	(*AWSSecurityHub)(nil),             // 4: storage.AWSSecurityHub
	(*CSCC)(nil),                       // 5: storage.CSCC
	(*Jira)(nil),                       // 6: storage.Jira
	(*Email)(nil),                      // 7: storage.Email
	(*Splunk)(nil),                     // 8: storage.Splunk
	(*PagerDuty)(nil),                  // 9: storage.PagerDuty
	(*Generic)(nil),                    // 10: storage.Generic
	(*SumoLogic)(nil),                  // 11: storage.SumoLogic
	(*MicrosoftSentinel)(nil),          // 12: storage.MicrosoftSentinel
	(*Syslog)(nil),                     // 13: storage.Syslog
	(*AWSSecurityHub_Credentials)(nil), // 14: storage.AWSSecurityHub.Credentials
	(*Jira_PriorityMapping)(nil),       // 15: storage.Jira.PriorityMapping
	nil,                                // 16: storage.Splunk.SourceTypesEntry
	(*MicrosoftSentinel_DataCollectionRuleConfig)(nil), // 17: storage.MicrosoftSentinel.DataCollectionRuleConfig
	(*MicrosoftSentinel_ClientCertAuthConfig)(nil),     // 18: storage.MicrosoftSentinel.ClientCertAuthConfig
	(*Syslog_TCPConfig)(nil),                           // 19: storage.Syslog.TCPConfig
	(*Traits)(nil),                                     // 20: storage.Traits
	(*KeyValuePair)(nil),                               // 21: storage.KeyValuePair
	(Severity)(0),                                      // 22: storage.Severity
}
var file_storage_notifier_proto_depIdxs = []int32{
	6,  // 0: storage.Notifier.jira:type_name -> storage.Jira
	7,  // 1: storage.Notifier.email:type_name -> storage.Email
	5,  // 2: storage.Notifier.cscc:type_name -> storage.CSCC
	8,  // 3: storage.Notifier.splunk:type_name -> storage.Splunk
	9,  // 4: storage.Notifier.pagerduty:type_name -> storage.PagerDuty
	10, // 5: storage.Notifier.generic:type_name -> storage.Generic
	11, // 6: storage.Notifier.sumologic:type_name -> storage.SumoLogic
	4,  // 7: storage.Notifier.aws_security_hub:type_name -> storage.AWSSecurityHub
	13, // 8: storage.Notifier.syslog:type_name -> storage.Syslog
	12, // 9: storage.Notifier.microsoft_sentinel:type_name -> storage.MicrosoftSentinel
	20, // 10: storage.Notifier.traits:type_name -> storage.Traits
	14, // 11: storage.AWSSecurityHub.credentials:type_name -> storage.AWSSecurityHub.Credentials
	15, // 12: storage.Jira.priority_mappings:type_name -> storage.Jira.PriorityMapping
	0,  // 13: storage.Email.startTLSAuthMethod:type_name -> storage.Email.AuthMethod
	16, // 14: storage.Splunk.source_types:type_name -> storage.Splunk.SourceTypesEntry
	21, // 15: storage.Generic.headers:type_name -> storage.KeyValuePair
	21, // 16: storage.Generic.extra_fields:type_name -> storage.KeyValuePair
	17, // 17: storage.MicrosoftSentinel.alert_dcr_config:type_name -> storage.MicrosoftSentinel.DataCollectionRuleConfig
	17, // 18: storage.MicrosoftSentinel.audit_log_dcr_config:type_name -> storage.MicrosoftSentinel.DataCollectionRuleConfig
	18, // 19: storage.MicrosoftSentinel.client_cert_auth_config:type_name -> storage.MicrosoftSentinel.ClientCertAuthConfig
	1,  // 20: storage.Syslog.local_facility:type_name -> storage.Syslog.LocalFacility
	19, // 21: storage.Syslog.tcp_config:type_name -> storage.Syslog.TCPConfig
	21, // 22: storage.Syslog.extra_fields:type_name -> storage.KeyValuePair
	2,  // 23: storage.Syslog.message_format:type_name -> storage.Syslog.MessageFormat
	22, // 24: storage.Jira.PriorityMapping.severity:type_name -> storage.Severity
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_storage_notifier_proto_init() }
func file_storage_notifier_proto_init() {
	if File_storage_notifier_proto != nil {
		return
	}
	file_storage_common_proto_init()
	file_storage_policy_proto_init()
	file_storage_traits_proto_init()
	file_storage_notifier_proto_msgTypes[0].OneofWrappers = []any{
		(*Notifier_Jira)(nil),
		(*Notifier_Email)(nil),
		(*Notifier_Cscc)(nil),
		(*Notifier_Splunk)(nil),
		(*Notifier_Pagerduty)(nil),
		(*Notifier_Generic)(nil),
		(*Notifier_Sumologic)(nil),
		(*Notifier_AwsSecurityHub)(nil),
		(*Notifier_Syslog)(nil),
		(*Notifier_MicrosoftSentinel)(nil),
	}
	file_storage_notifier_proto_msgTypes[5].OneofWrappers = []any{
		(*Splunk_DerivedSourceType)(nil),
	}
	file_storage_notifier_proto_msgTypes[10].OneofWrappers = []any{
		(*Syslog_TcpConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_notifier_proto_rawDesc), len(file_storage_notifier_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_notifier_proto_goTypes,
		DependencyIndexes: file_storage_notifier_proto_depIdxs,
		EnumInfos:         file_storage_notifier_proto_enumTypes,
		MessageInfos:      file_storage_notifier_proto_msgTypes,
	}.Build()
	File_storage_notifier_proto = out.File
	file_storage_notifier_proto_goTypes = nil
	file_storage_notifier_proto_depIdxs = nil
}
