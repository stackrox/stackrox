// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/virtual_machine.proto

//go:build protoopaque

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VirtualMachine_Note int32

const (
	VirtualMachine_MISSING_METADATA                    VirtualMachine_Note = 0
	VirtualMachine_MISSING_SCAN_DATA                   VirtualMachine_Note = 1
	VirtualMachine_MISSING_SIGNATURE                   VirtualMachine_Note = 2
	VirtualMachine_MISSING_SIGNATURE_VERIFICATION_DATA VirtualMachine_Note = 3
)

// Enum value maps for VirtualMachine_Note.
var (
	VirtualMachine_Note_name = map[int32]string{
		0: "MISSING_METADATA",
		1: "MISSING_SCAN_DATA",
		2: "MISSING_SIGNATURE",
		3: "MISSING_SIGNATURE_VERIFICATION_DATA",
	}
	VirtualMachine_Note_value = map[string]int32{
		"MISSING_METADATA":                    0,
		"MISSING_SCAN_DATA":                   1,
		"MISSING_SIGNATURE":                   2,
		"MISSING_SIGNATURE_VERIFICATION_DATA": 3,
	}
)

func (x VirtualMachine_Note) Enum() *VirtualMachine_Note {
	p := new(VirtualMachine_Note)
	*p = x
	return p
}

func (x VirtualMachine_Note) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualMachine_Note) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_virtual_machine_proto_enumTypes[0].Descriptor()
}

func (VirtualMachine_Note) Type() protoreflect.EnumType {
	return &file_storage_virtual_machine_proto_enumTypes[0]
}

func (x VirtualMachine_Note) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type VirtualMachine_State int32

const (
	VirtualMachine_UNKNOWN VirtualMachine_State = 0
	VirtualMachine_STOPPED VirtualMachine_State = 1
	VirtualMachine_RUNNING VirtualMachine_State = 2
)

// Enum value maps for VirtualMachine_State.
var (
	VirtualMachine_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "STOPPED",
		2: "RUNNING",
	}
	VirtualMachine_State_value = map[string]int32{
		"UNKNOWN": 0,
		"STOPPED": 1,
		"RUNNING": 2,
	}
)

func (x VirtualMachine_State) Enum() *VirtualMachine_State {
	p := new(VirtualMachine_State)
	*p = x
	return p
}

func (x VirtualMachine_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualMachine_State) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_virtual_machine_proto_enumTypes[1].Descriptor()
}

func (VirtualMachine_State) Type() protoreflect.EnumType {
	return &file_storage_virtual_machine_proto_enumTypes[1]
}

func (x VirtualMachine_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type VirtualMachineScan_Note int32

const (
	VirtualMachineScan_UNSET          VirtualMachineScan_Note = 0
	VirtualMachineScan_OS_UNKNOWN     VirtualMachineScan_Note = 1
	VirtualMachineScan_OS_UNSUPPORTED VirtualMachineScan_Note = 2
)

// Enum value maps for VirtualMachineScan_Note.
var (
	VirtualMachineScan_Note_name = map[int32]string{
		0: "UNSET",
		1: "OS_UNKNOWN",
		2: "OS_UNSUPPORTED",
	}
	VirtualMachineScan_Note_value = map[string]int32{
		"UNSET":          0,
		"OS_UNKNOWN":     1,
		"OS_UNSUPPORTED": 2,
	}
)

func (x VirtualMachineScan_Note) Enum() *VirtualMachineScan_Note {
	p := new(VirtualMachineScan_Note)
	*p = x
	return p
}

func (x VirtualMachineScan_Note) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualMachineScan_Note) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_virtual_machine_proto_enumTypes[2].Descriptor()
}

func (VirtualMachineScan_Note) Type() protoreflect.EnumType {
	return &file_storage_virtual_machine_proto_enumTypes[2]
}

func (x VirtualMachineScan_Note) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type EmbeddedVirtualMachineScanComponent_Note int32

const (
	EmbeddedVirtualMachineScanComponent_UNSPECIFIED EmbeddedVirtualMachineScanComponent_Note = 0
	EmbeddedVirtualMachineScanComponent_UNSCANNED   EmbeddedVirtualMachineScanComponent_Note = 1
)

// Enum value maps for EmbeddedVirtualMachineScanComponent_Note.
var (
	EmbeddedVirtualMachineScanComponent_Note_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "UNSCANNED",
	}
	EmbeddedVirtualMachineScanComponent_Note_value = map[string]int32{
		"UNSPECIFIED": 0,
		"UNSCANNED":   1,
	}
)

func (x EmbeddedVirtualMachineScanComponent_Note) Enum() *EmbeddedVirtualMachineScanComponent_Note {
	p := new(EmbeddedVirtualMachineScanComponent_Note)
	*p = x
	return p
}

func (x EmbeddedVirtualMachineScanComponent_Note) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmbeddedVirtualMachineScanComponent_Note) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_virtual_machine_proto_enumTypes[3].Descriptor()
}

func (EmbeddedVirtualMachineScanComponent_Note) Type() protoreflect.EnumType {
	return &file_storage_virtual_machine_proto_enumTypes[3]
}

func (x EmbeddedVirtualMachineScanComponent_Note) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// TODO (ROX-30352): Review this whole proto for GA readiness.  Lots of copypasta.
type VirtualMachine struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_Name        *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_ClusterId   *string                `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_ClusterName *string                `protobuf:"bytes,5,opt,name=cluster_name,json=clusterName"`
	xxx_hidden_Facts       map[string]string      `protobuf:"bytes,6,rep,name=facts" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_LastUpdated *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_updated,json=lastUpdated"`
	xxx_hidden_Notes       []VirtualMachine_Note  `protobuf:"varint,8,rep,packed,name=notes,enum=storage.VirtualMachine_Note"`
	xxx_hidden_VsockCid    int32                  `protobuf:"varint,9,opt,name=vsock_cid,json=vsockCid"`
	xxx_hidden_State       VirtualMachine_State   `protobuf:"varint,10,opt,name=state,enum=storage.VirtualMachine_State"`
	xxx_hidden_Scan        *VirtualMachineScan    `protobuf:"bytes,11,opt,name=scan"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VirtualMachine) Reset() {
	*x = VirtualMachine{}
	mi := &file_storage_virtual_machine_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachine) ProtoMessage() {}

func (x *VirtualMachine) ProtoReflect() protoreflect.Message {
	mi := &file_storage_virtual_machine_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachine) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *VirtualMachine) GetFacts() map[string]string {
	if x != nil {
		return x.xxx_hidden_Facts
	}
	return nil
}

func (x *VirtualMachine) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastUpdated
	}
	return nil
}

func (x *VirtualMachine) GetNotes() []VirtualMachine_Note {
	if x != nil {
		return x.xxx_hidden_Notes
	}
	return nil
}

func (x *VirtualMachine) GetVsockCid() int32 {
	if x != nil {
		return x.xxx_hidden_VsockCid
	}
	return 0
}

func (x *VirtualMachine) GetState() VirtualMachine_State {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 9) {
			return x.xxx_hidden_State
		}
	}
	return VirtualMachine_UNKNOWN
}

func (x *VirtualMachine) GetScan() *VirtualMachineScan {
	if x != nil {
		return x.xxx_hidden_Scan
	}
	return nil
}

func (x *VirtualMachine) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 11)
}

func (x *VirtualMachine) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 11)
}

func (x *VirtualMachine) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 11)
}

func (x *VirtualMachine) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 11)
}

func (x *VirtualMachine) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 11)
}

func (x *VirtualMachine) SetFacts(v map[string]string) {
	x.xxx_hidden_Facts = v
}

func (x *VirtualMachine) SetLastUpdated(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastUpdated = v
}

func (x *VirtualMachine) SetNotes(v []VirtualMachine_Note) {
	x.xxx_hidden_Notes = v
}

func (x *VirtualMachine) SetVsockCid(v int32) {
	x.xxx_hidden_VsockCid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 11)
}

func (x *VirtualMachine) SetState(v VirtualMachine_State) {
	x.xxx_hidden_State = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 11)
}

func (x *VirtualMachine) SetScan(v *VirtualMachineScan) {
	x.xxx_hidden_Scan = v
}

func (x *VirtualMachine) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachine) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachine) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VirtualMachine) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *VirtualMachine) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *VirtualMachine) HasLastUpdated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastUpdated != nil
}

func (x *VirtualMachine) HasVsockCid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *VirtualMachine) HasState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *VirtualMachine) HasScan() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Scan != nil
}

func (x *VirtualMachine) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *VirtualMachine) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *VirtualMachine) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *VirtualMachine) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ClusterId = nil
}

func (x *VirtualMachine) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ClusterName = nil
}

func (x *VirtualMachine) ClearLastUpdated() {
	x.xxx_hidden_LastUpdated = nil
}

func (x *VirtualMachine) ClearVsockCid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_VsockCid = 0
}

func (x *VirtualMachine) ClearState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_State = VirtualMachine_UNKNOWN
}

func (x *VirtualMachine) ClearScan() {
	x.xxx_hidden_Scan = nil
}

type VirtualMachine_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *string
	Namespace   *string
	Name        *string
	ClusterId   *string
	ClusterName *string
	Facts       map[string]string
	LastUpdated *timestamppb.Timestamp
	Notes       []VirtualMachine_Note
	VsockCid    *int32
	State       *VirtualMachine_State
	Scan        *VirtualMachineScan
}

func (b0 VirtualMachine_builder) Build() *VirtualMachine {
	m0 := &VirtualMachine{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 11)
		x.xxx_hidden_Id = b.Id
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 11)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 11)
		x.xxx_hidden_Name = b.Name
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 11)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 11)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	x.xxx_hidden_Facts = b.Facts
	x.xxx_hidden_LastUpdated = b.LastUpdated
	x.xxx_hidden_Notes = b.Notes
	if b.VsockCid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 11)
		x.xxx_hidden_VsockCid = *b.VsockCid
	}
	if b.State != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 11)
		x.xxx_hidden_State = *b.State
	}
	x.xxx_hidden_Scan = b.Scan
	return m0
}

type VirtualMachineScan struct {
	state                      protoimpl.MessageState                  `protogen:"opaque.v1"`
	xxx_hidden_ScanTime        *timestamppb.Timestamp                  `protobuf:"bytes,1,opt,name=scan_time,json=scanTime"`
	xxx_hidden_OperatingSystem *string                                 `protobuf:"bytes,2,opt,name=operating_system,json=operatingSystem"`
	xxx_hidden_Notes           []VirtualMachineScan_Note               `protobuf:"varint,3,rep,packed,name=notes,enum=storage.VirtualMachineScan_Note"`
	xxx_hidden_Components      *[]*EmbeddedVirtualMachineScanComponent `protobuf:"bytes,4,rep,name=components"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *VirtualMachineScan) Reset() {
	*x = VirtualMachineScan{}
	mi := &file_storage_virtual_machine_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineScan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineScan) ProtoMessage() {}

func (x *VirtualMachineScan) ProtoReflect() protoreflect.Message {
	mi := &file_storage_virtual_machine_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineScan) GetScanTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ScanTime
	}
	return nil
}

func (x *VirtualMachineScan) GetOperatingSystem() string {
	if x != nil {
		if x.xxx_hidden_OperatingSystem != nil {
			return *x.xxx_hidden_OperatingSystem
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineScan) GetNotes() []VirtualMachineScan_Note {
	if x != nil {
		return x.xxx_hidden_Notes
	}
	return nil
}

func (x *VirtualMachineScan) GetComponents() []*EmbeddedVirtualMachineScanComponent {
	if x != nil {
		if x.xxx_hidden_Components != nil {
			return *x.xxx_hidden_Components
		}
	}
	return nil
}

func (x *VirtualMachineScan) SetScanTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_ScanTime = v
}

func (x *VirtualMachineScan) SetOperatingSystem(v string) {
	x.xxx_hidden_OperatingSystem = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *VirtualMachineScan) SetNotes(v []VirtualMachineScan_Note) {
	x.xxx_hidden_Notes = v
}

func (x *VirtualMachineScan) SetComponents(v []*EmbeddedVirtualMachineScanComponent) {
	x.xxx_hidden_Components = &v
}

func (x *VirtualMachineScan) HasScanTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ScanTime != nil
}

func (x *VirtualMachineScan) HasOperatingSystem() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachineScan) ClearScanTime() {
	x.xxx_hidden_ScanTime = nil
}

func (x *VirtualMachineScan) ClearOperatingSystem() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OperatingSystem = nil
}

type VirtualMachineScan_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScanTime        *timestamppb.Timestamp
	OperatingSystem *string
	Notes           []VirtualMachineScan_Note
	Components      []*EmbeddedVirtualMachineScanComponent
}

func (b0 VirtualMachineScan_builder) Build() *VirtualMachineScan {
	m0 := &VirtualMachineScan{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ScanTime = b.ScanTime
	if b.OperatingSystem != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_OperatingSystem = b.OperatingSystem
	}
	x.xxx_hidden_Notes = b.Notes
	x.xxx_hidden_Components = &b.Components
	return m0
}

type EmbeddedVirtualMachineScanComponent struct {
	state                      protoimpl.MessageState                           `protogen:"opaque.v1"`
	xxx_hidden_Name            *string                                          `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Version         *string                                          `protobuf:"bytes,2,opt,name=version"`
	xxx_hidden_SetTopCvss      isEmbeddedVirtualMachineScanComponent_SetTopCvss `protobuf_oneof:"set_top_cvss"`
	xxx_hidden_RiskScore       float32                                          `protobuf:"fixed32,4,opt,name=risk_score,json=riskScore"`
	xxx_hidden_Vulnerabilities *[]*VirtualMachineVulnerability                  `protobuf:"bytes,5,rep,name=vulnerabilities"`
	xxx_hidden_Source          SourceType                                       `protobuf:"varint,6,opt,name=source,enum=storage.SourceType"`
	xxx_hidden_Notes           []EmbeddedVirtualMachineScanComponent_Note       `protobuf:"varint,7,rep,packed,name=notes,enum=storage.EmbeddedVirtualMachineScanComponent_Note"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *EmbeddedVirtualMachineScanComponent) Reset() {
	*x = EmbeddedVirtualMachineScanComponent{}
	mi := &file_storage_virtual_machine_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmbeddedVirtualMachineScanComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddedVirtualMachineScanComponent) ProtoMessage() {}

func (x *EmbeddedVirtualMachineScanComponent) ProtoReflect() protoreflect.Message {
	mi := &file_storage_virtual_machine_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EmbeddedVirtualMachineScanComponent) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *EmbeddedVirtualMachineScanComponent) GetVersion() string {
	if x != nil {
		if x.xxx_hidden_Version != nil {
			return *x.xxx_hidden_Version
		}
		return ""
	}
	return ""
}

func (x *EmbeddedVirtualMachineScanComponent) GetTopCvss() float32 {
	if x != nil {
		if x, ok := x.xxx_hidden_SetTopCvss.(*embeddedVirtualMachineScanComponent_TopCvss); ok {
			return x.TopCvss
		}
	}
	return 0
}

func (x *EmbeddedVirtualMachineScanComponent) GetRiskScore() float32 {
	if x != nil {
		return x.xxx_hidden_RiskScore
	}
	return 0
}

func (x *EmbeddedVirtualMachineScanComponent) GetVulnerabilities() []*VirtualMachineVulnerability {
	if x != nil {
		if x.xxx_hidden_Vulnerabilities != nil {
			return *x.xxx_hidden_Vulnerabilities
		}
	}
	return nil
}

func (x *EmbeddedVirtualMachineScanComponent) GetSource() SourceType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_Source
		}
	}
	return SourceType_OS
}

func (x *EmbeddedVirtualMachineScanComponent) GetNotes() []EmbeddedVirtualMachineScanComponent_Note {
	if x != nil {
		return x.xxx_hidden_Notes
	}
	return nil
}

func (x *EmbeddedVirtualMachineScanComponent) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *EmbeddedVirtualMachineScanComponent) SetVersion(v string) {
	x.xxx_hidden_Version = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *EmbeddedVirtualMachineScanComponent) SetTopCvss(v float32) {
	x.xxx_hidden_SetTopCvss = &embeddedVirtualMachineScanComponent_TopCvss{v}
}

func (x *EmbeddedVirtualMachineScanComponent) SetRiskScore(v float32) {
	x.xxx_hidden_RiskScore = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *EmbeddedVirtualMachineScanComponent) SetVulnerabilities(v []*VirtualMachineVulnerability) {
	x.xxx_hidden_Vulnerabilities = &v
}

func (x *EmbeddedVirtualMachineScanComponent) SetSource(v SourceType) {
	x.xxx_hidden_Source = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *EmbeddedVirtualMachineScanComponent) SetNotes(v []EmbeddedVirtualMachineScanComponent_Note) {
	x.xxx_hidden_Notes = v
}

func (x *EmbeddedVirtualMachineScanComponent) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *EmbeddedVirtualMachineScanComponent) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *EmbeddedVirtualMachineScanComponent) HasSetTopCvss() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SetTopCvss != nil
}

func (x *EmbeddedVirtualMachineScanComponent) HasTopCvss() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_SetTopCvss.(*embeddedVirtualMachineScanComponent_TopCvss)
	return ok
}

func (x *EmbeddedVirtualMachineScanComponent) HasRiskScore() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *EmbeddedVirtualMachineScanComponent) HasSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *EmbeddedVirtualMachineScanComponent) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *EmbeddedVirtualMachineScanComponent) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Version = nil
}

func (x *EmbeddedVirtualMachineScanComponent) ClearSetTopCvss() {
	x.xxx_hidden_SetTopCvss = nil
}

func (x *EmbeddedVirtualMachineScanComponent) ClearTopCvss() {
	if _, ok := x.xxx_hidden_SetTopCvss.(*embeddedVirtualMachineScanComponent_TopCvss); ok {
		x.xxx_hidden_SetTopCvss = nil
	}
}

func (x *EmbeddedVirtualMachineScanComponent) ClearRiskScore() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_RiskScore = 0
}

func (x *EmbeddedVirtualMachineScanComponent) ClearSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Source = SourceType_OS
}

const EmbeddedVirtualMachineScanComponent_SetTopCvss_not_set_case case_EmbeddedVirtualMachineScanComponent_SetTopCvss = 0
const EmbeddedVirtualMachineScanComponent_TopCvss_case case_EmbeddedVirtualMachineScanComponent_SetTopCvss = 3

func (x *EmbeddedVirtualMachineScanComponent) WhichSetTopCvss() case_EmbeddedVirtualMachineScanComponent_SetTopCvss {
	if x == nil {
		return EmbeddedVirtualMachineScanComponent_SetTopCvss_not_set_case
	}
	switch x.xxx_hidden_SetTopCvss.(type) {
	case *embeddedVirtualMachineScanComponent_TopCvss:
		return EmbeddedVirtualMachineScanComponent_TopCvss_case
	default:
		return EmbeddedVirtualMachineScanComponent_SetTopCvss_not_set_case
	}
}

type EmbeddedVirtualMachineScanComponent_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name    *string
	Version *string
	// Fields of oneof xxx_hidden_SetTopCvss:
	TopCvss *float32
	// -- end of xxx_hidden_SetTopCvss
	RiskScore       *float32
	Vulnerabilities []*VirtualMachineVulnerability
	Source          *SourceType
	Notes           []EmbeddedVirtualMachineScanComponent_Note
}

func (b0 EmbeddedVirtualMachineScanComponent_builder) Build() *EmbeddedVirtualMachineScanComponent {
	m0 := &EmbeddedVirtualMachineScanComponent{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Version = b.Version
	}
	if b.TopCvss != nil {
		x.xxx_hidden_SetTopCvss = &embeddedVirtualMachineScanComponent_TopCvss{*b.TopCvss}
	}
	if b.RiskScore != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_RiskScore = *b.RiskScore
	}
	x.xxx_hidden_Vulnerabilities = &b.Vulnerabilities
	if b.Source != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_Source = *b.Source
	}
	x.xxx_hidden_Notes = b.Notes
	return m0
}

type case_EmbeddedVirtualMachineScanComponent_SetTopCvss protoreflect.FieldNumber

func (x case_EmbeddedVirtualMachineScanComponent_SetTopCvss) String() string {
	md := file_storage_virtual_machine_proto_msgTypes[2].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isEmbeddedVirtualMachineScanComponent_SetTopCvss interface {
	isEmbeddedVirtualMachineScanComponent_SetTopCvss()
}

type embeddedVirtualMachineScanComponent_TopCvss struct {
	TopCvss float32 `protobuf:"fixed32,3,opt,name=top_cvss,json=topCvss,oneof"`
}

func (*embeddedVirtualMachineScanComponent_TopCvss) isEmbeddedVirtualMachineScanComponent_SetTopCvss() {
}

type VirtualMachineVulnerability struct {
	state                  protoimpl.MessageState                   `protogen:"opaque.v1"`
	xxx_hidden_CveBaseInfo *VirtualMachineCVEInfo                   `protobuf:"bytes,1,opt,name=cve_base_info,json=cveBaseInfo"`
	xxx_hidden_Severity    VulnerabilitySeverity                    `protobuf:"varint,2,opt,name=severity,enum=storage.VulnerabilitySeverity"`
	xxx_hidden_SetFixedBy  isVirtualMachineVulnerability_SetFixedBy `protobuf_oneof:"set_fixed_by"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VirtualMachineVulnerability) Reset() {
	*x = VirtualMachineVulnerability{}
	mi := &file_storage_virtual_machine_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineVulnerability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineVulnerability) ProtoMessage() {}

func (x *VirtualMachineVulnerability) ProtoReflect() protoreflect.Message {
	mi := &file_storage_virtual_machine_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineVulnerability) GetCveBaseInfo() *VirtualMachineCVEInfo {
	if x != nil {
		return x.xxx_hidden_CveBaseInfo
	}
	return nil
}

func (x *VirtualMachineVulnerability) GetSeverity() VulnerabilitySeverity {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Severity
		}
	}
	return VulnerabilitySeverity_UNKNOWN_VULNERABILITY_SEVERITY
}

func (x *VirtualMachineVulnerability) GetFixedBy() string {
	if x != nil {
		if x, ok := x.xxx_hidden_SetFixedBy.(*virtualMachineVulnerability_FixedBy); ok {
			return x.FixedBy
		}
	}
	return ""
}

func (x *VirtualMachineVulnerability) SetCveBaseInfo(v *VirtualMachineCVEInfo) {
	x.xxx_hidden_CveBaseInfo = v
}

func (x *VirtualMachineVulnerability) SetSeverity(v VulnerabilitySeverity) {
	x.xxx_hidden_Severity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *VirtualMachineVulnerability) SetFixedBy(v string) {
	x.xxx_hidden_SetFixedBy = &virtualMachineVulnerability_FixedBy{v}
}

func (x *VirtualMachineVulnerability) HasCveBaseInfo() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CveBaseInfo != nil
}

func (x *VirtualMachineVulnerability) HasSeverity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachineVulnerability) HasSetFixedBy() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SetFixedBy != nil
}

func (x *VirtualMachineVulnerability) HasFixedBy() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_SetFixedBy.(*virtualMachineVulnerability_FixedBy)
	return ok
}

func (x *VirtualMachineVulnerability) ClearCveBaseInfo() {
	x.xxx_hidden_CveBaseInfo = nil
}

func (x *VirtualMachineVulnerability) ClearSeverity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Severity = VulnerabilitySeverity_UNKNOWN_VULNERABILITY_SEVERITY
}

func (x *VirtualMachineVulnerability) ClearSetFixedBy() {
	x.xxx_hidden_SetFixedBy = nil
}

func (x *VirtualMachineVulnerability) ClearFixedBy() {
	if _, ok := x.xxx_hidden_SetFixedBy.(*virtualMachineVulnerability_FixedBy); ok {
		x.xxx_hidden_SetFixedBy = nil
	}
}

const VirtualMachineVulnerability_SetFixedBy_not_set_case case_VirtualMachineVulnerability_SetFixedBy = 0
const VirtualMachineVulnerability_FixedBy_case case_VirtualMachineVulnerability_SetFixedBy = 3

func (x *VirtualMachineVulnerability) WhichSetFixedBy() case_VirtualMachineVulnerability_SetFixedBy {
	if x == nil {
		return VirtualMachineVulnerability_SetFixedBy_not_set_case
	}
	switch x.xxx_hidden_SetFixedBy.(type) {
	case *virtualMachineVulnerability_FixedBy:
		return VirtualMachineVulnerability_FixedBy_case
	default:
		return VirtualMachineVulnerability_SetFixedBy_not_set_case
	}
}

type VirtualMachineVulnerability_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CveBaseInfo *VirtualMachineCVEInfo
	Severity    *VulnerabilitySeverity
	// Fields of oneof xxx_hidden_SetFixedBy:
	FixedBy *string
	// -- end of xxx_hidden_SetFixedBy
}

func (b0 VirtualMachineVulnerability_builder) Build() *VirtualMachineVulnerability {
	m0 := &VirtualMachineVulnerability{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_CveBaseInfo = b.CveBaseInfo
	if b.Severity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Severity = *b.Severity
	}
	if b.FixedBy != nil {
		x.xxx_hidden_SetFixedBy = &virtualMachineVulnerability_FixedBy{*b.FixedBy}
	}
	return m0
}

type case_VirtualMachineVulnerability_SetFixedBy protoreflect.FieldNumber

func (x case_VirtualMachineVulnerability_SetFixedBy) String() string {
	md := file_storage_virtual_machine_proto_msgTypes[3].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isVirtualMachineVulnerability_SetFixedBy interface {
	isVirtualMachineVulnerability_SetFixedBy()
}

type virtualMachineVulnerability_FixedBy struct {
	FixedBy string `protobuf:"bytes,3,opt,name=fixed_by,json=fixedBy,oneof"`
}

func (*virtualMachineVulnerability_FixedBy) isVirtualMachineVulnerability_SetFixedBy() {}

// VirtualMachineCVEInfo is a clone of the CVEInfo message from cve.proto, stripped from its search tags
type VirtualMachineCVEInfo struct {
	state                   protoimpl.MessageState              `protogen:"opaque.v1"`
	xxx_hidden_Cve          *string                             `protobuf:"bytes,1,opt,name=cve"`
	xxx_hidden_Summary      *string                             `protobuf:"bytes,2,opt,name=summary"`
	xxx_hidden_Link         *string                             `protobuf:"bytes,3,opt,name=link"`
	xxx_hidden_PublishedOn  *timestamppb.Timestamp              `protobuf:"bytes,4,opt,name=published_on,json=publishedOn"`
	xxx_hidden_CreatedAt    *timestamppb.Timestamp              `protobuf:"bytes,5,opt,name=created_at,json=createdAt"`
	xxx_hidden_LastModified *timestamppb.Timestamp              `protobuf:"bytes,6,opt,name=last_modified,json=lastModified"`
	xxx_hidden_References   *[]*VirtualMachineCVEInfo_Reference `protobuf:"bytes,7,rep,name=references"`
	xxx_hidden_CvssMetrics  *[]*CVSSScore                       `protobuf:"bytes,8,rep,name=cvss_metrics,json=cvssMetrics"`
	xxx_hidden_Epss         *VirtualMachineEPSS                 `protobuf:"bytes,9,opt,name=epss"`
	xxx_hidden_Advisory     *VirtualMachineAdvisory             `protobuf:"bytes,10,opt,name=advisory"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *VirtualMachineCVEInfo) Reset() {
	*x = VirtualMachineCVEInfo{}
	mi := &file_storage_virtual_machine_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineCVEInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineCVEInfo) ProtoMessage() {}

func (x *VirtualMachineCVEInfo) ProtoReflect() protoreflect.Message {
	mi := &file_storage_virtual_machine_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineCVEInfo) GetCve() string {
	if x != nil {
		if x.xxx_hidden_Cve != nil {
			return *x.xxx_hidden_Cve
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineCVEInfo) GetSummary() string {
	if x != nil {
		if x.xxx_hidden_Summary != nil {
			return *x.xxx_hidden_Summary
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineCVEInfo) GetLink() string {
	if x != nil {
		if x.xxx_hidden_Link != nil {
			return *x.xxx_hidden_Link
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineCVEInfo) GetPublishedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_PublishedOn
	}
	return nil
}

func (x *VirtualMachineCVEInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedAt
	}
	return nil
}

func (x *VirtualMachineCVEInfo) GetLastModified() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastModified
	}
	return nil
}

func (x *VirtualMachineCVEInfo) GetReferences() []*VirtualMachineCVEInfo_Reference {
	if x != nil {
		if x.xxx_hidden_References != nil {
			return *x.xxx_hidden_References
		}
	}
	return nil
}

func (x *VirtualMachineCVEInfo) GetCvssMetrics() []*CVSSScore {
	if x != nil {
		if x.xxx_hidden_CvssMetrics != nil {
			return *x.xxx_hidden_CvssMetrics
		}
	}
	return nil
}

func (x *VirtualMachineCVEInfo) GetEpss() *VirtualMachineEPSS {
	if x != nil {
		return x.xxx_hidden_Epss
	}
	return nil
}

func (x *VirtualMachineCVEInfo) GetAdvisory() *VirtualMachineAdvisory {
	if x != nil {
		return x.xxx_hidden_Advisory
	}
	return nil
}

func (x *VirtualMachineCVEInfo) SetCve(v string) {
	x.xxx_hidden_Cve = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *VirtualMachineCVEInfo) SetSummary(v string) {
	x.xxx_hidden_Summary = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *VirtualMachineCVEInfo) SetLink(v string) {
	x.xxx_hidden_Link = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *VirtualMachineCVEInfo) SetPublishedOn(v *timestamppb.Timestamp) {
	x.xxx_hidden_PublishedOn = v
}

func (x *VirtualMachineCVEInfo) SetCreatedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedAt = v
}

func (x *VirtualMachineCVEInfo) SetLastModified(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastModified = v
}

func (x *VirtualMachineCVEInfo) SetReferences(v []*VirtualMachineCVEInfo_Reference) {
	x.xxx_hidden_References = &v
}

func (x *VirtualMachineCVEInfo) SetCvssMetrics(v []*CVSSScore) {
	x.xxx_hidden_CvssMetrics = &v
}

func (x *VirtualMachineCVEInfo) SetEpss(v *VirtualMachineEPSS) {
	x.xxx_hidden_Epss = v
}

func (x *VirtualMachineCVEInfo) SetAdvisory(v *VirtualMachineAdvisory) {
	x.xxx_hidden_Advisory = v
}

func (x *VirtualMachineCVEInfo) HasCve() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachineCVEInfo) HasSummary() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachineCVEInfo) HasLink() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VirtualMachineCVEInfo) HasPublishedOn() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PublishedOn != nil
}

func (x *VirtualMachineCVEInfo) HasCreatedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedAt != nil
}

func (x *VirtualMachineCVEInfo) HasLastModified() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastModified != nil
}

func (x *VirtualMachineCVEInfo) HasEpss() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Epss != nil
}

func (x *VirtualMachineCVEInfo) HasAdvisory() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Advisory != nil
}

func (x *VirtualMachineCVEInfo) ClearCve() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Cve = nil
}

func (x *VirtualMachineCVEInfo) ClearSummary() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Summary = nil
}

func (x *VirtualMachineCVEInfo) ClearLink() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Link = nil
}

func (x *VirtualMachineCVEInfo) ClearPublishedOn() {
	x.xxx_hidden_PublishedOn = nil
}

func (x *VirtualMachineCVEInfo) ClearCreatedAt() {
	x.xxx_hidden_CreatedAt = nil
}

func (x *VirtualMachineCVEInfo) ClearLastModified() {
	x.xxx_hidden_LastModified = nil
}

func (x *VirtualMachineCVEInfo) ClearEpss() {
	x.xxx_hidden_Epss = nil
}

func (x *VirtualMachineCVEInfo) ClearAdvisory() {
	x.xxx_hidden_Advisory = nil
}

type VirtualMachineCVEInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Cve     *string
	Summary *string
	Link    *string
	// This indicates the timestamp when the cve was first published in the cve feeds.
	PublishedOn *timestamppb.Timestamp
	// Time when the CVE was first seen in the system.
	CreatedAt    *timestamppb.Timestamp
	LastModified *timestamppb.Timestamp
	References   []*VirtualMachineCVEInfo_Reference
	// cvss_metrics stores list of cvss scores from different sources like nvd, Redhat etc
	CvssMetrics []*CVSSScore
	Epss        *VirtualMachineEPSS
	Advisory    *VirtualMachineAdvisory
}

func (b0 VirtualMachineCVEInfo_builder) Build() *VirtualMachineCVEInfo {
	m0 := &VirtualMachineCVEInfo{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Cve != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_Cve = b.Cve
	}
	if b.Summary != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_Summary = b.Summary
	}
	if b.Link != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_Link = b.Link
	}
	x.xxx_hidden_PublishedOn = b.PublishedOn
	x.xxx_hidden_CreatedAt = b.CreatedAt
	x.xxx_hidden_LastModified = b.LastModified
	x.xxx_hidden_References = &b.References
	x.xxx_hidden_CvssMetrics = &b.CvssMetrics
	x.xxx_hidden_Epss = b.Epss
	x.xxx_hidden_Advisory = b.Advisory
	return m0
}

// VirtualMachineEPSS Score stores two epss metrics returned by scanner - epss probability and epss percentile
// This structure is a clone of the EPSS message from cve.proto, stripped from its search tags.
type VirtualMachineEPSS struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_EpssProbability float32                `protobuf:"fixed32,1,opt,name=epss_probability,json=epssProbability"`
	xxx_hidden_EpssPercentile  float32                `protobuf:"fixed32,2,opt,name=epss_percentile,json=epssPercentile"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *VirtualMachineEPSS) Reset() {
	*x = VirtualMachineEPSS{}
	mi := &file_storage_virtual_machine_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineEPSS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineEPSS) ProtoMessage() {}

func (x *VirtualMachineEPSS) ProtoReflect() protoreflect.Message {
	mi := &file_storage_virtual_machine_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineEPSS) GetEpssProbability() float32 {
	if x != nil {
		return x.xxx_hidden_EpssProbability
	}
	return 0
}

func (x *VirtualMachineEPSS) GetEpssPercentile() float32 {
	if x != nil {
		return x.xxx_hidden_EpssPercentile
	}
	return 0
}

func (x *VirtualMachineEPSS) SetEpssProbability(v float32) {
	x.xxx_hidden_EpssProbability = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *VirtualMachineEPSS) SetEpssPercentile(v float32) {
	x.xxx_hidden_EpssPercentile = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *VirtualMachineEPSS) HasEpssProbability() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachineEPSS) HasEpssPercentile() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachineEPSS) ClearEpssProbability() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_EpssProbability = 0
}

func (x *VirtualMachineEPSS) ClearEpssPercentile() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_EpssPercentile = 0
}

type VirtualMachineEPSS_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	EpssProbability *float32
	EpssPercentile  *float32
}

func (b0 VirtualMachineEPSS_builder) Build() *VirtualMachineEPSS {
	m0 := &VirtualMachineEPSS{}
	b, x := &b0, m0
	_, _ = b, x
	if b.EpssProbability != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_EpssProbability = *b.EpssProbability
	}
	if b.EpssPercentile != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_EpssPercentile = *b.EpssPercentile
	}
	return m0
}

type VirtualMachineAdvisory struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Link        *string                `protobuf:"bytes,2,opt,name=link"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VirtualMachineAdvisory) Reset() {
	*x = VirtualMachineAdvisory{}
	mi := &file_storage_virtual_machine_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineAdvisory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineAdvisory) ProtoMessage() {}

func (x *VirtualMachineAdvisory) ProtoReflect() protoreflect.Message {
	mi := &file_storage_virtual_machine_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineAdvisory) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineAdvisory) GetLink() string {
	if x != nil {
		if x.xxx_hidden_Link != nil {
			return *x.xxx_hidden_Link
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineAdvisory) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *VirtualMachineAdvisory) SetLink(v string) {
	x.xxx_hidden_Link = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *VirtualMachineAdvisory) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachineAdvisory) HasLink() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VirtualMachineAdvisory) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *VirtualMachineAdvisory) ClearLink() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Link = nil
}

type VirtualMachineAdvisory_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
	Link *string
}

func (b0 VirtualMachineAdvisory_builder) Build() *VirtualMachineAdvisory {
	m0 := &VirtualMachineAdvisory{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Link != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Link = b.Link
	}
	return m0
}

type VirtualMachineCVEInfo_Reference struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_URI         *string                `protobuf:"bytes,1,opt,name=URI"`
	xxx_hidden_Tags        []string               `protobuf:"bytes,2,rep,name=tags"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VirtualMachineCVEInfo_Reference) Reset() {
	*x = VirtualMachineCVEInfo_Reference{}
	mi := &file_storage_virtual_machine_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineCVEInfo_Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineCVEInfo_Reference) ProtoMessage() {}

func (x *VirtualMachineCVEInfo_Reference) ProtoReflect() protoreflect.Message {
	mi := &file_storage_virtual_machine_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineCVEInfo_Reference) GetURI() string {
	if x != nil {
		if x.xxx_hidden_URI != nil {
			return *x.xxx_hidden_URI
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineCVEInfo_Reference) GetTags() []string {
	if x != nil {
		return x.xxx_hidden_Tags
	}
	return nil
}

func (x *VirtualMachineCVEInfo_Reference) SetURI(v string) {
	x.xxx_hidden_URI = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *VirtualMachineCVEInfo_Reference) SetTags(v []string) {
	x.xxx_hidden_Tags = v
}

func (x *VirtualMachineCVEInfo_Reference) HasURI() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VirtualMachineCVEInfo_Reference) ClearURI() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_URI = nil
}

type VirtualMachineCVEInfo_Reference_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	URI  *string
	Tags []string
}

func (b0 VirtualMachineCVEInfo_Reference_builder) Build() *VirtualMachineCVEInfo_Reference {
	m0 := &VirtualMachineCVEInfo_Reference{}
	b, x := &b0, m0
	_, _ = b, x
	if b.URI != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_URI = b.URI
	}
	x.xxx_hidden_Tags = b.Tags
	return m0
}

var File_storage_virtual_machine_proto protoreflect.FileDescriptor

const file_storage_virtual_machine_proto_rawDesc = "" +
	"\n" +
	"\x1dstorage/virtual_machine.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x11storage/cve.proto\x1a\x13storage/image.proto\x1a!google/protobuf/go_features.proto\"\xa3\x05\n" +
	"\x0eVirtualMachine\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x04 \x01(\tR\tclusterId\x12!\n" +
	"\fcluster_name\x18\x05 \x01(\tR\vclusterName\x128\n" +
	"\x05facts\x18\x06 \x03(\v2\".storage.VirtualMachine.FactsEntryR\x05facts\x12=\n" +
	"\flast_updated\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\x122\n" +
	"\x05notes\x18\b \x03(\x0e2\x1c.storage.VirtualMachine.NoteR\x05notes\x12\x1b\n" +
	"\tvsock_cid\x18\t \x01(\x05R\bvsockCid\x123\n" +
	"\x05state\x18\n" +
	" \x01(\x0e2\x1d.storage.VirtualMachine.StateR\x05state\x12/\n" +
	"\x04scan\x18\v \x01(\v2\x1b.storage.VirtualMachineScanR\x04scan\x1a8\n" +
	"\n" +
	"FactsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"s\n" +
	"\x04Note\x12\x14\n" +
	"\x10MISSING_METADATA\x10\x00\x12\x15\n" +
	"\x11MISSING_SCAN_DATA\x10\x01\x12\x15\n" +
	"\x11MISSING_SIGNATURE\x10\x02\x12'\n" +
	"#MISSING_SIGNATURE_VERIFICATION_DATA\x10\x03\".\n" +
	"\x05State\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSTOPPED\x10\x01\x12\v\n" +
	"\aRUNNING\x10\x02\"\xb5\x02\n" +
	"\x12VirtualMachineScan\x127\n" +
	"\tscan_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bscanTime\x12)\n" +
	"\x10operating_system\x18\x02 \x01(\tR\x0foperatingSystem\x126\n" +
	"\x05notes\x18\x03 \x03(\x0e2 .storage.VirtualMachineScan.NoteR\x05notes\x12L\n" +
	"\n" +
	"components\x18\x04 \x03(\v2,.storage.EmbeddedVirtualMachineScanComponentR\n" +
	"components\"5\n" +
	"\x04Note\x12\t\n" +
	"\x05UNSET\x10\x00\x12\x0e\n" +
	"\n" +
	"OS_UNKNOWN\x10\x01\x12\x12\n" +
	"\x0eOS_UNSUPPORTED\x10\x02\"\x8d\x03\n" +
	"#EmbeddedVirtualMachineScanComponent\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1b\n" +
	"\btop_cvss\x18\x03 \x01(\x02H\x00R\atopCvss\x12\x1d\n" +
	"\n" +
	"risk_score\x18\x04 \x01(\x02R\triskScore\x12N\n" +
	"\x0fvulnerabilities\x18\x05 \x03(\v2$.storage.VirtualMachineVulnerabilityR\x0fvulnerabilities\x12+\n" +
	"\x06source\x18\x06 \x01(\x0e2\x13.storage.SourceTypeR\x06source\x12G\n" +
	"\x05notes\x18\a \x03(\x0e21.storage.EmbeddedVirtualMachineScanComponent.NoteR\x05notes\"&\n" +
	"\x04Note\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\r\n" +
	"\tUNSCANNED\x10\x01B\x0e\n" +
	"\fset_top_cvss\"\xca\x01\n" +
	"\x1bVirtualMachineVulnerability\x12B\n" +
	"\rcve_base_info\x18\x01 \x01(\v2\x1e.storage.VirtualMachineCVEInfoR\vcveBaseInfo\x12:\n" +
	"\bseverity\x18\x02 \x01(\x0e2\x1e.storage.VulnerabilitySeverityR\bseverity\x12\x1b\n" +
	"\bfixed_by\x18\x03 \x01(\tH\x00R\afixedByB\x0e\n" +
	"\fset_fixed_by\"\xb4\x04\n" +
	"\x15VirtualMachineCVEInfo\x12\x10\n" +
	"\x03cve\x18\x01 \x01(\tR\x03cve\x12\x18\n" +
	"\asummary\x18\x02 \x01(\tR\asummary\x12\x12\n" +
	"\x04link\x18\x03 \x01(\tR\x04link\x12=\n" +
	"\fpublished_on\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vpublishedOn\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12?\n" +
	"\rlast_modified\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\flastModified\x12H\n" +
	"\n" +
	"references\x18\a \x03(\v2(.storage.VirtualMachineCVEInfo.ReferenceR\n" +
	"references\x125\n" +
	"\fcvss_metrics\x18\b \x03(\v2\x12.storage.CVSSScoreR\vcvssMetrics\x12/\n" +
	"\x04epss\x18\t \x01(\v2\x1b.storage.VirtualMachineEPSSR\x04epss\x12;\n" +
	"\badvisory\x18\n" +
	" \x01(\v2\x1f.storage.VirtualMachineAdvisoryR\badvisory\x1a1\n" +
	"\tReference\x12\x10\n" +
	"\x03URI\x18\x01 \x01(\tR\x03URI\x12\x12\n" +
	"\x04tags\x18\x02 \x03(\tR\x04tags\"h\n" +
	"\x12VirtualMachineEPSS\x12)\n" +
	"\x10epss_probability\x18\x01 \x01(\x02R\x0fepssProbability\x12'\n" +
	"\x0fepss_percentile\x18\x02 \x01(\x02R\x0eepssPercentile\"@\n" +
	"\x16VirtualMachineAdvisory\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04link\x18\x02 \x01(\tR\x04linkB\b\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_storage_virtual_machine_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_storage_virtual_machine_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_storage_virtual_machine_proto_goTypes = []any{
	(VirtualMachine_Note)(0),                      // 0: storage.VirtualMachine.Note
	(VirtualMachine_State)(0),                     // 1: storage.VirtualMachine.State
	(VirtualMachineScan_Note)(0),                  // 2: storage.VirtualMachineScan.Note
	(EmbeddedVirtualMachineScanComponent_Note)(0), // 3: storage.EmbeddedVirtualMachineScanComponent.Note
	(*VirtualMachine)(nil),                        // 4: storage.VirtualMachine
	(*VirtualMachineScan)(nil),                    // 5: storage.VirtualMachineScan
	(*EmbeddedVirtualMachineScanComponent)(nil),   // 6: storage.EmbeddedVirtualMachineScanComponent
	(*VirtualMachineVulnerability)(nil),           // 7: storage.VirtualMachineVulnerability
	(*VirtualMachineCVEInfo)(nil),                 // 8: storage.VirtualMachineCVEInfo
	(*VirtualMachineEPSS)(nil),                    // 9: storage.VirtualMachineEPSS
	(*VirtualMachineAdvisory)(nil),                // 10: storage.VirtualMachineAdvisory
	nil,                                           // 11: storage.VirtualMachine.FactsEntry
	(*VirtualMachineCVEInfo_Reference)(nil),       // 12: storage.VirtualMachineCVEInfo.Reference
	(*timestamppb.Timestamp)(nil),                 // 13: google.protobuf.Timestamp
	(SourceType)(0),                               // 14: storage.SourceType
	(VulnerabilitySeverity)(0),                    // 15: storage.VulnerabilitySeverity
	(*CVSSScore)(nil),                             // 16: storage.CVSSScore
}
var file_storage_virtual_machine_proto_depIdxs = []int32{
	11, // 0: storage.VirtualMachine.facts:type_name -> storage.VirtualMachine.FactsEntry
	13, // 1: storage.VirtualMachine.last_updated:type_name -> google.protobuf.Timestamp
	0,  // 2: storage.VirtualMachine.notes:type_name -> storage.VirtualMachine.Note
	1,  // 3: storage.VirtualMachine.state:type_name -> storage.VirtualMachine.State
	5,  // 4: storage.VirtualMachine.scan:type_name -> storage.VirtualMachineScan
	13, // 5: storage.VirtualMachineScan.scan_time:type_name -> google.protobuf.Timestamp
	2,  // 6: storage.VirtualMachineScan.notes:type_name -> storage.VirtualMachineScan.Note
	6,  // 7: storage.VirtualMachineScan.components:type_name -> storage.EmbeddedVirtualMachineScanComponent
	7,  // 8: storage.EmbeddedVirtualMachineScanComponent.vulnerabilities:type_name -> storage.VirtualMachineVulnerability
	14, // 9: storage.EmbeddedVirtualMachineScanComponent.source:type_name -> storage.SourceType
	3,  // 10: storage.EmbeddedVirtualMachineScanComponent.notes:type_name -> storage.EmbeddedVirtualMachineScanComponent.Note
	8,  // 11: storage.VirtualMachineVulnerability.cve_base_info:type_name -> storage.VirtualMachineCVEInfo
	15, // 12: storage.VirtualMachineVulnerability.severity:type_name -> storage.VulnerabilitySeverity
	13, // 13: storage.VirtualMachineCVEInfo.published_on:type_name -> google.protobuf.Timestamp
	13, // 14: storage.VirtualMachineCVEInfo.created_at:type_name -> google.protobuf.Timestamp
	13, // 15: storage.VirtualMachineCVEInfo.last_modified:type_name -> google.protobuf.Timestamp
	12, // 16: storage.VirtualMachineCVEInfo.references:type_name -> storage.VirtualMachineCVEInfo.Reference
	16, // 17: storage.VirtualMachineCVEInfo.cvss_metrics:type_name -> storage.CVSSScore
	9,  // 18: storage.VirtualMachineCVEInfo.epss:type_name -> storage.VirtualMachineEPSS
	10, // 19: storage.VirtualMachineCVEInfo.advisory:type_name -> storage.VirtualMachineAdvisory
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_storage_virtual_machine_proto_init() }
func file_storage_virtual_machine_proto_init() {
	if File_storage_virtual_machine_proto != nil {
		return
	}
	file_storage_cve_proto_init()
	file_storage_image_proto_init()
	file_storage_virtual_machine_proto_msgTypes[2].OneofWrappers = []any{
		(*embeddedVirtualMachineScanComponent_TopCvss)(nil),
	}
	file_storage_virtual_machine_proto_msgTypes[3].OneofWrappers = []any{
		(*virtualMachineVulnerability_FixedBy)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_virtual_machine_proto_rawDesc), len(file_storage_virtual_machine_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_virtual_machine_proto_goTypes,
		DependencyIndexes: file_storage_virtual_machine_proto_depIdxs,
		EnumInfos:         file_storage_virtual_machine_proto_enumTypes,
		MessageInfos:      file_storage_virtual_machine_proto_msgTypes,
	}.Build()
	File_storage_virtual_machine_proto = out.File
	file_storage_virtual_machine_proto_goTypes = nil
	file_storage_virtual_machine_proto_depIdxs = nil
}
