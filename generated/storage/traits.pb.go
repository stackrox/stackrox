// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage/traits.proto

package storage

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// EXPERIMENTAL.
//
// MutabilityMode specifies whether and how an object can be modified. Default
// is ALLOW and means there are no modification restrictions; this is equivalent
// to the absence of MutabilityMode specification. ALLOW_FORCED forbids all
// modifying operations except object removal with force bit on.
//
// Be careful when changing the state of this field. For example, modifying an
// object from ALLOW to ALLOW_FORCED is allowed but will prohibit any further
// changes to it, including modifying it back to ALLOW.
type MutabilityMode int32

const (
	MutabilityMode_ALLOW        MutabilityMode = 0
	MutabilityMode_ALLOW_FORCED MutabilityMode = 1
)

var MutabilityMode_name = map[int32]string{
	0: "ALLOW",
	1: "ALLOW_FORCED",
}

var MutabilityMode_value = map[string]int32{
	"ALLOW":        0,
	"ALLOW_FORCED": 1,
}

func (x MutabilityMode) String() string {
	return proto.EnumName(MutabilityMode_name, int32(x))
}

func (MutabilityMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ec31914177d462a1, []int{0}
}

// EXPERIMENTAL.
type Traits struct {
	MutabilityMode       MutabilityMode `protobuf:"varint,1,opt,name=mutabilityMode,proto3,enum=storage.MutabilityMode" json:"mutabilityMode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Traits) Reset()         { *m = Traits{} }
func (m *Traits) String() string { return proto.CompactTextString(m) }
func (*Traits) ProtoMessage()    {}
func (*Traits) Descriptor() ([]byte, []int) {
	return fileDescriptor_ec31914177d462a1, []int{0}
}
func (m *Traits) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Traits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Traits.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Traits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Traits.Merge(m, src)
}
func (m *Traits) XXX_Size() int {
	return m.Size()
}
func (m *Traits) XXX_DiscardUnknown() {
	xxx_messageInfo_Traits.DiscardUnknown(m)
}

var xxx_messageInfo_Traits proto.InternalMessageInfo

func (m *Traits) GetMutabilityMode() MutabilityMode {
	if m != nil {
		return m.MutabilityMode
	}
	return MutabilityMode_ALLOW
}

func (m *Traits) MessageClone() proto.Message {
	return m.Clone()
}
func (m *Traits) Clone() *Traits {
	if m == nil {
		return nil
	}
	cloned := new(Traits)
	*cloned = *m

	return cloned
}

func init() {
	proto.RegisterEnum("storage.MutabilityMode", MutabilityMode_name, MutabilityMode_value)
	proto.RegisterType((*Traits)(nil), "storage.Traits")
}

func init() { proto.RegisterFile("storage/traits.proto", fileDescriptor_ec31914177d462a1) }

var fileDescriptor_ec31914177d462a1 = []byte{
	// 182 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x2e, 0xc9, 0x2f,
	0x4a, 0x4c, 0x4f, 0xd5, 0x2f, 0x29, 0x4a, 0xcc, 0x2c, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0x62, 0x87, 0x8a, 0x4a, 0x89, 0xa4, 0xe7, 0xa7, 0xe7, 0x83, 0xc5, 0xf4, 0x41, 0x2c, 0x88,
	0xb4, 0x92, 0x27, 0x17, 0x5b, 0x08, 0x58, 0xb9, 0x90, 0x3d, 0x17, 0x5f, 0x6e, 0x69, 0x49, 0x62,
	0x52, 0x66, 0x4e, 0x66, 0x49, 0xa5, 0x6f, 0x7e, 0x4a, 0xaa, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x9f,
	0x91, 0xb8, 0x1e, 0xd4, 0x04, 0x3d, 0x5f, 0x14, 0xe9, 0x20, 0x34, 0xe5, 0x5a, 0xba, 0x5c, 0x7c,
	0xa8, 0x2a, 0x84, 0x38, 0xb9, 0x58, 0x1d, 0x7d, 0x7c, 0xfc, 0xc3, 0x05, 0x18, 0x84, 0x04, 0xb8,
	0x78, 0xc0, 0xcc, 0x78, 0x37, 0xff, 0x20, 0x67, 0x57, 0x17, 0x01, 0x46, 0x27, 0x93, 0x13, 0x8f,
	0xe4, 0x18, 0x2f, 0x3c, 0x92, 0x63, 0x7c, 0xf0, 0x48, 0x8e, 0x71, 0xc6, 0x63, 0x39, 0x06, 0x2e,
	0xc9, 0xcc, 0x7c, 0xbd, 0xe2, 0x92, 0xc4, 0xe4, 0xec, 0xa2, 0xfc, 0x0a, 0x88, 0xf3, 0x60, 0x56,
	0x47, 0xc1, 0x7c, 0x91, 0xc4, 0x06, 0x16, 0x37, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x62, 0xcd,
	0x70, 0x0d, 0xed, 0x00, 0x00, 0x00,
}

func (m *Traits) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Traits) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Traits) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MutabilityMode != 0 {
		i = encodeVarintTraits(dAtA, i, uint64(m.MutabilityMode))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintTraits(dAtA []byte, offset int, v uint64) int {
	offset -= sovTraits(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Traits) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MutabilityMode != 0 {
		n += 1 + sovTraits(uint64(m.MutabilityMode))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovTraits(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTraits(x uint64) (n int) {
	return sovTraits(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Traits) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTraits
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Traits: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Traits: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MutabilityMode", wireType)
			}
			m.MutabilityMode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTraits
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MutabilityMode |= MutabilityMode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTraits(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTraits
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTraits(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTraits
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTraits
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTraits
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTraits
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTraits
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTraits
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTraits        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTraits          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTraits = fmt.Errorf("proto: unexpected end of group")
)
