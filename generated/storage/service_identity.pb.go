// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/service_identity.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Next available tag: 18
type ServiceType int32

const (
	ServiceType_UNKNOWN_SERVICE            ServiceType = 0
	ServiceType_SENSOR_SERVICE             ServiceType = 1
	ServiceType_CENTRAL_SERVICE            ServiceType = 2
	ServiceType_CENTRAL_DB_SERVICE         ServiceType = 12
	ServiceType_REMOTE_SERVICE             ServiceType = 3
	ServiceType_COLLECTOR_SERVICE          ServiceType = 4
	ServiceType_MONITORING_UI_SERVICE      ServiceType = 5
	ServiceType_MONITORING_DB_SERVICE      ServiceType = 6
	ServiceType_MONITORING_CLIENT_SERVICE  ServiceType = 7
	ServiceType_BENCHMARK_SERVICE          ServiceType = 8
	ServiceType_SCANNER_SERVICE            ServiceType = 9
	ServiceType_SCANNER_DB_SERVICE         ServiceType = 10
	ServiceType_ADMISSION_CONTROL_SERVICE  ServiceType = 11
	ServiceType_SCANNER_V4_INDEXER_SERVICE ServiceType = 13
	ServiceType_SCANNER_V4_MATCHER_SERVICE ServiceType = 14
	ServiceType_SCANNER_V4_DB_SERVICE      ServiceType = 15
	// This is used when Scanner V4 is run in combo-mode.
	ServiceType_SCANNER_V4_SERVICE ServiceType = 16
	ServiceType_REGISTRANT_SERVICE ServiceType = 17
)

// Enum value maps for ServiceType.
var (
	ServiceType_name = map[int32]string{
		0:  "UNKNOWN_SERVICE",
		1:  "SENSOR_SERVICE",
		2:  "CENTRAL_SERVICE",
		12: "CENTRAL_DB_SERVICE",
		3:  "REMOTE_SERVICE",
		4:  "COLLECTOR_SERVICE",
		5:  "MONITORING_UI_SERVICE",
		6:  "MONITORING_DB_SERVICE",
		7:  "MONITORING_CLIENT_SERVICE",
		8:  "BENCHMARK_SERVICE",
		9:  "SCANNER_SERVICE",
		10: "SCANNER_DB_SERVICE",
		11: "ADMISSION_CONTROL_SERVICE",
		13: "SCANNER_V4_INDEXER_SERVICE",
		14: "SCANNER_V4_MATCHER_SERVICE",
		15: "SCANNER_V4_DB_SERVICE",
		16: "SCANNER_V4_SERVICE",
		17: "REGISTRANT_SERVICE",
	}
	ServiceType_value = map[string]int32{
		"UNKNOWN_SERVICE":            0,
		"SENSOR_SERVICE":             1,
		"CENTRAL_SERVICE":            2,
		"CENTRAL_DB_SERVICE":         12,
		"REMOTE_SERVICE":             3,
		"COLLECTOR_SERVICE":          4,
		"MONITORING_UI_SERVICE":      5,
		"MONITORING_DB_SERVICE":      6,
		"MONITORING_CLIENT_SERVICE":  7,
		"BENCHMARK_SERVICE":          8,
		"SCANNER_SERVICE":            9,
		"SCANNER_DB_SERVICE":         10,
		"ADMISSION_CONTROL_SERVICE":  11,
		"SCANNER_V4_INDEXER_SERVICE": 13,
		"SCANNER_V4_MATCHER_SERVICE": 14,
		"SCANNER_V4_DB_SERVICE":      15,
		"SCANNER_V4_SERVICE":         16,
		"REGISTRANT_SERVICE":         17,
	}
)

func (x ServiceType) Enum() *ServiceType {
	p := new(ServiceType)
	*p = x
	return p
}

func (x ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_service_identity_proto_enumTypes[0].Descriptor()
}

func (ServiceType) Type() protoreflect.EnumType {
	return &file_storage_service_identity_proto_enumTypes[0]
}

func (x ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ServiceIdentity struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SerialStr    *string                `protobuf:"bytes,4,opt,name=serial_str,json=serialStr"`
	xxx_hidden_Srl          isServiceIdentity_Srl  `protobuf_oneof:"srl"`
	xxx_hidden_Id           *string                `protobuf:"bytes,2,opt,name=id"`
	xxx_hidden_Type         ServiceType            `protobuf:"varint,3,opt,name=type,enum=storage.ServiceType"`
	xxx_hidden_InitBundleId *string                `protobuf:"bytes,5,opt,name=init_bundle_id,json=initBundleId"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ServiceIdentity) Reset() {
	*x = ServiceIdentity{}
	mi := &file_storage_service_identity_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceIdentity) ProtoMessage() {}

func (x *ServiceIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_storage_service_identity_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ServiceIdentity) GetSerialStr() string {
	if x != nil {
		if x.xxx_hidden_SerialStr != nil {
			return *x.xxx_hidden_SerialStr
		}
		return ""
	}
	return ""
}

// Deprecated: Marked as deprecated in storage/service_identity.proto.
func (x *ServiceIdentity) GetSerial() int64 {
	if x != nil {
		if x, ok := x.xxx_hidden_Srl.(*serviceIdentity_Serial); ok {
			return x.Serial
		}
	}
	return 0
}

func (x *ServiceIdentity) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ServiceIdentity) GetType() ServiceType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_Type
		}
	}
	return ServiceType_UNKNOWN_SERVICE
}

func (x *ServiceIdentity) GetInitBundleId() string {
	if x != nil {
		if x.xxx_hidden_InitBundleId != nil {
			return *x.xxx_hidden_InitBundleId
		}
		return ""
	}
	return ""
}

func (x *ServiceIdentity) SetSerialStr(v string) {
	x.xxx_hidden_SerialStr = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

// Deprecated: Marked as deprecated in storage/service_identity.proto.
func (x *ServiceIdentity) SetSerial(v int64) {
	x.xxx_hidden_Srl = &serviceIdentity_Serial{v}
}

func (x *ServiceIdentity) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *ServiceIdentity) SetType(v ServiceType) {
	x.xxx_hidden_Type = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ServiceIdentity) SetInitBundleId(v string) {
	x.xxx_hidden_InitBundleId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *ServiceIdentity) HasSerialStr() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ServiceIdentity) HasSrl() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Srl != nil
}

// Deprecated: Marked as deprecated in storage/service_identity.proto.
func (x *ServiceIdentity) HasSerial() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Srl.(*serviceIdentity_Serial)
	return ok
}

func (x *ServiceIdentity) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ServiceIdentity) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ServiceIdentity) HasInitBundleId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ServiceIdentity) ClearSerialStr() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SerialStr = nil
}

func (x *ServiceIdentity) ClearSrl() {
	x.xxx_hidden_Srl = nil
}

// Deprecated: Marked as deprecated in storage/service_identity.proto.
func (x *ServiceIdentity) ClearSerial() {
	if _, ok := x.xxx_hidden_Srl.(*serviceIdentity_Serial); ok {
		x.xxx_hidden_Srl = nil
	}
}

func (x *ServiceIdentity) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Id = nil
}

func (x *ServiceIdentity) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Type = ServiceType_UNKNOWN_SERVICE
}

func (x *ServiceIdentity) ClearInitBundleId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_InitBundleId = nil
}

const ServiceIdentity_Srl_not_set_case case_ServiceIdentity_Srl = 0
const ServiceIdentity_Serial_case case_ServiceIdentity_Srl = 1

func (x *ServiceIdentity) WhichSrl() case_ServiceIdentity_Srl {
	if x == nil {
		return ServiceIdentity_Srl_not_set_case
	}
	switch x.xxx_hidden_Srl.(type) {
	case *serviceIdentity_Serial:
		return ServiceIdentity_Serial_case
	default:
		return ServiceIdentity_Srl_not_set_case
	}
}

type ServiceIdentity_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SerialStr *string
	// Fields of oneof xxx_hidden_Srl:
	// Deprecated: Marked as deprecated in storage/service_identity.proto.
	Serial *int64
	// -- end of xxx_hidden_Srl
	Id           *string
	Type         *ServiceType
	InitBundleId *string
}

func (b0 ServiceIdentity_builder) Build() *ServiceIdentity {
	m0 := &ServiceIdentity{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SerialStr != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_SerialStr = b.SerialStr
	}
	if b.Serial != nil {
		x.xxx_hidden_Srl = &serviceIdentity_Serial{*b.Serial}
	}
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Id = b.Id
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Type = *b.Type
	}
	if b.InitBundleId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_InitBundleId = b.InitBundleId
	}
	return m0
}

type case_ServiceIdentity_Srl protoreflect.FieldNumber

func (x case_ServiceIdentity_Srl) String() string {
	md := file_storage_service_identity_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isServiceIdentity_Srl interface {
	isServiceIdentity_Srl()
}

type serviceIdentity_Serial struct {
	// Deprecated: Marked as deprecated in storage/service_identity.proto.
	Serial int64 `protobuf:"varint,1,opt,name=serial,oneof"`
}

func (*serviceIdentity_Serial) isServiceIdentity_Srl() {}

type ServiceCertificate struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_CertPem     []byte                 `protobuf:"bytes,1,opt,name=cert_pem,json=certPem"`
	xxx_hidden_KeyPem      []byte                 `protobuf:"bytes,2,opt,name=key_pem,json=keyPem"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ServiceCertificate) Reset() {
	*x = ServiceCertificate{}
	mi := &file_storage_service_identity_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceCertificate) ProtoMessage() {}

func (x *ServiceCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_storage_service_identity_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ServiceCertificate) GetCertPem() []byte {
	if x != nil {
		return x.xxx_hidden_CertPem
	}
	return nil
}

func (x *ServiceCertificate) GetKeyPem() []byte {
	if x != nil {
		return x.xxx_hidden_KeyPem
	}
	return nil
}

func (x *ServiceCertificate) SetCertPem(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_CertPem = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ServiceCertificate) SetKeyPem(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_KeyPem = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ServiceCertificate) HasCertPem() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ServiceCertificate) HasKeyPem() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ServiceCertificate) ClearCertPem() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CertPem = nil
}

func (x *ServiceCertificate) ClearKeyPem() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_KeyPem = nil
}

type ServiceCertificate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CertPem []byte
	KeyPem  []byte
}

func (b0 ServiceCertificate_builder) Build() *ServiceCertificate {
	m0 := &ServiceCertificate{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CertPem != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_CertPem = b.CertPem
	}
	if b.KeyPem != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_KeyPem = b.KeyPem
	}
	return m0
}

type TypedServiceCertificate struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ServiceType ServiceType            `protobuf:"varint,1,opt,name=service_type,json=serviceType,enum=storage.ServiceType"`
	xxx_hidden_Cert        *ServiceCertificate    `protobuf:"bytes,2,opt,name=cert"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TypedServiceCertificate) Reset() {
	*x = TypedServiceCertificate{}
	mi := &file_storage_service_identity_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypedServiceCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypedServiceCertificate) ProtoMessage() {}

func (x *TypedServiceCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_storage_service_identity_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TypedServiceCertificate) GetServiceType() ServiceType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_ServiceType
		}
	}
	return ServiceType_UNKNOWN_SERVICE
}

func (x *TypedServiceCertificate) GetCert() *ServiceCertificate {
	if x != nil {
		return x.xxx_hidden_Cert
	}
	return nil
}

func (x *TypedServiceCertificate) SetServiceType(v ServiceType) {
	x.xxx_hidden_ServiceType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *TypedServiceCertificate) SetCert(v *ServiceCertificate) {
	x.xxx_hidden_Cert = v
}

func (x *TypedServiceCertificate) HasServiceType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TypedServiceCertificate) HasCert() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Cert != nil
}

func (x *TypedServiceCertificate) ClearServiceType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ServiceType = ServiceType_UNKNOWN_SERVICE
}

func (x *TypedServiceCertificate) ClearCert() {
	x.xxx_hidden_Cert = nil
}

type TypedServiceCertificate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ServiceType *ServiceType
	Cert        *ServiceCertificate
}

func (b0 TypedServiceCertificate_builder) Build() *TypedServiceCertificate {
	m0 := &TypedServiceCertificate{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ServiceType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ServiceType = *b.ServiceType
	}
	x.xxx_hidden_Cert = b.Cert
	return m0
}

type TypedServiceCertificateSet struct {
	state                   protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_CaPem        []byte                      `protobuf:"bytes,1,opt,name=ca_pem,json=caPem"`
	xxx_hidden_ServiceCerts *[]*TypedServiceCertificate `protobuf:"bytes,2,rep,name=service_certs,json=serviceCerts"`
	xxx_hidden_CaBundlePem  []byte                      `protobuf:"bytes,3,opt,name=ca_bundle_pem,json=caBundlePem"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *TypedServiceCertificateSet) Reset() {
	*x = TypedServiceCertificateSet{}
	mi := &file_storage_service_identity_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypedServiceCertificateSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypedServiceCertificateSet) ProtoMessage() {}

func (x *TypedServiceCertificateSet) ProtoReflect() protoreflect.Message {
	mi := &file_storage_service_identity_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TypedServiceCertificateSet) GetCaPem() []byte {
	if x != nil {
		return x.xxx_hidden_CaPem
	}
	return nil
}

func (x *TypedServiceCertificateSet) GetServiceCerts() []*TypedServiceCertificate {
	if x != nil {
		if x.xxx_hidden_ServiceCerts != nil {
			return *x.xxx_hidden_ServiceCerts
		}
	}
	return nil
}

func (x *TypedServiceCertificateSet) GetCaBundlePem() []byte {
	if x != nil {
		return x.xxx_hidden_CaBundlePem
	}
	return nil
}

func (x *TypedServiceCertificateSet) SetCaPem(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_CaPem = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *TypedServiceCertificateSet) SetServiceCerts(v []*TypedServiceCertificate) {
	x.xxx_hidden_ServiceCerts = &v
}

func (x *TypedServiceCertificateSet) SetCaBundlePem(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_CaBundlePem = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *TypedServiceCertificateSet) HasCaPem() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *TypedServiceCertificateSet) HasCaBundlePem() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *TypedServiceCertificateSet) ClearCaPem() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CaPem = nil
}

func (x *TypedServiceCertificateSet) ClearCaBundlePem() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CaBundlePem = nil
}

type TypedServiceCertificateSet_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CaPem        []byte
	ServiceCerts []*TypedServiceCertificate
	// Optional: all CA certificates that Central trusts (primary + secondary)
	CaBundlePem []byte
}

func (b0 TypedServiceCertificateSet_builder) Build() *TypedServiceCertificateSet {
	m0 := &TypedServiceCertificateSet{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CaPem != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_CaPem = b.CaPem
	}
	x.xxx_hidden_ServiceCerts = &b.ServiceCerts
	if b.CaBundlePem != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_CaBundlePem = b.CaBundlePem
	}
	return m0
}

var File_storage_service_identity_proto protoreflect.FileDescriptor

const file_storage_service_identity_proto_rawDesc = "" +
	"\n" +
	"\x1estorage/service_identity.proto\x12\astorage\x1a!google/protobuf/go_features.proto\"\xb5\x01\n" +
	"\x0fServiceIdentity\x12\x1d\n" +
	"\n" +
	"serial_str\x18\x04 \x01(\tR\tserialStr\x12\x1c\n" +
	"\x06serial\x18\x01 \x01(\x03B\x02\x18\x01H\x00R\x06serial\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12(\n" +
	"\x04type\x18\x03 \x01(\x0e2\x14.storage.ServiceTypeR\x04type\x12$\n" +
	"\x0einit_bundle_id\x18\x05 \x01(\tR\finitBundleIdB\x05\n" +
	"\x03srl\"H\n" +
	"\x12ServiceCertificate\x12\x19\n" +
	"\bcert_pem\x18\x01 \x01(\fR\acertPem\x12\x17\n" +
	"\akey_pem\x18\x02 \x01(\fR\x06keyPem\"\x83\x01\n" +
	"\x17TypedServiceCertificate\x127\n" +
	"\fservice_type\x18\x01 \x01(\x0e2\x14.storage.ServiceTypeR\vserviceType\x12/\n" +
	"\x04cert\x18\x02 \x01(\v2\x1b.storage.ServiceCertificateR\x04cert\"\x9e\x01\n" +
	"\x1aTypedServiceCertificateSet\x12\x15\n" +
	"\x06ca_pem\x18\x01 \x01(\fR\x05caPem\x12E\n" +
	"\rservice_certs\x18\x02 \x03(\v2 .storage.TypedServiceCertificateR\fserviceCerts\x12\"\n" +
	"\rca_bundle_pem\x18\x03 \x01(\fR\vcaBundlePem*\xd1\x03\n" +
	"\vServiceType\x12\x13\n" +
	"\x0fUNKNOWN_SERVICE\x10\x00\x12\x12\n" +
	"\x0eSENSOR_SERVICE\x10\x01\x12\x13\n" +
	"\x0fCENTRAL_SERVICE\x10\x02\x12\x16\n" +
	"\x12CENTRAL_DB_SERVICE\x10\f\x12\x12\n" +
	"\x0eREMOTE_SERVICE\x10\x03\x12\x15\n" +
	"\x11COLLECTOR_SERVICE\x10\x04\x12\x19\n" +
	"\x15MONITORING_UI_SERVICE\x10\x05\x12\x19\n" +
	"\x15MONITORING_DB_SERVICE\x10\x06\x12\x1d\n" +
	"\x19MONITORING_CLIENT_SERVICE\x10\a\x12\x15\n" +
	"\x11BENCHMARK_SERVICE\x10\b\x12\x13\n" +
	"\x0fSCANNER_SERVICE\x10\t\x12\x16\n" +
	"\x12SCANNER_DB_SERVICE\x10\n" +
	"\x12\x1d\n" +
	"\x19ADMISSION_CONTROL_SERVICE\x10\v\x12\x1e\n" +
	"\x1aSCANNER_V4_INDEXER_SERVICE\x10\r\x12\x1e\n" +
	"\x1aSCANNER_V4_MATCHER_SERVICE\x10\x0e\x12\x19\n" +
	"\x15SCANNER_V4_DB_SERVICE\x10\x0f\x12\x16\n" +
	"\x12SCANNER_V4_SERVICE\x10\x10\x12\x16\n" +
	"\x12REGISTRANT_SERVICE\x10\x11B6\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storage\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_storage_service_identity_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storage_service_identity_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_storage_service_identity_proto_goTypes = []any{
	(ServiceType)(0),                   // 0: storage.ServiceType
	(*ServiceIdentity)(nil),            // 1: storage.ServiceIdentity
	(*ServiceCertificate)(nil),         // 2: storage.ServiceCertificate
	(*TypedServiceCertificate)(nil),    // 3: storage.TypedServiceCertificate
	(*TypedServiceCertificateSet)(nil), // 4: storage.TypedServiceCertificateSet
}
var file_storage_service_identity_proto_depIdxs = []int32{
	0, // 0: storage.ServiceIdentity.type:type_name -> storage.ServiceType
	0, // 1: storage.TypedServiceCertificate.service_type:type_name -> storage.ServiceType
	2, // 2: storage.TypedServiceCertificate.cert:type_name -> storage.ServiceCertificate
	3, // 3: storage.TypedServiceCertificateSet.service_certs:type_name -> storage.TypedServiceCertificate
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_storage_service_identity_proto_init() }
func file_storage_service_identity_proto_init() {
	if File_storage_service_identity_proto != nil {
		return
	}
	file_storage_service_identity_proto_msgTypes[0].OneofWrappers = []any{
		(*serviceIdentity_Serial)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_service_identity_proto_rawDesc), len(file_storage_service_identity_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_service_identity_proto_goTypes,
		DependencyIndexes: file_storage_service_identity_proto_depIdxs,
		EnumInfos:         file_storage_service_identity_proto_enumTypes,
		MessageInfos:      file_storage_service_identity_proto_msgTypes,
	}.Build()
	File_storage_service_identity_proto = out.File
	file_storage_service_identity_proto_goTypes = nil
	file_storage_service_identity_proto_depIdxs = nil
}
