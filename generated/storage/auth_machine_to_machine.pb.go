// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/auth_machine_to_machine.proto

//go:build !protoopaque

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthMachineToMachineConfig_Type int32

const (
	AuthMachineToMachineConfig_GENERIC              AuthMachineToMachineConfig_Type = 0
	AuthMachineToMachineConfig_GITHUB_ACTIONS       AuthMachineToMachineConfig_Type = 1
	AuthMachineToMachineConfig_KUBE_SERVICE_ACCOUNT AuthMachineToMachineConfig_Type = 2
)

// Enum value maps for AuthMachineToMachineConfig_Type.
var (
	AuthMachineToMachineConfig_Type_name = map[int32]string{
		0: "GENERIC",
		1: "GITHUB_ACTIONS",
		2: "KUBE_SERVICE_ACCOUNT",
	}
	AuthMachineToMachineConfig_Type_value = map[string]int32{
		"GENERIC":              0,
		"GITHUB_ACTIONS":       1,
		"KUBE_SERVICE_ACCOUNT": 2,
	}
)

func (x AuthMachineToMachineConfig_Type) Enum() *AuthMachineToMachineConfig_Type {
	p := new(AuthMachineToMachineConfig_Type)
	*p = x
	return p
}

func (x AuthMachineToMachineConfig_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthMachineToMachineConfig_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_auth_machine_to_machine_proto_enumTypes[0].Descriptor()
}

func (AuthMachineToMachineConfig_Type) Type() protoreflect.EnumType {
	return &file_storage_auth_machine_to_machine_proto_enumTypes[0]
}

func (x AuthMachineToMachineConfig_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// AuthMachineToMachineConfig is the storage representation of auth machine to machine configs in Central.
//
// Refer to v1.AuthMachineToMachineConfig for a more detailed doc.
// Next tag: 7.
type AuthMachineToMachineConfig struct {
	state                   protoimpl.MessageState                `protogen:"hybrid.v1"`
	Id                      *string                               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" sql:"pk,type(uuid)"` // @gotags: sql:"pk,type(uuid)"
	Type                    *AuthMachineToMachineConfig_Type      `protobuf:"varint,2,opt,name=type,enum=storage.AuthMachineToMachineConfig_Type" json:"type,omitempty"`
	TokenExpirationDuration *string                               `protobuf:"bytes,3,opt,name=token_expiration_duration,json=tokenExpirationDuration" json:"token_expiration_duration,omitempty"`
	Mappings                []*AuthMachineToMachineConfig_Mapping `protobuf:"bytes,4,rep,name=mappings" json:"mappings,omitempty"`
	// The issuer is related to an ID token's issuer.
	// Spec: https://openid.net/specs/openid-connect-core-1_0.html#IDToken.
	Issuer        *string `protobuf:"bytes,5,opt,name=issuer" json:"issuer,omitempty" sql:"unique"` // @gotags: sql:"unique"
	Traits        *Traits `protobuf:"bytes,6,opt,name=traits" json:"traits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthMachineToMachineConfig) Reset() {
	*x = AuthMachineToMachineConfig{}
	mi := &file_storage_auth_machine_to_machine_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthMachineToMachineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthMachineToMachineConfig) ProtoMessage() {}

func (x *AuthMachineToMachineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_auth_machine_to_machine_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthMachineToMachineConfig) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *AuthMachineToMachineConfig) GetType() AuthMachineToMachineConfig_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return AuthMachineToMachineConfig_GENERIC
}

func (x *AuthMachineToMachineConfig) GetTokenExpirationDuration() string {
	if x != nil && x.TokenExpirationDuration != nil {
		return *x.TokenExpirationDuration
	}
	return ""
}

func (x *AuthMachineToMachineConfig) GetMappings() []*AuthMachineToMachineConfig_Mapping {
	if x != nil {
		return x.Mappings
	}
	return nil
}

func (x *AuthMachineToMachineConfig) GetIssuer() string {
	if x != nil && x.Issuer != nil {
		return *x.Issuer
	}
	return ""
}

func (x *AuthMachineToMachineConfig) GetTraits() *Traits {
	if x != nil {
		return x.Traits
	}
	return nil
}

func (x *AuthMachineToMachineConfig) SetId(v string) {
	x.Id = &v
}

func (x *AuthMachineToMachineConfig) SetType(v AuthMachineToMachineConfig_Type) {
	x.Type = &v
}

func (x *AuthMachineToMachineConfig) SetTokenExpirationDuration(v string) {
	x.TokenExpirationDuration = &v
}

func (x *AuthMachineToMachineConfig) SetMappings(v []*AuthMachineToMachineConfig_Mapping) {
	x.Mappings = v
}

func (x *AuthMachineToMachineConfig) SetIssuer(v string) {
	x.Issuer = &v
}

func (x *AuthMachineToMachineConfig) SetTraits(v *Traits) {
	x.Traits = v
}

func (x *AuthMachineToMachineConfig) HasId() bool {
	if x == nil {
		return false
	}
	return x.Id != nil
}

func (x *AuthMachineToMachineConfig) HasType() bool {
	if x == nil {
		return false
	}
	return x.Type != nil
}

func (x *AuthMachineToMachineConfig) HasTokenExpirationDuration() bool {
	if x == nil {
		return false
	}
	return x.TokenExpirationDuration != nil
}

func (x *AuthMachineToMachineConfig) HasIssuer() bool {
	if x == nil {
		return false
	}
	return x.Issuer != nil
}

func (x *AuthMachineToMachineConfig) HasTraits() bool {
	if x == nil {
		return false
	}
	return x.Traits != nil
}

func (x *AuthMachineToMachineConfig) ClearId() {
	x.Id = nil
}

func (x *AuthMachineToMachineConfig) ClearType() {
	x.Type = nil
}

func (x *AuthMachineToMachineConfig) ClearTokenExpirationDuration() {
	x.TokenExpirationDuration = nil
}

func (x *AuthMachineToMachineConfig) ClearIssuer() {
	x.Issuer = nil
}

func (x *AuthMachineToMachineConfig) ClearTraits() {
	x.Traits = nil
}

type AuthMachineToMachineConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                      *string
	Type                    *AuthMachineToMachineConfig_Type
	TokenExpirationDuration *string
	Mappings                []*AuthMachineToMachineConfig_Mapping
	// The issuer is related to an ID token's issuer.
	// Spec: https://openid.net/specs/openid-connect-core-1_0.html#IDToken.
	Issuer *string
	Traits *Traits
}

func (b0 AuthMachineToMachineConfig_builder) Build() *AuthMachineToMachineConfig {
	m0 := &AuthMachineToMachineConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	x.Type = b.Type
	x.TokenExpirationDuration = b.TokenExpirationDuration
	x.Mappings = b.Mappings
	x.Issuer = b.Issuer
	x.Traits = b.Traits
	return m0
}

type AuthMachineToMachineConfig_Mapping struct {
	state           protoimpl.MessageState `protogen:"hybrid.v1"`
	Key             *string                `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	ValueExpression *string                `protobuf:"bytes,2,opt,name=value_expression,json=valueExpression" json:"value_expression,omitempty"`
	Role            *string                `protobuf:"bytes,3,opt,name=role" json:"role,omitempty" sql:"fk(Role:name),restrict-delete"` // @gotags: sql:"fk(Role:name),restrict-delete"
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AuthMachineToMachineConfig_Mapping) Reset() {
	*x = AuthMachineToMachineConfig_Mapping{}
	mi := &file_storage_auth_machine_to_machine_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthMachineToMachineConfig_Mapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthMachineToMachineConfig_Mapping) ProtoMessage() {}

func (x *AuthMachineToMachineConfig_Mapping) ProtoReflect() protoreflect.Message {
	mi := &file_storage_auth_machine_to_machine_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthMachineToMachineConfig_Mapping) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *AuthMachineToMachineConfig_Mapping) GetValueExpression() string {
	if x != nil && x.ValueExpression != nil {
		return *x.ValueExpression
	}
	return ""
}

func (x *AuthMachineToMachineConfig_Mapping) GetRole() string {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ""
}

func (x *AuthMachineToMachineConfig_Mapping) SetKey(v string) {
	x.Key = &v
}

func (x *AuthMachineToMachineConfig_Mapping) SetValueExpression(v string) {
	x.ValueExpression = &v
}

func (x *AuthMachineToMachineConfig_Mapping) SetRole(v string) {
	x.Role = &v
}

func (x *AuthMachineToMachineConfig_Mapping) HasKey() bool {
	if x == nil {
		return false
	}
	return x.Key != nil
}

func (x *AuthMachineToMachineConfig_Mapping) HasValueExpression() bool {
	if x == nil {
		return false
	}
	return x.ValueExpression != nil
}

func (x *AuthMachineToMachineConfig_Mapping) HasRole() bool {
	if x == nil {
		return false
	}
	return x.Role != nil
}

func (x *AuthMachineToMachineConfig_Mapping) ClearKey() {
	x.Key = nil
}

func (x *AuthMachineToMachineConfig_Mapping) ClearValueExpression() {
	x.ValueExpression = nil
}

func (x *AuthMachineToMachineConfig_Mapping) ClearRole() {
	x.Role = nil
}

type AuthMachineToMachineConfig_Mapping_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key             *string
	ValueExpression *string
	Role            *string
}

func (b0 AuthMachineToMachineConfig_Mapping_builder) Build() *AuthMachineToMachineConfig_Mapping {
	m0 := &AuthMachineToMachineConfig_Mapping{}
	b, x := &b0, m0
	_, _ = b, x
	x.Key = b.Key
	x.ValueExpression = b.ValueExpression
	x.Role = b.Role
	return m0
}

var File_storage_auth_machine_to_machine_proto protoreflect.FileDescriptor

const file_storage_auth_machine_to_machine_proto_rawDesc = "" +
	"\n" +
	"%storage/auth_machine_to_machine.proto\x12\astorage\x1a\x14storage/traits.proto\x1a!google/protobuf/go_features.proto\"\xcf\x03\n" +
	"\x1aAuthMachineToMachineConfig\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12<\n" +
	"\x04type\x18\x02 \x01(\x0e2(.storage.AuthMachineToMachineConfig.TypeR\x04type\x12:\n" +
	"\x19token_expiration_duration\x18\x03 \x01(\tR\x17tokenExpirationDuration\x12G\n" +
	"\bmappings\x18\x04 \x03(\v2+.storage.AuthMachineToMachineConfig.MappingR\bmappings\x12\x16\n" +
	"\x06issuer\x18\x05 \x01(\tR\x06issuer\x12'\n" +
	"\x06traits\x18\x06 \x01(\v2\x0f.storage.TraitsR\x06traits\x1aZ\n" +
	"\aMapping\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12)\n" +
	"\x10value_expression\x18\x02 \x01(\tR\x0fvalueExpression\x12\x12\n" +
	"\x04role\x18\x03 \x01(\tR\x04role\"A\n" +
	"\x04Type\x12\v\n" +
	"\aGENERIC\x10\x00\x12\x12\n" +
	"\x0eGITHUB_ACTIONS\x10\x01\x12\x18\n" +
	"\x14KUBE_SERVICE_ACCOUNT\x10\x02B6\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storage\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_storage_auth_machine_to_machine_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storage_auth_machine_to_machine_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_storage_auth_machine_to_machine_proto_goTypes = []any{
	(AuthMachineToMachineConfig_Type)(0),       // 0: storage.AuthMachineToMachineConfig.Type
	(*AuthMachineToMachineConfig)(nil),         // 1: storage.AuthMachineToMachineConfig
	(*AuthMachineToMachineConfig_Mapping)(nil), // 2: storage.AuthMachineToMachineConfig.Mapping
	(*Traits)(nil), // 3: storage.Traits
}
var file_storage_auth_machine_to_machine_proto_depIdxs = []int32{
	0, // 0: storage.AuthMachineToMachineConfig.type:type_name -> storage.AuthMachineToMachineConfig.Type
	2, // 1: storage.AuthMachineToMachineConfig.mappings:type_name -> storage.AuthMachineToMachineConfig.Mapping
	3, // 2: storage.AuthMachineToMachineConfig.traits:type_name -> storage.Traits
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_storage_auth_machine_to_machine_proto_init() }
func file_storage_auth_machine_to_machine_proto_init() {
	if File_storage_auth_machine_to_machine_proto != nil {
		return
	}
	file_storage_traits_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_auth_machine_to_machine_proto_rawDesc), len(file_storage_auth_machine_to_machine_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_auth_machine_to_machine_proto_goTypes,
		DependencyIndexes: file_storage_auth_machine_to_machine_proto_depIdxs,
		EnumInfos:         file_storage_auth_machine_to_machine_proto_enumTypes,
		MessageInfos:      file_storage_auth_machine_to_machine_proto_msgTypes,
	}.Build()
	File_storage_auth_machine_to_machine_proto = out.File
	file_storage_auth_machine_to_machine_proto_goTypes = nil
	file_storage_auth_machine_to_machine_proto_depIdxs = nil
}
