// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/virtual_machine.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VirtualMachine_Note int32

const (
	VirtualMachine_MISSING_METADATA                    VirtualMachine_Note = 0
	VirtualMachine_MISSING_SCAN_DATA                   VirtualMachine_Note = 1
	VirtualMachine_MISSING_SIGNATURE                   VirtualMachine_Note = 2
	VirtualMachine_MISSING_SIGNATURE_VERIFICATION_DATA VirtualMachine_Note = 3
)

// Enum value maps for VirtualMachine_Note.
var (
	VirtualMachine_Note_name = map[int32]string{
		0: "MISSING_METADATA",
		1: "MISSING_SCAN_DATA",
		2: "MISSING_SIGNATURE",
		3: "MISSING_SIGNATURE_VERIFICATION_DATA",
	}
	VirtualMachine_Note_value = map[string]int32{
		"MISSING_METADATA":                    0,
		"MISSING_SCAN_DATA":                   1,
		"MISSING_SIGNATURE":                   2,
		"MISSING_SIGNATURE_VERIFICATION_DATA": 3,
	}
)

func (x VirtualMachine_Note) Enum() *VirtualMachine_Note {
	p := new(VirtualMachine_Note)
	*p = x
	return p
}

func (x VirtualMachine_Note) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualMachine_Note) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_virtual_machine_proto_enumTypes[0].Descriptor()
}

func (VirtualMachine_Note) Type() protoreflect.EnumType {
	return &file_storage_virtual_machine_proto_enumTypes[0]
}

func (x VirtualMachine_Note) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VirtualMachine_Note.Descriptor instead.
func (VirtualMachine_Note) EnumDescriptor() ([]byte, []int) {
	return file_storage_virtual_machine_proto_rawDescGZIP(), []int{0, 0}
}

type VirtualMachine_State int32

const (
	VirtualMachine_UNKNOWN VirtualMachine_State = 0
	VirtualMachine_STOPPED VirtualMachine_State = 1
	VirtualMachine_RUNNING VirtualMachine_State = 2
)

// Enum value maps for VirtualMachine_State.
var (
	VirtualMachine_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "STOPPED",
		2: "RUNNING",
	}
	VirtualMachine_State_value = map[string]int32{
		"UNKNOWN": 0,
		"STOPPED": 1,
		"RUNNING": 2,
	}
)

func (x VirtualMachine_State) Enum() *VirtualMachine_State {
	p := new(VirtualMachine_State)
	*p = x
	return p
}

func (x VirtualMachine_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualMachine_State) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_virtual_machine_proto_enumTypes[1].Descriptor()
}

func (VirtualMachine_State) Type() protoreflect.EnumType {
	return &file_storage_virtual_machine_proto_enumTypes[1]
}

func (x VirtualMachine_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VirtualMachine_State.Descriptor instead.
func (VirtualMachine_State) EnumDescriptor() ([]byte, []int) {
	return file_storage_virtual_machine_proto_rawDescGZIP(), []int{0, 1}
}

type VirtualMachineScan_Note int32

const (
	VirtualMachineScan_UNSET          VirtualMachineScan_Note = 0
	VirtualMachineScan_OS_UNKNOWN     VirtualMachineScan_Note = 1
	VirtualMachineScan_OS_UNSUPPORTED VirtualMachineScan_Note = 2
)

// Enum value maps for VirtualMachineScan_Note.
var (
	VirtualMachineScan_Note_name = map[int32]string{
		0: "UNSET",
		1: "OS_UNKNOWN",
		2: "OS_UNSUPPORTED",
	}
	VirtualMachineScan_Note_value = map[string]int32{
		"UNSET":          0,
		"OS_UNKNOWN":     1,
		"OS_UNSUPPORTED": 2,
	}
)

func (x VirtualMachineScan_Note) Enum() *VirtualMachineScan_Note {
	p := new(VirtualMachineScan_Note)
	*p = x
	return p
}

func (x VirtualMachineScan_Note) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualMachineScan_Note) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_virtual_machine_proto_enumTypes[2].Descriptor()
}

func (VirtualMachineScan_Note) Type() protoreflect.EnumType {
	return &file_storage_virtual_machine_proto_enumTypes[2]
}

func (x VirtualMachineScan_Note) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VirtualMachineScan_Note.Descriptor instead.
func (VirtualMachineScan_Note) EnumDescriptor() ([]byte, []int) {
	return file_storage_virtual_machine_proto_rawDescGZIP(), []int{1, 0}
}

type EmbeddedVirtualMachineScanComponent_Note int32

const (
	EmbeddedVirtualMachineScanComponent_UNSPECIFIED EmbeddedVirtualMachineScanComponent_Note = 0
	EmbeddedVirtualMachineScanComponent_UNSCANNED   EmbeddedVirtualMachineScanComponent_Note = 1
)

// Enum value maps for EmbeddedVirtualMachineScanComponent_Note.
var (
	EmbeddedVirtualMachineScanComponent_Note_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "UNSCANNED",
	}
	EmbeddedVirtualMachineScanComponent_Note_value = map[string]int32{
		"UNSPECIFIED": 0,
		"UNSCANNED":   1,
	}
)

func (x EmbeddedVirtualMachineScanComponent_Note) Enum() *EmbeddedVirtualMachineScanComponent_Note {
	p := new(EmbeddedVirtualMachineScanComponent_Note)
	*p = x
	return p
}

func (x EmbeddedVirtualMachineScanComponent_Note) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmbeddedVirtualMachineScanComponent_Note) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_virtual_machine_proto_enumTypes[3].Descriptor()
}

func (EmbeddedVirtualMachineScanComponent_Note) Type() protoreflect.EnumType {
	return &file_storage_virtual_machine_proto_enumTypes[3]
}

func (x EmbeddedVirtualMachineScanComponent_Note) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmbeddedVirtualMachineScanComponent_Note.Descriptor instead.
func (EmbeddedVirtualMachineScanComponent_Note) EnumDescriptor() ([]byte, []int) {
	return file_storage_virtual_machine_proto_rawDescGZIP(), []int{2, 0}
}

// TODO (ROX-30352): Review this whole proto for GA readiness.  Lots of copypasta.
type VirtualMachine struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" sql:"pk,type(uuid)" search:"Virtual Machine ID"`                                      // @gotags: sql:"pk,type(uuid)" search:"Virtual Machine ID"
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" search:"Namespace"`                        // @gotags: search:"Namespace"
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" search:"Virtual Machine Name"`                                  // @gotags: search:"Virtual Machine Name"
	ClusterId     string                 `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty" search:"Cluster ID,hidden" sql:"type(uuid)"`       // @gotags: search:"Cluster ID,hidden"  sql:"type(uuid)"
	ClusterName   string                 `protobuf:"bytes,5,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty" search:"Cluster"` // @gotags: search:"Cluster"
	Facts         map[string]string      `protobuf:"bytes,6,rep,name=facts,proto3" json:"facts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LastUpdated   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	Notes         []VirtualMachine_Note  `protobuf:"varint,8,rep,packed,name=notes,proto3,enum=storage.VirtualMachine_Note" json:"notes,omitempty"`
	VsockCid      int32                  `protobuf:"varint,9,opt,name=vsock_cid,json=vsockCid,proto3" json:"vsock_cid,omitempty"`
	State         VirtualMachine_State   `protobuf:"varint,10,opt,name=state,proto3,enum=storage.VirtualMachine_State" json:"state,omitempty"`
	Scan          *VirtualMachineScan    `protobuf:"bytes,11,opt,name=scan,proto3" json:"scan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachine) Reset() {
	*x = VirtualMachine{}
	mi := &file_storage_virtual_machine_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachine) ProtoMessage() {}

func (x *VirtualMachine) ProtoReflect() protoreflect.Message {
	mi := &file_storage_virtual_machine_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachine.ProtoReflect.Descriptor instead.
func (*VirtualMachine) Descriptor() ([]byte, []int) {
	return file_storage_virtual_machine_proto_rawDescGZIP(), []int{0}
}

func (x *VirtualMachine) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VirtualMachine) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *VirtualMachine) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VirtualMachine) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *VirtualMachine) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *VirtualMachine) GetFacts() map[string]string {
	if x != nil {
		return x.Facts
	}
	return nil
}

func (x *VirtualMachine) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *VirtualMachine) GetNotes() []VirtualMachine_Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

func (x *VirtualMachine) GetVsockCid() int32 {
	if x != nil {
		return x.VsockCid
	}
	return 0
}

func (x *VirtualMachine) GetState() VirtualMachine_State {
	if x != nil {
		return x.State
	}
	return VirtualMachine_UNKNOWN
}

func (x *VirtualMachine) GetScan() *VirtualMachineScan {
	if x != nil {
		return x.Scan
	}
	return nil
}

type VirtualMachineScan struct {
	state           protoimpl.MessageState                 `protogen:"open.v1"`
	ScanTime        *timestamppb.Timestamp                 `protobuf:"bytes,1,opt,name=scan_time,json=scanTime,proto3" json:"scan_time,omitempty"`
	OperatingSystem string                                 `protobuf:"bytes,2,opt,name=operating_system,json=operatingSystem,proto3" json:"operating_system,omitempty"`
	Notes           []VirtualMachineScan_Note              `protobuf:"varint,3,rep,packed,name=notes,proto3,enum=storage.VirtualMachineScan_Note" json:"notes,omitempty"`
	Components      []*EmbeddedVirtualMachineScanComponent `protobuf:"bytes,4,rep,name=components,proto3" json:"components,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *VirtualMachineScan) Reset() {
	*x = VirtualMachineScan{}
	mi := &file_storage_virtual_machine_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineScan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineScan) ProtoMessage() {}

func (x *VirtualMachineScan) ProtoReflect() protoreflect.Message {
	mi := &file_storage_virtual_machine_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachineScan.ProtoReflect.Descriptor instead.
func (*VirtualMachineScan) Descriptor() ([]byte, []int) {
	return file_storage_virtual_machine_proto_rawDescGZIP(), []int{1}
}

func (x *VirtualMachineScan) GetScanTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScanTime
	}
	return nil
}

func (x *VirtualMachineScan) GetOperatingSystem() string {
	if x != nil {
		return x.OperatingSystem
	}
	return ""
}

func (x *VirtualMachineScan) GetNotes() []VirtualMachineScan_Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

func (x *VirtualMachineScan) GetComponents() []*EmbeddedVirtualMachineScanComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

type EmbeddedVirtualMachineScanComponent struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Name    string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Types that are valid to be assigned to SetTopCvss:
	//
	//	*EmbeddedVirtualMachineScanComponent_TopCvss
	SetTopCvss      isEmbeddedVirtualMachineScanComponent_SetTopCvss `protobuf_oneof:"set_top_cvss"`
	RiskScore       float32                                          `protobuf:"fixed32,4,opt,name=risk_score,json=riskScore,proto3" json:"risk_score,omitempty"`
	Vulnerabilities []*VirtualMachineVulnerability                   `protobuf:"bytes,5,rep,name=vulnerabilities,proto3" json:"vulnerabilities,omitempty"`
	Source          SourceType                                       `protobuf:"varint,6,opt,name=source,proto3,enum=storage.SourceType" json:"source,omitempty"`
	Notes           []EmbeddedVirtualMachineScanComponent_Note       `protobuf:"varint,7,rep,packed,name=notes,proto3,enum=storage.EmbeddedVirtualMachineScanComponent_Note" json:"notes,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EmbeddedVirtualMachineScanComponent) Reset() {
	*x = EmbeddedVirtualMachineScanComponent{}
	mi := &file_storage_virtual_machine_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmbeddedVirtualMachineScanComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddedVirtualMachineScanComponent) ProtoMessage() {}

func (x *EmbeddedVirtualMachineScanComponent) ProtoReflect() protoreflect.Message {
	mi := &file_storage_virtual_machine_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddedVirtualMachineScanComponent.ProtoReflect.Descriptor instead.
func (*EmbeddedVirtualMachineScanComponent) Descriptor() ([]byte, []int) {
	return file_storage_virtual_machine_proto_rawDescGZIP(), []int{2}
}

func (x *EmbeddedVirtualMachineScanComponent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmbeddedVirtualMachineScanComponent) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *EmbeddedVirtualMachineScanComponent) GetSetTopCvss() isEmbeddedVirtualMachineScanComponent_SetTopCvss {
	if x != nil {
		return x.SetTopCvss
	}
	return nil
}

func (x *EmbeddedVirtualMachineScanComponent) GetTopCvss() float32 {
	if x != nil {
		if x, ok := x.SetTopCvss.(*EmbeddedVirtualMachineScanComponent_TopCvss); ok {
			return x.TopCvss
		}
	}
	return 0
}

func (x *EmbeddedVirtualMachineScanComponent) GetRiskScore() float32 {
	if x != nil {
		return x.RiskScore
	}
	return 0
}

func (x *EmbeddedVirtualMachineScanComponent) GetVulnerabilities() []*VirtualMachineVulnerability {
	if x != nil {
		return x.Vulnerabilities
	}
	return nil
}

func (x *EmbeddedVirtualMachineScanComponent) GetSource() SourceType {
	if x != nil {
		return x.Source
	}
	return SourceType_OS
}

func (x *EmbeddedVirtualMachineScanComponent) GetNotes() []EmbeddedVirtualMachineScanComponent_Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

type isEmbeddedVirtualMachineScanComponent_SetTopCvss interface {
	isEmbeddedVirtualMachineScanComponent_SetTopCvss()
}

type EmbeddedVirtualMachineScanComponent_TopCvss struct {
	TopCvss float32 `protobuf:"fixed32,3,opt,name=top_cvss,json=topCvss,proto3,oneof"`
}

func (*EmbeddedVirtualMachineScanComponent_TopCvss) isEmbeddedVirtualMachineScanComponent_SetTopCvss() {
}

type VirtualMachineVulnerability struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CveBaseInfo *VirtualMachineCVEInfo `protobuf:"bytes,1,opt,name=cve_base_info,json=cveBaseInfo,proto3" json:"cve_base_info,omitempty"`
	Severity    VulnerabilitySeverity  `protobuf:"varint,2,opt,name=severity,proto3,enum=storage.VulnerabilitySeverity" json:"severity,omitempty"`
	// Types that are valid to be assigned to SetFixedBy:
	//
	//	*VirtualMachineVulnerability_FixedBy
	SetFixedBy    isVirtualMachineVulnerability_SetFixedBy `protobuf_oneof:"set_fixed_by"`
	Cvss          float32                                  `protobuf:"fixed32,4,opt,name=cvss,proto3" json:"cvss,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachineVulnerability) Reset() {
	*x = VirtualMachineVulnerability{}
	mi := &file_storage_virtual_machine_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineVulnerability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineVulnerability) ProtoMessage() {}

func (x *VirtualMachineVulnerability) ProtoReflect() protoreflect.Message {
	mi := &file_storage_virtual_machine_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachineVulnerability.ProtoReflect.Descriptor instead.
func (*VirtualMachineVulnerability) Descriptor() ([]byte, []int) {
	return file_storage_virtual_machine_proto_rawDescGZIP(), []int{3}
}

func (x *VirtualMachineVulnerability) GetCveBaseInfo() *VirtualMachineCVEInfo {
	if x != nil {
		return x.CveBaseInfo
	}
	return nil
}

func (x *VirtualMachineVulnerability) GetSeverity() VulnerabilitySeverity {
	if x != nil {
		return x.Severity
	}
	return VulnerabilitySeverity_UNKNOWN_VULNERABILITY_SEVERITY
}

func (x *VirtualMachineVulnerability) GetSetFixedBy() isVirtualMachineVulnerability_SetFixedBy {
	if x != nil {
		return x.SetFixedBy
	}
	return nil
}

func (x *VirtualMachineVulnerability) GetFixedBy() string {
	if x != nil {
		if x, ok := x.SetFixedBy.(*VirtualMachineVulnerability_FixedBy); ok {
			return x.FixedBy
		}
	}
	return ""
}

func (x *VirtualMachineVulnerability) GetCvss() float32 {
	if x != nil {
		return x.Cvss
	}
	return 0
}

type isVirtualMachineVulnerability_SetFixedBy interface {
	isVirtualMachineVulnerability_SetFixedBy()
}

type VirtualMachineVulnerability_FixedBy struct {
	FixedBy string `protobuf:"bytes,3,opt,name=fixed_by,json=fixedBy,proto3,oneof"`
}

func (*VirtualMachineVulnerability_FixedBy) isVirtualMachineVulnerability_SetFixedBy() {}

// VirtualMachineCVEInfo is a clone of the CVEInfo message from cve.proto, stripped from its search tags
type VirtualMachineCVEInfo struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Cve     string                 `protobuf:"bytes,1,opt,name=cve,proto3" json:"cve,omitempty"`
	Summary string                 `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	Link    string                 `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	// This indicates the timestamp when the cve was first published in the cve feeds.
	PublishedOn *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=published_on,json=publishedOn,proto3" json:"published_on,omitempty"`
	// Time when the CVE was first seen in the system.
	CreatedAt    *timestamppb.Timestamp             `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastModified *timestamppb.Timestamp             `protobuf:"bytes,6,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	References   []*VirtualMachineCVEInfo_Reference `protobuf:"bytes,7,rep,name=references,proto3" json:"references,omitempty"`
	// cvss_metrics stores list of cvss scores from different sources like nvd, Redhat etc
	CvssMetrics   []*CVSSScore            `protobuf:"bytes,8,rep,name=cvss_metrics,json=cvssMetrics,proto3" json:"cvss_metrics,omitempty"`
	Epss          *VirtualMachineEPSS     `protobuf:"bytes,9,opt,name=epss,proto3" json:"epss,omitempty"`
	Advisory      *VirtualMachineAdvisory `protobuf:"bytes,10,opt,name=advisory,proto3" json:"advisory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachineCVEInfo) Reset() {
	*x = VirtualMachineCVEInfo{}
	mi := &file_storage_virtual_machine_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineCVEInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineCVEInfo) ProtoMessage() {}

func (x *VirtualMachineCVEInfo) ProtoReflect() protoreflect.Message {
	mi := &file_storage_virtual_machine_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachineCVEInfo.ProtoReflect.Descriptor instead.
func (*VirtualMachineCVEInfo) Descriptor() ([]byte, []int) {
	return file_storage_virtual_machine_proto_rawDescGZIP(), []int{4}
}

func (x *VirtualMachineCVEInfo) GetCve() string {
	if x != nil {
		return x.Cve
	}
	return ""
}

func (x *VirtualMachineCVEInfo) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *VirtualMachineCVEInfo) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *VirtualMachineCVEInfo) GetPublishedOn() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedOn
	}
	return nil
}

func (x *VirtualMachineCVEInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VirtualMachineCVEInfo) GetLastModified() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModified
	}
	return nil
}

func (x *VirtualMachineCVEInfo) GetReferences() []*VirtualMachineCVEInfo_Reference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *VirtualMachineCVEInfo) GetCvssMetrics() []*CVSSScore {
	if x != nil {
		return x.CvssMetrics
	}
	return nil
}

func (x *VirtualMachineCVEInfo) GetEpss() *VirtualMachineEPSS {
	if x != nil {
		return x.Epss
	}
	return nil
}

func (x *VirtualMachineCVEInfo) GetAdvisory() *VirtualMachineAdvisory {
	if x != nil {
		return x.Advisory
	}
	return nil
}

// VirtualMachineEPSS Score stores two epss metrics returned by scanner - epss probability and epss percentile
// This structure is a clone of the EPSS message from cve.proto, stripped from its search tags.
type VirtualMachineEPSS struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	EpssProbability float32                `protobuf:"fixed32,1,opt,name=epss_probability,json=epssProbability,proto3" json:"epss_probability,omitempty"`
	EpssPercentile  float32                `protobuf:"fixed32,2,opt,name=epss_percentile,json=epssPercentile,proto3" json:"epss_percentile,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *VirtualMachineEPSS) Reset() {
	*x = VirtualMachineEPSS{}
	mi := &file_storage_virtual_machine_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineEPSS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineEPSS) ProtoMessage() {}

func (x *VirtualMachineEPSS) ProtoReflect() protoreflect.Message {
	mi := &file_storage_virtual_machine_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachineEPSS.ProtoReflect.Descriptor instead.
func (*VirtualMachineEPSS) Descriptor() ([]byte, []int) {
	return file_storage_virtual_machine_proto_rawDescGZIP(), []int{5}
}

func (x *VirtualMachineEPSS) GetEpssProbability() float32 {
	if x != nil {
		return x.EpssProbability
	}
	return 0
}

func (x *VirtualMachineEPSS) GetEpssPercentile() float32 {
	if x != nil {
		return x.EpssPercentile
	}
	return 0
}

type VirtualMachineAdvisory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Link          string                 `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachineAdvisory) Reset() {
	*x = VirtualMachineAdvisory{}
	mi := &file_storage_virtual_machine_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineAdvisory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineAdvisory) ProtoMessage() {}

func (x *VirtualMachineAdvisory) ProtoReflect() protoreflect.Message {
	mi := &file_storage_virtual_machine_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachineAdvisory.ProtoReflect.Descriptor instead.
func (*VirtualMachineAdvisory) Descriptor() ([]byte, []int) {
	return file_storage_virtual_machine_proto_rawDescGZIP(), []int{6}
}

func (x *VirtualMachineAdvisory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VirtualMachineAdvisory) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type VirtualMachineCVEInfo_Reference struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	URI           string                 `protobuf:"bytes,1,opt,name=URI,proto3" json:"URI,omitempty"`
	Tags          []string               `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachineCVEInfo_Reference) Reset() {
	*x = VirtualMachineCVEInfo_Reference{}
	mi := &file_storage_virtual_machine_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineCVEInfo_Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineCVEInfo_Reference) ProtoMessage() {}

func (x *VirtualMachineCVEInfo_Reference) ProtoReflect() protoreflect.Message {
	mi := &file_storage_virtual_machine_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachineCVEInfo_Reference.ProtoReflect.Descriptor instead.
func (*VirtualMachineCVEInfo_Reference) Descriptor() ([]byte, []int) {
	return file_storage_virtual_machine_proto_rawDescGZIP(), []int{4, 0}
}

func (x *VirtualMachineCVEInfo_Reference) GetURI() string {
	if x != nil {
		return x.URI
	}
	return ""
}

func (x *VirtualMachineCVEInfo_Reference) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_storage_virtual_machine_proto protoreflect.FileDescriptor

const file_storage_virtual_machine_proto_rawDesc = "" +
	"\n" +
	"\x1dstorage/virtual_machine.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x11storage/cve.proto\x1a\x13storage/image.proto\"\xa3\x05\n" +
	"\x0eVirtualMachine\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x04 \x01(\tR\tclusterId\x12!\n" +
	"\fcluster_name\x18\x05 \x01(\tR\vclusterName\x128\n" +
	"\x05facts\x18\x06 \x03(\v2\".storage.VirtualMachine.FactsEntryR\x05facts\x12=\n" +
	"\flast_updated\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\x122\n" +
	"\x05notes\x18\b \x03(\x0e2\x1c.storage.VirtualMachine.NoteR\x05notes\x12\x1b\n" +
	"\tvsock_cid\x18\t \x01(\x05R\bvsockCid\x123\n" +
	"\x05state\x18\n" +
	" \x01(\x0e2\x1d.storage.VirtualMachine.StateR\x05state\x12/\n" +
	"\x04scan\x18\v \x01(\v2\x1b.storage.VirtualMachineScanR\x04scan\x1a8\n" +
	"\n" +
	"FactsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"s\n" +
	"\x04Note\x12\x14\n" +
	"\x10MISSING_METADATA\x10\x00\x12\x15\n" +
	"\x11MISSING_SCAN_DATA\x10\x01\x12\x15\n" +
	"\x11MISSING_SIGNATURE\x10\x02\x12'\n" +
	"#MISSING_SIGNATURE_VERIFICATION_DATA\x10\x03\".\n" +
	"\x05State\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSTOPPED\x10\x01\x12\v\n" +
	"\aRUNNING\x10\x02\"\xb5\x02\n" +
	"\x12VirtualMachineScan\x127\n" +
	"\tscan_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bscanTime\x12)\n" +
	"\x10operating_system\x18\x02 \x01(\tR\x0foperatingSystem\x126\n" +
	"\x05notes\x18\x03 \x03(\x0e2 .storage.VirtualMachineScan.NoteR\x05notes\x12L\n" +
	"\n" +
	"components\x18\x04 \x03(\v2,.storage.EmbeddedVirtualMachineScanComponentR\n" +
	"components\"5\n" +
	"\x04Note\x12\t\n" +
	"\x05UNSET\x10\x00\x12\x0e\n" +
	"\n" +
	"OS_UNKNOWN\x10\x01\x12\x12\n" +
	"\x0eOS_UNSUPPORTED\x10\x02\"\x8d\x03\n" +
	"#EmbeddedVirtualMachineScanComponent\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1b\n" +
	"\btop_cvss\x18\x03 \x01(\x02H\x00R\atopCvss\x12\x1d\n" +
	"\n" +
	"risk_score\x18\x04 \x01(\x02R\triskScore\x12N\n" +
	"\x0fvulnerabilities\x18\x05 \x03(\v2$.storage.VirtualMachineVulnerabilityR\x0fvulnerabilities\x12+\n" +
	"\x06source\x18\x06 \x01(\x0e2\x13.storage.SourceTypeR\x06source\x12G\n" +
	"\x05notes\x18\a \x03(\x0e21.storage.EmbeddedVirtualMachineScanComponent.NoteR\x05notes\"&\n" +
	"\x04Note\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\r\n" +
	"\tUNSCANNED\x10\x01B\x0e\n" +
	"\fset_top_cvss\"\xde\x01\n" +
	"\x1bVirtualMachineVulnerability\x12B\n" +
	"\rcve_base_info\x18\x01 \x01(\v2\x1e.storage.VirtualMachineCVEInfoR\vcveBaseInfo\x12:\n" +
	"\bseverity\x18\x02 \x01(\x0e2\x1e.storage.VulnerabilitySeverityR\bseverity\x12\x1b\n" +
	"\bfixed_by\x18\x03 \x01(\tH\x00R\afixedBy\x12\x12\n" +
	"\x04cvss\x18\x04 \x01(\x02R\x04cvssB\x0e\n" +
	"\fset_fixed_by\"\xb4\x04\n" +
	"\x15VirtualMachineCVEInfo\x12\x10\n" +
	"\x03cve\x18\x01 \x01(\tR\x03cve\x12\x18\n" +
	"\asummary\x18\x02 \x01(\tR\asummary\x12\x12\n" +
	"\x04link\x18\x03 \x01(\tR\x04link\x12=\n" +
	"\fpublished_on\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vpublishedOn\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12?\n" +
	"\rlast_modified\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\flastModified\x12H\n" +
	"\n" +
	"references\x18\a \x03(\v2(.storage.VirtualMachineCVEInfo.ReferenceR\n" +
	"references\x125\n" +
	"\fcvss_metrics\x18\b \x03(\v2\x12.storage.CVSSScoreR\vcvssMetrics\x12/\n" +
	"\x04epss\x18\t \x01(\v2\x1b.storage.VirtualMachineEPSSR\x04epss\x12;\n" +
	"\badvisory\x18\n" +
	" \x01(\v2\x1f.storage.VirtualMachineAdvisoryR\badvisory\x1a1\n" +
	"\tReference\x12\x10\n" +
	"\x03URI\x18\x01 \x01(\tR\x03URI\x12\x12\n" +
	"\x04tags\x18\x02 \x03(\tR\x04tags\"h\n" +
	"\x12VirtualMachineEPSS\x12)\n" +
	"\x10epss_probability\x18\x01 \x01(\x02R\x0fepssProbability\x12'\n" +
	"\x0fepss_percentile\x18\x02 \x01(\x02R\x0eepssPercentile\"@\n" +
	"\x16VirtualMachineAdvisory\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04link\x18\x02 \x01(\tR\x04linkb\x06proto3"

var (
	file_storage_virtual_machine_proto_rawDescOnce sync.Once
	file_storage_virtual_machine_proto_rawDescData []byte
)

func file_storage_virtual_machine_proto_rawDescGZIP() []byte {
	file_storage_virtual_machine_proto_rawDescOnce.Do(func() {
		file_storage_virtual_machine_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_storage_virtual_machine_proto_rawDesc), len(file_storage_virtual_machine_proto_rawDesc)))
	})
	return file_storage_virtual_machine_proto_rawDescData
}

var file_storage_virtual_machine_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_storage_virtual_machine_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_storage_virtual_machine_proto_goTypes = []any{
	(VirtualMachine_Note)(0),                      // 0: storage.VirtualMachine.Note
	(VirtualMachine_State)(0),                     // 1: storage.VirtualMachine.State
	(VirtualMachineScan_Note)(0),                  // 2: storage.VirtualMachineScan.Note
	(EmbeddedVirtualMachineScanComponent_Note)(0), // 3: storage.EmbeddedVirtualMachineScanComponent.Note
	(*VirtualMachine)(nil),                        // 4: storage.VirtualMachine
	(*VirtualMachineScan)(nil),                    // 5: storage.VirtualMachineScan
	(*EmbeddedVirtualMachineScanComponent)(nil),   // 6: storage.EmbeddedVirtualMachineScanComponent
	(*VirtualMachineVulnerability)(nil),           // 7: storage.VirtualMachineVulnerability
	(*VirtualMachineCVEInfo)(nil),                 // 8: storage.VirtualMachineCVEInfo
	(*VirtualMachineEPSS)(nil),                    // 9: storage.VirtualMachineEPSS
	(*VirtualMachineAdvisory)(nil),                // 10: storage.VirtualMachineAdvisory
	nil,                                           // 11: storage.VirtualMachine.FactsEntry
	(*VirtualMachineCVEInfo_Reference)(nil),       // 12: storage.VirtualMachineCVEInfo.Reference
	(*timestamppb.Timestamp)(nil),                 // 13: google.protobuf.Timestamp
	(SourceType)(0),                               // 14: storage.SourceType
	(VulnerabilitySeverity)(0),                    // 15: storage.VulnerabilitySeverity
	(*CVSSScore)(nil),                             // 16: storage.CVSSScore
}
var file_storage_virtual_machine_proto_depIdxs = []int32{
	11, // 0: storage.VirtualMachine.facts:type_name -> storage.VirtualMachine.FactsEntry
	13, // 1: storage.VirtualMachine.last_updated:type_name -> google.protobuf.Timestamp
	0,  // 2: storage.VirtualMachine.notes:type_name -> storage.VirtualMachine.Note
	1,  // 3: storage.VirtualMachine.state:type_name -> storage.VirtualMachine.State
	5,  // 4: storage.VirtualMachine.scan:type_name -> storage.VirtualMachineScan
	13, // 5: storage.VirtualMachineScan.scan_time:type_name -> google.protobuf.Timestamp
	2,  // 6: storage.VirtualMachineScan.notes:type_name -> storage.VirtualMachineScan.Note
	6,  // 7: storage.VirtualMachineScan.components:type_name -> storage.EmbeddedVirtualMachineScanComponent
	7,  // 8: storage.EmbeddedVirtualMachineScanComponent.vulnerabilities:type_name -> storage.VirtualMachineVulnerability
	14, // 9: storage.EmbeddedVirtualMachineScanComponent.source:type_name -> storage.SourceType
	3,  // 10: storage.EmbeddedVirtualMachineScanComponent.notes:type_name -> storage.EmbeddedVirtualMachineScanComponent.Note
	8,  // 11: storage.VirtualMachineVulnerability.cve_base_info:type_name -> storage.VirtualMachineCVEInfo
	15, // 12: storage.VirtualMachineVulnerability.severity:type_name -> storage.VulnerabilitySeverity
	13, // 13: storage.VirtualMachineCVEInfo.published_on:type_name -> google.protobuf.Timestamp
	13, // 14: storage.VirtualMachineCVEInfo.created_at:type_name -> google.protobuf.Timestamp
	13, // 15: storage.VirtualMachineCVEInfo.last_modified:type_name -> google.protobuf.Timestamp
	12, // 16: storage.VirtualMachineCVEInfo.references:type_name -> storage.VirtualMachineCVEInfo.Reference
	16, // 17: storage.VirtualMachineCVEInfo.cvss_metrics:type_name -> storage.CVSSScore
	9,  // 18: storage.VirtualMachineCVEInfo.epss:type_name -> storage.VirtualMachineEPSS
	10, // 19: storage.VirtualMachineCVEInfo.advisory:type_name -> storage.VirtualMachineAdvisory
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_storage_virtual_machine_proto_init() }
func file_storage_virtual_machine_proto_init() {
	if File_storage_virtual_machine_proto != nil {
		return
	}
	file_storage_cve_proto_init()
	file_storage_image_proto_init()
	file_storage_virtual_machine_proto_msgTypes[2].OneofWrappers = []any{
		(*EmbeddedVirtualMachineScanComponent_TopCvss)(nil),
	}
	file_storage_virtual_machine_proto_msgTypes[3].OneofWrappers = []any{
		(*VirtualMachineVulnerability_FixedBy)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_virtual_machine_proto_rawDesc), len(file_storage_virtual_machine_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_virtual_machine_proto_goTypes,
		DependencyIndexes: file_storage_virtual_machine_proto_depIdxs,
		EnumInfos:         file_storage_virtual_machine_proto_enumTypes,
		MessageInfos:      file_storage_virtual_machine_proto_msgTypes,
	}.Build()
	File_storage_virtual_machine_proto = out.File
	file_storage_virtual_machine_proto_goTypes = nil
	file_storage_virtual_machine_proto_depIdxs = nil
}
