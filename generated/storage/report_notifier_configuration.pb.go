// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage/report_notifier_configuration.proto

package storage

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NotifierConfiguration struct {
	// Types that are valid to be assigned to NotifierConfig:
	//	*NotifierConfiguration_EmailConfig
	NotifierConfig isNotifierConfiguration_NotifierConfig `protobuf_oneof:"notifier_config"`
	// oneof is only used to work around the postgres store limitation. The oneof wrapper can be removed in future
	// without any impact on the wiring.
	//
	// @mandar: "It appears that the DB upserts are encountering failures when handling unset string foreign keys.
	// My educated assumption is that this might be attributed to the distinction between empty strings and null
	// values. In Go, we do not differentiate whether an empty string signifies an expected empty value or an
	// unset value, which is a requirement within SQL."
	//
	// Types that are valid to be assigned to Ref:
	//	*NotifierConfiguration_Id
	Ref                  isNotifierConfiguration_Ref `protobuf_oneof:"ref"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *NotifierConfiguration) Reset()         { *m = NotifierConfiguration{} }
func (m *NotifierConfiguration) String() string { return proto.CompactTextString(m) }
func (*NotifierConfiguration) ProtoMessage()    {}
func (*NotifierConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8da242363145434, []int{0}
}
func (m *NotifierConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NotifierConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NotifierConfiguration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NotifierConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifierConfiguration.Merge(m, src)
}
func (m *NotifierConfiguration) XXX_Size() int {
	return m.Size()
}
func (m *NotifierConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifierConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_NotifierConfiguration proto.InternalMessageInfo

type isNotifierConfiguration_NotifierConfig interface {
	isNotifierConfiguration_NotifierConfig()
	MarshalTo([]byte) (int, error)
	Size() int
	Clone() isNotifierConfiguration_NotifierConfig
}
type isNotifierConfiguration_Ref interface {
	isNotifierConfiguration_Ref()
	MarshalTo([]byte) (int, error)
	Size() int
	Clone() isNotifierConfiguration_Ref
}

type NotifierConfiguration_EmailConfig struct {
	EmailConfig *EmailNotifierConfiguration `protobuf:"bytes,1,opt,name=email_config,json=emailConfig,proto3,oneof" json:"email_config,omitempty"`
}
type NotifierConfiguration_Id struct {
	Id string `protobuf:"bytes,2,opt,name=id,proto3,oneof" json:"id,omitempty" sql:"fk(Notifier:id),restrict-delete"` // @gotags: sql:"fk(Notifier:id),restrict-delete"
}

func (*NotifierConfiguration_EmailConfig) isNotifierConfiguration_NotifierConfig() {}
func (m *NotifierConfiguration_EmailConfig) Clone() isNotifierConfiguration_NotifierConfig {
	if m == nil {
		return nil
	}
	cloned := new(NotifierConfiguration_EmailConfig)
	*cloned = *m

	cloned.EmailConfig = m.EmailConfig.Clone()
	return cloned
}
func (*NotifierConfiguration_Id) isNotifierConfiguration_Ref() {}
func (m *NotifierConfiguration_Id) Clone() isNotifierConfiguration_Ref {
	if m == nil {
		return nil
	}
	cloned := new(NotifierConfiguration_Id)
	*cloned = *m

	return cloned
}

func (m *NotifierConfiguration) GetNotifierConfig() isNotifierConfiguration_NotifierConfig {
	if m != nil {
		return m.NotifierConfig
	}
	return nil
}
func (m *NotifierConfiguration) GetRef() isNotifierConfiguration_Ref {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *NotifierConfiguration) GetEmailConfig() *EmailNotifierConfiguration {
	if x, ok := m.GetNotifierConfig().(*NotifierConfiguration_EmailConfig); ok {
		return x.EmailConfig
	}
	return nil
}

func (m *NotifierConfiguration) GetId() string {
	if x, ok := m.GetRef().(*NotifierConfiguration_Id); ok {
		return x.Id
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*NotifierConfiguration) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*NotifierConfiguration_EmailConfig)(nil),
		(*NotifierConfiguration_Id)(nil),
	}
}

func (m *NotifierConfiguration) MessageClone() proto.Message {
	return m.Clone()
}
func (m *NotifierConfiguration) Clone() *NotifierConfiguration {
	if m == nil {
		return nil
	}
	cloned := new(NotifierConfiguration)
	*cloned = *m

	if m.NotifierConfig != nil {
		cloned.NotifierConfig = m.NotifierConfig.Clone()
	}
	if m.Ref != nil {
		cloned.Ref = m.Ref.Clone()
	}
	return cloned
}

type EmailNotifierConfiguration struct {
	NotifierId           string   `protobuf:"bytes,1,opt,name=notifier_id,json=notifierId,proto3" json:"notifier_id,omitempty"`
	MailingLists         []string `protobuf:"bytes,2,rep,name=mailing_lists,json=mailingLists,proto3" json:"mailing_lists,omitempty"`
	CustomSubject        string   `protobuf:"bytes,3,opt,name=custom_subject,json=customSubject,proto3" json:"custom_subject,omitempty"`
	CustomBody           string   `protobuf:"bytes,4,opt,name=custom_body,json=customBody,proto3" json:"custom_body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailNotifierConfiguration) Reset()         { *m = EmailNotifierConfiguration{} }
func (m *EmailNotifierConfiguration) String() string { return proto.CompactTextString(m) }
func (*EmailNotifierConfiguration) ProtoMessage()    {}
func (*EmailNotifierConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8da242363145434, []int{1}
}
func (m *EmailNotifierConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EmailNotifierConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EmailNotifierConfiguration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EmailNotifierConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailNotifierConfiguration.Merge(m, src)
}
func (m *EmailNotifierConfiguration) XXX_Size() int {
	return m.Size()
}
func (m *EmailNotifierConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailNotifierConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_EmailNotifierConfiguration proto.InternalMessageInfo

func (m *EmailNotifierConfiguration) GetNotifierId() string {
	if m != nil {
		return m.NotifierId
	}
	return ""
}

func (m *EmailNotifierConfiguration) GetMailingLists() []string {
	if m != nil {
		return m.MailingLists
	}
	return nil
}

func (m *EmailNotifierConfiguration) GetCustomSubject() string {
	if m != nil {
		return m.CustomSubject
	}
	return ""
}

func (m *EmailNotifierConfiguration) GetCustomBody() string {
	if m != nil {
		return m.CustomBody
	}
	return ""
}

func (m *EmailNotifierConfiguration) MessageClone() proto.Message {
	return m.Clone()
}
func (m *EmailNotifierConfiguration) Clone() *EmailNotifierConfiguration {
	if m == nil {
		return nil
	}
	cloned := new(EmailNotifierConfiguration)
	*cloned = *m

	if m.MailingLists != nil {
		cloned.MailingLists = make([]string, len(m.MailingLists))
		copy(cloned.MailingLists, m.MailingLists)
	}
	return cloned
}

func init() {
	proto.RegisterType((*NotifierConfiguration)(nil), "storage.NotifierConfiguration")
	proto.RegisterType((*EmailNotifierConfiguration)(nil), "storage.EmailNotifierConfiguration")
}

func init() {
	proto.RegisterFile("storage/report_notifier_configuration.proto", fileDescriptor_d8da242363145434)
}

var fileDescriptor_d8da242363145434 = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x2e, 0x2e, 0xc9, 0x2f,
	0x4a, 0x4c, 0x4f, 0xd5, 0x2f, 0x4a, 0x2d, 0xc8, 0x2f, 0x2a, 0x89, 0xcf, 0xcb, 0x2f, 0xc9, 0x4c,
	0xcb, 0x4c, 0x2d, 0x8a, 0x4f, 0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0x2f, 0x2d, 0x4a, 0x2c, 0xc9, 0xcc,
	0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x2a, 0x56, 0xea, 0x65, 0xe4, 0x12,
	0xf5, 0x83, 0xaa, 0x74, 0x46, 0x56, 0x28, 0xe4, 0xc1, 0xc5, 0x93, 0x9a, 0x9b, 0x98, 0x99, 0x03,
	0xd5, 0x2f, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x6d, 0xa4, 0xac, 0x07, 0xd5, 0xa9, 0xe7, 0x0a, 0x92,
	0xc4, 0xaa, 0xd5, 0x83, 0x21, 0x88, 0x1b, 0xac, 0x15, 0x22, 0x2a, 0x24, 0xc0, 0xc5, 0x94, 0x99,
	0x22, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0xe9, 0xc1, 0x18, 0xc4, 0x94, 0x99, 0xe2, 0x24, 0xc8, 0xc5,
	0x8f, 0xe6, 0x3c, 0x27, 0x56, 0x2e, 0xe6, 0xa2, 0xd4, 0x34, 0xa5, 0x55, 0x8c, 0x5c, 0x52, 0xb8,
	0x4d, 0x16, 0x92, 0xe7, 0xe2, 0x86, 0x6b, 0xcc, 0x4c, 0x01, 0xbb, 0x89, 0x33, 0x88, 0x0b, 0x26,
	0xe4, 0x99, 0x22, 0xa4, 0xcc, 0xc5, 0x0b, 0xd2, 0x9d, 0x99, 0x97, 0x1e, 0x9f, 0x93, 0x59, 0x5c,
	0x52, 0x2c, 0xc1, 0xa4, 0xc0, 0xac, 0xc1, 0x19, 0xc4, 0x03, 0x15, 0xf4, 0x01, 0x89, 0x09, 0xa9,
	0x72, 0xf1, 0x25, 0x97, 0x16, 0x97, 0xe4, 0xe7, 0xc6, 0x17, 0x97, 0x26, 0x65, 0xa5, 0x26, 0x97,
	0x48, 0x30, 0x83, 0x0d, 0xe2, 0x85, 0x88, 0x06, 0x43, 0x04, 0x41, 0x96, 0x41, 0x95, 0x25, 0xe5,
	0xa7, 0x54, 0x4a, 0xb0, 0x40, 0x2c, 0x83, 0x08, 0x39, 0xe5, 0xa7, 0x54, 0x3a, 0xd9, 0x9d, 0x78,
	0x24, 0xc7, 0x78, 0xe1, 0x91, 0x1c, 0xe3, 0x83, 0x47, 0x72, 0x8c, 0x33, 0x1e, 0xcb, 0x31, 0x70,
	0x49, 0x66, 0xe6, 0xeb, 0x15, 0x97, 0x24, 0x26, 0x67, 0x17, 0xe5, 0x57, 0x40, 0x82, 0x1a, 0x16,
	0x5e, 0x51, 0x82, 0x7a, 0xfa, 0x50, 0xa6, 0x35, 0x94, 0x4e, 0x62, 0x03, 0xab, 0x30, 0x06, 0x04,
	0x00, 0x00, 0xff, 0xff, 0x6f, 0xe1, 0x1b, 0x37, 0xbb, 0x01, 0x00, 0x00,
}

func (m *NotifierConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NotifierConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NotifierConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ref != nil {
		{
			size := m.Ref.Size()
			i -= size
			if _, err := m.Ref.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.NotifierConfig != nil {
		{
			size := m.NotifierConfig.Size()
			i -= size
			if _, err := m.NotifierConfig.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *NotifierConfiguration_EmailConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NotifierConfiguration_EmailConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.EmailConfig != nil {
		{
			size, err := m.EmailConfig.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintReportNotifierConfiguration(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *NotifierConfiguration_Id) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NotifierConfiguration_Id) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i -= len(m.Id)
	copy(dAtA[i:], m.Id)
	i = encodeVarintReportNotifierConfiguration(dAtA, i, uint64(len(m.Id)))
	i--
	dAtA[i] = 0x12
	return len(dAtA) - i, nil
}
func (m *EmailNotifierConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EmailNotifierConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EmailNotifierConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CustomBody) > 0 {
		i -= len(m.CustomBody)
		copy(dAtA[i:], m.CustomBody)
		i = encodeVarintReportNotifierConfiguration(dAtA, i, uint64(len(m.CustomBody)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CustomSubject) > 0 {
		i -= len(m.CustomSubject)
		copy(dAtA[i:], m.CustomSubject)
		i = encodeVarintReportNotifierConfiguration(dAtA, i, uint64(len(m.CustomSubject)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.MailingLists) > 0 {
		for iNdEx := len(m.MailingLists) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.MailingLists[iNdEx])
			copy(dAtA[i:], m.MailingLists[iNdEx])
			i = encodeVarintReportNotifierConfiguration(dAtA, i, uint64(len(m.MailingLists[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.NotifierId) > 0 {
		i -= len(m.NotifierId)
		copy(dAtA[i:], m.NotifierId)
		i = encodeVarintReportNotifierConfiguration(dAtA, i, uint64(len(m.NotifierId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintReportNotifierConfiguration(dAtA []byte, offset int, v uint64) int {
	offset -= sovReportNotifierConfiguration(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *NotifierConfiguration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NotifierConfig != nil {
		n += m.NotifierConfig.Size()
	}
	if m.Ref != nil {
		n += m.Ref.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NotifierConfiguration_EmailConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.EmailConfig != nil {
		l = m.EmailConfig.Size()
		n += 1 + l + sovReportNotifierConfiguration(uint64(l))
	}
	return n
}
func (m *NotifierConfiguration_Id) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	n += 1 + l + sovReportNotifierConfiguration(uint64(l))
	return n
}
func (m *EmailNotifierConfiguration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NotifierId)
	if l > 0 {
		n += 1 + l + sovReportNotifierConfiguration(uint64(l))
	}
	if len(m.MailingLists) > 0 {
		for _, s := range m.MailingLists {
			l = len(s)
			n += 1 + l + sovReportNotifierConfiguration(uint64(l))
		}
	}
	l = len(m.CustomSubject)
	if l > 0 {
		n += 1 + l + sovReportNotifierConfiguration(uint64(l))
	}
	l = len(m.CustomBody)
	if l > 0 {
		n += 1 + l + sovReportNotifierConfiguration(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovReportNotifierConfiguration(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozReportNotifierConfiguration(x uint64) (n int) {
	return sovReportNotifierConfiguration(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NotifierConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowReportNotifierConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NotifierConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NotifierConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmailConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReportNotifierConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthReportNotifierConfiguration
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthReportNotifierConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &EmailNotifierConfiguration{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.NotifierConfig = &NotifierConfiguration_EmailConfig{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReportNotifierConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReportNotifierConfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReportNotifierConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ref = &NotifierConfiguration_Id{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipReportNotifierConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthReportNotifierConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EmailNotifierConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowReportNotifierConfiguration
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EmailNotifierConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EmailNotifierConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifierId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReportNotifierConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReportNotifierConfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReportNotifierConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NotifierId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MailingLists", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReportNotifierConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReportNotifierConfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReportNotifierConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MailingLists = append(m.MailingLists, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomSubject", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReportNotifierConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReportNotifierConfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReportNotifierConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomSubject = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomBody", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowReportNotifierConfiguration
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthReportNotifierConfiguration
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthReportNotifierConfiguration
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomBody = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipReportNotifierConfiguration(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthReportNotifierConfiguration
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipReportNotifierConfiguration(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowReportNotifierConfiguration
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowReportNotifierConfiguration
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowReportNotifierConfiguration
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthReportNotifierConfiguration
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupReportNotifierConfiguration
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthReportNotifierConfiguration
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthReportNotifierConfiguration        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowReportNotifierConfiguration          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupReportNotifierConfiguration = fmt.Errorf("proto: unexpected end of group")
)
