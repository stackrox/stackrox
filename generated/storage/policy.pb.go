// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/policy.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PolicySource int32

const (
	PolicySource_IMPERATIVE  PolicySource = 0
	PolicySource_DECLARATIVE PolicySource = 1
)

// Enum value maps for PolicySource.
var (
	PolicySource_name = map[int32]string{
		0: "IMPERATIVE",
		1: "DECLARATIVE",
	}
	PolicySource_value = map[string]int32{
		"IMPERATIVE":  0,
		"DECLARATIVE": 1,
	}
)

func (x PolicySource) Enum() *PolicySource {
	p := new(PolicySource)
	*p = x
	return p
}

func (x PolicySource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PolicySource) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_policy_proto_enumTypes[0].Descriptor()
}

func (PolicySource) Type() protoreflect.EnumType {
	return &file_storage_policy_proto_enumTypes[0]
}

func (x PolicySource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type EventSource int32

const (
	EventSource_NOT_APPLICABLE   EventSource = 0
	EventSource_DEPLOYMENT_EVENT EventSource = 1
	EventSource_AUDIT_LOG_EVENT  EventSource = 2
)

// Enum value maps for EventSource.
var (
	EventSource_name = map[int32]string{
		0: "NOT_APPLICABLE",
		1: "DEPLOYMENT_EVENT",
		2: "AUDIT_LOG_EVENT",
	}
	EventSource_value = map[string]int32{
		"NOT_APPLICABLE":   0,
		"DEPLOYMENT_EVENT": 1,
		"AUDIT_LOG_EVENT":  2,
	}
)

func (x EventSource) Enum() *EventSource {
	p := new(EventSource)
	*p = x
	return p
}

func (x EventSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventSource) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_policy_proto_enumTypes[1].Descriptor()
}

func (EventSource) Type() protoreflect.EnumType {
	return &file_storage_policy_proto_enumTypes[1]
}

func (x EventSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type BooleanOperator int32

const (
	BooleanOperator_OR  BooleanOperator = 0
	BooleanOperator_AND BooleanOperator = 1
)

// Enum value maps for BooleanOperator.
var (
	BooleanOperator_name = map[int32]string{
		0: "OR",
		1: "AND",
	}
	BooleanOperator_value = map[string]int32{
		"OR":  0,
		"AND": 1,
	}
)

func (x BooleanOperator) Enum() *BooleanOperator {
	p := new(BooleanOperator)
	*p = x
	return p
}

func (x BooleanOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BooleanOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_policy_proto_enumTypes[2].Descriptor()
}

func (BooleanOperator) Type() protoreflect.EnumType {
	return &file_storage_policy_proto_enumTypes[2]
}

func (x BooleanOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type EnforcementAction int32

const (
	EnforcementAction_UNSET_ENFORCEMENT                         EnforcementAction = 0
	EnforcementAction_SCALE_TO_ZERO_ENFORCEMENT                 EnforcementAction = 1
	EnforcementAction_UNSATISFIABLE_NODE_CONSTRAINT_ENFORCEMENT EnforcementAction = 2
	EnforcementAction_KILL_POD_ENFORCEMENT                      EnforcementAction = 3
	EnforcementAction_FAIL_BUILD_ENFORCEMENT                    EnforcementAction = 4
	// FAIL_KUBE_REQUEST_ENFORCEMENT takes effect only if admission control webhook is enabled to listen on exec and port-forward events.
	EnforcementAction_FAIL_KUBE_REQUEST_ENFORCEMENT EnforcementAction = 5
	// FAIL_DEPLOYMENT_CREATE_ENFORCEMENT takes effect only if admission control webhook is configured to enforce on object creates.
	EnforcementAction_FAIL_DEPLOYMENT_CREATE_ENFORCEMENT EnforcementAction = 6
	// FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT takes effect only if admission control webhook is configured to enforce on object updates.
	EnforcementAction_FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT EnforcementAction = 7
)

// Enum value maps for EnforcementAction.
var (
	EnforcementAction_name = map[int32]string{
		0: "UNSET_ENFORCEMENT",
		1: "SCALE_TO_ZERO_ENFORCEMENT",
		2: "UNSATISFIABLE_NODE_CONSTRAINT_ENFORCEMENT",
		3: "KILL_POD_ENFORCEMENT",
		4: "FAIL_BUILD_ENFORCEMENT",
		5: "FAIL_KUBE_REQUEST_ENFORCEMENT",
		6: "FAIL_DEPLOYMENT_CREATE_ENFORCEMENT",
		7: "FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT",
	}
	EnforcementAction_value = map[string]int32{
		"UNSET_ENFORCEMENT":                         0,
		"SCALE_TO_ZERO_ENFORCEMENT":                 1,
		"UNSATISFIABLE_NODE_CONSTRAINT_ENFORCEMENT": 2,
		"KILL_POD_ENFORCEMENT":                      3,
		"FAIL_BUILD_ENFORCEMENT":                    4,
		"FAIL_KUBE_REQUEST_ENFORCEMENT":             5,
		"FAIL_DEPLOYMENT_CREATE_ENFORCEMENT":        6,
		"FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT":        7,
	}
)

func (x EnforcementAction) Enum() *EnforcementAction {
	p := new(EnforcementAction)
	*p = x
	return p
}

func (x EnforcementAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnforcementAction) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_policy_proto_enumTypes[3].Descriptor()
}

func (EnforcementAction) Type() protoreflect.EnumType {
	return &file_storage_policy_proto_enumTypes[3]
}

func (x EnforcementAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Severity int32

const (
	Severity_UNSET_SEVERITY    Severity = 0
	Severity_LOW_SEVERITY      Severity = 1
	Severity_MEDIUM_SEVERITY   Severity = 2
	Severity_HIGH_SEVERITY     Severity = 3
	Severity_CRITICAL_SEVERITY Severity = 4
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0: "UNSET_SEVERITY",
		1: "LOW_SEVERITY",
		2: "MEDIUM_SEVERITY",
		3: "HIGH_SEVERITY",
		4: "CRITICAL_SEVERITY",
	}
	Severity_value = map[string]int32{
		"UNSET_SEVERITY":    0,
		"LOW_SEVERITY":      1,
		"MEDIUM_SEVERITY":   2,
		"HIGH_SEVERITY":     3,
		"CRITICAL_SEVERITY": 4,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_policy_proto_enumTypes[4].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_storage_policy_proto_enumTypes[4]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type LifecycleStage int32

const (
	LifecycleStage_DEPLOY  LifecycleStage = 0
	LifecycleStage_BUILD   LifecycleStage = 1
	LifecycleStage_RUNTIME LifecycleStage = 2
)

// Enum value maps for LifecycleStage.
var (
	LifecycleStage_name = map[int32]string{
		0: "DEPLOY",
		1: "BUILD",
		2: "RUNTIME",
	}
	LifecycleStage_value = map[string]int32{
		"DEPLOY":  0,
		"BUILD":   1,
		"RUNTIME": 2,
	}
)

func (x LifecycleStage) Enum() *LifecycleStage {
	p := new(LifecycleStage)
	*p = x
	return p
}

func (x LifecycleStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LifecycleStage) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_policy_proto_enumTypes[5].Descriptor()
}

func (LifecycleStage) Type() protoreflect.EnumType {
	return &file_storage_policy_proto_enumTypes[5]
}

func (x LifecycleStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Comparator int32

const (
	Comparator_LESS_THAN              Comparator = 0
	Comparator_LESS_THAN_OR_EQUALS    Comparator = 1
	Comparator_EQUALS                 Comparator = 2
	Comparator_GREATER_THAN_OR_EQUALS Comparator = 3
	Comparator_GREATER_THAN           Comparator = 4
)

// Enum value maps for Comparator.
var (
	Comparator_name = map[int32]string{
		0: "LESS_THAN",
		1: "LESS_THAN_OR_EQUALS",
		2: "EQUALS",
		3: "GREATER_THAN_OR_EQUALS",
		4: "GREATER_THAN",
	}
	Comparator_value = map[string]int32{
		"LESS_THAN":              0,
		"LESS_THAN_OR_EQUALS":    1,
		"EQUALS":                 2,
		"GREATER_THAN_OR_EQUALS": 3,
		"GREATER_THAN":           4,
	}
)

func (x Comparator) Enum() *Comparator {
	p := new(Comparator)
	*p = x
	return p
}

func (x Comparator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Comparator) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_policy_proto_enumTypes[6].Descriptor()
}

func (Comparator) Type() protoreflect.EnumType {
	return &file_storage_policy_proto_enumTypes[6]
}

func (x Comparator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Next tag: 28
type Policy struct {
	state                         protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_Id                 *string                       `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name               *string                       `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Description        *string                       `protobuf:"bytes,3,opt,name=description"`
	xxx_hidden_Rationale          *string                       `protobuf:"bytes,4,opt,name=rationale"`
	xxx_hidden_Remediation        *string                       `protobuf:"bytes,5,opt,name=remediation"`
	xxx_hidden_Disabled           bool                          `protobuf:"varint,6,opt,name=disabled"`
	xxx_hidden_Categories         []string                      `protobuf:"bytes,7,rep,name=categories"`
	xxx_hidden_LifecycleStages    []LifecycleStage              `protobuf:"varint,9,rep,packed,name=lifecycle_stages,json=lifecycleStages,enum=storage.LifecycleStage"`
	xxx_hidden_EventSource        EventSource                   `protobuf:"varint,22,opt,name=event_source,json=eventSource,enum=storage.EventSource"`
	xxx_hidden_Exclusions         *[]*Exclusion                 `protobuf:"bytes,21,rep,name=exclusions"`
	xxx_hidden_Scope              *[]*Scope                     `protobuf:"bytes,11,rep,name=scope"`
	xxx_hidden_Severity           Severity                      `protobuf:"varint,12,opt,name=severity,enum=storage.Severity"`
	xxx_hidden_EnforcementActions []EnforcementAction           `protobuf:"varint,13,rep,packed,name=enforcement_actions,json=enforcementActions,enum=storage.EnforcementAction"`
	xxx_hidden_Notifiers          []string                      `protobuf:"bytes,14,rep,name=notifiers"`
	xxx_hidden_LastUpdated        *timestamppb.Timestamp        `protobuf:"bytes,15,opt,name=last_updated,json=lastUpdated"`
	xxx_hidden_SORTName           *string                       `protobuf:"bytes,16,opt,name=SORT_name,json=SORTName"`
	xxx_hidden_SORTLifecycleStage *string                       `protobuf:"bytes,17,opt,name=SORT_lifecycleStage,json=SORTLifecycleStage"`
	xxx_hidden_SORTEnforcement    bool                          `protobuf:"varint,18,opt,name=SORT_enforcement,json=SORTEnforcement"`
	xxx_hidden_PolicyVersion      *string                       `protobuf:"bytes,19,opt,name=policy_version,json=policyVersion"`
	xxx_hidden_PolicySections     *[]*PolicySection             `protobuf:"bytes,20,rep,name=policy_sections,json=policySections"`
	xxx_hidden_MitreAttackVectors *[]*Policy_MitreAttackVectors `protobuf:"bytes,23,rep,name=mitre_attack_vectors,json=mitreAttackVectors"`
	xxx_hidden_CriteriaLocked     bool                          `protobuf:"varint,24,opt,name=criteria_locked,json=criteriaLocked"`
	xxx_hidden_MitreVectorsLocked bool                          `protobuf:"varint,25,opt,name=mitre_vectors_locked,json=mitreVectorsLocked"`
	xxx_hidden_IsDefault          bool                          `protobuf:"varint,26,opt,name=is_default,json=isDefault"`
	xxx_hidden_Source             PolicySource                  `protobuf:"varint,27,opt,name=source,enum=storage.PolicySource"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *Policy) Reset() {
	*x = Policy{}
	mi := &file_storage_policy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_storage_policy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Policy) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *Policy) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Policy) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *Policy) GetRationale() string {
	if x != nil {
		if x.xxx_hidden_Rationale != nil {
			return *x.xxx_hidden_Rationale
		}
		return ""
	}
	return ""
}

func (x *Policy) GetRemediation() string {
	if x != nil {
		if x.xxx_hidden_Remediation != nil {
			return *x.xxx_hidden_Remediation
		}
		return ""
	}
	return ""
}

func (x *Policy) GetDisabled() bool {
	if x != nil {
		return x.xxx_hidden_Disabled
	}
	return false
}

func (x *Policy) GetCategories() []string {
	if x != nil {
		return x.xxx_hidden_Categories
	}
	return nil
}

func (x *Policy) GetLifecycleStages() []LifecycleStage {
	if x != nil {
		return x.xxx_hidden_LifecycleStages
	}
	return nil
}

func (x *Policy) GetEventSource() EventSource {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 8) {
			return x.xxx_hidden_EventSource
		}
	}
	return EventSource_NOT_APPLICABLE
}

func (x *Policy) GetExclusions() []*Exclusion {
	if x != nil {
		if x.xxx_hidden_Exclusions != nil {
			return *x.xxx_hidden_Exclusions
		}
	}
	return nil
}

func (x *Policy) GetScope() []*Scope {
	if x != nil {
		if x.xxx_hidden_Scope != nil {
			return *x.xxx_hidden_Scope
		}
	}
	return nil
}

func (x *Policy) GetSeverity() Severity {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 11) {
			return x.xxx_hidden_Severity
		}
	}
	return Severity_UNSET_SEVERITY
}

func (x *Policy) GetEnforcementActions() []EnforcementAction {
	if x != nil {
		return x.xxx_hidden_EnforcementActions
	}
	return nil
}

func (x *Policy) GetNotifiers() []string {
	if x != nil {
		return x.xxx_hidden_Notifiers
	}
	return nil
}

func (x *Policy) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastUpdated
	}
	return nil
}

func (x *Policy) GetSORTName() string {
	if x != nil {
		if x.xxx_hidden_SORTName != nil {
			return *x.xxx_hidden_SORTName
		}
		return ""
	}
	return ""
}

func (x *Policy) GetSORTLifecycleStage() string {
	if x != nil {
		if x.xxx_hidden_SORTLifecycleStage != nil {
			return *x.xxx_hidden_SORTLifecycleStage
		}
		return ""
	}
	return ""
}

func (x *Policy) GetSORTEnforcement() bool {
	if x != nil {
		return x.xxx_hidden_SORTEnforcement
	}
	return false
}

func (x *Policy) GetPolicyVersion() string {
	if x != nil {
		if x.xxx_hidden_PolicyVersion != nil {
			return *x.xxx_hidden_PolicyVersion
		}
		return ""
	}
	return ""
}

func (x *Policy) GetPolicySections() []*PolicySection {
	if x != nil {
		if x.xxx_hidden_PolicySections != nil {
			return *x.xxx_hidden_PolicySections
		}
	}
	return nil
}

func (x *Policy) GetMitreAttackVectors() []*Policy_MitreAttackVectors {
	if x != nil {
		if x.xxx_hidden_MitreAttackVectors != nil {
			return *x.xxx_hidden_MitreAttackVectors
		}
	}
	return nil
}

func (x *Policy) GetCriteriaLocked() bool {
	if x != nil {
		return x.xxx_hidden_CriteriaLocked
	}
	return false
}

func (x *Policy) GetMitreVectorsLocked() bool {
	if x != nil {
		return x.xxx_hidden_MitreVectorsLocked
	}
	return false
}

func (x *Policy) GetIsDefault() bool {
	if x != nil {
		return x.xxx_hidden_IsDefault
	}
	return false
}

func (x *Policy) GetSource() PolicySource {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 24) {
			return x.xxx_hidden_Source
		}
	}
	return PolicySource_IMPERATIVE
}

func (x *Policy) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 25)
}

func (x *Policy) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 25)
}

func (x *Policy) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 25)
}

func (x *Policy) SetRationale(v string) {
	x.xxx_hidden_Rationale = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 25)
}

func (x *Policy) SetRemediation(v string) {
	x.xxx_hidden_Remediation = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 25)
}

func (x *Policy) SetDisabled(v bool) {
	x.xxx_hidden_Disabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 25)
}

func (x *Policy) SetCategories(v []string) {
	x.xxx_hidden_Categories = v
}

func (x *Policy) SetLifecycleStages(v []LifecycleStage) {
	x.xxx_hidden_LifecycleStages = v
}

func (x *Policy) SetEventSource(v EventSource) {
	x.xxx_hidden_EventSource = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 25)
}

func (x *Policy) SetExclusions(v []*Exclusion) {
	x.xxx_hidden_Exclusions = &v
}

func (x *Policy) SetScope(v []*Scope) {
	x.xxx_hidden_Scope = &v
}

func (x *Policy) SetSeverity(v Severity) {
	x.xxx_hidden_Severity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 25)
}

func (x *Policy) SetEnforcementActions(v []EnforcementAction) {
	x.xxx_hidden_EnforcementActions = v
}

func (x *Policy) SetNotifiers(v []string) {
	x.xxx_hidden_Notifiers = v
}

func (x *Policy) SetLastUpdated(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastUpdated = v
}

func (x *Policy) SetSORTName(v string) {
	x.xxx_hidden_SORTName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 25)
}

func (x *Policy) SetSORTLifecycleStage(v string) {
	x.xxx_hidden_SORTLifecycleStage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 16, 25)
}

func (x *Policy) SetSORTEnforcement(v bool) {
	x.xxx_hidden_SORTEnforcement = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 17, 25)
}

func (x *Policy) SetPolicyVersion(v string) {
	x.xxx_hidden_PolicyVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 18, 25)
}

func (x *Policy) SetPolicySections(v []*PolicySection) {
	x.xxx_hidden_PolicySections = &v
}

func (x *Policy) SetMitreAttackVectors(v []*Policy_MitreAttackVectors) {
	x.xxx_hidden_MitreAttackVectors = &v
}

func (x *Policy) SetCriteriaLocked(v bool) {
	x.xxx_hidden_CriteriaLocked = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 21, 25)
}

func (x *Policy) SetMitreVectorsLocked(v bool) {
	x.xxx_hidden_MitreVectorsLocked = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 22, 25)
}

func (x *Policy) SetIsDefault(v bool) {
	x.xxx_hidden_IsDefault = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 23, 25)
}

func (x *Policy) SetSource(v PolicySource) {
	x.xxx_hidden_Source = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 24, 25)
}

func (x *Policy) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Policy) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Policy) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Policy) HasRationale() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *Policy) HasRemediation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *Policy) HasDisabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *Policy) HasEventSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *Policy) HasSeverity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *Policy) HasLastUpdated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastUpdated != nil
}

func (x *Policy) HasSORTName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *Policy) HasSORTLifecycleStage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 16)
}

func (x *Policy) HasSORTEnforcement() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 17)
}

func (x *Policy) HasPolicyVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 18)
}

func (x *Policy) HasCriteriaLocked() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 21)
}

func (x *Policy) HasMitreVectorsLocked() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 22)
}

func (x *Policy) HasIsDefault() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 23)
}

func (x *Policy) HasSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 24)
}

func (x *Policy) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *Policy) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *Policy) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Description = nil
}

func (x *Policy) ClearRationale() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Rationale = nil
}

func (x *Policy) ClearRemediation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Remediation = nil
}

func (x *Policy) ClearDisabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Disabled = false
}

func (x *Policy) ClearEventSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_EventSource = EventSource_NOT_APPLICABLE
}

func (x *Policy) ClearSeverity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_Severity = Severity_UNSET_SEVERITY
}

func (x *Policy) ClearLastUpdated() {
	x.xxx_hidden_LastUpdated = nil
}

func (x *Policy) ClearSORTName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_SORTName = nil
}

func (x *Policy) ClearSORTLifecycleStage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 16)
	x.xxx_hidden_SORTLifecycleStage = nil
}

func (x *Policy) ClearSORTEnforcement() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 17)
	x.xxx_hidden_SORTEnforcement = false
}

func (x *Policy) ClearPolicyVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 18)
	x.xxx_hidden_PolicyVersion = nil
}

func (x *Policy) ClearCriteriaLocked() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 21)
	x.xxx_hidden_CriteriaLocked = false
}

func (x *Policy) ClearMitreVectorsLocked() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 22)
	x.xxx_hidden_MitreVectorsLocked = false
}

func (x *Policy) ClearIsDefault() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 23)
	x.xxx_hidden_IsDefault = false
}

func (x *Policy) ClearSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 24)
	x.xxx_hidden_Source = PolicySource_IMPERATIVE
}

type Policy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *string
	// Name of the policy.  Must be unique.
	Name *string
	// Free-form text description of this policy.
	Description *string
	Rationale   *string
	// Describes how to remediate a violation of this policy.
	Remediation *string
	// Toggles whether or not this policy will be executing and actively firing alerts.
	Disabled *bool
	// List of categories that this policy falls under.  Category names must already exist in Central.
	Categories []string
	// Describes which policy lifecylce stages this policy applies to.  Choices are DEPLOY, BUILD, and RUNTIME.
	LifecycleStages []LifecycleStage
	// Describes which events should trigger execution of this policy
	EventSource *EventSource
	// Define deployments or images that should be excluded from this policy.
	Exclusions []*Exclusion
	// Defines clusters, namespaces, and deployments that should be included in this policy.  No scopes defined includes everything.
	Scope []*Scope
	// Defines how severe a violation from this policy is.  Possible values are UNSET_SEVERITY, LOW_SEVERITY, MEDIUM_SEVERITY, HIGH_SEVERITY, and CRITICAL_SEVERITY.
	Severity *Severity
	// FAIL_DEPLOYMENT_CREATE_ENFORCEMENT takes effect only if admission control webhook is configured to enforce on object creates/updates.
	// FAIL_KUBE_REQUEST_ENFORCEMENT takes effect only if admission control webhook is enabled to listen on exec and port-forward events.
	// FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT takes effect only if admission control webhook is configured to enforce on object updates.
	// Lists the enforcement actions to take when a violation from this policy is identified.  Possible value are UNSET_ENFORCEMENT, SCALE_TO_ZERO_ENFORCEMENT, UNSATISFIABLE_NODE_CONSTRAINT_ENFORCEMENT, KILL_POD_ENFORCEMENT, FAIL_BUILD_ENFORCEMENT, FAIL_KUBE_REQUEST_ENFORCEMENT, FAIL_DEPLOYMENT_CREATE_ENFORCEMENT, and. FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT.
	EnforcementActions []EnforcementAction
	// List of IDs of the notifiers that should be triggered when a violation from this policy is identified.  IDs should be in the form of a UUID and are found through the Central API.
	Notifiers   []string
	LastUpdated *timestamppb.Timestamp
	// For internal use only.
	SORTName *string
	// For internal use only.
	SORTLifecycleStage *string
	// For internal use only.
	SORTEnforcement *bool
	PolicyVersion   *string
	// PolicySections define the violation criteria for this policy.
	PolicySections     []*PolicySection
	MitreAttackVectors []*Policy_MitreAttackVectors
	// Read-only field. If true, the policy's criteria fields are rendered read-only.
	CriteriaLocked *bool
	// Read-only field. If true, the policy's MITRE ATT&CK fields are rendered read-only.
	MitreVectorsLocked *bool
	// Read-only field. Indicates the policy is a default policy if true and a custom policy if false.
	IsDefault *bool
	Source    *PolicySource
}

func (b0 Policy_builder) Build() *Policy {
	m0 := &Policy{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 25)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 25)
		x.xxx_hidden_Name = b.Name
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 25)
		x.xxx_hidden_Description = b.Description
	}
	if b.Rationale != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 25)
		x.xxx_hidden_Rationale = b.Rationale
	}
	if b.Remediation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 25)
		x.xxx_hidden_Remediation = b.Remediation
	}
	if b.Disabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 25)
		x.xxx_hidden_Disabled = *b.Disabled
	}
	x.xxx_hidden_Categories = b.Categories
	x.xxx_hidden_LifecycleStages = b.LifecycleStages
	if b.EventSource != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 25)
		x.xxx_hidden_EventSource = *b.EventSource
	}
	x.xxx_hidden_Exclusions = &b.Exclusions
	x.xxx_hidden_Scope = &b.Scope
	if b.Severity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 25)
		x.xxx_hidden_Severity = *b.Severity
	}
	x.xxx_hidden_EnforcementActions = b.EnforcementActions
	x.xxx_hidden_Notifiers = b.Notifiers
	x.xxx_hidden_LastUpdated = b.LastUpdated
	if b.SORTName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 25)
		x.xxx_hidden_SORTName = b.SORTName
	}
	if b.SORTLifecycleStage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 16, 25)
		x.xxx_hidden_SORTLifecycleStage = b.SORTLifecycleStage
	}
	if b.SORTEnforcement != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 17, 25)
		x.xxx_hidden_SORTEnforcement = *b.SORTEnforcement
	}
	if b.PolicyVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 18, 25)
		x.xxx_hidden_PolicyVersion = b.PolicyVersion
	}
	x.xxx_hidden_PolicySections = &b.PolicySections
	x.xxx_hidden_MitreAttackVectors = &b.MitreAttackVectors
	if b.CriteriaLocked != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 21, 25)
		x.xxx_hidden_CriteriaLocked = *b.CriteriaLocked
	}
	if b.MitreVectorsLocked != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 22, 25)
		x.xxx_hidden_MitreVectorsLocked = *b.MitreVectorsLocked
	}
	if b.IsDefault != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 23, 25)
		x.xxx_hidden_IsDefault = *b.IsDefault
	}
	if b.Source != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 24, 25)
		x.xxx_hidden_Source = *b.Source
	}
	return m0
}

type PolicySection struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SectionName  *string                `protobuf:"bytes,1,opt,name=section_name,json=sectionName"`
	xxx_hidden_PolicyGroups *[]*PolicyGroup        `protobuf:"bytes,3,rep,name=policy_groups,json=policyGroups"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *PolicySection) Reset() {
	*x = PolicySection{}
	mi := &file_storage_policy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicySection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicySection) ProtoMessage() {}

func (x *PolicySection) ProtoReflect() protoreflect.Message {
	mi := &file_storage_policy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PolicySection) GetSectionName() string {
	if x != nil {
		if x.xxx_hidden_SectionName != nil {
			return *x.xxx_hidden_SectionName
		}
		return ""
	}
	return ""
}

func (x *PolicySection) GetPolicyGroups() []*PolicyGroup {
	if x != nil {
		if x.xxx_hidden_PolicyGroups != nil {
			return *x.xxx_hidden_PolicyGroups
		}
	}
	return nil
}

func (x *PolicySection) SetSectionName(v string) {
	x.xxx_hidden_SectionName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *PolicySection) SetPolicyGroups(v []*PolicyGroup) {
	x.xxx_hidden_PolicyGroups = &v
}

func (x *PolicySection) HasSectionName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PolicySection) ClearSectionName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SectionName = nil
}

type PolicySection_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SectionName *string
	// The set of policies groups that make up this section.  Each group can be considered an individual criterion.
	PolicyGroups []*PolicyGroup
}

func (b0 PolicySection_builder) Build() *PolicySection {
	m0 := &PolicySection{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SectionName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_SectionName = b.SectionName
	}
	x.xxx_hidden_PolicyGroups = &b.PolicyGroups
	return m0
}

type PolicyGroup struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_FieldName       *string                `protobuf:"bytes,1,opt,name=field_name,json=fieldName"`
	xxx_hidden_BooleanOperator BooleanOperator        `protobuf:"varint,2,opt,name=boolean_operator,json=booleanOperator,enum=storage.BooleanOperator"`
	xxx_hidden_Negate          bool                   `protobuf:"varint,3,opt,name=negate"`
	xxx_hidden_Values          *[]*PolicyValue        `protobuf:"bytes,4,rep,name=values"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *PolicyGroup) Reset() {
	*x = PolicyGroup{}
	mi := &file_storage_policy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyGroup) ProtoMessage() {}

func (x *PolicyGroup) ProtoReflect() protoreflect.Message {
	mi := &file_storage_policy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PolicyGroup) GetFieldName() string {
	if x != nil {
		if x.xxx_hidden_FieldName != nil {
			return *x.xxx_hidden_FieldName
		}
		return ""
	}
	return ""
}

func (x *PolicyGroup) GetBooleanOperator() BooleanOperator {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_BooleanOperator
		}
	}
	return BooleanOperator_OR
}

func (x *PolicyGroup) GetNegate() bool {
	if x != nil {
		return x.xxx_hidden_Negate
	}
	return false
}

func (x *PolicyGroup) GetValues() []*PolicyValue {
	if x != nil {
		if x.xxx_hidden_Values != nil {
			return *x.xxx_hidden_Values
		}
	}
	return nil
}

func (x *PolicyGroup) SetFieldName(v string) {
	x.xxx_hidden_FieldName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *PolicyGroup) SetBooleanOperator(v BooleanOperator) {
	x.xxx_hidden_BooleanOperator = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *PolicyGroup) SetNegate(v bool) {
	x.xxx_hidden_Negate = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *PolicyGroup) SetValues(v []*PolicyValue) {
	x.xxx_hidden_Values = &v
}

func (x *PolicyGroup) HasFieldName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PolicyGroup) HasBooleanOperator() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PolicyGroup) HasNegate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PolicyGroup) ClearFieldName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_FieldName = nil
}

func (x *PolicyGroup) ClearBooleanOperator() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_BooleanOperator = BooleanOperator_OR
}

func (x *PolicyGroup) ClearNegate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Negate = false
}

type PolicyGroup_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Defines which field on a deployment or image this PolicyGroup evaluates.  See https://docs.openshift.com/acs/operating/manage-security-policies.html#policy-criteria_manage-security-policies for a complete list of possible values.
	FieldName *string
	// Determines if the values are combined with an OR or an AND.  Defaults to OR.
	BooleanOperator *BooleanOperator
	// Determines if the evaluation of this PolicyGroup is negated.  Default to false.
	Negate *bool
	// List of values for the specified field
	Values []*PolicyValue
}

func (b0 PolicyGroup_builder) Build() *PolicyGroup {
	m0 := &PolicyGroup{}
	b, x := &b0, m0
	_, _ = b, x
	if b.FieldName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_FieldName = b.FieldName
	}
	if b.BooleanOperator != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_BooleanOperator = *b.BooleanOperator
	}
	if b.Negate != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Negate = *b.Negate
	}
	x.xxx_hidden_Values = &b.Values
	return m0
}

type PolicyValue struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Value       *string                `protobuf:"bytes,1,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PolicyValue) Reset() {
	*x = PolicyValue{}
	mi := &file_storage_policy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyValue) ProtoMessage() {}

func (x *PolicyValue) ProtoReflect() protoreflect.Message {
	mi := &file_storage_policy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PolicyValue) GetValue() string {
	if x != nil {
		if x.xxx_hidden_Value != nil {
			return *x.xxx_hidden_Value
		}
		return ""
	}
	return ""
}

func (x *PolicyValue) SetValue(v string) {
	x.xxx_hidden_Value = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *PolicyValue) HasValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PolicyValue) ClearValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Value = nil
}

type PolicyValue_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Value *string
}

func (b0 PolicyValue_builder) Build() *PolicyValue {
	m0 := &PolicyValue{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Value = b.Value
	}
	return m0
}

type PolicyList struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Policies *[]*Policy             `protobuf:"bytes,1,rep,name=policies"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PolicyList) Reset() {
	*x = PolicyList{}
	mi := &file_storage_policy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyList) ProtoMessage() {}

func (x *PolicyList) ProtoReflect() protoreflect.Message {
	mi := &file_storage_policy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PolicyList) GetPolicies() []*Policy {
	if x != nil {
		if x.xxx_hidden_Policies != nil {
			return *x.xxx_hidden_Policies
		}
	}
	return nil
}

func (x *PolicyList) SetPolicies(v []*Policy) {
	x.xxx_hidden_Policies = &v
}

type PolicyList_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Policies []*Policy
}

func (b0 PolicyList_builder) Build() *PolicyList {
	m0 := &PolicyList{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Policies = &b.Policies
	return m0
}

type ListPolicy struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id              *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name            *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Description     *string                `protobuf:"bytes,3,opt,name=description"`
	xxx_hidden_Severity        Severity               `protobuf:"varint,4,opt,name=severity,enum=storage.Severity"`
	xxx_hidden_Disabled        bool                   `protobuf:"varint,5,opt,name=disabled"`
	xxx_hidden_LifecycleStages []LifecycleStage       `protobuf:"varint,6,rep,packed,name=lifecycle_stages,json=lifecycleStages,enum=storage.LifecycleStage"`
	xxx_hidden_Notifiers       []string               `protobuf:"bytes,7,rep,name=notifiers"`
	xxx_hidden_LastUpdated     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_updated,json=lastUpdated"`
	xxx_hidden_EventSource     EventSource            `protobuf:"varint,9,opt,name=event_source,json=eventSource,enum=storage.EventSource"`
	xxx_hidden_IsDefault       bool                   `protobuf:"varint,10,opt,name=is_default,json=isDefault"`
	xxx_hidden_Source          PolicySource           `protobuf:"varint,11,opt,name=source,enum=storage.PolicySource"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ListPolicy) Reset() {
	*x = ListPolicy{}
	mi := &file_storage_policy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPolicy) ProtoMessage() {}

func (x *ListPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_storage_policy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListPolicy) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ListPolicy) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ListPolicy) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *ListPolicy) GetSeverity() Severity {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_Severity
		}
	}
	return Severity_UNSET_SEVERITY
}

func (x *ListPolicy) GetDisabled() bool {
	if x != nil {
		return x.xxx_hidden_Disabled
	}
	return false
}

func (x *ListPolicy) GetLifecycleStages() []LifecycleStage {
	if x != nil {
		return x.xxx_hidden_LifecycleStages
	}
	return nil
}

func (x *ListPolicy) GetNotifiers() []string {
	if x != nil {
		return x.xxx_hidden_Notifiers
	}
	return nil
}

func (x *ListPolicy) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastUpdated
	}
	return nil
}

func (x *ListPolicy) GetEventSource() EventSource {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 8) {
			return x.xxx_hidden_EventSource
		}
	}
	return EventSource_NOT_APPLICABLE
}

func (x *ListPolicy) GetIsDefault() bool {
	if x != nil {
		return x.xxx_hidden_IsDefault
	}
	return false
}

func (x *ListPolicy) GetSource() PolicySource {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 10) {
			return x.xxx_hidden_Source
		}
	}
	return PolicySource_IMPERATIVE
}

func (x *ListPolicy) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 11)
}

func (x *ListPolicy) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 11)
}

func (x *ListPolicy) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 11)
}

func (x *ListPolicy) SetSeverity(v Severity) {
	x.xxx_hidden_Severity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 11)
}

func (x *ListPolicy) SetDisabled(v bool) {
	x.xxx_hidden_Disabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 11)
}

func (x *ListPolicy) SetLifecycleStages(v []LifecycleStage) {
	x.xxx_hidden_LifecycleStages = v
}

func (x *ListPolicy) SetNotifiers(v []string) {
	x.xxx_hidden_Notifiers = v
}

func (x *ListPolicy) SetLastUpdated(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastUpdated = v
}

func (x *ListPolicy) SetEventSource(v EventSource) {
	x.xxx_hidden_EventSource = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 11)
}

func (x *ListPolicy) SetIsDefault(v bool) {
	x.xxx_hidden_IsDefault = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 11)
}

func (x *ListPolicy) SetSource(v PolicySource) {
	x.xxx_hidden_Source = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 11)
}

func (x *ListPolicy) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ListPolicy) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListPolicy) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ListPolicy) HasSeverity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ListPolicy) HasDisabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ListPolicy) HasLastUpdated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastUpdated != nil
}

func (x *ListPolicy) HasEventSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *ListPolicy) HasIsDefault() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *ListPolicy) HasSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *ListPolicy) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ListPolicy) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *ListPolicy) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Description = nil
}

func (x *ListPolicy) ClearSeverity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Severity = Severity_UNSET_SEVERITY
}

func (x *ListPolicy) ClearDisabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Disabled = false
}

func (x *ListPolicy) ClearLastUpdated() {
	x.xxx_hidden_LastUpdated = nil
}

func (x *ListPolicy) ClearEventSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_EventSource = EventSource_NOT_APPLICABLE
}

func (x *ListPolicy) ClearIsDefault() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_IsDefault = false
}

func (x *ListPolicy) ClearSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_Source = PolicySource_IMPERATIVE
}

type ListPolicy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id              *string
	Name            *string
	Description     *string
	Severity        *Severity
	Disabled        *bool
	LifecycleStages []LifecycleStage
	Notifiers       []string
	LastUpdated     *timestamppb.Timestamp
	EventSource     *EventSource
	IsDefault       *bool
	Source          *PolicySource
}

func (b0 ListPolicy_builder) Build() *ListPolicy {
	m0 := &ListPolicy{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 11)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 11)
		x.xxx_hidden_Name = b.Name
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 11)
		x.xxx_hidden_Description = b.Description
	}
	if b.Severity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 11)
		x.xxx_hidden_Severity = *b.Severity
	}
	if b.Disabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 11)
		x.xxx_hidden_Disabled = *b.Disabled
	}
	x.xxx_hidden_LifecycleStages = b.LifecycleStages
	x.xxx_hidden_Notifiers = b.Notifiers
	x.xxx_hidden_LastUpdated = b.LastUpdated
	if b.EventSource != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 11)
		x.xxx_hidden_EventSource = *b.EventSource
	}
	if b.IsDefault != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 11)
		x.xxx_hidden_IsDefault = *b.IsDefault
	}
	if b.Source != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 11)
		x.xxx_hidden_Source = *b.Source
	}
	return m0
}

type Exclusion struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Deployment  *Exclusion_Deployment  `protobuf:"bytes,5,opt,name=deployment"`
	xxx_hidden_Image       *Exclusion_Image       `protobuf:"bytes,7,opt,name=image"`
	xxx_hidden_Expiration  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expiration"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Exclusion) Reset() {
	*x = Exclusion{}
	mi := &file_storage_policy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Exclusion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exclusion) ProtoMessage() {}

func (x *Exclusion) ProtoReflect() protoreflect.Message {
	mi := &file_storage_policy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Exclusion) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Exclusion) GetDeployment() *Exclusion_Deployment {
	if x != nil {
		return x.xxx_hidden_Deployment
	}
	return nil
}

func (x *Exclusion) GetImage() *Exclusion_Image {
	if x != nil {
		return x.xxx_hidden_Image
	}
	return nil
}

func (x *Exclusion) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Expiration
	}
	return nil
}

func (x *Exclusion) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *Exclusion) SetDeployment(v *Exclusion_Deployment) {
	x.xxx_hidden_Deployment = v
}

func (x *Exclusion) SetImage(v *Exclusion_Image) {
	x.xxx_hidden_Image = v
}

func (x *Exclusion) SetExpiration(v *timestamppb.Timestamp) {
	x.xxx_hidden_Expiration = v
}

func (x *Exclusion) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Exclusion) HasDeployment() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Deployment != nil
}

func (x *Exclusion) HasImage() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Image != nil
}

func (x *Exclusion) HasExpiration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Expiration != nil
}

func (x *Exclusion) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Exclusion) ClearDeployment() {
	x.xxx_hidden_Deployment = nil
}

func (x *Exclusion) ClearImage() {
	x.xxx_hidden_Image = nil
}

func (x *Exclusion) ClearExpiration() {
	x.xxx_hidden_Expiration = nil
}

type Exclusion_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name       *string
	Deployment *Exclusion_Deployment
	Image      *Exclusion_Image
	Expiration *timestamppb.Timestamp
}

func (b0 Exclusion_builder) Build() *Exclusion {
	m0 := &Exclusion{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Deployment = b.Deployment
	x.xxx_hidden_Image = b.Image
	x.xxx_hidden_Expiration = b.Expiration
	return m0
}

// ExportPoliciesResponse is used by the API but it is defined in storage because we expect customers to store them.
// We do backwards-compatibility checks on objects in the storge folder and those checks should be applied to this object
type ExportPoliciesResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Policies *[]*Policy             `protobuf:"bytes,1,rep,name=policies"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ExportPoliciesResponse) Reset() {
	*x = ExportPoliciesResponse{}
	mi := &file_storage_policy_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportPoliciesResponse) ProtoMessage() {}

func (x *ExportPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storage_policy_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExportPoliciesResponse) GetPolicies() []*Policy {
	if x != nil {
		if x.xxx_hidden_Policies != nil {
			return *x.xxx_hidden_Policies
		}
	}
	return nil
}

func (x *ExportPoliciesResponse) SetPolicies(v []*Policy) {
	x.xxx_hidden_Policies = &v
}

type ExportPoliciesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Policies []*Policy
}

func (b0 ExportPoliciesResponse_builder) Build() *ExportPoliciesResponse {
	m0 := &ExportPoliciesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Policies = &b.Policies
	return m0
}

type Policy_MitreAttackVectors struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Tactic      *string                `protobuf:"bytes,1,opt,name=tactic"`
	xxx_hidden_Techniques  []string               `protobuf:"bytes,2,rep,name=techniques"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Policy_MitreAttackVectors) Reset() {
	*x = Policy_MitreAttackVectors{}
	mi := &file_storage_policy_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Policy_MitreAttackVectors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy_MitreAttackVectors) ProtoMessage() {}

func (x *Policy_MitreAttackVectors) ProtoReflect() protoreflect.Message {
	mi := &file_storage_policy_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Policy_MitreAttackVectors) GetTactic() string {
	if x != nil {
		if x.xxx_hidden_Tactic != nil {
			return *x.xxx_hidden_Tactic
		}
		return ""
	}
	return ""
}

func (x *Policy_MitreAttackVectors) GetTechniques() []string {
	if x != nil {
		return x.xxx_hidden_Techniques
	}
	return nil
}

func (x *Policy_MitreAttackVectors) SetTactic(v string) {
	x.xxx_hidden_Tactic = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Policy_MitreAttackVectors) SetTechniques(v []string) {
	x.xxx_hidden_Techniques = v
}

func (x *Policy_MitreAttackVectors) HasTactic() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Policy_MitreAttackVectors) ClearTactic() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Tactic = nil
}

type Policy_MitreAttackVectors_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Tactic     *string
	Techniques []string
}

func (b0 Policy_MitreAttackVectors_builder) Build() *Policy_MitreAttackVectors {
	m0 := &Policy_MitreAttackVectors{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Tactic != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Tactic = b.Tactic
	}
	x.xxx_hidden_Techniques = b.Techniques
	return m0
}

type Exclusion_Container struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ImageName *ImageName             `protobuf:"bytes,3,opt,name=image_name,json=imageName"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Exclusion_Container) Reset() {
	*x = Exclusion_Container{}
	mi := &file_storage_policy_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Exclusion_Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exclusion_Container) ProtoMessage() {}

func (x *Exclusion_Container) ProtoReflect() protoreflect.Message {
	mi := &file_storage_policy_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Exclusion_Container) GetImageName() *ImageName {
	if x != nil {
		return x.xxx_hidden_ImageName
	}
	return nil
}

func (x *Exclusion_Container) SetImageName(v *ImageName) {
	x.xxx_hidden_ImageName = v
}

func (x *Exclusion_Container) HasImageName() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ImageName != nil
}

func (x *Exclusion_Container) ClearImageName() {
	x.xxx_hidden_ImageName = nil
}

type Exclusion_Container_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ImageName *ImageName
}

func (b0 Exclusion_Container_builder) Build() *Exclusion_Container {
	m0 := &Exclusion_Container{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ImageName = b.ImageName
	return m0
}

type Exclusion_Deployment struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Scope       *Scope                 `protobuf:"bytes,4,opt,name=scope"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Exclusion_Deployment) Reset() {
	*x = Exclusion_Deployment{}
	mi := &file_storage_policy_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Exclusion_Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exclusion_Deployment) ProtoMessage() {}

func (x *Exclusion_Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_storage_policy_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Exclusion_Deployment) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Exclusion_Deployment) GetScope() *Scope {
	if x != nil {
		return x.xxx_hidden_Scope
	}
	return nil
}

func (x *Exclusion_Deployment) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Exclusion_Deployment) SetScope(v *Scope) {
	x.xxx_hidden_Scope = v
}

func (x *Exclusion_Deployment) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Exclusion_Deployment) HasScope() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Scope != nil
}

func (x *Exclusion_Deployment) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *Exclusion_Deployment) ClearScope() {
	x.xxx_hidden_Scope = nil
}

type Exclusion_Deployment_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name  *string
	Scope *Scope
}

func (b0 Exclusion_Deployment_builder) Build() *Exclusion_Deployment {
	m0 := &Exclusion_Deployment{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Scope = b.Scope
	return m0
}

type Exclusion_Image struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Exclusion_Image) Reset() {
	*x = Exclusion_Image{}
	mi := &file_storage_policy_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Exclusion_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exclusion_Image) ProtoMessage() {}

func (x *Exclusion_Image) ProtoReflect() protoreflect.Message {
	mi := &file_storage_policy_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Exclusion_Image) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Exclusion_Image) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *Exclusion_Image) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Exclusion_Image) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type Exclusion_Image_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
}

func (b0 Exclusion_Image_builder) Build() *Exclusion_Image {
	m0 := &Exclusion_Image{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

var File_storage_policy_proto protoreflect.FileDescriptor

const file_storage_policy_proto_rawDesc = "" +
	"\n" +
	"\x14storage/policy.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x13storage/image.proto\x1a\x13storage/scope.proto\x1a!google/protobuf/go_features.proto\"\xb4\t\n" +
	"\x06Policy\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1c\n" +
	"\trationale\x18\x04 \x01(\tR\trationale\x12 \n" +
	"\vremediation\x18\x05 \x01(\tR\vremediation\x12\x1a\n" +
	"\bdisabled\x18\x06 \x01(\bR\bdisabled\x12\x1e\n" +
	"\n" +
	"categories\x18\a \x03(\tR\n" +
	"categories\x12B\n" +
	"\x10lifecycle_stages\x18\t \x03(\x0e2\x17.storage.LifecycleStageR\x0flifecycleStages\x127\n" +
	"\fevent_source\x18\x16 \x01(\x0e2\x14.storage.EventSourceR\veventSource\x122\n" +
	"\n" +
	"exclusions\x18\x15 \x03(\v2\x12.storage.ExclusionR\n" +
	"exclusions\x12$\n" +
	"\x05scope\x18\v \x03(\v2\x0e.storage.ScopeR\x05scope\x12-\n" +
	"\bseverity\x18\f \x01(\x0e2\x11.storage.SeverityR\bseverity\x12K\n" +
	"\x13enforcement_actions\x18\r \x03(\x0e2\x1a.storage.EnforcementActionR\x12enforcementActions\x12\x1c\n" +
	"\tnotifiers\x18\x0e \x03(\tR\tnotifiers\x12=\n" +
	"\flast_updated\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\x12\x1b\n" +
	"\tSORT_name\x18\x10 \x01(\tR\bSORTName\x12/\n" +
	"\x13SORT_lifecycleStage\x18\x11 \x01(\tR\x12SORTLifecycleStage\x12)\n" +
	"\x10SORT_enforcement\x18\x12 \x01(\bR\x0fSORTEnforcement\x12%\n" +
	"\x0epolicy_version\x18\x13 \x01(\tR\rpolicyVersion\x12?\n" +
	"\x0fpolicy_sections\x18\x14 \x03(\v2\x16.storage.PolicySectionR\x0epolicySections\x12T\n" +
	"\x14mitre_attack_vectors\x18\x17 \x03(\v2\".storage.Policy.MitreAttackVectorsR\x12mitreAttackVectors\x12'\n" +
	"\x0fcriteria_locked\x18\x18 \x01(\bR\x0ecriteriaLocked\x120\n" +
	"\x14mitre_vectors_locked\x18\x19 \x01(\bR\x12mitreVectorsLocked\x12\x1d\n" +
	"\n" +
	"is_default\x18\x1a \x01(\bR\tisDefault\x12-\n" +
	"\x06source\x18\x1b \x01(\x0e2\x15.storage.PolicySourceR\x06source\x1aL\n" +
	"\x12MitreAttackVectors\x12\x16\n" +
	"\x06tactic\x18\x01 \x01(\tR\x06tactic\x12\x1e\n" +
	"\n" +
	"techniques\x18\x02 \x03(\tR\n" +
	"techniquesJ\x04\b\b\x10\tJ\x04\b\n" +
	"\x10\v\"m\n" +
	"\rPolicySection\x12!\n" +
	"\fsection_name\x18\x01 \x01(\tR\vsectionName\x129\n" +
	"\rpolicy_groups\x18\x03 \x03(\v2\x14.storage.PolicyGroupR\fpolicyGroups\"\xb7\x01\n" +
	"\vPolicyGroup\x12\x1d\n" +
	"\n" +
	"field_name\x18\x01 \x01(\tR\tfieldName\x12C\n" +
	"\x10boolean_operator\x18\x02 \x01(\x0e2\x18.storage.BooleanOperatorR\x0fbooleanOperator\x12\x16\n" +
	"\x06negate\x18\x03 \x01(\bR\x06negate\x12,\n" +
	"\x06values\x18\x04 \x03(\v2\x14.storage.PolicyValueR\x06values\"#\n" +
	"\vPolicyValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"9\n" +
	"\n" +
	"PolicyList\x12+\n" +
	"\bpolicies\x18\x01 \x03(\v2\x0f.storage.PolicyR\bpolicies\"\xc5\x03\n" +
	"\n" +
	"ListPolicy\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12-\n" +
	"\bseverity\x18\x04 \x01(\x0e2\x11.storage.SeverityR\bseverity\x12\x1a\n" +
	"\bdisabled\x18\x05 \x01(\bR\bdisabled\x12B\n" +
	"\x10lifecycle_stages\x18\x06 \x03(\x0e2\x17.storage.LifecycleStageR\x0flifecycleStages\x12\x1c\n" +
	"\tnotifiers\x18\a \x03(\tR\tnotifiers\x12=\n" +
	"\flast_updated\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\x127\n" +
	"\fevent_source\x18\t \x01(\x0e2\x14.storage.EventSourceR\veventSource\x12\x1d\n" +
	"\n" +
	"is_default\x18\n" +
	" \x01(\bR\tisDefault\x12-\n" +
	"\x06source\x18\v \x01(\x0e2\x15.storage.PolicySourceR\x06source\"\xf5\x02\n" +
	"\tExclusion\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12=\n" +
	"\n" +
	"deployment\x18\x05 \x01(\v2\x1d.storage.Exclusion.DeploymentR\n" +
	"deployment\x12.\n" +
	"\x05image\x18\a \x01(\v2\x18.storage.Exclusion.ImageR\x05image\x12:\n" +
	"\n" +
	"expiration\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"expiration\x1a>\n" +
	"\tContainer\x121\n" +
	"\n" +
	"image_name\x18\x03 \x01(\v2\x12.storage.ImageNameR\timageName\x1aF\n" +
	"\n" +
	"Deployment\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12$\n" +
	"\x05scope\x18\x04 \x01(\v2\x0e.storage.ScopeR\x05scope\x1a\x1b\n" +
	"\x05Image\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04nameJ\x04\b\x02\x10\x03\"E\n" +
	"\x16ExportPoliciesResponse\x12+\n" +
	"\bpolicies\x18\x01 \x03(\v2\x0f.storage.PolicyR\bpolicies*/\n" +
	"\fPolicySource\x12\x0e\n" +
	"\n" +
	"IMPERATIVE\x10\x00\x12\x0f\n" +
	"\vDECLARATIVE\x10\x01*L\n" +
	"\vEventSource\x12\x12\n" +
	"\x0eNOT_APPLICABLE\x10\x00\x12\x14\n" +
	"\x10DEPLOYMENT_EVENT\x10\x01\x12\x13\n" +
	"\x0fAUDIT_LOG_EVENT\x10\x02*\"\n" +
	"\x0fBooleanOperator\x12\x06\n" +
	"\x02OR\x10\x00\x12\a\n" +
	"\x03AND\x10\x01*\xa1\x02\n" +
	"\x11EnforcementAction\x12\x15\n" +
	"\x11UNSET_ENFORCEMENT\x10\x00\x12\x1d\n" +
	"\x19SCALE_TO_ZERO_ENFORCEMENT\x10\x01\x12-\n" +
	")UNSATISFIABLE_NODE_CONSTRAINT_ENFORCEMENT\x10\x02\x12\x18\n" +
	"\x14KILL_POD_ENFORCEMENT\x10\x03\x12\x1a\n" +
	"\x16FAIL_BUILD_ENFORCEMENT\x10\x04\x12!\n" +
	"\x1dFAIL_KUBE_REQUEST_ENFORCEMENT\x10\x05\x12&\n" +
	"\"FAIL_DEPLOYMENT_CREATE_ENFORCEMENT\x10\x06\x12&\n" +
	"\"FAIL_DEPLOYMENT_UPDATE_ENFORCEMENT\x10\a*o\n" +
	"\bSeverity\x12\x12\n" +
	"\x0eUNSET_SEVERITY\x10\x00\x12\x10\n" +
	"\fLOW_SEVERITY\x10\x01\x12\x13\n" +
	"\x0fMEDIUM_SEVERITY\x10\x02\x12\x11\n" +
	"\rHIGH_SEVERITY\x10\x03\x12\x15\n" +
	"\x11CRITICAL_SEVERITY\x10\x04*4\n" +
	"\x0eLifecycleStage\x12\n" +
	"\n" +
	"\x06DEPLOY\x10\x00\x12\t\n" +
	"\x05BUILD\x10\x01\x12\v\n" +
	"\aRUNTIME\x10\x02*n\n" +
	"\n" +
	"Comparator\x12\r\n" +
	"\tLESS_THAN\x10\x00\x12\x17\n" +
	"\x13LESS_THAN_OR_EQUALS\x10\x01\x12\n" +
	"\n" +
	"\x06EQUALS\x10\x02\x12\x1a\n" +
	"\x16GREATER_THAN_OR_EQUALS\x10\x03\x12\x10\n" +
	"\fGREATER_THAN\x10\x04B6\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storage\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_storage_policy_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_storage_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_storage_policy_proto_goTypes = []any{
	(PolicySource)(0),                 // 0: storage.PolicySource
	(EventSource)(0),                  // 1: storage.EventSource
	(BooleanOperator)(0),              // 2: storage.BooleanOperator
	(EnforcementAction)(0),            // 3: storage.EnforcementAction
	(Severity)(0),                     // 4: storage.Severity
	(LifecycleStage)(0),               // 5: storage.LifecycleStage
	(Comparator)(0),                   // 6: storage.Comparator
	(*Policy)(nil),                    // 7: storage.Policy
	(*PolicySection)(nil),             // 8: storage.PolicySection
	(*PolicyGroup)(nil),               // 9: storage.PolicyGroup
	(*PolicyValue)(nil),               // 10: storage.PolicyValue
	(*PolicyList)(nil),                // 11: storage.PolicyList
	(*ListPolicy)(nil),                // 12: storage.ListPolicy
	(*Exclusion)(nil),                 // 13: storage.Exclusion
	(*ExportPoliciesResponse)(nil),    // 14: storage.ExportPoliciesResponse
	(*Policy_MitreAttackVectors)(nil), // 15: storage.Policy.MitreAttackVectors
	(*Exclusion_Container)(nil),       // 16: storage.Exclusion.Container
	(*Exclusion_Deployment)(nil),      // 17: storage.Exclusion.Deployment
	(*Exclusion_Image)(nil),           // 18: storage.Exclusion.Image
	(*Scope)(nil),                     // 19: storage.Scope
	(*timestamppb.Timestamp)(nil),     // 20: google.protobuf.Timestamp
	(*ImageName)(nil),                 // 21: storage.ImageName
}
var file_storage_policy_proto_depIdxs = []int32{
	5,  // 0: storage.Policy.lifecycle_stages:type_name -> storage.LifecycleStage
	1,  // 1: storage.Policy.event_source:type_name -> storage.EventSource
	13, // 2: storage.Policy.exclusions:type_name -> storage.Exclusion
	19, // 3: storage.Policy.scope:type_name -> storage.Scope
	4,  // 4: storage.Policy.severity:type_name -> storage.Severity
	3,  // 5: storage.Policy.enforcement_actions:type_name -> storage.EnforcementAction
	20, // 6: storage.Policy.last_updated:type_name -> google.protobuf.Timestamp
	8,  // 7: storage.Policy.policy_sections:type_name -> storage.PolicySection
	15, // 8: storage.Policy.mitre_attack_vectors:type_name -> storage.Policy.MitreAttackVectors
	0,  // 9: storage.Policy.source:type_name -> storage.PolicySource
	9,  // 10: storage.PolicySection.policy_groups:type_name -> storage.PolicyGroup
	2,  // 11: storage.PolicyGroup.boolean_operator:type_name -> storage.BooleanOperator
	10, // 12: storage.PolicyGroup.values:type_name -> storage.PolicyValue
	7,  // 13: storage.PolicyList.policies:type_name -> storage.Policy
	4,  // 14: storage.ListPolicy.severity:type_name -> storage.Severity
	5,  // 15: storage.ListPolicy.lifecycle_stages:type_name -> storage.LifecycleStage
	20, // 16: storage.ListPolicy.last_updated:type_name -> google.protobuf.Timestamp
	1,  // 17: storage.ListPolicy.event_source:type_name -> storage.EventSource
	0,  // 18: storage.ListPolicy.source:type_name -> storage.PolicySource
	17, // 19: storage.Exclusion.deployment:type_name -> storage.Exclusion.Deployment
	18, // 20: storage.Exclusion.image:type_name -> storage.Exclusion.Image
	20, // 21: storage.Exclusion.expiration:type_name -> google.protobuf.Timestamp
	7,  // 22: storage.ExportPoliciesResponse.policies:type_name -> storage.Policy
	21, // 23: storage.Exclusion.Container.image_name:type_name -> storage.ImageName
	19, // 24: storage.Exclusion.Deployment.scope:type_name -> storage.Scope
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_storage_policy_proto_init() }
func file_storage_policy_proto_init() {
	if File_storage_policy_proto != nil {
		return
	}
	file_storage_image_proto_init()
	file_storage_scope_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_policy_proto_rawDesc), len(file_storage_policy_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_policy_proto_goTypes,
		DependencyIndexes: file_storage_policy_proto_depIdxs,
		EnumInfos:         file_storage_policy_proto_enumTypes,
		MessageInfos:      file_storage_policy_proto_msgTypes,
	}.Build()
	File_storage_policy_proto = out.File
	file_storage_policy_proto_goTypes = nil
	file_storage_policy_proto_depIdxs = nil
}
