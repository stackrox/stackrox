// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: storage/config.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BannerConfig_Size int32

const (
	BannerConfig_UNSET  BannerConfig_Size = 0
	BannerConfig_SMALL  BannerConfig_Size = 1
	BannerConfig_MEDIUM BannerConfig_Size = 2
	BannerConfig_LARGE  BannerConfig_Size = 3
)

// Enum value maps for BannerConfig_Size.
var (
	BannerConfig_Size_name = map[int32]string{
		0: "UNSET",
		1: "SMALL",
		2: "MEDIUM",
		3: "LARGE",
	}
	BannerConfig_Size_value = map[string]int32{
		"UNSET":  0,
		"SMALL":  1,
		"MEDIUM": 2,
		"LARGE":  3,
	}
)

func (x BannerConfig_Size) Enum() *BannerConfig_Size {
	p := new(BannerConfig_Size)
	*p = x
	return p
}

func (x BannerConfig_Size) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BannerConfig_Size) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_config_proto_enumTypes[0].Descriptor()
}

func (BannerConfig_Size) Type() protoreflect.EnumType {
	return &file_storage_config_proto_enumTypes[0]
}

func (x BannerConfig_Size) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BannerConfig_Size.Descriptor instead.
func (BannerConfig_Size) EnumDescriptor() ([]byte, []int) {
	return file_storage_config_proto_rawDescGZIP(), []int{1, 0}
}

type LoginNotice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Text    string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *LoginNotice) Reset() {
	*x = LoginNotice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginNotice) ProtoMessage() {}

func (x *LoginNotice) ProtoReflect() protoreflect.Message {
	mi := &file_storage_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginNotice.ProtoReflect.Descriptor instead.
func (*LoginNotice) Descriptor() ([]byte, []int) {
	return file_storage_config_proto_rawDescGZIP(), []int{0}
}

func (x *LoginNotice) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *LoginNotice) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type BannerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled         bool              `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Text            string            `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Size            BannerConfig_Size `protobuf:"varint,3,opt,name=size,proto3,enum=storage.BannerConfig_Size" json:"size,omitempty"`
	Color           string            `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	BackgroundColor string            `protobuf:"bytes,5,opt,name=background_color,json=backgroundColor,proto3" json:"background_color,omitempty"`
}

func (x *BannerConfig) Reset() {
	*x = BannerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerConfig) ProtoMessage() {}

func (x *BannerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerConfig.ProtoReflect.Descriptor instead.
func (*BannerConfig) Descriptor() ([]byte, []int) {
	return file_storage_config_proto_rawDescGZIP(), []int{1}
}

func (x *BannerConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *BannerConfig) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *BannerConfig) GetSize() BannerConfig_Size {
	if x != nil {
		return x.Size
	}
	return BannerConfig_UNSET
}

func (x *BannerConfig) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *BannerConfig) GetBackgroundColor() string {
	if x != nil {
		return x.BackgroundColor
	}
	return ""
}

type PublicConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginNotice *LoginNotice            `protobuf:"bytes,1,opt,name=login_notice,json=loginNotice,proto3" json:"login_notice,omitempty"`
	Header      *BannerConfig           `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Footer      *BannerConfig           `protobuf:"bytes,3,opt,name=footer,proto3" json:"footer,omitempty"`
	Telemetry   *TelemetryConfiguration `protobuf:"bytes,4,opt,name=telemetry,proto3" json:"telemetry,omitempty"`
}

func (x *PublicConfig) Reset() {
	*x = PublicConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicConfig) ProtoMessage() {}

func (x *PublicConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicConfig.ProtoReflect.Descriptor instead.
func (*PublicConfig) Descriptor() ([]byte, []int) {
	return file_storage_config_proto_rawDescGZIP(), []int{2}
}

func (x *PublicConfig) GetLoginNotice() *LoginNotice {
	if x != nil {
		return x.LoginNotice
	}
	return nil
}

func (x *PublicConfig) GetHeader() *BannerConfig {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *PublicConfig) GetFooter() *BannerConfig {
	if x != nil {
		return x.Footer
	}
	return nil
}

func (x *PublicConfig) GetTelemetry() *TelemetryConfiguration {
	if x != nil {
		return x.Telemetry
	}
	return nil
}

type AlertRetentionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResolvedDeployRetentionDurationDays int32 `protobuf:"varint,1,opt,name=resolved_deploy_retention_duration_days,json=resolvedDeployRetentionDurationDays,proto3" json:"resolved_deploy_retention_duration_days,omitempty"`
	// This runtime alert retention configuration takes precedence after `allRuntimeRetentionDurationDays`.
	DeletedRuntimeRetentionDurationDays int32 `protobuf:"varint,2,opt,name=deleted_runtime_retention_duration_days,json=deletedRuntimeRetentionDurationDays,proto3" json:"deleted_runtime_retention_duration_days,omitempty"`
	// This runtime alert retention configuration has highest precedence. All runtime alerts, including attempted
	// alerts and deleted deployment alerts, are deleted even if respective retention is longer.
	AllRuntimeRetentionDurationDays      int32 `protobuf:"varint,3,opt,name=all_runtime_retention_duration_days,json=allRuntimeRetentionDurationDays,proto3" json:"all_runtime_retention_duration_days,omitempty"`
	AttemptedDeployRetentionDurationDays int32 `protobuf:"varint,4,opt,name=attempted_deploy_retention_duration_days,json=attemptedDeployRetentionDurationDays,proto3" json:"attempted_deploy_retention_duration_days,omitempty"`
	// This runtime alert retention configuration has lowest precedence.
	AttemptedRuntimeRetentionDurationDays int32 `protobuf:"varint,5,opt,name=attempted_runtime_retention_duration_days,json=attemptedRuntimeRetentionDurationDays,proto3" json:"attempted_runtime_retention_duration_days,omitempty"`
}

func (x *AlertRetentionConfig) Reset() {
	*x = AlertRetentionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertRetentionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertRetentionConfig) ProtoMessage() {}

func (x *AlertRetentionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertRetentionConfig.ProtoReflect.Descriptor instead.
func (*AlertRetentionConfig) Descriptor() ([]byte, []int) {
	return file_storage_config_proto_rawDescGZIP(), []int{3}
}

func (x *AlertRetentionConfig) GetResolvedDeployRetentionDurationDays() int32 {
	if x != nil {
		return x.ResolvedDeployRetentionDurationDays
	}
	return 0
}

func (x *AlertRetentionConfig) GetDeletedRuntimeRetentionDurationDays() int32 {
	if x != nil {
		return x.DeletedRuntimeRetentionDurationDays
	}
	return 0
}

func (x *AlertRetentionConfig) GetAllRuntimeRetentionDurationDays() int32 {
	if x != nil {
		return x.AllRuntimeRetentionDurationDays
	}
	return 0
}

func (x *AlertRetentionConfig) GetAttemptedDeployRetentionDurationDays() int32 {
	if x != nil {
		return x.AttemptedDeployRetentionDurationDays
	}
	return 0
}

func (x *AlertRetentionConfig) GetAttemptedRuntimeRetentionDurationDays() int32 {
	if x != nil {
		return x.AttemptedRuntimeRetentionDurationDays
	}
	return 0
}

// next available tag: 5
type DecommissionedClusterRetentionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetentionDurationDays int32                  `protobuf:"varint,1,opt,name=retention_duration_days,json=retentionDurationDays,proto3" json:"retention_duration_days,omitempty"`
	IgnoreClusterLabels   map[string]string      `protobuf:"bytes,2,rep,name=ignore_cluster_labels,json=ignoreClusterLabels,proto3" json:"ignore_cluster_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LastUpdated           *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	CreatedAt             *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *DecommissionedClusterRetentionConfig) Reset() {
	*x = DecommissionedClusterRetentionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecommissionedClusterRetentionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecommissionedClusterRetentionConfig) ProtoMessage() {}

func (x *DecommissionedClusterRetentionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecommissionedClusterRetentionConfig.ProtoReflect.Descriptor instead.
func (*DecommissionedClusterRetentionConfig) Descriptor() ([]byte, []int) {
	return file_storage_config_proto_rawDescGZIP(), []int{4}
}

func (x *DecommissionedClusterRetentionConfig) GetRetentionDurationDays() int32 {
	if x != nil {
		return x.RetentionDurationDays
	}
	return 0
}

func (x *DecommissionedClusterRetentionConfig) GetIgnoreClusterLabels() map[string]string {
	if x != nil {
		return x.IgnoreClusterLabels
	}
	return nil
}

func (x *DecommissionedClusterRetentionConfig) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *DecommissionedClusterRetentionConfig) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// next available tag: 4
type ReportRetentionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HistoryRetentionDurationDays           uint32 `protobuf:"varint,1,opt,name=history_retention_duration_days,json=historyRetentionDurationDays,proto3" json:"history_retention_duration_days,omitempty"`
	DownloadableReportRetentionDays        uint32 `protobuf:"varint,2,opt,name=downloadable_report_retention_days,json=downloadableReportRetentionDays,proto3" json:"downloadable_report_retention_days,omitempty"`
	DownloadableReportGlobalRetentionBytes uint32 `protobuf:"varint,3,opt,name=downloadable_report_global_retention_bytes,json=downloadableReportGlobalRetentionBytes,proto3" json:"downloadable_report_global_retention_bytes,omitempty"`
}

func (x *ReportRetentionConfig) Reset() {
	*x = ReportRetentionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportRetentionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportRetentionConfig) ProtoMessage() {}

func (x *ReportRetentionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportRetentionConfig.ProtoReflect.Descriptor instead.
func (*ReportRetentionConfig) Descriptor() ([]byte, []int) {
	return file_storage_config_proto_rawDescGZIP(), []int{5}
}

func (x *ReportRetentionConfig) GetHistoryRetentionDurationDays() uint32 {
	if x != nil {
		return x.HistoryRetentionDurationDays
	}
	return 0
}

func (x *ReportRetentionConfig) GetDownloadableReportRetentionDays() uint32 {
	if x != nil {
		return x.DownloadableReportRetentionDays
	}
	return 0
}

func (x *ReportRetentionConfig) GetDownloadableReportGlobalRetentionBytes() uint32 {
	if x != nil {
		return x.DownloadableReportGlobalRetentionBytes
	}
	return 0
}

// next available tag:9
type PrivateConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to AlertRetention:
	//
	//	*PrivateConfig_DEPRECATEDAlertRetentionDurationDays
	//	*PrivateConfig_AlertConfig
	AlertRetention                      isPrivateConfig_AlertRetention        `protobuf_oneof:"alert_retention"`
	ImageRetentionDurationDays          int32                                 `protobuf:"varint,2,opt,name=image_retention_duration_days,json=imageRetentionDurationDays,proto3" json:"image_retention_duration_days,omitempty"`
	ExpiredVulnReqRetentionDurationDays int32                                 `protobuf:"varint,4,opt,name=expired_vuln_req_retention_duration_days,json=expiredVulnReqRetentionDurationDays,proto3" json:"expired_vuln_req_retention_duration_days,omitempty"`
	DecommissionedClusterRetention      *DecommissionedClusterRetentionConfig `protobuf:"bytes,5,opt,name=decommissioned_cluster_retention,json=decommissionedClusterRetention,proto3" json:"decommissioned_cluster_retention,omitempty"`
	ReportRetentionConfig               *ReportRetentionConfig                `protobuf:"bytes,6,opt,name=report_retention_config,json=reportRetentionConfig,proto3" json:"report_retention_config,omitempty"`
	VulnerabilityExceptionConfig        *VulnerabilityExceptionConfig         `protobuf:"bytes,7,opt,name=vulnerability_exception_config,json=vulnerabilityExceptionConfig,proto3" json:"vulnerability_exception_config,omitempty"`
	AdministrationEventsConfig          *AdministrationEventsConfig           `protobuf:"bytes,8,opt,name=administration_events_config,json=administrationEventsConfig,proto3" json:"administration_events_config,omitempty"`
}

func (x *PrivateConfig) Reset() {
	*x = PrivateConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivateConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateConfig) ProtoMessage() {}

func (x *PrivateConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateConfig.ProtoReflect.Descriptor instead.
func (*PrivateConfig) Descriptor() ([]byte, []int) {
	return file_storage_config_proto_rawDescGZIP(), []int{6}
}

func (m *PrivateConfig) GetAlertRetention() isPrivateConfig_AlertRetention {
	if m != nil {
		return m.AlertRetention
	}
	return nil
}

func (x *PrivateConfig) GetDEPRECATEDAlertRetentionDurationDays() int32 {
	if x, ok := x.GetAlertRetention().(*PrivateConfig_DEPRECATEDAlertRetentionDurationDays); ok {
		return x.DEPRECATEDAlertRetentionDurationDays
	}
	return 0
}

func (x *PrivateConfig) GetAlertConfig() *AlertRetentionConfig {
	if x, ok := x.GetAlertRetention().(*PrivateConfig_AlertConfig); ok {
		return x.AlertConfig
	}
	return nil
}

func (x *PrivateConfig) GetImageRetentionDurationDays() int32 {
	if x != nil {
		return x.ImageRetentionDurationDays
	}
	return 0
}

func (x *PrivateConfig) GetExpiredVulnReqRetentionDurationDays() int32 {
	if x != nil {
		return x.ExpiredVulnReqRetentionDurationDays
	}
	return 0
}

func (x *PrivateConfig) GetDecommissionedClusterRetention() *DecommissionedClusterRetentionConfig {
	if x != nil {
		return x.DecommissionedClusterRetention
	}
	return nil
}

func (x *PrivateConfig) GetReportRetentionConfig() *ReportRetentionConfig {
	if x != nil {
		return x.ReportRetentionConfig
	}
	return nil
}

func (x *PrivateConfig) GetVulnerabilityExceptionConfig() *VulnerabilityExceptionConfig {
	if x != nil {
		return x.VulnerabilityExceptionConfig
	}
	return nil
}

func (x *PrivateConfig) GetAdministrationEventsConfig() *AdministrationEventsConfig {
	if x != nil {
		return x.AdministrationEventsConfig
	}
	return nil
}

type isPrivateConfig_AlertRetention interface {
	isPrivateConfig_AlertRetention()
}

type PrivateConfig_DEPRECATEDAlertRetentionDurationDays struct {
	// will be deprecated after migration is ready
	DEPRECATEDAlertRetentionDurationDays int32 `protobuf:"varint,1,opt,name=DEPRECATED_alert_retention_duration_days,json=DEPRECATEDAlertRetentionDurationDays,proto3,oneof"`
}

type PrivateConfig_AlertConfig struct {
	AlertConfig *AlertRetentionConfig `protobuf:"bytes,3,opt,name=alert_config,json=alertConfig,proto3,oneof"`
}

func (*PrivateConfig_DEPRECATEDAlertRetentionDurationDays) isPrivateConfig_AlertRetention() {}

func (*PrivateConfig_AlertConfig) isPrivateConfig_AlertRetention() {}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicConfig  *PublicConfig  `protobuf:"bytes,1,opt,name=public_config,json=publicConfig,proto3" json:"public_config,omitempty"`
	PrivateConfig *PrivateConfig `protobuf:"bytes,2,opt,name=private_config,json=privateConfig,proto3" json:"private_config,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_storage_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_storage_config_proto_rawDescGZIP(), []int{7}
}

func (x *Config) GetPublicConfig() *PublicConfig {
	if x != nil {
		return x.PublicConfig
	}
	return nil
}

func (x *Config) GetPrivateConfig() *PrivateConfig {
	if x != nil {
		return x.PrivateConfig
	}
	return nil
}

type VulnerabilityExceptionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpiryOptions *VulnerabilityExceptionConfig_ExpiryOptions `protobuf:"bytes,1,opt,name=expiry_options,json=expiryOptions,proto3" json:"expiry_options,omitempty"`
}

func (x *VulnerabilityExceptionConfig) Reset() {
	*x = VulnerabilityExceptionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnerabilityExceptionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityExceptionConfig) ProtoMessage() {}

func (x *VulnerabilityExceptionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnerabilityExceptionConfig.ProtoReflect.Descriptor instead.
func (*VulnerabilityExceptionConfig) Descriptor() ([]byte, []int) {
	return file_storage_config_proto_rawDescGZIP(), []int{8}
}

func (x *VulnerabilityExceptionConfig) GetExpiryOptions() *VulnerabilityExceptionConfig_ExpiryOptions {
	if x != nil {
		return x.ExpiryOptions
	}
	return nil
}

type AdministrationEventsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetentionDurationDays uint32 `protobuf:"varint,1,opt,name=retention_duration_days,json=retentionDurationDays,proto3" json:"retention_duration_days,omitempty"`
}

func (x *AdministrationEventsConfig) Reset() {
	*x = AdministrationEventsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdministrationEventsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdministrationEventsConfig) ProtoMessage() {}

func (x *AdministrationEventsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdministrationEventsConfig.ProtoReflect.Descriptor instead.
func (*AdministrationEventsConfig) Descriptor() ([]byte, []int) {
	return file_storage_config_proto_rawDescGZIP(), []int{9}
}

func (x *AdministrationEventsConfig) GetRetentionDurationDays() uint32 {
	if x != nil {
		return x.RetentionDurationDays
	}
	return 0
}

type DayOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumDays uint32 `protobuf:"varint,1,opt,name=num_days,json=numDays,proto3" json:"num_days,omitempty"`
	Enabled bool   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *DayOption) Reset() {
	*x = DayOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DayOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayOption) ProtoMessage() {}

func (x *DayOption) ProtoReflect() protoreflect.Message {
	mi := &file_storage_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayOption.ProtoReflect.Descriptor instead.
func (*DayOption) Descriptor() ([]byte, []int) {
	return file_storage_config_proto_rawDescGZIP(), []int{10}
}

func (x *DayOption) GetNumDays() uint32 {
	if x != nil {
		return x.NumDays
	}
	return 0
}

func (x *DayOption) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type VulnerabilityExceptionConfig_FixableCVEOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllFixable bool `protobuf:"varint,1,opt,name=all_fixable,json=allFixable,proto3" json:"all_fixable,omitempty"`
	AnyFixable bool `protobuf:"varint,2,opt,name=any_fixable,json=anyFixable,proto3" json:"any_fixable,omitempty"`
}

func (x *VulnerabilityExceptionConfig_FixableCVEOptions) Reset() {
	*x = VulnerabilityExceptionConfig_FixableCVEOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_config_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnerabilityExceptionConfig_FixableCVEOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityExceptionConfig_FixableCVEOptions) ProtoMessage() {}

func (x *VulnerabilityExceptionConfig_FixableCVEOptions) ProtoReflect() protoreflect.Message {
	mi := &file_storage_config_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnerabilityExceptionConfig_FixableCVEOptions.ProtoReflect.Descriptor instead.
func (*VulnerabilityExceptionConfig_FixableCVEOptions) Descriptor() ([]byte, []int) {
	return file_storage_config_proto_rawDescGZIP(), []int{8, 0}
}

func (x *VulnerabilityExceptionConfig_FixableCVEOptions) GetAllFixable() bool {
	if x != nil {
		return x.AllFixable
	}
	return false
}

func (x *VulnerabilityExceptionConfig_FixableCVEOptions) GetAnyFixable() bool {
	if x != nil {
		return x.AnyFixable
	}
	return false
}

type VulnerabilityExceptionConfig_ExpiryOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayOptions        []*DayOption                                    `protobuf:"bytes,1,rep,name=day_options,json=dayOptions,proto3" json:"day_options,omitempty"`
	FixableCveOptions *VulnerabilityExceptionConfig_FixableCVEOptions `protobuf:"bytes,2,opt,name=fixable_cve_options,json=fixableCveOptions,proto3" json:"fixable_cve_options,omitempty"`
	CustomDate        bool                                            `protobuf:"varint,3,opt,name=custom_date,json=customDate,proto3" json:"custom_date,omitempty"`
	Indefinite        bool                                            `protobuf:"varint,4,opt,name=indefinite,proto3" json:"indefinite,omitempty"`
}

func (x *VulnerabilityExceptionConfig_ExpiryOptions) Reset() {
	*x = VulnerabilityExceptionConfig_ExpiryOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_config_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnerabilityExceptionConfig_ExpiryOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityExceptionConfig_ExpiryOptions) ProtoMessage() {}

func (x *VulnerabilityExceptionConfig_ExpiryOptions) ProtoReflect() protoreflect.Message {
	mi := &file_storage_config_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnerabilityExceptionConfig_ExpiryOptions.ProtoReflect.Descriptor instead.
func (*VulnerabilityExceptionConfig_ExpiryOptions) Descriptor() ([]byte, []int) {
	return file_storage_config_proto_rawDescGZIP(), []int{8, 1}
}

func (x *VulnerabilityExceptionConfig_ExpiryOptions) GetDayOptions() []*DayOption {
	if x != nil {
		return x.DayOptions
	}
	return nil
}

func (x *VulnerabilityExceptionConfig_ExpiryOptions) GetFixableCveOptions() *VulnerabilityExceptionConfig_FixableCVEOptions {
	if x != nil {
		return x.FixableCveOptions
	}
	return nil
}

func (x *VulnerabilityExceptionConfig_ExpiryOptions) GetCustomDate() bool {
	if x != nil {
		return x.CustomDate
	}
	return false
}

func (x *VulnerabilityExceptionConfig_ExpiryOptions) GetIndefinite() bool {
	if x != nil {
		return x.Indefinite
	}
	return false
}

var File_storage_config_proto protoreflect.FileDescriptor

var file_storage_config_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x0b, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xe2, 0x01, 0x0a, 0x0c, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x33, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x09,
	0x0a, 0x05, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x4d, 0x41,
	0x4c, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x02,
	0x12, 0x09, 0x0a, 0x05, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x03, 0x22, 0xe4, 0x01, 0x0a, 0x0c,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x37, 0x0a, 0x0c,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x66, 0x6f, 0x6f,
	0x74, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x22, 0xc2, 0x03, 0x0a, 0x14, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x54, 0x0a, 0x27, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x72,
	0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x23, 0x72, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79,
	0x73, 0x12, 0x54, 0x0a, 0x27, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x23, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x4c, 0x0a, 0x23, 0x61, 0x6c, 0x6c, 0x5f, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x1f, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x56, 0x0a, 0x28, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x65, 0x64, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x24, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x65, 0x64, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x58, 0x0a,
	0x29, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x25, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x65, 0x64, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x22, 0x9c, 0x03, 0x0a, 0x24, 0x44, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x15, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x7a, 0x0a, 0x15, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x13, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x46,
	0x0a, 0x18, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x87, 0x02, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x45, 0x0a, 0x1f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1c, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x4b, 0x0a, 0x22, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72,
	0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x1f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x79, 0x73, 0x12, 0x5a, 0x0a, 0x2a, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x5f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x26, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x22, 0xff, 0x05, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x58, 0x0a, 0x28, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44,
	0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x24, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54,
	0x45, 0x44, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x42, 0x0a, 0x0c,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x41, 0x0a, 0x1d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x79, 0x73, 0x12, 0x55, 0x0a, 0x28, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x76,
	0x75, 0x6c, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x23, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x56, 0x75,
	0x6c, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x77, 0x0a, 0x20, 0x64, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x44,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x1e, 0x64, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x65, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x17, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x65,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x15, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x6b, 0x0a, 0x1e, 0x76,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x75,
	0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x1c, 0x76, 0x75, 0x6c, 0x6e,
	0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x65, 0x0a, 0x1c, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x1a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42,
	0x11, 0x0a, 0x0f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3a, 0x0a,
	0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x0a, 0x0e, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xc2, 0x03, 0x0a, 0x1c, 0x56, 0x75, 0x6c,
	0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x5a, 0x0a, 0x0e, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x75, 0x6c, 0x6e,
	0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x55, 0x0a, 0x11, 0x46, 0x69, 0x78, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x56, 0x45, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c,
	0x6c, 0x5f, 0x66, 0x69, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x6e, 0x79, 0x5f, 0x66, 0x69, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x61, 0x6e, 0x79, 0x46, 0x69, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0xee, 0x01, 0x0a,
	0x0d, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x33,
	0x0a, 0x0b, 0x64, 0x61, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x61,
	0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64, 0x61, 0x79, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x67, 0x0a, 0x13, 0x66, 0x69, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63,
	0x76, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x69, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x56, 0x45, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x66, 0x69, 0x78, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x76, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x22, 0x54, 0x0a,
	0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x36, 0x0a, 0x17, 0x72,
	0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x72, 0x65,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x79, 0x73, 0x22, 0x40, 0x0a, 0x09, 0x44, 0x61, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x44, 0x61, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x42, 0x2e, 0x0a, 0x19, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x72, 0x6f, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x5a, 0x11, 0x2e, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x3b, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_storage_config_proto_rawDescOnce sync.Once
	file_storage_config_proto_rawDescData = file_storage_config_proto_rawDesc
)

func file_storage_config_proto_rawDescGZIP() []byte {
	file_storage_config_proto_rawDescOnce.Do(func() {
		file_storage_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_storage_config_proto_rawDescData)
	})
	return file_storage_config_proto_rawDescData
}

var file_storage_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storage_config_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_storage_config_proto_goTypes = []any{
	(BannerConfig_Size)(0),                       // 0: storage.BannerConfig.Size
	(*LoginNotice)(nil),                          // 1: storage.LoginNotice
	(*BannerConfig)(nil),                         // 2: storage.BannerConfig
	(*PublicConfig)(nil),                         // 3: storage.PublicConfig
	(*AlertRetentionConfig)(nil),                 // 4: storage.AlertRetentionConfig
	(*DecommissionedClusterRetentionConfig)(nil), // 5: storage.DecommissionedClusterRetentionConfig
	(*ReportRetentionConfig)(nil),                // 6: storage.ReportRetentionConfig
	(*PrivateConfig)(nil),                        // 7: storage.PrivateConfig
	(*Config)(nil),                               // 8: storage.Config
	(*VulnerabilityExceptionConfig)(nil),         // 9: storage.VulnerabilityExceptionConfig
	(*AdministrationEventsConfig)(nil),           // 10: storage.AdministrationEventsConfig
	(*DayOption)(nil),                            // 11: storage.DayOption
	nil,                                          // 12: storage.DecommissionedClusterRetentionConfig.IgnoreClusterLabelsEntry
	(*VulnerabilityExceptionConfig_FixableCVEOptions)(nil), // 13: storage.VulnerabilityExceptionConfig.FixableCVEOptions
	(*VulnerabilityExceptionConfig_ExpiryOptions)(nil),     // 14: storage.VulnerabilityExceptionConfig.ExpiryOptions
	(*TelemetryConfiguration)(nil),                         // 15: storage.TelemetryConfiguration
	(*timestamppb.Timestamp)(nil),                          // 16: google.protobuf.Timestamp
}
var file_storage_config_proto_depIdxs = []int32{
	0,  // 0: storage.BannerConfig.size:type_name -> storage.BannerConfig.Size
	1,  // 1: storage.PublicConfig.login_notice:type_name -> storage.LoginNotice
	2,  // 2: storage.PublicConfig.header:type_name -> storage.BannerConfig
	2,  // 3: storage.PublicConfig.footer:type_name -> storage.BannerConfig
	15, // 4: storage.PublicConfig.telemetry:type_name -> storage.TelemetryConfiguration
	12, // 5: storage.DecommissionedClusterRetentionConfig.ignore_cluster_labels:type_name -> storage.DecommissionedClusterRetentionConfig.IgnoreClusterLabelsEntry
	16, // 6: storage.DecommissionedClusterRetentionConfig.last_updated:type_name -> google.protobuf.Timestamp
	16, // 7: storage.DecommissionedClusterRetentionConfig.created_at:type_name -> google.protobuf.Timestamp
	4,  // 8: storage.PrivateConfig.alert_config:type_name -> storage.AlertRetentionConfig
	5,  // 9: storage.PrivateConfig.decommissioned_cluster_retention:type_name -> storage.DecommissionedClusterRetentionConfig
	6,  // 10: storage.PrivateConfig.report_retention_config:type_name -> storage.ReportRetentionConfig
	9,  // 11: storage.PrivateConfig.vulnerability_exception_config:type_name -> storage.VulnerabilityExceptionConfig
	10, // 12: storage.PrivateConfig.administration_events_config:type_name -> storage.AdministrationEventsConfig
	3,  // 13: storage.Config.public_config:type_name -> storage.PublicConfig
	7,  // 14: storage.Config.private_config:type_name -> storage.PrivateConfig
	14, // 15: storage.VulnerabilityExceptionConfig.expiry_options:type_name -> storage.VulnerabilityExceptionConfig.ExpiryOptions
	11, // 16: storage.VulnerabilityExceptionConfig.ExpiryOptions.day_options:type_name -> storage.DayOption
	13, // 17: storage.VulnerabilityExceptionConfig.ExpiryOptions.fixable_cve_options:type_name -> storage.VulnerabilityExceptionConfig.FixableCVEOptions
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_storage_config_proto_init() }
func file_storage_config_proto_init() {
	if File_storage_config_proto != nil {
		return
	}
	file_storage_telemetry_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_storage_config_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*LoginNotice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_config_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*BannerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_config_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PublicConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_config_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AlertRetentionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_config_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DecommissionedClusterRetentionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_config_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ReportRetentionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_config_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PrivateConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_config_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_config_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*VulnerabilityExceptionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_config_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AdministrationEventsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_config_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DayOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_config_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*VulnerabilityExceptionConfig_FixableCVEOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_config_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*VulnerabilityExceptionConfig_ExpiryOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_storage_config_proto_msgTypes[6].OneofWrappers = []any{
		(*PrivateConfig_DEPRECATEDAlertRetentionDurationDays)(nil),
		(*PrivateConfig_AlertConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_storage_config_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_config_proto_goTypes,
		DependencyIndexes: file_storage_config_proto_depIdxs,
		EnumInfos:         file_storage_config_proto_enumTypes,
		MessageInfos:      file_storage_config_proto_msgTypes,
	}.Build()
	File_storage_config_proto = out.File
	file_storage_config_proto_rawDesc = nil
	file_storage_config_proto_goTypes = nil
	file_storage_config_proto_depIdxs = nil
}
