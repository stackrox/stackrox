// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage/system_info.proto

package storage

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	types "github.com/gogo/protobuf/types"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BackupInfo struct {
	BackupLastRunAt      *types.Timestamp `protobuf:"bytes,1,opt,name=backup_last_run_at,json=backupLastRunAt,proto3" json:"backup_last_run_at,omitempty"`
	Status               OperationStatus  `protobuf:"varint,2,opt,name=status,proto3,enum=storage.OperationStatus" json:"status,omitempty"`
	Requestor            *SlimUser        `protobuf:"bytes,3,opt,name=requestor,proto3" json:"requestor,omitempty" sql:"ignore_labels(User ID)"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BackupInfo) Reset()         { *m = BackupInfo{} }
func (m *BackupInfo) String() string { return proto.CompactTextString(m) }
func (*BackupInfo) ProtoMessage()    {}
func (*BackupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aea16395861e483e, []int{0}
}
func (m *BackupInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BackupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BackupInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BackupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupInfo.Merge(m, src)
}
func (m *BackupInfo) XXX_Size() int {
	return m.Size()
}
func (m *BackupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BackupInfo proto.InternalMessageInfo

func (m *BackupInfo) GetBackupLastRunAt() *types.Timestamp {
	if m != nil {
		return m.BackupLastRunAt
	}
	return nil
}

func (m *BackupInfo) GetStatus() OperationStatus {
	if m != nil {
		return m.Status
	}
	return OperationStatus_FAIL
}

func (m *BackupInfo) GetRequestor() *SlimUser {
	if m != nil {
		return m.Requestor
	}
	return nil
}

func (m *BackupInfo) MessageClone() proto.Message {
	return m.Clone()
}
func (m *BackupInfo) Clone() *BackupInfo {
	if m == nil {
		return nil
	}
	cloned := new(BackupInfo)
	*cloned = *m

	cloned.BackupLastRunAt = m.BackupLastRunAt.Clone()
	cloned.Requestor = m.Requestor.Clone()
	return cloned
}

type SystemInfo struct {
	BackupInfo           *BackupInfo `protobuf:"bytes,1,opt,name=backup_info,json=backupInfo,proto3" json:"backup_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SystemInfo) Reset()         { *m = SystemInfo{} }
func (m *SystemInfo) String() string { return proto.CompactTextString(m) }
func (*SystemInfo) ProtoMessage()    {}
func (*SystemInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_aea16395861e483e, []int{1}
}
func (m *SystemInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SystemInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SystemInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SystemInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemInfo.Merge(m, src)
}
func (m *SystemInfo) XXX_Size() int {
	return m.Size()
}
func (m *SystemInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SystemInfo proto.InternalMessageInfo

func (m *SystemInfo) GetBackupInfo() *BackupInfo {
	if m != nil {
		return m.BackupInfo
	}
	return nil
}

func (m *SystemInfo) MessageClone() proto.Message {
	return m.Clone()
}
func (m *SystemInfo) Clone() *SystemInfo {
	if m == nil {
		return nil
	}
	cloned := new(SystemInfo)
	*cloned = *m

	cloned.BackupInfo = m.BackupInfo.Clone()
	return cloned
}

func init() {
	proto.RegisterType((*BackupInfo)(nil), "storage.BackupInfo")
	proto.RegisterType((*SystemInfo)(nil), "storage.SystemInfo")
}

func init() { proto.RegisterFile("storage/system_info.proto", fileDescriptor_aea16395861e483e) }

var fileDescriptor_aea16395861e483e = []byte{
	// 338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x51, 0xcd, 0x4a, 0xf3, 0x40,
	0x14, 0xfd, 0xf2, 0x09, 0x15, 0xa7, 0xa0, 0x18, 0x5d, 0xa4, 0x45, 0xd2, 0x90, 0x55, 0xdd, 0x4c,
	0xa4, 0x76, 0xe5, 0xce, 0x20, 0x48, 0x41, 0x10, 0x53, 0xdd, 0xb8, 0x09, 0x93, 0x32, 0x0d, 0xa1,
	0x49, 0x6e, 0x3a, 0x73, 0x07, 0xf4, 0x4d, 0x7c, 0x24, 0x97, 0xae, 0x5d, 0x88, 0xd4, 0x37, 0xf0,
	0x09, 0x24, 0x93, 0x99, 0x76, 0x77, 0xe7, 0x9c, 0xfb, 0x73, 0xce, 0x19, 0x32, 0x90, 0x08, 0x82,
	0xe5, 0x3c, 0x92, 0xaf, 0x12, 0x79, 0x95, 0x16, 0xf5, 0x12, 0x68, 0x23, 0x00, 0xc1, 0xdd, 0x37,
	0xd4, 0x70, 0x94, 0x03, 0xe4, 0x25, 0x8f, 0x34, 0x9c, 0xa9, 0x65, 0x84, 0x45, 0xc5, 0x25, 0xb2,
	0xaa, 0xe9, 0x3a, 0x87, 0xbe, 0x5d, 0x02, 0x0d, 0x17, 0x0c, 0x0b, 0xa8, 0x53, 0x89, 0x0c, 0x95,
	0x34, 0xbc, 0x6b, 0x79, 0x25, 0xb9, 0x30, 0xd8, 0x69, 0x0e, 0x39, 0xe8, 0x32, 0x6a, 0xab, 0x0e,
	0x0d, 0x3f, 0x1d, 0x42, 0x62, 0xb6, 0x58, 0xa9, 0x66, 0x56, 0x2f, 0xc1, 0xbd, 0x25, 0x6e, 0xa6,
	0x5f, 0x69, 0xc9, 0x24, 0xa6, 0x42, 0xd5, 0x29, 0x43, 0xcf, 0x09, 0x9c, 0x71, 0x7f, 0x32, 0xa4,
	0x9d, 0x2c, 0x6a, 0x65, 0xd1, 0x47, 0x2b, 0x2b, 0x39, 0xea, 0xa6, 0xee, 0x98, 0xc4, 0x44, 0xd5,
	0xd7, 0xe8, 0x5e, 0x90, 0x5e, 0xa7, 0xc8, 0xfb, 0x1f, 0x38, 0xe3, 0xc3, 0x89, 0x47, 0x8d, 0x24,
	0x7a, 0x6f, 0x25, 0xcf, 0x35, 0x9f, 0x98, 0x3e, 0xf7, 0x81, 0x1c, 0x08, 0xbe, 0x56, 0xbc, 0xed,
	0xf3, 0xf6, 0xf4, 0xc5, 0xe3, 0xed, 0xd0, 0xbc, 0x2c, 0xaa, 0x27, 0xc9, 0x45, 0x1c, 0xfc, 0x7e,
	0x8d, 0xce, 0xe4, 0xba, 0xbc, 0x0a, 0x8b, 0xbc, 0x06, 0xc1, 0xd3, 0x92, 0x65, 0xbc, 0x94, 0xe3,
	0x96, 0x0c, 0x66, 0x37, 0xe7, 0x61, 0xb2, 0xdb, 0x12, 0xc6, 0x84, 0xcc, 0x75, 0xca, 0xda, 0xdb,
	0x94, 0xf4, 0x8d, 0xb7, 0x36, 0x73, 0x63, 0xea, 0x64, 0x7b, 0x62, 0x97, 0x42, 0x42, 0xb2, 0x6d,
	0x1d, 0x4f, 0xdf, 0x37, 0xbe, 0xf3, 0xb1, 0xf1, 0x9d, 0xef, 0x8d, 0xef, 0xbc, 0xfd, 0xf8, 0xff,
	0xc8, 0xa0, 0x00, 0x2a, 0x91, 0x2d, 0x56, 0x02, 0x5e, 0xba, 0x2c, 0xec, 0x8e, 0x67, 0xfb, 0x83,
	0x59, 0x4f, 0xe3, 0x97, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x35, 0x98, 0x8e, 0x5b, 0xee, 0x01,
	0x00, 0x00,
}

func (m *BackupInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BackupInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BackupInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Requestor != nil {
		{
			size, err := m.Requestor.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSystemInfo(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Status != 0 {
		i = encodeVarintSystemInfo(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x10
	}
	if m.BackupLastRunAt != nil {
		{
			size, err := m.BackupLastRunAt.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSystemInfo(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SystemInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SystemInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SystemInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BackupInfo != nil {
		{
			size, err := m.BackupInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSystemInfo(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintSystemInfo(dAtA []byte, offset int, v uint64) int {
	offset -= sovSystemInfo(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *BackupInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BackupLastRunAt != nil {
		l = m.BackupLastRunAt.Size()
		n += 1 + l + sovSystemInfo(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovSystemInfo(uint64(m.Status))
	}
	if m.Requestor != nil {
		l = m.Requestor.Size()
		n += 1 + l + sovSystemInfo(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SystemInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BackupInfo != nil {
		l = m.BackupInfo.Size()
		n += 1 + l + sovSystemInfo(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovSystemInfo(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSystemInfo(x uint64) (n int) {
	return sovSystemInfo(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *BackupInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSystemInfo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BackupInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BackupInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BackupLastRunAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSystemInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSystemInfo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSystemInfo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BackupLastRunAt == nil {
				m.BackupLastRunAt = &types.Timestamp{}
			}
			if err := m.BackupLastRunAt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSystemInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= OperationStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Requestor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSystemInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSystemInfo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSystemInfo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Requestor == nil {
				m.Requestor = &SlimUser{}
			}
			if err := m.Requestor.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSystemInfo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSystemInfo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SystemInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSystemInfo
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SystemInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SystemInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BackupInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSystemInfo
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSystemInfo
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSystemInfo
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BackupInfo == nil {
				m.BackupInfo = &BackupInfo{}
			}
			if err := m.BackupInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSystemInfo(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSystemInfo
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSystemInfo(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSystemInfo
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSystemInfo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSystemInfo
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSystemInfo
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSystemInfo
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSystemInfo
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSystemInfo        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSystemInfo          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSystemInfo = fmt.Errorf("proto: unexpected end of group")
)
