// Code generated by protoc-gen-go-json. DO NOT EDIT.

package storage

import (
	_ "bytes"
	fmt "fmt"
	strings "strings"
	_ "time"
	unsafe "unsafe"
)

func (m *ImageComponent) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *ImageComponent) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("id")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetName(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("name")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetVersion(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("version")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetLicense(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("license")
		buf.WriteString("\"")
		buf.WriteString(":")
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetPriority(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("priority")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "\"%d\"", x)
	}
	if x := m.GetSource(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("source")
		buf.WriteString("\"")
		buf.WriteString(":")
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetRiskScore(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("riskScore")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%f", x)
	}
	if x := m.GetTopCvss(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("topCvss")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%f", x)
	}
	if x := m.GetFixedBy(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("fixedBy")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetOperatingSystem(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("operatingSystem")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	buf.WriteString("}")
	return nil
}

func (m *ImageComponentV2) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *ImageComponentV2) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("id")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetName(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("name")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetVersion(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("version")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetLicense(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("license")
		buf.WriteString("\"")
		buf.WriteString(":")
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetPriority(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("priority")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "\"%d\"", x)
	}
	if x := m.GetSource(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("source")
		buf.WriteString("\"")
		buf.WriteString(":")
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetRiskScore(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("riskScore")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%f", x)
	}
	if x := m.GetTopCvss(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("topCvss")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%f", x)
	}
	if x := m.GetFixedBy(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("fixedBy")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetOperatingSystem(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("operatingSystem")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetImageId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("imageId")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetLayerIndex(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("layerIndex")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%d", x)
	}
	if x := m.GetLocation(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("location")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetArchitecture(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("architecture")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	buf.WriteString("}")
	return nil
}
