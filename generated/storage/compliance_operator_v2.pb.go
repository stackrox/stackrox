// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/compliance_operator_v2.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the role of the node within the cluster
type NodeRole int32

const (
	NodeRole_INFRA  NodeRole = 0
	NodeRole_WORKER NodeRole = 1
	NodeRole_MASTER NodeRole = 2
)

// Enum value maps for NodeRole.
var (
	NodeRole_name = map[int32]string{
		0: "INFRA",
		1: "WORKER",
		2: "MASTER",
	}
	NodeRole_value = map[string]int32{
		"INFRA":  0,
		"WORKER": 1,
		"MASTER": 2,
	}
)

func (x NodeRole) Enum() *NodeRole {
	p := new(NodeRole)
	*p = x
	return p
}

func (x NodeRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeRole) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_compliance_operator_v2_proto_enumTypes[0].Descriptor()
}

func (NodeRole) Type() protoreflect.EnumType {
	return &file_storage_compliance_operator_v2_proto_enumTypes[0]
}

func (x NodeRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Represents the scan type whether a node or platform scan.
type ScanType int32

const (
	ScanType_UNSET_SCAN_TYPE ScanType = 0
	ScanType_NODE_SCAN       ScanType = 1
	ScanType_PLATFORM_SCAN   ScanType = 2
)

// Enum value maps for ScanType.
var (
	ScanType_name = map[int32]string{
		0: "UNSET_SCAN_TYPE",
		1: "NODE_SCAN",
		2: "PLATFORM_SCAN",
	}
	ScanType_value = map[string]int32{
		"UNSET_SCAN_TYPE": 0,
		"NODE_SCAN":       1,
		"PLATFORM_SCAN":   2,
	}
)

func (x ScanType) Enum() *ScanType {
	p := new(ScanType)
	*p = x
	return p
}

func (x ScanType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScanType) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_compliance_operator_v2_proto_enumTypes[1].Descriptor()
}

func (ScanType) Type() protoreflect.EnumType {
	return &file_storage_compliance_operator_v2_proto_enumTypes[1]
}

func (x ScanType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Represents the severity of the rule
type RuleSeverity int32

const (
	RuleSeverity_UNSET_RULE_SEVERITY   RuleSeverity = 0
	RuleSeverity_UNKNOWN_RULE_SEVERITY RuleSeverity = 1
	RuleSeverity_INFO_RULE_SEVERITY    RuleSeverity = 2
	RuleSeverity_LOW_RULE_SEVERITY     RuleSeverity = 3
	RuleSeverity_MEDIUM_RULE_SEVERITY  RuleSeverity = 4
	RuleSeverity_HIGH_RULE_SEVERITY    RuleSeverity = 5
)

// Enum value maps for RuleSeverity.
var (
	RuleSeverity_name = map[int32]string{
		0: "UNSET_RULE_SEVERITY",
		1: "UNKNOWN_RULE_SEVERITY",
		2: "INFO_RULE_SEVERITY",
		3: "LOW_RULE_SEVERITY",
		4: "MEDIUM_RULE_SEVERITY",
		5: "HIGH_RULE_SEVERITY",
	}
	RuleSeverity_value = map[string]int32{
		"UNSET_RULE_SEVERITY":   0,
		"UNKNOWN_RULE_SEVERITY": 1,
		"INFO_RULE_SEVERITY":    2,
		"LOW_RULE_SEVERITY":     3,
		"MEDIUM_RULE_SEVERITY":  4,
		"HIGH_RULE_SEVERITY":    5,
	}
)

func (x RuleSeverity) Enum() *RuleSeverity {
	p := new(RuleSeverity)
	*p = x
	return p
}

func (x RuleSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RuleSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_compliance_operator_v2_proto_enumTypes[2].Descriptor()
}

func (RuleSeverity) Type() protoreflect.EnumType {
	return &file_storage_compliance_operator_v2_proto_enumTypes[2]
}

func (x RuleSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ComplianceOperatorCheckResultV2_CheckStatus int32

const (
	ComplianceOperatorCheckResultV2_UNSET          ComplianceOperatorCheckResultV2_CheckStatus = 0
	ComplianceOperatorCheckResultV2_PASS           ComplianceOperatorCheckResultV2_CheckStatus = 1
	ComplianceOperatorCheckResultV2_FAIL           ComplianceOperatorCheckResultV2_CheckStatus = 2
	ComplianceOperatorCheckResultV2_ERROR          ComplianceOperatorCheckResultV2_CheckStatus = 3
	ComplianceOperatorCheckResultV2_INFO           ComplianceOperatorCheckResultV2_CheckStatus = 4
	ComplianceOperatorCheckResultV2_MANUAL         ComplianceOperatorCheckResultV2_CheckStatus = 5
	ComplianceOperatorCheckResultV2_NOT_APPLICABLE ComplianceOperatorCheckResultV2_CheckStatus = 6
	ComplianceOperatorCheckResultV2_INCONSISTENT   ComplianceOperatorCheckResultV2_CheckStatus = 7
)

// Enum value maps for ComplianceOperatorCheckResultV2_CheckStatus.
var (
	ComplianceOperatorCheckResultV2_CheckStatus_name = map[int32]string{
		0: "UNSET",
		1: "PASS",
		2: "FAIL",
		3: "ERROR",
		4: "INFO",
		5: "MANUAL",
		6: "NOT_APPLICABLE",
		7: "INCONSISTENT",
	}
	ComplianceOperatorCheckResultV2_CheckStatus_value = map[string]int32{
		"UNSET":          0,
		"PASS":           1,
		"FAIL":           2,
		"ERROR":          3,
		"INFO":           4,
		"MANUAL":         5,
		"NOT_APPLICABLE": 6,
		"INCONSISTENT":   7,
	}
)

func (x ComplianceOperatorCheckResultV2_CheckStatus) Enum() *ComplianceOperatorCheckResultV2_CheckStatus {
	p := new(ComplianceOperatorCheckResultV2_CheckStatus)
	*p = x
	return p
}

func (x ComplianceOperatorCheckResultV2_CheckStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComplianceOperatorCheckResultV2_CheckStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_compliance_operator_v2_proto_enumTypes[3].Descriptor()
}

func (ComplianceOperatorCheckResultV2_CheckStatus) Type() protoreflect.EnumType {
	return &file_storage_compliance_operator_v2_proto_enumTypes[3]
}

func (x ComplianceOperatorCheckResultV2_CheckStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ComplianceOperatorReportStatus_RunState int32

const (
	ComplianceOperatorReportStatus_WAITING                     ComplianceOperatorReportStatus_RunState = 0
	ComplianceOperatorReportStatus_PREPARING                   ComplianceOperatorReportStatus_RunState = 1
	ComplianceOperatorReportStatus_GENERATED                   ComplianceOperatorReportStatus_RunState = 2
	ComplianceOperatorReportStatus_DELIVERED                   ComplianceOperatorReportStatus_RunState = 3
	ComplianceOperatorReportStatus_FAILURE                     ComplianceOperatorReportStatus_RunState = 4
	ComplianceOperatorReportStatus_PARTIAL_ERROR               ComplianceOperatorReportStatus_RunState = 5
	ComplianceOperatorReportStatus_PARTIAL_SCAN_ERROR_DOWNLOAD ComplianceOperatorReportStatus_RunState = 6
	ComplianceOperatorReportStatus_PARTIAL_SCAN_ERROR_EMAIL    ComplianceOperatorReportStatus_RunState = 7
)

// Enum value maps for ComplianceOperatorReportStatus_RunState.
var (
	ComplianceOperatorReportStatus_RunState_name = map[int32]string{
		0: "WAITING",
		1: "PREPARING",
		2: "GENERATED",
		3: "DELIVERED",
		4: "FAILURE",
		5: "PARTIAL_ERROR",
		6: "PARTIAL_SCAN_ERROR_DOWNLOAD",
		7: "PARTIAL_SCAN_ERROR_EMAIL",
	}
	ComplianceOperatorReportStatus_RunState_value = map[string]int32{
		"WAITING":                     0,
		"PREPARING":                   1,
		"GENERATED":                   2,
		"DELIVERED":                   3,
		"FAILURE":                     4,
		"PARTIAL_ERROR":               5,
		"PARTIAL_SCAN_ERROR_DOWNLOAD": 6,
		"PARTIAL_SCAN_ERROR_EMAIL":    7,
	}
)

func (x ComplianceOperatorReportStatus_RunState) Enum() *ComplianceOperatorReportStatus_RunState {
	p := new(ComplianceOperatorReportStatus_RunState)
	*p = x
	return p
}

func (x ComplianceOperatorReportStatus_RunState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComplianceOperatorReportStatus_RunState) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_compliance_operator_v2_proto_enumTypes[4].Descriptor()
}

func (ComplianceOperatorReportStatus_RunState) Type() protoreflect.EnumType {
	return &file_storage_compliance_operator_v2_proto_enumTypes[4]
}

func (x ComplianceOperatorReportStatus_RunState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ComplianceOperatorReportStatus_NotificationMethod int32

const (
	ComplianceOperatorReportStatus_EMAIL    ComplianceOperatorReportStatus_NotificationMethod = 0
	ComplianceOperatorReportStatus_DOWNLOAD ComplianceOperatorReportStatus_NotificationMethod = 1
)

// Enum value maps for ComplianceOperatorReportStatus_NotificationMethod.
var (
	ComplianceOperatorReportStatus_NotificationMethod_name = map[int32]string{
		0: "EMAIL",
		1: "DOWNLOAD",
	}
	ComplianceOperatorReportStatus_NotificationMethod_value = map[string]int32{
		"EMAIL":    0,
		"DOWNLOAD": 1,
	}
)

func (x ComplianceOperatorReportStatus_NotificationMethod) Enum() *ComplianceOperatorReportStatus_NotificationMethod {
	p := new(ComplianceOperatorReportStatus_NotificationMethod)
	*p = x
	return p
}

func (x ComplianceOperatorReportStatus_NotificationMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComplianceOperatorReportStatus_NotificationMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_compliance_operator_v2_proto_enumTypes[5].Descriptor()
}

func (ComplianceOperatorReportStatus_NotificationMethod) Type() protoreflect.EnumType {
	return &file_storage_compliance_operator_v2_proto_enumTypes[5]
}

func (x ComplianceOperatorReportStatus_NotificationMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ComplianceOperatorReportStatus_RunMethod int32

const (
	ComplianceOperatorReportStatus_ON_DEMAND ComplianceOperatorReportStatus_RunMethod = 0
	ComplianceOperatorReportStatus_SCHEDULED ComplianceOperatorReportStatus_RunMethod = 1
)

// Enum value maps for ComplianceOperatorReportStatus_RunMethod.
var (
	ComplianceOperatorReportStatus_RunMethod_name = map[int32]string{
		0: "ON_DEMAND",
		1: "SCHEDULED",
	}
	ComplianceOperatorReportStatus_RunMethod_value = map[string]int32{
		"ON_DEMAND": 0,
		"SCHEDULED": 1,
	}
)

func (x ComplianceOperatorReportStatus_RunMethod) Enum() *ComplianceOperatorReportStatus_RunMethod {
	p := new(ComplianceOperatorReportStatus_RunMethod)
	*p = x
	return p
}

func (x ComplianceOperatorReportStatus_RunMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComplianceOperatorReportStatus_RunMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_compliance_operator_v2_proto_enumTypes[6].Descriptor()
}

func (ComplianceOperatorReportStatus_RunMethod) Type() protoreflect.EnumType {
	return &file_storage_compliance_operator_v2_proto_enumTypes[6]
}

func (x ComplianceOperatorReportStatus_RunMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ProfileShim struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ProfileId    *string                `protobuf:"bytes,1,opt,name=profile_id,json=profileId"`
	xxx_hidden_ProfileRefId *string                `protobuf:"bytes,2,opt,name=profile_ref_id,json=profileRefId"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ProfileShim) Reset() {
	*x = ProfileShim{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileShim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileShim) ProtoMessage() {}

func (x *ProfileShim) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProfileShim) GetProfileId() string {
	if x != nil {
		if x.xxx_hidden_ProfileId != nil {
			return *x.xxx_hidden_ProfileId
		}
		return ""
	}
	return ""
}

func (x *ProfileShim) GetProfileRefId() string {
	if x != nil {
		if x.xxx_hidden_ProfileRefId != nil {
			return *x.xxx_hidden_ProfileRefId
		}
		return ""
	}
	return ""
}

func (x *ProfileShim) SetProfileId(v string) {
	x.xxx_hidden_ProfileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ProfileShim) SetProfileRefId(v string) {
	x.xxx_hidden_ProfileRefId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ProfileShim) HasProfileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ProfileShim) HasProfileRefId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ProfileShim) ClearProfileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ProfileId = nil
}

func (x *ProfileShim) ClearProfileRefId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ProfileRefId = nil
}

type ProfileShim_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ProfileId    *string
	ProfileRefId *string
}

func (b0 ProfileShim_builder) Build() *ProfileShim {
	m0 := &ProfileShim{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ProfileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ProfileId = b.ProfileId
	}
	if b.ProfileRefId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_ProfileRefId = b.ProfileRefId
	}
	return m0
}

// Next Tag: 15
type ComplianceOperatorProfileV2 struct {
	state                     protoimpl.MessageState               `protogen:"opaque.v1"`
	xxx_hidden_Id             *string                              `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_ProfileId      *string                              `protobuf:"bytes,2,opt,name=profile_id,json=profileId"`
	xxx_hidden_Name           *string                              `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_ProfileVersion *string                              `protobuf:"bytes,4,opt,name=profile_version,json=profileVersion"`
	xxx_hidden_ProductType    *string                              `protobuf:"bytes,5,opt,name=product_type,json=productType"`
	xxx_hidden_Standard       *string                              `protobuf:"bytes,6,opt,name=standard"`
	xxx_hidden_Labels         map[string]string                    `protobuf:"bytes,7,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Annotations    map[string]string                    `protobuf:"bytes,8,rep,name=annotations" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Description    *string                              `protobuf:"bytes,9,opt,name=description"`
	xxx_hidden_Rules          *[]*ComplianceOperatorProfileV2_Rule `protobuf:"bytes,10,rep,name=rules"`
	xxx_hidden_Product        *string                              `protobuf:"bytes,11,opt,name=product"`
	xxx_hidden_Title          *string                              `protobuf:"bytes,12,opt,name=title"`
	xxx_hidden_Values         []string                             `protobuf:"bytes,13,rep,name=values"`
	xxx_hidden_ClusterId      *string                              `protobuf:"bytes,14,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_ProfileRefId   *string                              `protobuf:"bytes,15,opt,name=profile_ref_id,json=profileRefId"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ComplianceOperatorProfileV2) Reset() {
	*x = ComplianceOperatorProfileV2{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorProfileV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorProfileV2) ProtoMessage() {}

func (x *ComplianceOperatorProfileV2) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorProfileV2) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfileV2) GetProfileId() string {
	if x != nil {
		if x.xxx_hidden_ProfileId != nil {
			return *x.xxx_hidden_ProfileId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfileV2) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfileV2) GetProfileVersion() string {
	if x != nil {
		if x.xxx_hidden_ProfileVersion != nil {
			return *x.xxx_hidden_ProfileVersion
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfileV2) GetProductType() string {
	if x != nil {
		if x.xxx_hidden_ProductType != nil {
			return *x.xxx_hidden_ProductType
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfileV2) GetStandard() string {
	if x != nil {
		if x.xxx_hidden_Standard != nil {
			return *x.xxx_hidden_Standard
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfileV2) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *ComplianceOperatorProfileV2) GetAnnotations() map[string]string {
	if x != nil {
		return x.xxx_hidden_Annotations
	}
	return nil
}

func (x *ComplianceOperatorProfileV2) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfileV2) GetRules() []*ComplianceOperatorProfileV2_Rule {
	if x != nil {
		if x.xxx_hidden_Rules != nil {
			return *x.xxx_hidden_Rules
		}
	}
	return nil
}

func (x *ComplianceOperatorProfileV2) GetProduct() string {
	if x != nil {
		if x.xxx_hidden_Product != nil {
			return *x.xxx_hidden_Product
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfileV2) GetTitle() string {
	if x != nil {
		if x.xxx_hidden_Title != nil {
			return *x.xxx_hidden_Title
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfileV2) GetValues() []string {
	if x != nil {
		return x.xxx_hidden_Values
	}
	return nil
}

func (x *ComplianceOperatorProfileV2) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfileV2) GetProfileRefId() string {
	if x != nil {
		if x.xxx_hidden_ProfileRefId != nil {
			return *x.xxx_hidden_ProfileRefId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfileV2) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 15)
}

func (x *ComplianceOperatorProfileV2) SetProfileId(v string) {
	x.xxx_hidden_ProfileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 15)
}

func (x *ComplianceOperatorProfileV2) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 15)
}

func (x *ComplianceOperatorProfileV2) SetProfileVersion(v string) {
	x.xxx_hidden_ProfileVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 15)
}

func (x *ComplianceOperatorProfileV2) SetProductType(v string) {
	x.xxx_hidden_ProductType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 15)
}

func (x *ComplianceOperatorProfileV2) SetStandard(v string) {
	x.xxx_hidden_Standard = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 15)
}

func (x *ComplianceOperatorProfileV2) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *ComplianceOperatorProfileV2) SetAnnotations(v map[string]string) {
	x.xxx_hidden_Annotations = v
}

func (x *ComplianceOperatorProfileV2) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 15)
}

func (x *ComplianceOperatorProfileV2) SetRules(v []*ComplianceOperatorProfileV2_Rule) {
	x.xxx_hidden_Rules = &v
}

func (x *ComplianceOperatorProfileV2) SetProduct(v string) {
	x.xxx_hidden_Product = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 15)
}

func (x *ComplianceOperatorProfileV2) SetTitle(v string) {
	x.xxx_hidden_Title = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 15)
}

func (x *ComplianceOperatorProfileV2) SetValues(v []string) {
	x.xxx_hidden_Values = v
}

func (x *ComplianceOperatorProfileV2) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 15)
}

func (x *ComplianceOperatorProfileV2) SetProfileRefId(v string) {
	x.xxx_hidden_ProfileRefId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 15)
}

func (x *ComplianceOperatorProfileV2) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorProfileV2) HasProfileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorProfileV2) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorProfileV2) HasProfileVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceOperatorProfileV2) HasProductType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ComplianceOperatorProfileV2) HasStandard() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ComplianceOperatorProfileV2) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *ComplianceOperatorProfileV2) HasProduct() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *ComplianceOperatorProfileV2) HasTitle() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *ComplianceOperatorProfileV2) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *ComplianceOperatorProfileV2) HasProfileRefId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *ComplianceOperatorProfileV2) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceOperatorProfileV2) ClearProfileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ProfileId = nil
}

func (x *ComplianceOperatorProfileV2) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceOperatorProfileV2) ClearProfileVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ProfileVersion = nil
}

func (x *ComplianceOperatorProfileV2) ClearProductType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ProductType = nil
}

func (x *ComplianceOperatorProfileV2) ClearStandard() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Standard = nil
}

func (x *ComplianceOperatorProfileV2) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Description = nil
}

func (x *ComplianceOperatorProfileV2) ClearProduct() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_Product = nil
}

func (x *ComplianceOperatorProfileV2) ClearTitle() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_Title = nil
}

func (x *ComplianceOperatorProfileV2) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceOperatorProfileV2) ClearProfileRefId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_ProfileRefId = nil
}

type ComplianceOperatorProfileV2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The primary key is name-profile_version as that is guaranteed unique in the operator and how
	// the profile is referenced in scans and settings
	Id             *string
	ProfileId      *string
	Name           *string
	ProfileVersion *string
	ProductType    *string
	Standard       *string
	Labels         map[string]string
	Annotations    map[string]string
	Description    *string
	Rules          []*ComplianceOperatorProfileV2_Rule
	Product        *string
	Title          *string
	Values         []string
	ClusterId      *string
	ProfileRefId   *string
}

func (b0 ComplianceOperatorProfileV2_builder) Build() *ComplianceOperatorProfileV2 {
	m0 := &ComplianceOperatorProfileV2{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 15)
		x.xxx_hidden_Id = b.Id
	}
	if b.ProfileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 15)
		x.xxx_hidden_ProfileId = b.ProfileId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 15)
		x.xxx_hidden_Name = b.Name
	}
	if b.ProfileVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 15)
		x.xxx_hidden_ProfileVersion = b.ProfileVersion
	}
	if b.ProductType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 15)
		x.xxx_hidden_ProductType = b.ProductType
	}
	if b.Standard != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 15)
		x.xxx_hidden_Standard = b.Standard
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Annotations = b.Annotations
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 15)
		x.xxx_hidden_Description = b.Description
	}
	x.xxx_hidden_Rules = &b.Rules
	if b.Product != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 15)
		x.xxx_hidden_Product = b.Product
	}
	if b.Title != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 15)
		x.xxx_hidden_Title = b.Title
	}
	x.xxx_hidden_Values = b.Values
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 15)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.ProfileRefId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 15)
		x.xxx_hidden_ProfileRefId = b.ProfileRefId
	}
	return m0
}

type ComplianceOperatorRuleV2 struct {
	state                   protoimpl.MessageState           `protogen:"opaque.v1"`
	xxx_hidden_Id           *string                          `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_RuleId       *string                          `protobuf:"bytes,2,opt,name=rule_id,json=ruleId"`
	xxx_hidden_Name         *string                          `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_RuleType     *string                          `protobuf:"bytes,4,opt,name=rule_type,json=ruleType"`
	xxx_hidden_Severity     RuleSeverity                     `protobuf:"varint,5,opt,name=severity,enum=storage.RuleSeverity"`
	xxx_hidden_Labels       map[string]string                `protobuf:"bytes,6,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Annotations  map[string]string                `protobuf:"bytes,7,rep,name=annotations" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Title        *string                          `protobuf:"bytes,8,opt,name=title"`
	xxx_hidden_Description  *string                          `protobuf:"bytes,9,opt,name=description"`
	xxx_hidden_Rationale    *string                          `protobuf:"bytes,10,opt,name=rationale"`
	xxx_hidden_Fixes        *[]*ComplianceOperatorRuleV2_Fix `protobuf:"bytes,11,rep,name=fixes"`
	xxx_hidden_Warning      *string                          `protobuf:"bytes,12,opt,name=warning"`
	xxx_hidden_Controls     *[]*RuleControls                 `protobuf:"bytes,13,rep,name=controls"`
	xxx_hidden_ClusterId    *string                          `protobuf:"bytes,14,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_RuleRefId    *string                          `protobuf:"bytes,15,opt,name=rule_ref_id,json=ruleRefId"`
	xxx_hidden_ParentRule   *string                          `protobuf:"bytes,16,opt,name=parent_rule,json=parentRule"`
	xxx_hidden_Instructions *string                          `protobuf:"bytes,17,opt,name=instructions"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ComplianceOperatorRuleV2) Reset() {
	*x = ComplianceOperatorRuleV2{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorRuleV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorRuleV2) ProtoMessage() {}

func (x *ComplianceOperatorRuleV2) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorRuleV2) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetRuleId() string {
	if x != nil {
		if x.xxx_hidden_RuleId != nil {
			return *x.xxx_hidden_RuleId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetRuleType() string {
	if x != nil {
		if x.xxx_hidden_RuleType != nil {
			return *x.xxx_hidden_RuleType
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetSeverity() RuleSeverity {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_Severity
		}
	}
	return RuleSeverity_UNSET_RULE_SEVERITY
}

func (x *ComplianceOperatorRuleV2) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *ComplianceOperatorRuleV2) GetAnnotations() map[string]string {
	if x != nil {
		return x.xxx_hidden_Annotations
	}
	return nil
}

func (x *ComplianceOperatorRuleV2) GetTitle() string {
	if x != nil {
		if x.xxx_hidden_Title != nil {
			return *x.xxx_hidden_Title
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetRationale() string {
	if x != nil {
		if x.xxx_hidden_Rationale != nil {
			return *x.xxx_hidden_Rationale
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetFixes() []*ComplianceOperatorRuleV2_Fix {
	if x != nil {
		if x.xxx_hidden_Fixes != nil {
			return *x.xxx_hidden_Fixes
		}
	}
	return nil
}

func (x *ComplianceOperatorRuleV2) GetWarning() string {
	if x != nil {
		if x.xxx_hidden_Warning != nil {
			return *x.xxx_hidden_Warning
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetControls() []*RuleControls {
	if x != nil {
		if x.xxx_hidden_Controls != nil {
			return *x.xxx_hidden_Controls
		}
	}
	return nil
}

func (x *ComplianceOperatorRuleV2) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetRuleRefId() string {
	if x != nil {
		if x.xxx_hidden_RuleRefId != nil {
			return *x.xxx_hidden_RuleRefId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetParentRule() string {
	if x != nil {
		if x.xxx_hidden_ParentRule != nil {
			return *x.xxx_hidden_ParentRule
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) GetInstructions() string {
	if x != nil {
		if x.xxx_hidden_Instructions != nil {
			return *x.xxx_hidden_Instructions
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRuleV2) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 17)
}

func (x *ComplianceOperatorRuleV2) SetRuleId(v string) {
	x.xxx_hidden_RuleId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 17)
}

func (x *ComplianceOperatorRuleV2) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 17)
}

func (x *ComplianceOperatorRuleV2) SetRuleType(v string) {
	x.xxx_hidden_RuleType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 17)
}

func (x *ComplianceOperatorRuleV2) SetSeverity(v RuleSeverity) {
	x.xxx_hidden_Severity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 17)
}

func (x *ComplianceOperatorRuleV2) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *ComplianceOperatorRuleV2) SetAnnotations(v map[string]string) {
	x.xxx_hidden_Annotations = v
}

func (x *ComplianceOperatorRuleV2) SetTitle(v string) {
	x.xxx_hidden_Title = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 17)
}

func (x *ComplianceOperatorRuleV2) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 17)
}

func (x *ComplianceOperatorRuleV2) SetRationale(v string) {
	x.xxx_hidden_Rationale = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 17)
}

func (x *ComplianceOperatorRuleV2) SetFixes(v []*ComplianceOperatorRuleV2_Fix) {
	x.xxx_hidden_Fixes = &v
}

func (x *ComplianceOperatorRuleV2) SetWarning(v string) {
	x.xxx_hidden_Warning = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 17)
}

func (x *ComplianceOperatorRuleV2) SetControls(v []*RuleControls) {
	x.xxx_hidden_Controls = &v
}

func (x *ComplianceOperatorRuleV2) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 17)
}

func (x *ComplianceOperatorRuleV2) SetRuleRefId(v string) {
	x.xxx_hidden_RuleRefId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 17)
}

func (x *ComplianceOperatorRuleV2) SetParentRule(v string) {
	x.xxx_hidden_ParentRule = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 17)
}

func (x *ComplianceOperatorRuleV2) SetInstructions(v string) {
	x.xxx_hidden_Instructions = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 16, 17)
}

func (x *ComplianceOperatorRuleV2) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorRuleV2) HasRuleId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorRuleV2) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorRuleV2) HasRuleType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceOperatorRuleV2) HasSeverity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ComplianceOperatorRuleV2) HasTitle() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ComplianceOperatorRuleV2) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *ComplianceOperatorRuleV2) HasRationale() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *ComplianceOperatorRuleV2) HasWarning() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *ComplianceOperatorRuleV2) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *ComplianceOperatorRuleV2) HasRuleRefId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *ComplianceOperatorRuleV2) HasParentRule() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *ComplianceOperatorRuleV2) HasInstructions() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 16)
}

func (x *ComplianceOperatorRuleV2) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceOperatorRuleV2) ClearRuleId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_RuleId = nil
}

func (x *ComplianceOperatorRuleV2) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceOperatorRuleV2) ClearRuleType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_RuleType = nil
}

func (x *ComplianceOperatorRuleV2) ClearSeverity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Severity = RuleSeverity_UNSET_RULE_SEVERITY
}

func (x *ComplianceOperatorRuleV2) ClearTitle() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Title = nil
}

func (x *ComplianceOperatorRuleV2) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Description = nil
}

func (x *ComplianceOperatorRuleV2) ClearRationale() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_Rationale = nil
}

func (x *ComplianceOperatorRuleV2) ClearWarning() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_Warning = nil
}

func (x *ComplianceOperatorRuleV2) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceOperatorRuleV2) ClearRuleRefId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_RuleRefId = nil
}

func (x *ComplianceOperatorRuleV2) ClearParentRule() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_ParentRule = nil
}

func (x *ComplianceOperatorRuleV2) ClearInstructions() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 16)
	x.xxx_hidden_Instructions = nil
}

type ComplianceOperatorRuleV2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id           *string
	RuleId       *string
	Name         *string
	RuleType     *string
	Severity     *RuleSeverity
	Labels       map[string]string
	Annotations  map[string]string
	Title        *string
	Description  *string
	Rationale    *string
	Fixes        []*ComplianceOperatorRuleV2_Fix
	Warning      *string
	Controls     []*RuleControls
	ClusterId    *string
	RuleRefId    *string
	ParentRule   *string
	Instructions *string
}

func (b0 ComplianceOperatorRuleV2_builder) Build() *ComplianceOperatorRuleV2 {
	m0 := &ComplianceOperatorRuleV2{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 17)
		x.xxx_hidden_Id = b.Id
	}
	if b.RuleId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 17)
		x.xxx_hidden_RuleId = b.RuleId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 17)
		x.xxx_hidden_Name = b.Name
	}
	if b.RuleType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 17)
		x.xxx_hidden_RuleType = b.RuleType
	}
	if b.Severity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 17)
		x.xxx_hidden_Severity = *b.Severity
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Annotations = b.Annotations
	if b.Title != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 17)
		x.xxx_hidden_Title = b.Title
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 17)
		x.xxx_hidden_Description = b.Description
	}
	if b.Rationale != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 17)
		x.xxx_hidden_Rationale = b.Rationale
	}
	x.xxx_hidden_Fixes = &b.Fixes
	if b.Warning != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 17)
		x.xxx_hidden_Warning = b.Warning
	}
	x.xxx_hidden_Controls = &b.Controls
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 17)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.RuleRefId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 17)
		x.xxx_hidden_RuleRefId = b.RuleRefId
	}
	if b.ParentRule != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 17)
		x.xxx_hidden_ParentRule = b.ParentRule
	}
	if b.Instructions != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 16, 17)
		x.xxx_hidden_Instructions = b.Instructions
	}
	return m0
}

// Next Tag: 4
type RuleControls struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Standard    *string                `protobuf:"bytes,1,opt,name=standard"`
	xxx_hidden_Controls    []string               `protobuf:"bytes,2,rep,name=controls"`
	xxx_hidden_Control     *string                `protobuf:"bytes,3,opt,name=control"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RuleControls) Reset() {
	*x = RuleControls{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleControls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleControls) ProtoMessage() {}

func (x *RuleControls) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RuleControls) GetStandard() string {
	if x != nil {
		if x.xxx_hidden_Standard != nil {
			return *x.xxx_hidden_Standard
		}
		return ""
	}
	return ""
}

// Deprecated: Marked as deprecated in storage/compliance_operator_v2.proto.
func (x *RuleControls) GetControls() []string {
	if x != nil {
		return x.xxx_hidden_Controls
	}
	return nil
}

func (x *RuleControls) GetControl() string {
	if x != nil {
		if x.xxx_hidden_Control != nil {
			return *x.xxx_hidden_Control
		}
		return ""
	}
	return ""
}

func (x *RuleControls) SetStandard(v string) {
	x.xxx_hidden_Standard = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

// Deprecated: Marked as deprecated in storage/compliance_operator_v2.proto.
func (x *RuleControls) SetControls(v []string) {
	x.xxx_hidden_Controls = v
}

func (x *RuleControls) SetControl(v string) {
	x.xxx_hidden_Control = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *RuleControls) HasStandard() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RuleControls) HasControl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *RuleControls) ClearStandard() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Standard = nil
}

func (x *RuleControls) ClearControl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Control = nil
}

type RuleControls_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Standard *string
	// Deprecated: Marked as deprecated in storage/compliance_operator_v2.proto.
	Controls []string
	Control  *string
}

func (b0 RuleControls_builder) Build() *RuleControls {
	m0 := &RuleControls{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Standard != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Standard = b.Standard
	}
	x.xxx_hidden_Controls = b.Controls
	if b.Control != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Control = b.Control
	}
	return m0
}

// Next Tag: 18
type ComplianceOperatorScanConfigurationV2 struct {
	state                             protoimpl.MessageState                                `protogen:"opaque.v1"`
	xxx_hidden_Id                     *string                                               `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_ScanConfigName         *string                                               `protobuf:"bytes,2,opt,name=scan_config_name,json=scanConfigName"`
	xxx_hidden_AutoApplyRemediations  bool                                                  `protobuf:"varint,3,opt,name=auto_apply_remediations,json=autoApplyRemediations"`
	xxx_hidden_AutoUpdateRemediations bool                                                  `protobuf:"varint,4,opt,name=auto_update_remediations,json=autoUpdateRemediations"`
	xxx_hidden_OneTimeScan            bool                                                  `protobuf:"varint,5,opt,name=one_time_scan,json=oneTimeScan"`
	xxx_hidden_Labels                 map[string]string                                     `protobuf:"bytes,6,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Annotations            map[string]string                                     `protobuf:"bytes,7,rep,name=annotations" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Profiles               *[]*ComplianceOperatorScanConfigurationV2_ProfileName `protobuf:"bytes,8,rep,name=profiles"`
	xxx_hidden_NodeRoles              []NodeRole                                            `protobuf:"varint,9,rep,packed,name=node_roles,json=nodeRoles,enum=storage.NodeRole"`
	xxx_hidden_StrictNodeScan         bool                                                  `protobuf:"varint,10,opt,name=strict_node_scan,json=strictNodeScan"`
	xxx_hidden_Schedule               *Schedule                                             `protobuf:"bytes,11,opt,name=schedule"`
	xxx_hidden_CreatedTime            *timestamppb.Timestamp                                `protobuf:"bytes,12,opt,name=created_time,json=createdTime"`
	xxx_hidden_LastUpdatedTime        *timestamppb.Timestamp                                `protobuf:"bytes,13,opt,name=last_updated_time,json=lastUpdatedTime"`
	xxx_hidden_ModifiedBy             *SlimUser                                             `protobuf:"bytes,14,opt,name=modified_by,json=modifiedBy"`
	xxx_hidden_Description            *string                                               `protobuf:"bytes,15,opt,name=description"`
	xxx_hidden_Clusters               *[]*ComplianceOperatorScanConfigurationV2_Cluster     `protobuf:"bytes,16,rep,name=clusters"`
	xxx_hidden_Notifiers              *[]*NotifierConfiguration                             `protobuf:"bytes,17,rep,name=notifiers"`
	XXX_raceDetectHookData            protoimpl.RaceDetectHookData
	XXX_presence                      [1]uint32
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *ComplianceOperatorScanConfigurationV2) Reset() {
	*x = ComplianceOperatorScanConfigurationV2{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorScanConfigurationV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorScanConfigurationV2) ProtoMessage() {}

func (x *ComplianceOperatorScanConfigurationV2) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorScanConfigurationV2) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanConfigurationV2) GetScanConfigName() string {
	if x != nil {
		if x.xxx_hidden_ScanConfigName != nil {
			return *x.xxx_hidden_ScanConfigName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanConfigurationV2) GetAutoApplyRemediations() bool {
	if x != nil {
		return x.xxx_hidden_AutoApplyRemediations
	}
	return false
}

func (x *ComplianceOperatorScanConfigurationV2) GetAutoUpdateRemediations() bool {
	if x != nil {
		return x.xxx_hidden_AutoUpdateRemediations
	}
	return false
}

func (x *ComplianceOperatorScanConfigurationV2) GetOneTimeScan() bool {
	if x != nil {
		return x.xxx_hidden_OneTimeScan
	}
	return false
}

func (x *ComplianceOperatorScanConfigurationV2) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *ComplianceOperatorScanConfigurationV2) GetAnnotations() map[string]string {
	if x != nil {
		return x.xxx_hidden_Annotations
	}
	return nil
}

func (x *ComplianceOperatorScanConfigurationV2) GetProfiles() []*ComplianceOperatorScanConfigurationV2_ProfileName {
	if x != nil {
		if x.xxx_hidden_Profiles != nil {
			return *x.xxx_hidden_Profiles
		}
	}
	return nil
}

func (x *ComplianceOperatorScanConfigurationV2) GetNodeRoles() []NodeRole {
	if x != nil {
		return x.xxx_hidden_NodeRoles
	}
	return nil
}

func (x *ComplianceOperatorScanConfigurationV2) GetStrictNodeScan() bool {
	if x != nil {
		return x.xxx_hidden_StrictNodeScan
	}
	return false
}

func (x *ComplianceOperatorScanConfigurationV2) GetSchedule() *Schedule {
	if x != nil {
		return x.xxx_hidden_Schedule
	}
	return nil
}

func (x *ComplianceOperatorScanConfigurationV2) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedTime
	}
	return nil
}

func (x *ComplianceOperatorScanConfigurationV2) GetLastUpdatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastUpdatedTime
	}
	return nil
}

func (x *ComplianceOperatorScanConfigurationV2) GetModifiedBy() *SlimUser {
	if x != nil {
		return x.xxx_hidden_ModifiedBy
	}
	return nil
}

func (x *ComplianceOperatorScanConfigurationV2) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanConfigurationV2) GetClusters() []*ComplianceOperatorScanConfigurationV2_Cluster {
	if x != nil {
		if x.xxx_hidden_Clusters != nil {
			return *x.xxx_hidden_Clusters
		}
	}
	return nil
}

func (x *ComplianceOperatorScanConfigurationV2) GetNotifiers() []*NotifierConfiguration {
	if x != nil {
		if x.xxx_hidden_Notifiers != nil {
			return *x.xxx_hidden_Notifiers
		}
	}
	return nil
}

func (x *ComplianceOperatorScanConfigurationV2) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 17)
}

func (x *ComplianceOperatorScanConfigurationV2) SetScanConfigName(v string) {
	x.xxx_hidden_ScanConfigName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 17)
}

func (x *ComplianceOperatorScanConfigurationV2) SetAutoApplyRemediations(v bool) {
	x.xxx_hidden_AutoApplyRemediations = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 17)
}

func (x *ComplianceOperatorScanConfigurationV2) SetAutoUpdateRemediations(v bool) {
	x.xxx_hidden_AutoUpdateRemediations = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 17)
}

func (x *ComplianceOperatorScanConfigurationV2) SetOneTimeScan(v bool) {
	x.xxx_hidden_OneTimeScan = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 17)
}

func (x *ComplianceOperatorScanConfigurationV2) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *ComplianceOperatorScanConfigurationV2) SetAnnotations(v map[string]string) {
	x.xxx_hidden_Annotations = v
}

func (x *ComplianceOperatorScanConfigurationV2) SetProfiles(v []*ComplianceOperatorScanConfigurationV2_ProfileName) {
	x.xxx_hidden_Profiles = &v
}

func (x *ComplianceOperatorScanConfigurationV2) SetNodeRoles(v []NodeRole) {
	x.xxx_hidden_NodeRoles = v
}

func (x *ComplianceOperatorScanConfigurationV2) SetStrictNodeScan(v bool) {
	x.xxx_hidden_StrictNodeScan = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 17)
}

func (x *ComplianceOperatorScanConfigurationV2) SetSchedule(v *Schedule) {
	x.xxx_hidden_Schedule = v
}

func (x *ComplianceOperatorScanConfigurationV2) SetCreatedTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedTime = v
}

func (x *ComplianceOperatorScanConfigurationV2) SetLastUpdatedTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastUpdatedTime = v
}

func (x *ComplianceOperatorScanConfigurationV2) SetModifiedBy(v *SlimUser) {
	x.xxx_hidden_ModifiedBy = v
}

func (x *ComplianceOperatorScanConfigurationV2) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 17)
}

func (x *ComplianceOperatorScanConfigurationV2) SetClusters(v []*ComplianceOperatorScanConfigurationV2_Cluster) {
	x.xxx_hidden_Clusters = &v
}

func (x *ComplianceOperatorScanConfigurationV2) SetNotifiers(v []*NotifierConfiguration) {
	x.xxx_hidden_Notifiers = &v
}

func (x *ComplianceOperatorScanConfigurationV2) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorScanConfigurationV2) HasScanConfigName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorScanConfigurationV2) HasAutoApplyRemediations() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorScanConfigurationV2) HasAutoUpdateRemediations() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceOperatorScanConfigurationV2) HasOneTimeScan() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ComplianceOperatorScanConfigurationV2) HasStrictNodeScan() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *ComplianceOperatorScanConfigurationV2) HasSchedule() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Schedule != nil
}

func (x *ComplianceOperatorScanConfigurationV2) HasCreatedTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedTime != nil
}

func (x *ComplianceOperatorScanConfigurationV2) HasLastUpdatedTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastUpdatedTime != nil
}

func (x *ComplianceOperatorScanConfigurationV2) HasModifiedBy() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ModifiedBy != nil
}

func (x *ComplianceOperatorScanConfigurationV2) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *ComplianceOperatorScanConfigurationV2) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceOperatorScanConfigurationV2) ClearScanConfigName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ScanConfigName = nil
}

func (x *ComplianceOperatorScanConfigurationV2) ClearAutoApplyRemediations() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_AutoApplyRemediations = false
}

func (x *ComplianceOperatorScanConfigurationV2) ClearAutoUpdateRemediations() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_AutoUpdateRemediations = false
}

func (x *ComplianceOperatorScanConfigurationV2) ClearOneTimeScan() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_OneTimeScan = false
}

func (x *ComplianceOperatorScanConfigurationV2) ClearStrictNodeScan() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_StrictNodeScan = false
}

func (x *ComplianceOperatorScanConfigurationV2) ClearSchedule() {
	x.xxx_hidden_Schedule = nil
}

func (x *ComplianceOperatorScanConfigurationV2) ClearCreatedTime() {
	x.xxx_hidden_CreatedTime = nil
}

func (x *ComplianceOperatorScanConfigurationV2) ClearLastUpdatedTime() {
	x.xxx_hidden_LastUpdatedTime = nil
}

func (x *ComplianceOperatorScanConfigurationV2) ClearModifiedBy() {
	x.xxx_hidden_ModifiedBy = nil
}

func (x *ComplianceOperatorScanConfigurationV2) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_Description = nil
}

type ComplianceOperatorScanConfigurationV2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                     *string
	ScanConfigName         *string
	AutoApplyRemediations  *bool
	AutoUpdateRemediations *bool
	OneTimeScan            *bool
	Labels                 map[string]string
	Annotations            map[string]string
	Profiles               []*ComplianceOperatorScanConfigurationV2_ProfileName
	NodeRoles              []NodeRole
	// Will be configurable via env var
	StrictNodeScan *bool
	// Starting point for schedule will probably have to build upon it
	Schedule        *Schedule
	CreatedTime     *timestamppb.Timestamp
	LastUpdatedTime *timestamppb.Timestamp
	// Most recent user to update the scan configurations
	ModifiedBy  *SlimUser
	Description *string
	Clusters    []*ComplianceOperatorScanConfigurationV2_Cluster
	Notifiers   []*NotifierConfiguration
}

func (b0 ComplianceOperatorScanConfigurationV2_builder) Build() *ComplianceOperatorScanConfigurationV2 {
	m0 := &ComplianceOperatorScanConfigurationV2{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 17)
		x.xxx_hidden_Id = b.Id
	}
	if b.ScanConfigName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 17)
		x.xxx_hidden_ScanConfigName = b.ScanConfigName
	}
	if b.AutoApplyRemediations != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 17)
		x.xxx_hidden_AutoApplyRemediations = *b.AutoApplyRemediations
	}
	if b.AutoUpdateRemediations != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 17)
		x.xxx_hidden_AutoUpdateRemediations = *b.AutoUpdateRemediations
	}
	if b.OneTimeScan != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 17)
		x.xxx_hidden_OneTimeScan = *b.OneTimeScan
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Annotations = b.Annotations
	x.xxx_hidden_Profiles = &b.Profiles
	x.xxx_hidden_NodeRoles = b.NodeRoles
	if b.StrictNodeScan != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 17)
		x.xxx_hidden_StrictNodeScan = *b.StrictNodeScan
	}
	x.xxx_hidden_Schedule = b.Schedule
	x.xxx_hidden_CreatedTime = b.CreatedTime
	x.xxx_hidden_LastUpdatedTime = b.LastUpdatedTime
	x.xxx_hidden_ModifiedBy = b.ModifiedBy
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 17)
		x.xxx_hidden_Description = b.Description
	}
	x.xxx_hidden_Clusters = &b.Clusters
	x.xxx_hidden_Notifiers = &b.Notifiers
	return m0
}

// Next Tag: 7
// Cluster and an error if necessary to handle cases where the scan configuration is
// unable to be applied to a cluster for whatever reason.
type ComplianceOperatorClusterScanConfigStatus struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id              *string                `protobuf:"bytes,6,opt,name=id"`
	xxx_hidden_ClusterId       *string                `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_ScanConfigId    *string                `protobuf:"bytes,2,opt,name=scan_config_id,json=scanConfigId"`
	xxx_hidden_Errors          []string               `protobuf:"bytes,3,rep,name=errors"`
	xxx_hidden_LastUpdatedTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_updated_time,json=lastUpdatedTime"`
	xxx_hidden_ClusterName     *string                `protobuf:"bytes,5,opt,name=cluster_name,json=clusterName"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ComplianceOperatorClusterScanConfigStatus) Reset() {
	*x = ComplianceOperatorClusterScanConfigStatus{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorClusterScanConfigStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorClusterScanConfigStatus) ProtoMessage() {}

func (x *ComplianceOperatorClusterScanConfigStatus) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorClusterScanConfigStatus) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorClusterScanConfigStatus) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorClusterScanConfigStatus) GetScanConfigId() string {
	if x != nil {
		if x.xxx_hidden_ScanConfigId != nil {
			return *x.xxx_hidden_ScanConfigId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorClusterScanConfigStatus) GetErrors() []string {
	if x != nil {
		return x.xxx_hidden_Errors
	}
	return nil
}

func (x *ComplianceOperatorClusterScanConfigStatus) GetLastUpdatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastUpdatedTime
	}
	return nil
}

func (x *ComplianceOperatorClusterScanConfigStatus) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorClusterScanConfigStatus) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *ComplianceOperatorClusterScanConfigStatus) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *ComplianceOperatorClusterScanConfigStatus) SetScanConfigId(v string) {
	x.xxx_hidden_ScanConfigId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *ComplianceOperatorClusterScanConfigStatus) SetErrors(v []string) {
	x.xxx_hidden_Errors = v
}

func (x *ComplianceOperatorClusterScanConfigStatus) SetLastUpdatedTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastUpdatedTime = v
}

func (x *ComplianceOperatorClusterScanConfigStatus) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *ComplianceOperatorClusterScanConfigStatus) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorClusterScanConfigStatus) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorClusterScanConfigStatus) HasScanConfigId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorClusterScanConfigStatus) HasLastUpdatedTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastUpdatedTime != nil
}

func (x *ComplianceOperatorClusterScanConfigStatus) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ComplianceOperatorClusterScanConfigStatus) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceOperatorClusterScanConfigStatus) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceOperatorClusterScanConfigStatus) ClearScanConfigId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ScanConfigId = nil
}

func (x *ComplianceOperatorClusterScanConfigStatus) ClearLastUpdatedTime() {
	x.xxx_hidden_LastUpdatedTime = nil
}

func (x *ComplianceOperatorClusterScanConfigStatus) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ClusterName = nil
}

type ComplianceOperatorClusterScanConfigStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id              *string
	ClusterId       *string
	ScanConfigId    *string
	Errors          []string
	LastUpdatedTime *timestamppb.Timestamp
	ClusterName     *string
}

func (b0 ComplianceOperatorClusterScanConfigStatus_builder) Build() *ComplianceOperatorClusterScanConfigStatus {
	m0 := &ComplianceOperatorClusterScanConfigStatus{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Id = b.Id
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.ScanConfigId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_ScanConfigId = b.ScanConfigId
	}
	x.xxx_hidden_Errors = b.Errors
	x.xxx_hidden_LastUpdatedTime = b.LastUpdatedTime
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	return m0
}

// Next Tag: 7
type ComplianceOperatorBenchmarkV2 struct {
	state                  protoimpl.MessageState                    `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                                   `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name        *string                                   `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Version     *string                                   `protobuf:"bytes,3,opt,name=version"`
	xxx_hidden_Description *string                                   `protobuf:"bytes,4,opt,name=description"`
	xxx_hidden_Provider    *string                                   `protobuf:"bytes,5,opt,name=provider"`
	xxx_hidden_ShortName   *string                                   `protobuf:"bytes,7,opt,name=short_name,json=shortName"`
	xxx_hidden_Profiles    *[]*ComplianceOperatorBenchmarkV2_Profile `protobuf:"bytes,8,rep,name=profiles"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceOperatorBenchmarkV2) Reset() {
	*x = ComplianceOperatorBenchmarkV2{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorBenchmarkV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorBenchmarkV2) ProtoMessage() {}

func (x *ComplianceOperatorBenchmarkV2) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorBenchmarkV2) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorBenchmarkV2) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorBenchmarkV2) GetVersion() string {
	if x != nil {
		if x.xxx_hidden_Version != nil {
			return *x.xxx_hidden_Version
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorBenchmarkV2) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorBenchmarkV2) GetProvider() string {
	if x != nil {
		if x.xxx_hidden_Provider != nil {
			return *x.xxx_hidden_Provider
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorBenchmarkV2) GetShortName() string {
	if x != nil {
		if x.xxx_hidden_ShortName != nil {
			return *x.xxx_hidden_ShortName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorBenchmarkV2) GetProfiles() []*ComplianceOperatorBenchmarkV2_Profile {
	if x != nil {
		if x.xxx_hidden_Profiles != nil {
			return *x.xxx_hidden_Profiles
		}
	}
	return nil
}

func (x *ComplianceOperatorBenchmarkV2) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *ComplianceOperatorBenchmarkV2) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *ComplianceOperatorBenchmarkV2) SetVersion(v string) {
	x.xxx_hidden_Version = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *ComplianceOperatorBenchmarkV2) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *ComplianceOperatorBenchmarkV2) SetProvider(v string) {
	x.xxx_hidden_Provider = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *ComplianceOperatorBenchmarkV2) SetShortName(v string) {
	x.xxx_hidden_ShortName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *ComplianceOperatorBenchmarkV2) SetProfiles(v []*ComplianceOperatorBenchmarkV2_Profile) {
	x.xxx_hidden_Profiles = &v
}

func (x *ComplianceOperatorBenchmarkV2) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorBenchmarkV2) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorBenchmarkV2) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorBenchmarkV2) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceOperatorBenchmarkV2) HasProvider() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ComplianceOperatorBenchmarkV2) HasShortName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ComplianceOperatorBenchmarkV2) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceOperatorBenchmarkV2) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceOperatorBenchmarkV2) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Version = nil
}

func (x *ComplianceOperatorBenchmarkV2) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Description = nil
}

func (x *ComplianceOperatorBenchmarkV2) ClearProvider() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Provider = nil
}

func (x *ComplianceOperatorBenchmarkV2) ClearShortName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ShortName = nil
}

type ComplianceOperatorBenchmarkV2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *string
	Name        *string
	Version     *string
	Description *string
	Provider    *string
	// This is extracted from the annotation.
	// Example: from https://control.compliance.openshift.io/CIS-OCP we should have CIS-OCP
	ShortName *string
	Profiles  []*ComplianceOperatorBenchmarkV2_Profile
}

func (b0 ComplianceOperatorBenchmarkV2_builder) Build() *ComplianceOperatorBenchmarkV2 {
	m0 := &ComplianceOperatorBenchmarkV2{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Version = b.Version
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Description = b.Description
	}
	if b.Provider != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_Provider = b.Provider
	}
	if b.ShortName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_ShortName = b.ShortName
	}
	x.xxx_hidden_Profiles = &b.Profiles
	return m0
}

// Next Tag: 21
// This object has been flattened vs joining with rule.  The rationale is to spend the time to query rule
// while processing results vs reporting them to the user.  Additionally, flattening it helps with the historical data
// as the rules can change without impacting the historical result.
type ComplianceOperatorCheckResultV2 struct {
	state                      protoimpl.MessageState                      `protogen:"opaque.v1"`
	xxx_hidden_Id              *string                                     `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_CheckId         *string                                     `protobuf:"bytes,2,opt,name=check_id,json=checkId"`
	xxx_hidden_CheckName       *string                                     `protobuf:"bytes,3,opt,name=check_name,json=checkName"`
	xxx_hidden_ClusterId       *string                                     `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_Status          ComplianceOperatorCheckResultV2_CheckStatus `protobuf:"varint,5,opt,name=status,enum=storage.ComplianceOperatorCheckResultV2_CheckStatus"`
	xxx_hidden_Severity        RuleSeverity                                `protobuf:"varint,6,opt,name=severity,enum=storage.RuleSeverity"`
	xxx_hidden_Description     *string                                     `protobuf:"bytes,7,opt,name=description"`
	xxx_hidden_Instructions    *string                                     `protobuf:"bytes,8,opt,name=instructions"`
	xxx_hidden_Labels          map[string]string                           `protobuf:"bytes,9,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Annotations     map[string]string                           `protobuf:"bytes,10,rep,name=annotations" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_CreatedTime     *timestamppb.Timestamp                      `protobuf:"bytes,11,opt,name=created_time,json=createdTime"`
	xxx_hidden_ValuesUsed      []string                                    `protobuf:"bytes,12,rep,name=valuesUsed"`
	xxx_hidden_Warnings        []string                                    `protobuf:"bytes,13,rep,name=warnings"`
	xxx_hidden_ScanName        *string                                     `protobuf:"bytes,14,opt,name=scan_name,json=scanName"`
	xxx_hidden_ClusterName     *string                                     `protobuf:"bytes,15,opt,name=cluster_name,json=clusterName"`
	xxx_hidden_ScanConfigName  *string                                     `protobuf:"bytes,16,opt,name=scan_config_name,json=scanConfigName"`
	xxx_hidden_Rationale       *string                                     `protobuf:"bytes,17,opt,name=rationale"`
	xxx_hidden_ScanRefId       *string                                     `protobuf:"bytes,18,opt,name=scan_ref_id,json=scanRefId"`
	xxx_hidden_RuleRefId       *string                                     `protobuf:"bytes,19,opt,name=rule_ref_id,json=ruleRefId"`
	xxx_hidden_LastStartedTime *timestamppb.Timestamp                      `protobuf:"bytes,20,opt,name=last_started_time,json=lastStartedTime"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ComplianceOperatorCheckResultV2) Reset() {
	*x = ComplianceOperatorCheckResultV2{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorCheckResultV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorCheckResultV2) ProtoMessage() {}

func (x *ComplianceOperatorCheckResultV2) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorCheckResultV2) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetCheckId() string {
	if x != nil {
		if x.xxx_hidden_CheckId != nil {
			return *x.xxx_hidden_CheckId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetCheckName() string {
	if x != nil {
		if x.xxx_hidden_CheckName != nil {
			return *x.xxx_hidden_CheckName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetStatus() ComplianceOperatorCheckResultV2_CheckStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_Status
		}
	}
	return ComplianceOperatorCheckResultV2_UNSET
}

func (x *ComplianceOperatorCheckResultV2) GetSeverity() RuleSeverity {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_Severity
		}
	}
	return RuleSeverity_UNSET_RULE_SEVERITY
}

func (x *ComplianceOperatorCheckResultV2) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetInstructions() string {
	if x != nil {
		if x.xxx_hidden_Instructions != nil {
			return *x.xxx_hidden_Instructions
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *ComplianceOperatorCheckResultV2) GetAnnotations() map[string]string {
	if x != nil {
		return x.xxx_hidden_Annotations
	}
	return nil
}

func (x *ComplianceOperatorCheckResultV2) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedTime
	}
	return nil
}

func (x *ComplianceOperatorCheckResultV2) GetValuesUsed() []string {
	if x != nil {
		return x.xxx_hidden_ValuesUsed
	}
	return nil
}

func (x *ComplianceOperatorCheckResultV2) GetWarnings() []string {
	if x != nil {
		return x.xxx_hidden_Warnings
	}
	return nil
}

func (x *ComplianceOperatorCheckResultV2) GetScanName() string {
	if x != nil {
		if x.xxx_hidden_ScanName != nil {
			return *x.xxx_hidden_ScanName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetScanConfigName() string {
	if x != nil {
		if x.xxx_hidden_ScanConfigName != nil {
			return *x.xxx_hidden_ScanConfigName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetRationale() string {
	if x != nil {
		if x.xxx_hidden_Rationale != nil {
			return *x.xxx_hidden_Rationale
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetScanRefId() string {
	if x != nil {
		if x.xxx_hidden_ScanRefId != nil {
			return *x.xxx_hidden_ScanRefId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetRuleRefId() string {
	if x != nil {
		if x.xxx_hidden_RuleRefId != nil {
			return *x.xxx_hidden_RuleRefId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResultV2) GetLastStartedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastStartedTime
	}
	return nil
}

func (x *ComplianceOperatorCheckResultV2) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 20)
}

func (x *ComplianceOperatorCheckResultV2) SetCheckId(v string) {
	x.xxx_hidden_CheckId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 20)
}

func (x *ComplianceOperatorCheckResultV2) SetCheckName(v string) {
	x.xxx_hidden_CheckName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 20)
}

func (x *ComplianceOperatorCheckResultV2) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 20)
}

func (x *ComplianceOperatorCheckResultV2) SetStatus(v ComplianceOperatorCheckResultV2_CheckStatus) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 20)
}

func (x *ComplianceOperatorCheckResultV2) SetSeverity(v RuleSeverity) {
	x.xxx_hidden_Severity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 20)
}

func (x *ComplianceOperatorCheckResultV2) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 20)
}

func (x *ComplianceOperatorCheckResultV2) SetInstructions(v string) {
	x.xxx_hidden_Instructions = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 20)
}

func (x *ComplianceOperatorCheckResultV2) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *ComplianceOperatorCheckResultV2) SetAnnotations(v map[string]string) {
	x.xxx_hidden_Annotations = v
}

func (x *ComplianceOperatorCheckResultV2) SetCreatedTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedTime = v
}

func (x *ComplianceOperatorCheckResultV2) SetValuesUsed(v []string) {
	x.xxx_hidden_ValuesUsed = v
}

func (x *ComplianceOperatorCheckResultV2) SetWarnings(v []string) {
	x.xxx_hidden_Warnings = v
}

func (x *ComplianceOperatorCheckResultV2) SetScanName(v string) {
	x.xxx_hidden_ScanName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 20)
}

func (x *ComplianceOperatorCheckResultV2) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 20)
}

func (x *ComplianceOperatorCheckResultV2) SetScanConfigName(v string) {
	x.xxx_hidden_ScanConfigName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 20)
}

func (x *ComplianceOperatorCheckResultV2) SetRationale(v string) {
	x.xxx_hidden_Rationale = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 16, 20)
}

func (x *ComplianceOperatorCheckResultV2) SetScanRefId(v string) {
	x.xxx_hidden_ScanRefId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 17, 20)
}

func (x *ComplianceOperatorCheckResultV2) SetRuleRefId(v string) {
	x.xxx_hidden_RuleRefId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 18, 20)
}

func (x *ComplianceOperatorCheckResultV2) SetLastStartedTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastStartedTime = v
}

func (x *ComplianceOperatorCheckResultV2) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorCheckResultV2) HasCheckId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorCheckResultV2) HasCheckName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorCheckResultV2) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceOperatorCheckResultV2) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ComplianceOperatorCheckResultV2) HasSeverity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ComplianceOperatorCheckResultV2) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ComplianceOperatorCheckResultV2) HasInstructions() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ComplianceOperatorCheckResultV2) HasCreatedTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedTime != nil
}

func (x *ComplianceOperatorCheckResultV2) HasScanName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *ComplianceOperatorCheckResultV2) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *ComplianceOperatorCheckResultV2) HasScanConfigName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *ComplianceOperatorCheckResultV2) HasRationale() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 16)
}

func (x *ComplianceOperatorCheckResultV2) HasScanRefId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 17)
}

func (x *ComplianceOperatorCheckResultV2) HasRuleRefId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 18)
}

func (x *ComplianceOperatorCheckResultV2) HasLastStartedTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastStartedTime != nil
}

func (x *ComplianceOperatorCheckResultV2) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceOperatorCheckResultV2) ClearCheckId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CheckId = nil
}

func (x *ComplianceOperatorCheckResultV2) ClearCheckName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CheckName = nil
}

func (x *ComplianceOperatorCheckResultV2) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceOperatorCheckResultV2) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Status = ComplianceOperatorCheckResultV2_UNSET
}

func (x *ComplianceOperatorCheckResultV2) ClearSeverity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Severity = RuleSeverity_UNSET_RULE_SEVERITY
}

func (x *ComplianceOperatorCheckResultV2) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Description = nil
}

func (x *ComplianceOperatorCheckResultV2) ClearInstructions() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Instructions = nil
}

func (x *ComplianceOperatorCheckResultV2) ClearCreatedTime() {
	x.xxx_hidden_CreatedTime = nil
}

func (x *ComplianceOperatorCheckResultV2) ClearScanName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_ScanName = nil
}

func (x *ComplianceOperatorCheckResultV2) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_ClusterName = nil
}

func (x *ComplianceOperatorCheckResultV2) ClearScanConfigName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_ScanConfigName = nil
}

func (x *ComplianceOperatorCheckResultV2) ClearRationale() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 16)
	x.xxx_hidden_Rationale = nil
}

func (x *ComplianceOperatorCheckResultV2) ClearScanRefId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 17)
	x.xxx_hidden_ScanRefId = nil
}

func (x *ComplianceOperatorCheckResultV2) ClearRuleRefId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 18)
	x.xxx_hidden_RuleRefId = nil
}

func (x *ComplianceOperatorCheckResultV2) ClearLastStartedTime() {
	x.xxx_hidden_LastStartedTime = nil
}

type ComplianceOperatorCheckResultV2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id             *string
	CheckId        *string
	CheckName      *string
	ClusterId      *string
	Status         *ComplianceOperatorCheckResultV2_CheckStatus
	Severity       *RuleSeverity
	Description    *string
	Instructions   *string
	Labels         map[string]string
	Annotations    map[string]string
	CreatedTime    *timestamppb.Timestamp
	ValuesUsed     []string
	Warnings       []string
	ScanName       *string
	ClusterName    *string
	ScanConfigName *string
	Rationale      *string
	ScanRefId      *string
	RuleRefId      *string
	// last_started_time is the last time the Scan resource was triggered
	LastStartedTime *timestamppb.Timestamp
}

func (b0 ComplianceOperatorCheckResultV2_builder) Build() *ComplianceOperatorCheckResultV2 {
	m0 := &ComplianceOperatorCheckResultV2{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 20)
		x.xxx_hidden_Id = b.Id
	}
	if b.CheckId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 20)
		x.xxx_hidden_CheckId = b.CheckId
	}
	if b.CheckName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 20)
		x.xxx_hidden_CheckName = b.CheckName
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 20)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 20)
		x.xxx_hidden_Status = *b.Status
	}
	if b.Severity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 20)
		x.xxx_hidden_Severity = *b.Severity
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 20)
		x.xxx_hidden_Description = b.Description
	}
	if b.Instructions != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 20)
		x.xxx_hidden_Instructions = b.Instructions
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Annotations = b.Annotations
	x.xxx_hidden_CreatedTime = b.CreatedTime
	x.xxx_hidden_ValuesUsed = b.ValuesUsed
	x.xxx_hidden_Warnings = b.Warnings
	if b.ScanName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 20)
		x.xxx_hidden_ScanName = b.ScanName
	}
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 20)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	if b.ScanConfigName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 20)
		x.xxx_hidden_ScanConfigName = b.ScanConfigName
	}
	if b.Rationale != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 16, 20)
		x.xxx_hidden_Rationale = b.Rationale
	}
	if b.ScanRefId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 17, 20)
		x.xxx_hidden_ScanRefId = b.ScanRefId
	}
	if b.RuleRefId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 18, 20)
		x.xxx_hidden_RuleRefId = b.RuleRefId
	}
	x.xxx_hidden_LastStartedTime = b.LastStartedTime
	return m0
}

// Next Tag: 4
// Scan Status object
type ScanStatus struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Phase       *string                `protobuf:"bytes,1,opt,name=phase"`
	xxx_hidden_Result      *string                `protobuf:"bytes,2,opt,name=result"`
	xxx_hidden_Warnings    *string                `protobuf:"bytes,3,opt,name=warnings"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ScanStatus) Reset() {
	*x = ScanStatus{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanStatus) ProtoMessage() {}

func (x *ScanStatus) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ScanStatus) GetPhase() string {
	if x != nil {
		if x.xxx_hidden_Phase != nil {
			return *x.xxx_hidden_Phase
		}
		return ""
	}
	return ""
}

func (x *ScanStatus) GetResult() string {
	if x != nil {
		if x.xxx_hidden_Result != nil {
			return *x.xxx_hidden_Result
		}
		return ""
	}
	return ""
}

func (x *ScanStatus) GetWarnings() string {
	if x != nil {
		if x.xxx_hidden_Warnings != nil {
			return *x.xxx_hidden_Warnings
		}
		return ""
	}
	return ""
}

func (x *ScanStatus) SetPhase(v string) {
	x.xxx_hidden_Phase = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ScanStatus) SetResult(v string) {
	x.xxx_hidden_Result = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ScanStatus) SetWarnings(v string) {
	x.xxx_hidden_Warnings = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ScanStatus) HasPhase() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ScanStatus) HasResult() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ScanStatus) HasWarnings() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ScanStatus) ClearPhase() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Phase = nil
}

func (x *ScanStatus) ClearResult() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Result = nil
}

func (x *ScanStatus) ClearWarnings() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Warnings = nil
}

type ScanStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Phase    *string
	Result   *string
	Warnings *string
}

func (b0 ScanStatus_builder) Build() *ScanStatus {
	m0 := &ScanStatus{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Phase != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Phase = b.Phase
	}
	if b.Result != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Result = b.Result
	}
	if b.Warnings != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Warnings = b.Warnings
	}
	return m0
}

// Next Tag: 18
// Scan object per cluster
type ComplianceOperatorScanV2 struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id               *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_ScanConfigName   *string                `protobuf:"bytes,2,opt,name=scan_config_name,json=scanConfigName"`
	xxx_hidden_ClusterId        *string                `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_Errors           *string                `protobuf:"bytes,4,opt,name=errors"`
	xxx_hidden_Profile          *ProfileShim           `protobuf:"bytes,5,opt,name=profile"`
	xxx_hidden_Labels           map[string]string      `protobuf:"bytes,6,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Annotations      map[string]string      `protobuf:"bytes,7,rep,name=annotations" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_ScanType         ScanType               `protobuf:"varint,8,opt,name=scan_type,json=scanType,enum=storage.ScanType"`
	xxx_hidden_NodeSelector     NodeRole               `protobuf:"varint,9,opt,name=node_selector,json=nodeSelector,enum=storage.NodeRole"`
	xxx_hidden_Status           *ScanStatus            `protobuf:"bytes,10,opt,name=status"`
	xxx_hidden_CreatedTime      *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_time,json=createdTime"`
	xxx_hidden_LastExecutedTime *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=last_executed_time,json=lastExecutedTime"`
	xxx_hidden_ScanName         *string                `protobuf:"bytes,13,opt,name=scan_name,json=scanName"`
	xxx_hidden_Warnings         *string                `protobuf:"bytes,14,opt,name=warnings"`
	xxx_hidden_ProductType      *string                `protobuf:"bytes,15,opt,name=product_type,json=productType"`
	xxx_hidden_ScanRefId        *string                `protobuf:"bytes,16,opt,name=scan_ref_id,json=scanRefId"`
	xxx_hidden_LastStartedTime  *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=last_started_time,json=lastStartedTime"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ComplianceOperatorScanV2) Reset() {
	*x = ComplianceOperatorScanV2{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorScanV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorScanV2) ProtoMessage() {}

func (x *ComplianceOperatorScanV2) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorScanV2) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanV2) GetScanConfigName() string {
	if x != nil {
		if x.xxx_hidden_ScanConfigName != nil {
			return *x.xxx_hidden_ScanConfigName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanV2) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanV2) GetErrors() string {
	if x != nil {
		if x.xxx_hidden_Errors != nil {
			return *x.xxx_hidden_Errors
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanV2) GetProfile() *ProfileShim {
	if x != nil {
		return x.xxx_hidden_Profile
	}
	return nil
}

func (x *ComplianceOperatorScanV2) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *ComplianceOperatorScanV2) GetAnnotations() map[string]string {
	if x != nil {
		return x.xxx_hidden_Annotations
	}
	return nil
}

func (x *ComplianceOperatorScanV2) GetScanType() ScanType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 7) {
			return x.xxx_hidden_ScanType
		}
	}
	return ScanType_UNSET_SCAN_TYPE
}

func (x *ComplianceOperatorScanV2) GetNodeSelector() NodeRole {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 8) {
			return x.xxx_hidden_NodeSelector
		}
	}
	return NodeRole_INFRA
}

func (x *ComplianceOperatorScanV2) GetStatus() *ScanStatus {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *ComplianceOperatorScanV2) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CreatedTime
	}
	return nil
}

func (x *ComplianceOperatorScanV2) GetLastExecutedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastExecutedTime
	}
	return nil
}

func (x *ComplianceOperatorScanV2) GetScanName() string {
	if x != nil {
		if x.xxx_hidden_ScanName != nil {
			return *x.xxx_hidden_ScanName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanV2) GetWarnings() string {
	if x != nil {
		if x.xxx_hidden_Warnings != nil {
			return *x.xxx_hidden_Warnings
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanV2) GetProductType() string {
	if x != nil {
		if x.xxx_hidden_ProductType != nil {
			return *x.xxx_hidden_ProductType
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanV2) GetScanRefId() string {
	if x != nil {
		if x.xxx_hidden_ScanRefId != nil {
			return *x.xxx_hidden_ScanRefId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanV2) GetLastStartedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastStartedTime
	}
	return nil
}

func (x *ComplianceOperatorScanV2) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 17)
}

func (x *ComplianceOperatorScanV2) SetScanConfigName(v string) {
	x.xxx_hidden_ScanConfigName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 17)
}

func (x *ComplianceOperatorScanV2) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 17)
}

func (x *ComplianceOperatorScanV2) SetErrors(v string) {
	x.xxx_hidden_Errors = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 17)
}

func (x *ComplianceOperatorScanV2) SetProfile(v *ProfileShim) {
	x.xxx_hidden_Profile = v
}

func (x *ComplianceOperatorScanV2) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *ComplianceOperatorScanV2) SetAnnotations(v map[string]string) {
	x.xxx_hidden_Annotations = v
}

func (x *ComplianceOperatorScanV2) SetScanType(v ScanType) {
	x.xxx_hidden_ScanType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 17)
}

func (x *ComplianceOperatorScanV2) SetNodeSelector(v NodeRole) {
	x.xxx_hidden_NodeSelector = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 17)
}

func (x *ComplianceOperatorScanV2) SetStatus(v *ScanStatus) {
	x.xxx_hidden_Status = v
}

func (x *ComplianceOperatorScanV2) SetCreatedTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_CreatedTime = v
}

func (x *ComplianceOperatorScanV2) SetLastExecutedTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastExecutedTime = v
}

func (x *ComplianceOperatorScanV2) SetScanName(v string) {
	x.xxx_hidden_ScanName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 17)
}

func (x *ComplianceOperatorScanV2) SetWarnings(v string) {
	x.xxx_hidden_Warnings = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 17)
}

func (x *ComplianceOperatorScanV2) SetProductType(v string) {
	x.xxx_hidden_ProductType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 17)
}

func (x *ComplianceOperatorScanV2) SetScanRefId(v string) {
	x.xxx_hidden_ScanRefId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 17)
}

func (x *ComplianceOperatorScanV2) SetLastStartedTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastStartedTime = v
}

func (x *ComplianceOperatorScanV2) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorScanV2) HasScanConfigName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorScanV2) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorScanV2) HasErrors() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceOperatorScanV2) HasProfile() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Profile != nil
}

func (x *ComplianceOperatorScanV2) HasScanType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ComplianceOperatorScanV2) HasNodeSelector() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *ComplianceOperatorScanV2) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *ComplianceOperatorScanV2) HasCreatedTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CreatedTime != nil
}

func (x *ComplianceOperatorScanV2) HasLastExecutedTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastExecutedTime != nil
}

func (x *ComplianceOperatorScanV2) HasScanName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *ComplianceOperatorScanV2) HasWarnings() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *ComplianceOperatorScanV2) HasProductType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *ComplianceOperatorScanV2) HasScanRefId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *ComplianceOperatorScanV2) HasLastStartedTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastStartedTime != nil
}

func (x *ComplianceOperatorScanV2) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceOperatorScanV2) ClearScanConfigName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ScanConfigName = nil
}

func (x *ComplianceOperatorScanV2) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceOperatorScanV2) ClearErrors() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Errors = nil
}

func (x *ComplianceOperatorScanV2) ClearProfile() {
	x.xxx_hidden_Profile = nil
}

func (x *ComplianceOperatorScanV2) ClearScanType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_ScanType = ScanType_UNSET_SCAN_TYPE
}

func (x *ComplianceOperatorScanV2) ClearNodeSelector() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_NodeSelector = NodeRole_INFRA
}

func (x *ComplianceOperatorScanV2) ClearStatus() {
	x.xxx_hidden_Status = nil
}

func (x *ComplianceOperatorScanV2) ClearCreatedTime() {
	x.xxx_hidden_CreatedTime = nil
}

func (x *ComplianceOperatorScanV2) ClearLastExecutedTime() {
	x.xxx_hidden_LastExecutedTime = nil
}

func (x *ComplianceOperatorScanV2) ClearScanName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_ScanName = nil
}

func (x *ComplianceOperatorScanV2) ClearWarnings() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_Warnings = nil
}

func (x *ComplianceOperatorScanV2) ClearProductType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_ProductType = nil
}

func (x *ComplianceOperatorScanV2) ClearScanRefId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_ScanRefId = nil
}

func (x *ComplianceOperatorScanV2) ClearLastStartedTime() {
	x.xxx_hidden_LastStartedTime = nil
}

type ComplianceOperatorScanV2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id               *string
	ScanConfigName   *string
	ClusterId        *string
	Errors           *string
	Profile          *ProfileShim
	Labels           map[string]string
	Annotations      map[string]string
	ScanType         *ScanType
	NodeSelector     *NodeRole
	Status           *ScanStatus
	CreatedTime      *timestamppb.Timestamp
	LastExecutedTime *timestamppb.Timestamp
	ScanName         *string
	Warnings         *string
	ProductType      *string
	ScanRefId        *string
	// last_started_time is the last time the Scan resource was triggered
	LastStartedTime *timestamppb.Timestamp
}

func (b0 ComplianceOperatorScanV2_builder) Build() *ComplianceOperatorScanV2 {
	m0 := &ComplianceOperatorScanV2{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 17)
		x.xxx_hidden_Id = b.Id
	}
	if b.ScanConfigName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 17)
		x.xxx_hidden_ScanConfigName = b.ScanConfigName
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 17)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.Errors != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 17)
		x.xxx_hidden_Errors = b.Errors
	}
	x.xxx_hidden_Profile = b.Profile
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Annotations = b.Annotations
	if b.ScanType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 17)
		x.xxx_hidden_ScanType = *b.ScanType
	}
	if b.NodeSelector != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 17)
		x.xxx_hidden_NodeSelector = *b.NodeSelector
	}
	x.xxx_hidden_Status = b.Status
	x.xxx_hidden_CreatedTime = b.CreatedTime
	x.xxx_hidden_LastExecutedTime = b.LastExecutedTime
	if b.ScanName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 17)
		x.xxx_hidden_ScanName = b.ScanName
	}
	if b.Warnings != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 17)
		x.xxx_hidden_Warnings = b.Warnings
	}
	if b.ProductType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 17)
		x.xxx_hidden_ProductType = b.ProductType
	}
	if b.ScanRefId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 17)
		x.xxx_hidden_ScanRefId = b.ScanRefId
	}
	x.xxx_hidden_LastStartedTime = b.LastStartedTime
	return m0
}

// ComplianceOperatorScanSettingBindingV2 associates a scan setting with one or more compliance profiles
// Next Tag: 9
type ComplianceOperatorScanSettingBindingV2 struct {
	state                      protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Id              *string                   `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name            *string                   `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_ClusterId       *string                   `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_ProfileNames    []string                  `protobuf:"bytes,4,rep,name=profile_names,json=profileNames"`
	xxx_hidden_ScanSettingName *string                   `protobuf:"bytes,5,opt,name=scan_setting_name,json=scanSettingName"`
	xxx_hidden_Labels          map[string]string         `protobuf:"bytes,7,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Annotations     map[string]string         `protobuf:"bytes,8,rep,name=annotations" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Status          *ComplianceOperatorStatus `protobuf:"bytes,9,opt,name=status"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ComplianceOperatorScanSettingBindingV2) Reset() {
	*x = ComplianceOperatorScanSettingBindingV2{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorScanSettingBindingV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorScanSettingBindingV2) ProtoMessage() {}

func (x *ComplianceOperatorScanSettingBindingV2) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorScanSettingBindingV2) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanSettingBindingV2) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanSettingBindingV2) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanSettingBindingV2) GetProfileNames() []string {
	if x != nil {
		return x.xxx_hidden_ProfileNames
	}
	return nil
}

func (x *ComplianceOperatorScanSettingBindingV2) GetScanSettingName() string {
	if x != nil {
		if x.xxx_hidden_ScanSettingName != nil {
			return *x.xxx_hidden_ScanSettingName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanSettingBindingV2) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *ComplianceOperatorScanSettingBindingV2) GetAnnotations() map[string]string {
	if x != nil {
		return x.xxx_hidden_Annotations
	}
	return nil
}

func (x *ComplianceOperatorScanSettingBindingV2) GetStatus() *ComplianceOperatorStatus {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *ComplianceOperatorScanSettingBindingV2) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *ComplianceOperatorScanSettingBindingV2) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *ComplianceOperatorScanSettingBindingV2) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *ComplianceOperatorScanSettingBindingV2) SetProfileNames(v []string) {
	x.xxx_hidden_ProfileNames = v
}

func (x *ComplianceOperatorScanSettingBindingV2) SetScanSettingName(v string) {
	x.xxx_hidden_ScanSettingName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *ComplianceOperatorScanSettingBindingV2) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *ComplianceOperatorScanSettingBindingV2) SetAnnotations(v map[string]string) {
	x.xxx_hidden_Annotations = v
}

func (x *ComplianceOperatorScanSettingBindingV2) SetStatus(v *ComplianceOperatorStatus) {
	x.xxx_hidden_Status = v
}

func (x *ComplianceOperatorScanSettingBindingV2) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorScanSettingBindingV2) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorScanSettingBindingV2) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorScanSettingBindingV2) HasScanSettingName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ComplianceOperatorScanSettingBindingV2) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *ComplianceOperatorScanSettingBindingV2) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceOperatorScanSettingBindingV2) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceOperatorScanSettingBindingV2) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceOperatorScanSettingBindingV2) ClearScanSettingName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ScanSettingName = nil
}

func (x *ComplianceOperatorScanSettingBindingV2) ClearStatus() {
	x.xxx_hidden_Status = nil
}

type ComplianceOperatorScanSettingBindingV2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id              *string
	Name            *string
	ClusterId       *string
	ProfileNames    []string
	ScanSettingName *string
	Labels          map[string]string
	Annotations     map[string]string
	Status          *ComplianceOperatorStatus
}

func (b0 ComplianceOperatorScanSettingBindingV2_builder) Build() *ComplianceOperatorScanSettingBindingV2 {
	m0 := &ComplianceOperatorScanSettingBindingV2{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_Name = b.Name
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	x.xxx_hidden_ProfileNames = b.ProfileNames
	if b.ScanSettingName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_ScanSettingName = b.ScanSettingName
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Annotations = b.Annotations
	x.xxx_hidden_Status = b.Status
	return m0
}

// Next Tag: 6
// ComplianceOperatorCondition represents an observation of status conditions.
type ComplianceOperatorCondition struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type               *string                `protobuf:"bytes,1,opt,name=type"`
	xxx_hidden_Status             *string                `protobuf:"bytes,2,opt,name=status"`
	xxx_hidden_Reason             *string                `protobuf:"bytes,3,opt,name=reason"`
	xxx_hidden_Message            *string                `protobuf:"bytes,4,opt,name=message"`
	xxx_hidden_LastTransitionTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_transition_time,json=lastTransitionTime"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ComplianceOperatorCondition) Reset() {
	*x = ComplianceOperatorCondition{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorCondition) ProtoMessage() {}

func (x *ComplianceOperatorCondition) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorCondition) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCondition) GetStatus() string {
	if x != nil {
		if x.xxx_hidden_Status != nil {
			return *x.xxx_hidden_Status
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCondition) GetReason() string {
	if x != nil {
		if x.xxx_hidden_Reason != nil {
			return *x.xxx_hidden_Reason
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCondition) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCondition) GetLastTransitionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastTransitionTime
	}
	return nil
}

func (x *ComplianceOperatorCondition) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *ComplianceOperatorCondition) SetStatus(v string) {
	x.xxx_hidden_Status = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ComplianceOperatorCondition) SetReason(v string) {
	x.xxx_hidden_Reason = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *ComplianceOperatorCondition) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ComplianceOperatorCondition) SetLastTransitionTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastTransitionTime = v
}

func (x *ComplianceOperatorCondition) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorCondition) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorCondition) HasReason() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorCondition) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceOperatorCondition) HasLastTransitionTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastTransitionTime != nil
}

func (x *ComplianceOperatorCondition) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Type = nil
}

func (x *ComplianceOperatorCondition) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Status = nil
}

func (x *ComplianceOperatorCondition) ClearReason() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Reason = nil
}

func (x *ComplianceOperatorCondition) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Message = nil
}

func (x *ComplianceOperatorCondition) ClearLastTransitionTime() {
	x.xxx_hidden_LastTransitionTime = nil
}

type ComplianceOperatorCondition_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type               *string
	Status             *string
	Reason             *string
	Message            *string
	LastTransitionTime *timestamppb.Timestamp
}

func (b0 ComplianceOperatorCondition_builder) Build() *ComplianceOperatorCondition {
	m0 := &ComplianceOperatorCondition{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Type = b.Type
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Status = b.Status
	}
	if b.Reason != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Reason = b.Reason
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Message = b.Message
	}
	x.xxx_hidden_LastTransitionTime = b.LastTransitionTime
	return m0
}

// Next Tag: 5
// ComplianceOperatorStatus represents an observation of an object's status.
type ComplianceOperatorStatus struct {
	state                   protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_Phase        *string                         `protobuf:"bytes,1,opt,name=phase"`
	xxx_hidden_Result       *string                         `protobuf:"bytes,2,opt,name=result"`
	xxx_hidden_ErrorMessage *string                         `protobuf:"bytes,3,opt,name=error_message,json=errorMessage"`
	xxx_hidden_Conditions   *[]*ComplianceOperatorCondition `protobuf:"bytes,4,rep,name=conditions"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ComplianceOperatorStatus) Reset() {
	*x = ComplianceOperatorStatus{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorStatus) ProtoMessage() {}

func (x *ComplianceOperatorStatus) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorStatus) GetPhase() string {
	if x != nil {
		if x.xxx_hidden_Phase != nil {
			return *x.xxx_hidden_Phase
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorStatus) GetResult() string {
	if x != nil {
		if x.xxx_hidden_Result != nil {
			return *x.xxx_hidden_Result
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorStatus) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorStatus) GetConditions() []*ComplianceOperatorCondition {
	if x != nil {
		if x.xxx_hidden_Conditions != nil {
			return *x.xxx_hidden_Conditions
		}
	}
	return nil
}

func (x *ComplianceOperatorStatus) SetPhase(v string) {
	x.xxx_hidden_Phase = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ComplianceOperatorStatus) SetResult(v string) {
	x.xxx_hidden_Result = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ComplianceOperatorStatus) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ComplianceOperatorStatus) SetConditions(v []*ComplianceOperatorCondition) {
	x.xxx_hidden_Conditions = &v
}

func (x *ComplianceOperatorStatus) HasPhase() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorStatus) HasResult() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorStatus) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorStatus) ClearPhase() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Phase = nil
}

func (x *ComplianceOperatorStatus) ClearResult() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Result = nil
}

func (x *ComplianceOperatorStatus) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ErrorMessage = nil
}

type ComplianceOperatorStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Phase        *string
	Result       *string
	ErrorMessage *string
	Conditions   []*ComplianceOperatorCondition
}

func (b0 ComplianceOperatorStatus_builder) Build() *ComplianceOperatorStatus {
	m0 := &ComplianceOperatorStatus{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Phase != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Phase = b.Phase
	}
	if b.Result != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Result = b.Result
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	x.xxx_hidden_Conditions = &b.Conditions
	return m0
}

// Next Tag: 5
// ComplianceOperatorSuiteV2 represents scan status
type ComplianceOperatorSuiteV2 struct {
	state                  protoimpl.MessageState    `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                   `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name        *string                   `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_ClusterId   *string                   `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_Status      *ComplianceOperatorStatus `protobuf:"bytes,4,opt,name=status"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceOperatorSuiteV2) Reset() {
	*x = ComplianceOperatorSuiteV2{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorSuiteV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorSuiteV2) ProtoMessage() {}

func (x *ComplianceOperatorSuiteV2) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorSuiteV2) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorSuiteV2) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorSuiteV2) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorSuiteV2) GetStatus() *ComplianceOperatorStatus {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *ComplianceOperatorSuiteV2) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ComplianceOperatorSuiteV2) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ComplianceOperatorSuiteV2) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ComplianceOperatorSuiteV2) SetStatus(v *ComplianceOperatorStatus) {
	x.xxx_hidden_Status = v
}

func (x *ComplianceOperatorSuiteV2) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorSuiteV2) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorSuiteV2) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorSuiteV2) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *ComplianceOperatorSuiteV2) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceOperatorSuiteV2) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceOperatorSuiteV2) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceOperatorSuiteV2) ClearStatus() {
	x.xxx_hidden_Status = nil
}

type ComplianceOperatorSuiteV2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id        *string
	Name      *string
	ClusterId *string
	Status    *ComplianceOperatorStatus
}

func (b0 ComplianceOperatorSuiteV2_builder) Build() *ComplianceOperatorSuiteV2 {
	m0 := &ComplianceOperatorSuiteV2{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Name = b.Name
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	x.xxx_hidden_Status = b.Status
	return m0
}

// Next Tag: 9
type ComplianceOperatorRemediationV2 struct {
	state                                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id                        *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name                      *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_ComplianceCheckResultName *string                `protobuf:"bytes,3,opt,name=compliance_check_result_name,json=complianceCheckResultName"`
	xxx_hidden_Apply                     bool                   `protobuf:"varint,4,opt,name=apply"`
	xxx_hidden_CurrentObject             *string                `protobuf:"bytes,5,opt,name=current_object,json=currentObject"`
	xxx_hidden_OutdatedObject            *string                `protobuf:"bytes,6,opt,name=outdated_object,json=outdatedObject"`
	xxx_hidden_EnforcementType           *string                `protobuf:"bytes,7,opt,name=enforcement_type,json=enforcementType"`
	xxx_hidden_ClusterId                 *string                `protobuf:"bytes,8,opt,name=cluster_id,json=clusterId"`
	XXX_raceDetectHookData               protoimpl.RaceDetectHookData
	XXX_presence                         [1]uint32
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *ComplianceOperatorRemediationV2) Reset() {
	*x = ComplianceOperatorRemediationV2{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorRemediationV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorRemediationV2) ProtoMessage() {}

func (x *ComplianceOperatorRemediationV2) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorRemediationV2) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRemediationV2) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRemediationV2) GetComplianceCheckResultName() string {
	if x != nil {
		if x.xxx_hidden_ComplianceCheckResultName != nil {
			return *x.xxx_hidden_ComplianceCheckResultName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRemediationV2) GetApply() bool {
	if x != nil {
		return x.xxx_hidden_Apply
	}
	return false
}

func (x *ComplianceOperatorRemediationV2) GetCurrentObject() string {
	if x != nil {
		if x.xxx_hidden_CurrentObject != nil {
			return *x.xxx_hidden_CurrentObject
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRemediationV2) GetOutdatedObject() string {
	if x != nil {
		if x.xxx_hidden_OutdatedObject != nil {
			return *x.xxx_hidden_OutdatedObject
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRemediationV2) GetEnforcementType() string {
	if x != nil {
		if x.xxx_hidden_EnforcementType != nil {
			return *x.xxx_hidden_EnforcementType
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRemediationV2) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRemediationV2) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *ComplianceOperatorRemediationV2) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *ComplianceOperatorRemediationV2) SetComplianceCheckResultName(v string) {
	x.xxx_hidden_ComplianceCheckResultName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *ComplianceOperatorRemediationV2) SetApply(v bool) {
	x.xxx_hidden_Apply = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *ComplianceOperatorRemediationV2) SetCurrentObject(v string) {
	x.xxx_hidden_CurrentObject = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *ComplianceOperatorRemediationV2) SetOutdatedObject(v string) {
	x.xxx_hidden_OutdatedObject = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
}

func (x *ComplianceOperatorRemediationV2) SetEnforcementType(v string) {
	x.xxx_hidden_EnforcementType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *ComplianceOperatorRemediationV2) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *ComplianceOperatorRemediationV2) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorRemediationV2) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorRemediationV2) HasComplianceCheckResultName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorRemediationV2) HasApply() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceOperatorRemediationV2) HasCurrentObject() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ComplianceOperatorRemediationV2) HasOutdatedObject() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ComplianceOperatorRemediationV2) HasEnforcementType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ComplianceOperatorRemediationV2) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ComplianceOperatorRemediationV2) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceOperatorRemediationV2) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceOperatorRemediationV2) ClearComplianceCheckResultName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ComplianceCheckResultName = nil
}

func (x *ComplianceOperatorRemediationV2) ClearApply() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Apply = false
}

func (x *ComplianceOperatorRemediationV2) ClearCurrentObject() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_CurrentObject = nil
}

func (x *ComplianceOperatorRemediationV2) ClearOutdatedObject() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_OutdatedObject = nil
}

func (x *ComplianceOperatorRemediationV2) ClearEnforcementType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_EnforcementType = nil
}

func (x *ComplianceOperatorRemediationV2) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_ClusterId = nil
}

type ComplianceOperatorRemediationV2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                        *string
	Name                      *string
	ComplianceCheckResultName *string
	// apply is used by the compliance operator to apply a remediation
	Apply *bool
	// current holds the object which currently remediates the check result. It is saved in a "current" field because
	// Compliance Operator can ship new remediations in a following versions.
	// See: https://docs.openshift.com/container-platform/4.15/security/compliance_operator/co-scans/compliance-operator-remediation.html#compliance-updating_compliance-remediation
	CurrentObject *string
	// outdated is an old remediation object when a new remediation was added to the "current" field in the compliance operator.
	// See: https://docs.openshift.com/container-platform/4.15/security/compliance_operator/co-scans/compliance-operator-remediation.html#compliance-updating_compliance-remediation
	OutdatedObject  *string
	EnforcementType *string
	ClusterId       *string
}

func (b0 ComplianceOperatorRemediationV2_builder) Build() *ComplianceOperatorRemediationV2 {
	m0 := &ComplianceOperatorRemediationV2{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_Name = b.Name
	}
	if b.ComplianceCheckResultName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_ComplianceCheckResultName = b.ComplianceCheckResultName
	}
	if b.Apply != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_Apply = *b.Apply
	}
	if b.CurrentObject != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_CurrentObject = b.CurrentObject
	}
	if b.OutdatedObject != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_OutdatedObject = b.OutdatedObject
	}
	if b.EnforcementType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_EnforcementType = b.EnforcementType
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	return m0
}

// Next Tag: 9
type ComplianceOperatorReportSnapshotV2 struct {
	state                          protoimpl.MessageState                               `protogen:"opaque.v1"`
	xxx_hidden_ReportId            *string                                              `protobuf:"bytes,1,opt,name=report_id,json=reportId"`
	xxx_hidden_ScanConfigurationId *string                                              `protobuf:"bytes,2,opt,name=scan_configuration_id,json=scanConfigurationId"`
	xxx_hidden_Name                *string                                              `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_Description         *string                                              `protobuf:"bytes,4,opt,name=description"`
	xxx_hidden_ReportStatus        *ComplianceOperatorReportStatus                      `protobuf:"bytes,5,opt,name=report_status,json=reportStatus"`
	xxx_hidden_User                *SlimUser                                            `protobuf:"bytes,6,opt,name=user"`
	xxx_hidden_Scans               *[]*ComplianceOperatorReportSnapshotV2_Scan          `protobuf:"bytes,7,rep,name=scans"`
	xxx_hidden_ReportData          *ComplianceOperatorReportData                        `protobuf:"bytes,8,opt,name=report_data,json=reportData"`
	xxx_hidden_FailedClusters      *[]*ComplianceOperatorReportSnapshotV2_FailedCluster `protobuf:"bytes,9,rep,name=failed_clusters,json=failedClusters"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *ComplianceOperatorReportSnapshotV2) Reset() {
	*x = ComplianceOperatorReportSnapshotV2{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorReportSnapshotV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorReportSnapshotV2) ProtoMessage() {}

func (x *ComplianceOperatorReportSnapshotV2) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorReportSnapshotV2) GetReportId() string {
	if x != nil {
		if x.xxx_hidden_ReportId != nil {
			return *x.xxx_hidden_ReportId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorReportSnapshotV2) GetScanConfigurationId() string {
	if x != nil {
		if x.xxx_hidden_ScanConfigurationId != nil {
			return *x.xxx_hidden_ScanConfigurationId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorReportSnapshotV2) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorReportSnapshotV2) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorReportSnapshotV2) GetReportStatus() *ComplianceOperatorReportStatus {
	if x != nil {
		return x.xxx_hidden_ReportStatus
	}
	return nil
}

func (x *ComplianceOperatorReportSnapshotV2) GetUser() *SlimUser {
	if x != nil {
		return x.xxx_hidden_User
	}
	return nil
}

func (x *ComplianceOperatorReportSnapshotV2) GetScans() []*ComplianceOperatorReportSnapshotV2_Scan {
	if x != nil {
		if x.xxx_hidden_Scans != nil {
			return *x.xxx_hidden_Scans
		}
	}
	return nil
}

func (x *ComplianceOperatorReportSnapshotV2) GetReportData() *ComplianceOperatorReportData {
	if x != nil {
		return x.xxx_hidden_ReportData
	}
	return nil
}

func (x *ComplianceOperatorReportSnapshotV2) GetFailedClusters() []*ComplianceOperatorReportSnapshotV2_FailedCluster {
	if x != nil {
		if x.xxx_hidden_FailedClusters != nil {
			return *x.xxx_hidden_FailedClusters
		}
	}
	return nil
}

func (x *ComplianceOperatorReportSnapshotV2) SetReportId(v string) {
	x.xxx_hidden_ReportId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *ComplianceOperatorReportSnapshotV2) SetScanConfigurationId(v string) {
	x.xxx_hidden_ScanConfigurationId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *ComplianceOperatorReportSnapshotV2) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *ComplianceOperatorReportSnapshotV2) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *ComplianceOperatorReportSnapshotV2) SetReportStatus(v *ComplianceOperatorReportStatus) {
	x.xxx_hidden_ReportStatus = v
}

func (x *ComplianceOperatorReportSnapshotV2) SetUser(v *SlimUser) {
	x.xxx_hidden_User = v
}

func (x *ComplianceOperatorReportSnapshotV2) SetScans(v []*ComplianceOperatorReportSnapshotV2_Scan) {
	x.xxx_hidden_Scans = &v
}

func (x *ComplianceOperatorReportSnapshotV2) SetReportData(v *ComplianceOperatorReportData) {
	x.xxx_hidden_ReportData = v
}

func (x *ComplianceOperatorReportSnapshotV2) SetFailedClusters(v []*ComplianceOperatorReportSnapshotV2_FailedCluster) {
	x.xxx_hidden_FailedClusters = &v
}

func (x *ComplianceOperatorReportSnapshotV2) HasReportId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorReportSnapshotV2) HasScanConfigurationId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorReportSnapshotV2) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorReportSnapshotV2) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceOperatorReportSnapshotV2) HasReportStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ReportStatus != nil
}

func (x *ComplianceOperatorReportSnapshotV2) HasUser() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_User != nil
}

func (x *ComplianceOperatorReportSnapshotV2) HasReportData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ReportData != nil
}

func (x *ComplianceOperatorReportSnapshotV2) ClearReportId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ReportId = nil
}

func (x *ComplianceOperatorReportSnapshotV2) ClearScanConfigurationId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ScanConfigurationId = nil
}

func (x *ComplianceOperatorReportSnapshotV2) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceOperatorReportSnapshotV2) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Description = nil
}

func (x *ComplianceOperatorReportSnapshotV2) ClearReportStatus() {
	x.xxx_hidden_ReportStatus = nil
}

func (x *ComplianceOperatorReportSnapshotV2) ClearUser() {
	x.xxx_hidden_User = nil
}

func (x *ComplianceOperatorReportSnapshotV2) ClearReportData() {
	x.xxx_hidden_ReportData = nil
}

type ComplianceOperatorReportSnapshotV2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ReportId            *string
	ScanConfigurationId *string
	Name                *string
	Description         *string
	ReportStatus        *ComplianceOperatorReportStatus
	User                *SlimUser
	Scans               []*ComplianceOperatorReportSnapshotV2_Scan
	ReportData          *ComplianceOperatorReportData
	FailedClusters      []*ComplianceOperatorReportSnapshotV2_FailedCluster
}

func (b0 ComplianceOperatorReportSnapshotV2_builder) Build() *ComplianceOperatorReportSnapshotV2 {
	m0 := &ComplianceOperatorReportSnapshotV2{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ReportId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_ReportId = b.ReportId
	}
	if b.ScanConfigurationId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_ScanConfigurationId = b.ScanConfigurationId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_Name = b.Name
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_Description = b.Description
	}
	x.xxx_hidden_ReportStatus = b.ReportStatus
	x.xxx_hidden_User = b.User
	x.xxx_hidden_Scans = &b.Scans
	x.xxx_hidden_ReportData = b.ReportData
	x.xxx_hidden_FailedClusters = &b.FailedClusters
	return m0
}

// Next available tag: 4
type ComplianceOperatorReportData struct {
	state                        protoimpl.MessageState                         `protogen:"opaque.v1"`
	xxx_hidden_ScanConfiguration *ComplianceOperatorScanConfigurationV2         `protobuf:"bytes,1,opt,name=scan_configuration,json=scanConfiguration"`
	xxx_hidden_ClusterStatus     *[]*ComplianceOperatorReportData_ClusterStatus `protobuf:"bytes,2,rep,name=cluster_status,json=clusterStatus"`
	xxx_hidden_LastExecutedTime  *timestamppb.Timestamp                         `protobuf:"bytes,3,opt,name=last_executed_time,json=lastExecutedTime"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *ComplianceOperatorReportData) Reset() {
	*x = ComplianceOperatorReportData{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorReportData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorReportData) ProtoMessage() {}

func (x *ComplianceOperatorReportData) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorReportData) GetScanConfiguration() *ComplianceOperatorScanConfigurationV2 {
	if x != nil {
		return x.xxx_hidden_ScanConfiguration
	}
	return nil
}

func (x *ComplianceOperatorReportData) GetClusterStatus() []*ComplianceOperatorReportData_ClusterStatus {
	if x != nil {
		if x.xxx_hidden_ClusterStatus != nil {
			return *x.xxx_hidden_ClusterStatus
		}
	}
	return nil
}

func (x *ComplianceOperatorReportData) GetLastExecutedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastExecutedTime
	}
	return nil
}

func (x *ComplianceOperatorReportData) SetScanConfiguration(v *ComplianceOperatorScanConfigurationV2) {
	x.xxx_hidden_ScanConfiguration = v
}

func (x *ComplianceOperatorReportData) SetClusterStatus(v []*ComplianceOperatorReportData_ClusterStatus) {
	x.xxx_hidden_ClusterStatus = &v
}

func (x *ComplianceOperatorReportData) SetLastExecutedTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastExecutedTime = v
}

func (x *ComplianceOperatorReportData) HasScanConfiguration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ScanConfiguration != nil
}

func (x *ComplianceOperatorReportData) HasLastExecutedTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastExecutedTime != nil
}

func (x *ComplianceOperatorReportData) ClearScanConfiguration() {
	x.xxx_hidden_ScanConfiguration = nil
}

func (x *ComplianceOperatorReportData) ClearLastExecutedTime() {
	x.xxx_hidden_LastExecutedTime = nil
}

type ComplianceOperatorReportData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScanConfiguration *ComplianceOperatorScanConfigurationV2
	ClusterStatus     []*ComplianceOperatorReportData_ClusterStatus
	LastExecutedTime  *timestamppb.Timestamp
}

func (b0 ComplianceOperatorReportData_builder) Build() *ComplianceOperatorReportData {
	m0 := &ComplianceOperatorReportData{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ScanConfiguration = b.ScanConfiguration
	x.xxx_hidden_ClusterStatus = &b.ClusterStatus
	x.xxx_hidden_LastExecutedTime = b.LastExecutedTime
	return m0
}

// Next Tag: 7
type ComplianceOperatorReportStatus struct {
	state                               protoimpl.MessageState                            `protogen:"opaque.v1"`
	xxx_hidden_RunState                 ComplianceOperatorReportStatus_RunState           `protobuf:"varint,1,opt,name=run_state,json=runState,enum=storage.ComplianceOperatorReportStatus_RunState"`
	xxx_hidden_StartedAt                *timestamppb.Timestamp                            `protobuf:"bytes,2,opt,name=started_at,json=startedAt"`
	xxx_hidden_CompletedAt              *timestamppb.Timestamp                            `protobuf:"bytes,3,opt,name=completed_at,json=completedAt"`
	xxx_hidden_ErrorMsg                 *string                                           `protobuf:"bytes,4,opt,name=error_msg,json=errorMsg"`
	xxx_hidden_ReportRequestType        ComplianceOperatorReportStatus_RunMethod          `protobuf:"varint,5,opt,name=report_request_type,json=reportRequestType,enum=storage.ComplianceOperatorReportStatus_RunMethod"`
	xxx_hidden_ReportNotificationMethod ComplianceOperatorReportStatus_NotificationMethod `protobuf:"varint,6,opt,name=report_notification_method,json=reportNotificationMethod,enum=storage.ComplianceOperatorReportStatus_NotificationMethod"`
	XXX_raceDetectHookData              protoimpl.RaceDetectHookData
	XXX_presence                        [1]uint32
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *ComplianceOperatorReportStatus) Reset() {
	*x = ComplianceOperatorReportStatus{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorReportStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorReportStatus) ProtoMessage() {}

func (x *ComplianceOperatorReportStatus) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorReportStatus) GetRunState() ComplianceOperatorReportStatus_RunState {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_RunState
		}
	}
	return ComplianceOperatorReportStatus_WAITING
}

func (x *ComplianceOperatorReportStatus) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_StartedAt
	}
	return nil
}

func (x *ComplianceOperatorReportStatus) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_CompletedAt
	}
	return nil
}

func (x *ComplianceOperatorReportStatus) GetErrorMsg() string {
	if x != nil {
		if x.xxx_hidden_ErrorMsg != nil {
			return *x.xxx_hidden_ErrorMsg
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorReportStatus) GetReportRequestType() ComplianceOperatorReportStatus_RunMethod {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_ReportRequestType
		}
	}
	return ComplianceOperatorReportStatus_ON_DEMAND
}

func (x *ComplianceOperatorReportStatus) GetReportNotificationMethod() ComplianceOperatorReportStatus_NotificationMethod {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_ReportNotificationMethod
		}
	}
	return ComplianceOperatorReportStatus_EMAIL
}

func (x *ComplianceOperatorReportStatus) SetRunState(v ComplianceOperatorReportStatus_RunState) {
	x.xxx_hidden_RunState = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *ComplianceOperatorReportStatus) SetStartedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_StartedAt = v
}

func (x *ComplianceOperatorReportStatus) SetCompletedAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_CompletedAt = v
}

func (x *ComplianceOperatorReportStatus) SetErrorMsg(v string) {
	x.xxx_hidden_ErrorMsg = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *ComplianceOperatorReportStatus) SetReportRequestType(v ComplianceOperatorReportStatus_RunMethod) {
	x.xxx_hidden_ReportRequestType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *ComplianceOperatorReportStatus) SetReportNotificationMethod(v ComplianceOperatorReportStatus_NotificationMethod) {
	x.xxx_hidden_ReportNotificationMethod = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *ComplianceOperatorReportStatus) HasRunState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorReportStatus) HasStartedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StartedAt != nil
}

func (x *ComplianceOperatorReportStatus) HasCompletedAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CompletedAt != nil
}

func (x *ComplianceOperatorReportStatus) HasErrorMsg() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceOperatorReportStatus) HasReportRequestType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ComplianceOperatorReportStatus) HasReportNotificationMethod() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ComplianceOperatorReportStatus) ClearRunState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RunState = ComplianceOperatorReportStatus_WAITING
}

func (x *ComplianceOperatorReportStatus) ClearStartedAt() {
	x.xxx_hidden_StartedAt = nil
}

func (x *ComplianceOperatorReportStatus) ClearCompletedAt() {
	x.xxx_hidden_CompletedAt = nil
}

func (x *ComplianceOperatorReportStatus) ClearErrorMsg() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ErrorMsg = nil
}

func (x *ComplianceOperatorReportStatus) ClearReportRequestType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ReportRequestType = ComplianceOperatorReportStatus_ON_DEMAND
}

func (x *ComplianceOperatorReportStatus) ClearReportNotificationMethod() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ReportNotificationMethod = ComplianceOperatorReportStatus_EMAIL
}

type ComplianceOperatorReportStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RunState                 *ComplianceOperatorReportStatus_RunState
	StartedAt                *timestamppb.Timestamp
	CompletedAt              *timestamppb.Timestamp
	ErrorMsg                 *string
	ReportRequestType        *ComplianceOperatorReportStatus_RunMethod
	ReportNotificationMethod *ComplianceOperatorReportStatus_NotificationMethod
}

func (b0 ComplianceOperatorReportStatus_builder) Build() *ComplianceOperatorReportStatus {
	m0 := &ComplianceOperatorReportStatus{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RunState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_RunState = *b.RunState
	}
	x.xxx_hidden_StartedAt = b.StartedAt
	x.xxx_hidden_CompletedAt = b.CompletedAt
	if b.ErrorMsg != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_ErrorMsg = b.ErrorMsg
	}
	if b.ReportRequestType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_ReportRequestType = *b.ReportRequestType
	}
	if b.ReportNotificationMethod != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_ReportNotificationMethod = *b.ReportNotificationMethod
	}
	return m0
}

type ComplianceOperatorProfileV2_Rule struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_RuleName    *string                `protobuf:"bytes,1,opt,name=rule_name,json=ruleName"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceOperatorProfileV2_Rule) Reset() {
	*x = ComplianceOperatorProfileV2_Rule{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorProfileV2_Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorProfileV2_Rule) ProtoMessage() {}

func (x *ComplianceOperatorProfileV2_Rule) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorProfileV2_Rule) GetRuleName() string {
	if x != nil {
		if x.xxx_hidden_RuleName != nil {
			return *x.xxx_hidden_RuleName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfileV2_Rule) SetRuleName(v string) {
	x.xxx_hidden_RuleName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ComplianceOperatorProfileV2_Rule) HasRuleName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorProfileV2_Rule) ClearRuleName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RuleName = nil
}

type ComplianceOperatorProfileV2_Rule_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RuleName *string
}

func (b0 ComplianceOperatorProfileV2_Rule_builder) Build() *ComplianceOperatorProfileV2_Rule {
	m0 := &ComplianceOperatorProfileV2_Rule{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RuleName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_RuleName = b.RuleName
	}
	return m0
}

type ComplianceOperatorRuleV2_Fix struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Platform    *string                `protobuf:"bytes,1,opt,name=platform"`
	xxx_hidden_Disruption  *string                `protobuf:"bytes,2,opt,name=disruption"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceOperatorRuleV2_Fix) Reset() {
	*x = ComplianceOperatorRuleV2_Fix{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorRuleV2_Fix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorRuleV2_Fix) ProtoMessage() {}

func (x *ComplianceOperatorRuleV2_Fix) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorRuleV2_Fix) GetPlatform() string {
	if x != nil {
		if x.xxx_hidden_Platform != nil {
			return *x.xxx_hidden_Platform
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRuleV2_Fix) GetDisruption() string {
	if x != nil {
		if x.xxx_hidden_Disruption != nil {
			return *x.xxx_hidden_Disruption
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRuleV2_Fix) SetPlatform(v string) {
	x.xxx_hidden_Platform = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ComplianceOperatorRuleV2_Fix) SetDisruption(v string) {
	x.xxx_hidden_Disruption = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ComplianceOperatorRuleV2_Fix) HasPlatform() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorRuleV2_Fix) HasDisruption() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorRuleV2_Fix) ClearPlatform() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Platform = nil
}

func (x *ComplianceOperatorRuleV2_Fix) ClearDisruption() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Disruption = nil
}

type ComplianceOperatorRuleV2_Fix_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Platform   *string
	Disruption *string
}

func (b0 ComplianceOperatorRuleV2_Fix_builder) Build() *ComplianceOperatorRuleV2_Fix {
	m0 := &ComplianceOperatorRuleV2_Fix{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Platform != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Platform = b.Platform
	}
	if b.Disruption != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Disruption = b.Disruption
	}
	return m0
}

type ComplianceOperatorScanConfigurationV2_ProfileName struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ProfileName *string                `protobuf:"bytes,1,opt,name=profile_name,json=profileName"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceOperatorScanConfigurationV2_ProfileName) Reset() {
	*x = ComplianceOperatorScanConfigurationV2_ProfileName{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorScanConfigurationV2_ProfileName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorScanConfigurationV2_ProfileName) ProtoMessage() {}

func (x *ComplianceOperatorScanConfigurationV2_ProfileName) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorScanConfigurationV2_ProfileName) GetProfileName() string {
	if x != nil {
		if x.xxx_hidden_ProfileName != nil {
			return *x.xxx_hidden_ProfileName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanConfigurationV2_ProfileName) SetProfileName(v string) {
	x.xxx_hidden_ProfileName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ComplianceOperatorScanConfigurationV2_ProfileName) HasProfileName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorScanConfigurationV2_ProfileName) ClearProfileName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ProfileName = nil
}

type ComplianceOperatorScanConfigurationV2_ProfileName_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ProfileName *string
}

func (b0 ComplianceOperatorScanConfigurationV2_ProfileName_builder) Build() *ComplianceOperatorScanConfigurationV2_ProfileName {
	m0 := &ComplianceOperatorScanConfigurationV2_ProfileName{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ProfileName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_ProfileName = b.ProfileName
	}
	return m0
}

type ComplianceOperatorScanConfigurationV2_Cluster struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ClusterId   *string                `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceOperatorScanConfigurationV2_Cluster) Reset() {
	*x = ComplianceOperatorScanConfigurationV2_Cluster{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorScanConfigurationV2_Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorScanConfigurationV2_Cluster) ProtoMessage() {}

func (x *ComplianceOperatorScanConfigurationV2_Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorScanConfigurationV2_Cluster) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanConfigurationV2_Cluster) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ComplianceOperatorScanConfigurationV2_Cluster) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorScanConfigurationV2_Cluster) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ClusterId = nil
}

type ComplianceOperatorScanConfigurationV2_Cluster_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ClusterId *string
}

func (b0 ComplianceOperatorScanConfigurationV2_Cluster_builder) Build() *ComplianceOperatorScanConfigurationV2_Cluster {
	m0 := &ComplianceOperatorScanConfigurationV2_Cluster{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	return m0
}

type ComplianceOperatorBenchmarkV2_Profile struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ProfileName    *string                `protobuf:"bytes,1,opt,name=profile_name,json=profileName"`
	xxx_hidden_ProfileVersion *string                `protobuf:"bytes,2,opt,name=profile_version,json=profileVersion"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ComplianceOperatorBenchmarkV2_Profile) Reset() {
	*x = ComplianceOperatorBenchmarkV2_Profile{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorBenchmarkV2_Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorBenchmarkV2_Profile) ProtoMessage() {}

func (x *ComplianceOperatorBenchmarkV2_Profile) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorBenchmarkV2_Profile) GetProfileName() string {
	if x != nil {
		if x.xxx_hidden_ProfileName != nil {
			return *x.xxx_hidden_ProfileName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorBenchmarkV2_Profile) GetProfileVersion() string {
	if x != nil {
		if x.xxx_hidden_ProfileVersion != nil {
			return *x.xxx_hidden_ProfileVersion
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorBenchmarkV2_Profile) SetProfileName(v string) {
	x.xxx_hidden_ProfileName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ComplianceOperatorBenchmarkV2_Profile) SetProfileVersion(v string) {
	x.xxx_hidden_ProfileVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ComplianceOperatorBenchmarkV2_Profile) HasProfileName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorBenchmarkV2_Profile) HasProfileVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorBenchmarkV2_Profile) ClearProfileName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ProfileName = nil
}

func (x *ComplianceOperatorBenchmarkV2_Profile) ClearProfileVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ProfileVersion = nil
}

type ComplianceOperatorBenchmarkV2_Profile_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ProfileName    *string
	ProfileVersion *string
}

func (b0 ComplianceOperatorBenchmarkV2_Profile_builder) Build() *ComplianceOperatorBenchmarkV2_Profile {
	m0 := &ComplianceOperatorBenchmarkV2_Profile{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ProfileName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ProfileName = b.ProfileName
	}
	if b.ProfileVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_ProfileVersion = b.ProfileVersion
	}
	return m0
}

type ComplianceOperatorReportSnapshotV2_Scan struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScanRefId       *string                `protobuf:"bytes,1,opt,name=scan_ref_id,json=scanRefId"`
	xxx_hidden_LastStartedTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_started_time,json=lastStartedTime"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ComplianceOperatorReportSnapshotV2_Scan) Reset() {
	*x = ComplianceOperatorReportSnapshotV2_Scan{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorReportSnapshotV2_Scan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorReportSnapshotV2_Scan) ProtoMessage() {}

func (x *ComplianceOperatorReportSnapshotV2_Scan) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorReportSnapshotV2_Scan) GetScanRefId() string {
	if x != nil {
		if x.xxx_hidden_ScanRefId != nil {
			return *x.xxx_hidden_ScanRefId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorReportSnapshotV2_Scan) GetLastStartedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastStartedTime
	}
	return nil
}

func (x *ComplianceOperatorReportSnapshotV2_Scan) SetScanRefId(v string) {
	x.xxx_hidden_ScanRefId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ComplianceOperatorReportSnapshotV2_Scan) SetLastStartedTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastStartedTime = v
}

func (x *ComplianceOperatorReportSnapshotV2_Scan) HasScanRefId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorReportSnapshotV2_Scan) HasLastStartedTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastStartedTime != nil
}

func (x *ComplianceOperatorReportSnapshotV2_Scan) ClearScanRefId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScanRefId = nil
}

func (x *ComplianceOperatorReportSnapshotV2_Scan) ClearLastStartedTime() {
	x.xxx_hidden_LastStartedTime = nil
}

type ComplianceOperatorReportSnapshotV2_Scan_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScanRefId       *string
	LastStartedTime *timestamppb.Timestamp
}

func (b0 ComplianceOperatorReportSnapshotV2_Scan_builder) Build() *ComplianceOperatorReportSnapshotV2_Scan {
	m0 := &ComplianceOperatorReportSnapshotV2_Scan{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScanRefId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ScanRefId = b.ScanRefId
	}
	x.xxx_hidden_LastStartedTime = b.LastStartedTime
	return m0
}

type ComplianceOperatorReportSnapshotV2_FailedCluster struct {
	state                      protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ClusterId       *string                `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_ClusterName     *string                `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName"`
	xxx_hidden_Reasons         []string               `protobuf:"bytes,3,rep,name=reasons"`
	xxx_hidden_OperatorVersion *string                `protobuf:"bytes,4,opt,name=operator_version,json=operatorVersion"`
	xxx_hidden_ScanNames       []string               `protobuf:"bytes,5,rep,name=scanNames"`
	XXX_raceDetectHookData     protoimpl.RaceDetectHookData
	XXX_presence               [1]uint32
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) Reset() {
	*x = ComplianceOperatorReportSnapshotV2_FailedCluster{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorReportSnapshotV2_FailedCluster) ProtoMessage() {}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) GetReasons() []string {
	if x != nil {
		return x.xxx_hidden_Reasons
	}
	return nil
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) GetOperatorVersion() string {
	if x != nil {
		if x.xxx_hidden_OperatorVersion != nil {
			return *x.xxx_hidden_OperatorVersion
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) GetScanNames() []string {
	if x != nil {
		return x.xxx_hidden_ScanNames
	}
	return nil
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) SetReasons(v []string) {
	x.xxx_hidden_Reasons = v
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) SetOperatorVersion(v string) {
	x.xxx_hidden_OperatorVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) SetScanNames(v []string) {
	x.xxx_hidden_ScanNames = v
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) HasOperatorVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ClusterName = nil
}

func (x *ComplianceOperatorReportSnapshotV2_FailedCluster) ClearOperatorVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_OperatorVersion = nil
}

type ComplianceOperatorReportSnapshotV2_FailedCluster_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ClusterId       *string
	ClusterName     *string
	Reasons         []string
	OperatorVersion *string
	ScanNames       []string
}

func (b0 ComplianceOperatorReportSnapshotV2_FailedCluster_builder) Build() *ComplianceOperatorReportSnapshotV2_FailedCluster {
	m0 := &ComplianceOperatorReportSnapshotV2_FailedCluster{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	x.xxx_hidden_Reasons = b.Reasons
	if b.OperatorVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_OperatorVersion = b.OperatorVersion
	}
	x.xxx_hidden_ScanNames = b.ScanNames
	return m0
}

// Next available tag: 5
type ComplianceOperatorReportData_SuiteStatus struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Phase              *string                `protobuf:"bytes,1,opt,name=phase"`
	xxx_hidden_Result             *string                `protobuf:"bytes,2,opt,name=result"`
	xxx_hidden_ErrorMessage       *string                `protobuf:"bytes,3,opt,name=error_message,json=errorMessage"`
	xxx_hidden_LastTransitionTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_transition_time,json=lastTransitionTime"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ComplianceOperatorReportData_SuiteStatus) Reset() {
	*x = ComplianceOperatorReportData_SuiteStatus{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorReportData_SuiteStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorReportData_SuiteStatus) ProtoMessage() {}

func (x *ComplianceOperatorReportData_SuiteStatus) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorReportData_SuiteStatus) GetPhase() string {
	if x != nil {
		if x.xxx_hidden_Phase != nil {
			return *x.xxx_hidden_Phase
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorReportData_SuiteStatus) GetResult() string {
	if x != nil {
		if x.xxx_hidden_Result != nil {
			return *x.xxx_hidden_Result
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorReportData_SuiteStatus) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorReportData_SuiteStatus) GetLastTransitionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastTransitionTime
	}
	return nil
}

func (x *ComplianceOperatorReportData_SuiteStatus) SetPhase(v string) {
	x.xxx_hidden_Phase = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ComplianceOperatorReportData_SuiteStatus) SetResult(v string) {
	x.xxx_hidden_Result = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *ComplianceOperatorReportData_SuiteStatus) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ComplianceOperatorReportData_SuiteStatus) SetLastTransitionTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastTransitionTime = v
}

func (x *ComplianceOperatorReportData_SuiteStatus) HasPhase() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorReportData_SuiteStatus) HasResult() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorReportData_SuiteStatus) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorReportData_SuiteStatus) HasLastTransitionTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastTransitionTime != nil
}

func (x *ComplianceOperatorReportData_SuiteStatus) ClearPhase() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Phase = nil
}

func (x *ComplianceOperatorReportData_SuiteStatus) ClearResult() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Result = nil
}

func (x *ComplianceOperatorReportData_SuiteStatus) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ErrorMessage = nil
}

func (x *ComplianceOperatorReportData_SuiteStatus) ClearLastTransitionTime() {
	x.xxx_hidden_LastTransitionTime = nil
}

type ComplianceOperatorReportData_SuiteStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Phase              *string
	Result             *string
	ErrorMessage       *string
	LastTransitionTime *timestamppb.Timestamp
}

func (b0 ComplianceOperatorReportData_SuiteStatus_builder) Build() *ComplianceOperatorReportData_SuiteStatus {
	m0 := &ComplianceOperatorReportData_SuiteStatus{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Phase != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Phase = b.Phase
	}
	if b.Result != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Result = b.Result
	}
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	x.xxx_hidden_LastTransitionTime = b.LastTransitionTime
	return m0
}

// Next available tag: 5
type ComplianceOperatorReportData_ClusterStatus struct {
	state                  protoimpl.MessageState                    `protogen:"opaque.v1"`
	xxx_hidden_ClusterId   *string                                   `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_Errors      []string                                  `protobuf:"bytes,2,rep,name=errors"`
	xxx_hidden_ClusterName *string                                   `protobuf:"bytes,3,opt,name=cluster_name,json=clusterName"`
	xxx_hidden_SuiteStatus *ComplianceOperatorReportData_SuiteStatus `protobuf:"bytes,4,opt,name=suite_status,json=suiteStatus"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceOperatorReportData_ClusterStatus) Reset() {
	*x = ComplianceOperatorReportData_ClusterStatus{}
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorReportData_ClusterStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorReportData_ClusterStatus) ProtoMessage() {}

func (x *ComplianceOperatorReportData_ClusterStatus) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_v2_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorReportData_ClusterStatus) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorReportData_ClusterStatus) GetErrors() []string {
	if x != nil {
		return x.xxx_hidden_Errors
	}
	return nil
}

func (x *ComplianceOperatorReportData_ClusterStatus) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorReportData_ClusterStatus) GetSuiteStatus() *ComplianceOperatorReportData_SuiteStatus {
	if x != nil {
		return x.xxx_hidden_SuiteStatus
	}
	return nil
}

func (x *ComplianceOperatorReportData_ClusterStatus) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *ComplianceOperatorReportData_ClusterStatus) SetErrors(v []string) {
	x.xxx_hidden_Errors = v
}

func (x *ComplianceOperatorReportData_ClusterStatus) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *ComplianceOperatorReportData_ClusterStatus) SetSuiteStatus(v *ComplianceOperatorReportData_SuiteStatus) {
	x.xxx_hidden_SuiteStatus = v
}

func (x *ComplianceOperatorReportData_ClusterStatus) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorReportData_ClusterStatus) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorReportData_ClusterStatus) HasSuiteStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SuiteStatus != nil
}

func (x *ComplianceOperatorReportData_ClusterStatus) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceOperatorReportData_ClusterStatus) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ClusterName = nil
}

func (x *ComplianceOperatorReportData_ClusterStatus) ClearSuiteStatus() {
	x.xxx_hidden_SuiteStatus = nil
}

type ComplianceOperatorReportData_ClusterStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ClusterId   *string
	Errors      []string
	ClusterName *string
	SuiteStatus *ComplianceOperatorReportData_SuiteStatus
}

func (b0 ComplianceOperatorReportData_ClusterStatus_builder) Build() *ComplianceOperatorReportData_ClusterStatus {
	m0 := &ComplianceOperatorReportData_ClusterStatus{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	x.xxx_hidden_Errors = b.Errors
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	x.xxx_hidden_SuiteStatus = b.SuiteStatus
	return m0
}

var File_storage_compliance_operator_v2_proto protoreflect.FileDescriptor

const file_storage_compliance_operator_v2_proto_rawDesc = "" +
	"\n" +
	"$storage/compliance_operator_v2.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\x1a+storage/report_notifier_configuration.proto\x1a\x16storage/schedule.proto\x1a\x12storage/user.proto\x1a!google/protobuf/go_features.proto\"R\n" +
	"\vProfileShim\x12\x1d\n" +
	"\n" +
	"profile_id\x18\x01 \x01(\tR\tprofileId\x12$\n" +
	"\x0eprofile_ref_id\x18\x02 \x01(\tR\fprofileRefId\"\xfb\x05\n" +
	"\x1bComplianceOperatorProfileV2\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"profile_id\x18\x02 \x01(\tR\tprofileId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12'\n" +
	"\x0fprofile_version\x18\x04 \x01(\tR\x0eprofileVersion\x12!\n" +
	"\fproduct_type\x18\x05 \x01(\tR\vproductType\x12\x1a\n" +
	"\bstandard\x18\x06 \x01(\tR\bstandard\x12H\n" +
	"\x06labels\x18\a \x03(\v20.storage.ComplianceOperatorProfileV2.LabelsEntryR\x06labels\x12W\n" +
	"\vannotations\x18\b \x03(\v25.storage.ComplianceOperatorProfileV2.AnnotationsEntryR\vannotations\x12 \n" +
	"\vdescription\x18\t \x01(\tR\vdescription\x12?\n" +
	"\x05rules\x18\n" +
	" \x03(\v2).storage.ComplianceOperatorProfileV2.RuleR\x05rules\x12\x18\n" +
	"\aproduct\x18\v \x01(\tR\aproduct\x12\x14\n" +
	"\x05title\x18\f \x01(\tR\x05title\x12\x16\n" +
	"\x06values\x18\r \x03(\tR\x06values\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x0e \x01(\tR\tclusterId\x12$\n" +
	"\x0eprofile_ref_id\x18\x0f \x01(\tR\fprofileRefId\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a#\n" +
	"\x04Rule\x12\x1b\n" +
	"\trule_name\x18\x01 \x01(\tR\bruleName\"\xe6\x06\n" +
	"\x18ComplianceOperatorRuleV2\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\arule_id\x18\x02 \x01(\tR\x06ruleId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1b\n" +
	"\trule_type\x18\x04 \x01(\tR\bruleType\x121\n" +
	"\bseverity\x18\x05 \x01(\x0e2\x15.storage.RuleSeverityR\bseverity\x12E\n" +
	"\x06labels\x18\x06 \x03(\v2-.storage.ComplianceOperatorRuleV2.LabelsEntryR\x06labels\x12T\n" +
	"\vannotations\x18\a \x03(\v22.storage.ComplianceOperatorRuleV2.AnnotationsEntryR\vannotations\x12\x14\n" +
	"\x05title\x18\b \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\t \x01(\tR\vdescription\x12\x1c\n" +
	"\trationale\x18\n" +
	" \x01(\tR\trationale\x12;\n" +
	"\x05fixes\x18\v \x03(\v2%.storage.ComplianceOperatorRuleV2.FixR\x05fixes\x12\x18\n" +
	"\awarning\x18\f \x01(\tR\awarning\x121\n" +
	"\bcontrols\x18\r \x03(\v2\x15.storage.RuleControlsR\bcontrols\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x0e \x01(\tR\tclusterId\x12\x1e\n" +
	"\vrule_ref_id\x18\x0f \x01(\tR\truleRefId\x12\x1f\n" +
	"\vparent_rule\x18\x10 \x01(\tR\n" +
	"parentRule\x12\"\n" +
	"\finstructions\x18\x11 \x01(\tR\finstructions\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aA\n" +
	"\x03Fix\x12\x1a\n" +
	"\bplatform\x18\x01 \x01(\tR\bplatform\x12\x1e\n" +
	"\n" +
	"disruption\x18\x02 \x01(\tR\n" +
	"disruption\"d\n" +
	"\fRuleControls\x12\x1a\n" +
	"\bstandard\x18\x01 \x01(\tR\bstandard\x12\x1e\n" +
	"\bcontrols\x18\x02 \x03(\tB\x02\x18\x01R\bcontrols\x12\x18\n" +
	"\acontrol\x18\x03 \x01(\tR\acontrol\"\xd7\t\n" +
	"%ComplianceOperatorScanConfigurationV2\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12(\n" +
	"\x10scan_config_name\x18\x02 \x01(\tR\x0escanConfigName\x126\n" +
	"\x17auto_apply_remediations\x18\x03 \x01(\bR\x15autoApplyRemediations\x128\n" +
	"\x18auto_update_remediations\x18\x04 \x01(\bR\x16autoUpdateRemediations\x12\"\n" +
	"\rone_time_scan\x18\x05 \x01(\bR\voneTimeScan\x12R\n" +
	"\x06labels\x18\x06 \x03(\v2:.storage.ComplianceOperatorScanConfigurationV2.LabelsEntryR\x06labels\x12a\n" +
	"\vannotations\x18\a \x03(\v2?.storage.ComplianceOperatorScanConfigurationV2.AnnotationsEntryR\vannotations\x12V\n" +
	"\bprofiles\x18\b \x03(\v2:.storage.ComplianceOperatorScanConfigurationV2.ProfileNameR\bprofiles\x120\n" +
	"\n" +
	"node_roles\x18\t \x03(\x0e2\x11.storage.NodeRoleR\tnodeRoles\x12(\n" +
	"\x10strict_node_scan\x18\n" +
	" \x01(\bR\x0estrictNodeScan\x12-\n" +
	"\bschedule\x18\v \x01(\v2\x11.storage.ScheduleR\bschedule\x12=\n" +
	"\fcreated_time\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\vcreatedTime\x12F\n" +
	"\x11last_updated_time\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\x0flastUpdatedTime\x122\n" +
	"\vmodified_by\x18\x0e \x01(\v2\x11.storage.SlimUserR\n" +
	"modifiedBy\x12 \n" +
	"\vdescription\x18\x0f \x01(\tR\vdescription\x12R\n" +
	"\bclusters\x18\x10 \x03(\v26.storage.ComplianceOperatorScanConfigurationV2.ClusterR\bclusters\x12<\n" +
	"\tnotifiers\x18\x11 \x03(\v2\x1e.storage.NotifierConfigurationR\tnotifiers\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a0\n" +
	"\vProfileName\x12!\n" +
	"\fprofile_name\x18\x01 \x01(\tR\vprofileName\x1a(\n" +
	"\aCluster\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"\x83\x02\n" +
	")ComplianceOperatorClusterScanConfigStatus\x12\x0e\n" +
	"\x02id\x18\x06 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12$\n" +
	"\x0escan_config_id\x18\x02 \x01(\tR\fscanConfigId\x12\x16\n" +
	"\x06errors\x18\x03 \x03(\tR\x06errors\x12F\n" +
	"\x11last_updated_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x0flastUpdatedTime\x12!\n" +
	"\fcluster_name\x18\x05 \x01(\tR\vclusterName\"\xdd\x02\n" +
	"\x1dComplianceOperatorBenchmarkV2\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1a\n" +
	"\bprovider\x18\x05 \x01(\tR\bprovider\x12\x1d\n" +
	"\n" +
	"short_name\x18\a \x01(\tR\tshortName\x12J\n" +
	"\bprofiles\x18\b \x03(\v2..storage.ComplianceOperatorBenchmarkV2.ProfileR\bprofiles\x1aU\n" +
	"\aProfile\x12!\n" +
	"\fprofile_name\x18\x01 \x01(\tR\vprofileName\x12'\n" +
	"\x0fprofile_version\x18\x02 \x01(\tR\x0eprofileVersion\"\xf7\b\n" +
	"\x1fComplianceOperatorCheckResultV2\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bcheck_id\x18\x02 \x01(\tR\acheckId\x12\x1d\n" +
	"\n" +
	"check_name\x18\x03 \x01(\tR\tcheckName\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x04 \x01(\tR\tclusterId\x12L\n" +
	"\x06status\x18\x05 \x01(\x0e24.storage.ComplianceOperatorCheckResultV2.CheckStatusR\x06status\x121\n" +
	"\bseverity\x18\x06 \x01(\x0e2\x15.storage.RuleSeverityR\bseverity\x12 \n" +
	"\vdescription\x18\a \x01(\tR\vdescription\x12\"\n" +
	"\finstructions\x18\b \x01(\tR\finstructions\x12L\n" +
	"\x06labels\x18\t \x03(\v24.storage.ComplianceOperatorCheckResultV2.LabelsEntryR\x06labels\x12[\n" +
	"\vannotations\x18\n" +
	" \x03(\v29.storage.ComplianceOperatorCheckResultV2.AnnotationsEntryR\vannotations\x12=\n" +
	"\fcreated_time\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\vcreatedTime\x12\x1e\n" +
	"\n" +
	"valuesUsed\x18\f \x03(\tR\n" +
	"valuesUsed\x12\x1a\n" +
	"\bwarnings\x18\r \x03(\tR\bwarnings\x12\x1b\n" +
	"\tscan_name\x18\x0e \x01(\tR\bscanName\x12!\n" +
	"\fcluster_name\x18\x0f \x01(\tR\vclusterName\x12(\n" +
	"\x10scan_config_name\x18\x10 \x01(\tR\x0escanConfigName\x12\x1c\n" +
	"\trationale\x18\x11 \x01(\tR\trationale\x12\x1e\n" +
	"\vscan_ref_id\x18\x12 \x01(\tR\tscanRefId\x12\x1e\n" +
	"\vrule_ref_id\x18\x13 \x01(\tR\truleRefId\x12F\n" +
	"\x11last_started_time\x18\x14 \x01(\v2\x1a.google.protobuf.TimestampR\x0flastStartedTime\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"s\n" +
	"\vCheckStatus\x12\t\n" +
	"\x05UNSET\x10\x00\x12\b\n" +
	"\x04PASS\x10\x01\x12\b\n" +
	"\x04FAIL\x10\x02\x12\t\n" +
	"\x05ERROR\x10\x03\x12\b\n" +
	"\x04INFO\x10\x04\x12\n" +
	"\n" +
	"\x06MANUAL\x10\x05\x12\x12\n" +
	"\x0eNOT_APPLICABLE\x10\x06\x12\x10\n" +
	"\fINCONSISTENT\x10\a\"V\n" +
	"\n" +
	"ScanStatus\x12\x14\n" +
	"\x05phase\x18\x01 \x01(\tR\x05phase\x12\x16\n" +
	"\x06result\x18\x02 \x01(\tR\x06result\x12\x1a\n" +
	"\bwarnings\x18\x03 \x01(\tR\bwarnings\"\xb5\a\n" +
	"\x18ComplianceOperatorScanV2\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12(\n" +
	"\x10scan_config_name\x18\x02 \x01(\tR\x0escanConfigName\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\x12\x16\n" +
	"\x06errors\x18\x04 \x01(\tR\x06errors\x12.\n" +
	"\aprofile\x18\x05 \x01(\v2\x14.storage.ProfileShimR\aprofile\x12E\n" +
	"\x06labels\x18\x06 \x03(\v2-.storage.ComplianceOperatorScanV2.LabelsEntryR\x06labels\x12T\n" +
	"\vannotations\x18\a \x03(\v22.storage.ComplianceOperatorScanV2.AnnotationsEntryR\vannotations\x12.\n" +
	"\tscan_type\x18\b \x01(\x0e2\x11.storage.ScanTypeR\bscanType\x126\n" +
	"\rnode_selector\x18\t \x01(\x0e2\x11.storage.NodeRoleR\fnodeSelector\x12+\n" +
	"\x06status\x18\n" +
	" \x01(\v2\x13.storage.ScanStatusR\x06status\x12=\n" +
	"\fcreated_time\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\vcreatedTime\x12H\n" +
	"\x12last_executed_time\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\x10lastExecutedTime\x12\x1b\n" +
	"\tscan_name\x18\r \x01(\tR\bscanName\x12\x1a\n" +
	"\bwarnings\x18\x0e \x01(\tR\bwarnings\x12!\n" +
	"\fproduct_type\x18\x0f \x01(\tR\vproductType\x12\x1e\n" +
	"\vscan_ref_id\x18\x10 \x01(\tR\tscanRefId\x12F\n" +
	"\x11last_started_time\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\x0flastStartedTime\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb1\x04\n" +
	"&ComplianceOperatorScanSettingBindingV2\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\x12#\n" +
	"\rprofile_names\x18\x04 \x03(\tR\fprofileNames\x12*\n" +
	"\x11scan_setting_name\x18\x05 \x01(\tR\x0fscanSettingName\x12S\n" +
	"\x06labels\x18\a \x03(\v2;.storage.ComplianceOperatorScanSettingBindingV2.LabelsEntryR\x06labels\x12b\n" +
	"\vannotations\x18\b \x03(\v2@.storage.ComplianceOperatorScanSettingBindingV2.AnnotationsEntryR\vannotations\x129\n" +
	"\x06status\x18\t \x01(\v2!.storage.ComplianceOperatorStatusR\x06status\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01J\x04\b\x06\x10\a\"\xc9\x01\n" +
	"\x1bComplianceOperatorCondition\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12L\n" +
	"\x14last_transition_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x12lastTransitionTime\"\xb3\x01\n" +
	"\x18ComplianceOperatorStatus\x12\x14\n" +
	"\x05phase\x18\x01 \x01(\tR\x05phase\x12\x16\n" +
	"\x06result\x18\x02 \x01(\tR\x06result\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12D\n" +
	"\n" +
	"conditions\x18\x04 \x03(\v2$.storage.ComplianceOperatorConditionR\n" +
	"conditions\"\x99\x01\n" +
	"\x19ComplianceOperatorSuiteV2\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\x129\n" +
	"\x06status\x18\x04 \x01(\v2!.storage.ComplianceOperatorStatusR\x06status\"\xb6\x02\n" +
	"\x1fComplianceOperatorRemediationV2\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12?\n" +
	"\x1ccompliance_check_result_name\x18\x03 \x01(\tR\x19complianceCheckResultName\x12\x14\n" +
	"\x05apply\x18\x04 \x01(\bR\x05apply\x12%\n" +
	"\x0ecurrent_object\x18\x05 \x01(\tR\rcurrentObject\x12'\n" +
	"\x0foutdated_object\x18\x06 \x01(\tR\x0eoutdatedObject\x12)\n" +
	"\x10enforcement_type\x18\a \x01(\tR\x0fenforcementType\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\b \x01(\tR\tclusterId\"\xbb\x06\n" +
	"\"ComplianceOperatorReportSnapshotV2\x12\x1b\n" +
	"\treport_id\x18\x01 \x01(\tR\breportId\x122\n" +
	"\x15scan_configuration_id\x18\x02 \x01(\tR\x13scanConfigurationId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12L\n" +
	"\rreport_status\x18\x05 \x01(\v2'.storage.ComplianceOperatorReportStatusR\freportStatus\x12%\n" +
	"\x04user\x18\x06 \x01(\v2\x11.storage.SlimUserR\x04user\x12F\n" +
	"\x05scans\x18\a \x03(\v20.storage.ComplianceOperatorReportSnapshotV2.ScanR\x05scans\x12F\n" +
	"\vreport_data\x18\b \x01(\v2%.storage.ComplianceOperatorReportDataR\n" +
	"reportData\x12b\n" +
	"\x0ffailed_clusters\x18\t \x03(\v29.storage.ComplianceOperatorReportSnapshotV2.FailedClusterR\x0efailedClusters\x1an\n" +
	"\x04Scan\x12\x1e\n" +
	"\vscan_ref_id\x18\x01 \x01(\tR\tscanRefId\x12F\n" +
	"\x11last_started_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x0flastStartedTime\x1a\xb4\x01\n" +
	"\rFailedCluster\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12!\n" +
	"\fcluster_name\x18\x02 \x01(\tR\vclusterName\x12\x18\n" +
	"\areasons\x18\x03 \x03(\tR\areasons\x12)\n" +
	"\x10operator_version\x18\x04 \x01(\tR\x0foperatorVersion\x12\x1c\n" +
	"\tscanNames\x18\x05 \x03(\tR\tscanNames\"\x96\x05\n" +
	"\x1cComplianceOperatorReportData\x12]\n" +
	"\x12scan_configuration\x18\x01 \x01(\v2..storage.ComplianceOperatorScanConfigurationV2R\x11scanConfiguration\x12Z\n" +
	"\x0ecluster_status\x18\x02 \x03(\v23.storage.ComplianceOperatorReportData.ClusterStatusR\rclusterStatus\x12H\n" +
	"\x12last_executed_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x10lastExecutedTime\x1a\xae\x01\n" +
	"\vSuiteStatus\x12\x14\n" +
	"\x05phase\x18\x01 \x01(\tR\x05phase\x12\x16\n" +
	"\x06result\x18\x02 \x01(\tR\x06result\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12L\n" +
	"\x14last_transition_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x12lastTransitionTime\x1a\xbf\x01\n" +
	"\rClusterStatus\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x16\n" +
	"\x06errors\x18\x02 \x03(\tR\x06errors\x12!\n" +
	"\fcluster_name\x18\x03 \x01(\tR\vclusterName\x12T\n" +
	"\fsuite_status\x18\x04 \x01(\v21.storage.ComplianceOperatorReportData.SuiteStatusR\vsuiteStatus\"\xe3\x05\n" +
	"\x1eComplianceOperatorReportStatus\x12M\n" +
	"\trun_state\x18\x01 \x01(\x0e20.storage.ComplianceOperatorReportStatus.RunStateR\brunState\x129\n" +
	"\n" +
	"started_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12\x1b\n" +
	"\terror_msg\x18\x04 \x01(\tR\berrorMsg\x12a\n" +
	"\x13report_request_type\x18\x05 \x01(\x0e21.storage.ComplianceOperatorReportStatus.RunMethodR\x11reportRequestType\x12x\n" +
	"\x1areport_notification_method\x18\x06 \x01(\x0e2:.storage.ComplianceOperatorReportStatus.NotificationMethodR\x18reportNotificationMethod\"\xa3\x01\n" +
	"\bRunState\x12\v\n" +
	"\aWAITING\x10\x00\x12\r\n" +
	"\tPREPARING\x10\x01\x12\r\n" +
	"\tGENERATED\x10\x02\x12\r\n" +
	"\tDELIVERED\x10\x03\x12\v\n" +
	"\aFAILURE\x10\x04\x12\x11\n" +
	"\rPARTIAL_ERROR\x10\x05\x12\x1f\n" +
	"\x1bPARTIAL_SCAN_ERROR_DOWNLOAD\x10\x06\x12\x1c\n" +
	"\x18PARTIAL_SCAN_ERROR_EMAIL\x10\a\"-\n" +
	"\x12NotificationMethod\x12\t\n" +
	"\x05EMAIL\x10\x00\x12\f\n" +
	"\bDOWNLOAD\x10\x01\")\n" +
	"\tRunMethod\x12\r\n" +
	"\tON_DEMAND\x10\x00\x12\r\n" +
	"\tSCHEDULED\x10\x01*-\n" +
	"\bNodeRole\x12\t\n" +
	"\x05INFRA\x10\x00\x12\n" +
	"\n" +
	"\x06WORKER\x10\x01\x12\n" +
	"\n" +
	"\x06MASTER\x10\x02*A\n" +
	"\bScanType\x12\x13\n" +
	"\x0fUNSET_SCAN_TYPE\x10\x00\x12\r\n" +
	"\tNODE_SCAN\x10\x01\x12\x11\n" +
	"\rPLATFORM_SCAN\x10\x02*\xa3\x01\n" +
	"\fRuleSeverity\x12\x17\n" +
	"\x13UNSET_RULE_SEVERITY\x10\x00\x12\x19\n" +
	"\x15UNKNOWN_RULE_SEVERITY\x10\x01\x12\x16\n" +
	"\x12INFO_RULE_SEVERITY\x10\x02\x12\x15\n" +
	"\x11LOW_RULE_SEVERITY\x10\x03\x12\x18\n" +
	"\x14MEDIUM_RULE_SEVERITY\x10\x04\x12\x16\n" +
	"\x12HIGH_RULE_SEVERITY\x10\x05B6\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storage\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_storage_compliance_operator_v2_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_storage_compliance_operator_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_storage_compliance_operator_v2_proto_goTypes = []any{
	(NodeRole)(0),     // 0: storage.NodeRole
	(ScanType)(0),     // 1: storage.ScanType
	(RuleSeverity)(0), // 2: storage.RuleSeverity
	(ComplianceOperatorCheckResultV2_CheckStatus)(0),       // 3: storage.ComplianceOperatorCheckResultV2.CheckStatus
	(ComplianceOperatorReportStatus_RunState)(0),           // 4: storage.ComplianceOperatorReportStatus.RunState
	(ComplianceOperatorReportStatus_NotificationMethod)(0), // 5: storage.ComplianceOperatorReportStatus.NotificationMethod
	(ComplianceOperatorReportStatus_RunMethod)(0),          // 6: storage.ComplianceOperatorReportStatus.RunMethod
	(*ProfileShim)(nil),                               // 7: storage.ProfileShim
	(*ComplianceOperatorProfileV2)(nil),               // 8: storage.ComplianceOperatorProfileV2
	(*ComplianceOperatorRuleV2)(nil),                  // 9: storage.ComplianceOperatorRuleV2
	(*RuleControls)(nil),                              // 10: storage.RuleControls
	(*ComplianceOperatorScanConfigurationV2)(nil),     // 11: storage.ComplianceOperatorScanConfigurationV2
	(*ComplianceOperatorClusterScanConfigStatus)(nil), // 12: storage.ComplianceOperatorClusterScanConfigStatus
	(*ComplianceOperatorBenchmarkV2)(nil),             // 13: storage.ComplianceOperatorBenchmarkV2
	(*ComplianceOperatorCheckResultV2)(nil),           // 14: storage.ComplianceOperatorCheckResultV2
	(*ScanStatus)(nil),                                // 15: storage.ScanStatus
	(*ComplianceOperatorScanV2)(nil),                  // 16: storage.ComplianceOperatorScanV2
	(*ComplianceOperatorScanSettingBindingV2)(nil),    // 17: storage.ComplianceOperatorScanSettingBindingV2
	(*ComplianceOperatorCondition)(nil),               // 18: storage.ComplianceOperatorCondition
	(*ComplianceOperatorStatus)(nil),                  // 19: storage.ComplianceOperatorStatus
	(*ComplianceOperatorSuiteV2)(nil),                 // 20: storage.ComplianceOperatorSuiteV2
	(*ComplianceOperatorRemediationV2)(nil),           // 21: storage.ComplianceOperatorRemediationV2
	(*ComplianceOperatorReportSnapshotV2)(nil),        // 22: storage.ComplianceOperatorReportSnapshotV2
	(*ComplianceOperatorReportData)(nil),              // 23: storage.ComplianceOperatorReportData
	(*ComplianceOperatorReportStatus)(nil),            // 24: storage.ComplianceOperatorReportStatus
	nil,                                               // 25: storage.ComplianceOperatorProfileV2.LabelsEntry
	nil,                                               // 26: storage.ComplianceOperatorProfileV2.AnnotationsEntry
	(*ComplianceOperatorProfileV2_Rule)(nil),          // 27: storage.ComplianceOperatorProfileV2.Rule
	nil,                                               // 28: storage.ComplianceOperatorRuleV2.LabelsEntry
	nil,                                               // 29: storage.ComplianceOperatorRuleV2.AnnotationsEntry
	(*ComplianceOperatorRuleV2_Fix)(nil),              // 30: storage.ComplianceOperatorRuleV2.Fix
	nil,                                               // 31: storage.ComplianceOperatorScanConfigurationV2.LabelsEntry
	nil,                                               // 32: storage.ComplianceOperatorScanConfigurationV2.AnnotationsEntry
	(*ComplianceOperatorScanConfigurationV2_ProfileName)(nil), // 33: storage.ComplianceOperatorScanConfigurationV2.ProfileName
	(*ComplianceOperatorScanConfigurationV2_Cluster)(nil),     // 34: storage.ComplianceOperatorScanConfigurationV2.Cluster
	(*ComplianceOperatorBenchmarkV2_Profile)(nil),             // 35: storage.ComplianceOperatorBenchmarkV2.Profile
	nil, // 36: storage.ComplianceOperatorCheckResultV2.LabelsEntry
	nil, // 37: storage.ComplianceOperatorCheckResultV2.AnnotationsEntry
	nil, // 38: storage.ComplianceOperatorScanV2.LabelsEntry
	nil, // 39: storage.ComplianceOperatorScanV2.AnnotationsEntry
	nil, // 40: storage.ComplianceOperatorScanSettingBindingV2.LabelsEntry
	nil, // 41: storage.ComplianceOperatorScanSettingBindingV2.AnnotationsEntry
	(*ComplianceOperatorReportSnapshotV2_Scan)(nil),          // 42: storage.ComplianceOperatorReportSnapshotV2.Scan
	(*ComplianceOperatorReportSnapshotV2_FailedCluster)(nil), // 43: storage.ComplianceOperatorReportSnapshotV2.FailedCluster
	(*ComplianceOperatorReportData_SuiteStatus)(nil),         // 44: storage.ComplianceOperatorReportData.SuiteStatus
	(*ComplianceOperatorReportData_ClusterStatus)(nil),       // 45: storage.ComplianceOperatorReportData.ClusterStatus
	(*Schedule)(nil),              // 46: storage.Schedule
	(*timestamppb.Timestamp)(nil), // 47: google.protobuf.Timestamp
	(*SlimUser)(nil),              // 48: storage.SlimUser
	(*NotifierConfiguration)(nil), // 49: storage.NotifierConfiguration
}
var file_storage_compliance_operator_v2_proto_depIdxs = []int32{
	25, // 0: storage.ComplianceOperatorProfileV2.labels:type_name -> storage.ComplianceOperatorProfileV2.LabelsEntry
	26, // 1: storage.ComplianceOperatorProfileV2.annotations:type_name -> storage.ComplianceOperatorProfileV2.AnnotationsEntry
	27, // 2: storage.ComplianceOperatorProfileV2.rules:type_name -> storage.ComplianceOperatorProfileV2.Rule
	2,  // 3: storage.ComplianceOperatorRuleV2.severity:type_name -> storage.RuleSeverity
	28, // 4: storage.ComplianceOperatorRuleV2.labels:type_name -> storage.ComplianceOperatorRuleV2.LabelsEntry
	29, // 5: storage.ComplianceOperatorRuleV2.annotations:type_name -> storage.ComplianceOperatorRuleV2.AnnotationsEntry
	30, // 6: storage.ComplianceOperatorRuleV2.fixes:type_name -> storage.ComplianceOperatorRuleV2.Fix
	10, // 7: storage.ComplianceOperatorRuleV2.controls:type_name -> storage.RuleControls
	31, // 8: storage.ComplianceOperatorScanConfigurationV2.labels:type_name -> storage.ComplianceOperatorScanConfigurationV2.LabelsEntry
	32, // 9: storage.ComplianceOperatorScanConfigurationV2.annotations:type_name -> storage.ComplianceOperatorScanConfigurationV2.AnnotationsEntry
	33, // 10: storage.ComplianceOperatorScanConfigurationV2.profiles:type_name -> storage.ComplianceOperatorScanConfigurationV2.ProfileName
	0,  // 11: storage.ComplianceOperatorScanConfigurationV2.node_roles:type_name -> storage.NodeRole
	46, // 12: storage.ComplianceOperatorScanConfigurationV2.schedule:type_name -> storage.Schedule
	47, // 13: storage.ComplianceOperatorScanConfigurationV2.created_time:type_name -> google.protobuf.Timestamp
	47, // 14: storage.ComplianceOperatorScanConfigurationV2.last_updated_time:type_name -> google.protobuf.Timestamp
	48, // 15: storage.ComplianceOperatorScanConfigurationV2.modified_by:type_name -> storage.SlimUser
	34, // 16: storage.ComplianceOperatorScanConfigurationV2.clusters:type_name -> storage.ComplianceOperatorScanConfigurationV2.Cluster
	49, // 17: storage.ComplianceOperatorScanConfigurationV2.notifiers:type_name -> storage.NotifierConfiguration
	47, // 18: storage.ComplianceOperatorClusterScanConfigStatus.last_updated_time:type_name -> google.protobuf.Timestamp
	35, // 19: storage.ComplianceOperatorBenchmarkV2.profiles:type_name -> storage.ComplianceOperatorBenchmarkV2.Profile
	3,  // 20: storage.ComplianceOperatorCheckResultV2.status:type_name -> storage.ComplianceOperatorCheckResultV2.CheckStatus
	2,  // 21: storage.ComplianceOperatorCheckResultV2.severity:type_name -> storage.RuleSeverity
	36, // 22: storage.ComplianceOperatorCheckResultV2.labels:type_name -> storage.ComplianceOperatorCheckResultV2.LabelsEntry
	37, // 23: storage.ComplianceOperatorCheckResultV2.annotations:type_name -> storage.ComplianceOperatorCheckResultV2.AnnotationsEntry
	47, // 24: storage.ComplianceOperatorCheckResultV2.created_time:type_name -> google.protobuf.Timestamp
	47, // 25: storage.ComplianceOperatorCheckResultV2.last_started_time:type_name -> google.protobuf.Timestamp
	7,  // 26: storage.ComplianceOperatorScanV2.profile:type_name -> storage.ProfileShim
	38, // 27: storage.ComplianceOperatorScanV2.labels:type_name -> storage.ComplianceOperatorScanV2.LabelsEntry
	39, // 28: storage.ComplianceOperatorScanV2.annotations:type_name -> storage.ComplianceOperatorScanV2.AnnotationsEntry
	1,  // 29: storage.ComplianceOperatorScanV2.scan_type:type_name -> storage.ScanType
	0,  // 30: storage.ComplianceOperatorScanV2.node_selector:type_name -> storage.NodeRole
	15, // 31: storage.ComplianceOperatorScanV2.status:type_name -> storage.ScanStatus
	47, // 32: storage.ComplianceOperatorScanV2.created_time:type_name -> google.protobuf.Timestamp
	47, // 33: storage.ComplianceOperatorScanV2.last_executed_time:type_name -> google.protobuf.Timestamp
	47, // 34: storage.ComplianceOperatorScanV2.last_started_time:type_name -> google.protobuf.Timestamp
	40, // 35: storage.ComplianceOperatorScanSettingBindingV2.labels:type_name -> storage.ComplianceOperatorScanSettingBindingV2.LabelsEntry
	41, // 36: storage.ComplianceOperatorScanSettingBindingV2.annotations:type_name -> storage.ComplianceOperatorScanSettingBindingV2.AnnotationsEntry
	19, // 37: storage.ComplianceOperatorScanSettingBindingV2.status:type_name -> storage.ComplianceOperatorStatus
	47, // 38: storage.ComplianceOperatorCondition.last_transition_time:type_name -> google.protobuf.Timestamp
	18, // 39: storage.ComplianceOperatorStatus.conditions:type_name -> storage.ComplianceOperatorCondition
	19, // 40: storage.ComplianceOperatorSuiteV2.status:type_name -> storage.ComplianceOperatorStatus
	24, // 41: storage.ComplianceOperatorReportSnapshotV2.report_status:type_name -> storage.ComplianceOperatorReportStatus
	48, // 42: storage.ComplianceOperatorReportSnapshotV2.user:type_name -> storage.SlimUser
	42, // 43: storage.ComplianceOperatorReportSnapshotV2.scans:type_name -> storage.ComplianceOperatorReportSnapshotV2.Scan
	23, // 44: storage.ComplianceOperatorReportSnapshotV2.report_data:type_name -> storage.ComplianceOperatorReportData
	43, // 45: storage.ComplianceOperatorReportSnapshotV2.failed_clusters:type_name -> storage.ComplianceOperatorReportSnapshotV2.FailedCluster
	11, // 46: storage.ComplianceOperatorReportData.scan_configuration:type_name -> storage.ComplianceOperatorScanConfigurationV2
	45, // 47: storage.ComplianceOperatorReportData.cluster_status:type_name -> storage.ComplianceOperatorReportData.ClusterStatus
	47, // 48: storage.ComplianceOperatorReportData.last_executed_time:type_name -> google.protobuf.Timestamp
	4,  // 49: storage.ComplianceOperatorReportStatus.run_state:type_name -> storage.ComplianceOperatorReportStatus.RunState
	47, // 50: storage.ComplianceOperatorReportStatus.started_at:type_name -> google.protobuf.Timestamp
	47, // 51: storage.ComplianceOperatorReportStatus.completed_at:type_name -> google.protobuf.Timestamp
	6,  // 52: storage.ComplianceOperatorReportStatus.report_request_type:type_name -> storage.ComplianceOperatorReportStatus.RunMethod
	5,  // 53: storage.ComplianceOperatorReportStatus.report_notification_method:type_name -> storage.ComplianceOperatorReportStatus.NotificationMethod
	47, // 54: storage.ComplianceOperatorReportSnapshotV2.Scan.last_started_time:type_name -> google.protobuf.Timestamp
	47, // 55: storage.ComplianceOperatorReportData.SuiteStatus.last_transition_time:type_name -> google.protobuf.Timestamp
	44, // 56: storage.ComplianceOperatorReportData.ClusterStatus.suite_status:type_name -> storage.ComplianceOperatorReportData.SuiteStatus
	57, // [57:57] is the sub-list for method output_type
	57, // [57:57] is the sub-list for method input_type
	57, // [57:57] is the sub-list for extension type_name
	57, // [57:57] is the sub-list for extension extendee
	0,  // [0:57] is the sub-list for field type_name
}

func init() { file_storage_compliance_operator_v2_proto_init() }
func file_storage_compliance_operator_v2_proto_init() {
	if File_storage_compliance_operator_v2_proto != nil {
		return
	}
	file_storage_report_notifier_configuration_proto_init()
	file_storage_schedule_proto_init()
	file_storage_user_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_compliance_operator_v2_proto_rawDesc), len(file_storage_compliance_operator_v2_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_compliance_operator_v2_proto_goTypes,
		DependencyIndexes: file_storage_compliance_operator_v2_proto_depIdxs,
		EnumInfos:         file_storage_compliance_operator_v2_proto_enumTypes,
		MessageInfos:      file_storage_compliance_operator_v2_proto_msgTypes,
	}.Build()
	File_storage_compliance_operator_v2_proto = out.File
	file_storage_compliance_operator_v2_proto_goTypes = nil
	file_storage_compliance_operator_v2_proto_depIdxs = nil
}
