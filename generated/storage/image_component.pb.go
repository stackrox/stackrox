// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/image_component.proto

//go:build !protoopaque

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This proto is deprecated and replaced by ImageComponentV2
//
// Deprecated: Marked as deprecated in storage/image_component.proto.
type ImageComponent struct {
	state     protoimpl.MessageState `protogen:"hybrid.v1"`
	Id        *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" search:"Component ID,store,hidden" sql:"pk,id"`           // This field is composite id over name, version, and operating system. // @gotags: search:"Component ID,store,hidden" sql:"pk,id"
	Name      *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty" search:"Component,store"`       // @gotags: search:"Component,store"
	Version   *string                `protobuf:"bytes,3,opt,name=version" json:"version,omitempty" search:"Component Version,store"` // @gotags: search:"Component Version,store"
	License   *License               `protobuf:"bytes,4,opt,name=license" json:"license,omitempty"`
	Priority  *int64                 `protobuf:"varint,5,opt,name=priority" json:"priority,omitempty" search:"Component Risk Priority,hidden"`                     // @gotags: search:"Component Risk Priority,hidden"
	Source    *SourceType            `protobuf:"varint,6,opt,name=source,enum=storage.SourceType" json:"source,omitempty" search:"Component Source,store"` // @gotags: search:"Component Source,store"
	RiskScore *float32               `protobuf:"fixed32,7,opt,name=risk_score,json=riskScore" json:"risk_score,omitempty" search:"Component Risk Score,hidden"` // @gotags: search:"Component Risk Score,hidden"
	// Types that are valid to be assigned to SetTopCvss:
	//
	//	*ImageComponent_TopCvss
	SetTopCvss isImageComponent_SetTopCvss `protobuf_oneof:"set_top_cvss"`
	// Component version that fixes all the fixable vulnerabilities in this component.
	FixedBy         *string `protobuf:"bytes,9,opt,name=fixed_by,json=fixedBy" json:"fixed_by,omitempty"`
	OperatingSystem *string `protobuf:"bytes,10,opt,name=operating_system,json=operatingSystem" json:"operating_system,omitempty" search:"Operating System"` // @gotags: search:"Operating System"
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ImageComponent) Reset() {
	*x = ImageComponent{}
	mi := &file_storage_image_component_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageComponent) ProtoMessage() {}

func (x *ImageComponent) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_component_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ImageComponent) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ImageComponent) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ImageComponent) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ImageComponent) GetLicense() *License {
	if x != nil {
		return x.License
	}
	return nil
}

func (x *ImageComponent) GetPriority() int64 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *ImageComponent) GetSource() SourceType {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return SourceType_OS
}

func (x *ImageComponent) GetRiskScore() float32 {
	if x != nil && x.RiskScore != nil {
		return *x.RiskScore
	}
	return 0
}

func (x *ImageComponent) GetSetTopCvss() isImageComponent_SetTopCvss {
	if x != nil {
		return x.SetTopCvss
	}
	return nil
}

func (x *ImageComponent) Get_TopCvss() float32 {
	if x != nil {
		if x, ok := x.SetTopCvss.(*ImageComponent_TopCvss); ok {
			return x.TopCvss
		}
	}
	return 0
}

// Deprecated: Use Get_TopCvss instead.
func (x *ImageComponent) GetTopCvss() float32 {
	return x.Get_TopCvss()
}

func (x *ImageComponent) GetFixedBy() string {
	if x != nil && x.FixedBy != nil {
		return *x.FixedBy
	}
	return ""
}

func (x *ImageComponent) GetOperatingSystem() string {
	if x != nil && x.OperatingSystem != nil {
		return *x.OperatingSystem
	}
	return ""
}

func (x *ImageComponent) SetId(v string) {
	x.Id = &v
}

func (x *ImageComponent) SetName(v string) {
	x.Name = &v
}

func (x *ImageComponent) SetVersion(v string) {
	x.Version = &v
}

func (x *ImageComponent) SetLicense(v *License) {
	x.License = v
}

func (x *ImageComponent) SetPriority(v int64) {
	x.Priority = &v
}

func (x *ImageComponent) SetSource(v SourceType) {
	x.Source = &v
}

func (x *ImageComponent) SetRiskScore(v float32) {
	x.RiskScore = &v
}

func (x *ImageComponent) Set_TopCvss(v float32) {
	x.SetTopCvss = &ImageComponent_TopCvss{v}
}

func (x *ImageComponent) SetFixedBy(v string) {
	x.FixedBy = &v
}

func (x *ImageComponent) SetOperatingSystem(v string) {
	x.OperatingSystem = &v
}

func (x *ImageComponent) HasId() bool {
	if x == nil {
		return false
	}
	return x.Id != nil
}

func (x *ImageComponent) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *ImageComponent) HasVersion() bool {
	if x == nil {
		return false
	}
	return x.Version != nil
}

func (x *ImageComponent) HasLicense() bool {
	if x == nil {
		return false
	}
	return x.License != nil
}

func (x *ImageComponent) HasPriority() bool {
	if x == nil {
		return false
	}
	return x.Priority != nil
}

func (x *ImageComponent) HasSource() bool {
	if x == nil {
		return false
	}
	return x.Source != nil
}

func (x *ImageComponent) HasRiskScore() bool {
	if x == nil {
		return false
	}
	return x.RiskScore != nil
}

func (x *ImageComponent) HasSetTopCvss() bool {
	if x == nil {
		return false
	}
	return x.SetTopCvss != nil
}

func (x *ImageComponent) Has_TopCvss() bool {
	if x == nil {
		return false
	}
	_, ok := x.SetTopCvss.(*ImageComponent_TopCvss)
	return ok
}

func (x *ImageComponent) HasFixedBy() bool {
	if x == nil {
		return false
	}
	return x.FixedBy != nil
}

func (x *ImageComponent) HasOperatingSystem() bool {
	if x == nil {
		return false
	}
	return x.OperatingSystem != nil
}

func (x *ImageComponent) ClearId() {
	x.Id = nil
}

func (x *ImageComponent) ClearName() {
	x.Name = nil
}

func (x *ImageComponent) ClearVersion() {
	x.Version = nil
}

func (x *ImageComponent) ClearLicense() {
	x.License = nil
}

func (x *ImageComponent) ClearPriority() {
	x.Priority = nil
}

func (x *ImageComponent) ClearSource() {
	x.Source = nil
}

func (x *ImageComponent) ClearRiskScore() {
	x.RiskScore = nil
}

func (x *ImageComponent) ClearSetTopCvss() {
	x.SetTopCvss = nil
}

func (x *ImageComponent) Clear_TopCvss() {
	if _, ok := x.SetTopCvss.(*ImageComponent_TopCvss); ok {
		x.SetTopCvss = nil
	}
}

func (x *ImageComponent) ClearFixedBy() {
	x.FixedBy = nil
}

func (x *ImageComponent) ClearOperatingSystem() {
	x.OperatingSystem = nil
}

const ImageComponent_SetTopCvss_not_set_case case_ImageComponent_SetTopCvss = 0
const ImageComponent_TopCvss_case case_ImageComponent_SetTopCvss = 8

func (x *ImageComponent) WhichSetTopCvss() case_ImageComponent_SetTopCvss {
	if x == nil {
		return ImageComponent_SetTopCvss_not_set_case
	}
	switch x.SetTopCvss.(type) {
	case *ImageComponent_TopCvss:
		return ImageComponent_TopCvss_case
	default:
		return ImageComponent_SetTopCvss_not_set_case
	}
}

// Deprecated: Marked as deprecated in storage/image_component.proto.
type ImageComponent_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id        *string
	Name      *string
	Version   *string
	License   *License
	Priority  *int64
	Source    *SourceType
	RiskScore *float32
	// Fields of oneof SetTopCvss:
	TopCvss *float32
	// -- end of SetTopCvss
	// Component version that fixes all the fixable vulnerabilities in this component.
	FixedBy         *string
	OperatingSystem *string
}

func (b0 ImageComponent_builder) Build() *ImageComponent {
	m0 := &ImageComponent{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	x.Name = b.Name
	x.Version = b.Version
	x.License = b.License
	x.Priority = b.Priority
	x.Source = b.Source
	x.RiskScore = b.RiskScore
	if b.TopCvss != nil {
		x.SetTopCvss = &ImageComponent_TopCvss{*b.TopCvss}
	}
	x.FixedBy = b.FixedBy
	x.OperatingSystem = b.OperatingSystem
	return m0
}

type case_ImageComponent_SetTopCvss protoreflect.FieldNumber

func (x case_ImageComponent_SetTopCvss) String() string {
	md := file_storage_image_component_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isImageComponent_SetTopCvss interface {
	isImageComponent_SetTopCvss()
}

type ImageComponent_TopCvss struct {
	TopCvss float32 `protobuf:"fixed32,8,opt,name=top_cvss,json=topCvss,oneof" search:"Component Top CVSS,store"` // @gotags: search:"Component Top CVSS,store"
}

func (*ImageComponent_TopCvss) isImageComponent_SetTopCvss() {}

type ImageComponentV2 struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// ID will be form of Name+version+arch+imageID
	Id        *string     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty" search:"Component ID,store,hidden" sql:"pk,id"`                                  // @gotags: search:"Component ID,store,hidden" sql:"pk,id"
	Name      *string     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty" search:"Component,store"`                              // @gotags: search:"Component,store"
	Version   *string     `protobuf:"bytes,3,opt,name=version" json:"version,omitempty" search:"Component Version,store"`                        // @gotags: search:"Component Version,store"
	Priority  *int64      `protobuf:"varint,4,opt,name=priority" json:"priority,omitempty" search:"Component Risk Priority,hidden"`                     // @gotags: search:"Component Risk Priority,hidden"
	Source    *SourceType `protobuf:"varint,5,opt,name=source,enum=storage.SourceType" json:"source,omitempty" search:"Component Source,store"` // @gotags: search:"Component Source,store"
	RiskScore *float32    `protobuf:"fixed32,6,opt,name=risk_score,json=riskScore" json:"risk_score,omitempty" search:"Component Risk Score,hidden"` // @gotags: search:"Component Risk Score,hidden"
	// Types that are valid to be assigned to SetTopCvss:
	//
	//	*ImageComponentV2_TopCvss
	SetTopCvss isImageComponentV2_SetTopCvss `protobuf_oneof:"set_top_cvss"`
	// Component version that fixes all the fixable vulnerabilities in this component.
	FixedBy         *string `protobuf:"bytes,8,opt,name=fixed_by,json=fixedBy" json:"fixed_by,omitempty"`
	OperatingSystem *string `protobuf:"bytes,9,opt,name=operating_system,json=operatingSystem" json:"operating_system,omitempty" search:"Operating System"` // @gotags: search:"Operating System"
	// was hash index, making it btree
	//
	// Deprecated: Marked as deprecated in storage/image_component.proto.
	ImageId *string `protobuf:"bytes,10,opt,name=image_id,json=imageId" json:"image_id,omitempty" sql:"fk(Image:id),index=btree"` // @gotags: sql:"fk(Image:id),index=btree"
	// / Layer that contains this component
	//
	// Types that are valid to be assigned to HasLayerIndex:
	//
	//	*ImageComponentV2_LayerIndex
	HasLayerIndex isImageComponentV2_HasLayerIndex `protobuf_oneof:"has_layer_index"`
	Location      *string                          `protobuf:"bytes,12,opt,name=location" json:"location,omitempty" search:"Component Location,store,hidden"` // @gotags: search:"Component Location,store,hidden"
	Architecture  *string                          `protobuf:"bytes,13,opt,name=architecture" json:"architecture,omitempty"`
	ImageIdV2     *string                          `protobuf:"bytes,14,opt,name=image_id_v2,json=imageIdV2" json:"image_id_v2,omitempty" sql:"fk(ImageV2:id),index=btree,allow-null"` // @gotags: sql:"fk(ImageV2:id),index=btree,allow-null"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageComponentV2) Reset() {
	*x = ImageComponentV2{}
	mi := &file_storage_image_component_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageComponentV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageComponentV2) ProtoMessage() {}

func (x *ImageComponentV2) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_component_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ImageComponentV2) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ImageComponentV2) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ImageComponentV2) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ImageComponentV2) GetPriority() int64 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *ImageComponentV2) GetSource() SourceType {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return SourceType_OS
}

func (x *ImageComponentV2) GetRiskScore() float32 {
	if x != nil && x.RiskScore != nil {
		return *x.RiskScore
	}
	return 0
}

func (x *ImageComponentV2) GetSetTopCvss() isImageComponentV2_SetTopCvss {
	if x != nil {
		return x.SetTopCvss
	}
	return nil
}

func (x *ImageComponentV2) Get_TopCvss() float32 {
	if x != nil {
		if x, ok := x.SetTopCvss.(*ImageComponentV2_TopCvss); ok {
			return x.TopCvss
		}
	}
	return 0
}

// Deprecated: Use Get_TopCvss instead.
func (x *ImageComponentV2) GetTopCvss() float32 {
	return x.Get_TopCvss()
}

func (x *ImageComponentV2) GetFixedBy() string {
	if x != nil && x.FixedBy != nil {
		return *x.FixedBy
	}
	return ""
}

func (x *ImageComponentV2) GetOperatingSystem() string {
	if x != nil && x.OperatingSystem != nil {
		return *x.OperatingSystem
	}
	return ""
}

// Deprecated: Marked as deprecated in storage/image_component.proto.
func (x *ImageComponentV2) GetImageId() string {
	if x != nil && x.ImageId != nil {
		return *x.ImageId
	}
	return ""
}

func (x *ImageComponentV2) GetHasLayerIndex() isImageComponentV2_HasLayerIndex {
	if x != nil {
		return x.HasLayerIndex
	}
	return nil
}

func (x *ImageComponentV2) Get_LayerIndex() int32 {
	if x != nil {
		if x, ok := x.HasLayerIndex.(*ImageComponentV2_LayerIndex); ok {
			return x.LayerIndex
		}
	}
	return 0
}

// Deprecated: Use Get_LayerIndex instead.
func (x *ImageComponentV2) GetLayerIndex() int32 {
	return x.Get_LayerIndex()
}

func (x *ImageComponentV2) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *ImageComponentV2) GetArchitecture() string {
	if x != nil && x.Architecture != nil {
		return *x.Architecture
	}
	return ""
}

func (x *ImageComponentV2) GetImageIdV2() string {
	if x != nil && x.ImageIdV2 != nil {
		return *x.ImageIdV2
	}
	return ""
}

func (x *ImageComponentV2) SetId(v string) {
	x.Id = &v
}

func (x *ImageComponentV2) SetName(v string) {
	x.Name = &v
}

func (x *ImageComponentV2) SetVersion(v string) {
	x.Version = &v
}

func (x *ImageComponentV2) SetPriority(v int64) {
	x.Priority = &v
}

func (x *ImageComponentV2) SetSource(v SourceType) {
	x.Source = &v
}

func (x *ImageComponentV2) SetRiskScore(v float32) {
	x.RiskScore = &v
}

func (x *ImageComponentV2) Set_TopCvss(v float32) {
	x.SetTopCvss = &ImageComponentV2_TopCvss{v}
}

func (x *ImageComponentV2) SetFixedBy(v string) {
	x.FixedBy = &v
}

func (x *ImageComponentV2) SetOperatingSystem(v string) {
	x.OperatingSystem = &v
}

// Deprecated: Marked as deprecated in storage/image_component.proto.
func (x *ImageComponentV2) SetImageId(v string) {
	x.ImageId = &v
}

func (x *ImageComponentV2) Set_LayerIndex(v int32) {
	x.HasLayerIndex = &ImageComponentV2_LayerIndex{v}
}

func (x *ImageComponentV2) SetLocation(v string) {
	x.Location = &v
}

func (x *ImageComponentV2) SetArchitecture(v string) {
	x.Architecture = &v
}

func (x *ImageComponentV2) SetImageIdV2(v string) {
	x.ImageIdV2 = &v
}

func (x *ImageComponentV2) HasId() bool {
	if x == nil {
		return false
	}
	return x.Id != nil
}

func (x *ImageComponentV2) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *ImageComponentV2) HasVersion() bool {
	if x == nil {
		return false
	}
	return x.Version != nil
}

func (x *ImageComponentV2) HasPriority() bool {
	if x == nil {
		return false
	}
	return x.Priority != nil
}

func (x *ImageComponentV2) HasSource() bool {
	if x == nil {
		return false
	}
	return x.Source != nil
}

func (x *ImageComponentV2) HasRiskScore() bool {
	if x == nil {
		return false
	}
	return x.RiskScore != nil
}

func (x *ImageComponentV2) HasSetTopCvss() bool {
	if x == nil {
		return false
	}
	return x.SetTopCvss != nil
}

func (x *ImageComponentV2) Has_TopCvss() bool {
	if x == nil {
		return false
	}
	_, ok := x.SetTopCvss.(*ImageComponentV2_TopCvss)
	return ok
}

func (x *ImageComponentV2) HasFixedBy() bool {
	if x == nil {
		return false
	}
	return x.FixedBy != nil
}

func (x *ImageComponentV2) HasOperatingSystem() bool {
	if x == nil {
		return false
	}
	return x.OperatingSystem != nil
}

// Deprecated: Marked as deprecated in storage/image_component.proto.
func (x *ImageComponentV2) HasImageId() bool {
	if x == nil {
		return false
	}
	return x.ImageId != nil
}

func (x *ImageComponentV2) HasHasLayerIndex() bool {
	if x == nil {
		return false
	}
	return x.HasLayerIndex != nil
}

func (x *ImageComponentV2) Has_LayerIndex() bool {
	if x == nil {
		return false
	}
	_, ok := x.HasLayerIndex.(*ImageComponentV2_LayerIndex)
	return ok
}

func (x *ImageComponentV2) HasLocation() bool {
	if x == nil {
		return false
	}
	return x.Location != nil
}

func (x *ImageComponentV2) HasArchitecture() bool {
	if x == nil {
		return false
	}
	return x.Architecture != nil
}

func (x *ImageComponentV2) HasImageIdV2() bool {
	if x == nil {
		return false
	}
	return x.ImageIdV2 != nil
}

func (x *ImageComponentV2) ClearId() {
	x.Id = nil
}

func (x *ImageComponentV2) ClearName() {
	x.Name = nil
}

func (x *ImageComponentV2) ClearVersion() {
	x.Version = nil
}

func (x *ImageComponentV2) ClearPriority() {
	x.Priority = nil
}

func (x *ImageComponentV2) ClearSource() {
	x.Source = nil
}

func (x *ImageComponentV2) ClearRiskScore() {
	x.RiskScore = nil
}

func (x *ImageComponentV2) ClearSetTopCvss() {
	x.SetTopCvss = nil
}

func (x *ImageComponentV2) Clear_TopCvss() {
	if _, ok := x.SetTopCvss.(*ImageComponentV2_TopCvss); ok {
		x.SetTopCvss = nil
	}
}

func (x *ImageComponentV2) ClearFixedBy() {
	x.FixedBy = nil
}

func (x *ImageComponentV2) ClearOperatingSystem() {
	x.OperatingSystem = nil
}

// Deprecated: Marked as deprecated in storage/image_component.proto.
func (x *ImageComponentV2) ClearImageId() {
	x.ImageId = nil
}

func (x *ImageComponentV2) ClearHasLayerIndex() {
	x.HasLayerIndex = nil
}

func (x *ImageComponentV2) Clear_LayerIndex() {
	if _, ok := x.HasLayerIndex.(*ImageComponentV2_LayerIndex); ok {
		x.HasLayerIndex = nil
	}
}

func (x *ImageComponentV2) ClearLocation() {
	x.Location = nil
}

func (x *ImageComponentV2) ClearArchitecture() {
	x.Architecture = nil
}

func (x *ImageComponentV2) ClearImageIdV2() {
	x.ImageIdV2 = nil
}

const ImageComponentV2_SetTopCvss_not_set_case case_ImageComponentV2_SetTopCvss = 0
const ImageComponentV2_TopCvss_case case_ImageComponentV2_SetTopCvss = 7

func (x *ImageComponentV2) WhichSetTopCvss() case_ImageComponentV2_SetTopCvss {
	if x == nil {
		return ImageComponentV2_SetTopCvss_not_set_case
	}
	switch x.SetTopCvss.(type) {
	case *ImageComponentV2_TopCvss:
		return ImageComponentV2_TopCvss_case
	default:
		return ImageComponentV2_SetTopCvss_not_set_case
	}
}

const ImageComponentV2_HasLayerIndex_not_set_case case_ImageComponentV2_HasLayerIndex = 0
const ImageComponentV2_LayerIndex_case case_ImageComponentV2_HasLayerIndex = 11

func (x *ImageComponentV2) WhichHasLayerIndex() case_ImageComponentV2_HasLayerIndex {
	if x == nil {
		return ImageComponentV2_HasLayerIndex_not_set_case
	}
	switch x.HasLayerIndex.(type) {
	case *ImageComponentV2_LayerIndex:
		return ImageComponentV2_LayerIndex_case
	default:
		return ImageComponentV2_HasLayerIndex_not_set_case
	}
}

type ImageComponentV2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// ID will be form of Name+version+arch+imageID
	Id        *string
	Name      *string
	Version   *string
	Priority  *int64
	Source    *SourceType
	RiskScore *float32
	// Fields of oneof SetTopCvss:
	TopCvss *float32
	// -- end of SetTopCvss
	// Component version that fixes all the fixable vulnerabilities in this component.
	FixedBy         *string
	OperatingSystem *string
	// was hash index, making it btree
	//
	// Deprecated: Marked as deprecated in storage/image_component.proto.
	ImageId *string
	/// Layer that contains this component

	// Fields of oneof HasLayerIndex:
	LayerIndex *int32
	// -- end of HasLayerIndex
	Location     *string
	Architecture *string
	ImageIdV2    *string
}

func (b0 ImageComponentV2_builder) Build() *ImageComponentV2 {
	m0 := &ImageComponentV2{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	x.Name = b.Name
	x.Version = b.Version
	x.Priority = b.Priority
	x.Source = b.Source
	x.RiskScore = b.RiskScore
	if b.TopCvss != nil {
		x.SetTopCvss = &ImageComponentV2_TopCvss{*b.TopCvss}
	}
	x.FixedBy = b.FixedBy
	x.OperatingSystem = b.OperatingSystem
	x.ImageId = b.ImageId
	if b.LayerIndex != nil {
		x.HasLayerIndex = &ImageComponentV2_LayerIndex{*b.LayerIndex}
	}
	x.Location = b.Location
	x.Architecture = b.Architecture
	x.ImageIdV2 = b.ImageIdV2
	return m0
}

type case_ImageComponentV2_SetTopCvss protoreflect.FieldNumber

func (x case_ImageComponentV2_SetTopCvss) String() string {
	md := file_storage_image_component_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type case_ImageComponentV2_HasLayerIndex protoreflect.FieldNumber

func (x case_ImageComponentV2_HasLayerIndex) String() string {
	md := file_storage_image_component_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isImageComponentV2_SetTopCvss interface {
	isImageComponentV2_SetTopCvss()
}

type ImageComponentV2_TopCvss struct {
	TopCvss float32 `protobuf:"fixed32,7,opt,name=top_cvss,json=topCvss,oneof" search:"Component Top CVSS,store"` // @gotags: search:"Component Top CVSS,store"
}

func (*ImageComponentV2_TopCvss) isImageComponentV2_SetTopCvss() {}

type isImageComponentV2_HasLayerIndex interface {
	isImageComponentV2_HasLayerIndex()
}

type ImageComponentV2_LayerIndex struct {
	LayerIndex int32 `protobuf:"varint,11,opt,name=layer_index,json=layerIndex,oneof"`
}

func (*ImageComponentV2_LayerIndex) isImageComponentV2_HasLayerIndex() {}

var File_storage_image_component_proto protoreflect.FileDescriptor

const file_storage_image_component_proto_rawDesc = "" +
	"\n" +
	"\x1dstorage/image_component.proto\x12\astorage\x1a\x13storage/image.proto\x1a!google/protobuf/go_features.proto\"\xd9\x02\n" +
	"\x0eImageComponent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12*\n" +
	"\alicense\x18\x04 \x01(\v2\x10.storage.LicenseR\alicense\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\x03R\bpriority\x12+\n" +
	"\x06source\x18\x06 \x01(\x0e2\x13.storage.SourceTypeR\x06source\x12\x1d\n" +
	"\n" +
	"risk_score\x18\a \x01(\x02R\triskScore\x12\x1b\n" +
	"\btop_cvss\x18\b \x01(\x02H\x00R\atopCvss\x12\x19\n" +
	"\bfixed_by\x18\t \x01(\tR\afixedBy\x12)\n" +
	"\x10operating_system\x18\n" +
	" \x01(\tR\x0foperatingSystem:\x02\x18\x01B\x0e\n" +
	"\fset_top_cvss\"\xe0\x03\n" +
	"\x10ImageComponentV2\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x1a\n" +
	"\bpriority\x18\x04 \x01(\x03R\bpriority\x12+\n" +
	"\x06source\x18\x05 \x01(\x0e2\x13.storage.SourceTypeR\x06source\x12\x1d\n" +
	"\n" +
	"risk_score\x18\x06 \x01(\x02R\triskScore\x12\x1b\n" +
	"\btop_cvss\x18\a \x01(\x02H\x00R\atopCvss\x12\x19\n" +
	"\bfixed_by\x18\b \x01(\tR\afixedBy\x12)\n" +
	"\x10operating_system\x18\t \x01(\tR\x0foperatingSystem\x12\x1d\n" +
	"\bimage_id\x18\n" +
	" \x01(\tB\x02\x18\x01R\aimageId\x12!\n" +
	"\vlayer_index\x18\v \x01(\x05H\x01R\n" +
	"layerIndex\x12\x1a\n" +
	"\blocation\x18\f \x01(\tR\blocation\x12\"\n" +
	"\farchitecture\x18\r \x01(\tR\farchitecture\x12\x1e\n" +
	"\vimage_id_v2\x18\x0e \x01(\tR\timageIdV2B\x0e\n" +
	"\fset_top_cvssB\x11\n" +
	"\x0fhas_layer_indexB6\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storage\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_storage_image_component_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_storage_image_component_proto_goTypes = []any{
	(*ImageComponent)(nil),   // 0: storage.ImageComponent
	(*ImageComponentV2)(nil), // 1: storage.ImageComponentV2
	(*License)(nil),          // 2: storage.License
	(SourceType)(0),          // 3: storage.SourceType
}
var file_storage_image_component_proto_depIdxs = []int32{
	2, // 0: storage.ImageComponent.license:type_name -> storage.License
	3, // 1: storage.ImageComponent.source:type_name -> storage.SourceType
	3, // 2: storage.ImageComponentV2.source:type_name -> storage.SourceType
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_storage_image_component_proto_init() }
func file_storage_image_component_proto_init() {
	if File_storage_image_component_proto != nil {
		return
	}
	file_storage_image_proto_init()
	file_storage_image_component_proto_msgTypes[0].OneofWrappers = []any{
		(*ImageComponent_TopCvss)(nil),
	}
	file_storage_image_component_proto_msgTypes[1].OneofWrappers = []any{
		(*ImageComponentV2_TopCvss)(nil),
		(*ImageComponentV2_LayerIndex)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_image_component_proto_rawDesc), len(file_storage_image_component_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_image_component_proto_goTypes,
		DependencyIndexes: file_storage_image_component_proto_depIdxs,
		MessageInfos:      file_storage_image_component_proto_msgTypes,
	}.Build()
	File_storage_image_component_proto = out.File
	file_storage_image_component_proto_goTypes = nil
	file_storage_image_component_proto_depIdxs = nil
}
