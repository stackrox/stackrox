// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: storage/image_integration.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImageIntegrationCategory int32

const (
	ImageIntegrationCategory_REGISTRY ImageIntegrationCategory = 0
	ImageIntegrationCategory_SCANNER  ImageIntegrationCategory = 1
	// Image and Node integrations are currently done on the same form in the UI
	// so the image integration is also currently used for node integrations.
	// This decision was made because we currently only support one node scanner (our scanner).
	ImageIntegrationCategory_NODE_SCANNER ImageIntegrationCategory = 2
)

// Enum value maps for ImageIntegrationCategory.
var (
	ImageIntegrationCategory_name = map[int32]string{
		0: "REGISTRY",
		1: "SCANNER",
		2: "NODE_SCANNER",
	}
	ImageIntegrationCategory_value = map[string]int32{
		"REGISTRY":     0,
		"SCANNER":      1,
		"NODE_SCANNER": 2,
	}
)

func (x ImageIntegrationCategory) Enum() *ImageIntegrationCategory {
	p := new(ImageIntegrationCategory)
	*p = x
	return p
}

func (x ImageIntegrationCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageIntegrationCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_image_integration_proto_enumTypes[0].Descriptor()
}

func (ImageIntegrationCategory) Type() protoreflect.EnumType {
	return &file_storage_image_integration_proto_enumTypes[0]
}

func (x ImageIntegrationCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageIntegrationCategory.Descriptor instead.
func (ImageIntegrationCategory) EnumDescriptor() ([]byte, []int) {
	return file_storage_image_integration_proto_rawDescGZIP(), []int{0}
}

// Next Tag: 25
type ImageIntegration struct {
	state      protoimpl.MessageState     `protogen:"open.v1"`
	Id         string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" sql:"pk,type(uuid)"`     // @gotags: sql:"pk,type(uuid)"
	Name       string                     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" sql:"unique"` // @gotags: sql:"unique"
	Type       string                     `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Categories []ImageIntegrationCategory `protobuf:"varint,6,rep,packed,name=categories,proto3,enum=storage.ImageIntegrationCategory" json:"categories,omitempty"`
	// Custom configuration based on the image integration type.
	//
	// Types that are valid to be assigned to IntegrationConfig:
	//
	//	*ImageIntegration_Clairify
	//	*ImageIntegration_ScannerV4
	//	*ImageIntegration_Docker
	//	*ImageIntegration_Quay
	//	*ImageIntegration_Ecr
	//	*ImageIntegration_Google
	//	*ImageIntegration_Clair
	//	*ImageIntegration_ClairV4
	//	*ImageIntegration_Ibm
	//	*ImageIntegration_Azure
	IntegrationConfig   isImageIntegration_IntegrationConfig `protobuf_oneof:"IntegrationConfig"`
	Autogenerated       bool                                 `protobuf:"varint,15,opt,name=autogenerated,proto3" json:"autogenerated,omitempty"`
	ClusterId           string                               `protobuf:"bytes,16,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty" search:"Cluster ID,hidden,store" sql:"type(uuid)"` // @gotags: search:"Cluster ID,hidden,store" sql:"type(uuid)"
	SkipTestIntegration bool                                 `protobuf:"varint,18,opt,name=skip_test_integration,json=skipTestIntegration,proto3" json:"skip_test_integration,omitempty"`
	Source              *ImageIntegration_Source             `protobuf:"bytes,21,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ImageIntegration) Reset() {
	*x = ImageIntegration{}
	mi := &file_storage_image_integration_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageIntegration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageIntegration) ProtoMessage() {}

func (x *ImageIntegration) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageIntegration.ProtoReflect.Descriptor instead.
func (*ImageIntegration) Descriptor() ([]byte, []int) {
	return file_storage_image_integration_proto_rawDescGZIP(), []int{0}
}

func (x *ImageIntegration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ImageIntegration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ImageIntegration) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ImageIntegration) GetCategories() []ImageIntegrationCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *ImageIntegration) GetIntegrationConfig() isImageIntegration_IntegrationConfig {
	if x != nil {
		return x.IntegrationConfig
	}
	return nil
}

func (x *ImageIntegration) GetClairify() *ClairifyConfig {
	if x != nil {
		if x, ok := x.IntegrationConfig.(*ImageIntegration_Clairify); ok {
			return x.Clairify
		}
	}
	return nil
}

func (x *ImageIntegration) GetScannerV4() *ScannerV4Config {
	if x != nil {
		if x, ok := x.IntegrationConfig.(*ImageIntegration_ScannerV4); ok {
			return x.ScannerV4
		}
	}
	return nil
}

func (x *ImageIntegration) GetDocker() *DockerConfig {
	if x != nil {
		if x, ok := x.IntegrationConfig.(*ImageIntegration_Docker); ok {
			return x.Docker
		}
	}
	return nil
}

func (x *ImageIntegration) GetQuay() *QuayConfig {
	if x != nil {
		if x, ok := x.IntegrationConfig.(*ImageIntegration_Quay); ok {
			return x.Quay
		}
	}
	return nil
}

func (x *ImageIntegration) GetEcr() *ECRConfig {
	if x != nil {
		if x, ok := x.IntegrationConfig.(*ImageIntegration_Ecr); ok {
			return x.Ecr
		}
	}
	return nil
}

func (x *ImageIntegration) GetGoogle() *GoogleConfig {
	if x != nil {
		if x, ok := x.IntegrationConfig.(*ImageIntegration_Google); ok {
			return x.Google
		}
	}
	return nil
}

func (x *ImageIntegration) GetClair() *ClairConfig {
	if x != nil {
		if x, ok := x.IntegrationConfig.(*ImageIntegration_Clair); ok {
			return x.Clair
		}
	}
	return nil
}

func (x *ImageIntegration) GetClairV4() *ClairV4Config {
	if x != nil {
		if x, ok := x.IntegrationConfig.(*ImageIntegration_ClairV4); ok {
			return x.ClairV4
		}
	}
	return nil
}

func (x *ImageIntegration) GetIbm() *IBMRegistryConfig {
	if x != nil {
		if x, ok := x.IntegrationConfig.(*ImageIntegration_Ibm); ok {
			return x.Ibm
		}
	}
	return nil
}

func (x *ImageIntegration) GetAzure() *AzureConfig {
	if x != nil {
		if x, ok := x.IntegrationConfig.(*ImageIntegration_Azure); ok {
			return x.Azure
		}
	}
	return nil
}

func (x *ImageIntegration) GetAutogenerated() bool {
	if x != nil {
		return x.Autogenerated
	}
	return false
}

func (x *ImageIntegration) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ImageIntegration) GetSkipTestIntegration() bool {
	if x != nil {
		return x.SkipTestIntegration
	}
	return false
}

func (x *ImageIntegration) GetSource() *ImageIntegration_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

type isImageIntegration_IntegrationConfig interface {
	isImageIntegration_IntegrationConfig()
}

type ImageIntegration_Clairify struct {
	Clairify *ClairifyConfig `protobuf:"bytes,8,opt,name=clairify,proto3,oneof"`
}

type ImageIntegration_ScannerV4 struct {
	ScannerV4 *ScannerV4Config `protobuf:"bytes,23,opt,name=scanner_v4,json=scannerV4,proto3,oneof"`
}

type ImageIntegration_Docker struct {
	Docker *DockerConfig `protobuf:"bytes,9,opt,name=docker,proto3,oneof"`
}

type ImageIntegration_Quay struct {
	Quay *QuayConfig `protobuf:"bytes,10,opt,name=quay,proto3,oneof"`
}

type ImageIntegration_Ecr struct {
	Ecr *ECRConfig `protobuf:"bytes,11,opt,name=ecr,proto3,oneof"`
}

type ImageIntegration_Google struct {
	Google *GoogleConfig `protobuf:"bytes,13,opt,name=google,proto3,oneof"`
}

type ImageIntegration_Clair struct {
	Clair *ClairConfig `protobuf:"bytes,14,opt,name=clair,proto3,oneof"`
}

type ImageIntegration_ClairV4 struct {
	ClairV4 *ClairV4Config `protobuf:"bytes,22,opt,name=clair_v4,json=clairV4,proto3,oneof"`
}

type ImageIntegration_Ibm struct {
	Ibm *IBMRegistryConfig `protobuf:"bytes,20,opt,name=ibm,proto3,oneof"`
}

type ImageIntegration_Azure struct {
	Azure *AzureConfig `protobuf:"bytes,24,opt,name=azure,proto3,oneof"`
}

func (*ImageIntegration_Clairify) isImageIntegration_IntegrationConfig() {}

func (*ImageIntegration_ScannerV4) isImageIntegration_IntegrationConfig() {}

func (*ImageIntegration_Docker) isImageIntegration_IntegrationConfig() {}

func (*ImageIntegration_Quay) isImageIntegration_IntegrationConfig() {}

func (*ImageIntegration_Ecr) isImageIntegration_IntegrationConfig() {}

func (*ImageIntegration_Google) isImageIntegration_IntegrationConfig() {}

func (*ImageIntegration_Clair) isImageIntegration_IntegrationConfig() {}

func (*ImageIntegration_ClairV4) isImageIntegration_IntegrationConfig() {}

func (*ImageIntegration_Ibm) isImageIntegration_IntegrationConfig() {}

func (*ImageIntegration_Azure) isImageIntegration_IntegrationConfig() {}

type IBMRegistryConfig struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Endpoint string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty" scrub:"dependent" validate:"nolocalendpoint"` // @gotags: scrub:"dependent" validate:"nolocalendpoint"
	// The API key for the integration. The server will mask the value of this credential in responses and logs.
	ApiKey        string `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty" scrub:"always"` // @gotags: scrub:"always"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IBMRegistryConfig) Reset() {
	*x = IBMRegistryConfig{}
	mi := &file_storage_image_integration_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IBMRegistryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IBMRegistryConfig) ProtoMessage() {}

func (x *IBMRegistryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IBMRegistryConfig.ProtoReflect.Descriptor instead.
func (*IBMRegistryConfig) Descriptor() ([]byte, []int) {
	return file_storage_image_integration_proto_rawDescGZIP(), []int{1}
}

func (x *IBMRegistryConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *IBMRegistryConfig) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type QuayConfig struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Endpoint string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty" scrub:"dependent" validate:"nolocalendpoint"` // @gotags: scrub:"dependent" validate:"nolocalendpoint"
	// The OAuth token for the integration. Required if this is a scanner integration. The server will mask the value of this credential in responses and logs.
	OauthToken string `protobuf:"bytes,2,opt,name=oauthToken,proto3" json:"oauthToken,omitempty" scrub:"always"` // @gotags: scrub:"always"
	Insecure   bool   `protobuf:"varint,3,opt,name=insecure,proto3" json:"insecure,omitempty"`
	// For registry integrations, Quay recommends using robot accounts. oauthToken will continue to be used for scanner integration.
	RegistryRobotCredentials *QuayConfig_RobotAccount `protobuf:"bytes,4,opt,name=registry_robot_credentials,json=registryRobotCredentials,proto3" json:"registry_robot_credentials,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *QuayConfig) Reset() {
	*x = QuayConfig{}
	mi := &file_storage_image_integration_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuayConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuayConfig) ProtoMessage() {}

func (x *QuayConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuayConfig.ProtoReflect.Descriptor instead.
func (*QuayConfig) Descriptor() ([]byte, []int) {
	return file_storage_image_integration_proto_rawDescGZIP(), []int{2}
}

func (x *QuayConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *QuayConfig) GetOauthToken() string {
	if x != nil {
		return x.OauthToken
	}
	return ""
}

func (x *QuayConfig) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

func (x *QuayConfig) GetRegistryRobotCredentials() *QuayConfig_RobotAccount {
	if x != nil {
		return x.RegistryRobotCredentials
	}
	return nil
}

type ClairConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty" validate:"nolocalendpoint"` // @gotags: validate:"nolocalendpoint"
	Insecure      bool                   `protobuf:"varint,2,opt,name=insecure,proto3" json:"insecure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClairConfig) Reset() {
	*x = ClairConfig{}
	mi := &file_storage_image_integration_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClairConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClairConfig) ProtoMessage() {}

func (x *ClairConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClairConfig.ProtoReflect.Descriptor instead.
func (*ClairConfig) Descriptor() ([]byte, []int) {
	return file_storage_image_integration_proto_rawDescGZIP(), []int{3}
}

func (x *ClairConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ClairConfig) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

type ClairV4Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty" validate:"nolocalendpoint"` // @gotags: validate:"nolocalendpoint"
	Insecure      bool                   `protobuf:"varint,2,opt,name=insecure,proto3" json:"insecure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClairV4Config) Reset() {
	*x = ClairV4Config{}
	mi := &file_storage_image_integration_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClairV4Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClairV4Config) ProtoMessage() {}

func (x *ClairV4Config) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClairV4Config.ProtoReflect.Descriptor instead.
func (*ClairV4Config) Descriptor() ([]byte, []int) {
	return file_storage_image_integration_proto_rawDescGZIP(), []int{4}
}

func (x *ClairV4Config) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ClairV4Config) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

type ClairifyConfig struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Endpoint           string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty" validate:"nolocalendpoint"`                             // @gotags: validate:"nolocalendpoint"
	GrpcEndpoint       string                 `protobuf:"bytes,3,opt,name=grpc_endpoint,json=grpcEndpoint,proto3" json:"grpc_endpoint,omitempty" validate:"nolocalendpoint"` // @gotags: validate:"nolocalendpoint"
	NumConcurrentScans int32                  `protobuf:"varint,2,opt,name=num_concurrent_scans,json=numConcurrentScans,proto3" json:"num_concurrent_scans,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ClairifyConfig) Reset() {
	*x = ClairifyConfig{}
	mi := &file_storage_image_integration_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClairifyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClairifyConfig) ProtoMessage() {}

func (x *ClairifyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClairifyConfig.ProtoReflect.Descriptor instead.
func (*ClairifyConfig) Descriptor() ([]byte, []int) {
	return file_storage_image_integration_proto_rawDescGZIP(), []int{5}
}

func (x *ClairifyConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ClairifyConfig) GetGrpcEndpoint() string {
	if x != nil {
		return x.GrpcEndpoint
	}
	return ""
}

func (x *ClairifyConfig) GetNumConcurrentScans() int32 {
	if x != nil {
		return x.NumConcurrentScans
	}
	return 0
}

// Docker registry configuration. Used by integrations of type "docker" and other docker compliant registries without dedicated configuration type.
//
// Use of type "azure" with `DockerConfig` has been deprecated in 4.7. Use `AzureConfig` instead.
type DockerConfig struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Endpoint string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty" scrub:"dependent" validate:"nolocalendpoint"` // @gotags: scrub:"dependent" validate:"nolocalendpoint"
	Username string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty" scrub:"dependent"` // @gotags: scrub:"dependent"
	// The password for the integration. The server will mask the value of this credential in responses and logs.
	Password      string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty" scrub:"always"` // @gotags: scrub:"always"
	Insecure      bool   `protobuf:"varint,4,opt,name=insecure,proto3" json:"insecure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerConfig) Reset() {
	*x = DockerConfig{}
	mi := &file_storage_image_integration_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerConfig) ProtoMessage() {}

func (x *DockerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerConfig.ProtoReflect.Descriptor instead.
func (*DockerConfig) Descriptor() ([]byte, []int) {
	return file_storage_image_integration_proto_rawDescGZIP(), []int{6}
}

func (x *DockerConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *DockerConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DockerConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *DockerConfig) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

type ECRConfig struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	RegistryId string                 `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	// The access key ID for the integration. The server will mask the value of this credential in responses and logs.
	AccessKeyId string `protobuf:"bytes,2,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty" scrub:"always"` // @gotags: scrub:"always"
	// The secret access key for the integration. The server will mask the value of this credential in responses and logs.
	SecretAccessKey      string                       `protobuf:"bytes,3,opt,name=secret_access_key,json=secretAccessKey,proto3" json:"secret_access_key,omitempty" scrub:"always"` // @gotags: scrub:"always"
	Region               string                       `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	UseIam               bool                         `protobuf:"varint,5,opt,name=use_iam,json=useIam,proto3" json:"use_iam,omitempty" scrub:"dependent"` // @gotags: scrub:"dependent"
	Endpoint             string                       `protobuf:"bytes,6,opt,name=endpoint,proto3" json:"endpoint,omitempty" scrub:"dependent" validate:"nolocalendpoint"`            // @gotags: scrub:"dependent" validate:"nolocalendpoint"
	UseAssumeRole        bool                         `protobuf:"varint,7,opt,name=use_assume_role,json=useAssumeRole,proto3" json:"use_assume_role,omitempty"`
	AssumeRoleId         string                       `protobuf:"bytes,8,opt,name=assume_role_id,json=assumeRoleId,proto3" json:"assume_role_id,omitempty"`
	AssumeRoleExternalId string                       `protobuf:"bytes,9,opt,name=assume_role_external_id,json=assumeRoleExternalId,proto3" json:"assume_role_external_id,omitempty"`
	AuthorizationData    *ECRConfig_AuthorizationData `protobuf:"bytes,10,opt,name=authorization_data,json=authorizationData,proto3" json:"authorization_data,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ECRConfig) Reset() {
	*x = ECRConfig{}
	mi := &file_storage_image_integration_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ECRConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECRConfig) ProtoMessage() {}

func (x *ECRConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECRConfig.ProtoReflect.Descriptor instead.
func (*ECRConfig) Descriptor() ([]byte, []int) {
	return file_storage_image_integration_proto_rawDescGZIP(), []int{7}
}

func (x *ECRConfig) GetRegistryId() string {
	if x != nil {
		return x.RegistryId
	}
	return ""
}

func (x *ECRConfig) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *ECRConfig) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

func (x *ECRConfig) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ECRConfig) GetUseIam() bool {
	if x != nil {
		return x.UseIam
	}
	return false
}

func (x *ECRConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *ECRConfig) GetUseAssumeRole() bool {
	if x != nil {
		return x.UseAssumeRole
	}
	return false
}

func (x *ECRConfig) GetAssumeRoleId() string {
	if x != nil {
		return x.AssumeRoleId
	}
	return ""
}

func (x *ECRConfig) GetAssumeRoleExternalId() string {
	if x != nil {
		return x.AssumeRoleExternalId
	}
	return ""
}

func (x *ECRConfig) GetAuthorizationData() *ECRConfig_AuthorizationData {
	if x != nil {
		return x.AuthorizationData
	}
	return nil
}

type GoogleConfig struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Endpoint string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty" scrub:"dependent" validate:"nolocalendpoint"` // @gotags: scrub:"dependent" validate:"nolocalendpoint"
	// The service account for the integration. The server will mask the value of this credential in responses and logs.
	ServiceAccount string `protobuf:"bytes,2,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty" scrub:"always"` // @gotags: scrub:"always"
	Project        string `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	WifEnabled     bool   `protobuf:"varint,4,opt,name=wif_enabled,json=wifEnabled,proto3" json:"wif_enabled,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GoogleConfig) Reset() {
	*x = GoogleConfig{}
	mi := &file_storage_image_integration_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoogleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleConfig) ProtoMessage() {}

func (x *GoogleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleConfig.ProtoReflect.Descriptor instead.
func (*GoogleConfig) Descriptor() ([]byte, []int) {
	return file_storage_image_integration_proto_rawDescGZIP(), []int{8}
}

func (x *GoogleConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *GoogleConfig) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

func (x *GoogleConfig) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *GoogleConfig) GetWifEnabled() bool {
	if x != nil {
		return x.WifEnabled
	}
	return false
}

type ScannerV4Config struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	NumConcurrentScans int32                  `protobuf:"varint,1,opt,name=num_concurrent_scans,json=numConcurrentScans,proto3" json:"num_concurrent_scans,omitempty"`
	IndexerEndpoint    string                 `protobuf:"bytes,2,opt,name=indexer_endpoint,json=indexerEndpoint,proto3" json:"indexer_endpoint,omitempty"`
	MatcherEndpoint    string                 `protobuf:"bytes,3,opt,name=matcher_endpoint,json=matcherEndpoint,proto3" json:"matcher_endpoint,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ScannerV4Config) Reset() {
	*x = ScannerV4Config{}
	mi := &file_storage_image_integration_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScannerV4Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScannerV4Config) ProtoMessage() {}

func (x *ScannerV4Config) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScannerV4Config.ProtoReflect.Descriptor instead.
func (*ScannerV4Config) Descriptor() ([]byte, []int) {
	return file_storage_image_integration_proto_rawDescGZIP(), []int{9}
}

func (x *ScannerV4Config) GetNumConcurrentScans() int32 {
	if x != nil {
		return x.NumConcurrentScans
	}
	return 0
}

func (x *ScannerV4Config) GetIndexerEndpoint() string {
	if x != nil {
		return x.IndexerEndpoint
	}
	return ""
}

func (x *ScannerV4Config) GetMatcherEndpoint() string {
	if x != nil {
		return x.MatcherEndpoint
	}
	return ""
}

// Azure container registry configuration. Used by integrations of type "azure".
type AzureConfig struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Endpoint string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty" scrub:"dependent" validate:"nolocalendpoint"` // @gotags: scrub:"dependent" validate:"nolocalendpoint"
	Username string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty" scrub:"dependent"` // @gotags: scrub:"dependent"
	// The password for the integration. The server will mask the value of this credential in responses and logs.
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty" scrub:"always"` // @gotags: scrub:"always"
	// Enables authentication with short-lived tokens using Azure managed identities or Azure workload identities.
	WifEnabled    bool `protobuf:"varint,4,opt,name=wif_enabled,json=wifEnabled,proto3" json:"wif_enabled,omitempty" scrub:"dependent"` // @gotags: scrub:"dependent"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AzureConfig) Reset() {
	*x = AzureConfig{}
	mi := &file_storage_image_integration_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AzureConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureConfig) ProtoMessage() {}

func (x *AzureConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureConfig.ProtoReflect.Descriptor instead.
func (*AzureConfig) Descriptor() ([]byte, []int) {
	return file_storage_image_integration_proto_rawDescGZIP(), []int{10}
}

func (x *AzureConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *AzureConfig) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AzureConfig) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AzureConfig) GetWifEnabled() bool {
	if x != nil {
		return x.WifEnabled
	}
	return false
}

type ImageIntegration_Source struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ClusterId           string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Namespace           string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ImagePullSecretName string                 `protobuf:"bytes,3,opt,name=image_pull_secret_name,json=imagePullSecretName,proto3" json:"image_pull_secret_name,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ImageIntegration_Source) Reset() {
	*x = ImageIntegration_Source{}
	mi := &file_storage_image_integration_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageIntegration_Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageIntegration_Source) ProtoMessage() {}

func (x *ImageIntegration_Source) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageIntegration_Source.ProtoReflect.Descriptor instead.
func (*ImageIntegration_Source) Descriptor() ([]byte, []int) {
	return file_storage_image_integration_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ImageIntegration_Source) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ImageIntegration_Source) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ImageIntegration_Source) GetImagePullSecretName() string {
	if x != nil {
		return x.ImagePullSecretName
	}
	return ""
}

// Robot account is Quay's named tokens that can be granted permissions on multiple repositories under an organization.
// It's Quay's recommended authentication model when possible (i.e. registry integration)
type QuayConfig_RobotAccount struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Username string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// The server will mask the value of this password in responses and logs.
	Password      string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty" scrub:"always"` // @gotags: scrub:"always"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuayConfig_RobotAccount) Reset() {
	*x = QuayConfig_RobotAccount{}
	mi := &file_storage_image_integration_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuayConfig_RobotAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuayConfig_RobotAccount) ProtoMessage() {}

func (x *QuayConfig_RobotAccount) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuayConfig_RobotAccount.ProtoReflect.Descriptor instead.
func (*QuayConfig_RobotAccount) Descriptor() ([]byte, []int) {
	return file_storage_image_integration_proto_rawDescGZIP(), []int{2, 0}
}

func (x *QuayConfig_RobotAccount) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QuayConfig_RobotAccount) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// An authorization data represents the IAM authentication credentials and
// can be used to access any Amazon ECR registry that the IAM principal has
// access to.
type ECRConfig_AuthorizationData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty" scrub:"always"` // @gotags: scrub:"always"
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ECRConfig_AuthorizationData) Reset() {
	*x = ECRConfig_AuthorizationData{}
	mi := &file_storage_image_integration_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ECRConfig_AuthorizationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECRConfig_AuthorizationData) ProtoMessage() {}

func (x *ECRConfig_AuthorizationData) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECRConfig_AuthorizationData.ProtoReflect.Descriptor instead.
func (*ECRConfig_AuthorizationData) Descriptor() ([]byte, []int) {
	return file_storage_image_integration_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ECRConfig_AuthorizationData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ECRConfig_AuthorizationData) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ECRConfig_AuthorizationData) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

var File_storage_image_integration_proto protoreflect.FileDescriptor

const file_storage_image_integration_proto_rawDesc = "" +
	"\n" +
	"\x1fstorage/image_integration.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\"\xdd\a\n" +
	"\x10ImageIntegration\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12A\n" +
	"\n" +
	"categories\x18\x06 \x03(\x0e2!.storage.ImageIntegrationCategoryR\n" +
	"categories\x125\n" +
	"\bclairify\x18\b \x01(\v2\x17.storage.ClairifyConfigH\x00R\bclairify\x129\n" +
	"\n" +
	"scanner_v4\x18\x17 \x01(\v2\x18.storage.ScannerV4ConfigH\x00R\tscannerV4\x12/\n" +
	"\x06docker\x18\t \x01(\v2\x15.storage.DockerConfigH\x00R\x06docker\x12)\n" +
	"\x04quay\x18\n" +
	" \x01(\v2\x13.storage.QuayConfigH\x00R\x04quay\x12&\n" +
	"\x03ecr\x18\v \x01(\v2\x12.storage.ECRConfigH\x00R\x03ecr\x12/\n" +
	"\x06google\x18\r \x01(\v2\x15.storage.GoogleConfigH\x00R\x06google\x12,\n" +
	"\x05clair\x18\x0e \x01(\v2\x14.storage.ClairConfigH\x00R\x05clair\x123\n" +
	"\bclair_v4\x18\x16 \x01(\v2\x16.storage.ClairV4ConfigH\x00R\aclairV4\x12.\n" +
	"\x03ibm\x18\x14 \x01(\v2\x1a.storage.IBMRegistryConfigH\x00R\x03ibm\x12,\n" +
	"\x05azure\x18\x18 \x01(\v2\x14.storage.AzureConfigH\x00R\x05azure\x12$\n" +
	"\rautogenerated\x18\x0f \x01(\bR\rautogenerated\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x10 \x01(\tR\tclusterId\x122\n" +
	"\x15skip_test_integration\x18\x12 \x01(\bR\x13skipTestIntegration\x128\n" +
	"\x06source\x18\x15 \x01(\v2 .storage.ImageIntegration.SourceR\x06source\x1az\n" +
	"\x06Source\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x123\n" +
	"\x16image_pull_secret_name\x18\x03 \x01(\tR\x13imagePullSecretNameB\x13\n" +
	"\x11IntegrationConfigJ\x04\b\x04\x10\x05J\x04\b\x05\x10\x06J\x04\b\a\x10\bJ\x04\b\f\x10\rJ\x04\b\x11\x10\x12J\x04\b\x13\x10\x14\"H\n" +
	"\x11IBMRegistryConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x17\n" +
	"\aapi_key\x18\x02 \x01(\tR\x06apiKey\"\x8c\x02\n" +
	"\n" +
	"QuayConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x1e\n" +
	"\n" +
	"oauthToken\x18\x02 \x01(\tR\n" +
	"oauthToken\x12\x1a\n" +
	"\binsecure\x18\x03 \x01(\bR\binsecure\x12^\n" +
	"\x1aregistry_robot_credentials\x18\x04 \x01(\v2 .storage.QuayConfig.RobotAccountR\x18registryRobotCredentials\x1aF\n" +
	"\fRobotAccount\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"E\n" +
	"\vClairConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x1a\n" +
	"\binsecure\x18\x02 \x01(\bR\binsecure\"G\n" +
	"\rClairV4Config\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x1a\n" +
	"\binsecure\x18\x02 \x01(\bR\binsecure\"\x83\x01\n" +
	"\x0eClairifyConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12#\n" +
	"\rgrpc_endpoint\x18\x03 \x01(\tR\fgrpcEndpoint\x120\n" +
	"\x14num_concurrent_scans\x18\x02 \x01(\x05R\x12numConcurrentScans\"~\n" +
	"\fDockerConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x1a\n" +
	"\binsecure\x18\x04 \x01(\bR\binsecure\"\xac\x04\n" +
	"\tECRConfig\x12\x1f\n" +
	"\vregistry_id\x18\x01 \x01(\tR\n" +
	"registryId\x12\"\n" +
	"\raccess_key_id\x18\x02 \x01(\tR\vaccessKeyId\x12*\n" +
	"\x11secret_access_key\x18\x03 \x01(\tR\x0fsecretAccessKey\x12\x16\n" +
	"\x06region\x18\x04 \x01(\tR\x06region\x12\x17\n" +
	"\ause_iam\x18\x05 \x01(\bR\x06useIam\x12\x1a\n" +
	"\bendpoint\x18\x06 \x01(\tR\bendpoint\x12&\n" +
	"\x0fuse_assume_role\x18\a \x01(\bR\ruseAssumeRole\x12$\n" +
	"\x0eassume_role_id\x18\b \x01(\tR\fassumeRoleId\x125\n" +
	"\x17assume_role_external_id\x18\t \x01(\tR\x14assumeRoleExternalId\x12S\n" +
	"\x12authorization_data\x18\n" +
	" \x01(\v2$.storage.ECRConfig.AuthorizationDataR\x11authorizationData\x1a\x86\x01\n" +
	"\x11AuthorizationData\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x129\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"\x8e\x01\n" +
	"\fGoogleConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12'\n" +
	"\x0fservice_account\x18\x02 \x01(\tR\x0eserviceAccount\x12\x18\n" +
	"\aproject\x18\x03 \x01(\tR\aproject\x12\x1f\n" +
	"\vwif_enabled\x18\x04 \x01(\bR\n" +
	"wifEnabled\"\x99\x01\n" +
	"\x0fScannerV4Config\x120\n" +
	"\x14num_concurrent_scans\x18\x01 \x01(\x05R\x12numConcurrentScans\x12)\n" +
	"\x10indexer_endpoint\x18\x02 \x01(\tR\x0findexerEndpoint\x12)\n" +
	"\x10matcher_endpoint\x18\x03 \x01(\tR\x0fmatcherEndpoint\"\x82\x01\n" +
	"\vAzureConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x1f\n" +
	"\vwif_enabled\x18\x04 \x01(\bR\n" +
	"wifEnabled*G\n" +
	"\x18ImageIntegrationCategory\x12\f\n" +
	"\bREGISTRY\x10\x00\x12\v\n" +
	"\aSCANNER\x10\x01\x12\x10\n" +
	"\fNODE_SCANNER\x10\x02B.\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storageb\x06proto3"

var (
	file_storage_image_integration_proto_rawDescOnce sync.Once
	file_storage_image_integration_proto_rawDescData []byte
)

func file_storage_image_integration_proto_rawDescGZIP() []byte {
	file_storage_image_integration_proto_rawDescOnce.Do(func() {
		file_storage_image_integration_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_storage_image_integration_proto_rawDesc), len(file_storage_image_integration_proto_rawDesc)))
	})
	return file_storage_image_integration_proto_rawDescData
}

var file_storage_image_integration_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storage_image_integration_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_storage_image_integration_proto_goTypes = []any{
	(ImageIntegrationCategory)(0),       // 0: storage.ImageIntegrationCategory
	(*ImageIntegration)(nil),            // 1: storage.ImageIntegration
	(*IBMRegistryConfig)(nil),           // 2: storage.IBMRegistryConfig
	(*QuayConfig)(nil),                  // 3: storage.QuayConfig
	(*ClairConfig)(nil),                 // 4: storage.ClairConfig
	(*ClairV4Config)(nil),               // 5: storage.ClairV4Config
	(*ClairifyConfig)(nil),              // 6: storage.ClairifyConfig
	(*DockerConfig)(nil),                // 7: storage.DockerConfig
	(*ECRConfig)(nil),                   // 8: storage.ECRConfig
	(*GoogleConfig)(nil),                // 9: storage.GoogleConfig
	(*ScannerV4Config)(nil),             // 10: storage.ScannerV4Config
	(*AzureConfig)(nil),                 // 11: storage.AzureConfig
	(*ImageIntegration_Source)(nil),     // 12: storage.ImageIntegration.Source
	(*QuayConfig_RobotAccount)(nil),     // 13: storage.QuayConfig.RobotAccount
	(*ECRConfig_AuthorizationData)(nil), // 14: storage.ECRConfig.AuthorizationData
	(*timestamppb.Timestamp)(nil),       // 15: google.protobuf.Timestamp
}
var file_storage_image_integration_proto_depIdxs = []int32{
	0,  // 0: storage.ImageIntegration.categories:type_name -> storage.ImageIntegrationCategory
	6,  // 1: storage.ImageIntegration.clairify:type_name -> storage.ClairifyConfig
	10, // 2: storage.ImageIntegration.scanner_v4:type_name -> storage.ScannerV4Config
	7,  // 3: storage.ImageIntegration.docker:type_name -> storage.DockerConfig
	3,  // 4: storage.ImageIntegration.quay:type_name -> storage.QuayConfig
	8,  // 5: storage.ImageIntegration.ecr:type_name -> storage.ECRConfig
	9,  // 6: storage.ImageIntegration.google:type_name -> storage.GoogleConfig
	4,  // 7: storage.ImageIntegration.clair:type_name -> storage.ClairConfig
	5,  // 8: storage.ImageIntegration.clair_v4:type_name -> storage.ClairV4Config
	2,  // 9: storage.ImageIntegration.ibm:type_name -> storage.IBMRegistryConfig
	11, // 10: storage.ImageIntegration.azure:type_name -> storage.AzureConfig
	12, // 11: storage.ImageIntegration.source:type_name -> storage.ImageIntegration.Source
	13, // 12: storage.QuayConfig.registry_robot_credentials:type_name -> storage.QuayConfig.RobotAccount
	14, // 13: storage.ECRConfig.authorization_data:type_name -> storage.ECRConfig.AuthorizationData
	15, // 14: storage.ECRConfig.AuthorizationData.expires_at:type_name -> google.protobuf.Timestamp
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_storage_image_integration_proto_init() }
func file_storage_image_integration_proto_init() {
	if File_storage_image_integration_proto != nil {
		return
	}
	file_storage_image_integration_proto_msgTypes[0].OneofWrappers = []any{
		(*ImageIntegration_Clairify)(nil),
		(*ImageIntegration_ScannerV4)(nil),
		(*ImageIntegration_Docker)(nil),
		(*ImageIntegration_Quay)(nil),
		(*ImageIntegration_Ecr)(nil),
		(*ImageIntegration_Google)(nil),
		(*ImageIntegration_Clair)(nil),
		(*ImageIntegration_ClairV4)(nil),
		(*ImageIntegration_Ibm)(nil),
		(*ImageIntegration_Azure)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_image_integration_proto_rawDesc), len(file_storage_image_integration_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_image_integration_proto_goTypes,
		DependencyIndexes: file_storage_image_integration_proto_depIdxs,
		EnumInfos:         file_storage_image_integration_proto_enumTypes,
		MessageInfos:      file_storage_image_integration_proto_msgTypes,
	}.Build()
	File_storage_image_integration_proto = out.File
	file_storage_image_integration_proto_goTypes = nil
	file_storage_image_integration_proto_depIdxs = nil
}
