// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/image_integration.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImageIntegrationCategory int32

const (
	ImageIntegrationCategory_REGISTRY ImageIntegrationCategory = 0
	ImageIntegrationCategory_SCANNER  ImageIntegrationCategory = 1
	// Image and Node integrations are currently done on the same form in the UI
	// so the image integration is also currently used for node integrations.
	// This decision was made because we currently only support one node scanner (our scanner).
	ImageIntegrationCategory_NODE_SCANNER ImageIntegrationCategory = 2
)

// Enum value maps for ImageIntegrationCategory.
var (
	ImageIntegrationCategory_name = map[int32]string{
		0: "REGISTRY",
		1: "SCANNER",
		2: "NODE_SCANNER",
	}
	ImageIntegrationCategory_value = map[string]int32{
		"REGISTRY":     0,
		"SCANNER":      1,
		"NODE_SCANNER": 2,
	}
)

func (x ImageIntegrationCategory) Enum() *ImageIntegrationCategory {
	p := new(ImageIntegrationCategory)
	*p = x
	return p
}

func (x ImageIntegrationCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageIntegrationCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_image_integration_proto_enumTypes[0].Descriptor()
}

func (ImageIntegrationCategory) Type() protoreflect.EnumType {
	return &file_storage_image_integration_proto_enumTypes[0]
}

func (x ImageIntegrationCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Next Tag: 25
type ImageIntegration struct {
	state                          protoimpl.MessageState               `protogen:"opaque.v1"`
	xxx_hidden_Id                  *string                              `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name                *string                              `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Type                *string                              `protobuf:"bytes,3,opt,name=type"`
	xxx_hidden_Categories          []ImageIntegrationCategory           `protobuf:"varint,6,rep,packed,name=categories,enum=storage.ImageIntegrationCategory"`
	xxx_hidden_IntegrationConfig   isImageIntegration_IntegrationConfig `protobuf_oneof:"IntegrationConfig"`
	xxx_hidden_Autogenerated       bool                                 `protobuf:"varint,15,opt,name=autogenerated"`
	xxx_hidden_ClusterId           *string                              `protobuf:"bytes,16,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_SkipTestIntegration bool                                 `protobuf:"varint,18,opt,name=skip_test_integration,json=skipTestIntegration"`
	xxx_hidden_Source              *ImageIntegration_Source             `protobuf:"bytes,21,opt,name=source"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *ImageIntegration) Reset() {
	*x = ImageIntegration{}
	mi := &file_storage_image_integration_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageIntegration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageIntegration) ProtoMessage() {}

func (x *ImageIntegration) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ImageIntegration) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ImageIntegration) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ImageIntegration) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *ImageIntegration) GetCategories() []ImageIntegrationCategory {
	if x != nil {
		return x.xxx_hidden_Categories
	}
	return nil
}

func (x *ImageIntegration) GetClairify() *ClairifyConfig {
	if x != nil {
		if x, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Clairify); ok {
			return x.Clairify
		}
	}
	return nil
}

func (x *ImageIntegration) GetScannerV4() *ScannerV4Config {
	if x != nil {
		if x, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_ScannerV4); ok {
			return x.ScannerV4
		}
	}
	return nil
}

func (x *ImageIntegration) GetDocker() *DockerConfig {
	if x != nil {
		if x, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Docker); ok {
			return x.Docker
		}
	}
	return nil
}

func (x *ImageIntegration) GetQuay() *QuayConfig {
	if x != nil {
		if x, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Quay); ok {
			return x.Quay
		}
	}
	return nil
}

func (x *ImageIntegration) GetEcr() *ECRConfig {
	if x != nil {
		if x, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Ecr); ok {
			return x.Ecr
		}
	}
	return nil
}

func (x *ImageIntegration) GetGoogle() *GoogleConfig {
	if x != nil {
		if x, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Google); ok {
			return x.Google
		}
	}
	return nil
}

func (x *ImageIntegration) GetClair() *ClairConfig {
	if x != nil {
		if x, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Clair); ok {
			return x.Clair
		}
	}
	return nil
}

func (x *ImageIntegration) GetClairV4() *ClairV4Config {
	if x != nil {
		if x, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_ClairV4); ok {
			return x.ClairV4
		}
	}
	return nil
}

func (x *ImageIntegration) GetIbm() *IBMRegistryConfig {
	if x != nil {
		if x, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Ibm); ok {
			return x.Ibm
		}
	}
	return nil
}

func (x *ImageIntegration) GetAzure() *AzureConfig {
	if x != nil {
		if x, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Azure); ok {
			return x.Azure
		}
	}
	return nil
}

func (x *ImageIntegration) GetAutogenerated() bool {
	if x != nil {
		return x.xxx_hidden_Autogenerated
	}
	return false
}

func (x *ImageIntegration) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ImageIntegration) GetSkipTestIntegration() bool {
	if x != nil {
		return x.xxx_hidden_SkipTestIntegration
	}
	return false
}

func (x *ImageIntegration) GetSource() *ImageIntegration_Source {
	if x != nil {
		return x.xxx_hidden_Source
	}
	return nil
}

func (x *ImageIntegration) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *ImageIntegration) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *ImageIntegration) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *ImageIntegration) SetCategories(v []ImageIntegrationCategory) {
	x.xxx_hidden_Categories = v
}

func (x *ImageIntegration) SetClairify(v *ClairifyConfig) {
	if v == nil {
		x.xxx_hidden_IntegrationConfig = nil
		return
	}
	x.xxx_hidden_IntegrationConfig = &imageIntegration_Clairify{v}
}

func (x *ImageIntegration) SetScannerV4(v *ScannerV4Config) {
	if v == nil {
		x.xxx_hidden_IntegrationConfig = nil
		return
	}
	x.xxx_hidden_IntegrationConfig = &imageIntegration_ScannerV4{v}
}

func (x *ImageIntegration) SetDocker(v *DockerConfig) {
	if v == nil {
		x.xxx_hidden_IntegrationConfig = nil
		return
	}
	x.xxx_hidden_IntegrationConfig = &imageIntegration_Docker{v}
}

func (x *ImageIntegration) SetQuay(v *QuayConfig) {
	if v == nil {
		x.xxx_hidden_IntegrationConfig = nil
		return
	}
	x.xxx_hidden_IntegrationConfig = &imageIntegration_Quay{v}
}

func (x *ImageIntegration) SetEcr(v *ECRConfig) {
	if v == nil {
		x.xxx_hidden_IntegrationConfig = nil
		return
	}
	x.xxx_hidden_IntegrationConfig = &imageIntegration_Ecr{v}
}

func (x *ImageIntegration) SetGoogle(v *GoogleConfig) {
	if v == nil {
		x.xxx_hidden_IntegrationConfig = nil
		return
	}
	x.xxx_hidden_IntegrationConfig = &imageIntegration_Google{v}
}

func (x *ImageIntegration) SetClair(v *ClairConfig) {
	if v == nil {
		x.xxx_hidden_IntegrationConfig = nil
		return
	}
	x.xxx_hidden_IntegrationConfig = &imageIntegration_Clair{v}
}

func (x *ImageIntegration) SetClairV4(v *ClairV4Config) {
	if v == nil {
		x.xxx_hidden_IntegrationConfig = nil
		return
	}
	x.xxx_hidden_IntegrationConfig = &imageIntegration_ClairV4{v}
}

func (x *ImageIntegration) SetIbm(v *IBMRegistryConfig) {
	if v == nil {
		x.xxx_hidden_IntegrationConfig = nil
		return
	}
	x.xxx_hidden_IntegrationConfig = &imageIntegration_Ibm{v}
}

func (x *ImageIntegration) SetAzure(v *AzureConfig) {
	if v == nil {
		x.xxx_hidden_IntegrationConfig = nil
		return
	}
	x.xxx_hidden_IntegrationConfig = &imageIntegration_Azure{v}
}

func (x *ImageIntegration) SetAutogenerated(v bool) {
	x.xxx_hidden_Autogenerated = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *ImageIntegration) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *ImageIntegration) SetSkipTestIntegration(v bool) {
	x.xxx_hidden_SkipTestIntegration = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 9)
}

func (x *ImageIntegration) SetSource(v *ImageIntegration_Source) {
	x.xxx_hidden_Source = v
}

func (x *ImageIntegration) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ImageIntegration) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ImageIntegration) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ImageIntegration) HasIntegrationConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_IntegrationConfig != nil
}

func (x *ImageIntegration) HasClairify() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Clairify)
	return ok
}

func (x *ImageIntegration) HasScannerV4() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_ScannerV4)
	return ok
}

func (x *ImageIntegration) HasDocker() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Docker)
	return ok
}

func (x *ImageIntegration) HasQuay() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Quay)
	return ok
}

func (x *ImageIntegration) HasEcr() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Ecr)
	return ok
}

func (x *ImageIntegration) HasGoogle() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Google)
	return ok
}

func (x *ImageIntegration) HasClair() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Clair)
	return ok
}

func (x *ImageIntegration) HasClairV4() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_ClairV4)
	return ok
}

func (x *ImageIntegration) HasIbm() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Ibm)
	return ok
}

func (x *ImageIntegration) HasAzure() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Azure)
	return ok
}

func (x *ImageIntegration) HasAutogenerated() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ImageIntegration) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ImageIntegration) HasSkipTestIntegration() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ImageIntegration) HasSource() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Source != nil
}

func (x *ImageIntegration) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ImageIntegration) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *ImageIntegration) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Type = nil
}

func (x *ImageIntegration) ClearIntegrationConfig() {
	x.xxx_hidden_IntegrationConfig = nil
}

func (x *ImageIntegration) ClearClairify() {
	if _, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Clairify); ok {
		x.xxx_hidden_IntegrationConfig = nil
	}
}

func (x *ImageIntegration) ClearScannerV4() {
	if _, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_ScannerV4); ok {
		x.xxx_hidden_IntegrationConfig = nil
	}
}

func (x *ImageIntegration) ClearDocker() {
	if _, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Docker); ok {
		x.xxx_hidden_IntegrationConfig = nil
	}
}

func (x *ImageIntegration) ClearQuay() {
	if _, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Quay); ok {
		x.xxx_hidden_IntegrationConfig = nil
	}
}

func (x *ImageIntegration) ClearEcr() {
	if _, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Ecr); ok {
		x.xxx_hidden_IntegrationConfig = nil
	}
}

func (x *ImageIntegration) ClearGoogle() {
	if _, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Google); ok {
		x.xxx_hidden_IntegrationConfig = nil
	}
}

func (x *ImageIntegration) ClearClair() {
	if _, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Clair); ok {
		x.xxx_hidden_IntegrationConfig = nil
	}
}

func (x *ImageIntegration) ClearClairV4() {
	if _, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_ClairV4); ok {
		x.xxx_hidden_IntegrationConfig = nil
	}
}

func (x *ImageIntegration) ClearIbm() {
	if _, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Ibm); ok {
		x.xxx_hidden_IntegrationConfig = nil
	}
}

func (x *ImageIntegration) ClearAzure() {
	if _, ok := x.xxx_hidden_IntegrationConfig.(*imageIntegration_Azure); ok {
		x.xxx_hidden_IntegrationConfig = nil
	}
}

func (x *ImageIntegration) ClearAutogenerated() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Autogenerated = false
}

func (x *ImageIntegration) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_ClusterId = nil
}

func (x *ImageIntegration) ClearSkipTestIntegration() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_SkipTestIntegration = false
}

func (x *ImageIntegration) ClearSource() {
	x.xxx_hidden_Source = nil
}

const ImageIntegration_IntegrationConfig_not_set_case case_ImageIntegration_IntegrationConfig = 0
const ImageIntegration_Clairify_case case_ImageIntegration_IntegrationConfig = 8
const ImageIntegration_ScannerV4_case case_ImageIntegration_IntegrationConfig = 23
const ImageIntegration_Docker_case case_ImageIntegration_IntegrationConfig = 9
const ImageIntegration_Quay_case case_ImageIntegration_IntegrationConfig = 10
const ImageIntegration_Ecr_case case_ImageIntegration_IntegrationConfig = 11
const ImageIntegration_Google_case case_ImageIntegration_IntegrationConfig = 13
const ImageIntegration_Clair_case case_ImageIntegration_IntegrationConfig = 14
const ImageIntegration_ClairV4_case case_ImageIntegration_IntegrationConfig = 22
const ImageIntegration_Ibm_case case_ImageIntegration_IntegrationConfig = 20
const ImageIntegration_Azure_case case_ImageIntegration_IntegrationConfig = 24

func (x *ImageIntegration) WhichIntegrationConfig() case_ImageIntegration_IntegrationConfig {
	if x == nil {
		return ImageIntegration_IntegrationConfig_not_set_case
	}
	switch x.xxx_hidden_IntegrationConfig.(type) {
	case *imageIntegration_Clairify:
		return ImageIntegration_Clairify_case
	case *imageIntegration_ScannerV4:
		return ImageIntegration_ScannerV4_case
	case *imageIntegration_Docker:
		return ImageIntegration_Docker_case
	case *imageIntegration_Quay:
		return ImageIntegration_Quay_case
	case *imageIntegration_Ecr:
		return ImageIntegration_Ecr_case
	case *imageIntegration_Google:
		return ImageIntegration_Google_case
	case *imageIntegration_Clair:
		return ImageIntegration_Clair_case
	case *imageIntegration_ClairV4:
		return ImageIntegration_ClairV4_case
	case *imageIntegration_Ibm:
		return ImageIntegration_Ibm_case
	case *imageIntegration_Azure:
		return ImageIntegration_Azure_case
	default:
		return ImageIntegration_IntegrationConfig_not_set_case
	}
}

type ImageIntegration_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id         *string
	Name       *string
	Type       *string
	Categories []ImageIntegrationCategory
	// Custom configuration based on the image integration type.

	// Fields of oneof xxx_hidden_IntegrationConfig:
	Clairify  *ClairifyConfig
	ScannerV4 *ScannerV4Config
	Docker    *DockerConfig
	Quay      *QuayConfig
	Ecr       *ECRConfig
	Google    *GoogleConfig
	Clair     *ClairConfig
	ClairV4   *ClairV4Config
	Ibm       *IBMRegistryConfig
	Azure     *AzureConfig
	// -- end of xxx_hidden_IntegrationConfig
	Autogenerated       *bool
	ClusterId           *string
	SkipTestIntegration *bool
	Source              *ImageIntegration_Source
}

func (b0 ImageIntegration_builder) Build() *ImageIntegration {
	m0 := &ImageIntegration{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_Type = b.Type
	}
	x.xxx_hidden_Categories = b.Categories
	if b.Clairify != nil {
		x.xxx_hidden_IntegrationConfig = &imageIntegration_Clairify{b.Clairify}
	}
	if b.ScannerV4 != nil {
		x.xxx_hidden_IntegrationConfig = &imageIntegration_ScannerV4{b.ScannerV4}
	}
	if b.Docker != nil {
		x.xxx_hidden_IntegrationConfig = &imageIntegration_Docker{b.Docker}
	}
	if b.Quay != nil {
		x.xxx_hidden_IntegrationConfig = &imageIntegration_Quay{b.Quay}
	}
	if b.Ecr != nil {
		x.xxx_hidden_IntegrationConfig = &imageIntegration_Ecr{b.Ecr}
	}
	if b.Google != nil {
		x.xxx_hidden_IntegrationConfig = &imageIntegration_Google{b.Google}
	}
	if b.Clair != nil {
		x.xxx_hidden_IntegrationConfig = &imageIntegration_Clair{b.Clair}
	}
	if b.ClairV4 != nil {
		x.xxx_hidden_IntegrationConfig = &imageIntegration_ClairV4{b.ClairV4}
	}
	if b.Ibm != nil {
		x.xxx_hidden_IntegrationConfig = &imageIntegration_Ibm{b.Ibm}
	}
	if b.Azure != nil {
		x.xxx_hidden_IntegrationConfig = &imageIntegration_Azure{b.Azure}
	}
	if b.Autogenerated != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_Autogenerated = *b.Autogenerated
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.SkipTestIntegration != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 9)
		x.xxx_hidden_SkipTestIntegration = *b.SkipTestIntegration
	}
	x.xxx_hidden_Source = b.Source
	return m0
}

type case_ImageIntegration_IntegrationConfig protoreflect.FieldNumber

func (x case_ImageIntegration_IntegrationConfig) String() string {
	md := file_storage_image_integration_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isImageIntegration_IntegrationConfig interface {
	isImageIntegration_IntegrationConfig()
}

type imageIntegration_Clairify struct {
	Clairify *ClairifyConfig `protobuf:"bytes,8,opt,name=clairify,oneof"`
}

type imageIntegration_ScannerV4 struct {
	ScannerV4 *ScannerV4Config `protobuf:"bytes,23,opt,name=scanner_v4,json=scannerV4,oneof"`
}

type imageIntegration_Docker struct {
	Docker *DockerConfig `protobuf:"bytes,9,opt,name=docker,oneof"`
}

type imageIntegration_Quay struct {
	Quay *QuayConfig `protobuf:"bytes,10,opt,name=quay,oneof"`
}

type imageIntegration_Ecr struct {
	Ecr *ECRConfig `protobuf:"bytes,11,opt,name=ecr,oneof"`
}

type imageIntegration_Google struct {
	Google *GoogleConfig `protobuf:"bytes,13,opt,name=google,oneof"`
}

type imageIntegration_Clair struct {
	Clair *ClairConfig `protobuf:"bytes,14,opt,name=clair,oneof"`
}

type imageIntegration_ClairV4 struct {
	ClairV4 *ClairV4Config `protobuf:"bytes,22,opt,name=clair_v4,json=clairV4,oneof"`
}

type imageIntegration_Ibm struct {
	Ibm *IBMRegistryConfig `protobuf:"bytes,20,opt,name=ibm,oneof"`
}

type imageIntegration_Azure struct {
	Azure *AzureConfig `protobuf:"bytes,24,opt,name=azure,oneof"`
}

func (*imageIntegration_Clairify) isImageIntegration_IntegrationConfig() {}

func (*imageIntegration_ScannerV4) isImageIntegration_IntegrationConfig() {}

func (*imageIntegration_Docker) isImageIntegration_IntegrationConfig() {}

func (*imageIntegration_Quay) isImageIntegration_IntegrationConfig() {}

func (*imageIntegration_Ecr) isImageIntegration_IntegrationConfig() {}

func (*imageIntegration_Google) isImageIntegration_IntegrationConfig() {}

func (*imageIntegration_Clair) isImageIntegration_IntegrationConfig() {}

func (*imageIntegration_ClairV4) isImageIntegration_IntegrationConfig() {}

func (*imageIntegration_Ibm) isImageIntegration_IntegrationConfig() {}

func (*imageIntegration_Azure) isImageIntegration_IntegrationConfig() {}

type IBMRegistryConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Endpoint    *string                `protobuf:"bytes,1,opt,name=endpoint"`
	xxx_hidden_ApiKey      *string                `protobuf:"bytes,2,opt,name=api_key,json=apiKey"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *IBMRegistryConfig) Reset() {
	*x = IBMRegistryConfig{}
	mi := &file_storage_image_integration_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IBMRegistryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IBMRegistryConfig) ProtoMessage() {}

func (x *IBMRegistryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IBMRegistryConfig) GetEndpoint() string {
	if x != nil {
		if x.xxx_hidden_Endpoint != nil {
			return *x.xxx_hidden_Endpoint
		}
		return ""
	}
	return ""
}

func (x *IBMRegistryConfig) GetApiKey() string {
	if x != nil {
		if x.xxx_hidden_ApiKey != nil {
			return *x.xxx_hidden_ApiKey
		}
		return ""
	}
	return ""
}

func (x *IBMRegistryConfig) SetEndpoint(v string) {
	x.xxx_hidden_Endpoint = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *IBMRegistryConfig) SetApiKey(v string) {
	x.xxx_hidden_ApiKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *IBMRegistryConfig) HasEndpoint() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *IBMRegistryConfig) HasApiKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *IBMRegistryConfig) ClearEndpoint() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Endpoint = nil
}

func (x *IBMRegistryConfig) ClearApiKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ApiKey = nil
}

type IBMRegistryConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Endpoint *string
	// The API key for the integration. The server will mask the value of this credential in responses and logs.
	ApiKey *string
}

func (b0 IBMRegistryConfig_builder) Build() *IBMRegistryConfig {
	m0 := &IBMRegistryConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Endpoint != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Endpoint = b.Endpoint
	}
	if b.ApiKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_ApiKey = b.ApiKey
	}
	return m0
}

type QuayConfig struct {
	state                               protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Endpoint                 *string                  `protobuf:"bytes,1,opt,name=endpoint"`
	xxx_hidden_OauthToken               *string                  `protobuf:"bytes,2,opt,name=oauthToken"`
	xxx_hidden_Insecure                 bool                     `protobuf:"varint,3,opt,name=insecure"`
	xxx_hidden_RegistryRobotCredentials *QuayConfig_RobotAccount `protobuf:"bytes,4,opt,name=registry_robot_credentials,json=registryRobotCredentials"`
	XXX_raceDetectHookData              protoimpl.RaceDetectHookData
	XXX_presence                        [1]uint32
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *QuayConfig) Reset() {
	*x = QuayConfig{}
	mi := &file_storage_image_integration_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuayConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuayConfig) ProtoMessage() {}

func (x *QuayConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QuayConfig) GetEndpoint() string {
	if x != nil {
		if x.xxx_hidden_Endpoint != nil {
			return *x.xxx_hidden_Endpoint
		}
		return ""
	}
	return ""
}

func (x *QuayConfig) GetOauthToken() string {
	if x != nil {
		if x.xxx_hidden_OauthToken != nil {
			return *x.xxx_hidden_OauthToken
		}
		return ""
	}
	return ""
}

func (x *QuayConfig) GetInsecure() bool {
	if x != nil {
		return x.xxx_hidden_Insecure
	}
	return false
}

func (x *QuayConfig) GetRegistryRobotCredentials() *QuayConfig_RobotAccount {
	if x != nil {
		return x.xxx_hidden_RegistryRobotCredentials
	}
	return nil
}

func (x *QuayConfig) SetEndpoint(v string) {
	x.xxx_hidden_Endpoint = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *QuayConfig) SetOauthToken(v string) {
	x.xxx_hidden_OauthToken = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *QuayConfig) SetInsecure(v bool) {
	x.xxx_hidden_Insecure = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *QuayConfig) SetRegistryRobotCredentials(v *QuayConfig_RobotAccount) {
	x.xxx_hidden_RegistryRobotCredentials = v
}

func (x *QuayConfig) HasEndpoint() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *QuayConfig) HasOauthToken() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *QuayConfig) HasInsecure() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *QuayConfig) HasRegistryRobotCredentials() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_RegistryRobotCredentials != nil
}

func (x *QuayConfig) ClearEndpoint() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Endpoint = nil
}

func (x *QuayConfig) ClearOauthToken() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_OauthToken = nil
}

func (x *QuayConfig) ClearInsecure() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Insecure = false
}

func (x *QuayConfig) ClearRegistryRobotCredentials() {
	x.xxx_hidden_RegistryRobotCredentials = nil
}

type QuayConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Endpoint *string
	// The OAuth token for the integration. Required if this is a scanner integration. The server will mask the value of this credential in responses and logs.
	OauthToken *string
	Insecure   *bool
	// For registry integrations, Quay recommends using robot accounts. oauthToken will continue to be used for scanner integration.
	RegistryRobotCredentials *QuayConfig_RobotAccount
}

func (b0 QuayConfig_builder) Build() *QuayConfig {
	m0 := &QuayConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Endpoint != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Endpoint = b.Endpoint
	}
	if b.OauthToken != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_OauthToken = b.OauthToken
	}
	if b.Insecure != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Insecure = *b.Insecure
	}
	x.xxx_hidden_RegistryRobotCredentials = b.RegistryRobotCredentials
	return m0
}

type ClairConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Endpoint    *string                `protobuf:"bytes,1,opt,name=endpoint"`
	xxx_hidden_Insecure    bool                   `protobuf:"varint,2,opt,name=insecure"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ClairConfig) Reset() {
	*x = ClairConfig{}
	mi := &file_storage_image_integration_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClairConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClairConfig) ProtoMessage() {}

func (x *ClairConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClairConfig) GetEndpoint() string {
	if x != nil {
		if x.xxx_hidden_Endpoint != nil {
			return *x.xxx_hidden_Endpoint
		}
		return ""
	}
	return ""
}

func (x *ClairConfig) GetInsecure() bool {
	if x != nil {
		return x.xxx_hidden_Insecure
	}
	return false
}

func (x *ClairConfig) SetEndpoint(v string) {
	x.xxx_hidden_Endpoint = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ClairConfig) SetInsecure(v bool) {
	x.xxx_hidden_Insecure = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ClairConfig) HasEndpoint() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ClairConfig) HasInsecure() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ClairConfig) ClearEndpoint() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Endpoint = nil
}

func (x *ClairConfig) ClearInsecure() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Insecure = false
}

type ClairConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Endpoint *string
	Insecure *bool
}

func (b0 ClairConfig_builder) Build() *ClairConfig {
	m0 := &ClairConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Endpoint != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Endpoint = b.Endpoint
	}
	if b.Insecure != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Insecure = *b.Insecure
	}
	return m0
}

type ClairV4Config struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Endpoint    *string                `protobuf:"bytes,1,opt,name=endpoint"`
	xxx_hidden_Insecure    bool                   `protobuf:"varint,2,opt,name=insecure"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ClairV4Config) Reset() {
	*x = ClairV4Config{}
	mi := &file_storage_image_integration_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClairV4Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClairV4Config) ProtoMessage() {}

func (x *ClairV4Config) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClairV4Config) GetEndpoint() string {
	if x != nil {
		if x.xxx_hidden_Endpoint != nil {
			return *x.xxx_hidden_Endpoint
		}
		return ""
	}
	return ""
}

func (x *ClairV4Config) GetInsecure() bool {
	if x != nil {
		return x.xxx_hidden_Insecure
	}
	return false
}

func (x *ClairV4Config) SetEndpoint(v string) {
	x.xxx_hidden_Endpoint = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ClairV4Config) SetInsecure(v bool) {
	x.xxx_hidden_Insecure = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ClairV4Config) HasEndpoint() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ClairV4Config) HasInsecure() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ClairV4Config) ClearEndpoint() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Endpoint = nil
}

func (x *ClairV4Config) ClearInsecure() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Insecure = false
}

type ClairV4Config_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Endpoint *string
	Insecure *bool
}

func (b0 ClairV4Config_builder) Build() *ClairV4Config {
	m0 := &ClairV4Config{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Endpoint != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Endpoint = b.Endpoint
	}
	if b.Insecure != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Insecure = *b.Insecure
	}
	return m0
}

type ClairifyConfig struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Endpoint           *string                `protobuf:"bytes,1,opt,name=endpoint"`
	xxx_hidden_GrpcEndpoint       *string                `protobuf:"bytes,3,opt,name=grpc_endpoint,json=grpcEndpoint"`
	xxx_hidden_NumConcurrentScans int32                  `protobuf:"varint,2,opt,name=num_concurrent_scans,json=numConcurrentScans"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ClairifyConfig) Reset() {
	*x = ClairifyConfig{}
	mi := &file_storage_image_integration_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClairifyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClairifyConfig) ProtoMessage() {}

func (x *ClairifyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ClairifyConfig) GetEndpoint() string {
	if x != nil {
		if x.xxx_hidden_Endpoint != nil {
			return *x.xxx_hidden_Endpoint
		}
		return ""
	}
	return ""
}

func (x *ClairifyConfig) GetGrpcEndpoint() string {
	if x != nil {
		if x.xxx_hidden_GrpcEndpoint != nil {
			return *x.xxx_hidden_GrpcEndpoint
		}
		return ""
	}
	return ""
}

func (x *ClairifyConfig) GetNumConcurrentScans() int32 {
	if x != nil {
		return x.xxx_hidden_NumConcurrentScans
	}
	return 0
}

func (x *ClairifyConfig) SetEndpoint(v string) {
	x.xxx_hidden_Endpoint = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ClairifyConfig) SetGrpcEndpoint(v string) {
	x.xxx_hidden_GrpcEndpoint = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ClairifyConfig) SetNumConcurrentScans(v int32) {
	x.xxx_hidden_NumConcurrentScans = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ClairifyConfig) HasEndpoint() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ClairifyConfig) HasGrpcEndpoint() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ClairifyConfig) HasNumConcurrentScans() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ClairifyConfig) ClearEndpoint() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Endpoint = nil
}

func (x *ClairifyConfig) ClearGrpcEndpoint() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_GrpcEndpoint = nil
}

func (x *ClairifyConfig) ClearNumConcurrentScans() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_NumConcurrentScans = 0
}

type ClairifyConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Endpoint           *string
	GrpcEndpoint       *string
	NumConcurrentScans *int32
}

func (b0 ClairifyConfig_builder) Build() *ClairifyConfig {
	m0 := &ClairifyConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Endpoint != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Endpoint = b.Endpoint
	}
	if b.GrpcEndpoint != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_GrpcEndpoint = b.GrpcEndpoint
	}
	if b.NumConcurrentScans != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_NumConcurrentScans = *b.NumConcurrentScans
	}
	return m0
}

// Docker registry configuration. Used by integrations of type "docker" and other docker compliant registries without dedicated configuration type.
//
// Use of type "azure" with `DockerConfig` has been deprecated in 4.7. Use `AzureConfig` instead.
type DockerConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Endpoint    *string                `protobuf:"bytes,1,opt,name=endpoint"`
	xxx_hidden_Username    *string                `protobuf:"bytes,2,opt,name=username"`
	xxx_hidden_Password    *string                `protobuf:"bytes,3,opt,name=password"`
	xxx_hidden_Insecure    bool                   `protobuf:"varint,4,opt,name=insecure"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DockerConfig) Reset() {
	*x = DockerConfig{}
	mi := &file_storage_image_integration_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerConfig) ProtoMessage() {}

func (x *DockerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DockerConfig) GetEndpoint() string {
	if x != nil {
		if x.xxx_hidden_Endpoint != nil {
			return *x.xxx_hidden_Endpoint
		}
		return ""
	}
	return ""
}

func (x *DockerConfig) GetUsername() string {
	if x != nil {
		if x.xxx_hidden_Username != nil {
			return *x.xxx_hidden_Username
		}
		return ""
	}
	return ""
}

func (x *DockerConfig) GetPassword() string {
	if x != nil {
		if x.xxx_hidden_Password != nil {
			return *x.xxx_hidden_Password
		}
		return ""
	}
	return ""
}

func (x *DockerConfig) GetInsecure() bool {
	if x != nil {
		return x.xxx_hidden_Insecure
	}
	return false
}

func (x *DockerConfig) SetEndpoint(v string) {
	x.xxx_hidden_Endpoint = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DockerConfig) SetUsername(v string) {
	x.xxx_hidden_Username = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DockerConfig) SetPassword(v string) {
	x.xxx_hidden_Password = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *DockerConfig) SetInsecure(v bool) {
	x.xxx_hidden_Insecure = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *DockerConfig) HasEndpoint() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DockerConfig) HasUsername() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DockerConfig) HasPassword() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DockerConfig) HasInsecure() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DockerConfig) ClearEndpoint() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Endpoint = nil
}

func (x *DockerConfig) ClearUsername() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Username = nil
}

func (x *DockerConfig) ClearPassword() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Password = nil
}

func (x *DockerConfig) ClearInsecure() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Insecure = false
}

type DockerConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Endpoint *string
	Username *string
	// The password for the integration. The server will mask the value of this credential in responses and logs.
	Password *string
	Insecure *bool
}

func (b0 DockerConfig_builder) Build() *DockerConfig {
	m0 := &DockerConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Endpoint != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Endpoint = b.Endpoint
	}
	if b.Username != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Username = b.Username
	}
	if b.Password != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Password = b.Password
	}
	if b.Insecure != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Insecure = *b.Insecure
	}
	return m0
}

type ECRConfig struct {
	state                           protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_RegistryId           *string                      `protobuf:"bytes,1,opt,name=registry_id,json=registryId"`
	xxx_hidden_AccessKeyId          *string                      `protobuf:"bytes,2,opt,name=access_key_id,json=accessKeyId"`
	xxx_hidden_SecretAccessKey      *string                      `protobuf:"bytes,3,opt,name=secret_access_key,json=secretAccessKey"`
	xxx_hidden_Region               *string                      `protobuf:"bytes,4,opt,name=region"`
	xxx_hidden_UseIam               bool                         `protobuf:"varint,5,opt,name=use_iam,json=useIam"`
	xxx_hidden_Endpoint             *string                      `protobuf:"bytes,6,opt,name=endpoint"`
	xxx_hidden_UseAssumeRole        bool                         `protobuf:"varint,7,opt,name=use_assume_role,json=useAssumeRole"`
	xxx_hidden_AssumeRoleId         *string                      `protobuf:"bytes,8,opt,name=assume_role_id,json=assumeRoleId"`
	xxx_hidden_AssumeRoleExternalId *string                      `protobuf:"bytes,9,opt,name=assume_role_external_id,json=assumeRoleExternalId"`
	xxx_hidden_AuthorizationData    *ECRConfig_AuthorizationData `protobuf:"bytes,10,opt,name=authorization_data,json=authorizationData"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *ECRConfig) Reset() {
	*x = ECRConfig{}
	mi := &file_storage_image_integration_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ECRConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECRConfig) ProtoMessage() {}

func (x *ECRConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ECRConfig) GetRegistryId() string {
	if x != nil {
		if x.xxx_hidden_RegistryId != nil {
			return *x.xxx_hidden_RegistryId
		}
		return ""
	}
	return ""
}

func (x *ECRConfig) GetAccessKeyId() string {
	if x != nil {
		if x.xxx_hidden_AccessKeyId != nil {
			return *x.xxx_hidden_AccessKeyId
		}
		return ""
	}
	return ""
}

func (x *ECRConfig) GetSecretAccessKey() string {
	if x != nil {
		if x.xxx_hidden_SecretAccessKey != nil {
			return *x.xxx_hidden_SecretAccessKey
		}
		return ""
	}
	return ""
}

func (x *ECRConfig) GetRegion() string {
	if x != nil {
		if x.xxx_hidden_Region != nil {
			return *x.xxx_hidden_Region
		}
		return ""
	}
	return ""
}

func (x *ECRConfig) GetUseIam() bool {
	if x != nil {
		return x.xxx_hidden_UseIam
	}
	return false
}

func (x *ECRConfig) GetEndpoint() string {
	if x != nil {
		if x.xxx_hidden_Endpoint != nil {
			return *x.xxx_hidden_Endpoint
		}
		return ""
	}
	return ""
}

func (x *ECRConfig) GetUseAssumeRole() bool {
	if x != nil {
		return x.xxx_hidden_UseAssumeRole
	}
	return false
}

func (x *ECRConfig) GetAssumeRoleId() string {
	if x != nil {
		if x.xxx_hidden_AssumeRoleId != nil {
			return *x.xxx_hidden_AssumeRoleId
		}
		return ""
	}
	return ""
}

func (x *ECRConfig) GetAssumeRoleExternalId() string {
	if x != nil {
		if x.xxx_hidden_AssumeRoleExternalId != nil {
			return *x.xxx_hidden_AssumeRoleExternalId
		}
		return ""
	}
	return ""
}

func (x *ECRConfig) GetAuthorizationData() *ECRConfig_AuthorizationData {
	if x != nil {
		return x.xxx_hidden_AuthorizationData
	}
	return nil
}

func (x *ECRConfig) SetRegistryId(v string) {
	x.xxx_hidden_RegistryId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 10)
}

func (x *ECRConfig) SetAccessKeyId(v string) {
	x.xxx_hidden_AccessKeyId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 10)
}

func (x *ECRConfig) SetSecretAccessKey(v string) {
	x.xxx_hidden_SecretAccessKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 10)
}

func (x *ECRConfig) SetRegion(v string) {
	x.xxx_hidden_Region = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 10)
}

func (x *ECRConfig) SetUseIam(v bool) {
	x.xxx_hidden_UseIam = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 10)
}

func (x *ECRConfig) SetEndpoint(v string) {
	x.xxx_hidden_Endpoint = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 10)
}

func (x *ECRConfig) SetUseAssumeRole(v bool) {
	x.xxx_hidden_UseAssumeRole = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 10)
}

func (x *ECRConfig) SetAssumeRoleId(v string) {
	x.xxx_hidden_AssumeRoleId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 10)
}

func (x *ECRConfig) SetAssumeRoleExternalId(v string) {
	x.xxx_hidden_AssumeRoleExternalId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 10)
}

func (x *ECRConfig) SetAuthorizationData(v *ECRConfig_AuthorizationData) {
	x.xxx_hidden_AuthorizationData = v
}

func (x *ECRConfig) HasRegistryId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ECRConfig) HasAccessKeyId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ECRConfig) HasSecretAccessKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ECRConfig) HasRegion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ECRConfig) HasUseIam() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ECRConfig) HasEndpoint() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ECRConfig) HasUseAssumeRole() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ECRConfig) HasAssumeRoleId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ECRConfig) HasAssumeRoleExternalId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *ECRConfig) HasAuthorizationData() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_AuthorizationData != nil
}

func (x *ECRConfig) ClearRegistryId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_RegistryId = nil
}

func (x *ECRConfig) ClearAccessKeyId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_AccessKeyId = nil
}

func (x *ECRConfig) ClearSecretAccessKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_SecretAccessKey = nil
}

func (x *ECRConfig) ClearRegion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Region = nil
}

func (x *ECRConfig) ClearUseIam() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_UseIam = false
}

func (x *ECRConfig) ClearEndpoint() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Endpoint = nil
}

func (x *ECRConfig) ClearUseAssumeRole() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_UseAssumeRole = false
}

func (x *ECRConfig) ClearAssumeRoleId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_AssumeRoleId = nil
}

func (x *ECRConfig) ClearAssumeRoleExternalId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_AssumeRoleExternalId = nil
}

func (x *ECRConfig) ClearAuthorizationData() {
	x.xxx_hidden_AuthorizationData = nil
}

type ECRConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RegistryId *string
	// The access key ID for the integration. The server will mask the value of this credential in responses and logs.
	AccessKeyId *string
	// The secret access key for the integration. The server will mask the value of this credential in responses and logs.
	SecretAccessKey      *string
	Region               *string
	UseIam               *bool
	Endpoint             *string
	UseAssumeRole        *bool
	AssumeRoleId         *string
	AssumeRoleExternalId *string
	AuthorizationData    *ECRConfig_AuthorizationData
}

func (b0 ECRConfig_builder) Build() *ECRConfig {
	m0 := &ECRConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RegistryId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 10)
		x.xxx_hidden_RegistryId = b.RegistryId
	}
	if b.AccessKeyId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 10)
		x.xxx_hidden_AccessKeyId = b.AccessKeyId
	}
	if b.SecretAccessKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 10)
		x.xxx_hidden_SecretAccessKey = b.SecretAccessKey
	}
	if b.Region != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 10)
		x.xxx_hidden_Region = b.Region
	}
	if b.UseIam != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 10)
		x.xxx_hidden_UseIam = *b.UseIam
	}
	if b.Endpoint != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 10)
		x.xxx_hidden_Endpoint = b.Endpoint
	}
	if b.UseAssumeRole != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 10)
		x.xxx_hidden_UseAssumeRole = *b.UseAssumeRole
	}
	if b.AssumeRoleId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 10)
		x.xxx_hidden_AssumeRoleId = b.AssumeRoleId
	}
	if b.AssumeRoleExternalId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 10)
		x.xxx_hidden_AssumeRoleExternalId = b.AssumeRoleExternalId
	}
	x.xxx_hidden_AuthorizationData = b.AuthorizationData
	return m0
}

type GoogleConfig struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Endpoint       *string                `protobuf:"bytes,1,opt,name=endpoint"`
	xxx_hidden_ServiceAccount *string                `protobuf:"bytes,2,opt,name=service_account,json=serviceAccount"`
	xxx_hidden_Project        *string                `protobuf:"bytes,3,opt,name=project"`
	xxx_hidden_WifEnabled     bool                   `protobuf:"varint,4,opt,name=wif_enabled,json=wifEnabled"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GoogleConfig) Reset() {
	*x = GoogleConfig{}
	mi := &file_storage_image_integration_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoogleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleConfig) ProtoMessage() {}

func (x *GoogleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GoogleConfig) GetEndpoint() string {
	if x != nil {
		if x.xxx_hidden_Endpoint != nil {
			return *x.xxx_hidden_Endpoint
		}
		return ""
	}
	return ""
}

func (x *GoogleConfig) GetServiceAccount() string {
	if x != nil {
		if x.xxx_hidden_ServiceAccount != nil {
			return *x.xxx_hidden_ServiceAccount
		}
		return ""
	}
	return ""
}

func (x *GoogleConfig) GetProject() string {
	if x != nil {
		if x.xxx_hidden_Project != nil {
			return *x.xxx_hidden_Project
		}
		return ""
	}
	return ""
}

func (x *GoogleConfig) GetWifEnabled() bool {
	if x != nil {
		return x.xxx_hidden_WifEnabled
	}
	return false
}

func (x *GoogleConfig) SetEndpoint(v string) {
	x.xxx_hidden_Endpoint = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *GoogleConfig) SetServiceAccount(v string) {
	x.xxx_hidden_ServiceAccount = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *GoogleConfig) SetProject(v string) {
	x.xxx_hidden_Project = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *GoogleConfig) SetWifEnabled(v bool) {
	x.xxx_hidden_WifEnabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *GoogleConfig) HasEndpoint() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GoogleConfig) HasServiceAccount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GoogleConfig) HasProject() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *GoogleConfig) HasWifEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *GoogleConfig) ClearEndpoint() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Endpoint = nil
}

func (x *GoogleConfig) ClearServiceAccount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ServiceAccount = nil
}

func (x *GoogleConfig) ClearProject() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Project = nil
}

func (x *GoogleConfig) ClearWifEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_WifEnabled = false
}

type GoogleConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Endpoint *string
	// The service account for the integration. The server will mask the value of this credential in responses and logs.
	ServiceAccount *string
	Project        *string
	WifEnabled     *bool
}

func (b0 GoogleConfig_builder) Build() *GoogleConfig {
	m0 := &GoogleConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Endpoint != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Endpoint = b.Endpoint
	}
	if b.ServiceAccount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ServiceAccount = b.ServiceAccount
	}
	if b.Project != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Project = b.Project
	}
	if b.WifEnabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_WifEnabled = *b.WifEnabled
	}
	return m0
}

type ScannerV4Config struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_NumConcurrentScans int32                  `protobuf:"varint,1,opt,name=num_concurrent_scans,json=numConcurrentScans"`
	xxx_hidden_IndexerEndpoint    *string                `protobuf:"bytes,2,opt,name=indexer_endpoint,json=indexerEndpoint"`
	xxx_hidden_MatcherEndpoint    *string                `protobuf:"bytes,3,opt,name=matcher_endpoint,json=matcherEndpoint"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ScannerV4Config) Reset() {
	*x = ScannerV4Config{}
	mi := &file_storage_image_integration_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScannerV4Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScannerV4Config) ProtoMessage() {}

func (x *ScannerV4Config) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ScannerV4Config) GetNumConcurrentScans() int32 {
	if x != nil {
		return x.xxx_hidden_NumConcurrentScans
	}
	return 0
}

func (x *ScannerV4Config) GetIndexerEndpoint() string {
	if x != nil {
		if x.xxx_hidden_IndexerEndpoint != nil {
			return *x.xxx_hidden_IndexerEndpoint
		}
		return ""
	}
	return ""
}

func (x *ScannerV4Config) GetMatcherEndpoint() string {
	if x != nil {
		if x.xxx_hidden_MatcherEndpoint != nil {
			return *x.xxx_hidden_MatcherEndpoint
		}
		return ""
	}
	return ""
}

func (x *ScannerV4Config) SetNumConcurrentScans(v int32) {
	x.xxx_hidden_NumConcurrentScans = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ScannerV4Config) SetIndexerEndpoint(v string) {
	x.xxx_hidden_IndexerEndpoint = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ScannerV4Config) SetMatcherEndpoint(v string) {
	x.xxx_hidden_MatcherEndpoint = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ScannerV4Config) HasNumConcurrentScans() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ScannerV4Config) HasIndexerEndpoint() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ScannerV4Config) HasMatcherEndpoint() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ScannerV4Config) ClearNumConcurrentScans() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_NumConcurrentScans = 0
}

func (x *ScannerV4Config) ClearIndexerEndpoint() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_IndexerEndpoint = nil
}

func (x *ScannerV4Config) ClearMatcherEndpoint() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_MatcherEndpoint = nil
}

type ScannerV4Config_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	NumConcurrentScans *int32
	IndexerEndpoint    *string
	MatcherEndpoint    *string
}

func (b0 ScannerV4Config_builder) Build() *ScannerV4Config {
	m0 := &ScannerV4Config{}
	b, x := &b0, m0
	_, _ = b, x
	if b.NumConcurrentScans != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_NumConcurrentScans = *b.NumConcurrentScans
	}
	if b.IndexerEndpoint != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_IndexerEndpoint = b.IndexerEndpoint
	}
	if b.MatcherEndpoint != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_MatcherEndpoint = b.MatcherEndpoint
	}
	return m0
}

// Azure container registry configuration. Used by integrations of type "azure".
type AzureConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Endpoint    *string                `protobuf:"bytes,1,opt,name=endpoint"`
	xxx_hidden_Username    *string                `protobuf:"bytes,2,opt,name=username"`
	xxx_hidden_Password    *string                `protobuf:"bytes,3,opt,name=password"`
	xxx_hidden_WifEnabled  bool                   `protobuf:"varint,4,opt,name=wif_enabled,json=wifEnabled"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AzureConfig) Reset() {
	*x = AzureConfig{}
	mi := &file_storage_image_integration_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AzureConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureConfig) ProtoMessage() {}

func (x *AzureConfig) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AzureConfig) GetEndpoint() string {
	if x != nil {
		if x.xxx_hidden_Endpoint != nil {
			return *x.xxx_hidden_Endpoint
		}
		return ""
	}
	return ""
}

func (x *AzureConfig) GetUsername() string {
	if x != nil {
		if x.xxx_hidden_Username != nil {
			return *x.xxx_hidden_Username
		}
		return ""
	}
	return ""
}

func (x *AzureConfig) GetPassword() string {
	if x != nil {
		if x.xxx_hidden_Password != nil {
			return *x.xxx_hidden_Password
		}
		return ""
	}
	return ""
}

func (x *AzureConfig) GetWifEnabled() bool {
	if x != nil {
		return x.xxx_hidden_WifEnabled
	}
	return false
}

func (x *AzureConfig) SetEndpoint(v string) {
	x.xxx_hidden_Endpoint = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *AzureConfig) SetUsername(v string) {
	x.xxx_hidden_Username = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *AzureConfig) SetPassword(v string) {
	x.xxx_hidden_Password = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *AzureConfig) SetWifEnabled(v bool) {
	x.xxx_hidden_WifEnabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *AzureConfig) HasEndpoint() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AzureConfig) HasUsername() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AzureConfig) HasPassword() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AzureConfig) HasWifEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AzureConfig) ClearEndpoint() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Endpoint = nil
}

func (x *AzureConfig) ClearUsername() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Username = nil
}

func (x *AzureConfig) ClearPassword() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Password = nil
}

func (x *AzureConfig) ClearWifEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_WifEnabled = false
}

type AzureConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Endpoint *string
	Username *string
	// The password for the integration. The server will mask the value of this credential in responses and logs.
	Password *string
	// Enables authentication with short-lived tokens using Azure managed identities or Azure workload identities.
	WifEnabled *bool
}

func (b0 AzureConfig_builder) Build() *AzureConfig {
	m0 := &AzureConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Endpoint != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Endpoint = b.Endpoint
	}
	if b.Username != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Username = b.Username
	}
	if b.Password != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Password = b.Password
	}
	if b.WifEnabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_WifEnabled = *b.WifEnabled
	}
	return m0
}

type ImageIntegration_Source struct {
	state                          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ClusterId           *string                `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_Namespace           *string                `protobuf:"bytes,2,opt,name=namespace"`
	xxx_hidden_ImagePullSecretName *string                `protobuf:"bytes,3,opt,name=image_pull_secret_name,json=imagePullSecretName"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [1]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *ImageIntegration_Source) Reset() {
	*x = ImageIntegration_Source{}
	mi := &file_storage_image_integration_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageIntegration_Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageIntegration_Source) ProtoMessage() {}

func (x *ImageIntegration_Source) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ImageIntegration_Source) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ImageIntegration_Source) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *ImageIntegration_Source) GetImagePullSecretName() string {
	if x != nil {
		if x.xxx_hidden_ImagePullSecretName != nil {
			return *x.xxx_hidden_ImagePullSecretName
		}
		return ""
	}
	return ""
}

func (x *ImageIntegration_Source) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ImageIntegration_Source) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ImageIntegration_Source) SetImagePullSecretName(v string) {
	x.xxx_hidden_ImagePullSecretName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ImageIntegration_Source) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ImageIntegration_Source) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ImageIntegration_Source) HasImagePullSecretName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ImageIntegration_Source) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ClusterId = nil
}

func (x *ImageIntegration_Source) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Namespace = nil
}

func (x *ImageIntegration_Source) ClearImagePullSecretName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ImagePullSecretName = nil
}

type ImageIntegration_Source_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ClusterId           *string
	Namespace           *string
	ImagePullSecretName *string
}

func (b0 ImageIntegration_Source_builder) Build() *ImageIntegration_Source {
	m0 := &ImageIntegration_Source{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.ImagePullSecretName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_ImagePullSecretName = b.ImagePullSecretName
	}
	return m0
}

// Robot account is Quay's named tokens that can be granted permissions on multiple repositories under an organization.
// It's Quay's recommended authentication model when possible (i.e. registry integration)
type QuayConfig_RobotAccount struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Username    *string                `protobuf:"bytes,1,opt,name=username"`
	xxx_hidden_Password    *string                `protobuf:"bytes,2,opt,name=password"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *QuayConfig_RobotAccount) Reset() {
	*x = QuayConfig_RobotAccount{}
	mi := &file_storage_image_integration_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuayConfig_RobotAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuayConfig_RobotAccount) ProtoMessage() {}

func (x *QuayConfig_RobotAccount) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QuayConfig_RobotAccount) GetUsername() string {
	if x != nil {
		if x.xxx_hidden_Username != nil {
			return *x.xxx_hidden_Username
		}
		return ""
	}
	return ""
}

func (x *QuayConfig_RobotAccount) GetPassword() string {
	if x != nil {
		if x.xxx_hidden_Password != nil {
			return *x.xxx_hidden_Password
		}
		return ""
	}
	return ""
}

func (x *QuayConfig_RobotAccount) SetUsername(v string) {
	x.xxx_hidden_Username = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *QuayConfig_RobotAccount) SetPassword(v string) {
	x.xxx_hidden_Password = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *QuayConfig_RobotAccount) HasUsername() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *QuayConfig_RobotAccount) HasPassword() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *QuayConfig_RobotAccount) ClearUsername() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Username = nil
}

func (x *QuayConfig_RobotAccount) ClearPassword() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Password = nil
}

type QuayConfig_RobotAccount_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Username *string
	// The server will mask the value of this password in responses and logs.
	Password *string
}

func (b0 QuayConfig_RobotAccount_builder) Build() *QuayConfig_RobotAccount {
	m0 := &QuayConfig_RobotAccount{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Username != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Username = b.Username
	}
	if b.Password != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Password = b.Password
	}
	return m0
}

// An authorization data represents the IAM authentication credentials and
// can be used to access any Amazon ECR registry that the IAM principal has
// access to.
type ECRConfig_AuthorizationData struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Username    *string                `protobuf:"bytes,1,opt,name=username"`
	xxx_hidden_Password    *string                `protobuf:"bytes,2,opt,name=password"`
	xxx_hidden_ExpiresAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ECRConfig_AuthorizationData) Reset() {
	*x = ECRConfig_AuthorizationData{}
	mi := &file_storage_image_integration_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ECRConfig_AuthorizationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECRConfig_AuthorizationData) ProtoMessage() {}

func (x *ECRConfig_AuthorizationData) ProtoReflect() protoreflect.Message {
	mi := &file_storage_image_integration_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ECRConfig_AuthorizationData) GetUsername() string {
	if x != nil {
		if x.xxx_hidden_Username != nil {
			return *x.xxx_hidden_Username
		}
		return ""
	}
	return ""
}

func (x *ECRConfig_AuthorizationData) GetPassword() string {
	if x != nil {
		if x.xxx_hidden_Password != nil {
			return *x.xxx_hidden_Password
		}
		return ""
	}
	return ""
}

func (x *ECRConfig_AuthorizationData) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ExpiresAt
	}
	return nil
}

func (x *ECRConfig_AuthorizationData) SetUsername(v string) {
	x.xxx_hidden_Username = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ECRConfig_AuthorizationData) SetPassword(v string) {
	x.xxx_hidden_Password = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ECRConfig_AuthorizationData) SetExpiresAt(v *timestamppb.Timestamp) {
	x.xxx_hidden_ExpiresAt = v
}

func (x *ECRConfig_AuthorizationData) HasUsername() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ECRConfig_AuthorizationData) HasPassword() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ECRConfig_AuthorizationData) HasExpiresAt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ExpiresAt != nil
}

func (x *ECRConfig_AuthorizationData) ClearUsername() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Username = nil
}

func (x *ECRConfig_AuthorizationData) ClearPassword() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Password = nil
}

func (x *ECRConfig_AuthorizationData) ClearExpiresAt() {
	x.xxx_hidden_ExpiresAt = nil
}

type ECRConfig_AuthorizationData_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Username  *string
	Password  *string
	ExpiresAt *timestamppb.Timestamp
}

func (b0 ECRConfig_AuthorizationData_builder) Build() *ECRConfig_AuthorizationData {
	m0 := &ECRConfig_AuthorizationData{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Username != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Username = b.Username
	}
	if b.Password != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Password = b.Password
	}
	x.xxx_hidden_ExpiresAt = b.ExpiresAt
	return m0
}

var File_storage_image_integration_proto protoreflect.FileDescriptor

const file_storage_image_integration_proto_rawDesc = "" +
	"\n" +
	"\x1fstorage/image_integration.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\x1a!google/protobuf/go_features.proto\"\xdd\a\n" +
	"\x10ImageIntegration\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12A\n" +
	"\n" +
	"categories\x18\x06 \x03(\x0e2!.storage.ImageIntegrationCategoryR\n" +
	"categories\x125\n" +
	"\bclairify\x18\b \x01(\v2\x17.storage.ClairifyConfigH\x00R\bclairify\x129\n" +
	"\n" +
	"scanner_v4\x18\x17 \x01(\v2\x18.storage.ScannerV4ConfigH\x00R\tscannerV4\x12/\n" +
	"\x06docker\x18\t \x01(\v2\x15.storage.DockerConfigH\x00R\x06docker\x12)\n" +
	"\x04quay\x18\n" +
	" \x01(\v2\x13.storage.QuayConfigH\x00R\x04quay\x12&\n" +
	"\x03ecr\x18\v \x01(\v2\x12.storage.ECRConfigH\x00R\x03ecr\x12/\n" +
	"\x06google\x18\r \x01(\v2\x15.storage.GoogleConfigH\x00R\x06google\x12,\n" +
	"\x05clair\x18\x0e \x01(\v2\x14.storage.ClairConfigH\x00R\x05clair\x123\n" +
	"\bclair_v4\x18\x16 \x01(\v2\x16.storage.ClairV4ConfigH\x00R\aclairV4\x12.\n" +
	"\x03ibm\x18\x14 \x01(\v2\x1a.storage.IBMRegistryConfigH\x00R\x03ibm\x12,\n" +
	"\x05azure\x18\x18 \x01(\v2\x14.storage.AzureConfigH\x00R\x05azure\x12$\n" +
	"\rautogenerated\x18\x0f \x01(\bR\rautogenerated\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x10 \x01(\tR\tclusterId\x122\n" +
	"\x15skip_test_integration\x18\x12 \x01(\bR\x13skipTestIntegration\x128\n" +
	"\x06source\x18\x15 \x01(\v2 .storage.ImageIntegration.SourceR\x06source\x1az\n" +
	"\x06Source\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x123\n" +
	"\x16image_pull_secret_name\x18\x03 \x01(\tR\x13imagePullSecretNameB\x13\n" +
	"\x11IntegrationConfigJ\x04\b\x04\x10\x05J\x04\b\x05\x10\x06J\x04\b\a\x10\bJ\x04\b\f\x10\rJ\x04\b\x11\x10\x12J\x04\b\x13\x10\x14\"H\n" +
	"\x11IBMRegistryConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x17\n" +
	"\aapi_key\x18\x02 \x01(\tR\x06apiKey\"\x8c\x02\n" +
	"\n" +
	"QuayConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x1e\n" +
	"\n" +
	"oauthToken\x18\x02 \x01(\tR\n" +
	"oauthToken\x12\x1a\n" +
	"\binsecure\x18\x03 \x01(\bR\binsecure\x12^\n" +
	"\x1aregistry_robot_credentials\x18\x04 \x01(\v2 .storage.QuayConfig.RobotAccountR\x18registryRobotCredentials\x1aF\n" +
	"\fRobotAccount\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"E\n" +
	"\vClairConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x1a\n" +
	"\binsecure\x18\x02 \x01(\bR\binsecure\"G\n" +
	"\rClairV4Config\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x1a\n" +
	"\binsecure\x18\x02 \x01(\bR\binsecure\"\x83\x01\n" +
	"\x0eClairifyConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12#\n" +
	"\rgrpc_endpoint\x18\x03 \x01(\tR\fgrpcEndpoint\x120\n" +
	"\x14num_concurrent_scans\x18\x02 \x01(\x05R\x12numConcurrentScans\"~\n" +
	"\fDockerConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x1a\n" +
	"\binsecure\x18\x04 \x01(\bR\binsecure\"\xac\x04\n" +
	"\tECRConfig\x12\x1f\n" +
	"\vregistry_id\x18\x01 \x01(\tR\n" +
	"registryId\x12\"\n" +
	"\raccess_key_id\x18\x02 \x01(\tR\vaccessKeyId\x12*\n" +
	"\x11secret_access_key\x18\x03 \x01(\tR\x0fsecretAccessKey\x12\x16\n" +
	"\x06region\x18\x04 \x01(\tR\x06region\x12\x17\n" +
	"\ause_iam\x18\x05 \x01(\bR\x06useIam\x12\x1a\n" +
	"\bendpoint\x18\x06 \x01(\tR\bendpoint\x12&\n" +
	"\x0fuse_assume_role\x18\a \x01(\bR\ruseAssumeRole\x12$\n" +
	"\x0eassume_role_id\x18\b \x01(\tR\fassumeRoleId\x125\n" +
	"\x17assume_role_external_id\x18\t \x01(\tR\x14assumeRoleExternalId\x12S\n" +
	"\x12authorization_data\x18\n" +
	" \x01(\v2$.storage.ECRConfig.AuthorizationDataR\x11authorizationData\x1a\x86\x01\n" +
	"\x11AuthorizationData\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x129\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"\x8e\x01\n" +
	"\fGoogleConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12'\n" +
	"\x0fservice_account\x18\x02 \x01(\tR\x0eserviceAccount\x12\x18\n" +
	"\aproject\x18\x03 \x01(\tR\aproject\x12\x1f\n" +
	"\vwif_enabled\x18\x04 \x01(\bR\n" +
	"wifEnabled\"\x99\x01\n" +
	"\x0fScannerV4Config\x120\n" +
	"\x14num_concurrent_scans\x18\x01 \x01(\x05R\x12numConcurrentScans\x12)\n" +
	"\x10indexer_endpoint\x18\x02 \x01(\tR\x0findexerEndpoint\x12)\n" +
	"\x10matcher_endpoint\x18\x03 \x01(\tR\x0fmatcherEndpoint\"\x82\x01\n" +
	"\vAzureConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x1f\n" +
	"\vwif_enabled\x18\x04 \x01(\bR\n" +
	"wifEnabled*G\n" +
	"\x18ImageIntegrationCategory\x12\f\n" +
	"\bREGISTRY\x10\x00\x12\v\n" +
	"\aSCANNER\x10\x01\x12\x10\n" +
	"\fNODE_SCANNER\x10\x02B6\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storage\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_storage_image_integration_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storage_image_integration_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_storage_image_integration_proto_goTypes = []any{
	(ImageIntegrationCategory)(0),       // 0: storage.ImageIntegrationCategory
	(*ImageIntegration)(nil),            // 1: storage.ImageIntegration
	(*IBMRegistryConfig)(nil),           // 2: storage.IBMRegistryConfig
	(*QuayConfig)(nil),                  // 3: storage.QuayConfig
	(*ClairConfig)(nil),                 // 4: storage.ClairConfig
	(*ClairV4Config)(nil),               // 5: storage.ClairV4Config
	(*ClairifyConfig)(nil),              // 6: storage.ClairifyConfig
	(*DockerConfig)(nil),                // 7: storage.DockerConfig
	(*ECRConfig)(nil),                   // 8: storage.ECRConfig
	(*GoogleConfig)(nil),                // 9: storage.GoogleConfig
	(*ScannerV4Config)(nil),             // 10: storage.ScannerV4Config
	(*AzureConfig)(nil),                 // 11: storage.AzureConfig
	(*ImageIntegration_Source)(nil),     // 12: storage.ImageIntegration.Source
	(*QuayConfig_RobotAccount)(nil),     // 13: storage.QuayConfig.RobotAccount
	(*ECRConfig_AuthorizationData)(nil), // 14: storage.ECRConfig.AuthorizationData
	(*timestamppb.Timestamp)(nil),       // 15: google.protobuf.Timestamp
}
var file_storage_image_integration_proto_depIdxs = []int32{
	0,  // 0: storage.ImageIntegration.categories:type_name -> storage.ImageIntegrationCategory
	6,  // 1: storage.ImageIntegration.clairify:type_name -> storage.ClairifyConfig
	10, // 2: storage.ImageIntegration.scanner_v4:type_name -> storage.ScannerV4Config
	7,  // 3: storage.ImageIntegration.docker:type_name -> storage.DockerConfig
	3,  // 4: storage.ImageIntegration.quay:type_name -> storage.QuayConfig
	8,  // 5: storage.ImageIntegration.ecr:type_name -> storage.ECRConfig
	9,  // 6: storage.ImageIntegration.google:type_name -> storage.GoogleConfig
	4,  // 7: storage.ImageIntegration.clair:type_name -> storage.ClairConfig
	5,  // 8: storage.ImageIntegration.clair_v4:type_name -> storage.ClairV4Config
	2,  // 9: storage.ImageIntegration.ibm:type_name -> storage.IBMRegistryConfig
	11, // 10: storage.ImageIntegration.azure:type_name -> storage.AzureConfig
	12, // 11: storage.ImageIntegration.source:type_name -> storage.ImageIntegration.Source
	13, // 12: storage.QuayConfig.registry_robot_credentials:type_name -> storage.QuayConfig.RobotAccount
	14, // 13: storage.ECRConfig.authorization_data:type_name -> storage.ECRConfig.AuthorizationData
	15, // 14: storage.ECRConfig.AuthorizationData.expires_at:type_name -> google.protobuf.Timestamp
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_storage_image_integration_proto_init() }
func file_storage_image_integration_proto_init() {
	if File_storage_image_integration_proto != nil {
		return
	}
	file_storage_image_integration_proto_msgTypes[0].OneofWrappers = []any{
		(*imageIntegration_Clairify)(nil),
		(*imageIntegration_ScannerV4)(nil),
		(*imageIntegration_Docker)(nil),
		(*imageIntegration_Quay)(nil),
		(*imageIntegration_Ecr)(nil),
		(*imageIntegration_Google)(nil),
		(*imageIntegration_Clair)(nil),
		(*imageIntegration_ClairV4)(nil),
		(*imageIntegration_Ibm)(nil),
		(*imageIntegration_Azure)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_image_integration_proto_rawDesc), len(file_storage_image_integration_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_image_integration_proto_goTypes,
		DependencyIndexes: file_storage_image_integration_proto_depIdxs,
		EnumInfos:         file_storage_image_integration_proto_enumTypes,
		MessageInfos:      file_storage_image_integration_proto_msgTypes,
	}.Build()
	File_storage_image_integration_proto = out.File
	file_storage_image_integration_proto_goTypes = nil
	file_storage_image_integration_proto_depIdxs = nil
}
