// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/auth_provider.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Next Tag: 15.
type AuthProvider struct {
	state                         protoimpl.MessageState             `protogen:"opaque.v1"`
	xxx_hidden_Id                 *string                            `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name               *string                            `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Type               *string                            `protobuf:"bytes,3,opt,name=type"`
	xxx_hidden_UiEndpoint         *string                            `protobuf:"bytes,4,opt,name=ui_endpoint,json=uiEndpoint"`
	xxx_hidden_Enabled            bool                               `protobuf:"varint,5,opt,name=enabled"`
	xxx_hidden_Config             map[string]string                  `protobuf:"bytes,6,rep,name=config" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_LoginUrl           *string                            `protobuf:"bytes,7,opt,name=login_url,json=loginUrl"`
	xxx_hidden_Validated          bool                               `protobuf:"varint,8,opt,name=validated"`
	xxx_hidden_ExtraUiEndpoints   []string                           `protobuf:"bytes,9,rep,name=extra_ui_endpoints,json=extraUiEndpoints"`
	xxx_hidden_Active             bool                               `protobuf:"varint,10,opt,name=active"`
	xxx_hidden_RequiredAttributes *[]*AuthProvider_RequiredAttribute `protobuf:"bytes,11,rep,name=required_attributes,json=requiredAttributes"`
	xxx_hidden_Traits             *Traits                            `protobuf:"bytes,12,opt,name=traits"`
	xxx_hidden_ClaimMappings      map[string]string                  `protobuf:"bytes,13,rep,name=claim_mappings,json=claimMappings" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_LastUpdated        *timestamppb.Timestamp             `protobuf:"bytes,14,opt,name=last_updated,json=lastUpdated"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *AuthProvider) Reset() {
	*x = AuthProvider{}
	mi := &file_storage_auth_provider_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthProvider) ProtoMessage() {}

func (x *AuthProvider) ProtoReflect() protoreflect.Message {
	mi := &file_storage_auth_provider_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthProvider) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *AuthProvider) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *AuthProvider) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *AuthProvider) GetUiEndpoint() string {
	if x != nil {
		if x.xxx_hidden_UiEndpoint != nil {
			return *x.xxx_hidden_UiEndpoint
		}
		return ""
	}
	return ""
}

func (x *AuthProvider) GetEnabled() bool {
	if x != nil {
		return x.xxx_hidden_Enabled
	}
	return false
}

func (x *AuthProvider) GetConfig() map[string]string {
	if x != nil {
		return x.xxx_hidden_Config
	}
	return nil
}

func (x *AuthProvider) GetLoginUrl() string {
	if x != nil {
		if x.xxx_hidden_LoginUrl != nil {
			return *x.xxx_hidden_LoginUrl
		}
		return ""
	}
	return ""
}

// Deprecated: Marked as deprecated in storage/auth_provider.proto.
func (x *AuthProvider) GetValidated() bool {
	if x != nil {
		return x.xxx_hidden_Validated
	}
	return false
}

func (x *AuthProvider) GetExtraUiEndpoints() []string {
	if x != nil {
		return x.xxx_hidden_ExtraUiEndpoints
	}
	return nil
}

func (x *AuthProvider) GetActive() bool {
	if x != nil {
		return x.xxx_hidden_Active
	}
	return false
}

func (x *AuthProvider) GetRequiredAttributes() []*AuthProvider_RequiredAttribute {
	if x != nil {
		if x.xxx_hidden_RequiredAttributes != nil {
			return *x.xxx_hidden_RequiredAttributes
		}
	}
	return nil
}

func (x *AuthProvider) GetTraits() *Traits {
	if x != nil {
		return x.xxx_hidden_Traits
	}
	return nil
}

func (x *AuthProvider) GetClaimMappings() map[string]string {
	if x != nil {
		return x.xxx_hidden_ClaimMappings
	}
	return nil
}

func (x *AuthProvider) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastUpdated
	}
	return nil
}

func (x *AuthProvider) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 14)
}

func (x *AuthProvider) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 14)
}

func (x *AuthProvider) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 14)
}

func (x *AuthProvider) SetUiEndpoint(v string) {
	x.xxx_hidden_UiEndpoint = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 14)
}

func (x *AuthProvider) SetEnabled(v bool) {
	x.xxx_hidden_Enabled = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 14)
}

func (x *AuthProvider) SetConfig(v map[string]string) {
	x.xxx_hidden_Config = v
}

func (x *AuthProvider) SetLoginUrl(v string) {
	x.xxx_hidden_LoginUrl = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 14)
}

// Deprecated: Marked as deprecated in storage/auth_provider.proto.
func (x *AuthProvider) SetValidated(v bool) {
	x.xxx_hidden_Validated = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 14)
}

func (x *AuthProvider) SetExtraUiEndpoints(v []string) {
	x.xxx_hidden_ExtraUiEndpoints = v
}

func (x *AuthProvider) SetActive(v bool) {
	x.xxx_hidden_Active = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 14)
}

func (x *AuthProvider) SetRequiredAttributes(v []*AuthProvider_RequiredAttribute) {
	x.xxx_hidden_RequiredAttributes = &v
}

func (x *AuthProvider) SetTraits(v *Traits) {
	x.xxx_hidden_Traits = v
}

func (x *AuthProvider) SetClaimMappings(v map[string]string) {
	x.xxx_hidden_ClaimMappings = v
}

func (x *AuthProvider) SetLastUpdated(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastUpdated = v
}

func (x *AuthProvider) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AuthProvider) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AuthProvider) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AuthProvider) HasUiEndpoint() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AuthProvider) HasEnabled() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *AuthProvider) HasLoginUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

// Deprecated: Marked as deprecated in storage/auth_provider.proto.
func (x *AuthProvider) HasValidated() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *AuthProvider) HasActive() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *AuthProvider) HasTraits() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Traits != nil
}

func (x *AuthProvider) HasLastUpdated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastUpdated != nil
}

func (x *AuthProvider) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *AuthProvider) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *AuthProvider) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Type = nil
}

func (x *AuthProvider) ClearUiEndpoint() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_UiEndpoint = nil
}

func (x *AuthProvider) ClearEnabled() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Enabled = false
}

func (x *AuthProvider) ClearLoginUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_LoginUrl = nil
}

// Deprecated: Marked as deprecated in storage/auth_provider.proto.
func (x *AuthProvider) ClearValidated() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Validated = false
}

func (x *AuthProvider) ClearActive() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_Active = false
}

func (x *AuthProvider) ClearTraits() {
	x.xxx_hidden_Traits = nil
}

func (x *AuthProvider) ClearLastUpdated() {
	x.xxx_hidden_LastUpdated = nil
}

type AuthProvider_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id         *string
	Name       *string
	Type       *string
	UiEndpoint *string
	Enabled    *bool
	// Config holds auth provider specific configuration. Each configuration options
	// are different based on the given auth provider type.
	// OIDC:
	//   - "issuer": the OIDC issuer according to https://openid.net/specs/openid-connect-core-1_0.html#IssuerIdentifier.
	//   - "client_id": the client ID according to https://www.rfc-editor.org/rfc/rfc6749.html#section-2.2.
	//   - "client_secret": the client secret according to https://www.rfc-editor.org/rfc/rfc6749.html#section-2.3.1.
	//   - "do_not_use_client_secret": set to "true" if you want to create a configuration with only
	//     a client ID and no client secret.
	//   - "mode": the OIDC callback mode, choosing from "fragment", "post", or "query".
	//   - "disable_offline_access_scope": set to "true" if no offline tokens shall be issued.
	//   - "extra_scopes": a space-delimited string of additional scopes to request in addition to "openid profile email"
	//     according to https://www.rfc-editor.org/rfc/rfc6749.html#section-3.3.
	//
	// OpenShift Auth: supports no extra configuration options.
	//
	// User PKI:
	// - "keys": the trusted certificates PEM encoded.
	//
	// SAML:
	// - "sp_issuer": the service provider issuer according to https://datatracker.ietf.org/doc/html/rfc7522#section-3.
	// - "idp_metadata_url": the metadata URL according to https://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf.
	// - "idp_issuer": the IdP issuer.
	// - "idp_cert_pem": the cert PEM encoded for the IdP endpoint.
	// - "idp_sso_url": the IdP SSO URL.
	// - "idp_nameid_format": the IdP name ID format.
	//
	// IAP:
	// - "audience": the audience to use.
	Config map[string]string
	// The login URL will be provided by the backend, and may not be specified in a request.
	LoginUrl *string
	// Deprecated: Marked as deprecated in storage/auth_provider.proto.
	Validated *bool
	// UI endpoints which to allow in addition to `ui_endpoint`. I.e., if a login request
	// is coming from any of these, the auth request will use these for the callback URL,
	// not ui_endpoint.
	ExtraUiEndpoints   []string
	Active             *bool
	RequiredAttributes []*AuthProvider_RequiredAttribute
	Traits             *Traits
	// Specifies claims from IdP token that will be copied to Rox token attributes.
	//
	// Each key in this map contains a path in IdP token we want to map. Path is separated by "." symbol.
	// For example, if IdP token payload looks like:
	//
	// {
	//
	//	"a": {
	//
	//	    "b" : "c",
	//
	//	    "d": true,
	//
	//	    "e": [ "val1", "val2", "val3" ],
	//
	//	    "f": [ true, false, false ],
	//
	//	    "g": 123.0,
	//
	//	    "h": [ 1, 2, 3]
	//
	//	}
	//
	// }
	//
	// then "a.b" would be a valid key and "a.z" is not.
	//
	// We support the following types of claims:
	// * string(path "a.b")
	// * bool(path "a.d")
	// * string array(path "a.e")
	// * bool array (path "a.f.")
	//
	// We do NOT support the following types of claims:
	// * complex claims(path "a")
	// * float/integer claims(path "a.g")
	// * float/integer array claims(path "a.h")
	//
	// Each value in this map contains a Rox token attribute name we want to add claim to.
	// If, for example, value is "groups", claim would be found in "external_user.Attributes.groups" in token.
	//
	// Note: we only support this feature for OIDC auth provider.
	ClaimMappings map[string]string
	// Last updated indicates the last time the auth provider has been updated.
	//
	// In case there have been tokens issued by an auth provider _before_ this timestamp, they will be considered
	// invalid. Subsequently, all clients will have to re-issue their tokens (either by refreshing or by an additional
	// login attempt).
	LastUpdated *timestamppb.Timestamp
}

func (b0 AuthProvider_builder) Build() *AuthProvider {
	m0 := &AuthProvider{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 14)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 14)
		x.xxx_hidden_Name = b.Name
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 14)
		x.xxx_hidden_Type = b.Type
	}
	if b.UiEndpoint != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 14)
		x.xxx_hidden_UiEndpoint = b.UiEndpoint
	}
	if b.Enabled != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 14)
		x.xxx_hidden_Enabled = *b.Enabled
	}
	x.xxx_hidden_Config = b.Config
	if b.LoginUrl != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 14)
		x.xxx_hidden_LoginUrl = b.LoginUrl
	}
	if b.Validated != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 14)
		x.xxx_hidden_Validated = *b.Validated
	}
	x.xxx_hidden_ExtraUiEndpoints = b.ExtraUiEndpoints
	if b.Active != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 14)
		x.xxx_hidden_Active = *b.Active
	}
	x.xxx_hidden_RequiredAttributes = &b.RequiredAttributes
	x.xxx_hidden_Traits = b.Traits
	x.xxx_hidden_ClaimMappings = b.ClaimMappings
	x.xxx_hidden_LastUpdated = b.LastUpdated
	return m0
}

// RequiredAttribute allows to specify a set of attributes which ALL are required to be returned
// by the auth provider.
// If any attribute is missing within the external claims of the token issued by Central, the
// authentication request to this IdP is considered failed.
type AuthProvider_RequiredAttribute struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_AttributeKey   *string                `protobuf:"bytes,1,opt,name=attribute_key,json=attributeKey"`
	xxx_hidden_AttributeValue *string                `protobuf:"bytes,2,opt,name=attribute_value,json=attributeValue"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *AuthProvider_RequiredAttribute) Reset() {
	*x = AuthProvider_RequiredAttribute{}
	mi := &file_storage_auth_provider_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthProvider_RequiredAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthProvider_RequiredAttribute) ProtoMessage() {}

func (x *AuthProvider_RequiredAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_storage_auth_provider_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthProvider_RequiredAttribute) GetAttributeKey() string {
	if x != nil {
		if x.xxx_hidden_AttributeKey != nil {
			return *x.xxx_hidden_AttributeKey
		}
		return ""
	}
	return ""
}

func (x *AuthProvider_RequiredAttribute) GetAttributeValue() string {
	if x != nil {
		if x.xxx_hidden_AttributeValue != nil {
			return *x.xxx_hidden_AttributeValue
		}
		return ""
	}
	return ""
}

func (x *AuthProvider_RequiredAttribute) SetAttributeKey(v string) {
	x.xxx_hidden_AttributeKey = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *AuthProvider_RequiredAttribute) SetAttributeValue(v string) {
	x.xxx_hidden_AttributeValue = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *AuthProvider_RequiredAttribute) HasAttributeKey() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AuthProvider_RequiredAttribute) HasAttributeValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AuthProvider_RequiredAttribute) ClearAttributeKey() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_AttributeKey = nil
}

func (x *AuthProvider_RequiredAttribute) ClearAttributeValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_AttributeValue = nil
}

type AuthProvider_RequiredAttribute_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AttributeKey   *string
	AttributeValue *string
}

func (b0 AuthProvider_RequiredAttribute_builder) Build() *AuthProvider_RequiredAttribute {
	m0 := &AuthProvider_RequiredAttribute{}
	b, x := &b0, m0
	_, _ = b, x
	if b.AttributeKey != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_AttributeKey = b.AttributeKey
	}
	if b.AttributeValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_AttributeValue = b.AttributeValue
	}
	return m0
}

var File_storage_auth_provider_proto protoreflect.FileDescriptor

const file_storage_auth_provider_proto_rawDesc = "" +
	"\n" +
	"\x1bstorage/auth_provider.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x14storage/traits.proto\x1a!google/protobuf/go_features.proto\"\xb4\x06\n" +
	"\fAuthProvider\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1f\n" +
	"\vui_endpoint\x18\x04 \x01(\tR\n" +
	"uiEndpoint\x12\x18\n" +
	"\aenabled\x18\x05 \x01(\bR\aenabled\x129\n" +
	"\x06config\x18\x06 \x03(\v2!.storage.AuthProvider.ConfigEntryR\x06config\x12\x1b\n" +
	"\tlogin_url\x18\a \x01(\tR\bloginUrl\x12 \n" +
	"\tvalidated\x18\b \x01(\bB\x02\x18\x01R\tvalidated\x12,\n" +
	"\x12extra_ui_endpoints\x18\t \x03(\tR\x10extraUiEndpoints\x12\x16\n" +
	"\x06active\x18\n" +
	" \x01(\bR\x06active\x12X\n" +
	"\x13required_attributes\x18\v \x03(\v2'.storage.AuthProvider.RequiredAttributeR\x12requiredAttributes\x12'\n" +
	"\x06traits\x18\f \x01(\v2\x0f.storage.TraitsR\x06traits\x12O\n" +
	"\x0eclaim_mappings\x18\r \x03(\v2(.storage.AuthProvider.ClaimMappingsEntryR\rclaimMappings\x12=\n" +
	"\flast_updated\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aa\n" +
	"\x11RequiredAttribute\x12#\n" +
	"\rattribute_key\x18\x01 \x01(\tR\fattributeKey\x12'\n" +
	"\x0fattribute_value\x18\x02 \x01(\tR\x0eattributeValue\x1a@\n" +
	"\x12ClaimMappingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B6\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storage\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_storage_auth_provider_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_storage_auth_provider_proto_goTypes = []any{
	(*AuthProvider)(nil),                   // 0: storage.AuthProvider
	nil,                                    // 1: storage.AuthProvider.ConfigEntry
	(*AuthProvider_RequiredAttribute)(nil), // 2: storage.AuthProvider.RequiredAttribute
	nil,                                    // 3: storage.AuthProvider.ClaimMappingsEntry
	(*Traits)(nil),                         // 4: storage.Traits
	(*timestamppb.Timestamp)(nil),          // 5: google.protobuf.Timestamp
}
var file_storage_auth_provider_proto_depIdxs = []int32{
	1, // 0: storage.AuthProvider.config:type_name -> storage.AuthProvider.ConfigEntry
	2, // 1: storage.AuthProvider.required_attributes:type_name -> storage.AuthProvider.RequiredAttribute
	4, // 2: storage.AuthProvider.traits:type_name -> storage.Traits
	3, // 3: storage.AuthProvider.claim_mappings:type_name -> storage.AuthProvider.ClaimMappingsEntry
	5, // 4: storage.AuthProvider.last_updated:type_name -> google.protobuf.Timestamp
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_storage_auth_provider_proto_init() }
func file_storage_auth_provider_proto_init() {
	if File_storage_auth_provider_proto != nil {
		return
	}
	file_storage_traits_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_auth_provider_proto_rawDesc), len(file_storage_auth_provider_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_auth_provider_proto_goTypes,
		DependencyIndexes: file_storage_auth_provider_proto_depIdxs,
		MessageInfos:      file_storage_auth_provider_proto_msgTypes,
	}.Build()
	File_storage_auth_provider_proto = out.File
	file_storage_auth_provider_proto_goTypes = nil
	file_storage_auth_provider_proto_depIdxs = nil
}
