// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/network_policy.proto

//go:build protoopaque

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Protocol int32

const (
	Protocol_UNSET_PROTOCOL Protocol = 0
	Protocol_TCP_PROTOCOL   Protocol = 1
	Protocol_UDP_PROTOCOL   Protocol = 2
	Protocol_SCTP_PROTOCOL  Protocol = 3
)

// Enum value maps for Protocol.
var (
	Protocol_name = map[int32]string{
		0: "UNSET_PROTOCOL",
		1: "TCP_PROTOCOL",
		2: "UDP_PROTOCOL",
		3: "SCTP_PROTOCOL",
	}
	Protocol_value = map[string]int32{
		"UNSET_PROTOCOL": 0,
		"TCP_PROTOCOL":   1,
		"UDP_PROTOCOL":   2,
		"SCTP_PROTOCOL":  3,
	}
)

func (x Protocol) Enum() *Protocol {
	p := new(Protocol)
	*p = x
	return p
}

func (x Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_network_policy_proto_enumTypes[0].Descriptor()
}

func (Protocol) Type() protoreflect.EnumType {
	return &file_storage_network_policy_proto_enumTypes[0]
}

func (x Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type NetworkPolicyType int32

const (
	NetworkPolicyType_UNSET_NETWORK_POLICY_TYPE   NetworkPolicyType = 0
	NetworkPolicyType_INGRESS_NETWORK_POLICY_TYPE NetworkPolicyType = 1
	NetworkPolicyType_EGRESS_NETWORK_POLICY_TYPE  NetworkPolicyType = 2
)

// Enum value maps for NetworkPolicyType.
var (
	NetworkPolicyType_name = map[int32]string{
		0: "UNSET_NETWORK_POLICY_TYPE",
		1: "INGRESS_NETWORK_POLICY_TYPE",
		2: "EGRESS_NETWORK_POLICY_TYPE",
	}
	NetworkPolicyType_value = map[string]int32{
		"UNSET_NETWORK_POLICY_TYPE":   0,
		"INGRESS_NETWORK_POLICY_TYPE": 1,
		"EGRESS_NETWORK_POLICY_TYPE":  2,
	}
)

func (x NetworkPolicyType) Enum() *NetworkPolicyType {
	p := new(NetworkPolicyType)
	*p = x
	return p
}

func (x NetworkPolicyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkPolicyType) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_network_policy_proto_enumTypes[1].Descriptor()
}

func (NetworkPolicyType) Type() protoreflect.EnumType {
	return &file_storage_network_policy_proto_enumTypes[1]
}

func (x NetworkPolicyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type NetworkPolicy struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_ClusterId   *string                `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_ClusterName *string                `protobuf:"bytes,4,opt,name=cluster_name,json=clusterName"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,5,opt,name=namespace"`
	xxx_hidden_Labels      map[string]string      `protobuf:"bytes,6,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Annotations map[string]string      `protobuf:"bytes,7,rep,name=annotations" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Spec        *NetworkPolicySpec     `protobuf:"bytes,8,opt,name=spec"`
	xxx_hidden_Yaml        *string                `protobuf:"bytes,9,opt,name=yaml"`
	xxx_hidden_ApiVersion  *string                `protobuf:"bytes,10,opt,name=api_version,json=apiVersion"`
	xxx_hidden_Created     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkPolicy) Reset() {
	*x = NetworkPolicy{}
	mi := &file_storage_network_policy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPolicy) ProtoMessage() {}

func (x *NetworkPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_storage_network_policy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPolicy) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *NetworkPolicy) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *NetworkPolicy) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *NetworkPolicy) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *NetworkPolicy) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *NetworkPolicy) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *NetworkPolicy) GetAnnotations() map[string]string {
	if x != nil {
		return x.xxx_hidden_Annotations
	}
	return nil
}

func (x *NetworkPolicy) GetSpec() *NetworkPolicySpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *NetworkPolicy) GetYaml() string {
	if x != nil {
		if x.xxx_hidden_Yaml != nil {
			return *x.xxx_hidden_Yaml
		}
		return ""
	}
	return ""
}

func (x *NetworkPolicy) GetApiVersion() string {
	if x != nil {
		if x.xxx_hidden_ApiVersion != nil {
			return *x.xxx_hidden_ApiVersion
		}
		return ""
	}
	return ""
}

func (x *NetworkPolicy) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Created
	}
	return nil
}

func (x *NetworkPolicy) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 11)
}

func (x *NetworkPolicy) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 11)
}

func (x *NetworkPolicy) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 11)
}

func (x *NetworkPolicy) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 11)
}

func (x *NetworkPolicy) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 11)
}

func (x *NetworkPolicy) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *NetworkPolicy) SetAnnotations(v map[string]string) {
	x.xxx_hidden_Annotations = v
}

func (x *NetworkPolicy) SetSpec(v *NetworkPolicySpec) {
	x.xxx_hidden_Spec = v
}

func (x *NetworkPolicy) SetYaml(v string) {
	x.xxx_hidden_Yaml = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 11)
}

func (x *NetworkPolicy) SetApiVersion(v string) {
	x.xxx_hidden_ApiVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 11)
}

func (x *NetworkPolicy) SetCreated(v *timestamppb.Timestamp) {
	x.xxx_hidden_Created = v
}

func (x *NetworkPolicy) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkPolicy) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NetworkPolicy) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *NetworkPolicy) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *NetworkPolicy) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *NetworkPolicy) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *NetworkPolicy) HasYaml() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *NetworkPolicy) HasApiVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *NetworkPolicy) HasCreated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Created != nil
}

func (x *NetworkPolicy) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *NetworkPolicy) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *NetworkPolicy) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ClusterId = nil
}

func (x *NetworkPolicy) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ClusterName = nil
}

func (x *NetworkPolicy) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Namespace = nil
}

func (x *NetworkPolicy) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *NetworkPolicy) ClearYaml() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Yaml = nil
}

func (x *NetworkPolicy) ClearApiVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_ApiVersion = nil
}

func (x *NetworkPolicy) ClearCreated() {
	x.xxx_hidden_Created = nil
}

type NetworkPolicy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *string
	Name        *string
	ClusterId   *string
	ClusterName *string
	Namespace   *string
	Labels      map[string]string
	Annotations map[string]string
	Spec        *NetworkPolicySpec
	Yaml        *string
	ApiVersion  *string
	Created     *timestamppb.Timestamp
}

func (b0 NetworkPolicy_builder) Build() *NetworkPolicy {
	m0 := &NetworkPolicy{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 11)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 11)
		x.xxx_hidden_Name = b.Name
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 11)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 11)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 11)
		x.xxx_hidden_Namespace = b.Namespace
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Annotations = b.Annotations
	x.xxx_hidden_Spec = b.Spec
	if b.Yaml != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 11)
		x.xxx_hidden_Yaml = b.Yaml
	}
	if b.ApiVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 11)
		x.xxx_hidden_ApiVersion = b.ApiVersion
	}
	x.xxx_hidden_Created = b.Created
	return m0
}

type NetworkPolicySpec struct {
	state                  protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_PodSelector *LabelSelector               `protobuf:"bytes,1,opt,name=pod_selector,json=podSelector"`
	xxx_hidden_Ingress     *[]*NetworkPolicyIngressRule `protobuf:"bytes,2,rep,name=ingress"`
	xxx_hidden_Egress      *[]*NetworkPolicyEgressRule  `protobuf:"bytes,3,rep,name=egress"`
	xxx_hidden_PolicyTypes []NetworkPolicyType          `protobuf:"varint,4,rep,packed,name=policy_types,json=policyTypes,enum=storage.NetworkPolicyType"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkPolicySpec) Reset() {
	*x = NetworkPolicySpec{}
	mi := &file_storage_network_policy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPolicySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPolicySpec) ProtoMessage() {}

func (x *NetworkPolicySpec) ProtoReflect() protoreflect.Message {
	mi := &file_storage_network_policy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPolicySpec) GetPodSelector() *LabelSelector {
	if x != nil {
		return x.xxx_hidden_PodSelector
	}
	return nil
}

func (x *NetworkPolicySpec) GetIngress() []*NetworkPolicyIngressRule {
	if x != nil {
		if x.xxx_hidden_Ingress != nil {
			return *x.xxx_hidden_Ingress
		}
	}
	return nil
}

func (x *NetworkPolicySpec) GetEgress() []*NetworkPolicyEgressRule {
	if x != nil {
		if x.xxx_hidden_Egress != nil {
			return *x.xxx_hidden_Egress
		}
	}
	return nil
}

func (x *NetworkPolicySpec) GetPolicyTypes() []NetworkPolicyType {
	if x != nil {
		return x.xxx_hidden_PolicyTypes
	}
	return nil
}

func (x *NetworkPolicySpec) SetPodSelector(v *LabelSelector) {
	x.xxx_hidden_PodSelector = v
}

func (x *NetworkPolicySpec) SetIngress(v []*NetworkPolicyIngressRule) {
	x.xxx_hidden_Ingress = &v
}

func (x *NetworkPolicySpec) SetEgress(v []*NetworkPolicyEgressRule) {
	x.xxx_hidden_Egress = &v
}

func (x *NetworkPolicySpec) SetPolicyTypes(v []NetworkPolicyType) {
	x.xxx_hidden_PolicyTypes = v
}

func (x *NetworkPolicySpec) HasPodSelector() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PodSelector != nil
}

func (x *NetworkPolicySpec) ClearPodSelector() {
	x.xxx_hidden_PodSelector = nil
}

type NetworkPolicySpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PodSelector *LabelSelector
	Ingress     []*NetworkPolicyIngressRule
	Egress      []*NetworkPolicyEgressRule
	PolicyTypes []NetworkPolicyType
}

func (b0 NetworkPolicySpec_builder) Build() *NetworkPolicySpec {
	m0 := &NetworkPolicySpec{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PodSelector = b.PodSelector
	x.xxx_hidden_Ingress = &b.Ingress
	x.xxx_hidden_Egress = &b.Egress
	x.xxx_hidden_PolicyTypes = b.PolicyTypes
	return m0
}

type NetworkPolicyEgressRule struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Ports *[]*NetworkPolicyPort  `protobuf:"bytes,1,rep,name=ports"`
	xxx_hidden_To    *[]*NetworkPolicyPeer  `protobuf:"bytes,2,rep,name=to"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NetworkPolicyEgressRule) Reset() {
	*x = NetworkPolicyEgressRule{}
	mi := &file_storage_network_policy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPolicyEgressRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPolicyEgressRule) ProtoMessage() {}

func (x *NetworkPolicyEgressRule) ProtoReflect() protoreflect.Message {
	mi := &file_storage_network_policy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPolicyEgressRule) GetPorts() []*NetworkPolicyPort {
	if x != nil {
		if x.xxx_hidden_Ports != nil {
			return *x.xxx_hidden_Ports
		}
	}
	return nil
}

func (x *NetworkPolicyEgressRule) GetTo() []*NetworkPolicyPeer {
	if x != nil {
		if x.xxx_hidden_To != nil {
			return *x.xxx_hidden_To
		}
	}
	return nil
}

func (x *NetworkPolicyEgressRule) SetPorts(v []*NetworkPolicyPort) {
	x.xxx_hidden_Ports = &v
}

func (x *NetworkPolicyEgressRule) SetTo(v []*NetworkPolicyPeer) {
	x.xxx_hidden_To = &v
}

type NetworkPolicyEgressRule_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Ports []*NetworkPolicyPort
	To    []*NetworkPolicyPeer
}

func (b0 NetworkPolicyEgressRule_builder) Build() *NetworkPolicyEgressRule {
	m0 := &NetworkPolicyEgressRule{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Ports = &b.Ports
	x.xxx_hidden_To = &b.To
	return m0
}

type NetworkPolicyPeer struct {
	state                        protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PodSelector       *LabelSelector         `protobuf:"bytes,1,opt,name=pod_selector,json=podSelector"`
	xxx_hidden_NamespaceSelector *LabelSelector         `protobuf:"bytes,2,opt,name=namespace_selector,json=namespaceSelector"`
	xxx_hidden_IpBlock           *IPBlock               `protobuf:"bytes,3,opt,name=ip_block,json=ipBlock"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *NetworkPolicyPeer) Reset() {
	*x = NetworkPolicyPeer{}
	mi := &file_storage_network_policy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPolicyPeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPolicyPeer) ProtoMessage() {}

func (x *NetworkPolicyPeer) ProtoReflect() protoreflect.Message {
	mi := &file_storage_network_policy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPolicyPeer) GetPodSelector() *LabelSelector {
	if x != nil {
		return x.xxx_hidden_PodSelector
	}
	return nil
}

func (x *NetworkPolicyPeer) GetNamespaceSelector() *LabelSelector {
	if x != nil {
		return x.xxx_hidden_NamespaceSelector
	}
	return nil
}

func (x *NetworkPolicyPeer) GetIpBlock() *IPBlock {
	if x != nil {
		return x.xxx_hidden_IpBlock
	}
	return nil
}

func (x *NetworkPolicyPeer) SetPodSelector(v *LabelSelector) {
	x.xxx_hidden_PodSelector = v
}

func (x *NetworkPolicyPeer) SetNamespaceSelector(v *LabelSelector) {
	x.xxx_hidden_NamespaceSelector = v
}

func (x *NetworkPolicyPeer) SetIpBlock(v *IPBlock) {
	x.xxx_hidden_IpBlock = v
}

func (x *NetworkPolicyPeer) HasPodSelector() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PodSelector != nil
}

func (x *NetworkPolicyPeer) HasNamespaceSelector() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_NamespaceSelector != nil
}

func (x *NetworkPolicyPeer) HasIpBlock() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_IpBlock != nil
}

func (x *NetworkPolicyPeer) ClearPodSelector() {
	x.xxx_hidden_PodSelector = nil
}

func (x *NetworkPolicyPeer) ClearNamespaceSelector() {
	x.xxx_hidden_NamespaceSelector = nil
}

func (x *NetworkPolicyPeer) ClearIpBlock() {
	x.xxx_hidden_IpBlock = nil
}

type NetworkPolicyPeer_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PodSelector       *LabelSelector
	NamespaceSelector *LabelSelector
	IpBlock           *IPBlock
}

func (b0 NetworkPolicyPeer_builder) Build() *NetworkPolicyPeer {
	m0 := &NetworkPolicyPeer{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PodSelector = b.PodSelector
	x.xxx_hidden_NamespaceSelector = b.NamespaceSelector
	x.xxx_hidden_IpBlock = b.IpBlock
	return m0
}

type IPBlock struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Cidr        *string                `protobuf:"bytes,1,opt,name=cidr"`
	xxx_hidden_Except      []string               `protobuf:"bytes,2,rep,name=except"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *IPBlock) Reset() {
	*x = IPBlock{}
	mi := &file_storage_network_policy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPBlock) ProtoMessage() {}

func (x *IPBlock) ProtoReflect() protoreflect.Message {
	mi := &file_storage_network_policy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IPBlock) GetCidr() string {
	if x != nil {
		if x.xxx_hidden_Cidr != nil {
			return *x.xxx_hidden_Cidr
		}
		return ""
	}
	return ""
}

func (x *IPBlock) GetExcept() []string {
	if x != nil {
		return x.xxx_hidden_Except
	}
	return nil
}

func (x *IPBlock) SetCidr(v string) {
	x.xxx_hidden_Cidr = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *IPBlock) SetExcept(v []string) {
	x.xxx_hidden_Except = v
}

func (x *IPBlock) HasCidr() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *IPBlock) ClearCidr() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Cidr = nil
}

type IPBlock_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Cidr   *string
	Except []string
}

func (b0 IPBlock_builder) Build() *IPBlock {
	m0 := &IPBlock{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Cidr != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Cidr = b.Cidr
	}
	x.xxx_hidden_Except = b.Except
	return m0
}

type NetworkPolicyPort struct {
	state                  protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_Protocol    Protocol                    `protobuf:"varint,1,opt,name=protocol,enum=storage.Protocol"`
	xxx_hidden_PortRef     isNetworkPolicyPort_PortRef `protobuf_oneof:"port_ref"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkPolicyPort) Reset() {
	*x = NetworkPolicyPort{}
	mi := &file_storage_network_policy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPolicyPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPolicyPort) ProtoMessage() {}

func (x *NetworkPolicyPort) ProtoReflect() protoreflect.Message {
	mi := &file_storage_network_policy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPolicyPort) GetProtocol() Protocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Protocol
		}
	}
	return Protocol_UNSET_PROTOCOL
}

func (x *NetworkPolicyPort) GetPort() int32 {
	if x != nil {
		if x, ok := x.xxx_hidden_PortRef.(*networkPolicyPort_Port); ok {
			return x.Port
		}
	}
	return 0
}

func (x *NetworkPolicyPort) GetPortName() string {
	if x != nil {
		if x, ok := x.xxx_hidden_PortRef.(*networkPolicyPort_PortName); ok {
			return x.PortName
		}
	}
	return ""
}

func (x *NetworkPolicyPort) SetProtocol(v Protocol) {
	x.xxx_hidden_Protocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *NetworkPolicyPort) SetPort(v int32) {
	x.xxx_hidden_PortRef = &networkPolicyPort_Port{v}
}

func (x *NetworkPolicyPort) SetPortName(v string) {
	x.xxx_hidden_PortRef = &networkPolicyPort_PortName{v}
}

func (x *NetworkPolicyPort) HasProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkPolicyPort) HasPortRef() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_PortRef != nil
}

func (x *NetworkPolicyPort) HasPort() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_PortRef.(*networkPolicyPort_Port)
	return ok
}

func (x *NetworkPolicyPort) HasPortName() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_PortRef.(*networkPolicyPort_PortName)
	return ok
}

func (x *NetworkPolicyPort) ClearProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Protocol = Protocol_UNSET_PROTOCOL
}

func (x *NetworkPolicyPort) ClearPortRef() {
	x.xxx_hidden_PortRef = nil
}

func (x *NetworkPolicyPort) ClearPort() {
	if _, ok := x.xxx_hidden_PortRef.(*networkPolicyPort_Port); ok {
		x.xxx_hidden_PortRef = nil
	}
}

func (x *NetworkPolicyPort) ClearPortName() {
	if _, ok := x.xxx_hidden_PortRef.(*networkPolicyPort_PortName); ok {
		x.xxx_hidden_PortRef = nil
	}
}

const NetworkPolicyPort_PortRef_not_set_case case_NetworkPolicyPort_PortRef = 0
const NetworkPolicyPort_Port_case case_NetworkPolicyPort_PortRef = 2
const NetworkPolicyPort_PortName_case case_NetworkPolicyPort_PortRef = 3

func (x *NetworkPolicyPort) WhichPortRef() case_NetworkPolicyPort_PortRef {
	if x == nil {
		return NetworkPolicyPort_PortRef_not_set_case
	}
	switch x.xxx_hidden_PortRef.(type) {
	case *networkPolicyPort_Port:
		return NetworkPolicyPort_Port_case
	case *networkPolicyPort_PortName:
		return NetworkPolicyPort_PortName_case
	default:
		return NetworkPolicyPort_PortRef_not_set_case
	}
}

type NetworkPolicyPort_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Protocol *Protocol
	// Fields of oneof xxx_hidden_PortRef:
	Port     *int32
	PortName *string
	// -- end of xxx_hidden_PortRef
}

func (b0 NetworkPolicyPort_builder) Build() *NetworkPolicyPort {
	m0 := &NetworkPolicyPort{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Protocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Protocol = *b.Protocol
	}
	if b.Port != nil {
		x.xxx_hidden_PortRef = &networkPolicyPort_Port{*b.Port}
	}
	if b.PortName != nil {
		x.xxx_hidden_PortRef = &networkPolicyPort_PortName{*b.PortName}
	}
	return m0
}

type case_NetworkPolicyPort_PortRef protoreflect.FieldNumber

func (x case_NetworkPolicyPort_PortRef) String() string {
	md := file_storage_network_policy_proto_msgTypes[5].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isNetworkPolicyPort_PortRef interface {
	isNetworkPolicyPort_PortRef()
}

type networkPolicyPort_Port struct {
	Port int32 `protobuf:"varint,2,opt,name=port,oneof"`
}

type networkPolicyPort_PortName struct {
	PortName string `protobuf:"bytes,3,opt,name=port_name,json=portName,oneof"`
}

func (*networkPolicyPort_Port) isNetworkPolicyPort_PortRef() {}

func (*networkPolicyPort_PortName) isNetworkPolicyPort_PortRef() {}

type NetworkPolicyIngressRule struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Ports *[]*NetworkPolicyPort  `protobuf:"bytes,1,rep,name=ports"`
	xxx_hidden_From  *[]*NetworkPolicyPeer  `protobuf:"bytes,2,rep,name=from"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NetworkPolicyIngressRule) Reset() {
	*x = NetworkPolicyIngressRule{}
	mi := &file_storage_network_policy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPolicyIngressRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPolicyIngressRule) ProtoMessage() {}

func (x *NetworkPolicyIngressRule) ProtoReflect() protoreflect.Message {
	mi := &file_storage_network_policy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPolicyIngressRule) GetPorts() []*NetworkPolicyPort {
	if x != nil {
		if x.xxx_hidden_Ports != nil {
			return *x.xxx_hidden_Ports
		}
	}
	return nil
}

func (x *NetworkPolicyIngressRule) GetFrom() []*NetworkPolicyPeer {
	if x != nil {
		if x.xxx_hidden_From != nil {
			return *x.xxx_hidden_From
		}
	}
	return nil
}

func (x *NetworkPolicyIngressRule) SetPorts(v []*NetworkPolicyPort) {
	x.xxx_hidden_Ports = &v
}

func (x *NetworkPolicyIngressRule) SetFrom(v []*NetworkPolicyPeer) {
	x.xxx_hidden_From = &v
}

type NetworkPolicyIngressRule_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Ports []*NetworkPolicyPort
	From  []*NetworkPolicyPeer
}

func (b0 NetworkPolicyIngressRule_builder) Build() *NetworkPolicyIngressRule {
	m0 := &NetworkPolicyIngressRule{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Ports = &b.Ports
	x.xxx_hidden_From = &b.From
	return m0
}

// Next available tag: 3
type NetworkPolicyReference struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Namespace   *string                `protobuf:"bytes,1,opt,name=namespace"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkPolicyReference) Reset() {
	*x = NetworkPolicyReference{}
	mi := &file_storage_network_policy_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPolicyReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPolicyReference) ProtoMessage() {}

func (x *NetworkPolicyReference) ProtoReflect() protoreflect.Message {
	mi := &file_storage_network_policy_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPolicyReference) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *NetworkPolicyReference) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *NetworkPolicyReference) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *NetworkPolicyReference) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *NetworkPolicyReference) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkPolicyReference) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NetworkPolicyReference) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Namespace = nil
}

func (x *NetworkPolicyReference) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

type NetworkPolicyReference_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Namespace *string
	Name      *string
}

func (b0 NetworkPolicyReference_builder) Build() *NetworkPolicyReference {
	m0 := &NetworkPolicyReference{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

// Next available tag: 3
type NetworkPolicyModification struct {
	state                  protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_ApplyYaml   *string                    `protobuf:"bytes,1,opt,name=apply_yaml,json=applyYaml"`
	xxx_hidden_ToDelete    *[]*NetworkPolicyReference `protobuf:"bytes,2,rep,name=to_delete,json=toDelete"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkPolicyModification) Reset() {
	*x = NetworkPolicyModification{}
	mi := &file_storage_network_policy_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPolicyModification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPolicyModification) ProtoMessage() {}

func (x *NetworkPolicyModification) ProtoReflect() protoreflect.Message {
	mi := &file_storage_network_policy_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPolicyModification) GetApplyYaml() string {
	if x != nil {
		if x.xxx_hidden_ApplyYaml != nil {
			return *x.xxx_hidden_ApplyYaml
		}
		return ""
	}
	return ""
}

func (x *NetworkPolicyModification) GetToDelete() []*NetworkPolicyReference {
	if x != nil {
		if x.xxx_hidden_ToDelete != nil {
			return *x.xxx_hidden_ToDelete
		}
	}
	return nil
}

func (x *NetworkPolicyModification) SetApplyYaml(v string) {
	x.xxx_hidden_ApplyYaml = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *NetworkPolicyModification) SetToDelete(v []*NetworkPolicyReference) {
	x.xxx_hidden_ToDelete = &v
}

func (x *NetworkPolicyModification) HasApplyYaml() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkPolicyModification) ClearApplyYaml() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ApplyYaml = nil
}

type NetworkPolicyModification_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ApplyYaml *string
	ToDelete  []*NetworkPolicyReference
}

func (b0 NetworkPolicyModification_builder) Build() *NetworkPolicyModification {
	m0 := &NetworkPolicyModification{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ApplyYaml != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ApplyYaml = b.ApplyYaml
	}
	x.xxx_hidden_ToDelete = &b.ToDelete
	return m0
}

type NetworkPolicyApplicationUndoRecord struct {
	state                           protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_ClusterId            *string                    `protobuf:"bytes,5,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_User                 *string                    `protobuf:"bytes,1,opt,name=user"`
	xxx_hidden_ApplyTimestamp       *timestamppb.Timestamp     `protobuf:"bytes,2,opt,name=apply_timestamp,json=applyTimestamp"`
	xxx_hidden_OriginalModification *NetworkPolicyModification `protobuf:"bytes,3,opt,name=original_modification,json=originalModification"`
	xxx_hidden_UndoModification     *NetworkPolicyModification `protobuf:"bytes,4,opt,name=undo_modification,json=undoModification"`
	XXX_raceDetectHookData          protoimpl.RaceDetectHookData
	XXX_presence                    [1]uint32
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *NetworkPolicyApplicationUndoRecord) Reset() {
	*x = NetworkPolicyApplicationUndoRecord{}
	mi := &file_storage_network_policy_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPolicyApplicationUndoRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPolicyApplicationUndoRecord) ProtoMessage() {}

func (x *NetworkPolicyApplicationUndoRecord) ProtoReflect() protoreflect.Message {
	mi := &file_storage_network_policy_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPolicyApplicationUndoRecord) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *NetworkPolicyApplicationUndoRecord) GetUser() string {
	if x != nil {
		if x.xxx_hidden_User != nil {
			return *x.xxx_hidden_User
		}
		return ""
	}
	return ""
}

func (x *NetworkPolicyApplicationUndoRecord) GetApplyTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_ApplyTimestamp
	}
	return nil
}

func (x *NetworkPolicyApplicationUndoRecord) GetOriginalModification() *NetworkPolicyModification {
	if x != nil {
		return x.xxx_hidden_OriginalModification
	}
	return nil
}

func (x *NetworkPolicyApplicationUndoRecord) GetUndoModification() *NetworkPolicyModification {
	if x != nil {
		return x.xxx_hidden_UndoModification
	}
	return nil
}

func (x *NetworkPolicyApplicationUndoRecord) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *NetworkPolicyApplicationUndoRecord) SetUser(v string) {
	x.xxx_hidden_User = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *NetworkPolicyApplicationUndoRecord) SetApplyTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_ApplyTimestamp = v
}

func (x *NetworkPolicyApplicationUndoRecord) SetOriginalModification(v *NetworkPolicyModification) {
	x.xxx_hidden_OriginalModification = v
}

func (x *NetworkPolicyApplicationUndoRecord) SetUndoModification(v *NetworkPolicyModification) {
	x.xxx_hidden_UndoModification = v
}

func (x *NetworkPolicyApplicationUndoRecord) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkPolicyApplicationUndoRecord) HasUser() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NetworkPolicyApplicationUndoRecord) HasApplyTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ApplyTimestamp != nil
}

func (x *NetworkPolicyApplicationUndoRecord) HasOriginalModification() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OriginalModification != nil
}

func (x *NetworkPolicyApplicationUndoRecord) HasUndoModification() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_UndoModification != nil
}

func (x *NetworkPolicyApplicationUndoRecord) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ClusterId = nil
}

func (x *NetworkPolicyApplicationUndoRecord) ClearUser() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_User = nil
}

func (x *NetworkPolicyApplicationUndoRecord) ClearApplyTimestamp() {
	x.xxx_hidden_ApplyTimestamp = nil
}

func (x *NetworkPolicyApplicationUndoRecord) ClearOriginalModification() {
	x.xxx_hidden_OriginalModification = nil
}

func (x *NetworkPolicyApplicationUndoRecord) ClearUndoModification() {
	x.xxx_hidden_UndoModification = nil
}

type NetworkPolicyApplicationUndoRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ClusterId            *string
	User                 *string
	ApplyTimestamp       *timestamppb.Timestamp
	OriginalModification *NetworkPolicyModification
	UndoModification     *NetworkPolicyModification
}

func (b0 NetworkPolicyApplicationUndoRecord_builder) Build() *NetworkPolicyApplicationUndoRecord {
	m0 := &NetworkPolicyApplicationUndoRecord{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.User != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_User = b.User
	}
	x.xxx_hidden_ApplyTimestamp = b.ApplyTimestamp
	x.xxx_hidden_OriginalModification = b.OriginalModification
	x.xxx_hidden_UndoModification = b.UndoModification
	return m0
}

type NetworkPolicyApplicationUndoDeploymentRecord struct {
	state                   protoimpl.MessageState              `protogen:"opaque.v1"`
	xxx_hidden_DeploymentId *string                             `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId"`
	xxx_hidden_ClusterId    *string                             `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_Namespace    *string                             `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_UndoRecord   *NetworkPolicyApplicationUndoRecord `protobuf:"bytes,4,opt,name=undo_record,json=undoRecord"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) Reset() {
	*x = NetworkPolicyApplicationUndoDeploymentRecord{}
	mi := &file_storage_network_policy_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPolicyApplicationUndoDeploymentRecord) ProtoMessage() {}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) ProtoReflect() protoreflect.Message {
	mi := &file_storage_network_policy_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) GetDeploymentId() string {
	if x != nil {
		if x.xxx_hidden_DeploymentId != nil {
			return *x.xxx_hidden_DeploymentId
		}
		return ""
	}
	return ""
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) GetUndoRecord() *NetworkPolicyApplicationUndoRecord {
	if x != nil {
		return x.xxx_hidden_UndoRecord
	}
	return nil
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) SetDeploymentId(v string) {
	x.xxx_hidden_DeploymentId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) SetUndoRecord(v *NetworkPolicyApplicationUndoRecord) {
	x.xxx_hidden_UndoRecord = v
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) HasDeploymentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) HasUndoRecord() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_UndoRecord != nil
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) ClearDeploymentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DeploymentId = nil
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ClusterId = nil
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *NetworkPolicyApplicationUndoDeploymentRecord) ClearUndoRecord() {
	x.xxx_hidden_UndoRecord = nil
}

type NetworkPolicyApplicationUndoDeploymentRecord_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DeploymentId *string
	// For SAC
	ClusterId  *string
	Namespace  *string
	UndoRecord *NetworkPolicyApplicationUndoRecord
}

func (b0 NetworkPolicyApplicationUndoDeploymentRecord_builder) Build() *NetworkPolicyApplicationUndoDeploymentRecord {
	m0 := &NetworkPolicyApplicationUndoDeploymentRecord{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DeploymentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_DeploymentId = b.DeploymentId
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Namespace = b.Namespace
	}
	x.xxx_hidden_UndoRecord = b.UndoRecord
	return m0
}

var File_storage_network_policy_proto protoreflect.FileDescriptor

const file_storage_network_policy_proto_rawDesc = "" +
	"\n" +
	"\x1cstorage/network_policy.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x14storage/labels.proto\x1a!google/protobuf/go_features.proto\"\xb0\x04\n" +
	"\rNetworkPolicy\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\x12!\n" +
	"\fcluster_name\x18\x04 \x01(\tR\vclusterName\x12\x1c\n" +
	"\tnamespace\x18\x05 \x01(\tR\tnamespace\x12:\n" +
	"\x06labels\x18\x06 \x03(\v2\".storage.NetworkPolicy.LabelsEntryR\x06labels\x12I\n" +
	"\vannotations\x18\a \x03(\v2'.storage.NetworkPolicy.AnnotationsEntryR\vannotations\x12.\n" +
	"\x04spec\x18\b \x01(\v2\x1a.storage.NetworkPolicySpecR\x04spec\x12\x12\n" +
	"\x04yaml\x18\t \x01(\tR\x04yaml\x12\x1f\n" +
	"\vapi_version\x18\n" +
	" \x01(\tR\n" +
	"apiVersion\x124\n" +
	"\acreated\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x84\x02\n" +
	"\x11NetworkPolicySpec\x129\n" +
	"\fpod_selector\x18\x01 \x01(\v2\x16.storage.LabelSelectorR\vpodSelector\x12;\n" +
	"\aingress\x18\x02 \x03(\v2!.storage.NetworkPolicyIngressRuleR\aingress\x128\n" +
	"\x06egress\x18\x03 \x03(\v2 .storage.NetworkPolicyEgressRuleR\x06egress\x12=\n" +
	"\fpolicy_types\x18\x04 \x03(\x0e2\x1a.storage.NetworkPolicyTypeR\vpolicyTypes\"w\n" +
	"\x17NetworkPolicyEgressRule\x120\n" +
	"\x05ports\x18\x01 \x03(\v2\x1a.storage.NetworkPolicyPortR\x05ports\x12*\n" +
	"\x02to\x18\x02 \x03(\v2\x1a.storage.NetworkPolicyPeerR\x02to\"\xc2\x01\n" +
	"\x11NetworkPolicyPeer\x129\n" +
	"\fpod_selector\x18\x01 \x01(\v2\x16.storage.LabelSelectorR\vpodSelector\x12E\n" +
	"\x12namespace_selector\x18\x02 \x01(\v2\x16.storage.LabelSelectorR\x11namespaceSelector\x12+\n" +
	"\bip_block\x18\x03 \x01(\v2\x10.storage.IPBlockR\aipBlock\"5\n" +
	"\aIPBlock\x12\x12\n" +
	"\x04cidr\x18\x01 \x01(\tR\x04cidr\x12\x16\n" +
	"\x06except\x18\x02 \x03(\tR\x06except\"\x83\x01\n" +
	"\x11NetworkPolicyPort\x12-\n" +
	"\bprotocol\x18\x01 \x01(\x0e2\x11.storage.ProtocolR\bprotocol\x12\x14\n" +
	"\x04port\x18\x02 \x01(\x05H\x00R\x04port\x12\x1d\n" +
	"\tport_name\x18\x03 \x01(\tH\x00R\bportNameB\n" +
	"\n" +
	"\bport_ref\"|\n" +
	"\x18NetworkPolicyIngressRule\x120\n" +
	"\x05ports\x18\x01 \x03(\v2\x1a.storage.NetworkPolicyPortR\x05ports\x12.\n" +
	"\x04from\x18\x02 \x03(\v2\x1a.storage.NetworkPolicyPeerR\x04from\"J\n" +
	"\x16NetworkPolicyReference\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"x\n" +
	"\x19NetworkPolicyModification\x12\x1d\n" +
	"\n" +
	"apply_yaml\x18\x01 \x01(\tR\tapplyYaml\x12<\n" +
	"\tto_delete\x18\x02 \x03(\v2\x1f.storage.NetworkPolicyReferenceR\btoDelete\"\xc6\x02\n" +
	"\"NetworkPolicyApplicationUndoRecord\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x05 \x01(\tR\tclusterId\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\x12C\n" +
	"\x0fapply_timestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x0eapplyTimestamp\x12W\n" +
	"\x15original_modification\x18\x03 \x01(\v2\".storage.NetworkPolicyModificationR\x14originalModification\x12O\n" +
	"\x11undo_modification\x18\x04 \x01(\v2\".storage.NetworkPolicyModificationR\x10undoModification\"\xde\x01\n" +
	",NetworkPolicyApplicationUndoDeploymentRecord\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x02 \x01(\tR\tclusterId\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12L\n" +
	"\vundo_record\x18\x04 \x01(\v2+.storage.NetworkPolicyApplicationUndoRecordR\n" +
	"undoRecord*U\n" +
	"\bProtocol\x12\x12\n" +
	"\x0eUNSET_PROTOCOL\x10\x00\x12\x10\n" +
	"\fTCP_PROTOCOL\x10\x01\x12\x10\n" +
	"\fUDP_PROTOCOL\x10\x02\x12\x11\n" +
	"\rSCTP_PROTOCOL\x10\x03*s\n" +
	"\x11NetworkPolicyType\x12\x1d\n" +
	"\x19UNSET_NETWORK_POLICY_TYPE\x10\x00\x12\x1f\n" +
	"\x1bINGRESS_NETWORK_POLICY_TYPE\x10\x01\x12\x1e\n" +
	"\x1aEGRESS_NETWORK_POLICY_TYPE\x10\x02B6\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storage\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_storage_network_policy_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_storage_network_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_storage_network_policy_proto_goTypes = []any{
	(Protocol)(0),                                        // 0: storage.Protocol
	(NetworkPolicyType)(0),                               // 1: storage.NetworkPolicyType
	(*NetworkPolicy)(nil),                                // 2: storage.NetworkPolicy
	(*NetworkPolicySpec)(nil),                            // 3: storage.NetworkPolicySpec
	(*NetworkPolicyEgressRule)(nil),                      // 4: storage.NetworkPolicyEgressRule
	(*NetworkPolicyPeer)(nil),                            // 5: storage.NetworkPolicyPeer
	(*IPBlock)(nil),                                      // 6: storage.IPBlock
	(*NetworkPolicyPort)(nil),                            // 7: storage.NetworkPolicyPort
	(*NetworkPolicyIngressRule)(nil),                     // 8: storage.NetworkPolicyIngressRule
	(*NetworkPolicyReference)(nil),                       // 9: storage.NetworkPolicyReference
	(*NetworkPolicyModification)(nil),                    // 10: storage.NetworkPolicyModification
	(*NetworkPolicyApplicationUndoRecord)(nil),           // 11: storage.NetworkPolicyApplicationUndoRecord
	(*NetworkPolicyApplicationUndoDeploymentRecord)(nil), // 12: storage.NetworkPolicyApplicationUndoDeploymentRecord
	nil,                           // 13: storage.NetworkPolicy.LabelsEntry
	nil,                           // 14: storage.NetworkPolicy.AnnotationsEntry
	(*timestamppb.Timestamp)(nil), // 15: google.protobuf.Timestamp
	(*LabelSelector)(nil),         // 16: storage.LabelSelector
}
var file_storage_network_policy_proto_depIdxs = []int32{
	13, // 0: storage.NetworkPolicy.labels:type_name -> storage.NetworkPolicy.LabelsEntry
	14, // 1: storage.NetworkPolicy.annotations:type_name -> storage.NetworkPolicy.AnnotationsEntry
	3,  // 2: storage.NetworkPolicy.spec:type_name -> storage.NetworkPolicySpec
	15, // 3: storage.NetworkPolicy.created:type_name -> google.protobuf.Timestamp
	16, // 4: storage.NetworkPolicySpec.pod_selector:type_name -> storage.LabelSelector
	8,  // 5: storage.NetworkPolicySpec.ingress:type_name -> storage.NetworkPolicyIngressRule
	4,  // 6: storage.NetworkPolicySpec.egress:type_name -> storage.NetworkPolicyEgressRule
	1,  // 7: storage.NetworkPolicySpec.policy_types:type_name -> storage.NetworkPolicyType
	7,  // 8: storage.NetworkPolicyEgressRule.ports:type_name -> storage.NetworkPolicyPort
	5,  // 9: storage.NetworkPolicyEgressRule.to:type_name -> storage.NetworkPolicyPeer
	16, // 10: storage.NetworkPolicyPeer.pod_selector:type_name -> storage.LabelSelector
	16, // 11: storage.NetworkPolicyPeer.namespace_selector:type_name -> storage.LabelSelector
	6,  // 12: storage.NetworkPolicyPeer.ip_block:type_name -> storage.IPBlock
	0,  // 13: storage.NetworkPolicyPort.protocol:type_name -> storage.Protocol
	7,  // 14: storage.NetworkPolicyIngressRule.ports:type_name -> storage.NetworkPolicyPort
	5,  // 15: storage.NetworkPolicyIngressRule.from:type_name -> storage.NetworkPolicyPeer
	9,  // 16: storage.NetworkPolicyModification.to_delete:type_name -> storage.NetworkPolicyReference
	15, // 17: storage.NetworkPolicyApplicationUndoRecord.apply_timestamp:type_name -> google.protobuf.Timestamp
	10, // 18: storage.NetworkPolicyApplicationUndoRecord.original_modification:type_name -> storage.NetworkPolicyModification
	10, // 19: storage.NetworkPolicyApplicationUndoRecord.undo_modification:type_name -> storage.NetworkPolicyModification
	11, // 20: storage.NetworkPolicyApplicationUndoDeploymentRecord.undo_record:type_name -> storage.NetworkPolicyApplicationUndoRecord
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_storage_network_policy_proto_init() }
func file_storage_network_policy_proto_init() {
	if File_storage_network_policy_proto != nil {
		return
	}
	file_storage_labels_proto_init()
	file_storage_network_policy_proto_msgTypes[5].OneofWrappers = []any{
		(*networkPolicyPort_Port)(nil),
		(*networkPolicyPort_PortName)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_network_policy_proto_rawDesc), len(file_storage_network_policy_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_network_policy_proto_goTypes,
		DependencyIndexes: file_storage_network_policy_proto_depIdxs,
		EnumInfos:         file_storage_network_policy_proto_enumTypes,
		MessageInfos:      file_storage_network_policy_proto_msgTypes,
	}.Build()
	File_storage_network_policy_proto = out.File
	file_storage_network_policy_proto_goTypes = nil
	file_storage_network_policy_proto_depIdxs = nil
}
