// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package storage

import (
	"iter"
	"time"
)

// ImmutableEPSS is an immutable interface for EPSS
type ImmutableEPSS interface {
	GetEpssProbability() float32
	GetEpssPercentile() float32
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *EPSS
}

// Verify that EPSS implements ImmutableEPSS
var _ ImmutableEPSS = (*EPSS)(nil)

// ImmutableCVE is an immutable interface for CVE
type ImmutableCVE interface {
	GetId() string
	GetCvss() float32
	GetImpactScore() float32
	GetType() CVE_CVEType
	GetImmutableTypes() iter.Seq[CVE_CVEType]
	GetSummary() string
	GetLink() string
	// This indicates the timestamp when the cve was first published in the cve feeds.
	GetImmutablePublishedOn() time.Time
	// Time when the CVE was first seen in the system.
	GetImmutableCreatedAt() time.Time
	GetImmutableLastModified() time.Time
	GetImmutableReferences() iter.Seq[ImmutableCVE_Reference]
	GetScoreVersion() CVE_ScoreVersion
	GetImmutableCvssV2() ImmutableCVSSV2
	GetImmutableCvssV3() ImmutableCVSSV3
	GetSuppressed() bool
	GetImmutableSuppressActivation() time.Time
	GetImmutableSuppressExpiry() time.Time
	GetImmutableDistroSpecifics() iter.Seq2[string, ImmutableCVE_DistroSpecific]
	GetSeverity() VulnerabilitySeverity
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *CVE
}

// GetImmutableTypes implements ImmutableCVE
func (m *CVE) GetImmutableTypes() iter.Seq[CVE_CVEType] {
	return func(yield func(CVE_CVEType) bool) {
		if m == nil || m.Types == nil {
			return
		}
		for _, v := range m.Types {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutablePublishedOn implements ImmutableCVE
func (m *CVE) GetImmutablePublishedOn() time.Time {
	if m == nil || m.PublishedOn == nil {
		return time.Time{}
	}
	return m.PublishedOn.AsTime()
}

// GetImmutableCreatedAt implements ImmutableCVE
func (m *CVE) GetImmutableCreatedAt() time.Time {
	if m == nil || m.CreatedAt == nil {
		return time.Time{}
	}
	return m.CreatedAt.AsTime()
}

// GetImmutableLastModified implements ImmutableCVE
func (m *CVE) GetImmutableLastModified() time.Time {
	if m == nil || m.LastModified == nil {
		return time.Time{}
	}
	return m.LastModified.AsTime()
}

// GetImmutableReferences implements ImmutableCVE
func (m *CVE) GetImmutableReferences() iter.Seq[ImmutableCVE_Reference] {
	return func(yield func(ImmutableCVE_Reference) bool) {
		if m == nil || m.References == nil {
			return
		}
		for _, v := range m.References {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableCvssV2 implements ImmutableCVE
func (m *CVE) GetImmutableCvssV2() ImmutableCVSSV2 {
	return m.GetCvssV2()
}

// GetImmutableCvssV3 implements ImmutableCVE
func (m *CVE) GetImmutableCvssV3() ImmutableCVSSV3 {
	return m.GetCvssV3()
}

// GetImmutableSuppressActivation implements ImmutableCVE
func (m *CVE) GetImmutableSuppressActivation() time.Time {
	if m == nil || m.SuppressActivation == nil {
		return time.Time{}
	}
	return m.SuppressActivation.AsTime()
}

// GetImmutableSuppressExpiry implements ImmutableCVE
func (m *CVE) GetImmutableSuppressExpiry() time.Time {
	if m == nil || m.SuppressExpiry == nil {
		return time.Time{}
	}
	return m.SuppressExpiry.AsTime()
}

// GetImmutableDistroSpecifics implements ImmutableCVE
func (m *CVE) GetImmutableDistroSpecifics() iter.Seq2[string, ImmutableCVE_DistroSpecific] {
	return func(yield func(string, ImmutableCVE_DistroSpecific) bool) {
		if m == nil || m.DistroSpecifics == nil {
			return
		}
		for k, v := range m.DistroSpecifics {
			if !yield(k, v) {
				return
			}
		}
	}
}

// Verify that CVE implements ImmutableCVE
var _ ImmutableCVE = (*CVE)(nil)

// ImmutableCVE_DistroSpecific is an immutable interface for CVE_DistroSpecific
type ImmutableCVE_DistroSpecific interface {
	GetSeverity() VulnerabilitySeverity
	GetCvss() float32
	GetScoreVersion() CVE_ScoreVersion
	GetImmutableCvssV2() ImmutableCVSSV2
	GetImmutableCvssV3() ImmutableCVSSV3
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *CVE_DistroSpecific
}

// GetImmutableCvssV2 implements ImmutableCVE_DistroSpecific
func (m *CVE_DistroSpecific) GetImmutableCvssV2() ImmutableCVSSV2 {
	return m.GetCvssV2()
}

// GetImmutableCvssV3 implements ImmutableCVE_DistroSpecific
func (m *CVE_DistroSpecific) GetImmutableCvssV3() ImmutableCVSSV3 {
	return m.GetCvssV3()
}

// Verify that CVE_DistroSpecific implements ImmutableCVE_DistroSpecific
var _ ImmutableCVE_DistroSpecific = (*CVE_DistroSpecific)(nil)

// ImmutableCVE_Reference is an immutable interface for CVE_Reference
type ImmutableCVE_Reference interface {
	GetURI() string
	GetImmutableTags() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *CVE_Reference
}

// GetImmutableTags implements ImmutableCVE_Reference
func (m *CVE_Reference) GetImmutableTags() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.Tags == nil {
			return
		}
		for _, v := range m.Tags {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that CVE_Reference implements ImmutableCVE_Reference
var _ ImmutableCVE_Reference = (*CVE_Reference)(nil)

// ImmutableCVEInfo is an immutable interface for CVEInfo
type ImmutableCVEInfo interface {
	GetCve() string
	GetSummary() string
	GetLink() string
	// This indicates the timestamp when the cve was first published in the cve feeds.
	GetImmutablePublishedOn() time.Time
	// Time when the CVE was first seen in the system.
	GetImmutableCreatedAt() time.Time
	GetImmutableLastModified() time.Time
	GetScoreVersion() CVEInfo_ScoreVersion
	// CVSSV2 CVSSV3 ScoreVersion can be deprecated ROX-26066
	GetImmutableCvssV2() ImmutableCVSSV2
	GetImmutableCvssV3() ImmutableCVSSV3
	GetImmutableReferences() iter.Seq[ImmutableCVEInfo_Reference]
	// cvss_metrics stores list of cvss scores from different sources like nvd, Redhat etc
	GetImmutableCvssMetrics() iter.Seq[ImmutableCVSSScore]
	GetImmutableEpss() ImmutableEPSS
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *CVEInfo
}

// GetImmutablePublishedOn implements ImmutableCVEInfo
func (m *CVEInfo) GetImmutablePublishedOn() time.Time {
	if m == nil || m.PublishedOn == nil {
		return time.Time{}
	}
	return m.PublishedOn.AsTime()
}

// GetImmutableCreatedAt implements ImmutableCVEInfo
func (m *CVEInfo) GetImmutableCreatedAt() time.Time {
	if m == nil || m.CreatedAt == nil {
		return time.Time{}
	}
	return m.CreatedAt.AsTime()
}

// GetImmutableLastModified implements ImmutableCVEInfo
func (m *CVEInfo) GetImmutableLastModified() time.Time {
	if m == nil || m.LastModified == nil {
		return time.Time{}
	}
	return m.LastModified.AsTime()
}

// GetImmutableCvssV2 implements ImmutableCVEInfo
func (m *CVEInfo) GetImmutableCvssV2() ImmutableCVSSV2 {
	return m.GetCvssV2()
}

// GetImmutableCvssV3 implements ImmutableCVEInfo
func (m *CVEInfo) GetImmutableCvssV3() ImmutableCVSSV3 {
	return m.GetCvssV3()
}

// GetImmutableReferences implements ImmutableCVEInfo
func (m *CVEInfo) GetImmutableReferences() iter.Seq[ImmutableCVEInfo_Reference] {
	return func(yield func(ImmutableCVEInfo_Reference) bool) {
		if m == nil || m.References == nil {
			return
		}
		for _, v := range m.References {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableCvssMetrics implements ImmutableCVEInfo
func (m *CVEInfo) GetImmutableCvssMetrics() iter.Seq[ImmutableCVSSScore] {
	return func(yield func(ImmutableCVSSScore) bool) {
		if m == nil || m.CvssMetrics == nil {
			return
		}
		for _, v := range m.CvssMetrics {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableEpss implements ImmutableCVEInfo
func (m *CVEInfo) GetImmutableEpss() ImmutableEPSS {
	return m.GetEpss()
}

// Verify that CVEInfo implements ImmutableCVEInfo
var _ ImmutableCVEInfo = (*CVEInfo)(nil)

// ImmutableCVEInfo_Reference is an immutable interface for CVEInfo_Reference
type ImmutableCVEInfo_Reference interface {
	GetURI() string
	GetImmutableTags() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *CVEInfo_Reference
}

// GetImmutableTags implements ImmutableCVEInfo_Reference
func (m *CVEInfo_Reference) GetImmutableTags() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.Tags == nil {
			return
		}
		for _, v := range m.Tags {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that CVEInfo_Reference implements ImmutableCVEInfo_Reference
var _ ImmutableCVEInfo_Reference = (*CVEInfo_Reference)(nil)

// ImmutableAdvisory is an immutable interface for Advisory
type ImmutableAdvisory interface {
	GetName() string
	GetLink() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *Advisory
}

// Verify that Advisory implements ImmutableAdvisory
var _ ImmutableAdvisory = (*Advisory)(nil)

// ImmutableImageCVE is an immutable interface for ImageCVE
type ImmutableImageCVE interface {
	GetId() string
	GetImmutableCveBaseInfo() ImmutableCVEInfo
	GetOperatingSystem() string
	// cvss stores ACS preferred cvss score
	GetCvss() float32
	GetSeverity() VulnerabilitySeverity
	GetImpactScore() float32
	GetSnoozed() bool
	GetImmutableSnoozeStart() time.Time
	GetImmutableSnoozeExpiry() time.Time
	// nvdcvss stores cvss score for a cve from NVD
	GetNvdcvss() float32
	// cvss_metrics stores list of cvss metrics from different sources like Redhat, NVD etc
	GetImmutableCvssMetrics() iter.Seq[ImmutableCVSSScore]
	GetNvdScoreVersion() CvssScoreVersion
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ImageCVE
}

// GetImmutableCveBaseInfo implements ImmutableImageCVE
func (m *ImageCVE) GetImmutableCveBaseInfo() ImmutableCVEInfo {
	return m.GetCveBaseInfo()
}

// GetImmutableSnoozeStart implements ImmutableImageCVE
func (m *ImageCVE) GetImmutableSnoozeStart() time.Time {
	if m == nil || m.SnoozeStart == nil {
		return time.Time{}
	}
	return m.SnoozeStart.AsTime()
}

// GetImmutableSnoozeExpiry implements ImmutableImageCVE
func (m *ImageCVE) GetImmutableSnoozeExpiry() time.Time {
	if m == nil || m.SnoozeExpiry == nil {
		return time.Time{}
	}
	return m.SnoozeExpiry.AsTime()
}

// GetImmutableCvssMetrics implements ImmutableImageCVE
func (m *ImageCVE) GetImmutableCvssMetrics() iter.Seq[ImmutableCVSSScore] {
	return func(yield func(ImmutableCVSSScore) bool) {
		if m == nil || m.CvssMetrics == nil {
			return
		}
		for _, v := range m.CvssMetrics {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that ImageCVE implements ImmutableImageCVE
var _ ImmutableImageCVE = (*ImageCVE)(nil)

// ImmutableImageCVEV2 is an immutable interface for ImageCVEV2
type ImmutableImageCVEV2 interface {
	// keeping id similar construction for now during investigation.  It will include component and index
	// within the component
	GetId() string
	// was hash index, making it btree
	GetImageId() string
	GetImmutableCveBaseInfo() ImmutableCVEInfo
	// cvss stores ACS preferred cvss score
	GetCvss() float32
	GetSeverity() VulnerabilitySeverity
	GetImpactScore() float32
	// nvdcvss stores cvss score for a cve from NVD
	GetNvdcvss() float32
	GetNvdScoreVersion() CvssScoreVersion
	GetImmutableFirstImageOccurrence() time.Time
	GetState() VulnerabilityState
	GetIsFixable() bool
	GetFixedBy() string
	GetComponentId() string
	GetImmutableAdvisory() ImmutableAdvisory
	GetImageIdV2() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ImageCVEV2
}

// GetImmutableCveBaseInfo implements ImmutableImageCVEV2
func (m *ImageCVEV2) GetImmutableCveBaseInfo() ImmutableCVEInfo {
	return m.GetCveBaseInfo()
}

// GetImmutableFirstImageOccurrence implements ImmutableImageCVEV2
func (m *ImageCVEV2) GetImmutableFirstImageOccurrence() time.Time {
	if m == nil || m.FirstImageOccurrence == nil {
		return time.Time{}
	}
	return m.FirstImageOccurrence.AsTime()
}

// GetImmutableAdvisory implements ImmutableImageCVEV2
func (m *ImageCVEV2) GetImmutableAdvisory() ImmutableAdvisory {
	return m.GetAdvisory()
}

// Verify that ImageCVEV2 implements ImmutableImageCVEV2
var _ ImmutableImageCVEV2 = (*ImageCVEV2)(nil)

// ImmutableNodeCVE is an immutable interface for NodeCVE
type ImmutableNodeCVE interface {
	GetId() string
	GetImmutableCveBaseInfo() ImmutableCVEInfo
	GetOperatingSystem() string
	GetCvss() float32
	GetSeverity() VulnerabilitySeverity
	GetImpactScore() float32
	GetSnoozed() bool
	GetImmutableSnoozeStart() time.Time
	GetImmutableSnoozeExpiry() time.Time
	GetOrphaned() bool
	GetImmutableOrphanedTime() time.Time
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *NodeCVE
}

// GetImmutableCveBaseInfo implements ImmutableNodeCVE
func (m *NodeCVE) GetImmutableCveBaseInfo() ImmutableCVEInfo {
	return m.GetCveBaseInfo()
}

// GetImmutableSnoozeStart implements ImmutableNodeCVE
func (m *NodeCVE) GetImmutableSnoozeStart() time.Time {
	if m == nil || m.SnoozeStart == nil {
		return time.Time{}
	}
	return m.SnoozeStart.AsTime()
}

// GetImmutableSnoozeExpiry implements ImmutableNodeCVE
func (m *NodeCVE) GetImmutableSnoozeExpiry() time.Time {
	if m == nil || m.SnoozeExpiry == nil {
		return time.Time{}
	}
	return m.SnoozeExpiry.AsTime()
}

// GetImmutableOrphanedTime implements ImmutableNodeCVE
func (m *NodeCVE) GetImmutableOrphanedTime() time.Time {
	if m == nil || m.OrphanedTime == nil {
		return time.Time{}
	}
	return m.OrphanedTime.AsTime()
}

// Verify that NodeCVE implements ImmutableNodeCVE
var _ ImmutableNodeCVE = (*NodeCVE)(nil)

// ImmutableClusterCVE is an immutable interface for ClusterCVE
type ImmutableClusterCVE interface {
	GetId() string
	GetImmutableCveBaseInfo() ImmutableCVEInfo
	GetCvss() float32
	GetSeverity() VulnerabilitySeverity
	GetImpactScore() float32
	GetSnoozed() bool
	GetImmutableSnoozeStart() time.Time
	GetImmutableSnoozeExpiry() time.Time
	GetType() CVE_CVEType
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ClusterCVE
}

// GetImmutableCveBaseInfo implements ImmutableClusterCVE
func (m *ClusterCVE) GetImmutableCveBaseInfo() ImmutableCVEInfo {
	return m.GetCveBaseInfo()
}

// GetImmutableSnoozeStart implements ImmutableClusterCVE
func (m *ClusterCVE) GetImmutableSnoozeStart() time.Time {
	if m == nil || m.SnoozeStart == nil {
		return time.Time{}
	}
	return m.SnoozeStart.AsTime()
}

// GetImmutableSnoozeExpiry implements ImmutableClusterCVE
func (m *ClusterCVE) GetImmutableSnoozeExpiry() time.Time {
	if m == nil || m.SnoozeExpiry == nil {
		return time.Time{}
	}
	return m.SnoozeExpiry.AsTime()
}

// Verify that ClusterCVE implements ImmutableClusterCVE
var _ ImmutableClusterCVE = (*ClusterCVE)(nil)

// ImmutableCVSSScore is an immutable interface for CVSSScore
type ImmutableCVSSScore interface {
	GetSource() Source
	GetUrl() string
	GetImmutableCvssv2() ImmutableCVSSV2
	GetImmutableCvssv3() ImmutableCVSSV3
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *CVSSScore
}

// GetImmutableCvssv2 implements ImmutableCVSSScore
func (m *CVSSScore) GetImmutableCvssv2() ImmutableCVSSV2 {
	return m.GetCvssv2()
}

// GetImmutableCvssv3 implements ImmutableCVSSScore
func (m *CVSSScore) GetImmutableCvssv3() ImmutableCVSSV3 {
	return m.GetCvssv3()
}

// Verify that CVSSScore implements ImmutableCVSSScore
var _ ImmutableCVSSScore = (*CVSSScore)(nil)

// ImmutableCVSSV2 is an immutable interface for CVSSV2
type ImmutableCVSSV2 interface {
	GetVector() string
	GetAttackVector() CVSSV2_AttackVector
	GetAccessComplexity() CVSSV2_AccessComplexity
	GetAuthentication() CVSSV2_Authentication
	GetConfidentiality() CVSSV2_Impact
	GetIntegrity() CVSSV2_Impact
	GetAvailability() CVSSV2_Impact
	GetExploitabilityScore() float32
	GetImpactScore() float32
	GetScore() float32
	GetSeverity() CVSSV2_Severity
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *CVSSV2
}

// Verify that CVSSV2 implements ImmutableCVSSV2
var _ ImmutableCVSSV2 = (*CVSSV2)(nil)

// ImmutableCVSSV3 is an immutable interface for CVSSV3
type ImmutableCVSSV3 interface {
	GetVector() string
	GetExploitabilityScore() float32
	GetImpactScore() float32
	GetAttackVector() CVSSV3_AttackVector
	GetAttackComplexity() CVSSV3_Complexity
	GetPrivilegesRequired() CVSSV3_Privileges
	GetUserInteraction() CVSSV3_UserInteraction
	GetScope() CVSSV3_Scope
	GetConfidentiality() CVSSV3_Impact
	GetIntegrity() CVSSV3_Impact
	GetAvailability() CVSSV3_Impact
	GetScore() float32
	GetSeverity() CVSSV3_Severity
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *CVSSV3
}

// Verify that CVSSV3 implements ImmutableCVSSV3
var _ ImmutableCVSSV3 = (*CVSSV3)(nil)
