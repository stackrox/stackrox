// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage/kube_event.proto

package storage

import (
	fmt "fmt"
	types "github.com/gogo/protobuf/types"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type KubernetesEvent_APIVerb int32

const (
	KubernetesEvent_UNKNOWN KubernetesEvent_APIVerb = 0
	KubernetesEvent_CREATE  KubernetesEvent_APIVerb = 1
	KubernetesEvent_UPDATE  KubernetesEvent_APIVerb = 2
	KubernetesEvent_PATCH   KubernetesEvent_APIVerb = 3
	KubernetesEvent_DELETE  KubernetesEvent_APIVerb = 4
	KubernetesEvent_LIST    KubernetesEvent_APIVerb = 5
	KubernetesEvent_GET     KubernetesEvent_APIVerb = 6
	KubernetesEvent_WATCH   KubernetesEvent_APIVerb = 7
	KubernetesEvent_PROXY   KubernetesEvent_APIVerb = 8
)

var KubernetesEvent_APIVerb_name = map[int32]string{
	0: "UNKNOWN",
	1: "CREATE",
	2: "UPDATE",
	3: "PATCH",
	4: "DELETE",
	5: "LIST",
	6: "GET",
	7: "WATCH",
	8: "PROXY",
}

var KubernetesEvent_APIVerb_value = map[string]int32{
	"UNKNOWN": 0,
	"CREATE":  1,
	"UPDATE":  2,
	"PATCH":   3,
	"DELETE":  4,
	"LIST":    5,
	"GET":     6,
	"WATCH":   7,
	"PROXY":   8,
}

func (x KubernetesEvent_APIVerb) String() string {
	return proto.EnumName(KubernetesEvent_APIVerb_name, int32(x))
}

func (KubernetesEvent_APIVerb) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a09c1108cf9e6345, []int{0, 0}
}

// Resource and sub-resource mapping is represented as resource_subresource.
type KubernetesEvent_Object_Resource int32

const (
	KubernetesEvent_Object_UNKNOWN                      KubernetesEvent_Object_Resource = 0
	KubernetesEvent_Object_PODS_EXEC                    KubernetesEvent_Object_Resource = 1
	KubernetesEvent_Object_PODS_PORTFORWARD             KubernetesEvent_Object_Resource = 2
	KubernetesEvent_Object_SECRETS                      KubernetesEvent_Object_Resource = 3
	KubernetesEvent_Object_CONFIGMAPS                   KubernetesEvent_Object_Resource = 4
	KubernetesEvent_Object_CLUSTER_ROLES                KubernetesEvent_Object_Resource = 5
	KubernetesEvent_Object_CLUSTER_ROLE_BINDINGS        KubernetesEvent_Object_Resource = 6
	KubernetesEvent_Object_NETWORK_POLICIES             KubernetesEvent_Object_Resource = 7
	KubernetesEvent_Object_SECURITY_CONTEXT_CONSTRAINTS KubernetesEvent_Object_Resource = 8
	KubernetesEvent_Object_EGRESS_FIREWALLS             KubernetesEvent_Object_Resource = 9
)

var KubernetesEvent_Object_Resource_name = map[int32]string{
	0: "UNKNOWN",
	1: "PODS_EXEC",
	2: "PODS_PORTFORWARD",
	3: "SECRETS",
	4: "CONFIGMAPS",
	5: "CLUSTER_ROLES",
	6: "CLUSTER_ROLE_BINDINGS",
	7: "NETWORK_POLICIES",
	8: "SECURITY_CONTEXT_CONSTRAINTS",
	9: "EGRESS_FIREWALLS",
}

var KubernetesEvent_Object_Resource_value = map[string]int32{
	"UNKNOWN":                      0,
	"PODS_EXEC":                    1,
	"PODS_PORTFORWARD":             2,
	"SECRETS":                      3,
	"CONFIGMAPS":                   4,
	"CLUSTER_ROLES":                5,
	"CLUSTER_ROLE_BINDINGS":        6,
	"NETWORK_POLICIES":             7,
	"SECURITY_CONTEXT_CONSTRAINTS": 8,
	"EGRESS_FIREWALLS":             9,
}

func (x KubernetesEvent_Object_Resource) String() string {
	return proto.EnumName(KubernetesEvent_Object_Resource_name, int32(x))
}

func (KubernetesEvent_Object_Resource) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a09c1108cf9e6345, []int{0, 0, 0}
}

type KubernetesEvent struct {
	Id        string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Object    *KubernetesEvent_Object `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	Timestamp *types.Timestamp        `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ApiVerb   KubernetesEvent_APIVerb `protobuf:"varint,4,opt,name=api_verb,json=apiVerb,proto3,enum=storage.KubernetesEvent_APIVerb" json:"api_verb,omitempty" policy:"Kubernetes API Verb"` // @gotags: policy:"Kubernetes API Verb"
	// tags 5-14 reserved for ObjectArgs
	// Next available tag: 7
	//
	// Types that are valid to be assigned to ObjectArgs:
	//	*KubernetesEvent_PodExecArgs_
	//	*KubernetesEvent_PodPortForwardArgs_
	ObjectArgs isKubernetesEvent_ObjectArgs `protobuf_oneof:"ObjectArgs"`
	// Extended arguments. May not be available for pod exec and port forward events.
	// These start at 15 because they were added after ObjectArgs and the previous tags are reserved in case it needs to be extended in the future.
	User                 *KubernetesEvent_User           `protobuf:"bytes,15,opt,name=user,proto3" json:"user,omitempty"`
	ImpersonatedUser     *KubernetesEvent_User           `protobuf:"bytes,16,opt,name=impersonated_user,json=impersonatedUser,proto3" json:"impersonated_user,omitempty" policy:",ignore"` // this field is optional if the request wasn't an impersonated request // @gotags: policy:",ignore"
	SourceIps            []string                        `protobuf:"bytes,17,rep,name=source_ips,json=sourceIps,proto3" json:"source_ips,omitempty" policy:"Source IP Address"`                      // @gotags: policy:"Source IP Address"
	UserAgent            string                          `protobuf:"bytes,18,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty" policy:"User Agent"`                      // @gotags: policy:"User Agent"
	ResponseStatus       *KubernetesEvent_ResponseStatus `protobuf:"bytes,19,opt,name=response_status,json=responseStatus,proto3" json:"response_status,omitempty"`
	RequestUri           string                          `protobuf:"bytes,20,opt,name=request_uri,json=requestUri,proto3" json:"request_uri,omitempty"` // Field will not be used for policy detection
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *KubernetesEvent) Reset()         { *m = KubernetesEvent{} }
func (m *KubernetesEvent) String() string { return proto.CompactTextString(m) }
func (*KubernetesEvent) ProtoMessage()    {}
func (*KubernetesEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_a09c1108cf9e6345, []int{0}
}
func (m *KubernetesEvent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *KubernetesEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_KubernetesEvent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *KubernetesEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubernetesEvent.Merge(m, src)
}
func (m *KubernetesEvent) XXX_Size() int {
	return m.Size()
}
func (m *KubernetesEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_KubernetesEvent.DiscardUnknown(m)
}

var xxx_messageInfo_KubernetesEvent proto.InternalMessageInfo

type isKubernetesEvent_ObjectArgs interface {
	isKubernetesEvent_ObjectArgs()
	MarshalTo([]byte) (int, error)
	Size() int
	Clone() isKubernetesEvent_ObjectArgs
}

type KubernetesEvent_PodExecArgs_ struct {
	PodExecArgs *KubernetesEvent_PodExecArgs `protobuf:"bytes,5,opt,name=pod_exec_args,json=podExecArgs,proto3,oneof" json:"pod_exec_args,omitempty"`
}
type KubernetesEvent_PodPortForwardArgs_ struct {
	PodPortForwardArgs *KubernetesEvent_PodPortForwardArgs `protobuf:"bytes,6,opt,name=pod_port_forward_args,json=podPortForwardArgs,proto3,oneof" json:"pod_port_forward_args,omitempty"`
}

func (*KubernetesEvent_PodExecArgs_) isKubernetesEvent_ObjectArgs() {}
func (m *KubernetesEvent_PodExecArgs_) Clone() isKubernetesEvent_ObjectArgs {
	if m == nil {
		return nil
	}
	cloned := new(KubernetesEvent_PodExecArgs_)
	*cloned = *m

	cloned.PodExecArgs = m.PodExecArgs.Clone()
	return cloned
}
func (*KubernetesEvent_PodPortForwardArgs_) isKubernetesEvent_ObjectArgs() {}
func (m *KubernetesEvent_PodPortForwardArgs_) Clone() isKubernetesEvent_ObjectArgs {
	if m == nil {
		return nil
	}
	cloned := new(KubernetesEvent_PodPortForwardArgs_)
	*cloned = *m

	cloned.PodPortForwardArgs = m.PodPortForwardArgs.Clone()
	return cloned
}

func (m *KubernetesEvent) GetObjectArgs() isKubernetesEvent_ObjectArgs {
	if m != nil {
		return m.ObjectArgs
	}
	return nil
}

func (m *KubernetesEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *KubernetesEvent) GetObject() *KubernetesEvent_Object {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *KubernetesEvent) GetTimestamp() *types.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *KubernetesEvent) GetApiVerb() KubernetesEvent_APIVerb {
	if m != nil {
		return m.ApiVerb
	}
	return KubernetesEvent_UNKNOWN
}

func (m *KubernetesEvent) GetPodExecArgs() *KubernetesEvent_PodExecArgs {
	if x, ok := m.GetObjectArgs().(*KubernetesEvent_PodExecArgs_); ok {
		return x.PodExecArgs
	}
	return nil
}

func (m *KubernetesEvent) GetPodPortForwardArgs() *KubernetesEvent_PodPortForwardArgs {
	if x, ok := m.GetObjectArgs().(*KubernetesEvent_PodPortForwardArgs_); ok {
		return x.PodPortForwardArgs
	}
	return nil
}

func (m *KubernetesEvent) GetUser() *KubernetesEvent_User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *KubernetesEvent) GetImpersonatedUser() *KubernetesEvent_User {
	if m != nil {
		return m.ImpersonatedUser
	}
	return nil
}

func (m *KubernetesEvent) GetSourceIps() []string {
	if m != nil {
		return m.SourceIps
	}
	return nil
}

func (m *KubernetesEvent) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *KubernetesEvent) GetResponseStatus() *KubernetesEvent_ResponseStatus {
	if m != nil {
		return m.ResponseStatus
	}
	return nil
}

func (m *KubernetesEvent) GetRequestUri() string {
	if m != nil {
		return m.RequestUri
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*KubernetesEvent) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*KubernetesEvent_PodExecArgs_)(nil),
		(*KubernetesEvent_PodPortForwardArgs_)(nil),
	}
}

func (m *KubernetesEvent) MessageClone() proto.Message {
	return m.Clone()
}
func (m *KubernetesEvent) Clone() *KubernetesEvent {
	if m == nil {
		return nil
	}
	cloned := new(KubernetesEvent)
	*cloned = *m

	cloned.Object = m.Object.Clone()
	cloned.Timestamp = m.Timestamp.Clone()
	if m.ObjectArgs != nil {
		cloned.ObjectArgs = m.ObjectArgs.Clone()
	}
	cloned.User = m.User.Clone()
	cloned.ImpersonatedUser = m.ImpersonatedUser.Clone()
	if m.SourceIps != nil {
		cloned.SourceIps = make([]string, len(m.SourceIps))
		copy(cloned.SourceIps, m.SourceIps)
	}
	cloned.ResponseStatus = m.ResponseStatus.Clone()
	return cloned
}

type KubernetesEvent_Object struct {
	Name                 string                          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" policy:"Kubernetes Resource Name"`                                                       // @gotags: policy:"Kubernetes Resource Name"
	Resource             KubernetesEvent_Object_Resource `protobuf:"varint,2,opt,name=resource,proto3,enum=storage.KubernetesEvent_Object_Resource" json:"resource,omitempty" policy:"Kubernetes Resource"` // @gotags: policy:"Kubernetes Resource"
	ClusterId            string                          `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Namespace            string                          `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *KubernetesEvent_Object) Reset()         { *m = KubernetesEvent_Object{} }
func (m *KubernetesEvent_Object) String() string { return proto.CompactTextString(m) }
func (*KubernetesEvent_Object) ProtoMessage()    {}
func (*KubernetesEvent_Object) Descriptor() ([]byte, []int) {
	return fileDescriptor_a09c1108cf9e6345, []int{0, 0}
}
func (m *KubernetesEvent_Object) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *KubernetesEvent_Object) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_KubernetesEvent_Object.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *KubernetesEvent_Object) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubernetesEvent_Object.Merge(m, src)
}
func (m *KubernetesEvent_Object) XXX_Size() int {
	return m.Size()
}
func (m *KubernetesEvent_Object) XXX_DiscardUnknown() {
	xxx_messageInfo_KubernetesEvent_Object.DiscardUnknown(m)
}

var xxx_messageInfo_KubernetesEvent_Object proto.InternalMessageInfo

func (m *KubernetesEvent_Object) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *KubernetesEvent_Object) GetResource() KubernetesEvent_Object_Resource {
	if m != nil {
		return m.Resource
	}
	return KubernetesEvent_Object_UNKNOWN
}

func (m *KubernetesEvent_Object) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *KubernetesEvent_Object) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *KubernetesEvent_Object) MessageClone() proto.Message {
	return m.Clone()
}
func (m *KubernetesEvent_Object) Clone() *KubernetesEvent_Object {
	if m == nil {
		return nil
	}
	cloned := new(KubernetesEvent_Object)
	*cloned = *m

	return cloned
}

type KubernetesEvent_PodExecArgs struct {
	Container            string   `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	Commands             []string `protobuf:"bytes,2,rep,name=commands,proto3" json:"commands,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KubernetesEvent_PodExecArgs) Reset()         { *m = KubernetesEvent_PodExecArgs{} }
func (m *KubernetesEvent_PodExecArgs) String() string { return proto.CompactTextString(m) }
func (*KubernetesEvent_PodExecArgs) ProtoMessage()    {}
func (*KubernetesEvent_PodExecArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_a09c1108cf9e6345, []int{0, 1}
}
func (m *KubernetesEvent_PodExecArgs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *KubernetesEvent_PodExecArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_KubernetesEvent_PodExecArgs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *KubernetesEvent_PodExecArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubernetesEvent_PodExecArgs.Merge(m, src)
}
func (m *KubernetesEvent_PodExecArgs) XXX_Size() int {
	return m.Size()
}
func (m *KubernetesEvent_PodExecArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_KubernetesEvent_PodExecArgs.DiscardUnknown(m)
}

var xxx_messageInfo_KubernetesEvent_PodExecArgs proto.InternalMessageInfo

func (m *KubernetesEvent_PodExecArgs) GetContainer() string {
	if m != nil {
		return m.Container
	}
	return ""
}

func (m *KubernetesEvent_PodExecArgs) GetCommands() []string {
	if m != nil {
		return m.Commands
	}
	return nil
}

func (m *KubernetesEvent_PodExecArgs) MessageClone() proto.Message {
	return m.Clone()
}
func (m *KubernetesEvent_PodExecArgs) Clone() *KubernetesEvent_PodExecArgs {
	if m == nil {
		return nil
	}
	cloned := new(KubernetesEvent_PodExecArgs)
	*cloned = *m

	if m.Commands != nil {
		cloned.Commands = make([]string, len(m.Commands))
		copy(cloned.Commands, m.Commands)
	}
	return cloned
}

type KubernetesEvent_PodPortForwardArgs struct {
	Ports                []int32  `protobuf:"varint,1,rep,packed,name=ports,proto3" json:"ports,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KubernetesEvent_PodPortForwardArgs) Reset()         { *m = KubernetesEvent_PodPortForwardArgs{} }
func (m *KubernetesEvent_PodPortForwardArgs) String() string { return proto.CompactTextString(m) }
func (*KubernetesEvent_PodPortForwardArgs) ProtoMessage()    {}
func (*KubernetesEvent_PodPortForwardArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_a09c1108cf9e6345, []int{0, 2}
}
func (m *KubernetesEvent_PodPortForwardArgs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *KubernetesEvent_PodPortForwardArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_KubernetesEvent_PodPortForwardArgs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *KubernetesEvent_PodPortForwardArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubernetesEvent_PodPortForwardArgs.Merge(m, src)
}
func (m *KubernetesEvent_PodPortForwardArgs) XXX_Size() int {
	return m.Size()
}
func (m *KubernetesEvent_PodPortForwardArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_KubernetesEvent_PodPortForwardArgs.DiscardUnknown(m)
}

var xxx_messageInfo_KubernetesEvent_PodPortForwardArgs proto.InternalMessageInfo

func (m *KubernetesEvent_PodPortForwardArgs) GetPorts() []int32 {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *KubernetesEvent_PodPortForwardArgs) MessageClone() proto.Message {
	return m.Clone()
}
func (m *KubernetesEvent_PodPortForwardArgs) Clone() *KubernetesEvent_PodPortForwardArgs {
	if m == nil {
		return nil
	}
	cloned := new(KubernetesEvent_PodPortForwardArgs)
	*cloned = *m

	if m.Ports != nil {
		cloned.Ports = make([]int32, len(m.Ports))
		copy(cloned.Ports, m.Ports)
	}
	return cloned
}

type KubernetesEvent_ResponseStatus struct {
	StatusCode           int32    `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KubernetesEvent_ResponseStatus) Reset()         { *m = KubernetesEvent_ResponseStatus{} }
func (m *KubernetesEvent_ResponseStatus) String() string { return proto.CompactTextString(m) }
func (*KubernetesEvent_ResponseStatus) ProtoMessage()    {}
func (*KubernetesEvent_ResponseStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_a09c1108cf9e6345, []int{0, 3}
}
func (m *KubernetesEvent_ResponseStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *KubernetesEvent_ResponseStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_KubernetesEvent_ResponseStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *KubernetesEvent_ResponseStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubernetesEvent_ResponseStatus.Merge(m, src)
}
func (m *KubernetesEvent_ResponseStatus) XXX_Size() int {
	return m.Size()
}
func (m *KubernetesEvent_ResponseStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_KubernetesEvent_ResponseStatus.DiscardUnknown(m)
}

var xxx_messageInfo_KubernetesEvent_ResponseStatus proto.InternalMessageInfo

func (m *KubernetesEvent_ResponseStatus) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *KubernetesEvent_ResponseStatus) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *KubernetesEvent_ResponseStatus) MessageClone() proto.Message {
	return m.Clone()
}
func (m *KubernetesEvent_ResponseStatus) Clone() *KubernetesEvent_ResponseStatus {
	if m == nil {
		return nil
	}
	cloned := new(KubernetesEvent_ResponseStatus)
	*cloned = *m

	return cloned
}

type KubernetesEvent_User struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty" policy:"Kubernetes User Name"` // @gotags: policy:"Kubernetes User Name"
	Groups               []string `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty" policy:"Kubernetes User Groups"`     // @gotags: policy:"Kubernetes User Groups"
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KubernetesEvent_User) Reset()         { *m = KubernetesEvent_User{} }
func (m *KubernetesEvent_User) String() string { return proto.CompactTextString(m) }
func (*KubernetesEvent_User) ProtoMessage()    {}
func (*KubernetesEvent_User) Descriptor() ([]byte, []int) {
	return fileDescriptor_a09c1108cf9e6345, []int{0, 4}
}
func (m *KubernetesEvent_User) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *KubernetesEvent_User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_KubernetesEvent_User.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *KubernetesEvent_User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubernetesEvent_User.Merge(m, src)
}
func (m *KubernetesEvent_User) XXX_Size() int {
	return m.Size()
}
func (m *KubernetesEvent_User) XXX_DiscardUnknown() {
	xxx_messageInfo_KubernetesEvent_User.DiscardUnknown(m)
}

var xxx_messageInfo_KubernetesEvent_User proto.InternalMessageInfo

func (m *KubernetesEvent_User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *KubernetesEvent_User) GetGroups() []string {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *KubernetesEvent_User) MessageClone() proto.Message {
	return m.Clone()
}
func (m *KubernetesEvent_User) Clone() *KubernetesEvent_User {
	if m == nil {
		return nil
	}
	cloned := new(KubernetesEvent_User)
	*cloned = *m

	if m.Groups != nil {
		cloned.Groups = make([]string, len(m.Groups))
		copy(cloned.Groups, m.Groups)
	}
	return cloned
}

func init() {
	proto.RegisterEnum("storage.KubernetesEvent_APIVerb", KubernetesEvent_APIVerb_name, KubernetesEvent_APIVerb_value)
	proto.RegisterEnum("storage.KubernetesEvent_Object_Resource", KubernetesEvent_Object_Resource_name, KubernetesEvent_Object_Resource_value)
	proto.RegisterType((*KubernetesEvent)(nil), "storage.KubernetesEvent")
	proto.RegisterType((*KubernetesEvent_Object)(nil), "storage.KubernetesEvent.Object")
	proto.RegisterType((*KubernetesEvent_PodExecArgs)(nil), "storage.KubernetesEvent.PodExecArgs")
	proto.RegisterType((*KubernetesEvent_PodPortForwardArgs)(nil), "storage.KubernetesEvent.PodPortForwardArgs")
	proto.RegisterType((*KubernetesEvent_ResponseStatus)(nil), "storage.KubernetesEvent.ResponseStatus")
	proto.RegisterType((*KubernetesEvent_User)(nil), "storage.KubernetesEvent.User")
}

func init() { proto.RegisterFile("storage/kube_event.proto", fileDescriptor_a09c1108cf9e6345) }

var fileDescriptor_a09c1108cf9e6345 = []byte{
	// 872 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x5d, 0x6f, 0xe3, 0x44,
	0x14, 0xad, 0xf3, 0xed, 0x1b, 0x9a, 0xba, 0x43, 0x17, 0x79, 0xa3, 0xdd, 0x36, 0xaa, 0x90, 0x88,
	0x40, 0x4a, 0x45, 0x41, 0x02, 0xc1, 0x53, 0xea, 0x4c, 0xb3, 0xde, 0x86, 0xd8, 0x1a, 0x3b, 0xa4,
	0xcb, 0x8b, 0x71, 0xec, 0xd9, 0xc8, 0xec, 0xc6, 0x63, 0x66, 0xec, 0xa5, 0x3f, 0x85, 0x77, 0xfe,
	0x0c, 0x8f, 0xbc, 0xf0, 0x8e, 0xca, 0x8f, 0xe0, 0x15, 0xcd, 0xd8, 0xe9, 0x07, 0x55, 0x81, 0xa7,
	0xcc, 0x3d, 0x3e, 0xe7, 0xdc, 0x9b, 0x99, 0x33, 0x03, 0xa6, 0xc8, 0x19, 0x0f, 0xd7, 0xf4, 0xe4,
	0x4d, 0xb1, 0xa2, 0x01, 0x7d, 0x47, 0xd3, 0x7c, 0x94, 0x71, 0x96, 0x33, 0xd4, 0xae, 0xbe, 0xf4,
	0x8f, 0xd6, 0x8c, 0xad, 0xdf, 0xd2, 0x13, 0x05, 0xaf, 0x8a, 0xd7, 0x27, 0x79, 0xb2, 0xa1, 0x22,
	0x0f, 0x37, 0x59, 0xc9, 0x3c, 0xfe, 0xa5, 0x0b, 0x7b, 0x17, 0xc5, 0x8a, 0xf2, 0x94, 0xe6, 0x54,
	0x60, 0xe9, 0x81, 0x7a, 0x50, 0x4b, 0x62, 0x53, 0x1b, 0x68, 0x43, 0x9d, 0xd4, 0x92, 0x18, 0x7d,
	0x01, 0x2d, 0xb6, 0xfa, 0x81, 0x46, 0xb9, 0x59, 0x1b, 0x68, 0xc3, 0xee, 0xe9, 0xd1, 0xa8, 0xb2,
	0x1f, 0xfd, 0x43, 0x39, 0x72, 0x14, 0x8d, 0x54, 0x74, 0xf4, 0x25, 0xe8, 0x37, 0xfd, 0xcc, 0xba,
	0xd2, 0xf6, 0x47, 0xe5, 0x44, 0xa3, 0xed, 0x44, 0x23, 0x7f, 0xcb, 0x20, 0xb7, 0x64, 0xf4, 0x35,
	0x74, 0xc2, 0x2c, 0x09, 0xde, 0x51, 0xbe, 0x32, 0x1b, 0x03, 0x6d, 0xd8, 0x3b, 0x1d, 0x3c, 0xda,
	0x74, 0xec, 0xda, 0xdf, 0x52, 0xbe, 0x22, 0xed, 0x30, 0x4b, 0xe4, 0x02, 0xbd, 0x84, 0xdd, 0x8c,
	0xc5, 0x01, 0xbd, 0xa2, 0x51, 0x10, 0xf2, 0xb5, 0x30, 0x9b, 0xaa, 0xf5, 0x87, 0x8f, 0x3a, 0xb8,
	0x2c, 0xc6, 0x57, 0x34, 0x1a, 0xf3, 0xb5, 0x78, 0xb1, 0x43, 0xba, 0xd9, 0x6d, 0x89, 0xbe, 0x87,
	0x27, 0xd2, 0x2b, 0x63, 0x3c, 0x0f, 0x5e, 0x33, 0xfe, 0x53, 0xc8, 0xe3, 0xd2, 0xb3, 0xa5, 0x3c,
	0x3f, 0xf9, 0x37, 0x4f, 0x97, 0xf1, 0xfc, 0xbc, 0xd4, 0x54, 0xd6, 0x28, 0x7b, 0x80, 0xa2, 0x4f,
	0xa1, 0x51, 0x08, 0xca, 0xcd, 0x3d, 0x65, 0xf8, 0xfc, 0x51, 0xc3, 0x85, 0xa0, 0x9c, 0x28, 0x2a,
	0x7a, 0x09, 0xfb, 0xc9, 0x26, 0xa3, 0x5c, 0xb0, 0x34, 0xcc, 0x69, 0x1c, 0x28, 0xbd, 0xf1, 0x7f,
	0xf4, 0xc6, 0x5d, 0x9d, 0x44, 0xd0, 0x73, 0x00, 0xc1, 0x0a, 0x1e, 0xd1, 0x20, 0xc9, 0x84, 0xb9,
	0x3f, 0xa8, 0x0f, 0x75, 0xa2, 0x97, 0x88, 0x9d, 0x09, 0xf9, 0x59, 0xba, 0x07, 0xe1, 0x9a, 0xa6,
	0xb9, 0x89, 0x54, 0x26, 0x74, 0x89, 0x8c, 0x25, 0x80, 0x5c, 0xd8, 0xe3, 0x54, 0x64, 0x2c, 0x15,
	0x34, 0x10, 0x79, 0x98, 0x17, 0xc2, 0x7c, 0x5f, 0xcd, 0xf1, 0xd1, 0xa3, 0x73, 0x90, 0x8a, 0xef,
	0x29, 0x3a, 0xe9, 0xf1, 0x7b, 0x35, 0x3a, 0x82, 0x2e, 0xa7, 0x3f, 0x16, 0x54, 0xe4, 0x41, 0xc1,
	0x13, 0xf3, 0x40, 0x75, 0x84, 0x0a, 0x5a, 0xf0, 0xa4, 0xff, 0x57, 0x0d, 0x5a, 0x65, 0xce, 0x10,
	0x82, 0x46, 0x1a, 0x6e, 0x68, 0x15, 0x55, 0xb5, 0x46, 0x13, 0xe8, 0x70, 0x5a, 0xce, 0xaf, 0xe2,
	0xda, 0x3b, 0x1d, 0xfe, 0x47, 0x5c, 0xe5, 0x44, 0x8a, 0x4f, 0x6e, 0x94, 0xf2, 0x6f, 0x47, 0x6f,
	0x0b, 0x91, 0x53, 0x1e, 0x24, 0xb1, 0x8a, 0xae, 0x4e, 0xf4, 0x0a, 0xb1, 0x63, 0xf4, 0x0c, 0x74,
	0xd9, 0x4c, 0x64, 0x61, 0x44, 0x55, 0x3e, 0x75, 0x72, 0x0b, 0x1c, 0xff, 0xae, 0x41, 0x67, 0xeb,
	0x89, 0xba, 0xd0, 0x5e, 0xcc, 0x2f, 0xe6, 0xce, 0x72, 0x6e, 0xec, 0xa0, 0x5d, 0xd0, 0x5d, 0x67,
	0xe2, 0x05, 0xf8, 0x12, 0x5b, 0x86, 0x86, 0x0e, 0xc0, 0x50, 0xa5, 0xeb, 0x10, 0xff, 0xdc, 0x21,
	0xcb, 0x31, 0x99, 0x18, 0x35, 0xa9, 0xf0, 0xb0, 0x45, 0xb0, 0xef, 0x19, 0x75, 0xd4, 0x03, 0xb0,
	0x9c, 0xf9, 0xb9, 0x3d, 0xfd, 0x66, 0xec, 0x7a, 0x46, 0x03, 0xed, 0xc3, 0xae, 0x35, 0x5b, 0x78,
	0x3e, 0x26, 0x01, 0x71, 0x66, 0xd8, 0x33, 0x9a, 0xe8, 0x29, 0x3c, 0xb9, 0x0b, 0x05, 0x67, 0xf6,
	0x7c, 0x62, 0xcf, 0xa7, 0x9e, 0xd1, 0x92, 0x0d, 0xe6, 0xd8, 0x5f, 0x3a, 0xe4, 0x22, 0x70, 0x9d,
	0x99, 0x6d, 0xd9, 0xd8, 0x33, 0xda, 0x68, 0x00, 0xcf, 0x3c, 0x6c, 0x2d, 0x88, 0xed, 0xbf, 0x0a,
	0x2c, 0x67, 0xee, 0xe3, 0x4b, 0x5f, 0xfe, 0x7a, 0x3e, 0x19, 0xdb, 0x73, 0xdf, 0x33, 0x3a, 0x52,
	0x87, 0xa7, 0x04, 0x7b, 0x5e, 0x70, 0x6e, 0x13, 0xbc, 0x1c, 0xcf, 0x66, 0x9e, 0xa1, 0xf7, 0xa7,
	0xd0, 0xbd, 0x73, 0x53, 0xe4, 0x26, 0x44, 0x2c, 0xcd, 0xc3, 0x24, 0xa5, 0xbc, 0x3a, 0x82, 0x5b,
	0x00, 0xf5, 0xa1, 0x13, 0xb1, 0xcd, 0x26, 0x4c, 0x63, 0x61, 0xd6, 0x54, 0xaa, 0x6e, 0xea, 0xfe,
	0xc7, 0x80, 0x1e, 0x5e, 0x0f, 0x74, 0x00, 0x4d, 0x79, 0xcd, 0x84, 0xa9, 0x0d, 0xea, 0xc3, 0x26,
	0x29, 0x8b, 0xbe, 0x0d, 0x3d, 0xf2, 0x20, 0x21, 0x65, 0xd4, 0x82, 0x88, 0xc5, 0xe5, 0xe1, 0x37,
	0x09, 0x94, 0x90, 0xc5, 0x62, 0x8a, 0x3e, 0x80, 0x16, 0xa7, 0xa1, 0x60, 0xa9, 0x0a, 0x80, 0x4e,
	0xaa, 0xaa, 0xff, 0x15, 0x34, 0x54, 0xe4, 0xfb, 0xd0, 0x91, 0x09, 0xbe, 0x13, 0x9d, 0x9b, 0x5a,
	0x6a, 0xd7, 0x9c, 0x15, 0xd9, 0x76, 0xe8, 0xaa, 0x3a, 0x4e, 0xa1, 0x5d, 0xbd, 0x33, 0xf7, 0x4f,
	0x14, 0xa0, 0x65, 0x11, 0x3c, 0xf6, 0xb1, 0xa1, 0xc9, 0xf5, 0xc2, 0x9d, 0xc8, 0x75, 0x0d, 0xe9,
	0xd0, 0x74, 0xc7, 0xbe, 0xf5, 0xc2, 0xa8, 0x4b, 0x78, 0x82, 0x67, 0xd8, 0xc7, 0x46, 0x03, 0x75,
	0xa0, 0x31, 0xb3, 0x3d, 0xdf, 0x68, 0xa2, 0x36, 0xd4, 0xa7, 0xd8, 0x37, 0x5a, 0x92, 0xb9, 0x54,
	0xcc, 0xb6, 0x12, 0x11, 0xe7, 0xf2, 0x95, 0xd1, 0x39, 0x7b, 0x0f, 0xa0, 0x4c, 0xa7, 0xdc, 0x9a,
	0xb3, 0xcf, 0x7f, 0xbd, 0x3e, 0xd4, 0x7e, 0xbb, 0x3e, 0xd4, 0xfe, 0xb8, 0x3e, 0xd4, 0x7e, 0xfe,
	0xf3, 0x70, 0x07, 0x9e, 0x26, 0x6c, 0x24, 0xf2, 0x30, 0x7a, 0xc3, 0xd9, 0x55, 0xf9, 0x96, 0x6e,
	0x53, 0xfe, 0xdd, 0xf6, 0xf1, 0x5f, 0xb5, 0x14, 0xfe, 0xd9, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xc8, 0x00, 0xa9, 0x8e, 0x28, 0x06, 0x00, 0x00,
}

func (m *KubernetesEvent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *KubernetesEvent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KubernetesEvent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RequestUri) > 0 {
		i -= len(m.RequestUri)
		copy(dAtA[i:], m.RequestUri)
		i = encodeVarintKubeEvent(dAtA, i, uint64(len(m.RequestUri)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if m.ResponseStatus != nil {
		{
			size, err := m.ResponseStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKubeEvent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if len(m.UserAgent) > 0 {
		i -= len(m.UserAgent)
		copy(dAtA[i:], m.UserAgent)
		i = encodeVarintKubeEvent(dAtA, i, uint64(len(m.UserAgent)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if len(m.SourceIps) > 0 {
		for iNdEx := len(m.SourceIps) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.SourceIps[iNdEx])
			copy(dAtA[i:], m.SourceIps[iNdEx])
			i = encodeVarintKubeEvent(dAtA, i, uint64(len(m.SourceIps[iNdEx])))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x8a
		}
	}
	if m.ImpersonatedUser != nil {
		{
			size, err := m.ImpersonatedUser.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKubeEvent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.User != nil {
		{
			size, err := m.User.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKubeEvent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	if m.ObjectArgs != nil {
		{
			size := m.ObjectArgs.Size()
			i -= size
			if _, err := m.ObjectArgs.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.ApiVerb != 0 {
		i = encodeVarintKubeEvent(dAtA, i, uint64(m.ApiVerb))
		i--
		dAtA[i] = 0x20
	}
	if m.Timestamp != nil {
		{
			size, err := m.Timestamp.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKubeEvent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Object != nil {
		{
			size, err := m.Object.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKubeEvent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintKubeEvent(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *KubernetesEvent_PodExecArgs_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KubernetesEvent_PodExecArgs_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.PodExecArgs != nil {
		{
			size, err := m.PodExecArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKubeEvent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *KubernetesEvent_PodPortForwardArgs_) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KubernetesEvent_PodPortForwardArgs_) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.PodPortForwardArgs != nil {
		{
			size, err := m.PodPortForwardArgs.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintKubeEvent(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	return len(dAtA) - i, nil
}
func (m *KubernetesEvent_Object) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *KubernetesEvent_Object) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KubernetesEvent_Object) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintKubeEvent(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ClusterId) > 0 {
		i -= len(m.ClusterId)
		copy(dAtA[i:], m.ClusterId)
		i = encodeVarintKubeEvent(dAtA, i, uint64(len(m.ClusterId)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Resource != 0 {
		i = encodeVarintKubeEvent(dAtA, i, uint64(m.Resource))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintKubeEvent(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *KubernetesEvent_PodExecArgs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *KubernetesEvent_PodExecArgs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KubernetesEvent_PodExecArgs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Commands) > 0 {
		for iNdEx := len(m.Commands) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Commands[iNdEx])
			copy(dAtA[i:], m.Commands[iNdEx])
			i = encodeVarintKubeEvent(dAtA, i, uint64(len(m.Commands[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Container) > 0 {
		i -= len(m.Container)
		copy(dAtA[i:], m.Container)
		i = encodeVarintKubeEvent(dAtA, i, uint64(len(m.Container)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *KubernetesEvent_PodPortForwardArgs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *KubernetesEvent_PodPortForwardArgs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KubernetesEvent_PodPortForwardArgs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ports) > 0 {
		dAtA9 := make([]byte, len(m.Ports)*10)
		var j8 int
		for _, num1 := range m.Ports {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA9[j8] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j8++
			}
			dAtA9[j8] = uint8(num)
			j8++
		}
		i -= j8
		copy(dAtA[i:], dAtA9[:j8])
		i = encodeVarintKubeEvent(dAtA, i, uint64(j8))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *KubernetesEvent_ResponseStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *KubernetesEvent_ResponseStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KubernetesEvent_ResponseStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Reason) > 0 {
		i -= len(m.Reason)
		copy(dAtA[i:], m.Reason)
		i = encodeVarintKubeEvent(dAtA, i, uint64(len(m.Reason)))
		i--
		dAtA[i] = 0x12
	}
	if m.StatusCode != 0 {
		i = encodeVarintKubeEvent(dAtA, i, uint64(m.StatusCode))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *KubernetesEvent_User) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *KubernetesEvent_User) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KubernetesEvent_User) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Groups) > 0 {
		for iNdEx := len(m.Groups) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Groups[iNdEx])
			copy(dAtA[i:], m.Groups[iNdEx])
			i = encodeVarintKubeEvent(dAtA, i, uint64(len(m.Groups[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintKubeEvent(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintKubeEvent(dAtA []byte, offset int, v uint64) int {
	offset -= sovKubeEvent(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *KubernetesEvent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovKubeEvent(uint64(l))
	}
	if m.Object != nil {
		l = m.Object.Size()
		n += 1 + l + sovKubeEvent(uint64(l))
	}
	if m.Timestamp != nil {
		l = m.Timestamp.Size()
		n += 1 + l + sovKubeEvent(uint64(l))
	}
	if m.ApiVerb != 0 {
		n += 1 + sovKubeEvent(uint64(m.ApiVerb))
	}
	if m.ObjectArgs != nil {
		n += m.ObjectArgs.Size()
	}
	if m.User != nil {
		l = m.User.Size()
		n += 1 + l + sovKubeEvent(uint64(l))
	}
	if m.ImpersonatedUser != nil {
		l = m.ImpersonatedUser.Size()
		n += 2 + l + sovKubeEvent(uint64(l))
	}
	if len(m.SourceIps) > 0 {
		for _, s := range m.SourceIps {
			l = len(s)
			n += 2 + l + sovKubeEvent(uint64(l))
		}
	}
	l = len(m.UserAgent)
	if l > 0 {
		n += 2 + l + sovKubeEvent(uint64(l))
	}
	if m.ResponseStatus != nil {
		l = m.ResponseStatus.Size()
		n += 2 + l + sovKubeEvent(uint64(l))
	}
	l = len(m.RequestUri)
	if l > 0 {
		n += 2 + l + sovKubeEvent(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *KubernetesEvent_PodExecArgs_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PodExecArgs != nil {
		l = m.PodExecArgs.Size()
		n += 1 + l + sovKubeEvent(uint64(l))
	}
	return n
}
func (m *KubernetesEvent_PodPortForwardArgs_) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PodPortForwardArgs != nil {
		l = m.PodPortForwardArgs.Size()
		n += 1 + l + sovKubeEvent(uint64(l))
	}
	return n
}
func (m *KubernetesEvent_Object) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovKubeEvent(uint64(l))
	}
	if m.Resource != 0 {
		n += 1 + sovKubeEvent(uint64(m.Resource))
	}
	l = len(m.ClusterId)
	if l > 0 {
		n += 1 + l + sovKubeEvent(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovKubeEvent(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *KubernetesEvent_PodExecArgs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Container)
	if l > 0 {
		n += 1 + l + sovKubeEvent(uint64(l))
	}
	if len(m.Commands) > 0 {
		for _, s := range m.Commands {
			l = len(s)
			n += 1 + l + sovKubeEvent(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *KubernetesEvent_PodPortForwardArgs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Ports) > 0 {
		l = 0
		for _, e := range m.Ports {
			l += sovKubeEvent(uint64(e))
		}
		n += 1 + sovKubeEvent(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *KubernetesEvent_ResponseStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StatusCode != 0 {
		n += 1 + sovKubeEvent(uint64(m.StatusCode))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovKubeEvent(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *KubernetesEvent_User) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovKubeEvent(uint64(l))
	}
	if len(m.Groups) > 0 {
		for _, s := range m.Groups {
			l = len(s)
			n += 1 + l + sovKubeEvent(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovKubeEvent(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozKubeEvent(x uint64) (n int) {
	return sovKubeEvent(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *KubernetesEvent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKubeEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: KubernetesEvent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: KubernetesEvent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Object", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Object == nil {
				m.Object = &KubernetesEvent_Object{}
			}
			if err := m.Object.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Timestamp == nil {
				m.Timestamp = &types.Timestamp{}
			}
			if err := m.Timestamp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiVerb", wireType)
			}
			m.ApiVerb = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApiVerb |= KubernetesEvent_APIVerb(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PodExecArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &KubernetesEvent_PodExecArgs{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ObjectArgs = &KubernetesEvent_PodExecArgs_{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PodPortForwardArgs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &KubernetesEvent_PodPortForwardArgs{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ObjectArgs = &KubernetesEvent_PodPortForwardArgs_{v}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.User == nil {
				m.User = &KubernetesEvent_User{}
			}
			if err := m.User.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImpersonatedUser", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ImpersonatedUser == nil {
				m.ImpersonatedUser = &KubernetesEvent_User{}
			}
			if err := m.ImpersonatedUser.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceIps", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SourceIps = append(m.SourceIps, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserAgent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserAgent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResponseStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ResponseStatus == nil {
				m.ResponseStatus = &KubernetesEvent_ResponseStatus{}
			}
			if err := m.ResponseStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestUri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestUri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKubeEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *KubernetesEvent_Object) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKubeEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Object: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Object: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resource", wireType)
			}
			m.Resource = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Resource |= KubernetesEvent_Object_Resource(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKubeEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *KubernetesEvent_PodExecArgs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKubeEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PodExecArgs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PodExecArgs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Container", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Container = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Commands", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Commands = append(m.Commands, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKubeEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *KubernetesEvent_PodPortForwardArgs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKubeEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PodPortForwardArgs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PodPortForwardArgs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowKubeEvent
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Ports = append(m.Ports, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowKubeEvent
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthKubeEvent
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthKubeEvent
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Ports) == 0 {
					m.Ports = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowKubeEvent
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Ports = append(m.Ports, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Ports", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipKubeEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *KubernetesEvent_ResponseStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKubeEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResponseStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResponseStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusCode", wireType)
			}
			m.StatusCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StatusCode |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKubeEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *KubernetesEvent_User) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowKubeEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: User: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: User: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Groups", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthKubeEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Groups = append(m.Groups, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipKubeEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthKubeEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipKubeEvent(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowKubeEvent
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowKubeEvent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthKubeEvent
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupKubeEvent
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthKubeEvent
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthKubeEvent        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowKubeEvent          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupKubeEvent = fmt.Errorf("proto: unexpected end of group")
)
