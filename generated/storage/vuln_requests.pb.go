// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: storage/vuln_requests.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Indicates the status of a request. Requests canceled by the user before they are acted upon by the approver
// are not tracked/persisted (with the exception of audit logs if it is turned on).
type RequestStatus int32

const (
	// Default request state. It indicates that the request has not been fulfilled and that an action (approve/deny) is required.
	RequestStatus_PENDING RequestStatus = 0
	// Indicates that the request has been approved by the approver.
	RequestStatus_APPROVED RequestStatus = 1
	// Indicates that the request has been denied by the approver.
	RequestStatus_DENIED RequestStatus = 2
	// Indicates that the original request was approved, but an update is still pending an approval or denial.
	RequestStatus_APPROVED_PENDING_UPDATE RequestStatus = 3
)

// Enum value maps for RequestStatus.
var (
	RequestStatus_name = map[int32]string{
		0: "PENDING",
		1: "APPROVED",
		2: "DENIED",
		3: "APPROVED_PENDING_UPDATE",
	}
	RequestStatus_value = map[string]int32{
		"PENDING":                 0,
		"APPROVED":                1,
		"DENIED":                  2,
		"APPROVED_PENDING_UPDATE": 3,
	}
)

func (x RequestStatus) Enum() *RequestStatus {
	p := new(RequestStatus)
	*p = x
	return p
}

func (x RequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_vuln_requests_proto_enumTypes[0].Descriptor()
}

func (RequestStatus) Type() protoreflect.EnumType {
	return &file_storage_vuln_requests_proto_enumTypes[0]
}

func (x RequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestStatus.Descriptor instead.
func (RequestStatus) EnumDescriptor() ([]byte, []int) {
	return file_storage_vuln_requests_proto_rawDescGZIP(), []int{0}
}

type RequestExpiry_ExpiryType int32

const (
	RequestExpiry_TIME            RequestExpiry_ExpiryType = 0
	RequestExpiry_ALL_CVE_FIXABLE RequestExpiry_ExpiryType = 1
	RequestExpiry_ANY_CVE_FIXABLE RequestExpiry_ExpiryType = 2
)

// Enum value maps for RequestExpiry_ExpiryType.
var (
	RequestExpiry_ExpiryType_name = map[int32]string{
		0: "TIME",
		1: "ALL_CVE_FIXABLE",
		2: "ANY_CVE_FIXABLE",
	}
	RequestExpiry_ExpiryType_value = map[string]int32{
		"TIME":            0,
		"ALL_CVE_FIXABLE": 1,
		"ANY_CVE_FIXABLE": 2,
	}
)

func (x RequestExpiry_ExpiryType) Enum() *RequestExpiry_ExpiryType {
	p := new(RequestExpiry_ExpiryType)
	*p = x
	return p
}

func (x RequestExpiry_ExpiryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestExpiry_ExpiryType) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_vuln_requests_proto_enumTypes[1].Descriptor()
}

func (RequestExpiry_ExpiryType) Type() protoreflect.EnumType {
	return &file_storage_vuln_requests_proto_enumTypes[1]
}

func (x RequestExpiry_ExpiryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestExpiry_ExpiryType.Descriptor instead.
func (RequestExpiry_ExpiryType) EnumDescriptor() ([]byte, []int) {
	return file_storage_vuln_requests_proto_rawDescGZIP(), []int{1, 0}
}

type RequestComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message   string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	User      *SlimUser              `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty" sql:"ignore_labels(User ID)"` // @gotags: sql:"ignore_labels(User ID)"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *RequestComment) Reset() {
	*x = RequestComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_vuln_requests_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestComment) ProtoMessage() {}

func (x *RequestComment) ProtoReflect() protoreflect.Message {
	mi := &file_storage_vuln_requests_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestComment.ProtoReflect.Descriptor instead.
func (*RequestComment) Descriptor() ([]byte, []int) {
	return file_storage_vuln_requests_proto_rawDescGZIP(), []int{0}
}

func (x *RequestComment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestComment) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RequestComment) GetUser() *SlimUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RequestComment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type RequestExpiry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Expiry:
	//
	//	*RequestExpiry_ExpiresWhenFixed
	//	*RequestExpiry_ExpiresOn
	Expiry isRequestExpiry_Expiry `protobuf_oneof:"expiry"`
	// This field is under development, DO NOT USE FOR NON-DEVELOPMENT PURPOSES.
	// This field can be used only for deferral requests.
	// This field indicates the type of expiry set for the request.
	// `TIME` indicates that the request has a fixed expiry time. If used, `expires_on` must be set.
	// `ALL_CVE_FIXABLE` indicates the request expires if all CVEs in the request is fixable.
	// `ANY_CVE_FIXABLE` indicates the request expires if any CVE in the request is fixable.
	ExpiryType RequestExpiry_ExpiryType `protobuf:"varint,3,opt,name=expiry_type,json=expiryType,proto3,enum=storage.RequestExpiry_ExpiryType" json:"expiry_type,omitempty" search:"Expiry Type"` // @gotags: search:"Expiry Type"
}

func (x *RequestExpiry) Reset() {
	*x = RequestExpiry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_vuln_requests_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestExpiry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestExpiry) ProtoMessage() {}

func (x *RequestExpiry) ProtoReflect() protoreflect.Message {
	mi := &file_storage_vuln_requests_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestExpiry.ProtoReflect.Descriptor instead.
func (*RequestExpiry) Descriptor() ([]byte, []int) {
	return file_storage_vuln_requests_proto_rawDescGZIP(), []int{1}
}

func (m *RequestExpiry) GetExpiry() isRequestExpiry_Expiry {
	if m != nil {
		return m.Expiry
	}
	return nil
}

func (x *RequestExpiry) GetExpiresWhenFixed() bool {
	if x, ok := x.GetExpiry().(*RequestExpiry_ExpiresWhenFixed); ok {
		return x.ExpiresWhenFixed
	}
	return false
}

func (x *RequestExpiry) GetExpiresOn() *timestamppb.Timestamp {
	if x, ok := x.GetExpiry().(*RequestExpiry_ExpiresOn); ok {
		return x.ExpiresOn
	}
	return nil
}

func (x *RequestExpiry) GetExpiryType() RequestExpiry_ExpiryType {
	if x != nil {
		return x.ExpiryType
	}
	return RequestExpiry_TIME
}

type isRequestExpiry_Expiry interface {
	isRequestExpiry_Expiry()
}

type RequestExpiry_ExpiresWhenFixed struct {
	// Indicates that this request expires when the associated vulnerability is fixed.
	ExpiresWhenFixed bool `protobuf:"varint,1,opt,name=expires_when_fixed,json=expiresWhenFixed,proto3,oneof" search:"Request Expires When Fixed"` // @gotags: search:"Request Expires When Fixed"
}

type RequestExpiry_ExpiresOn struct {
	// Indicates the timestamp when this request expires.
	ExpiresOn *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expires_on,json=expiresOn,proto3,oneof" search:"Request Expiry Time"` // @gotags: search:"Request Expiry Time"
}

func (*RequestExpiry_ExpiresWhenFixed) isRequestExpiry_Expiry() {}

func (*RequestExpiry_ExpiresOn) isRequestExpiry_Expiry() {}

type DeferralRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expiry *RequestExpiry `protobuf:"bytes,1,opt,name=expiry,proto3" json:"expiry,omitempty"`
}

func (x *DeferralRequest) Reset() {
	*x = DeferralRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_vuln_requests_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeferralRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeferralRequest) ProtoMessage() {}

func (x *DeferralRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storage_vuln_requests_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeferralRequest.ProtoReflect.Descriptor instead.
func (*DeferralRequest) Descriptor() ([]byte, []int) {
	return file_storage_vuln_requests_proto_rawDescGZIP(), []int{2}
}

func (x *DeferralRequest) GetExpiry() *RequestExpiry {
	if x != nil {
		return x.Expiry
	}
	return nil
}

type FalsePositiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FalsePositiveRequest) Reset() {
	*x = FalsePositiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_vuln_requests_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FalsePositiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FalsePositiveRequest) ProtoMessage() {}

func (x *FalsePositiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storage_vuln_requests_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FalsePositiveRequest.ProtoReflect.Descriptor instead.
func (*FalsePositiveRequest) Descriptor() ([]byte, []int) {
	return file_storage_vuln_requests_proto_rawDescGZIP(), []int{3}
}

type DeferralUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CVEs   []string       `protobuf:"bytes,1,rep,name=CVEs,proto3" json:"CVEs,omitempty" search:"Deferral Update CVEs"`     // @gotags: search:"Deferral Update CVEs"
	Expiry *RequestExpiry `protobuf:"bytes,2,opt,name=expiry,proto3" json:"expiry,omitempty" search:"-"` // @gotags: search:"-"
}

func (x *DeferralUpdate) Reset() {
	*x = DeferralUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_vuln_requests_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeferralUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeferralUpdate) ProtoMessage() {}

func (x *DeferralUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_storage_vuln_requests_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeferralUpdate.ProtoReflect.Descriptor instead.
func (*DeferralUpdate) Descriptor() ([]byte, []int) {
	return file_storage_vuln_requests_proto_rawDescGZIP(), []int{4}
}

func (x *DeferralUpdate) GetCVEs() []string {
	if x != nil {
		return x.CVEs
	}
	return nil
}

func (x *DeferralUpdate) GetExpiry() *RequestExpiry {
	if x != nil {
		return x.Expiry
	}
	return nil
}

type FalsePositiveUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CVEs []string `protobuf:"bytes,1,rep,name=CVEs,proto3" json:"CVEs,omitempty" search:"False Positive Update CVEs"` // @gotags: search:"False Positive Update CVEs"
}

func (x *FalsePositiveUpdate) Reset() {
	*x = FalsePositiveUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_vuln_requests_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FalsePositiveUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FalsePositiveUpdate) ProtoMessage() {}

func (x *FalsePositiveUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_storage_vuln_requests_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FalsePositiveUpdate.ProtoReflect.Descriptor instead.
func (*FalsePositiveUpdate) Descriptor() ([]byte, []int) {
	return file_storage_vuln_requests_proto_rawDescGZIP(), []int{5}
}

func (x *FalsePositiveUpdate) GetCVEs() []string {
	if x != nil {
		return x.CVEs
	}
	return nil
}

type Requester struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" search:"Requester User ID"`     // @gotags: search:"Requester User ID"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" search:"Requester User Name"` // @gotags: search:"Requester User Name"
}

func (x *Requester) Reset() {
	*x = Requester{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_vuln_requests_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Requester) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Requester) ProtoMessage() {}

func (x *Requester) ProtoReflect() protoreflect.Message {
	mi := &file_storage_vuln_requests_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Requester.ProtoReflect.Descriptor instead.
func (*Requester) Descriptor() ([]byte, []int) {
	return file_storage_vuln_requests_proto_rawDescGZIP(), []int{6}
}

func (x *Requester) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Requester) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Approver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" search:"Approver User ID"`     // @gotags: search:"Approver User ID"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" search:"Approver User Name"` // @gotags: search:"Approver User Name"
}

func (x *Approver) Reset() {
	*x = Approver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_vuln_requests_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Approver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Approver) ProtoMessage() {}

func (x *Approver) ProtoReflect() protoreflect.Message {
	mi := &file_storage_vuln_requests_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Approver.ProtoReflect.Descriptor instead.
func (*Approver) Descriptor() ([]byte, []int) {
	return file_storage_vuln_requests_proto_rawDescGZIP(), []int{7}
}

func (x *Approver) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Approver) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Next available tag: 30
// VulnerabilityRequest encapsulates a request such as deferral request and false-positive request.
type VulnerabilityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" sql:"pk"`      // @gotags: sql:"pk"
	Name string `protobuf:"bytes,26,opt,name=name,proto3" json:"name,omitempty" search:"Request Name" sql:"unique"` // @gotags: search:"Request Name" sql:"unique"
	// Indicates the state the vulnerabilities will move to once the request is complete.
	TargetState VulnerabilityState `protobuf:"varint,2,opt,name=target_state,json=targetState,proto3,enum=storage.VulnerabilityState" json:"target_state,omitempty" search:"Requested Vulnerability State"` // @gotags: search:"Requested Vulnerability State"
	// Indicates the status of a request.
	Status RequestStatus `protobuf:"varint,3,opt,name=status,proto3,enum=storage.RequestStatus" json:"status,omitempty" search:"Request Status"` // @gotags: search:"Request Status"
	// Indicates if this request is a historical request that is no longer in effect
	// due to deferral expiry, cancellation, or restarting cve observation.
	Expired bool `protobuf:"varint,4,opt,name=expired,proto3" json:"expired,omitempty" search:"Expired Request"` // @gotags: search:"Expired Request"
	// Deprecated: Marked as deprecated in storage/vuln_requests.proto.
	Requestor *SlimUser `protobuf:"bytes,5,opt,name=requestor,proto3" json:"requestor,omitempty" sql:"ignore_labels(User ID)"` // @gotags: sql:"ignore_labels(User ID)"
	// Deprecated: Marked as deprecated in storage/vuln_requests.proto.
	Approvers   []*SlimUser                 `protobuf:"bytes,6,rep,name=approvers,proto3" json:"approvers,omitempty" sql:"ignore_labels(User ID)"`                        // @gotags: sql:"ignore_labels(User ID)"
	CreatedAt   *timestamppb.Timestamp      `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" search:"Created Time"`       // @gotags: search:"Created Time"
	LastUpdated *timestamppb.Timestamp      `protobuf:"bytes,8,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty" search:"Last Updated"` // @gotags: search:"Last Updated"
	Comments    []*RequestComment           `protobuf:"bytes,9,rep,name=comments,proto3" json:"comments,omitempty"`
	Scope       *VulnerabilityRequest_Scope `protobuf:"bytes,10,opt,name=scope,proto3" json:"scope,omitempty"`
	RequesterV2 *Requester                  `protobuf:"bytes,28,opt,name=requester_v2,json=requesterV2,proto3" json:"requester_v2,omitempty"`
	ApproversV2 []*Approver                 `protobuf:"bytes,29,rep,name=approvers_v2,json=approversV2,proto3" json:"approvers_v2,omitempty"`
	// 11 to 15 reserved for the request type oneof.
	//
	// Types that are assignable to Req:
	//
	//	*VulnerabilityRequest_DeferralReq
	//	*VulnerabilityRequest_FpRequest
	Req isVulnerabilityRequest_Req `protobuf_oneof:"req"`
	// 16 to 20 reserved for entities oneof.
	//
	// Types that are assignable to Entities:
	//
	//	*VulnerabilityRequest_Cves
	Entities isVulnerabilityRequest_Entities `protobuf_oneof:"entities"`
	// 21 to 25 reserved for the updated request type oneof.
	//
	// Types that are assignable to UpdatedReq:
	//
	//	*VulnerabilityRequest_UpdatedDeferralReq
	//	*VulnerabilityRequest_DeferralUpdate
	//	*VulnerabilityRequest_FalsePositiveUpdate
	UpdatedReq isVulnerabilityRequest_UpdatedReq `protobuf_oneof:"updated_req"`
}

func (x *VulnerabilityRequest) Reset() {
	*x = VulnerabilityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_vuln_requests_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnerabilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityRequest) ProtoMessage() {}

func (x *VulnerabilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storage_vuln_requests_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnerabilityRequest.ProtoReflect.Descriptor instead.
func (*VulnerabilityRequest) Descriptor() ([]byte, []int) {
	return file_storage_vuln_requests_proto_rawDescGZIP(), []int{8}
}

func (x *VulnerabilityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VulnerabilityRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VulnerabilityRequest) GetTargetState() VulnerabilityState {
	if x != nil {
		return x.TargetState
	}
	return VulnerabilityState_OBSERVED
}

func (x *VulnerabilityRequest) GetStatus() RequestStatus {
	if x != nil {
		return x.Status
	}
	return RequestStatus_PENDING
}

func (x *VulnerabilityRequest) GetExpired() bool {
	if x != nil {
		return x.Expired
	}
	return false
}

// Deprecated: Marked as deprecated in storage/vuln_requests.proto.
func (x *VulnerabilityRequest) GetRequestor() *SlimUser {
	if x != nil {
		return x.Requestor
	}
	return nil
}

// Deprecated: Marked as deprecated in storage/vuln_requests.proto.
func (x *VulnerabilityRequest) GetApprovers() []*SlimUser {
	if x != nil {
		return x.Approvers
	}
	return nil
}

func (x *VulnerabilityRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VulnerabilityRequest) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *VulnerabilityRequest) GetComments() []*RequestComment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *VulnerabilityRequest) GetScope() *VulnerabilityRequest_Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *VulnerabilityRequest) GetRequesterV2() *Requester {
	if x != nil {
		return x.RequesterV2
	}
	return nil
}

func (x *VulnerabilityRequest) GetApproversV2() []*Approver {
	if x != nil {
		return x.ApproversV2
	}
	return nil
}

func (m *VulnerabilityRequest) GetReq() isVulnerabilityRequest_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (x *VulnerabilityRequest) GetDeferralReq() *DeferralRequest {
	if x, ok := x.GetReq().(*VulnerabilityRequest_DeferralReq); ok {
		return x.DeferralReq
	}
	return nil
}

func (x *VulnerabilityRequest) GetFpRequest() *FalsePositiveRequest {
	if x, ok := x.GetReq().(*VulnerabilityRequest_FpRequest); ok {
		return x.FpRequest
	}
	return nil
}

func (m *VulnerabilityRequest) GetEntities() isVulnerabilityRequest_Entities {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (x *VulnerabilityRequest) GetCves() *VulnerabilityRequest_CVEs {
	if x, ok := x.GetEntities().(*VulnerabilityRequest_Cves); ok {
		return x.Cves
	}
	return nil
}

func (m *VulnerabilityRequest) GetUpdatedReq() isVulnerabilityRequest_UpdatedReq {
	if m != nil {
		return m.UpdatedReq
	}
	return nil
}

// Deprecated: Marked as deprecated in storage/vuln_requests.proto.
func (x *VulnerabilityRequest) GetUpdatedDeferralReq() *DeferralRequest {
	if x, ok := x.GetUpdatedReq().(*VulnerabilityRequest_UpdatedDeferralReq); ok {
		return x.UpdatedDeferralReq
	}
	return nil
}

func (x *VulnerabilityRequest) GetDeferralUpdate() *DeferralUpdate {
	if x, ok := x.GetUpdatedReq().(*VulnerabilityRequest_DeferralUpdate); ok {
		return x.DeferralUpdate
	}
	return nil
}

func (x *VulnerabilityRequest) GetFalsePositiveUpdate() *FalsePositiveUpdate {
	if x, ok := x.GetUpdatedReq().(*VulnerabilityRequest_FalsePositiveUpdate); ok {
		return x.FalsePositiveUpdate
	}
	return nil
}

type isVulnerabilityRequest_Req interface {
	isVulnerabilityRequest_Req()
}

type VulnerabilityRequest_DeferralReq struct {
	DeferralReq *DeferralRequest `protobuf:"bytes,11,opt,name=deferral_req,json=deferralReq,proto3,oneof"`
}

type VulnerabilityRequest_FpRequest struct {
	FpRequest *FalsePositiveRequest `protobuf:"bytes,12,opt,name=fp_request,json=fpRequest,proto3,oneof"`
}

func (*VulnerabilityRequest_DeferralReq) isVulnerabilityRequest_Req() {}

func (*VulnerabilityRequest_FpRequest) isVulnerabilityRequest_Req() {}

type isVulnerabilityRequest_Entities interface {
	isVulnerabilityRequest_Entities()
}

type VulnerabilityRequest_Cves struct {
	Cves *VulnerabilityRequest_CVEs `protobuf:"bytes,16,opt,name=cves,proto3,oneof"`
}

func (*VulnerabilityRequest_Cves) isVulnerabilityRequest_Entities() {}

type isVulnerabilityRequest_UpdatedReq interface {
	isVulnerabilityRequest_UpdatedReq()
}

type VulnerabilityRequest_UpdatedDeferralReq struct {
	// Deprecated: Marked as deprecated in storage/vuln_requests.proto.
	UpdatedDeferralReq *DeferralRequest `protobuf:"bytes,21,opt,name=updated_deferral_req,json=updatedDeferralReq,proto3,oneof" search:"-"` // @gotags: search:"-"
}

type VulnerabilityRequest_DeferralUpdate struct {
	DeferralUpdate *DeferralUpdate `protobuf:"bytes,22,opt,name=deferral_update,json=deferralUpdate,proto3,oneof"`
}

type VulnerabilityRequest_FalsePositiveUpdate struct {
	FalsePositiveUpdate *FalsePositiveUpdate `protobuf:"bytes,23,opt,name=false_positive_update,json=falsePositiveUpdate,proto3,oneof"`
}

func (*VulnerabilityRequest_UpdatedDeferralReq) isVulnerabilityRequest_UpdatedReq() {}

func (*VulnerabilityRequest_DeferralUpdate) isVulnerabilityRequest_UpdatedReq() {}

func (*VulnerabilityRequest_FalsePositiveUpdate) isVulnerabilityRequest_UpdatedReq() {}

type VulnerabilityRequest_CVEs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// These are (NVD) vulnerability identifiers, `cve` field of `storage.CVE`, and *not* the `id` field.
	// For example, CVE-2021-44832.
	Cves []string `protobuf:"bytes,1,rep,name=cves,proto3" json:"cves,omitempty" search:"CVE"` // @gotags: search:"CVE"
}

func (x *VulnerabilityRequest_CVEs) Reset() {
	*x = VulnerabilityRequest_CVEs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_vuln_requests_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnerabilityRequest_CVEs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityRequest_CVEs) ProtoMessage() {}

func (x *VulnerabilityRequest_CVEs) ProtoReflect() protoreflect.Message {
	mi := &file_storage_vuln_requests_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnerabilityRequest_CVEs.ProtoReflect.Descriptor instead.
func (*VulnerabilityRequest_CVEs) Descriptor() ([]byte, []int) {
	return file_storage_vuln_requests_proto_rawDescGZIP(), []int{8, 0}
}

func (x *VulnerabilityRequest_CVEs) GetCves() []string {
	if x != nil {
		return x.Cves
	}
	return nil
}

type VulnerabilityRequest_Scope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Info:
	//
	//	*VulnerabilityRequest_Scope_ImageScope
	//	*VulnerabilityRequest_Scope_GlobalScope
	Info isVulnerabilityRequest_Scope_Info `protobuf_oneof:"info"`
}

func (x *VulnerabilityRequest_Scope) Reset() {
	*x = VulnerabilityRequest_Scope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_vuln_requests_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnerabilityRequest_Scope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityRequest_Scope) ProtoMessage() {}

func (x *VulnerabilityRequest_Scope) ProtoReflect() protoreflect.Message {
	mi := &file_storage_vuln_requests_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnerabilityRequest_Scope.ProtoReflect.Descriptor instead.
func (*VulnerabilityRequest_Scope) Descriptor() ([]byte, []int) {
	return file_storage_vuln_requests_proto_rawDescGZIP(), []int{8, 1}
}

func (m *VulnerabilityRequest_Scope) GetInfo() isVulnerabilityRequest_Scope_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *VulnerabilityRequest_Scope) GetImageScope() *VulnerabilityRequest_Scope_Image {
	if x, ok := x.GetInfo().(*VulnerabilityRequest_Scope_ImageScope); ok {
		return x.ImageScope
	}
	return nil
}

// Deprecated: Marked as deprecated in storage/vuln_requests.proto.
func (x *VulnerabilityRequest_Scope) GetGlobalScope() *VulnerabilityRequest_Scope_Global {
	if x, ok := x.GetInfo().(*VulnerabilityRequest_Scope_GlobalScope); ok {
		return x.GlobalScope
	}
	return nil
}

type isVulnerabilityRequest_Scope_Info interface {
	isVulnerabilityRequest_Scope_Info()
}

type VulnerabilityRequest_Scope_ImageScope struct {
	// This field can be used to apply the request to selected images.
	ImageScope *VulnerabilityRequest_Scope_Image `protobuf:"bytes,1,opt,name=image_scope,json=imageScope,proto3,oneof"`
}

type VulnerabilityRequest_Scope_GlobalScope struct {
	// If set, the scope of this request is system-wide.
	//
	// Deprecated: Marked as deprecated in storage/vuln_requests.proto.
	GlobalScope *VulnerabilityRequest_Scope_Global `protobuf:"bytes,2,opt,name=global_scope,json=globalScope,proto3,oneof"`
}

func (*VulnerabilityRequest_Scope_ImageScope) isVulnerabilityRequest_Scope_Info() {}

func (*VulnerabilityRequest_Scope_GlobalScope) isVulnerabilityRequest_Scope_Info() {}

type VulnerabilityRequest_Scope_Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registry string `protobuf:"bytes,1,opt,name=registry,proto3" json:"registry,omitempty" search:"Image Registry Scope"` // @gotags: search:"Image Registry Scope"
	Remote   string `protobuf:"bytes,2,opt,name=remote,proto3" json:"remote,omitempty" search:"Image Remote Scope"`     // @gotags: search:"Image Remote Scope"
	Tag      string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty" search:"Image Tag Scope"`           // @gotags: search:"Image Tag Scope"
}

func (x *VulnerabilityRequest_Scope_Image) Reset() {
	*x = VulnerabilityRequest_Scope_Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_vuln_requests_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnerabilityRequest_Scope_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityRequest_Scope_Image) ProtoMessage() {}

func (x *VulnerabilityRequest_Scope_Image) ProtoReflect() protoreflect.Message {
	mi := &file_storage_vuln_requests_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnerabilityRequest_Scope_Image.ProtoReflect.Descriptor instead.
func (*VulnerabilityRequest_Scope_Image) Descriptor() ([]byte, []int) {
	return file_storage_vuln_requests_proto_rawDescGZIP(), []int{8, 1, 0}
}

func (x *VulnerabilityRequest_Scope_Image) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

func (x *VulnerabilityRequest_Scope_Image) GetRemote() string {
	if x != nil {
		return x.Remote
	}
	return ""
}

func (x *VulnerabilityRequest_Scope_Image) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type VulnerabilityRequest_Scope_Global struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VulnerabilityRequest_Scope_Global) Reset() {
	*x = VulnerabilityRequest_Scope_Global{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_vuln_requests_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnerabilityRequest_Scope_Global) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityRequest_Scope_Global) ProtoMessage() {}

func (x *VulnerabilityRequest_Scope_Global) ProtoReflect() protoreflect.Message {
	mi := &file_storage_vuln_requests_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnerabilityRequest_Scope_Global.ProtoReflect.Descriptor instead.
func (*VulnerabilityRequest_Scope_Global) Descriptor() ([]byte, []int) {
	return file_storage_vuln_requests_proto_rawDescGZIP(), []int{8, 1, 1}
}

var File_storage_vuln_requests_proto protoreflect.FileDescriptor

var file_storage_vuln_requests_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x75, 0x6c, 0x6e, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2f, 0x63, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c,
	0x01, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x6c, 0x69, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8c, 0x02,
	0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12,
	0x2e, 0x0a, 0x12, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x10, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x57, 0x68, 0x65, 0x6e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x12,
	0x3b, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48,
	0x00, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x4f, 0x6e, 0x12, 0x42, 0x0a, 0x0b,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x2e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x40, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x4c, 0x4c, 0x5f,
	0x43, 0x56, 0x45, 0x5f, 0x46, 0x49, 0x58, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x41, 0x4e, 0x59, 0x5f, 0x43, 0x56, 0x45, 0x5f, 0x46, 0x49, 0x58, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x02, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x22, 0x41, 0x0a, 0x0f,
	0x44, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x22,
	0x16, 0x0a, 0x14, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x56, 0x45,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x43, 0x56, 0x45, 0x73, 0x12, 0x2e, 0x0a,
	0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x22, 0x29, 0x0a,
	0x13, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x56, 0x45, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x43, 0x56, 0x45, 0x73, 0x22, 0x2f, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x08, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xf4, 0x0a, 0x0a, 0x14, 0x56, 0x75,
	0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x12, 0x33, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6c,
	0x69, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x53, 0x6c, 0x69, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x09, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x76, 0x32, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x56, 0x32, 0x12, 0x34, 0x0a, 0x0c, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x5f, 0x76, 0x32, 0x18, 0x1d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x72, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x56,
	0x32, 0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x5f, 0x72, 0x65,
	0x71, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x44, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x12, 0x3e, 0x0a, 0x0a, 0x66, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x46,
	0x61, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x66, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x38, 0x0a, 0x04, 0x63, 0x76, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x56,
	0x45, 0x73, 0x48, 0x01, 0x52, 0x04, 0x63, 0x76, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x14, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x02, 0x18, 0x01, 0x48, 0x02, 0x52, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x44, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x42, 0x0a, 0x0f,
	0x64, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x44, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x02,
	0x52, 0x0e, 0x64, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x52, 0x0a, 0x15, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x02, 0x52,
	0x13, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x1a, 0x1a, 0x0a, 0x04, 0x43, 0x56, 0x45, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x76, 0x65, 0x73,
	0x1a, 0x8b, 0x02, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x42, 0x02, 0x18, 0x01, 0x48, 0x00,
	0x52, 0x0b, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x1a, 0x4d, 0x0a,
	0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x1a, 0x08, 0x0a, 0x06,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x05,
	0x0a, 0x03, 0x72, 0x65, 0x71, 0x42, 0x0a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x71,
	0x2a, 0x53, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x50, 0x50, 0x52,
	0x4f, 0x56, 0x45, 0x44, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x10, 0x03, 0x42, 0x2e, 0x0a, 0x19, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x72, 0x6f, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x5a, 0x11, 0x2e, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x3b, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_storage_vuln_requests_proto_rawDescOnce sync.Once
	file_storage_vuln_requests_proto_rawDescData = file_storage_vuln_requests_proto_rawDesc
)

func file_storage_vuln_requests_proto_rawDescGZIP() []byte {
	file_storage_vuln_requests_proto_rawDescOnce.Do(func() {
		file_storage_vuln_requests_proto_rawDescData = protoimpl.X.CompressGZIP(file_storage_vuln_requests_proto_rawDescData)
	})
	return file_storage_vuln_requests_proto_rawDescData
}

var file_storage_vuln_requests_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_storage_vuln_requests_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_storage_vuln_requests_proto_goTypes = []any{
	(RequestStatus)(0),                        // 0: storage.RequestStatus
	(RequestExpiry_ExpiryType)(0),             // 1: storage.RequestExpiry.ExpiryType
	(*RequestComment)(nil),                    // 2: storage.RequestComment
	(*RequestExpiry)(nil),                     // 3: storage.RequestExpiry
	(*DeferralRequest)(nil),                   // 4: storage.DeferralRequest
	(*FalsePositiveRequest)(nil),              // 5: storage.FalsePositiveRequest
	(*DeferralUpdate)(nil),                    // 6: storage.DeferralUpdate
	(*FalsePositiveUpdate)(nil),               // 7: storage.FalsePositiveUpdate
	(*Requester)(nil),                         // 8: storage.Requester
	(*Approver)(nil),                          // 9: storage.Approver
	(*VulnerabilityRequest)(nil),              // 10: storage.VulnerabilityRequest
	(*VulnerabilityRequest_CVEs)(nil),         // 11: storage.VulnerabilityRequest.CVEs
	(*VulnerabilityRequest_Scope)(nil),        // 12: storage.VulnerabilityRequest.Scope
	(*VulnerabilityRequest_Scope_Image)(nil),  // 13: storage.VulnerabilityRequest.Scope.Image
	(*VulnerabilityRequest_Scope_Global)(nil), // 14: storage.VulnerabilityRequest.Scope.Global
	(*SlimUser)(nil),                          // 15: storage.SlimUser
	(*timestamppb.Timestamp)(nil),             // 16: google.protobuf.Timestamp
	(VulnerabilityState)(0),                   // 17: storage.VulnerabilityState
}
var file_storage_vuln_requests_proto_depIdxs = []int32{
	15, // 0: storage.RequestComment.user:type_name -> storage.SlimUser
	16, // 1: storage.RequestComment.created_at:type_name -> google.protobuf.Timestamp
	16, // 2: storage.RequestExpiry.expires_on:type_name -> google.protobuf.Timestamp
	1,  // 3: storage.RequestExpiry.expiry_type:type_name -> storage.RequestExpiry.ExpiryType
	3,  // 4: storage.DeferralRequest.expiry:type_name -> storage.RequestExpiry
	3,  // 5: storage.DeferralUpdate.expiry:type_name -> storage.RequestExpiry
	17, // 6: storage.VulnerabilityRequest.target_state:type_name -> storage.VulnerabilityState
	0,  // 7: storage.VulnerabilityRequest.status:type_name -> storage.RequestStatus
	15, // 8: storage.VulnerabilityRequest.requestor:type_name -> storage.SlimUser
	15, // 9: storage.VulnerabilityRequest.approvers:type_name -> storage.SlimUser
	16, // 10: storage.VulnerabilityRequest.created_at:type_name -> google.protobuf.Timestamp
	16, // 11: storage.VulnerabilityRequest.last_updated:type_name -> google.protobuf.Timestamp
	2,  // 12: storage.VulnerabilityRequest.comments:type_name -> storage.RequestComment
	12, // 13: storage.VulnerabilityRequest.scope:type_name -> storage.VulnerabilityRequest.Scope
	8,  // 14: storage.VulnerabilityRequest.requester_v2:type_name -> storage.Requester
	9,  // 15: storage.VulnerabilityRequest.approvers_v2:type_name -> storage.Approver
	4,  // 16: storage.VulnerabilityRequest.deferral_req:type_name -> storage.DeferralRequest
	5,  // 17: storage.VulnerabilityRequest.fp_request:type_name -> storage.FalsePositiveRequest
	11, // 18: storage.VulnerabilityRequest.cves:type_name -> storage.VulnerabilityRequest.CVEs
	4,  // 19: storage.VulnerabilityRequest.updated_deferral_req:type_name -> storage.DeferralRequest
	6,  // 20: storage.VulnerabilityRequest.deferral_update:type_name -> storage.DeferralUpdate
	7,  // 21: storage.VulnerabilityRequest.false_positive_update:type_name -> storage.FalsePositiveUpdate
	13, // 22: storage.VulnerabilityRequest.Scope.image_scope:type_name -> storage.VulnerabilityRequest.Scope.Image
	14, // 23: storage.VulnerabilityRequest.Scope.global_scope:type_name -> storage.VulnerabilityRequest.Scope.Global
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_storage_vuln_requests_proto_init() }
func file_storage_vuln_requests_proto_init() {
	if File_storage_vuln_requests_proto != nil {
		return
	}
	file_storage_cve_proto_init()
	file_storage_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_storage_vuln_requests_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*RequestComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_vuln_requests_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RequestExpiry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_vuln_requests_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DeferralRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_vuln_requests_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*FalsePositiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_vuln_requests_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeferralUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_vuln_requests_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*FalsePositiveUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_vuln_requests_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Requester); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_vuln_requests_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Approver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_vuln_requests_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*VulnerabilityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_vuln_requests_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*VulnerabilityRequest_CVEs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_vuln_requests_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*VulnerabilityRequest_Scope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_vuln_requests_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*VulnerabilityRequest_Scope_Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_vuln_requests_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*VulnerabilityRequest_Scope_Global); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_storage_vuln_requests_proto_msgTypes[1].OneofWrappers = []any{
		(*RequestExpiry_ExpiresWhenFixed)(nil),
		(*RequestExpiry_ExpiresOn)(nil),
	}
	file_storage_vuln_requests_proto_msgTypes[8].OneofWrappers = []any{
		(*VulnerabilityRequest_DeferralReq)(nil),
		(*VulnerabilityRequest_FpRequest)(nil),
		(*VulnerabilityRequest_Cves)(nil),
		(*VulnerabilityRequest_UpdatedDeferralReq)(nil),
		(*VulnerabilityRequest_DeferralUpdate)(nil),
		(*VulnerabilityRequest_FalsePositiveUpdate)(nil),
	}
	file_storage_vuln_requests_proto_msgTypes[10].OneofWrappers = []any{
		(*VulnerabilityRequest_Scope_ImageScope)(nil),
		(*VulnerabilityRequest_Scope_GlobalScope)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_storage_vuln_requests_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_vuln_requests_proto_goTypes,
		DependencyIndexes: file_storage_vuln_requests_proto_depIdxs,
		EnumInfos:         file_storage_vuln_requests_proto_enumTypes,
		MessageInfos:      file_storage_vuln_requests_proto_msgTypes,
	}.Build()
	File_storage_vuln_requests_proto = out.File
	file_storage_vuln_requests_proto_rawDesc = nil
	file_storage_vuln_requests_proto_goTypes = nil
	file_storage_vuln_requests_proto_depIdxs = nil
}
