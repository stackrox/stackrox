// Code generated by protoc-gen-go-compat. DO NOT EDIT.

package storage

func (m *MitreTactic) Size() int                   { return m.SizeVT() }
func (m *MitreTactic) Clone() *MitreTactic         { return m.CloneVT() }
func (m *MitreTactic) Marshal() ([]byte, error)    { return m.MarshalVT() }
func (m *MitreTactic) Unmarshal(dAtA []byte) error { return m.UnmarshalVT(dAtA) }

func (m *MitreTechnique) Size() int                   { return m.SizeVT() }
func (m *MitreTechnique) Clone() *MitreTechnique      { return m.CloneVT() }
func (m *MitreTechnique) Marshal() ([]byte, error)    { return m.MarshalVT() }
func (m *MitreTechnique) Unmarshal(dAtA []byte) error { return m.UnmarshalVT(dAtA) }

func (m *MitreAttackVector) Size() int                   { return m.SizeVT() }
func (m *MitreAttackVector) Clone() *MitreAttackVector   { return m.CloneVT() }
func (m *MitreAttackVector) Marshal() ([]byte, error)    { return m.MarshalVT() }
func (m *MitreAttackVector) Unmarshal(dAtA []byte) error { return m.UnmarshalVT(dAtA) }

func (m *MitreAttackMatrix) Size() int                   { return m.SizeVT() }
func (m *MitreAttackMatrix) Clone() *MitreAttackMatrix   { return m.CloneVT() }
func (m *MitreAttackMatrix) Marshal() ([]byte, error)    { return m.MarshalVT() }
func (m *MitreAttackMatrix) Unmarshal(dAtA []byte) error { return m.UnmarshalVT(dAtA) }

func (m *MitreAttackMatrix_MatrixInfo) Size() int                            { return m.SizeVT() }
func (m *MitreAttackMatrix_MatrixInfo) Clone() *MitreAttackMatrix_MatrixInfo { return m.CloneVT() }
func (m *MitreAttackMatrix_MatrixInfo) Marshal() ([]byte, error)             { return m.MarshalVT() }
func (m *MitreAttackMatrix_MatrixInfo) Unmarshal(dAtA []byte) error          { return m.UnmarshalVT(dAtA) }

func (m *MitreAttackBundle) Size() int                   { return m.SizeVT() }
func (m *MitreAttackBundle) Clone() *MitreAttackBundle   { return m.CloneVT() }
func (m *MitreAttackBundle) Marshal() ([]byte, error)    { return m.MarshalVT() }
func (m *MitreAttackBundle) Unmarshal(dAtA []byte) error { return m.UnmarshalVT(dAtA) }
