// Code generated by protoc-gen-go-json. DO NOT EDIT.

package storage

import (
	fmt "fmt"
	strings "strings"
	unsafe "unsafe"
)

func (m *RequestComment) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *RequestComment) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("id")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetMessage(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("message")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetUser(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("user")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetCreatedAt(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("createdAt")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if t := x; t == nil {
			buf.WriteString("null")
		} else {
			tf := t.AsTime().UTC().Format("2006-01-02T15:04:05.000000000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, ".000")
			buf.WriteString("\"" + tf + "Z" + "\"")
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *RequestExpiry) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *RequestExpiry) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetExpiresWhenFixed(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("expiresWhenFixed")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetExpiresOn(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("expiresOn")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if t := x; t == nil {
			buf.WriteString("null")
		} else {
			tf := t.AsTime().UTC().Format("2006-01-02T15:04:05.000000000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, ".000")
			buf.WriteString("\"" + tf + "Z" + "\"")
		}
	}
	if x := m.GetExpiryType(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("expiryType")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	buf.WriteString("}")
	return nil
}

func (m *DeferralRequest) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *DeferralRequest) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetExpiry(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("expiry")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *FalsePositiveRequest) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *FalsePositiveRequest) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	buf.WriteString("}")
	return nil
}

func (m *DeferralUpdate) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *DeferralUpdate) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetCVEs(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("CVEs")
		buf.WriteByte('"')
		buf.WriteByte(':')
		trailingComma = false
		buf.WriteByte('[')
		for _, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			fmt.Fprintf(buf, "%q", v)
		}
		buf.WriteByte(']')
	}
	if x := m.GetExpiry(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("expiry")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *FalsePositiveUpdate) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *FalsePositiveUpdate) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetCVEs(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("CVEs")
		buf.WriteByte('"')
		buf.WriteByte(':')
		trailingComma = false
		buf.WriteByte('[')
		for _, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			fmt.Fprintf(buf, "%q", v)
		}
		buf.WriteByte(']')
	}
	buf.WriteString("}")
	return nil
}

func (m *Requester) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *Requester) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("id")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetName(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("name")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	buf.WriteString("}")
	return nil
}

func (m *Approver) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *Approver) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("id")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetName(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("name")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	buf.WriteString("}")
	return nil
}

func (m *VulnerabilityRequest) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *VulnerabilityRequest) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("id")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetName(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("name")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetTargetState(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("targetState")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetStatus(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("status")
		buf.WriteByte('"')
		buf.WriteByte(':')
		buf.WriteString("\"" + x.String() + "\"")
	}
	if x := m.GetExpired(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("expired")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetRequestor(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("requestor")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetApprovers(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("approvers")
		buf.WriteByte('"')
		buf.WriteByte(':')
		trailingComma = false
		buf.WriteByte('[')
		for _, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			if err := v.marshalJSON(buf); err != nil {
				return err
			}
		}
		buf.WriteByte(']')
	}
	if x := m.GetCreatedAt(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("createdAt")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if t := x; t == nil {
			buf.WriteString("null")
		} else {
			tf := t.AsTime().UTC().Format("2006-01-02T15:04:05.000000000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, ".000")
			buf.WriteString("\"" + tf + "Z" + "\"")
		}
	}
	if x := m.GetLastUpdated(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("lastUpdated")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if t := x; t == nil {
			buf.WriteString("null")
		} else {
			tf := t.AsTime().UTC().Format("2006-01-02T15:04:05.000000000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, ".000")
			buf.WriteString("\"" + tf + "Z" + "\"")
		}
	}
	if x := m.GetComments(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("comments")
		buf.WriteByte('"')
		buf.WriteByte(':')
		trailingComma = false
		buf.WriteByte('[')
		for _, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			if err := v.marshalJSON(buf); err != nil {
				return err
			}
		}
		buf.WriteByte(']')
	}
	if x := m.GetScope(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("scope")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetRequesterV2(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("requesterV2")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetApproversV2(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("approversV2")
		buf.WriteByte('"')
		buf.WriteByte(':')
		trailingComma = false
		buf.WriteByte('[')
		for _, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			if err := v.marshalJSON(buf); err != nil {
				return err
			}
		}
		buf.WriteByte(']')
	}
	if x := m.GetDeferralReq(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("deferralReq")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetFpRequest(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("fpRequest")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetCves(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("cves")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetUpdatedDeferralReq(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("updatedDeferralReq")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetDeferralUpdate(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("deferralUpdate")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetFalsePositiveUpdate(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("falsePositiveUpdate")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *VulnerabilityRequest_CVEs) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *VulnerabilityRequest_CVEs) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetCves(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("cves")
		buf.WriteByte('"')
		buf.WriteByte(':')
		trailingComma = false
		buf.WriteByte('[')
		for _, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			fmt.Fprintf(buf, "%q", v)
		}
		buf.WriteByte(']')
	}
	buf.WriteString("}")
	return nil
}

func (m *VulnerabilityRequest_Scope) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *VulnerabilityRequest_Scope) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetImageScope(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("imageScope")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetGlobalScope(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("globalScope")
		buf.WriteByte('"')
		buf.WriteByte(':')
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *VulnerabilityRequest_Scope_Image) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *VulnerabilityRequest_Scope_Image) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetRegistry(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("registry")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetRemote(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("remote")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetTag(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("tag")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	buf.WriteString("}")
	return nil
}

func (m *VulnerabilityRequest_Scope_Global) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *VulnerabilityRequest_Scope_Global) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	buf.WriteString("}")
	return nil
}
