// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/schedule.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Schedule_IntervalType int32

const (
	Schedule_UNSET   Schedule_IntervalType = 0
	Schedule_DAILY   Schedule_IntervalType = 1
	Schedule_WEEKLY  Schedule_IntervalType = 2
	Schedule_MONTHLY Schedule_IntervalType = 3
)

// Enum value maps for Schedule_IntervalType.
var (
	Schedule_IntervalType_name = map[int32]string{
		0: "UNSET",
		1: "DAILY",
		2: "WEEKLY",
		3: "MONTHLY",
	}
	Schedule_IntervalType_value = map[string]int32{
		"UNSET":   0,
		"DAILY":   1,
		"WEEKLY":  2,
		"MONTHLY": 3,
	}
)

func (x Schedule_IntervalType) Enum() *Schedule_IntervalType {
	p := new(Schedule_IntervalType)
	*p = x
	return p
}

func (x Schedule_IntervalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Schedule_IntervalType) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_schedule_proto_enumTypes[0].Descriptor()
}

func (Schedule_IntervalType) Type() protoreflect.EnumType {
	return &file_storage_schedule_proto_enumTypes[0]
}

func (x Schedule_IntervalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Schedule struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_IntervalType Schedule_IntervalType  `protobuf:"varint,1,opt,name=interval_type,json=intervalType,enum=storage.Schedule_IntervalType"`
	xxx_hidden_Hour         int32                  `protobuf:"varint,2,opt,name=hour"`
	xxx_hidden_Minute       int32                  `protobuf:"varint,3,opt,name=minute"`
	xxx_hidden_Interval     isSchedule_Interval    `protobuf_oneof:"Interval"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	mi := &file_storage_schedule_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_storage_schedule_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Schedule) GetIntervalType() Schedule_IntervalType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_IntervalType
		}
	}
	return Schedule_UNSET
}

func (x *Schedule) GetHour() int32 {
	if x != nil {
		return x.xxx_hidden_Hour
	}
	return 0
}

func (x *Schedule) GetMinute() int32 {
	if x != nil {
		return x.xxx_hidden_Minute
	}
	return 0
}

func (x *Schedule) GetWeekly() *Schedule_WeeklyInterval {
	if x != nil {
		if x, ok := x.xxx_hidden_Interval.(*schedule_Weekly); ok {
			return x.Weekly
		}
	}
	return nil
}

func (x *Schedule) GetDaysOfWeek() *Schedule_DaysOfWeek {
	if x != nil {
		if x, ok := x.xxx_hidden_Interval.(*schedule_DaysOfWeek_); ok {
			return x.DaysOfWeek
		}
	}
	return nil
}

func (x *Schedule) GetDaysOfMonth() *Schedule_DaysOfMonth {
	if x != nil {
		if x, ok := x.xxx_hidden_Interval.(*schedule_DaysOfMonth_); ok {
			return x.DaysOfMonth
		}
	}
	return nil
}

func (x *Schedule) SetIntervalType(v Schedule_IntervalType) {
	x.xxx_hidden_IntervalType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *Schedule) SetHour(v int32) {
	x.xxx_hidden_Hour = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *Schedule) SetMinute(v int32) {
	x.xxx_hidden_Minute = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *Schedule) SetWeekly(v *Schedule_WeeklyInterval) {
	if v == nil {
		x.xxx_hidden_Interval = nil
		return
	}
	x.xxx_hidden_Interval = &schedule_Weekly{v}
}

func (x *Schedule) SetDaysOfWeek(v *Schedule_DaysOfWeek) {
	if v == nil {
		x.xxx_hidden_Interval = nil
		return
	}
	x.xxx_hidden_Interval = &schedule_DaysOfWeek_{v}
}

func (x *Schedule) SetDaysOfMonth(v *Schedule_DaysOfMonth) {
	if v == nil {
		x.xxx_hidden_Interval = nil
		return
	}
	x.xxx_hidden_Interval = &schedule_DaysOfMonth_{v}
}

func (x *Schedule) HasIntervalType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Schedule) HasHour() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Schedule) HasMinute() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Schedule) HasInterval() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Interval != nil
}

func (x *Schedule) HasWeekly() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Interval.(*schedule_Weekly)
	return ok
}

func (x *Schedule) HasDaysOfWeek() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Interval.(*schedule_DaysOfWeek_)
	return ok
}

func (x *Schedule) HasDaysOfMonth() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Interval.(*schedule_DaysOfMonth_)
	return ok
}

func (x *Schedule) ClearIntervalType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_IntervalType = Schedule_UNSET
}

func (x *Schedule) ClearHour() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Hour = 0
}

func (x *Schedule) ClearMinute() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Minute = 0
}

func (x *Schedule) ClearInterval() {
	x.xxx_hidden_Interval = nil
}

func (x *Schedule) ClearWeekly() {
	if _, ok := x.xxx_hidden_Interval.(*schedule_Weekly); ok {
		x.xxx_hidden_Interval = nil
	}
}

func (x *Schedule) ClearDaysOfWeek() {
	if _, ok := x.xxx_hidden_Interval.(*schedule_DaysOfWeek_); ok {
		x.xxx_hidden_Interval = nil
	}
}

func (x *Schedule) ClearDaysOfMonth() {
	if _, ok := x.xxx_hidden_Interval.(*schedule_DaysOfMonth_); ok {
		x.xxx_hidden_Interval = nil
	}
}

const Schedule_Interval_not_set_case case_Schedule_Interval = 0
const Schedule_Weekly_case case_Schedule_Interval = 4
const Schedule_DaysOfWeek_case case_Schedule_Interval = 5
const Schedule_DaysOfMonth_case case_Schedule_Interval = 6

func (x *Schedule) WhichInterval() case_Schedule_Interval {
	if x == nil {
		return Schedule_Interval_not_set_case
	}
	switch x.xxx_hidden_Interval.(type) {
	case *schedule_Weekly:
		return Schedule_Weekly_case
	case *schedule_DaysOfWeek_:
		return Schedule_DaysOfWeek_case
	case *schedule_DaysOfMonth_:
		return Schedule_DaysOfMonth_case
	default:
		return Schedule_Interval_not_set_case
	}
}

type Schedule_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	IntervalType *Schedule_IntervalType
	Hour         *int32
	Minute       *int32
	// Fields of oneof xxx_hidden_Interval:
	Weekly      *Schedule_WeeklyInterval
	DaysOfWeek  *Schedule_DaysOfWeek
	DaysOfMonth *Schedule_DaysOfMonth
	// -- end of xxx_hidden_Interval
}

func (b0 Schedule_builder) Build() *Schedule {
	m0 := &Schedule{}
	b, x := &b0, m0
	_, _ = b, x
	if b.IntervalType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_IntervalType = *b.IntervalType
	}
	if b.Hour != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Hour = *b.Hour
	}
	if b.Minute != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Minute = *b.Minute
	}
	if b.Weekly != nil {
		x.xxx_hidden_Interval = &schedule_Weekly{b.Weekly}
	}
	if b.DaysOfWeek != nil {
		x.xxx_hidden_Interval = &schedule_DaysOfWeek_{b.DaysOfWeek}
	}
	if b.DaysOfMonth != nil {
		x.xxx_hidden_Interval = &schedule_DaysOfMonth_{b.DaysOfMonth}
	}
	return m0
}

type case_Schedule_Interval protoreflect.FieldNumber

func (x case_Schedule_Interval) String() string {
	md := file_storage_schedule_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isSchedule_Interval interface {
	isSchedule_Interval()
}

type schedule_Weekly struct {
	Weekly *Schedule_WeeklyInterval `protobuf:"bytes,4,opt,name=weekly,oneof"`
}

type schedule_DaysOfWeek_ struct {
	DaysOfWeek *Schedule_DaysOfWeek `protobuf:"bytes,5,opt,name=days_of_week,json=daysOfWeek,oneof"`
}

type schedule_DaysOfMonth_ struct {
	DaysOfMonth *Schedule_DaysOfMonth `protobuf:"bytes,6,opt,name=days_of_month,json=daysOfMonth,oneof"`
}

func (*schedule_Weekly) isSchedule_Interval() {}

func (*schedule_DaysOfWeek_) isSchedule_Interval() {}

func (*schedule_DaysOfMonth_) isSchedule_Interval() {}

type Schedule_WeeklyInterval struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Day         int32                  `protobuf:"varint,1,opt,name=day"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Schedule_WeeklyInterval) Reset() {
	*x = Schedule_WeeklyInterval{}
	mi := &file_storage_schedule_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schedule_WeeklyInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule_WeeklyInterval) ProtoMessage() {}

func (x *Schedule_WeeklyInterval) ProtoReflect() protoreflect.Message {
	mi := &file_storage_schedule_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Schedule_WeeklyInterval) GetDay() int32 {
	if x != nil {
		return x.xxx_hidden_Day
	}
	return 0
}

func (x *Schedule_WeeklyInterval) SetDay(v int32) {
	x.xxx_hidden_Day = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *Schedule_WeeklyInterval) HasDay() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Schedule_WeeklyInterval) ClearDay() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Day = 0
}

type Schedule_WeeklyInterval_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Day *int32
}

func (b0 Schedule_WeeklyInterval_builder) Build() *Schedule_WeeklyInterval {
	m0 := &Schedule_WeeklyInterval{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Day != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Day = *b.Day
	}
	return m0
}

// Sunday = 0, Monday = 1, .... Saturday =  6
type Schedule_DaysOfWeek struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Days []int32                `protobuf:"varint,1,rep,packed,name=days"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Schedule_DaysOfWeek) Reset() {
	*x = Schedule_DaysOfWeek{}
	mi := &file_storage_schedule_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schedule_DaysOfWeek) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule_DaysOfWeek) ProtoMessage() {}

func (x *Schedule_DaysOfWeek) ProtoReflect() protoreflect.Message {
	mi := &file_storage_schedule_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Schedule_DaysOfWeek) GetDays() []int32 {
	if x != nil {
		return x.xxx_hidden_Days
	}
	return nil
}

func (x *Schedule_DaysOfWeek) SetDays(v []int32) {
	x.xxx_hidden_Days = v
}

type Schedule_DaysOfWeek_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Days []int32
}

func (b0 Schedule_DaysOfWeek_builder) Build() *Schedule_DaysOfWeek {
	m0 := &Schedule_DaysOfWeek{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Days = b.Days
	return m0
}

// 1 for 1st, 2 for 2nd .... 31 for 31st
type Schedule_DaysOfMonth struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Days []int32                `protobuf:"varint,1,rep,packed,name=days"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Schedule_DaysOfMonth) Reset() {
	*x = Schedule_DaysOfMonth{}
	mi := &file_storage_schedule_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schedule_DaysOfMonth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule_DaysOfMonth) ProtoMessage() {}

func (x *Schedule_DaysOfMonth) ProtoReflect() protoreflect.Message {
	mi := &file_storage_schedule_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Schedule_DaysOfMonth) GetDays() []int32 {
	if x != nil {
		return x.xxx_hidden_Days
	}
	return nil
}

func (x *Schedule_DaysOfMonth) SetDays(v []int32) {
	x.xxx_hidden_Days = v
}

type Schedule_DaysOfMonth_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Days []int32
}

func (b0 Schedule_DaysOfMonth_builder) Build() *Schedule_DaysOfMonth {
	m0 := &Schedule_DaysOfMonth{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Days = b.Days
	return m0
}

var File_storage_schedule_proto protoreflect.FileDescriptor

const file_storage_schedule_proto_rawDesc = "" +
	"\n" +
	"\x16storage/schedule.proto\x12\astorage\x1a!google/protobuf/go_features.proto\"\xf2\x03\n" +
	"\bSchedule\x12C\n" +
	"\rinterval_type\x18\x01 \x01(\x0e2\x1e.storage.Schedule.IntervalTypeR\fintervalType\x12\x12\n" +
	"\x04hour\x18\x02 \x01(\x05R\x04hour\x12\x16\n" +
	"\x06minute\x18\x03 \x01(\x05R\x06minute\x12:\n" +
	"\x06weekly\x18\x04 \x01(\v2 .storage.Schedule.WeeklyIntervalH\x00R\x06weekly\x12@\n" +
	"\fdays_of_week\x18\x05 \x01(\v2\x1c.storage.Schedule.DaysOfWeekH\x00R\n" +
	"daysOfWeek\x12C\n" +
	"\rdays_of_month\x18\x06 \x01(\v2\x1d.storage.Schedule.DaysOfMonthH\x00R\vdaysOfMonth\x1a\"\n" +
	"\x0eWeeklyInterval\x12\x10\n" +
	"\x03day\x18\x01 \x01(\x05R\x03day\x1a \n" +
	"\n" +
	"DaysOfWeek\x12\x12\n" +
	"\x04days\x18\x01 \x03(\x05R\x04days\x1a!\n" +
	"\vDaysOfMonth\x12\x12\n" +
	"\x04days\x18\x01 \x03(\x05R\x04days\"=\n" +
	"\fIntervalType\x12\t\n" +
	"\x05UNSET\x10\x00\x12\t\n" +
	"\x05DAILY\x10\x01\x12\n" +
	"\n" +
	"\x06WEEKLY\x10\x02\x12\v\n" +
	"\aMONTHLY\x10\x03B\n" +
	"\n" +
	"\bIntervalB6\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storage\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_storage_schedule_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storage_schedule_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_storage_schedule_proto_goTypes = []any{
	(Schedule_IntervalType)(0),      // 0: storage.Schedule.IntervalType
	(*Schedule)(nil),                // 1: storage.Schedule
	(*Schedule_WeeklyInterval)(nil), // 2: storage.Schedule.WeeklyInterval
	(*Schedule_DaysOfWeek)(nil),     // 3: storage.Schedule.DaysOfWeek
	(*Schedule_DaysOfMonth)(nil),    // 4: storage.Schedule.DaysOfMonth
}
var file_storage_schedule_proto_depIdxs = []int32{
	0, // 0: storage.Schedule.interval_type:type_name -> storage.Schedule.IntervalType
	2, // 1: storage.Schedule.weekly:type_name -> storage.Schedule.WeeklyInterval
	3, // 2: storage.Schedule.days_of_week:type_name -> storage.Schedule.DaysOfWeek
	4, // 3: storage.Schedule.days_of_month:type_name -> storage.Schedule.DaysOfMonth
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_storage_schedule_proto_init() }
func file_storage_schedule_proto_init() {
	if File_storage_schedule_proto != nil {
		return
	}
	file_storage_schedule_proto_msgTypes[0].OneofWrappers = []any{
		(*schedule_Weekly)(nil),
		(*schedule_DaysOfWeek_)(nil),
		(*schedule_DaysOfMonth_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_schedule_proto_rawDesc), len(file_storage_schedule_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_schedule_proto_goTypes,
		DependencyIndexes: file_storage_schedule_proto_depIdxs,
		EnumInfos:         file_storage_schedule_proto_enumTypes,
		MessageInfos:      file_storage_schedule_proto_msgTypes,
	}.Build()
	File_storage_schedule_proto = out.File
	file_storage_schedule_proto_goTypes = nil
	file_storage_schedule_proto_depIdxs = nil
}
