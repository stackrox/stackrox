// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package storage

import (
	"iter"
	"time"
)

// ImmutableEmbeddedVulnerability is an immutable interface for EmbeddedVulnerability
type ImmutableEmbeddedVulnerability interface {
	GetCve() string
	GetImmutableAdvisory() ImmutableAdvisory
	GetCvss() float32
	GetSummary() string
	GetLink() string
	GetFixedBy() string
	GetScoreVersion() EmbeddedVulnerability_ScoreVersion
	// CVSSV2 CVSSV3 can be deprecated ROX-26066
	GetImmutableCvssV2() ImmutableCVSSV2
	GetImmutableCvssV3() ImmutableCVSSV3
	GetImmutablePublishedOn() time.Time
	GetImmutableLastModified() time.Time
	// For internal purposes only.
	GetVulnerabilityType() EmbeddedVulnerability_VulnerabilityType
	GetImmutableVulnerabilityTypes() iter.Seq[EmbeddedVulnerability_VulnerabilityType]
	GetSuppressed() bool
	GetImmutableSuppressActivation() time.Time
	GetImmutableSuppressExpiry() time.Time
	// Time when the CVE was first seen, for this specific distro, in the system.
	GetImmutableFirstSystemOccurrence() time.Time
	// Time when the CVE was first seen in this image.
	GetImmutableFirstImageOccurrence() time.Time
	GetSeverity() VulnerabilitySeverity
	GetState() VulnerabilityState
	// cvss_metrics stores list of cvss scores from different sources like nvd, Redhat etc
	GetImmutableCvssMetrics() iter.Seq[ImmutableCVSSScore]
	GetNvdCvss() float32
	GetImmutableEpss() ImmutableEPSS
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *EmbeddedVulnerability
}

// GetImmutableAdvisory implements ImmutableEmbeddedVulnerability
func (m *EmbeddedVulnerability) GetImmutableAdvisory() ImmutableAdvisory {
	return m.GetAdvisory()
}

// GetImmutableCvssV2 implements ImmutableEmbeddedVulnerability
func (m *EmbeddedVulnerability) GetImmutableCvssV2() ImmutableCVSSV2 {
	return m.GetCvssV2()
}

// GetImmutableCvssV3 implements ImmutableEmbeddedVulnerability
func (m *EmbeddedVulnerability) GetImmutableCvssV3() ImmutableCVSSV3 {
	return m.GetCvssV3()
}

// GetImmutablePublishedOn implements ImmutableEmbeddedVulnerability
func (m *EmbeddedVulnerability) GetImmutablePublishedOn() time.Time {
	if m == nil || m.PublishedOn == nil {
		return time.Time{}
	}
	return m.PublishedOn.AsTime()
}

// GetImmutableLastModified implements ImmutableEmbeddedVulnerability
func (m *EmbeddedVulnerability) GetImmutableLastModified() time.Time {
	if m == nil || m.LastModified == nil {
		return time.Time{}
	}
	return m.LastModified.AsTime()
}

// GetImmutableVulnerabilityTypes implements ImmutableEmbeddedVulnerability
func (m *EmbeddedVulnerability) GetImmutableVulnerabilityTypes() iter.Seq[EmbeddedVulnerability_VulnerabilityType] {
	return func(yield func(EmbeddedVulnerability_VulnerabilityType) bool) {
		if m == nil || m.VulnerabilityTypes == nil {
			return
		}
		for _, v := range m.VulnerabilityTypes {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableSuppressActivation implements ImmutableEmbeddedVulnerability
func (m *EmbeddedVulnerability) GetImmutableSuppressActivation() time.Time {
	if m == nil || m.SuppressActivation == nil {
		return time.Time{}
	}
	return m.SuppressActivation.AsTime()
}

// GetImmutableSuppressExpiry implements ImmutableEmbeddedVulnerability
func (m *EmbeddedVulnerability) GetImmutableSuppressExpiry() time.Time {
	if m == nil || m.SuppressExpiry == nil {
		return time.Time{}
	}
	return m.SuppressExpiry.AsTime()
}

// GetImmutableFirstSystemOccurrence implements ImmutableEmbeddedVulnerability
func (m *EmbeddedVulnerability) GetImmutableFirstSystemOccurrence() time.Time {
	if m == nil || m.FirstSystemOccurrence == nil {
		return time.Time{}
	}
	return m.FirstSystemOccurrence.AsTime()
}

// GetImmutableFirstImageOccurrence implements ImmutableEmbeddedVulnerability
func (m *EmbeddedVulnerability) GetImmutableFirstImageOccurrence() time.Time {
	if m == nil || m.FirstImageOccurrence == nil {
		return time.Time{}
	}
	return m.FirstImageOccurrence.AsTime()
}

// GetImmutableCvssMetrics implements ImmutableEmbeddedVulnerability
func (m *EmbeddedVulnerability) GetImmutableCvssMetrics() iter.Seq[ImmutableCVSSScore] {
	return func(yield func(ImmutableCVSSScore) bool) {
		if m == nil || m.CvssMetrics == nil {
			return
		}
		for _, v := range m.CvssMetrics {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableEpss implements ImmutableEmbeddedVulnerability
func (m *EmbeddedVulnerability) GetImmutableEpss() ImmutableEPSS {
	return m.GetEpss()
}

// Verify that EmbeddedVulnerability implements ImmutableEmbeddedVulnerability
var _ ImmutableEmbeddedVulnerability = (*EmbeddedVulnerability)(nil)

// ImmutableNodeVulnerability is an immutable interface for NodeVulnerability
type ImmutableNodeVulnerability interface {
	GetImmutableCveBaseInfo() ImmutableCVEInfo
	GetCvss() float32
	GetSeverity() VulnerabilitySeverity
	GetFixedBy() string
	GetSnoozed() bool
	GetImmutableSnoozeStart() time.Time
	GetImmutableSnoozeExpiry() time.Time
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *NodeVulnerability
}

// GetImmutableCveBaseInfo implements ImmutableNodeVulnerability
func (m *NodeVulnerability) GetImmutableCveBaseInfo() ImmutableCVEInfo {
	return m.GetCveBaseInfo()
}

// GetImmutableSnoozeStart implements ImmutableNodeVulnerability
func (m *NodeVulnerability) GetImmutableSnoozeStart() time.Time {
	if m == nil || m.SnoozeStart == nil {
		return time.Time{}
	}
	return m.SnoozeStart.AsTime()
}

// GetImmutableSnoozeExpiry implements ImmutableNodeVulnerability
func (m *NodeVulnerability) GetImmutableSnoozeExpiry() time.Time {
	if m == nil || m.SnoozeExpiry == nil {
		return time.Time{}
	}
	return m.SnoozeExpiry.AsTime()
}

// Verify that NodeVulnerability implements ImmutableNodeVulnerability
var _ ImmutableNodeVulnerability = (*NodeVulnerability)(nil)
