// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package storage

import (
	"iter"
	"time"
)

// ImmutableRequestComment is an immutable interface for RequestComment
type ImmutableRequestComment interface {
	GetId() string
	GetMessage() string
	GetImmutableUser() ImmutableSlimUser
	GetImmutableCreatedAt() time.Time
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *RequestComment
}

// GetImmutableUser implements ImmutableRequestComment
func (m *RequestComment) GetImmutableUser() ImmutableSlimUser {
	return m.GetUser()
}

// GetImmutableCreatedAt implements ImmutableRequestComment
func (m *RequestComment) GetImmutableCreatedAt() time.Time {
	if m == nil || m.CreatedAt == nil {
		return time.Time{}
	}
	return m.CreatedAt.AsTime()
}

// Verify that RequestComment implements ImmutableRequestComment
var _ ImmutableRequestComment = (*RequestComment)(nil)

// ImmutableRequestExpiry is an immutable interface for RequestExpiry
type ImmutableRequestExpiry interface {
	// Indicates that this request expires when the associated vulnerability is fixed.
	GetExpiresWhenFixed() bool
	// Indicates the timestamp when this request expires.
	GetImmutableExpiresOn() time.Time
	// This field is under development, DO NOT USE FOR NON-DEVELOPMENT PURPOSES.
	// This field can be used only for deferral requests.
	// This field indicates the type of expiry set for the request.
	// `TIME` indicates that the request has a fixed expiry time. If used, `expires_on` must be set.
	// `ALL_CVE_FIXABLE` indicates the request expires if all CVEs in the request is fixable.
	// `ANY_CVE_FIXABLE` indicates the request expires if any CVE in the request is fixable.
	GetExpiryType() RequestExpiry_ExpiryType
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *RequestExpiry
}

// GetImmutableExpiresOn implements ImmutableRequestExpiry
func (m *RequestExpiry) GetImmutableExpiresOn() time.Time {
	if m == nil || m.GetExpiresOn() == nil {
		return time.Time{}
	}
	return m.GetExpiresOn().AsTime()
}

// Verify that RequestExpiry implements ImmutableRequestExpiry
var _ ImmutableRequestExpiry = (*RequestExpiry)(nil)

// ImmutableDeferralRequest is an immutable interface for DeferralRequest
type ImmutableDeferralRequest interface {
	GetImmutableExpiry() ImmutableRequestExpiry
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *DeferralRequest
}

// GetImmutableExpiry implements ImmutableDeferralRequest
func (m *DeferralRequest) GetImmutableExpiry() ImmutableRequestExpiry {
	return m.GetExpiry()
}

// Verify that DeferralRequest implements ImmutableDeferralRequest
var _ ImmutableDeferralRequest = (*DeferralRequest)(nil)

// ImmutableFalsePositiveRequest is an immutable interface for FalsePositiveRequest
type ImmutableFalsePositiveRequest interface {
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *FalsePositiveRequest
}

// Verify that FalsePositiveRequest implements ImmutableFalsePositiveRequest
var _ ImmutableFalsePositiveRequest = (*FalsePositiveRequest)(nil)

// ImmutableDeferralUpdate is an immutable interface for DeferralUpdate
type ImmutableDeferralUpdate interface {
	GetImmutableCVEs() iter.Seq[string]
	GetImmutableExpiry() ImmutableRequestExpiry
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *DeferralUpdate
}

// GetImmutableCVEs implements ImmutableDeferralUpdate
func (m *DeferralUpdate) GetImmutableCVEs() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.CVEs == nil {
			return
		}
		for _, v := range m.CVEs {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableExpiry implements ImmutableDeferralUpdate
func (m *DeferralUpdate) GetImmutableExpiry() ImmutableRequestExpiry {
	return m.GetExpiry()
}

// Verify that DeferralUpdate implements ImmutableDeferralUpdate
var _ ImmutableDeferralUpdate = (*DeferralUpdate)(nil)

// ImmutableFalsePositiveUpdate is an immutable interface for FalsePositiveUpdate
type ImmutableFalsePositiveUpdate interface {
	GetImmutableCVEs() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *FalsePositiveUpdate
}

// GetImmutableCVEs implements ImmutableFalsePositiveUpdate
func (m *FalsePositiveUpdate) GetImmutableCVEs() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.CVEs == nil {
			return
		}
		for _, v := range m.CVEs {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that FalsePositiveUpdate implements ImmutableFalsePositiveUpdate
var _ ImmutableFalsePositiveUpdate = (*FalsePositiveUpdate)(nil)

// ImmutableRequester is an immutable interface for Requester
type ImmutableRequester interface {
	GetId() string
	GetName() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *Requester
}

// Verify that Requester implements ImmutableRequester
var _ ImmutableRequester = (*Requester)(nil)

// ImmutableApprover is an immutable interface for Approver
type ImmutableApprover interface {
	GetId() string
	GetName() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *Approver
}

// Verify that Approver implements ImmutableApprover
var _ ImmutableApprover = (*Approver)(nil)

// ImmutableVulnerabilityRequest is an immutable interface for VulnerabilityRequest
type ImmutableVulnerabilityRequest interface {
	GetId() string
	GetName() string
	// Indicates the state the vulnerabilities will move to once the request is complete.
	GetTargetState() VulnerabilityState
	// Indicates the status of a request.
	GetStatus() RequestStatus
	// Indicates if this request is a historical request that is no longer in effect
	// due to deferral expiry, cancellation, or restarting cve observation.
	GetExpired() bool
	GetImmutableRequestor() ImmutableSlimUser
	GetImmutableApprovers() iter.Seq[ImmutableSlimUser]
	GetImmutableCreatedAt() time.Time
	GetImmutableLastUpdated() time.Time
	GetImmutableComments() iter.Seq[ImmutableRequestComment]
	GetImmutableScope() ImmutableVulnerabilityRequest_Scope
	GetImmutableRequesterV2() ImmutableRequester
	GetImmutableApproversV2() iter.Seq[ImmutableApprover]
	GetImmutableDeferralReq() ImmutableDeferralRequest
	GetImmutableFpRequest() ImmutableFalsePositiveRequest
	GetImmutableCves() ImmutableVulnerabilityRequest_CVEs
	GetImmutableUpdatedDeferralReq() ImmutableDeferralRequest
	GetImmutableDeferralUpdate() ImmutableDeferralUpdate
	GetImmutableFalsePositiveUpdate() ImmutableFalsePositiveUpdate
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *VulnerabilityRequest
}

// GetImmutableRequestor implements ImmutableVulnerabilityRequest
func (m *VulnerabilityRequest) GetImmutableRequestor() ImmutableSlimUser {
	return m.GetRequestor()
}

// GetImmutableApprovers implements ImmutableVulnerabilityRequest
func (m *VulnerabilityRequest) GetImmutableApprovers() iter.Seq[ImmutableSlimUser] {
	return func(yield func(ImmutableSlimUser) bool) {
		if m == nil || m.Approvers == nil {
			return
		}
		for _, v := range m.Approvers {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableCreatedAt implements ImmutableVulnerabilityRequest
func (m *VulnerabilityRequest) GetImmutableCreatedAt() time.Time {
	if m == nil || m.CreatedAt == nil {
		return time.Time{}
	}
	return m.CreatedAt.AsTime()
}

// GetImmutableLastUpdated implements ImmutableVulnerabilityRequest
func (m *VulnerabilityRequest) GetImmutableLastUpdated() time.Time {
	if m == nil || m.LastUpdated == nil {
		return time.Time{}
	}
	return m.LastUpdated.AsTime()
}

// GetImmutableComments implements ImmutableVulnerabilityRequest
func (m *VulnerabilityRequest) GetImmutableComments() iter.Seq[ImmutableRequestComment] {
	return func(yield func(ImmutableRequestComment) bool) {
		if m == nil || m.Comments == nil {
			return
		}
		for _, v := range m.Comments {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableScope implements ImmutableVulnerabilityRequest
func (m *VulnerabilityRequest) GetImmutableScope() ImmutableVulnerabilityRequest_Scope {
	return m.GetScope()
}

// GetImmutableRequesterV2 implements ImmutableVulnerabilityRequest
func (m *VulnerabilityRequest) GetImmutableRequesterV2() ImmutableRequester {
	return m.GetRequesterV2()
}

// GetImmutableApproversV2 implements ImmutableVulnerabilityRequest
func (m *VulnerabilityRequest) GetImmutableApproversV2() iter.Seq[ImmutableApprover] {
	return func(yield func(ImmutableApprover) bool) {
		if m == nil || m.ApproversV2 == nil {
			return
		}
		for _, v := range m.ApproversV2 {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableDeferralReq implements ImmutableVulnerabilityRequest
func (m *VulnerabilityRequest) GetImmutableDeferralReq() ImmutableDeferralRequest {
	return m.GetDeferralReq()
}

// GetImmutableFpRequest implements ImmutableVulnerabilityRequest
func (m *VulnerabilityRequest) GetImmutableFpRequest() ImmutableFalsePositiveRequest {
	return m.GetFpRequest()
}

// GetImmutableCves implements ImmutableVulnerabilityRequest
func (m *VulnerabilityRequest) GetImmutableCves() ImmutableVulnerabilityRequest_CVEs {
	return m.GetCves()
}

// GetImmutableUpdatedDeferralReq implements ImmutableVulnerabilityRequest
func (m *VulnerabilityRequest) GetImmutableUpdatedDeferralReq() ImmutableDeferralRequest {
	return m.GetUpdatedDeferralReq()
}

// GetImmutableDeferralUpdate implements ImmutableVulnerabilityRequest
func (m *VulnerabilityRequest) GetImmutableDeferralUpdate() ImmutableDeferralUpdate {
	return m.GetDeferralUpdate()
}

// GetImmutableFalsePositiveUpdate implements ImmutableVulnerabilityRequest
func (m *VulnerabilityRequest) GetImmutableFalsePositiveUpdate() ImmutableFalsePositiveUpdate {
	return m.GetFalsePositiveUpdate()
}

// Verify that VulnerabilityRequest implements ImmutableVulnerabilityRequest
var _ ImmutableVulnerabilityRequest = (*VulnerabilityRequest)(nil)

// ImmutableVulnerabilityRequest_CVEs is an immutable interface for VulnerabilityRequest_CVEs
type ImmutableVulnerabilityRequest_CVEs interface {
	// These are (NVD) vulnerability identifiers, `cve` field of `storage.CVE`, and *not* the `id` field.
	// For example, CVE-2021-44832.
	GetImmutableCves() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *VulnerabilityRequest_CVEs
}

// GetImmutableCves implements ImmutableVulnerabilityRequest_CVEs
func (m *VulnerabilityRequest_CVEs) GetImmutableCves() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.Cves == nil {
			return
		}
		for _, v := range m.Cves {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that VulnerabilityRequest_CVEs implements ImmutableVulnerabilityRequest_CVEs
var _ ImmutableVulnerabilityRequest_CVEs = (*VulnerabilityRequest_CVEs)(nil)

// ImmutableVulnerabilityRequest_Scope is an immutable interface for VulnerabilityRequest_Scope
type ImmutableVulnerabilityRequest_Scope interface {
	// This field can be used to apply the request to selected images.
	GetImmutableImageScope() ImmutableVulnerabilityRequest_Scope_Image
	// If set, the scope of this request is system-wide.
	GetImmutableGlobalScope() ImmutableVulnerabilityRequest_Scope_Global
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *VulnerabilityRequest_Scope
}

// GetImmutableImageScope implements ImmutableVulnerabilityRequest_Scope
func (m *VulnerabilityRequest_Scope) GetImmutableImageScope() ImmutableVulnerabilityRequest_Scope_Image {
	return m.GetImageScope()
}

// GetImmutableGlobalScope implements ImmutableVulnerabilityRequest_Scope
func (m *VulnerabilityRequest_Scope) GetImmutableGlobalScope() ImmutableVulnerabilityRequest_Scope_Global {
	return m.GetGlobalScope()
}

// Verify that VulnerabilityRequest_Scope implements ImmutableVulnerabilityRequest_Scope
var _ ImmutableVulnerabilityRequest_Scope = (*VulnerabilityRequest_Scope)(nil)

// ImmutableVulnerabilityRequest_Scope_Image is an immutable interface for VulnerabilityRequest_Scope_Image
type ImmutableVulnerabilityRequest_Scope_Image interface {
	GetRegistry() string
	GetRemote() string
	GetTag() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *VulnerabilityRequest_Scope_Image
}

// Verify that VulnerabilityRequest_Scope_Image implements ImmutableVulnerabilityRequest_Scope_Image
var _ ImmutableVulnerabilityRequest_Scope_Image = (*VulnerabilityRequest_Scope_Image)(nil)

// ImmutableVulnerabilityRequest_Scope_Global is an immutable interface for VulnerabilityRequest_Scope_Global
type ImmutableVulnerabilityRequest_Scope_Global interface {
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *VulnerabilityRequest_Scope_Global
}

// Verify that VulnerabilityRequest_Scope_Global implements ImmutableVulnerabilityRequest_Scope_Global
var _ ImmutableVulnerabilityRequest_Scope_Global = (*VulnerabilityRequest_Scope_Global)(nil)
