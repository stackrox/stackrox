// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.25.3
// source: storage/file_system.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileActivity_Type int32

const (
	FileActivity_CREATION          FileActivity_Type = 0
	FileActivity_UNLINK            FileActivity_Type = 1
	FileActivity_RENAME            FileActivity_Type = 2
	FileActivity_PERMISSION_CHANGE FileActivity_Type = 3
	FileActivity_OWNERSHIP_CHANGE  FileActivity_Type = 4
	FileActivity_WRITE             FileActivity_Type = 5
	FileActivity_OPEN              FileActivity_Type = 6
)

// Enum value maps for FileActivity_Type.
var (
	FileActivity_Type_name = map[int32]string{
		0: "CREATION",
		1: "UNLINK",
		2: "RENAME",
		3: "PERMISSION_CHANGE",
		4: "OWNERSHIP_CHANGE",
		5: "WRITE",
		6: "OPEN",
	}
	FileActivity_Type_value = map[string]int32{
		"CREATION":          0,
		"UNLINK":            1,
		"RENAME":            2,
		"PERMISSION_CHANGE": 3,
		"OWNERSHIP_CHANGE":  4,
		"WRITE":             5,
		"OPEN":              6,
	}
)

func (x FileActivity_Type) Enum() *FileActivity_Type {
	p := new(FileActivity_Type)
	*p = x
	return p
}

func (x FileActivity_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileActivity_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_file_system_proto_enumTypes[0].Descriptor()
}

func (FileActivity_Type) Type() protoreflect.EnumType {
	return &file_storage_file_system_proto_enumTypes[0]
}

func (x FileActivity_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileActivity_Type.Descriptor instead.
func (FileActivity_Type) EnumDescriptor() ([]byte, []int) {
	return file_storage_file_system_proto_rawDescGZIP(), []int{0, 0}
}

type FileActivity struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Process   *ProcessIndicator      `protobuf:"bytes,2,opt,name=process,proto3" json:"process,omitempty"`
	Type      FileActivity_Type      `protobuf:"varint,3,opt,name=type,proto3,enum=storage.FileActivity_Type" json:"type,omitempty"` // @gotags search:"File Activity"
	File      *FileActivity_File     `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	// Types that are valid to be assigned to Activity:
	//
	//	*FileActivity_Creation
	//	*FileActivity_Unlink
	//	*FileActivity_Rename
	//	*FileActivity_Permission
	//	*FileActivity_Ownership
	//	*FileActivity_Open
	//	*FileActivity_Write
	Activity      isFileActivity_Activity `protobuf_oneof:"activity"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileActivity) Reset() {
	*x = FileActivity{}
	mi := &file_storage_file_system_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileActivity) ProtoMessage() {}

func (x *FileActivity) ProtoReflect() protoreflect.Message {
	mi := &file_storage_file_system_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileActivity.ProtoReflect.Descriptor instead.
func (*FileActivity) Descriptor() ([]byte, []int) {
	return file_storage_file_system_proto_rawDescGZIP(), []int{0}
}

func (x *FileActivity) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *FileActivity) GetProcess() *ProcessIndicator {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *FileActivity) GetType() FileActivity_Type {
	if x != nil {
		return x.Type
	}
	return FileActivity_CREATION
}

func (x *FileActivity) GetFile() *FileActivity_File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *FileActivity) GetActivity() isFileActivity_Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *FileActivity) GetCreation() *FileActivity_FileCreation {
	if x != nil {
		if x, ok := x.Activity.(*FileActivity_Creation); ok {
			return x.Creation
		}
	}
	return nil
}

func (x *FileActivity) GetUnlink() *FileActivity_FileUnlink {
	if x != nil {
		if x, ok := x.Activity.(*FileActivity_Unlink); ok {
			return x.Unlink
		}
	}
	return nil
}

func (x *FileActivity) GetRename() *FileActivity_FileRename {
	if x != nil {
		if x, ok := x.Activity.(*FileActivity_Rename); ok {
			return x.Rename
		}
	}
	return nil
}

func (x *FileActivity) GetPermission() *FileActivity_FilePermissionChange {
	if x != nil {
		if x, ok := x.Activity.(*FileActivity_Permission); ok {
			return x.Permission
		}
	}
	return nil
}

func (x *FileActivity) GetOwnership() *FileActivity_FileOwnershipChange {
	if x != nil {
		if x, ok := x.Activity.(*FileActivity_Ownership); ok {
			return x.Ownership
		}
	}
	return nil
}

func (x *FileActivity) GetOpen() *FileActivity_FileOpen {
	if x != nil {
		if x, ok := x.Activity.(*FileActivity_Open); ok {
			return x.Open
		}
	}
	return nil
}

func (x *FileActivity) GetWrite() *FileActivity_FileWrite {
	if x != nil {
		if x, ok := x.Activity.(*FileActivity_Write); ok {
			return x.Write
		}
	}
	return nil
}

type isFileActivity_Activity interface {
	isFileActivity_Activity()
}

type FileActivity_Creation struct {
	Creation *FileActivity_FileCreation `protobuf:"bytes,5,opt,name=creation,proto3,oneof"`
}

type FileActivity_Unlink struct {
	Unlink *FileActivity_FileUnlink `protobuf:"bytes,6,opt,name=unlink,proto3,oneof"`
}

type FileActivity_Rename struct {
	Rename *FileActivity_FileRename `protobuf:"bytes,7,opt,name=rename,proto3,oneof"`
}

type FileActivity_Permission struct {
	Permission *FileActivity_FilePermissionChange `protobuf:"bytes,8,opt,name=permission,proto3,oneof"`
}

type FileActivity_Ownership struct {
	Ownership *FileActivity_FileOwnershipChange `protobuf:"bytes,9,opt,name=ownership,proto3,oneof"`
}

type FileActivity_Open struct {
	Open *FileActivity_FileOpen `protobuf:"bytes,10,opt,name=open,proto3,oneof"`
}

type FileActivity_Write struct {
	Write *FileActivity_FileWrite `protobuf:"bytes,11,opt,name=write,proto3,oneof"`
}

func (*FileActivity_Creation) isFileActivity_Activity() {}

func (*FileActivity_Unlink) isFileActivity_Activity() {}

func (*FileActivity_Rename) isFileActivity_Activity() {}

func (*FileActivity_Permission) isFileActivity_Activity() {}

func (*FileActivity_Ownership) isFileActivity_Activity() {}

func (*FileActivity_Open) isFileActivity_Activity() {}

func (*FileActivity_Write) isFileActivity_Activity() {}

type FileActivity_File struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Path            string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty" search:"File Path"`                                                 // @gotags: search:"File Path"
	HostPath        string                 `protobuf:"bytes,2,opt,name=host_path,json=hostPath,proto3" json:"host_path,omitempty" search:"File Host Path"`                         // @gotags: search:"File Host Path"
	IsExternalMount bool                   `protobuf:"varint,3,opt,name=is_external_mount,json=isExternalMount,proto3" json:"is_external_mount,omitempty" search:"Externally Mounted"` // @gotags: search:"Externally Mounted"
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FileActivity_File) Reset() {
	*x = FileActivity_File{}
	mi := &file_storage_file_system_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileActivity_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileActivity_File) ProtoMessage() {}

func (x *FileActivity_File) ProtoReflect() protoreflect.Message {
	mi := &file_storage_file_system_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileActivity_File.ProtoReflect.Descriptor instead.
func (*FileActivity_File) Descriptor() ([]byte, []int) {
	return file_storage_file_system_proto_rawDescGZIP(), []int{0, 0}
}

func (x *FileActivity_File) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileActivity_File) GetHostPath() string {
	if x != nil {
		return x.HostPath
	}
	return ""
}

func (x *FileActivity_File) GetIsExternalMount() bool {
	if x != nil {
		return x.IsExternalMount
	}
	return false
}

// No additional metadata required for create/unlink/write/open operations
type FileActivity_FileCreation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileActivity_FileCreation) Reset() {
	*x = FileActivity_FileCreation{}
	mi := &file_storage_file_system_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileActivity_FileCreation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileActivity_FileCreation) ProtoMessage() {}

func (x *FileActivity_FileCreation) ProtoReflect() protoreflect.Message {
	mi := &file_storage_file_system_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileActivity_FileCreation.ProtoReflect.Descriptor instead.
func (*FileActivity_FileCreation) Descriptor() ([]byte, []int) {
	return file_storage_file_system_proto_rawDescGZIP(), []int{0, 1}
}

type FileActivity_FileUnlink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileActivity_FileUnlink) Reset() {
	*x = FileActivity_FileUnlink{}
	mi := &file_storage_file_system_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileActivity_FileUnlink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileActivity_FileUnlink) ProtoMessage() {}

func (x *FileActivity_FileUnlink) ProtoReflect() protoreflect.Message {
	mi := &file_storage_file_system_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileActivity_FileUnlink.ProtoReflect.Descriptor instead.
func (*FileActivity_FileUnlink) Descriptor() ([]byte, []int) {
	return file_storage_file_system_proto_rawDescGZIP(), []int{0, 2}
}

type FileActivity_FileWrite struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileActivity_FileWrite) Reset() {
	*x = FileActivity_FileWrite{}
	mi := &file_storage_file_system_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileActivity_FileWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileActivity_FileWrite) ProtoMessage() {}

func (x *FileActivity_FileWrite) ProtoReflect() protoreflect.Message {
	mi := &file_storage_file_system_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileActivity_FileWrite.ProtoReflect.Descriptor instead.
func (*FileActivity_FileWrite) Descriptor() ([]byte, []int) {
	return file_storage_file_system_proto_rawDescGZIP(), []int{0, 3}
}

type FileActivity_FileOpen struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileActivity_FileOpen) Reset() {
	*x = FileActivity_FileOpen{}
	mi := &file_storage_file_system_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileActivity_FileOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileActivity_FileOpen) ProtoMessage() {}

func (x *FileActivity_FileOpen) ProtoReflect() protoreflect.Message {
	mi := &file_storage_file_system_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileActivity_FileOpen.ProtoReflect.Descriptor instead.
func (*FileActivity_FileOpen) Descriptor() ([]byte, []int) {
	return file_storage_file_system_proto_rawDescGZIP(), []int{0, 4}
}

type FileActivity_FileRename struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	New           *FileActivity_File     `protobuf:"bytes,1,opt,name=new,proto3" json:"new,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileActivity_FileRename) Reset() {
	*x = FileActivity_FileRename{}
	mi := &file_storage_file_system_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileActivity_FileRename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileActivity_FileRename) ProtoMessage() {}

func (x *FileActivity_FileRename) ProtoReflect() protoreflect.Message {
	mi := &file_storage_file_system_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileActivity_FileRename.ProtoReflect.Descriptor instead.
func (*FileActivity_FileRename) Descriptor() ([]byte, []int) {
	return file_storage_file_system_proto_rawDescGZIP(), []int{0, 5}
}

func (x *FileActivity_FileRename) GetNew() *FileActivity_File {
	if x != nil {
		return x.New
	}
	return nil
}

type FileActivity_FilePermissionChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mode          uint32                 `protobuf:"varint,1,opt,name=mode,proto3" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileActivity_FilePermissionChange) Reset() {
	*x = FileActivity_FilePermissionChange{}
	mi := &file_storage_file_system_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileActivity_FilePermissionChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileActivity_FilePermissionChange) ProtoMessage() {}

func (x *FileActivity_FilePermissionChange) ProtoReflect() protoreflect.Message {
	mi := &file_storage_file_system_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileActivity_FilePermissionChange.ProtoReflect.Descriptor instead.
func (*FileActivity_FilePermissionChange) Descriptor() ([]byte, []int) {
	return file_storage_file_system_proto_rawDescGZIP(), []int{0, 6}
}

func (x *FileActivity_FilePermissionChange) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type FileActivity_FileOwnershipChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           uint32                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid           uint32                 `protobuf:"varint,2,opt,name=gid,proto3" json:"gid,omitempty"`
	Username      string                 `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Group         string                 `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileActivity_FileOwnershipChange) Reset() {
	*x = FileActivity_FileOwnershipChange{}
	mi := &file_storage_file_system_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileActivity_FileOwnershipChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileActivity_FileOwnershipChange) ProtoMessage() {}

func (x *FileActivity_FileOwnershipChange) ProtoReflect() protoreflect.Message {
	mi := &file_storage_file_system_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileActivity_FileOwnershipChange.ProtoReflect.Descriptor instead.
func (*FileActivity_FileOwnershipChange) Descriptor() ([]byte, []int) {
	return file_storage_file_system_proto_rawDescGZIP(), []int{0, 7}
}

func (x *FileActivity_FileOwnershipChange) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FileActivity_FileOwnershipChange) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *FileActivity_FileOwnershipChange) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FileActivity_FileOwnershipChange) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

var File_storage_file_system_proto protoreflect.FileDescriptor

const file_storage_file_system_proto_rawDesc = "" +
	"\n" +
	"\x19storage/file_system.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1fstorage/process_indicator.proto\"\x8c\t\n" +
	"\fFileActivity\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x123\n" +
	"\aprocess\x18\x02 \x01(\v2\x19.storage.ProcessIndicatorR\aprocess\x12.\n" +
	"\x04type\x18\x03 \x01(\x0e2\x1a.storage.FileActivity.TypeR\x04type\x12.\n" +
	"\x04file\x18\x04 \x01(\v2\x1a.storage.FileActivity.FileR\x04file\x12@\n" +
	"\bcreation\x18\x05 \x01(\v2\".storage.FileActivity.FileCreationH\x00R\bcreation\x12:\n" +
	"\x06unlink\x18\x06 \x01(\v2 .storage.FileActivity.FileUnlinkH\x00R\x06unlink\x12:\n" +
	"\x06rename\x18\a \x01(\v2 .storage.FileActivity.FileRenameH\x00R\x06rename\x12L\n" +
	"\n" +
	"permission\x18\b \x01(\v2*.storage.FileActivity.FilePermissionChangeH\x00R\n" +
	"permission\x12I\n" +
	"\townership\x18\t \x01(\v2).storage.FileActivity.FileOwnershipChangeH\x00R\townership\x124\n" +
	"\x04open\x18\n" +
	" \x01(\v2\x1e.storage.FileActivity.FileOpenH\x00R\x04open\x127\n" +
	"\x05write\x18\v \x01(\v2\x1f.storage.FileActivity.FileWriteH\x00R\x05write\x1ac\n" +
	"\x04File\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1b\n" +
	"\thost_path\x18\x02 \x01(\tR\bhostPath\x12*\n" +
	"\x11is_external_mount\x18\x03 \x01(\bR\x0fisExternalMount\x1a\x0e\n" +
	"\fFileCreation\x1a\f\n" +
	"\n" +
	"FileUnlink\x1a\v\n" +
	"\tFileWrite\x1a\n" +
	"\n" +
	"\bFileOpen\x1a:\n" +
	"\n" +
	"FileRename\x12,\n" +
	"\x03new\x18\x01 \x01(\v2\x1a.storage.FileActivity.FileR\x03new\x1a*\n" +
	"\x14FilePermissionChange\x12\x12\n" +
	"\x04mode\x18\x01 \x01(\rR\x04mode\x1ak\n" +
	"\x13FileOwnershipChange\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\rR\x03uid\x12\x10\n" +
	"\x03gid\x18\x02 \x01(\rR\x03gid\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x14\n" +
	"\x05group\x18\x04 \x01(\tR\x05group\"n\n" +
	"\x04Type\x12\f\n" +
	"\bCREATION\x10\x00\x12\n" +
	"\n" +
	"\x06UNLINK\x10\x01\x12\n" +
	"\n" +
	"\x06RENAME\x10\x02\x12\x15\n" +
	"\x11PERMISSION_CHANGE\x10\x03\x12\x14\n" +
	"\x10OWNERSHIP_CHANGE\x10\x04\x12\t\n" +
	"\x05WRITE\x10\x05\x12\b\n" +
	"\x04OPEN\x10\x06B\n" +
	"\n" +
	"\bactivityB.\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storageb\x06proto3"

var (
	file_storage_file_system_proto_rawDescOnce sync.Once
	file_storage_file_system_proto_rawDescData []byte
)

func file_storage_file_system_proto_rawDescGZIP() []byte {
	file_storage_file_system_proto_rawDescOnce.Do(func() {
		file_storage_file_system_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_storage_file_system_proto_rawDesc), len(file_storage_file_system_proto_rawDesc)))
	})
	return file_storage_file_system_proto_rawDescData
}

var file_storage_file_system_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storage_file_system_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_storage_file_system_proto_goTypes = []any{
	(FileActivity_Type)(0),                    // 0: storage.FileActivity.Type
	(*FileActivity)(nil),                      // 1: storage.FileActivity
	(*FileActivity_File)(nil),                 // 2: storage.FileActivity.File
	(*FileActivity_FileCreation)(nil),         // 3: storage.FileActivity.FileCreation
	(*FileActivity_FileUnlink)(nil),           // 4: storage.FileActivity.FileUnlink
	(*FileActivity_FileWrite)(nil),            // 5: storage.FileActivity.FileWrite
	(*FileActivity_FileOpen)(nil),             // 6: storage.FileActivity.FileOpen
	(*FileActivity_FileRename)(nil),           // 7: storage.FileActivity.FileRename
	(*FileActivity_FilePermissionChange)(nil), // 8: storage.FileActivity.FilePermissionChange
	(*FileActivity_FileOwnershipChange)(nil),  // 9: storage.FileActivity.FileOwnershipChange
	(*timestamppb.Timestamp)(nil),             // 10: google.protobuf.Timestamp
	(*ProcessIndicator)(nil),                  // 11: storage.ProcessIndicator
}
var file_storage_file_system_proto_depIdxs = []int32{
	10, // 0: storage.FileActivity.timestamp:type_name -> google.protobuf.Timestamp
	11, // 1: storage.FileActivity.process:type_name -> storage.ProcessIndicator
	0,  // 2: storage.FileActivity.type:type_name -> storage.FileActivity.Type
	2,  // 3: storage.FileActivity.file:type_name -> storage.FileActivity.File
	3,  // 4: storage.FileActivity.creation:type_name -> storage.FileActivity.FileCreation
	4,  // 5: storage.FileActivity.unlink:type_name -> storage.FileActivity.FileUnlink
	7,  // 6: storage.FileActivity.rename:type_name -> storage.FileActivity.FileRename
	8,  // 7: storage.FileActivity.permission:type_name -> storage.FileActivity.FilePermissionChange
	9,  // 8: storage.FileActivity.ownership:type_name -> storage.FileActivity.FileOwnershipChange
	6,  // 9: storage.FileActivity.open:type_name -> storage.FileActivity.FileOpen
	5,  // 10: storage.FileActivity.write:type_name -> storage.FileActivity.FileWrite
	2,  // 11: storage.FileActivity.FileRename.new:type_name -> storage.FileActivity.File
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_storage_file_system_proto_init() }
func file_storage_file_system_proto_init() {
	if File_storage_file_system_proto != nil {
		return
	}
	file_storage_process_indicator_proto_init()
	file_storage_file_system_proto_msgTypes[0].OneofWrappers = []any{
		(*FileActivity_Creation)(nil),
		(*FileActivity_Unlink)(nil),
		(*FileActivity_Rename)(nil),
		(*FileActivity_Permission)(nil),
		(*FileActivity_Ownership)(nil),
		(*FileActivity_Open)(nil),
		(*FileActivity_Write)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_file_system_proto_rawDesc), len(file_storage_file_system_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_file_system_proto_goTypes,
		DependencyIndexes: file_storage_file_system_proto_depIdxs,
		EnumInfos:         file_storage_file_system_proto_enumTypes,
		MessageInfos:      file_storage_file_system_proto_msgTypes,
	}.Build()
	File_storage_file_system_proto = out.File
	file_storage_file_system_proto_goTypes = nil
	file_storage_file_system_proto_depIdxs = nil
}
