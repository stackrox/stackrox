// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package storage

import (
	"iter"
	"time"
)

// ImmutableTestSingleKeyStruct is an immutable interface for TestSingleKeyStruct
type ImmutableTestSingleKeyStruct interface {
	GetKey() string
	GetName() string
	GetImmutableStringSlice() iter.Seq[string]
	GetBool() bool
	// When using this ensure your precision needs are met and accounted for.  This will use a
	// BigInt which may require you to convert from uint64 to int64 OR update
	// the handling to use numerics.
	GetUint64() uint64
	GetInt64() int64
	GetFloat() float32
	GetImmutableLabels() iter.Seq2[string, string]
	GetImmutableTimestamp() time.Time
	GetEnum() TestSingleKeyStruct_Enum
	GetImmutableEnums() iter.Seq[TestSingleKeyStruct_Enum]
	GetImmutableEmbedded() ImmutableTestSingleKeyStruct_Embedded
	GetImmutableNested() iter.Seq[ImmutableTestSingleKeyStruct_Nested]
	GetOneofstring() string
	GetImmutableOneofnested() ImmutableTestSingleKeyStruct_OneOfNested
	GetBytess() []byte
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestSingleKeyStruct
}

// GetImmutableStringSlice implements ImmutableTestSingleKeyStruct
func (m *TestSingleKeyStruct) GetImmutableStringSlice() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.StringSlice == nil {
			return
		}
		for _, v := range m.StringSlice {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableLabels implements ImmutableTestSingleKeyStruct
func (m *TestSingleKeyStruct) GetImmutableLabels() iter.Seq2[string, string] {
	return func(yield func(string, string) bool) {
		if m == nil || m.Labels == nil {
			return
		}
		for k, v := range m.Labels {
			if !yield(k, v) {
				return
			}
		}
	}
}

// GetImmutableTimestamp implements ImmutableTestSingleKeyStruct
func (m *TestSingleKeyStruct) GetImmutableTimestamp() time.Time {
	if m == nil || m.Timestamp == nil {
		return time.Time{}
	}
	return m.Timestamp.AsTime()
}

// GetImmutableEnums implements ImmutableTestSingleKeyStruct
func (m *TestSingleKeyStruct) GetImmutableEnums() iter.Seq[TestSingleKeyStruct_Enum] {
	return func(yield func(TestSingleKeyStruct_Enum) bool) {
		if m == nil || m.Enums == nil {
			return
		}
		for _, v := range m.Enums {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableEmbedded implements ImmutableTestSingleKeyStruct
func (m *TestSingleKeyStruct) GetImmutableEmbedded() ImmutableTestSingleKeyStruct_Embedded {
	return m.GetEmbedded()
}

// GetImmutableNested implements ImmutableTestSingleKeyStruct
func (m *TestSingleKeyStruct) GetImmutableNested() iter.Seq[ImmutableTestSingleKeyStruct_Nested] {
	return func(yield func(ImmutableTestSingleKeyStruct_Nested) bool) {
		if m == nil || m.Nested == nil {
			return
		}
		for _, v := range m.Nested {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableOneofnested implements ImmutableTestSingleKeyStruct
func (m *TestSingleKeyStruct) GetImmutableOneofnested() ImmutableTestSingleKeyStruct_OneOfNested {
	return m.GetOneofnested()
}

// Verify that TestSingleKeyStruct implements ImmutableTestSingleKeyStruct
var _ ImmutableTestSingleKeyStruct = (*TestSingleKeyStruct)(nil)

// ImmutableTestSingleKeyStruct_Embedded is an immutable interface for TestSingleKeyStruct_Embedded
type ImmutableTestSingleKeyStruct_Embedded interface {
	GetEmbedded() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestSingleKeyStruct_Embedded
}

// Verify that TestSingleKeyStruct_Embedded implements ImmutableTestSingleKeyStruct_Embedded
var _ ImmutableTestSingleKeyStruct_Embedded = (*TestSingleKeyStruct_Embedded)(nil)

// ImmutableTestSingleKeyStruct_Embedded_Embedded2 is an immutable interface for TestSingleKeyStruct_Embedded_Embedded2
type ImmutableTestSingleKeyStruct_Embedded_Embedded2 interface {
	GetEmbedded() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestSingleKeyStruct_Embedded_Embedded2
}

// Verify that TestSingleKeyStruct_Embedded_Embedded2 implements ImmutableTestSingleKeyStruct_Embedded_Embedded2
var _ ImmutableTestSingleKeyStruct_Embedded_Embedded2 = (*TestSingleKeyStruct_Embedded_Embedded2)(nil)

// ImmutableTestSingleKeyStruct_Nested is an immutable interface for TestSingleKeyStruct_Nested
type ImmutableTestSingleKeyStruct_Nested interface {
	GetNested() string
	GetImmutableNested2() ImmutableTestSingleKeyStruct_Nested_Nested2
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestSingleKeyStruct_Nested
}

// GetImmutableNested2 implements ImmutableTestSingleKeyStruct_Nested
func (m *TestSingleKeyStruct_Nested) GetImmutableNested2() ImmutableTestSingleKeyStruct_Nested_Nested2 {
	return m.GetNested2()
}

// Verify that TestSingleKeyStruct_Nested implements ImmutableTestSingleKeyStruct_Nested
var _ ImmutableTestSingleKeyStruct_Nested = (*TestSingleKeyStruct_Nested)(nil)

// ImmutableTestSingleKeyStruct_Nested_Nested2 is an immutable interface for TestSingleKeyStruct_Nested_Nested2
type ImmutableTestSingleKeyStruct_Nested_Nested2 interface {
	GetNested2() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestSingleKeyStruct_Nested_Nested2
}

// Verify that TestSingleKeyStruct_Nested_Nested2 implements ImmutableTestSingleKeyStruct_Nested_Nested2
var _ ImmutableTestSingleKeyStruct_Nested_Nested2 = (*TestSingleKeyStruct_Nested_Nested2)(nil)

// ImmutableTestSingleKeyStruct_OneOfNested is an immutable interface for TestSingleKeyStruct_OneOfNested
type ImmutableTestSingleKeyStruct_OneOfNested interface {
	GetNested() string
	GetImmutableNested2() ImmutableTestSingleKeyStruct_OneOfNested_Nested2
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestSingleKeyStruct_OneOfNested
}

// GetImmutableNested2 implements ImmutableTestSingleKeyStruct_OneOfNested
func (m *TestSingleKeyStruct_OneOfNested) GetImmutableNested2() ImmutableTestSingleKeyStruct_OneOfNested_Nested2 {
	return m.GetNested2()
}

// Verify that TestSingleKeyStruct_OneOfNested implements ImmutableTestSingleKeyStruct_OneOfNested
var _ ImmutableTestSingleKeyStruct_OneOfNested = (*TestSingleKeyStruct_OneOfNested)(nil)

// ImmutableTestSingleKeyStruct_OneOfNested_Nested2 is an immutable interface for TestSingleKeyStruct_OneOfNested_Nested2
type ImmutableTestSingleKeyStruct_OneOfNested_Nested2 interface {
	GetNested2() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestSingleKeyStruct_OneOfNested_Nested2
}

// Verify that TestSingleKeyStruct_OneOfNested_Nested2 implements ImmutableTestSingleKeyStruct_OneOfNested_Nested2
var _ ImmutableTestSingleKeyStruct_OneOfNested_Nested2 = (*TestSingleKeyStruct_OneOfNested_Nested2)(nil)

// ImmutableTestSingleUUIDKeyStruct is an immutable interface for TestSingleUUIDKeyStruct
type ImmutableTestSingleUUIDKeyStruct interface {
	GetKey() string
	GetName() string
	GetImmutableStringSlice() iter.Seq[string]
	GetBool() bool
	// When using this ensure your precision needs are met and accounted for.  This will use a
	// BigInt which may require you to convert from uint64 to int64 OR update
	// the handling to use numerics.
	GetUint64() uint64
	GetInt64() int64
	GetFloat() float32
	GetImmutableLabels() iter.Seq2[string, string]
	GetImmutableTimestamp() time.Time
	GetEnum() TestSingleUUIDKeyStruct_Enum
	GetImmutableEnums() iter.Seq[TestSingleUUIDKeyStruct_Enum]
	GetImmutableEmbedded() ImmutableTestSingleUUIDKeyStruct_Embedded
	GetImmutableNested() iter.Seq[ImmutableTestSingleUUIDKeyStruct_Nested]
	GetOneofstring() string
	GetImmutableOneofnested() ImmutableTestSingleUUIDKeyStruct_OneOfNested
	GetBytess() []byte
	GetOneofTwoString() string
	GetOneofTwoInt() int64
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestSingleUUIDKeyStruct
}

// GetImmutableStringSlice implements ImmutableTestSingleUUIDKeyStruct
func (m *TestSingleUUIDKeyStruct) GetImmutableStringSlice() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.StringSlice == nil {
			return
		}
		for _, v := range m.StringSlice {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableLabels implements ImmutableTestSingleUUIDKeyStruct
func (m *TestSingleUUIDKeyStruct) GetImmutableLabels() iter.Seq2[string, string] {
	return func(yield func(string, string) bool) {
		if m == nil || m.Labels == nil {
			return
		}
		for k, v := range m.Labels {
			if !yield(k, v) {
				return
			}
		}
	}
}

// GetImmutableTimestamp implements ImmutableTestSingleUUIDKeyStruct
func (m *TestSingleUUIDKeyStruct) GetImmutableTimestamp() time.Time {
	if m == nil || m.Timestamp == nil {
		return time.Time{}
	}
	return m.Timestamp.AsTime()
}

// GetImmutableEnums implements ImmutableTestSingleUUIDKeyStruct
func (m *TestSingleUUIDKeyStruct) GetImmutableEnums() iter.Seq[TestSingleUUIDKeyStruct_Enum] {
	return func(yield func(TestSingleUUIDKeyStruct_Enum) bool) {
		if m == nil || m.Enums == nil {
			return
		}
		for _, v := range m.Enums {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableEmbedded implements ImmutableTestSingleUUIDKeyStruct
func (m *TestSingleUUIDKeyStruct) GetImmutableEmbedded() ImmutableTestSingleUUIDKeyStruct_Embedded {
	return m.GetEmbedded()
}

// GetImmutableNested implements ImmutableTestSingleUUIDKeyStruct
func (m *TestSingleUUIDKeyStruct) GetImmutableNested() iter.Seq[ImmutableTestSingleUUIDKeyStruct_Nested] {
	return func(yield func(ImmutableTestSingleUUIDKeyStruct_Nested) bool) {
		if m == nil || m.Nested == nil {
			return
		}
		for _, v := range m.Nested {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableOneofnested implements ImmutableTestSingleUUIDKeyStruct
func (m *TestSingleUUIDKeyStruct) GetImmutableOneofnested() ImmutableTestSingleUUIDKeyStruct_OneOfNested {
	return m.GetOneofnested()
}

// Verify that TestSingleUUIDKeyStruct implements ImmutableTestSingleUUIDKeyStruct
var _ ImmutableTestSingleUUIDKeyStruct = (*TestSingleUUIDKeyStruct)(nil)

// ImmutableTestSingleUUIDKeyStruct_Embedded is an immutable interface for TestSingleUUIDKeyStruct_Embedded
type ImmutableTestSingleUUIDKeyStruct_Embedded interface {
	GetEmbedded() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestSingleUUIDKeyStruct_Embedded
}

// Verify that TestSingleUUIDKeyStruct_Embedded implements ImmutableTestSingleUUIDKeyStruct_Embedded
var _ ImmutableTestSingleUUIDKeyStruct_Embedded = (*TestSingleUUIDKeyStruct_Embedded)(nil)

// ImmutableTestSingleUUIDKeyStruct_Embedded_Embedded2 is an immutable interface for TestSingleUUIDKeyStruct_Embedded_Embedded2
type ImmutableTestSingleUUIDKeyStruct_Embedded_Embedded2 interface {
	GetEmbedded() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestSingleUUIDKeyStruct_Embedded_Embedded2
}

// Verify that TestSingleUUIDKeyStruct_Embedded_Embedded2 implements ImmutableTestSingleUUIDKeyStruct_Embedded_Embedded2
var _ ImmutableTestSingleUUIDKeyStruct_Embedded_Embedded2 = (*TestSingleUUIDKeyStruct_Embedded_Embedded2)(nil)

// ImmutableTestSingleUUIDKeyStruct_Nested is an immutable interface for TestSingleUUIDKeyStruct_Nested
type ImmutableTestSingleUUIDKeyStruct_Nested interface {
	GetNested() string
	GetImmutableNested2() ImmutableTestSingleUUIDKeyStruct_Nested_Nested2
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestSingleUUIDKeyStruct_Nested
}

// GetImmutableNested2 implements ImmutableTestSingleUUIDKeyStruct_Nested
func (m *TestSingleUUIDKeyStruct_Nested) GetImmutableNested2() ImmutableTestSingleUUIDKeyStruct_Nested_Nested2 {
	return m.GetNested2()
}

// Verify that TestSingleUUIDKeyStruct_Nested implements ImmutableTestSingleUUIDKeyStruct_Nested
var _ ImmutableTestSingleUUIDKeyStruct_Nested = (*TestSingleUUIDKeyStruct_Nested)(nil)

// ImmutableTestSingleUUIDKeyStruct_Nested_Nested2 is an immutable interface for TestSingleUUIDKeyStruct_Nested_Nested2
type ImmutableTestSingleUUIDKeyStruct_Nested_Nested2 interface {
	GetNested2() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestSingleUUIDKeyStruct_Nested_Nested2
}

// Verify that TestSingleUUIDKeyStruct_Nested_Nested2 implements ImmutableTestSingleUUIDKeyStruct_Nested_Nested2
var _ ImmutableTestSingleUUIDKeyStruct_Nested_Nested2 = (*TestSingleUUIDKeyStruct_Nested_Nested2)(nil)

// ImmutableTestSingleUUIDKeyStruct_OneOfNested is an immutable interface for TestSingleUUIDKeyStruct_OneOfNested
type ImmutableTestSingleUUIDKeyStruct_OneOfNested interface {
	GetNested() string
	GetImmutableNested2() ImmutableTestSingleUUIDKeyStruct_OneOfNested_Nested2
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestSingleUUIDKeyStruct_OneOfNested
}

// GetImmutableNested2 implements ImmutableTestSingleUUIDKeyStruct_OneOfNested
func (m *TestSingleUUIDKeyStruct_OneOfNested) GetImmutableNested2() ImmutableTestSingleUUIDKeyStruct_OneOfNested_Nested2 {
	return m.GetNested2()
}

// Verify that TestSingleUUIDKeyStruct_OneOfNested implements ImmutableTestSingleUUIDKeyStruct_OneOfNested
var _ ImmutableTestSingleUUIDKeyStruct_OneOfNested = (*TestSingleUUIDKeyStruct_OneOfNested)(nil)

// ImmutableTestSingleUUIDKeyStruct_OneOfNested_Nested2 is an immutable interface for TestSingleUUIDKeyStruct_OneOfNested_Nested2
type ImmutableTestSingleUUIDKeyStruct_OneOfNested_Nested2 interface {
	GetNested2() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestSingleUUIDKeyStruct_OneOfNested_Nested2
}

// Verify that TestSingleUUIDKeyStruct_OneOfNested_Nested2 implements ImmutableTestSingleUUIDKeyStruct_OneOfNested_Nested2
var _ ImmutableTestSingleUUIDKeyStruct_OneOfNested_Nested2 = (*TestSingleUUIDKeyStruct_OneOfNested_Nested2)(nil)

// ImmutableTestStruct is an immutable interface for TestStruct
type ImmutableTestStruct interface {
	GetKey1() string
	GetKey2() string
	GetImmutableStringSlice() iter.Seq[string]
	GetBool() bool
	GetUint64() uint64
	GetInt64() int64
	GetFloat() float32
	GetImmutableLabels() iter.Seq2[string, string]
	GetImmutableTimestamp() time.Time
	GetEnum() TestStruct_Enum
	GetImmutableEnums() iter.Seq[TestStruct_Enum]
	GetString_() string
	// repeated int64: currently unsupported
	GetImmutableIntSliceDeprecated() iter.Seq[int64]
	GetImmutableInt32Slice() iter.Seq[int32]
	GetImmutableEmbedded() ImmutableTestStruct_Embedded
	GetImmutableNested() iter.Seq[ImmutableTestStruct_Nested]
	GetOneofstring() string
	GetImmutableOneofnested() ImmutableTestStruct_OneOfNested
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestStruct
}

// GetImmutableStringSlice implements ImmutableTestStruct
func (m *TestStruct) GetImmutableStringSlice() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.StringSlice == nil {
			return
		}
		for _, v := range m.StringSlice {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableLabels implements ImmutableTestStruct
func (m *TestStruct) GetImmutableLabels() iter.Seq2[string, string] {
	return func(yield func(string, string) bool) {
		if m == nil || m.Labels == nil {
			return
		}
		for k, v := range m.Labels {
			if !yield(k, v) {
				return
			}
		}
	}
}

// GetImmutableTimestamp implements ImmutableTestStruct
func (m *TestStruct) GetImmutableTimestamp() time.Time {
	if m == nil || m.Timestamp == nil {
		return time.Time{}
	}
	return m.Timestamp.AsTime()
}

// GetImmutableEnums implements ImmutableTestStruct
func (m *TestStruct) GetImmutableEnums() iter.Seq[TestStruct_Enum] {
	return func(yield func(TestStruct_Enum) bool) {
		if m == nil || m.Enums == nil {
			return
		}
		for _, v := range m.Enums {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableIntSliceDeprecated implements ImmutableTestStruct
func (m *TestStruct) GetImmutableIntSliceDeprecated() iter.Seq[int64] {
	return func(yield func(int64) bool) {
		if m == nil || m.IntSliceDeprecated == nil {
			return
		}
		for _, v := range m.IntSliceDeprecated {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableInt32Slice implements ImmutableTestStruct
func (m *TestStruct) GetImmutableInt32Slice() iter.Seq[int32] {
	return func(yield func(int32) bool) {
		if m == nil || m.Int32Slice == nil {
			return
		}
		for _, v := range m.Int32Slice {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableEmbedded implements ImmutableTestStruct
func (m *TestStruct) GetImmutableEmbedded() ImmutableTestStruct_Embedded {
	return m.GetEmbedded()
}

// GetImmutableNested implements ImmutableTestStruct
func (m *TestStruct) GetImmutableNested() iter.Seq[ImmutableTestStruct_Nested] {
	return func(yield func(ImmutableTestStruct_Nested) bool) {
		if m == nil || m.Nested == nil {
			return
		}
		for _, v := range m.Nested {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableOneofnested implements ImmutableTestStruct
func (m *TestStruct) GetImmutableOneofnested() ImmutableTestStruct_OneOfNested {
	return m.GetOneofnested()
}

// Verify that TestStruct implements ImmutableTestStruct
var _ ImmutableTestStruct = (*TestStruct)(nil)

// ImmutableTestStruct_Embedded is an immutable interface for TestStruct_Embedded
type ImmutableTestStruct_Embedded interface {
	GetEmbedded() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestStruct_Embedded
}

// Verify that TestStruct_Embedded implements ImmutableTestStruct_Embedded
var _ ImmutableTestStruct_Embedded = (*TestStruct_Embedded)(nil)

// ImmutableTestStruct_Embedded_Embedded2 is an immutable interface for TestStruct_Embedded_Embedded2
type ImmutableTestStruct_Embedded_Embedded2 interface {
	GetEmbedded() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestStruct_Embedded_Embedded2
}

// Verify that TestStruct_Embedded_Embedded2 implements ImmutableTestStruct_Embedded_Embedded2
var _ ImmutableTestStruct_Embedded_Embedded2 = (*TestStruct_Embedded_Embedded2)(nil)

// ImmutableTestStruct_Nested is an immutable interface for TestStruct_Nested
type ImmutableTestStruct_Nested interface {
	GetNested() string
	GetIsNested() bool
	GetInt64() int64
	GetImmutableNested2() ImmutableTestStruct_Nested_Nested2
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestStruct_Nested
}

// GetImmutableNested2 implements ImmutableTestStruct_Nested
func (m *TestStruct_Nested) GetImmutableNested2() ImmutableTestStruct_Nested_Nested2 {
	return m.GetNested2()
}

// Verify that TestStruct_Nested implements ImmutableTestStruct_Nested
var _ ImmutableTestStruct_Nested = (*TestStruct_Nested)(nil)

// ImmutableTestStruct_Nested_Nested2 is an immutable interface for TestStruct_Nested_Nested2
type ImmutableTestStruct_Nested_Nested2 interface {
	GetNested2() string
	GetIsNested() bool
	GetInt64() int64
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestStruct_Nested_Nested2
}

// Verify that TestStruct_Nested_Nested2 implements ImmutableTestStruct_Nested_Nested2
var _ ImmutableTestStruct_Nested_Nested2 = (*TestStruct_Nested_Nested2)(nil)

// ImmutableTestStruct_OneOfNested is an immutable interface for TestStruct_OneOfNested
type ImmutableTestStruct_OneOfNested interface {
	GetNested() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestStruct_OneOfNested
}

// Verify that TestStruct_OneOfNested implements ImmutableTestStruct_OneOfNested
var _ ImmutableTestStruct_OneOfNested = (*TestStruct_OneOfNested)(nil)

// ImmutableTestStruct_OneOfNested_Nested2 is an immutable interface for TestStruct_OneOfNested_Nested2
type ImmutableTestStruct_OneOfNested_Nested2 interface {
	GetNested2() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestStruct_OneOfNested_Nested2
}

// Verify that TestStruct_OneOfNested_Nested2 implements ImmutableTestStruct_OneOfNested_Nested2
var _ ImmutableTestStruct_OneOfNested_Nested2 = (*TestStruct_OneOfNested_Nested2)(nil)

// ImmutableTestGrandparent is an immutable interface for TestGrandparent
type ImmutableTestGrandparent interface {
	GetId() string
	GetVal() string
	GetImmutableEmbedded() iter.Seq[ImmutableTestGrandparent_Embedded]
	GetPriority() int64
	GetRiskScore() float32
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestGrandparent
}

// GetImmutableEmbedded implements ImmutableTestGrandparent
func (m *TestGrandparent) GetImmutableEmbedded() iter.Seq[ImmutableTestGrandparent_Embedded] {
	return func(yield func(ImmutableTestGrandparent_Embedded) bool) {
		if m == nil || m.Embedded == nil {
			return
		}
		for _, v := range m.Embedded {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that TestGrandparent implements ImmutableTestGrandparent
var _ ImmutableTestGrandparent = (*TestGrandparent)(nil)

// ImmutableTestGrandparent_Embedded is an immutable interface for TestGrandparent_Embedded
type ImmutableTestGrandparent_Embedded interface {
	GetVal() string
	GetImmutableEmbedded2() iter.Seq[ImmutableTestGrandparent_Embedded_Embedded2]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestGrandparent_Embedded
}

// GetImmutableEmbedded2 implements ImmutableTestGrandparent_Embedded
func (m *TestGrandparent_Embedded) GetImmutableEmbedded2() iter.Seq[ImmutableTestGrandparent_Embedded_Embedded2] {
	return func(yield func(ImmutableTestGrandparent_Embedded_Embedded2) bool) {
		if m == nil || m.Embedded2 == nil {
			return
		}
		for _, v := range m.Embedded2 {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that TestGrandparent_Embedded implements ImmutableTestGrandparent_Embedded
var _ ImmutableTestGrandparent_Embedded = (*TestGrandparent_Embedded)(nil)

// ImmutableTestGrandparent_Embedded_Embedded2 is an immutable interface for TestGrandparent_Embedded_Embedded2
type ImmutableTestGrandparent_Embedded_Embedded2 interface {
	GetVal() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestGrandparent_Embedded_Embedded2
}

// Verify that TestGrandparent_Embedded_Embedded2 implements ImmutableTestGrandparent_Embedded_Embedded2
var _ ImmutableTestGrandparent_Embedded_Embedded2 = (*TestGrandparent_Embedded_Embedded2)(nil)

// ImmutableTestParent1 is an immutable interface for TestParent1
type ImmutableTestParent1 interface {
	GetId() string
	GetParentId() string
	GetImmutableChildren() iter.Seq[ImmutableTestParent1_Child1Ref]
	GetVal() string
	GetImmutableStringSlice() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestParent1
}

// GetImmutableChildren implements ImmutableTestParent1
func (m *TestParent1) GetImmutableChildren() iter.Seq[ImmutableTestParent1_Child1Ref] {
	return func(yield func(ImmutableTestParent1_Child1Ref) bool) {
		if m == nil || m.Children == nil {
			return
		}
		for _, v := range m.Children {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableStringSlice implements ImmutableTestParent1
func (m *TestParent1) GetImmutableStringSlice() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.StringSlice == nil {
			return
		}
		for _, v := range m.StringSlice {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that TestParent1 implements ImmutableTestParent1
var _ ImmutableTestParent1 = (*TestParent1)(nil)

// ImmutableTestParent1_Child1Ref is an immutable interface for TestParent1_Child1Ref
type ImmutableTestParent1_Child1Ref interface {
	GetChildId() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestParent1_Child1Ref
}

// Verify that TestParent1_Child1Ref implements ImmutableTestParent1_Child1Ref
var _ ImmutableTestParent1_Child1Ref = (*TestParent1_Child1Ref)(nil)

// ImmutableTestChild1 is an immutable interface for TestChild1
type ImmutableTestChild1 interface {
	GetId() string
	GetVal() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestChild1
}

// Verify that TestChild1 implements ImmutableTestChild1
var _ ImmutableTestChild1 = (*TestChild1)(nil)

// ImmutableTestGrandChild1 is an immutable interface for TestGrandChild1
type ImmutableTestGrandChild1 interface {
	GetId() string
	GetParentId() string
	GetChildId() string
	GetVal() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestGrandChild1
}

// Verify that TestGrandChild1 implements ImmutableTestGrandChild1
var _ ImmutableTestGrandChild1 = (*TestGrandChild1)(nil)

// ImmutableTestGGrandChild1 is an immutable interface for TestGGrandChild1
type ImmutableTestGGrandChild1 interface {
	GetId() string
	GetVal() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestGGrandChild1
}

// Verify that TestGGrandChild1 implements ImmutableTestGGrandChild1
var _ ImmutableTestGGrandChild1 = (*TestGGrandChild1)(nil)

// ImmutableTestG2GrandChild1 is an immutable interface for TestG2GrandChild1
type ImmutableTestG2GrandChild1 interface {
	GetId() string
	GetParentId() string
	GetChildId() string
	GetVal() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestG2GrandChild1
}

// Verify that TestG2GrandChild1 implements ImmutableTestG2GrandChild1
var _ ImmutableTestG2GrandChild1 = (*TestG2GrandChild1)(nil)

// ImmutableTestG3GrandChild1 is an immutable interface for TestG3GrandChild1
type ImmutableTestG3GrandChild1 interface {
	GetId() string
	GetVal() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestG3GrandChild1
}

// Verify that TestG3GrandChild1 implements ImmutableTestG3GrandChild1
var _ ImmutableTestG3GrandChild1 = (*TestG3GrandChild1)(nil)

// ImmutableTestParent2 is an immutable interface for TestParent2
type ImmutableTestParent2 interface {
	GetId() string
	GetParentId() string
	GetVal() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestParent2
}

// Verify that TestParent2 implements ImmutableTestParent2
var _ ImmutableTestParent2 = (*TestParent2)(nil)

// ImmutableTestChild2 is an immutable interface for TestChild2
type ImmutableTestChild2 interface {
	GetId() string
	GetParentId() string
	// For a potential optimization, insert a direct link from child to grandparent.
	GetGrandparentId() string
	GetVal() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestChild2
}

// Verify that TestChild2 implements ImmutableTestChild2
var _ ImmutableTestChild2 = (*TestChild2)(nil)

// ImmutableTestParent3 is an immutable interface for TestParent3
type ImmutableTestParent3 interface {
	GetId() string
	GetParentId() string
	GetVal() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestParent3
}

// Verify that TestParent3 implements ImmutableTestParent3
var _ ImmutableTestParent3 = (*TestParent3)(nil)

// ImmutableTestParent4 is an immutable interface for TestParent4
type ImmutableTestParent4 interface {
	GetId() string
	GetParentId() string
	GetVal() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestParent4
}

// Verify that TestParent4 implements ImmutableTestParent4
var _ ImmutableTestParent4 = (*TestParent4)(nil)

// ImmutableTestChild1P4 is an immutable interface for TestChild1P4
type ImmutableTestChild1P4 interface {
	GetId() string
	GetParentId() string
	GetVal() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestChild1P4
}

// Verify that TestChild1P4 implements ImmutableTestChild1P4
var _ ImmutableTestChild1P4 = (*TestChild1P4)(nil)

// ImmutableTestShortCircuit is an immutable interface for TestShortCircuit
type ImmutableTestShortCircuit interface {
	GetId() string
	GetChildId() string
	GetG2GrandchildId() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *TestShortCircuit
}

// Verify that TestShortCircuit implements ImmutableTestShortCircuit
var _ ImmutableTestShortCircuit = (*TestShortCircuit)(nil)
