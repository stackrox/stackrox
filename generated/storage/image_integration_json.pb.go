// Code generated by protoc-gen-go-json. DO NOT EDIT.

package storage

import (
	_ "bytes"
	fmt "fmt"
	strings "strings"
	_ "time"
	unsafe "unsafe"
)

func (m *ImageIntegration) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}
func (m *ImageIntegration) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("id")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetName(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("name")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetType(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("type")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetCategories(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("categories")
		buf.WriteString("\"")
		buf.WriteString(":")
		trailingComma = false
		buf.WriteString("[")
		for _, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			buf.WriteString("\"" + v.String() + "\"")
		}
		buf.WriteString("]")
	}
	if x := m.GetClairify(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("clairify")
		buf.WriteString("\"")
		buf.WriteString(":")
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetScannerV4(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("scannerV4")
		buf.WriteString("\"")
		buf.WriteString(":")
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetDocker(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("docker")
		buf.WriteString("\"")
		buf.WriteString(":")
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetQuay(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("quay")
		buf.WriteString("\"")
		buf.WriteString(":")
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetEcr(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("ecr")
		buf.WriteString("\"")
		buf.WriteString(":")
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetGoogle(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("google")
		buf.WriteString("\"")
		buf.WriteString(":")
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetClair(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("clair")
		buf.WriteString("\"")
		buf.WriteString(":")
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetClairV4(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("clairV4")
		buf.WriteString("\"")
		buf.WriteString(":")
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetIbm(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("ibm")
		buf.WriteString("\"")
		buf.WriteString(":")
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetAzure(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("azure")
		buf.WriteString("\"")
		buf.WriteString(":")
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	if x := m.GetAutogenerated(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("autogenerated")
		buf.WriteString("\"")
		buf.WriteString(":")
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetClusterId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("clusterId")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetSkipTestIntegration(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("skipTestIntegration")
		buf.WriteString("\"")
		buf.WriteString(":")
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetSource(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("source")
		buf.WriteString("\"")
		buf.WriteString(":")
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *ImageIntegration_Source) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}
func (m *ImageIntegration_Source) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetClusterId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("clusterId")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetNamespace(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("namespace")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetImagePullSecretName(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("imagePullSecretName")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	buf.WriteString("}")
	return nil
}

func (m *IBMRegistryConfig) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}
func (m *IBMRegistryConfig) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetEndpoint(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("endpoint")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetApiKey(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("apiKey")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	buf.WriteString("}")
	return nil
}

func (m *QuayConfig) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}
func (m *QuayConfig) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetEndpoint(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("endpoint")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetOauthToken(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("oauthToken")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetInsecure(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("insecure")
		buf.WriteString("\"")
		buf.WriteString(":")
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetRegistryRobotCredentials(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("registryRobotCredentials")
		buf.WriteString("\"")
		buf.WriteString(":")
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *QuayConfig_RobotAccount) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}
func (m *QuayConfig_RobotAccount) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetUsername(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("username")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetPassword(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("password")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	buf.WriteString("}")
	return nil
}

func (m *ClairConfig) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}
func (m *ClairConfig) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetEndpoint(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("endpoint")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetInsecure(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("insecure")
		buf.WriteString("\"")
		buf.WriteString(":")
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *ClairV4Config) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}
func (m *ClairV4Config) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetEndpoint(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("endpoint")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetInsecure(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("insecure")
		buf.WriteString("\"")
		buf.WriteString(":")
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *ClairifyConfig) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}
func (m *ClairifyConfig) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetEndpoint(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("endpoint")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetGrpcEndpoint(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("grpcEndpoint")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetNumConcurrentScans(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("numConcurrentScans")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%d", x)
	}
	buf.WriteString("}")
	return nil
}

func (m *DockerConfig) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}
func (m *DockerConfig) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetEndpoint(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("endpoint")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetUsername(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("username")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetPassword(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("password")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetInsecure(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("insecure")
		buf.WriteString("\"")
		buf.WriteString(":")
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *ECRConfig) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}
func (m *ECRConfig) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetRegistryId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("registryId")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetAccessKeyId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("accessKeyId")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetSecretAccessKey(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("secretAccessKey")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetRegion(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("region")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetUseIam(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("useIam")
		buf.WriteString("\"")
		buf.WriteString(":")
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetEndpoint(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("endpoint")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetUseAssumeRole(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("useAssumeRole")
		buf.WriteString("\"")
		buf.WriteString(":")
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	if x := m.GetAssumeRoleId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("assumeRoleId")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetAssumeRoleExternalId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("assumeRoleExternalId")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetAuthorizationData(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("authorizationData")
		buf.WriteString("\"")
		buf.WriteString(":")
		if err := x.marshalJSON(buf); err != nil {
			return err
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *ECRConfig_AuthorizationData) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}
func (m *ECRConfig_AuthorizationData) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetUsername(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("username")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetPassword(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("password")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetExpiresAt(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("expiresAt")
		buf.WriteString("\"")
		buf.WriteString(":")
		if t := x; t == nil {
			buf.WriteString("null")
		} else {
			tf := t.AsTime().UTC().Format("2006-01-02T15:04:05.000000000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, "000")
			tf = strings.TrimSuffix(tf, ".000")
			buf.WriteString("\"" + tf + "Z" + "\"")
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *GoogleConfig) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}
func (m *GoogleConfig) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetEndpoint(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("endpoint")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetServiceAccount(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("serviceAccount")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetProject(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("project")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetWifEnabled(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("wifEnabled")
		buf.WriteString("\"")
		buf.WriteString(":")
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	buf.WriteString("}")
	return nil
}

func (m *ScannerV4Config) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}
func (m *ScannerV4Config) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetNumConcurrentScans(); x != 0 {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("numConcurrentScans")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%d", x)
	}
	if x := m.GetIndexerEndpoint(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("indexerEndpoint")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetMatcherEndpoint(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("matcherEndpoint")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	buf.WriteString("}")
	return nil
}

func (m *AzureConfig) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}
func (m *AzureConfig) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteString("{")
	if x := m.GetEndpoint(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("endpoint")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetUsername(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("username")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetPassword(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("password")
		buf.WriteString("\"")
		buf.WriteString(":")
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetWifEnabled(); x != false {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteString("\"")
		buf.WriteString("wifEnabled")
		buf.WriteString("\"")
		buf.WriteString(":")
		if x {
			buf.WriteString("true")
		} else {
			buf.WriteString("false")
		}
	}
	buf.WriteString("}")
	return nil
}
