// Code generated by protoc-gen-go-json. DO NOT EDIT.

package storage

import (
	fmt "fmt"
	strings "strings"
	unsafe "unsafe"
)

func (m *ActiveComponent) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *ActiveComponent) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("id")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetDeploymentId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("deploymentId")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetComponentId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("componentId")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetDEPRECATEDActiveContexts(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("DEPRECATEDActiveContexts")
		buf.WriteByte('"')
		buf.WriteByte(':')
		trailingComma = false
		buf.WriteByte('{')
		for k, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			fmt.Fprintf(buf, "%q", k)
			buf.WriteByte(':')
			if err := v.marshalJSON(buf); err != nil {
				return err
			}
		}
		buf.WriteByte('}')
	}
	if x := m.GetActiveContextsSlice(); x != nil {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("activeContextsSlice")
		buf.WriteByte('"')
		buf.WriteByte(':')
		trailingComma = false
		buf.WriteByte('[')
		for _, v := range x {
			if trailingComma {
				buf.WriteByte(',')
			}
			trailingComma = true
			if err := v.marshalJSON(buf); err != nil {
				return err
			}
		}
		buf.WriteByte(']')
	}
	buf.WriteString("}")
	return nil
}

func (m *ActiveComponent_ActiveContext) MarshalJSON() ([]byte, error) {
	if m == nil {
		return []byte("null"), nil
	}
	var buf strings.Builder
	buf.Grow(m.SizeVT())
	if err := m.marshalJSON(&buf); err != nil {
		return nil, err
	}
	str := buf.String()
	return unsafe.Slice(unsafe.StringData(str), len(str)), nil
}

func (m *ActiveComponent_ActiveContext) marshalJSON(buf *strings.Builder) (err error) {
	if m == nil {
		buf.WriteString("null")
		return nil
	}
	trailingComma := false
	if trailingComma {
	}
	buf.WriteByte('{')
	if x := m.GetContainerName(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("containerName")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	if x := m.GetImageId(); x != "" {
		if trailingComma {
			buf.WriteByte(',')
		}
		trailingComma = true
		buf.WriteByte('"')
		buf.WriteString("imageId")
		buf.WriteByte('"')
		buf.WriteByte(':')
		fmt.Fprintf(buf, "%q", x)
	}
	buf.WriteString("}")
	return nil
}
