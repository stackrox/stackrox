// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/network_baseline.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NetworkBaselineConnectionProperties represents information about a baseline connection
// next available tag: 4
type NetworkBaselineConnectionProperties struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Ingress     bool                   `protobuf:"varint,1,opt,name=ingress"`
	xxx_hidden_Port        uint32                 `protobuf:"varint,2,opt,name=port"`
	xxx_hidden_Protocol    L4Protocol             `protobuf:"varint,3,opt,name=protocol,enum=storage.L4Protocol"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkBaselineConnectionProperties) Reset() {
	*x = NetworkBaselineConnectionProperties{}
	mi := &file_storage_network_baseline_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkBaselineConnectionProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkBaselineConnectionProperties) ProtoMessage() {}

func (x *NetworkBaselineConnectionProperties) ProtoReflect() protoreflect.Message {
	mi := &file_storage_network_baseline_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkBaselineConnectionProperties) GetIngress() bool {
	if x != nil {
		return x.xxx_hidden_Ingress
	}
	return false
}

func (x *NetworkBaselineConnectionProperties) GetPort() uint32 {
	if x != nil {
		return x.xxx_hidden_Port
	}
	return 0
}

func (x *NetworkBaselineConnectionProperties) GetProtocol() L4Protocol {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_Protocol
		}
	}
	return L4Protocol_L4_PROTOCOL_UNKNOWN
}

func (x *NetworkBaselineConnectionProperties) SetIngress(v bool) {
	x.xxx_hidden_Ingress = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *NetworkBaselineConnectionProperties) SetPort(v uint32) {
	x.xxx_hidden_Port = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *NetworkBaselineConnectionProperties) SetProtocol(v L4Protocol) {
	x.xxx_hidden_Protocol = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *NetworkBaselineConnectionProperties) HasIngress() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkBaselineConnectionProperties) HasPort() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NetworkBaselineConnectionProperties) HasProtocol() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *NetworkBaselineConnectionProperties) ClearIngress() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Ingress = false
}

func (x *NetworkBaselineConnectionProperties) ClearPort() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Port = 0
}

func (x *NetworkBaselineConnectionProperties) ClearProtocol() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Protocol = L4Protocol_L4_PROTOCOL_UNKNOWN
}

type NetworkBaselineConnectionProperties_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Whether this connection is an ingress/egress, from the PoV
	// of the deployment whose baseline this is in
	Ingress *bool
	// May be 0 if not applicable (e.g., icmp), and denotes the destination port
	Port     *uint32
	Protocol *L4Protocol
}

func (b0 NetworkBaselineConnectionProperties_builder) Build() *NetworkBaselineConnectionProperties {
	m0 := &NetworkBaselineConnectionProperties{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Ingress != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Ingress = *b.Ingress
	}
	if b.Port != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Port = *b.Port
	}
	if b.Protocol != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Protocol = *b.Protocol
	}
	return m0
}

// NetworkBaselinePeer represents a baseline peer.
// next available tag: 3
type NetworkBaselinePeer struct {
	state                 protoimpl.MessageState                  `protogen:"opaque.v1"`
	xxx_hidden_Entity     *NetworkEntity                          `protobuf:"bytes,1,opt,name=entity"`
	xxx_hidden_Properties *[]*NetworkBaselineConnectionProperties `protobuf:"bytes,2,rep,name=properties"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkBaselinePeer) Reset() {
	*x = NetworkBaselinePeer{}
	mi := &file_storage_network_baseline_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkBaselinePeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkBaselinePeer) ProtoMessage() {}

func (x *NetworkBaselinePeer) ProtoReflect() protoreflect.Message {
	mi := &file_storage_network_baseline_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkBaselinePeer) GetEntity() *NetworkEntity {
	if x != nil {
		return x.xxx_hidden_Entity
	}
	return nil
}

func (x *NetworkBaselinePeer) GetProperties() []*NetworkBaselineConnectionProperties {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_Properties) {
				protoimpl.X.UnmarshalField(x, 2)
			}
			var rv *[]*NetworkBaselineConnectionProperties
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Properties), protoimpl.Pointer(&rv))
			return *rv
		}
	}
	return nil
}

func (x *NetworkBaselinePeer) SetEntity(v *NetworkEntity) {
	x.xxx_hidden_Entity = v
}

func (x *NetworkBaselinePeer) SetProperties(v []*NetworkBaselineConnectionProperties) {
	var sv *[]*NetworkBaselineConnectionProperties
	protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Properties), protoimpl.Pointer(&sv))
	if sv == nil {
		sv = &[]*NetworkBaselineConnectionProperties{}
		protoimpl.X.AtomicInitializePointer(protoimpl.Pointer(&x.xxx_hidden_Properties), protoimpl.Pointer(&sv))
	}
	*sv = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *NetworkBaselinePeer) HasEntity() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Entity != nil
}

func (x *NetworkBaselinePeer) ClearEntity() {
	x.xxx_hidden_Entity = nil
}

type NetworkBaselinePeer_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Entity *NetworkEntity
	// Will always have at least one element
	Properties []*NetworkBaselineConnectionProperties
}

func (b0 NetworkBaselinePeer_builder) Build() *NetworkBaselinePeer {
	m0 := &NetworkBaselinePeer{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Entity = b.Entity
	if b.Properties != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Properties = &b.Properties
	}
	return m0
}

// NetworkBaseline represents a network baseline of a deployment. It contains all
// the baseline peers and their respective connections.
// next available tag: 8
type NetworkBaseline struct {
	state                           protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_DeploymentId         *string                 `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId"`
	xxx_hidden_ClusterId            *string                 `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_Namespace            *string                 `protobuf:"bytes,3,opt,name=namespace"`
	xxx_hidden_Peers                *[]*NetworkBaselinePeer `protobuf:"bytes,4,rep,name=peers"`
	xxx_hidden_ForbiddenPeers       *[]*NetworkBaselinePeer `protobuf:"bytes,5,rep,name=forbidden_peers,json=forbiddenPeers"`
	xxx_hidden_ObservationPeriodEnd *timestamppb.Timestamp  `protobuf:"bytes,6,opt,name=observation_period_end,json=observationPeriodEnd"`
	xxx_hidden_Locked               bool                    `protobuf:"varint,7,opt,name=locked"`
	xxx_hidden_DeploymentName       *string                 `protobuf:"bytes,8,opt,name=deployment_name,json=deploymentName"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkBaseline) Reset() {
	*x = NetworkBaseline{}
	mi := &file_storage_network_baseline_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkBaseline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkBaseline) ProtoMessage() {}

func (x *NetworkBaseline) ProtoReflect() protoreflect.Message {
	mi := &file_storage_network_baseline_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkBaseline) GetDeploymentId() string {
	if x != nil {
		if x.xxx_hidden_DeploymentId != nil {
			return *x.xxx_hidden_DeploymentId
		}
		return ""
	}
	return ""
}

func (x *NetworkBaseline) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *NetworkBaseline) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *NetworkBaseline) GetPeers() []*NetworkBaselinePeer {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_Peers) {
				protoimpl.X.UnmarshalField(x, 4)
			}
			var rv *[]*NetworkBaselinePeer
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Peers), protoimpl.Pointer(&rv))
			return *rv
		}
	}
	return nil
}

func (x *NetworkBaseline) GetForbiddenPeers() []*NetworkBaselinePeer {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_ForbiddenPeers) {
				protoimpl.X.UnmarshalField(x, 5)
			}
			var rv *[]*NetworkBaselinePeer
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_ForbiddenPeers), protoimpl.Pointer(&rv))
			return *rv
		}
	}
	return nil
}

func (x *NetworkBaseline) GetObservationPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_ObservationPeriodEnd) {
				protoimpl.X.UnmarshalField(x, 6)
			}
			var rv *timestamppb.Timestamp
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_ObservationPeriodEnd), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *NetworkBaseline) GetLocked() bool {
	if x != nil {
		return x.xxx_hidden_Locked
	}
	return false
}

func (x *NetworkBaseline) GetDeploymentName() string {
	if x != nil {
		if x.xxx_hidden_DeploymentName != nil {
			return *x.xxx_hidden_DeploymentName
		}
		return ""
	}
	return ""
}

func (x *NetworkBaseline) SetDeploymentId(v string) {
	x.xxx_hidden_DeploymentId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *NetworkBaseline) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *NetworkBaseline) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *NetworkBaseline) SetPeers(v []*NetworkBaselinePeer) {
	var sv *[]*NetworkBaselinePeer
	protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Peers), protoimpl.Pointer(&sv))
	if sv == nil {
		sv = &[]*NetworkBaselinePeer{}
		protoimpl.X.AtomicInitializePointer(protoimpl.Pointer(&x.xxx_hidden_Peers), protoimpl.Pointer(&sv))
	}
	*sv = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *NetworkBaseline) SetForbiddenPeers(v []*NetworkBaselinePeer) {
	var sv *[]*NetworkBaselinePeer
	protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_ForbiddenPeers), protoimpl.Pointer(&sv))
	if sv == nil {
		sv = &[]*NetworkBaselinePeer{}
		protoimpl.X.AtomicInitializePointer(protoimpl.Pointer(&x.xxx_hidden_ForbiddenPeers), protoimpl.Pointer(&sv))
	}
	*sv = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 8)
}

func (x *NetworkBaseline) SetObservationPeriodEnd(v *timestamppb.Timestamp) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_ObservationPeriodEnd, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 8)
	}
}

func (x *NetworkBaseline) SetLocked(v bool) {
	x.xxx_hidden_Locked = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *NetworkBaseline) SetDeploymentName(v string) {
	x.xxx_hidden_DeploymentName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 8)
}

func (x *NetworkBaseline) HasDeploymentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkBaseline) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NetworkBaseline) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *NetworkBaseline) HasObservationPeriodEnd() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *NetworkBaseline) HasLocked() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *NetworkBaseline) HasDeploymentName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *NetworkBaseline) ClearDeploymentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DeploymentId = nil
}

func (x *NetworkBaseline) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ClusterId = nil
}

func (x *NetworkBaseline) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Namespace = nil
}

func (x *NetworkBaseline) ClearObservationPeriodEnd() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_ObservationPeriodEnd, (*timestamppb.Timestamp)(nil))
}

func (x *NetworkBaseline) ClearLocked() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Locked = false
}

func (x *NetworkBaseline) ClearDeploymentName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_DeploymentName = nil
}

type NetworkBaseline_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// This is the ID of the baseline.
	DeploymentId *string
	ClusterId    *string
	Namespace    *string
	Peers        []*NetworkBaselinePeer
	// A list of peers that will never be added to the baseline.
	// For now, this contains peers that the user has manually removed.
	// This is used to ensure we don't add it back in the event
	// we see the flow again.
	ForbiddenPeers       []*NetworkBaselinePeer
	ObservationPeriodEnd *timestamppb.Timestamp
	// Indicates if this baseline has been locked by user.
	// Here locking means:
	//
	//	1: Do not let system automatically add any allowed peer to baseline
	//	2: Start reporting violations on flows that are not in the baseline
	Locked         *bool
	DeploymentName *string
}

func (b0 NetworkBaseline_builder) Build() *NetworkBaseline {
	m0 := &NetworkBaseline{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DeploymentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_DeploymentId = b.DeploymentId
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.Peers != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_Peers = &b.Peers
	}
	if b.ForbiddenPeers != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 8)
		x.xxx_hidden_ForbiddenPeers = &b.ForbiddenPeers
	}
	if b.ObservationPeriodEnd != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 8)
		x.xxx_hidden_ObservationPeriodEnd = b.ObservationPeriodEnd
	}
	if b.Locked != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_Locked = *b.Locked
	}
	if b.DeploymentName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 8)
		x.xxx_hidden_DeploymentName = b.DeploymentName
	}
	return m0
}

var File_storage_network_baseline_proto protoreflect.FileDescriptor

const file_storage_network_baseline_proto_rawDesc = "" +
	"\n" +
	"\x1estorage/network_baseline.proto\x12\astorage\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1astorage/network_flow.proto\x1a!google/protobuf/go_features.proto\"\x84\x01\n" +
	"#NetworkBaselineConnectionProperties\x12\x18\n" +
	"\aingress\x18\x01 \x01(\bR\aingress\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12/\n" +
	"\bprotocol\x18\x03 \x01(\x0e2\x13.storage.L4ProtocolR\bprotocol\"\x97\x01\n" +
	"\x13NetworkBaselinePeer\x12.\n" +
	"\x06entity\x18\x01 \x01(\v2\x16.storage.NetworkEntityR\x06entity\x12P\n" +
	"\n" +
	"properties\x18\x02 \x03(\v2,.storage.NetworkBaselineConnectionPropertiesB\x02(\x01R\n" +
	"properties\"\x8d\x03\n" +
	"\x0fNetworkBaseline\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x02 \x01(\tR\tclusterId\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x126\n" +
	"\x05peers\x18\x04 \x03(\v2\x1c.storage.NetworkBaselinePeerB\x02(\x01R\x05peers\x12I\n" +
	"\x0fforbidden_peers\x18\x05 \x03(\v2\x1c.storage.NetworkBaselinePeerB\x02(\x01R\x0eforbiddenPeers\x12T\n" +
	"\x16observation_period_end\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\x14observationPeriodEnd\x12\x16\n" +
	"\x06locked\x18\a \x01(\bR\x06locked\x12'\n" +
	"\x0fdeployment_name\x18\b \x01(\tR\x0edeploymentNameB6\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storage\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_storage_network_baseline_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_storage_network_baseline_proto_goTypes = []any{
	(*NetworkBaselineConnectionProperties)(nil), // 0: storage.NetworkBaselineConnectionProperties
	(*NetworkBaselinePeer)(nil),                 // 1: storage.NetworkBaselinePeer
	(*NetworkBaseline)(nil),                     // 2: storage.NetworkBaseline
	(L4Protocol)(0),                             // 3: storage.L4Protocol
	(*NetworkEntity)(nil),                       // 4: storage.NetworkEntity
	(*timestamppb.Timestamp)(nil),               // 5: google.protobuf.Timestamp
}
var file_storage_network_baseline_proto_depIdxs = []int32{
	3, // 0: storage.NetworkBaselineConnectionProperties.protocol:type_name -> storage.L4Protocol
	4, // 1: storage.NetworkBaselinePeer.entity:type_name -> storage.NetworkEntity
	0, // 2: storage.NetworkBaselinePeer.properties:type_name -> storage.NetworkBaselineConnectionProperties
	1, // 3: storage.NetworkBaseline.peers:type_name -> storage.NetworkBaselinePeer
	1, // 4: storage.NetworkBaseline.forbidden_peers:type_name -> storage.NetworkBaselinePeer
	5, // 5: storage.NetworkBaseline.observation_period_end:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_storage_network_baseline_proto_init() }
func file_storage_network_baseline_proto_init() {
	if File_storage_network_baseline_proto != nil {
		return
	}
	file_storage_network_flow_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_network_baseline_proto_rawDesc), len(file_storage_network_baseline_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_network_baseline_proto_goTypes,
		DependencyIndexes: file_storage_network_baseline_proto_depIdxs,
		MessageInfos:      file_storage_network_baseline_proto_msgTypes,
	}.Build()
	File_storage_network_baseline_proto = out.File
	file_storage_network_baseline_proto_goTypes = nil
	file_storage_network_baseline_proto_depIdxs = nil
}
