// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package storage

import (
	"iter"
	"time"
)

// ImmutableImageIntegration is an immutable interface for ImageIntegration
type ImmutableImageIntegration interface {
	GetId() string
	GetName() string
	GetType() string
	GetImmutableCategories() iter.Seq[ImageIntegrationCategory]
	GetImmutableClairify() ImmutableClairifyConfig
	GetImmutableScannerV4() ImmutableScannerV4Config
	GetImmutableDocker() ImmutableDockerConfig
	GetImmutableQuay() ImmutableQuayConfig
	GetImmutableEcr() ImmutableECRConfig
	GetImmutableGoogle() ImmutableGoogleConfig
	GetImmutableClair() ImmutableClairConfig
	GetImmutableClairV4() ImmutableClairV4Config
	GetImmutableIbm() ImmutableIBMRegistryConfig
	GetImmutableAzure() ImmutableAzureConfig
	GetAutogenerated() bool
	GetClusterId() string
	GetSkipTestIntegration() bool
	GetImmutableSource() ImmutableImageIntegration_Source
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ImageIntegration
}

// GetImmutableCategories implements ImmutableImageIntegration
func (m *ImageIntegration) GetImmutableCategories() iter.Seq[ImageIntegrationCategory] {
	return func(yield func(ImageIntegrationCategory) bool) {
		if m == nil || m.Categories == nil {
			return
		}
		for _, v := range m.Categories {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableClairify implements ImmutableImageIntegration
func (m *ImageIntegration) GetImmutableClairify() ImmutableClairifyConfig {
	return m.GetClairify()
}

// GetImmutableScannerV4 implements ImmutableImageIntegration
func (m *ImageIntegration) GetImmutableScannerV4() ImmutableScannerV4Config {
	return m.GetScannerV4()
}

// GetImmutableDocker implements ImmutableImageIntegration
func (m *ImageIntegration) GetImmutableDocker() ImmutableDockerConfig {
	return m.GetDocker()
}

// GetImmutableQuay implements ImmutableImageIntegration
func (m *ImageIntegration) GetImmutableQuay() ImmutableQuayConfig {
	return m.GetQuay()
}

// GetImmutableEcr implements ImmutableImageIntegration
func (m *ImageIntegration) GetImmutableEcr() ImmutableECRConfig {
	return m.GetEcr()
}

// GetImmutableGoogle implements ImmutableImageIntegration
func (m *ImageIntegration) GetImmutableGoogle() ImmutableGoogleConfig {
	return m.GetGoogle()
}

// GetImmutableClair implements ImmutableImageIntegration
func (m *ImageIntegration) GetImmutableClair() ImmutableClairConfig {
	return m.GetClair()
}

// GetImmutableClairV4 implements ImmutableImageIntegration
func (m *ImageIntegration) GetImmutableClairV4() ImmutableClairV4Config {
	return m.GetClairV4()
}

// GetImmutableIbm implements ImmutableImageIntegration
func (m *ImageIntegration) GetImmutableIbm() ImmutableIBMRegistryConfig {
	return m.GetIbm()
}

// GetImmutableAzure implements ImmutableImageIntegration
func (m *ImageIntegration) GetImmutableAzure() ImmutableAzureConfig {
	return m.GetAzure()
}

// GetImmutableSource implements ImmutableImageIntegration
func (m *ImageIntegration) GetImmutableSource() ImmutableImageIntegration_Source {
	return m.GetSource()
}

// Verify that ImageIntegration implements ImmutableImageIntegration
var _ ImmutableImageIntegration = (*ImageIntegration)(nil)

// ImmutableImageIntegration_Source is an immutable interface for ImageIntegration_Source
type ImmutableImageIntegration_Source interface {
	GetClusterId() string
	GetNamespace() string
	GetImagePullSecretName() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ImageIntegration_Source
}

// Verify that ImageIntegration_Source implements ImmutableImageIntegration_Source
var _ ImmutableImageIntegration_Source = (*ImageIntegration_Source)(nil)

// ImmutableIBMRegistryConfig is an immutable interface for IBMRegistryConfig
type ImmutableIBMRegistryConfig interface {
	GetEndpoint() string
	// The API key for the integration. The server will mask the value of this credential in responses and logs.
	GetApiKey() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *IBMRegistryConfig
}

// Verify that IBMRegistryConfig implements ImmutableIBMRegistryConfig
var _ ImmutableIBMRegistryConfig = (*IBMRegistryConfig)(nil)

// ImmutableQuayConfig is an immutable interface for QuayConfig
type ImmutableQuayConfig interface {
	GetEndpoint() string
	// The OAuth token for the integration. Required if this is a scanner integration. The server will mask the value of this credential in responses and logs.
	GetOauthToken() string
	GetInsecure() bool
	// For registry integrations, Quay recommends using robot accounts. oauthToken will continue to be used for scanner integration.
	GetImmutableRegistryRobotCredentials() ImmutableQuayConfig_RobotAccount
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *QuayConfig
}

// GetImmutableRegistryRobotCredentials implements ImmutableQuayConfig
func (m *QuayConfig) GetImmutableRegistryRobotCredentials() ImmutableQuayConfig_RobotAccount {
	return m.GetRegistryRobotCredentials()
}

// Verify that QuayConfig implements ImmutableQuayConfig
var _ ImmutableQuayConfig = (*QuayConfig)(nil)

// ImmutableQuayConfig_RobotAccount is an immutable interface for QuayConfig_RobotAccount
type ImmutableQuayConfig_RobotAccount interface {
	GetUsername() string
	// The server will mask the value of this password in responses and logs.
	GetPassword() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *QuayConfig_RobotAccount
}

// Verify that QuayConfig_RobotAccount implements ImmutableQuayConfig_RobotAccount
var _ ImmutableQuayConfig_RobotAccount = (*QuayConfig_RobotAccount)(nil)

// ImmutableClairConfig is an immutable interface for ClairConfig
type ImmutableClairConfig interface {
	GetEndpoint() string
	GetInsecure() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ClairConfig
}

// Verify that ClairConfig implements ImmutableClairConfig
var _ ImmutableClairConfig = (*ClairConfig)(nil)

// ImmutableClairV4Config is an immutable interface for ClairV4Config
type ImmutableClairV4Config interface {
	GetEndpoint() string
	GetInsecure() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ClairV4Config
}

// Verify that ClairV4Config implements ImmutableClairV4Config
var _ ImmutableClairV4Config = (*ClairV4Config)(nil)

// ImmutableClairifyConfig is an immutable interface for ClairifyConfig
type ImmutableClairifyConfig interface {
	GetEndpoint() string
	GetGrpcEndpoint() string
	GetNumConcurrentScans() int32
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ClairifyConfig
}

// Verify that ClairifyConfig implements ImmutableClairifyConfig
var _ ImmutableClairifyConfig = (*ClairifyConfig)(nil)

// ImmutableDockerConfig is an immutable interface for DockerConfig
type ImmutableDockerConfig interface {
	GetEndpoint() string
	GetUsername() string
	// The password for the integration. The server will mask the value of this credential in responses and logs.
	GetPassword() string
	GetInsecure() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *DockerConfig
}

// Verify that DockerConfig implements ImmutableDockerConfig
var _ ImmutableDockerConfig = (*DockerConfig)(nil)

// ImmutableECRConfig is an immutable interface for ECRConfig
type ImmutableECRConfig interface {
	GetRegistryId() string
	// The access key ID for the integration. The server will mask the value of this credential in responses and logs.
	GetAccessKeyId() string
	// The secret access key for the integration. The server will mask the value of this credential in responses and logs.
	GetSecretAccessKey() string
	GetRegion() string
	GetUseIam() bool
	GetEndpoint() string
	GetUseAssumeRole() bool
	GetAssumeRoleId() string
	GetAssumeRoleExternalId() string
	GetImmutableAuthorizationData() ImmutableECRConfig_AuthorizationData
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ECRConfig
}

// GetImmutableAuthorizationData implements ImmutableECRConfig
func (m *ECRConfig) GetImmutableAuthorizationData() ImmutableECRConfig_AuthorizationData {
	return m.GetAuthorizationData()
}

// Verify that ECRConfig implements ImmutableECRConfig
var _ ImmutableECRConfig = (*ECRConfig)(nil)

// ImmutableECRConfig_AuthorizationData is an immutable interface for ECRConfig_AuthorizationData
type ImmutableECRConfig_AuthorizationData interface {
	GetUsername() string
	GetPassword() string
	GetImmutableExpiresAt() time.Time
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ECRConfig_AuthorizationData
}

// GetImmutableExpiresAt implements ImmutableECRConfig_AuthorizationData
func (m *ECRConfig_AuthorizationData) GetImmutableExpiresAt() time.Time {
	if m == nil || m.ExpiresAt == nil {
		return time.Time{}
	}
	return m.ExpiresAt.AsTime()
}

// Verify that ECRConfig_AuthorizationData implements ImmutableECRConfig_AuthorizationData
var _ ImmutableECRConfig_AuthorizationData = (*ECRConfig_AuthorizationData)(nil)

// ImmutableGoogleConfig is an immutable interface for GoogleConfig
type ImmutableGoogleConfig interface {
	GetEndpoint() string
	// The service account for the integration. The server will mask the value of this credential in responses and logs.
	GetServiceAccount() string
	GetProject() string
	GetWifEnabled() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *GoogleConfig
}

// Verify that GoogleConfig implements ImmutableGoogleConfig
var _ ImmutableGoogleConfig = (*GoogleConfig)(nil)

// ImmutableScannerV4Config is an immutable interface for ScannerV4Config
type ImmutableScannerV4Config interface {
	GetNumConcurrentScans() int32
	GetIndexerEndpoint() string
	GetMatcherEndpoint() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ScannerV4Config
}

// Verify that ScannerV4Config implements ImmutableScannerV4Config
var _ ImmutableScannerV4Config = (*ScannerV4Config)(nil)

// ImmutableAzureConfig is an immutable interface for AzureConfig
type ImmutableAzureConfig interface {
	GetEndpoint() string
	GetUsername() string
	// The password for the integration. The server will mask the value of this credential in responses and logs.
	GetPassword() string
	// Enables authentication with short-lived tokens using Azure managed identities or Azure workload identities.
	GetWifEnabled() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *AzureConfig
}

// Verify that AzureConfig implements ImmutableAzureConfig
var _ ImmutableAzureConfig = (*AzureConfig)(nil)
