// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: storage/compliance_operator.proto

//go:build protoopaque

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComplianceOperatorCheckResult_CheckStatus int32

const (
	ComplianceOperatorCheckResult_UNSET          ComplianceOperatorCheckResult_CheckStatus = 0
	ComplianceOperatorCheckResult_PASS           ComplianceOperatorCheckResult_CheckStatus = 1
	ComplianceOperatorCheckResult_FAIL           ComplianceOperatorCheckResult_CheckStatus = 2
	ComplianceOperatorCheckResult_ERROR          ComplianceOperatorCheckResult_CheckStatus = 3
	ComplianceOperatorCheckResult_INFO           ComplianceOperatorCheckResult_CheckStatus = 4
	ComplianceOperatorCheckResult_MANUAL         ComplianceOperatorCheckResult_CheckStatus = 5
	ComplianceOperatorCheckResult_NOT_APPLICABLE ComplianceOperatorCheckResult_CheckStatus = 6
	ComplianceOperatorCheckResult_INCONSISTENT   ComplianceOperatorCheckResult_CheckStatus = 7
)

// Enum value maps for ComplianceOperatorCheckResult_CheckStatus.
var (
	ComplianceOperatorCheckResult_CheckStatus_name = map[int32]string{
		0: "UNSET",
		1: "PASS",
		2: "FAIL",
		3: "ERROR",
		4: "INFO",
		5: "MANUAL",
		6: "NOT_APPLICABLE",
		7: "INCONSISTENT",
	}
	ComplianceOperatorCheckResult_CheckStatus_value = map[string]int32{
		"UNSET":          0,
		"PASS":           1,
		"FAIL":           2,
		"ERROR":          3,
		"INFO":           4,
		"MANUAL":         5,
		"NOT_APPLICABLE": 6,
		"INCONSISTENT":   7,
	}
)

func (x ComplianceOperatorCheckResult_CheckStatus) Enum() *ComplianceOperatorCheckResult_CheckStatus {
	p := new(ComplianceOperatorCheckResult_CheckStatus)
	*p = x
	return p
}

func (x ComplianceOperatorCheckResult_CheckStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComplianceOperatorCheckResult_CheckStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_storage_compliance_operator_proto_enumTypes[0].Descriptor()
}

func (ComplianceOperatorCheckResult_CheckStatus) Type() protoreflect.EnumType {
	return &file_storage_compliance_operator_proto_enumTypes[0]
}

func (x ComplianceOperatorCheckResult_CheckStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Next Tag: 10
type ComplianceOperatorCheckResult struct {
	state                   protoimpl.MessageState                    `protogen:"opaque.v1"`
	xxx_hidden_Id           *string                                   `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_CheckId      *string                                   `protobuf:"bytes,2,opt,name=check_id,json=checkId"`
	xxx_hidden_CheckName    *string                                   `protobuf:"bytes,3,opt,name=check_name,json=checkName"`
	xxx_hidden_ClusterId    *string                                   `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_Status       ComplianceOperatorCheckResult_CheckStatus `protobuf:"varint,5,opt,name=status,enum=storage.ComplianceOperatorCheckResult_CheckStatus"`
	xxx_hidden_Description  *string                                   `protobuf:"bytes,6,opt,name=description"`
	xxx_hidden_Instructions *string                                   `protobuf:"bytes,7,opt,name=instructions"`
	xxx_hidden_Labels       map[string]string                         `protobuf:"bytes,8,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Annotations  map[string]string                         `protobuf:"bytes,9,rep,name=annotations" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ComplianceOperatorCheckResult) Reset() {
	*x = ComplianceOperatorCheckResult{}
	mi := &file_storage_compliance_operator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorCheckResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorCheckResult) ProtoMessage() {}

func (x *ComplianceOperatorCheckResult) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorCheckResult) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResult) GetCheckId() string {
	if x != nil {
		if x.xxx_hidden_CheckId != nil {
			return *x.xxx_hidden_CheckId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResult) GetCheckName() string {
	if x != nil {
		if x.xxx_hidden_CheckName != nil {
			return *x.xxx_hidden_CheckName
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResult) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResult) GetStatus() ComplianceOperatorCheckResult_CheckStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_Status
		}
	}
	return ComplianceOperatorCheckResult_UNSET
}

func (x *ComplianceOperatorCheckResult) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResult) GetInstructions() string {
	if x != nil {
		if x.xxx_hidden_Instructions != nil {
			return *x.xxx_hidden_Instructions
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorCheckResult) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *ComplianceOperatorCheckResult) GetAnnotations() map[string]string {
	if x != nil {
		return x.xxx_hidden_Annotations
	}
	return nil
}

func (x *ComplianceOperatorCheckResult) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *ComplianceOperatorCheckResult) SetCheckId(v string) {
	x.xxx_hidden_CheckId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *ComplianceOperatorCheckResult) SetCheckName(v string) {
	x.xxx_hidden_CheckName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *ComplianceOperatorCheckResult) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *ComplianceOperatorCheckResult) SetStatus(v ComplianceOperatorCheckResult_CheckStatus) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 9)
}

func (x *ComplianceOperatorCheckResult) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 9)
}

func (x *ComplianceOperatorCheckResult) SetInstructions(v string) {
	x.xxx_hidden_Instructions = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *ComplianceOperatorCheckResult) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *ComplianceOperatorCheckResult) SetAnnotations(v map[string]string) {
	x.xxx_hidden_Annotations = v
}

func (x *ComplianceOperatorCheckResult) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorCheckResult) HasCheckId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorCheckResult) HasCheckName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorCheckResult) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceOperatorCheckResult) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ComplianceOperatorCheckResult) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ComplianceOperatorCheckResult) HasInstructions() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ComplianceOperatorCheckResult) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceOperatorCheckResult) ClearCheckId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CheckId = nil
}

func (x *ComplianceOperatorCheckResult) ClearCheckName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_CheckName = nil
}

func (x *ComplianceOperatorCheckResult) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceOperatorCheckResult) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Status = ComplianceOperatorCheckResult_UNSET
}

func (x *ComplianceOperatorCheckResult) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Description = nil
}

func (x *ComplianceOperatorCheckResult) ClearInstructions() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Instructions = nil
}

type ComplianceOperatorCheckResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id           *string
	CheckId      *string
	CheckName    *string
	ClusterId    *string
	Status       *ComplianceOperatorCheckResult_CheckStatus
	Description  *string
	Instructions *string
	Labels       map[string]string
	Annotations  map[string]string
}

func (b0 ComplianceOperatorCheckResult_builder) Build() *ComplianceOperatorCheckResult {
	m0 := &ComplianceOperatorCheckResult{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Id = b.Id
	}
	if b.CheckId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_CheckId = b.CheckId
	}
	if b.CheckName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_CheckName = b.CheckName
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 9)
		x.xxx_hidden_Status = *b.Status
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 9)
		x.xxx_hidden_Description = b.Description
	}
	if b.Instructions != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_Instructions = b.Instructions
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Annotations = b.Annotations
	return m0
}

// Next Tag: 9
type ComplianceOperatorProfile struct {
	state                  protoimpl.MessageState             `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                            `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_ProfileId   *string                            `protobuf:"bytes,2,opt,name=profile_id,json=profileId"`
	xxx_hidden_Name        *string                            `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_ClusterId   *string                            `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_Labels      map[string]string                  `protobuf:"bytes,5,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Annotations map[string]string                  `protobuf:"bytes,6,rep,name=annotations" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Description *string                            `protobuf:"bytes,7,opt,name=description"`
	xxx_hidden_Rules       *[]*ComplianceOperatorProfile_Rule `protobuf:"bytes,8,rep,name=rules"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceOperatorProfile) Reset() {
	*x = ComplianceOperatorProfile{}
	mi := &file_storage_compliance_operator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorProfile) ProtoMessage() {}

func (x *ComplianceOperatorProfile) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorProfile) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfile) GetProfileId() string {
	if x != nil {
		if x.xxx_hidden_ProfileId != nil {
			return *x.xxx_hidden_ProfileId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfile) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfile) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfile) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *ComplianceOperatorProfile) GetAnnotations() map[string]string {
	if x != nil {
		return x.xxx_hidden_Annotations
	}
	return nil
}

func (x *ComplianceOperatorProfile) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfile) GetRules() []*ComplianceOperatorProfile_Rule {
	if x != nil {
		if x.xxx_hidden_Rules != nil {
			return *x.xxx_hidden_Rules
		}
	}
	return nil
}

func (x *ComplianceOperatorProfile) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 8)
}

func (x *ComplianceOperatorProfile) SetProfileId(v string) {
	x.xxx_hidden_ProfileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 8)
}

func (x *ComplianceOperatorProfile) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 8)
}

func (x *ComplianceOperatorProfile) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 8)
}

func (x *ComplianceOperatorProfile) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *ComplianceOperatorProfile) SetAnnotations(v map[string]string) {
	x.xxx_hidden_Annotations = v
}

func (x *ComplianceOperatorProfile) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 8)
}

func (x *ComplianceOperatorProfile) SetRules(v []*ComplianceOperatorProfile_Rule) {
	x.xxx_hidden_Rules = &v
}

func (x *ComplianceOperatorProfile) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorProfile) HasProfileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorProfile) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorProfile) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceOperatorProfile) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ComplianceOperatorProfile) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceOperatorProfile) ClearProfileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ProfileId = nil
}

func (x *ComplianceOperatorProfile) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceOperatorProfile) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceOperatorProfile) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Description = nil
}

type ComplianceOperatorProfile_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *string
	ProfileId   *string
	Name        *string
	ClusterId   *string
	Labels      map[string]string
	Annotations map[string]string
	Description *string
	Rules       []*ComplianceOperatorProfile_Rule
}

func (b0 ComplianceOperatorProfile_builder) Build() *ComplianceOperatorProfile {
	m0 := &ComplianceOperatorProfile{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 8)
		x.xxx_hidden_Id = b.Id
	}
	if b.ProfileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 8)
		x.xxx_hidden_ProfileId = b.ProfileId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 8)
		x.xxx_hidden_Name = b.Name
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 8)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Annotations = b.Annotations
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 8)
		x.xxx_hidden_Description = b.Description
	}
	x.xxx_hidden_Rules = &b.Rules
	return m0
}

// Next Tag: 10
type ComplianceOperatorRule struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_RuleId      *string                `protobuf:"bytes,2,opt,name=rule_id,json=ruleId"`
	xxx_hidden_Name        *string                `protobuf:"bytes,3,opt,name=name"`
	xxx_hidden_ClusterId   *string                `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_Labels      map[string]string      `protobuf:"bytes,5,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Annotations map[string]string      `protobuf:"bytes,6,rep,name=annotations" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Title       *string                `protobuf:"bytes,7,opt,name=title"`
	xxx_hidden_Description *string                `protobuf:"bytes,8,opt,name=description"`
	xxx_hidden_Rationale   *string                `protobuf:"bytes,9,opt,name=rationale"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceOperatorRule) Reset() {
	*x = ComplianceOperatorRule{}
	mi := &file_storage_compliance_operator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorRule) ProtoMessage() {}

func (x *ComplianceOperatorRule) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorRule) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRule) GetRuleId() string {
	if x != nil {
		if x.xxx_hidden_RuleId != nil {
			return *x.xxx_hidden_RuleId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRule) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRule) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRule) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *ComplianceOperatorRule) GetAnnotations() map[string]string {
	if x != nil {
		return x.xxx_hidden_Annotations
	}
	return nil
}

func (x *ComplianceOperatorRule) GetTitle() string {
	if x != nil {
		if x.xxx_hidden_Title != nil {
			return *x.xxx_hidden_Title
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRule) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRule) GetRationale() string {
	if x != nil {
		if x.xxx_hidden_Rationale != nil {
			return *x.xxx_hidden_Rationale
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorRule) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 9)
}

func (x *ComplianceOperatorRule) SetRuleId(v string) {
	x.xxx_hidden_RuleId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 9)
}

func (x *ComplianceOperatorRule) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 9)
}

func (x *ComplianceOperatorRule) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 9)
}

func (x *ComplianceOperatorRule) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *ComplianceOperatorRule) SetAnnotations(v map[string]string) {
	x.xxx_hidden_Annotations = v
}

func (x *ComplianceOperatorRule) SetTitle(v string) {
	x.xxx_hidden_Title = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 9)
}

func (x *ComplianceOperatorRule) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 9)
}

func (x *ComplianceOperatorRule) SetRationale(v string) {
	x.xxx_hidden_Rationale = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 9)
}

func (x *ComplianceOperatorRule) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorRule) HasRuleId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorRule) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorRule) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceOperatorRule) HasTitle() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ComplianceOperatorRule) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ComplianceOperatorRule) HasRationale() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *ComplianceOperatorRule) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceOperatorRule) ClearRuleId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_RuleId = nil
}

func (x *ComplianceOperatorRule) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceOperatorRule) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceOperatorRule) ClearTitle() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Title = nil
}

func (x *ComplianceOperatorRule) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Description = nil
}

func (x *ComplianceOperatorRule) ClearRationale() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Rationale = nil
}

type ComplianceOperatorRule_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *string
	RuleId      *string
	Name        *string
	ClusterId   *string
	Labels      map[string]string
	Annotations map[string]string
	Title       *string
	Description *string
	Rationale   *string
}

func (b0 ComplianceOperatorRule_builder) Build() *ComplianceOperatorRule {
	m0 := &ComplianceOperatorRule{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 9)
		x.xxx_hidden_Id = b.Id
	}
	if b.RuleId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 9)
		x.xxx_hidden_RuleId = b.RuleId
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 9)
		x.xxx_hidden_Name = b.Name
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 9)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Annotations = b.Annotations
	if b.Title != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 9)
		x.xxx_hidden_Title = b.Title
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 9)
		x.xxx_hidden_Description = b.Description
	}
	if b.Rationale != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 9)
		x.xxx_hidden_Rationale = b.Rationale
	}
	return m0
}

// Next Tag: 7
type ComplianceOperatorScanSettingBinding struct {
	state                  protoimpl.MessageState                           `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                                          `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name        *string                                          `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_ClusterId   *string                                          `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_Labels      map[string]string                                `protobuf:"bytes,4,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Annotations map[string]string                                `protobuf:"bytes,5,rep,name=annotations" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Profiles    *[]*ComplianceOperatorScanSettingBinding_Profile `protobuf:"bytes,6,rep,name=profiles"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceOperatorScanSettingBinding) Reset() {
	*x = ComplianceOperatorScanSettingBinding{}
	mi := &file_storage_compliance_operator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorScanSettingBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorScanSettingBinding) ProtoMessage() {}

func (x *ComplianceOperatorScanSettingBinding) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorScanSettingBinding) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanSettingBinding) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanSettingBinding) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanSettingBinding) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *ComplianceOperatorScanSettingBinding) GetAnnotations() map[string]string {
	if x != nil {
		return x.xxx_hidden_Annotations
	}
	return nil
}

func (x *ComplianceOperatorScanSettingBinding) GetProfiles() []*ComplianceOperatorScanSettingBinding_Profile {
	if x != nil {
		if x.xxx_hidden_Profiles != nil {
			return *x.xxx_hidden_Profiles
		}
	}
	return nil
}

func (x *ComplianceOperatorScanSettingBinding) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *ComplianceOperatorScanSettingBinding) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *ComplianceOperatorScanSettingBinding) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *ComplianceOperatorScanSettingBinding) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *ComplianceOperatorScanSettingBinding) SetAnnotations(v map[string]string) {
	x.xxx_hidden_Annotations = v
}

func (x *ComplianceOperatorScanSettingBinding) SetProfiles(v []*ComplianceOperatorScanSettingBinding_Profile) {
	x.xxx_hidden_Profiles = &v
}

func (x *ComplianceOperatorScanSettingBinding) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorScanSettingBinding) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorScanSettingBinding) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorScanSettingBinding) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceOperatorScanSettingBinding) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceOperatorScanSettingBinding) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ClusterId = nil
}

type ComplianceOperatorScanSettingBinding_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *string
	Name        *string
	ClusterId   *string
	Labels      map[string]string
	Annotations map[string]string
	Profiles    []*ComplianceOperatorScanSettingBinding_Profile
}

func (b0 ComplianceOperatorScanSettingBinding_builder) Build() *ComplianceOperatorScanSettingBinding {
	m0 := &ComplianceOperatorScanSettingBinding{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Annotations = b.Annotations
	x.xxx_hidden_Profiles = &b.Profiles
	return m0
}

type ComplianceOperatorScan struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name        *string                `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_ClusterId   *string                `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_ProfileId   *string                `protobuf:"bytes,4,opt,name=profile_id,json=profileId"`
	xxx_hidden_Labels      map[string]string      `protobuf:"bytes,5,rep,name=labels" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Annotations map[string]string      `protobuf:"bytes,6,rep,name=annotations" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceOperatorScan) Reset() {
	*x = ComplianceOperatorScan{}
	mi := &file_storage_compliance_operator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorScan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorScan) ProtoMessage() {}

func (x *ComplianceOperatorScan) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorScan) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScan) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScan) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScan) GetProfileId() string {
	if x != nil {
		if x.xxx_hidden_ProfileId != nil {
			return *x.xxx_hidden_ProfileId
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScan) GetLabels() map[string]string {
	if x != nil {
		return x.xxx_hidden_Labels
	}
	return nil
}

func (x *ComplianceOperatorScan) GetAnnotations() map[string]string {
	if x != nil {
		return x.xxx_hidden_Annotations
	}
	return nil
}

func (x *ComplianceOperatorScan) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *ComplianceOperatorScan) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *ComplianceOperatorScan) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *ComplianceOperatorScan) SetProfileId(v string) {
	x.xxx_hidden_ProfileId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *ComplianceOperatorScan) SetLabels(v map[string]string) {
	x.xxx_hidden_Labels = v
}

func (x *ComplianceOperatorScan) SetAnnotations(v map[string]string) {
	x.xxx_hidden_Annotations = v
}

func (x *ComplianceOperatorScan) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorScan) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceOperatorScan) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceOperatorScan) HasProfileId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceOperatorScan) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceOperatorScan) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceOperatorScan) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceOperatorScan) ClearProfileId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ProfileId = nil
}

type ComplianceOperatorScan_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *string
	Name        *string
	ClusterId   *string
	ProfileId   *string
	Labels      map[string]string
	Annotations map[string]string
}

func (b0 ComplianceOperatorScan_builder) Build() *ComplianceOperatorScan {
	m0 := &ComplianceOperatorScan{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.ProfileId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_ProfileId = b.ProfileId
	}
	x.xxx_hidden_Labels = b.Labels
	x.xxx_hidden_Annotations = b.Annotations
	return m0
}

type ComplianceOperatorProfile_Rule struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceOperatorProfile_Rule) Reset() {
	*x = ComplianceOperatorProfile_Rule{}
	mi := &file_storage_compliance_operator_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorProfile_Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorProfile_Rule) ProtoMessage() {}

func (x *ComplianceOperatorProfile_Rule) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorProfile_Rule) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorProfile_Rule) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ComplianceOperatorProfile_Rule) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorProfile_Rule) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type ComplianceOperatorProfile_Rule_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
}

func (b0 ComplianceOperatorProfile_Rule_builder) Build() *ComplianceOperatorProfile_Rule {
	m0 := &ComplianceOperatorProfile_Rule{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

type ComplianceOperatorScanSettingBinding_Profile struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceOperatorScanSettingBinding_Profile) Reset() {
	*x = ComplianceOperatorScanSettingBinding_Profile{}
	mi := &file_storage_compliance_operator_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceOperatorScanSettingBinding_Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceOperatorScanSettingBinding_Profile) ProtoMessage() {}

func (x *ComplianceOperatorScanSettingBinding_Profile) ProtoReflect() protoreflect.Message {
	mi := &file_storage_compliance_operator_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceOperatorScanSettingBinding_Profile) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceOperatorScanSettingBinding_Profile) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ComplianceOperatorScanSettingBinding_Profile) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceOperatorScanSettingBinding_Profile) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type ComplianceOperatorScanSettingBinding_Profile_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
}

func (b0 ComplianceOperatorScanSettingBinding_Profile_builder) Build() *ComplianceOperatorScanSettingBinding_Profile {
	m0 := &ComplianceOperatorScanSettingBinding_Profile{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Name = b.Name
	}
	return m0
}

var File_storage_compliance_operator_proto protoreflect.FileDescriptor

const file_storage_compliance_operator_proto_rawDesc = "" +
	"\n" +
	"!storage/compliance_operator.proto\x12\astorage\x1a!google/protobuf/go_features.proto\"\xb1\x05\n" +
	"\x1dComplianceOperatorCheckResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bcheck_id\x18\x02 \x01(\tR\acheckId\x12\x1d\n" +
	"\n" +
	"check_name\x18\x03 \x01(\tR\tcheckName\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x04 \x01(\tR\tclusterId\x12J\n" +
	"\x06status\x18\x05 \x01(\x0e22.storage.ComplianceOperatorCheckResult.CheckStatusR\x06status\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12\"\n" +
	"\finstructions\x18\a \x01(\tR\finstructions\x12J\n" +
	"\x06labels\x18\b \x03(\v22.storage.ComplianceOperatorCheckResult.LabelsEntryR\x06labels\x12Y\n" +
	"\vannotations\x18\t \x03(\v27.storage.ComplianceOperatorCheckResult.AnnotationsEntryR\vannotations\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"s\n" +
	"\vCheckStatus\x12\t\n" +
	"\x05UNSET\x10\x00\x12\b\n" +
	"\x04PASS\x10\x01\x12\b\n" +
	"\x04FAIL\x10\x02\x12\t\n" +
	"\x05ERROR\x10\x03\x12\b\n" +
	"\x04INFO\x10\x04\x12\n" +
	"\n" +
	"\x06MANUAL\x10\x05\x12\x12\n" +
	"\x0eNOT_APPLICABLE\x10\x06\x12\x10\n" +
	"\fINCONSISTENT\x10\a\"\x94\x04\n" +
	"\x19ComplianceOperatorProfile\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"profile_id\x18\x02 \x01(\tR\tprofileId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x04 \x01(\tR\tclusterId\x12F\n" +
	"\x06labels\x18\x05 \x03(\v2..storage.ComplianceOperatorProfile.LabelsEntryR\x06labels\x12U\n" +
	"\vannotations\x18\x06 \x03(\v23.storage.ComplianceOperatorProfile.AnnotationsEntryR\vannotations\x12 \n" +
	"\vdescription\x18\a \x01(\tR\vdescription\x12=\n" +
	"\x05rules\x18\b \x03(\v2'.storage.ComplianceOperatorProfile.RuleR\x05rules\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a\x1a\n" +
	"\x04Rule\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\xde\x03\n" +
	"\x16ComplianceOperatorRule\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\arule_id\x18\x02 \x01(\tR\x06ruleId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x04 \x01(\tR\tclusterId\x12C\n" +
	"\x06labels\x18\x05 \x03(\v2+.storage.ComplianceOperatorRule.LabelsEntryR\x06labels\x12R\n" +
	"\vannotations\x18\x06 \x03(\v20.storage.ComplianceOperatorRule.AnnotationsEntryR\vannotations\x12\x14\n" +
	"\x05title\x18\a \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\b \x01(\tR\vdescription\x12\x1c\n" +
	"\trationale\x18\t \x01(\tR\trationale\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8b\x04\n" +
	"$ComplianceOperatorScanSettingBinding\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\x12Q\n" +
	"\x06labels\x18\x04 \x03(\v29.storage.ComplianceOperatorScanSettingBinding.LabelsEntryR\x06labels\x12`\n" +
	"\vannotations\x18\x05 \x03(\v2>.storage.ComplianceOperatorScanSettingBinding.AnnotationsEntryR\vannotations\x12Q\n" +
	"\bprofiles\x18\x06 \x03(\v25.storage.ComplianceOperatorScanSettingBinding.ProfileR\bprofiles\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a\x1d\n" +
	"\aProfile\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\x8e\x03\n" +
	"\x16ComplianceOperatorScan\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\x12\x1d\n" +
	"\n" +
	"profile_id\x18\x04 \x01(\tR\tprofileId\x12C\n" +
	"\x06labels\x18\x05 \x03(\v2+.storage.ComplianceOperatorScan.LabelsEntryR\x06labels\x12R\n" +
	"\vannotations\x18\x06 \x03(\v20.storage.ComplianceOperatorScan.AnnotationsEntryR\vannotations\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B6\n" +
	"\x19io.stackrox.proto.storageZ\x11./storage;storage\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_storage_compliance_operator_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storage_compliance_operator_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_storage_compliance_operator_proto_goTypes = []any{
	(ComplianceOperatorCheckResult_CheckStatus)(0), // 0: storage.ComplianceOperatorCheckResult.CheckStatus
	(*ComplianceOperatorCheckResult)(nil),          // 1: storage.ComplianceOperatorCheckResult
	(*ComplianceOperatorProfile)(nil),              // 2: storage.ComplianceOperatorProfile
	(*ComplianceOperatorRule)(nil),                 // 3: storage.ComplianceOperatorRule
	(*ComplianceOperatorScanSettingBinding)(nil),   // 4: storage.ComplianceOperatorScanSettingBinding
	(*ComplianceOperatorScan)(nil),                 // 5: storage.ComplianceOperatorScan
	nil,                                            // 6: storage.ComplianceOperatorCheckResult.LabelsEntry
	nil,                                            // 7: storage.ComplianceOperatorCheckResult.AnnotationsEntry
	nil,                                            // 8: storage.ComplianceOperatorProfile.LabelsEntry
	nil,                                            // 9: storage.ComplianceOperatorProfile.AnnotationsEntry
	(*ComplianceOperatorProfile_Rule)(nil),         // 10: storage.ComplianceOperatorProfile.Rule
	nil,                                            // 11: storage.ComplianceOperatorRule.LabelsEntry
	nil,                                            // 12: storage.ComplianceOperatorRule.AnnotationsEntry
	nil,                                            // 13: storage.ComplianceOperatorScanSettingBinding.LabelsEntry
	nil,                                            // 14: storage.ComplianceOperatorScanSettingBinding.AnnotationsEntry
	(*ComplianceOperatorScanSettingBinding_Profile)(nil), // 15: storage.ComplianceOperatorScanSettingBinding.Profile
	nil, // 16: storage.ComplianceOperatorScan.LabelsEntry
	nil, // 17: storage.ComplianceOperatorScan.AnnotationsEntry
}
var file_storage_compliance_operator_proto_depIdxs = []int32{
	0,  // 0: storage.ComplianceOperatorCheckResult.status:type_name -> storage.ComplianceOperatorCheckResult.CheckStatus
	6,  // 1: storage.ComplianceOperatorCheckResult.labels:type_name -> storage.ComplianceOperatorCheckResult.LabelsEntry
	7,  // 2: storage.ComplianceOperatorCheckResult.annotations:type_name -> storage.ComplianceOperatorCheckResult.AnnotationsEntry
	8,  // 3: storage.ComplianceOperatorProfile.labels:type_name -> storage.ComplianceOperatorProfile.LabelsEntry
	9,  // 4: storage.ComplianceOperatorProfile.annotations:type_name -> storage.ComplianceOperatorProfile.AnnotationsEntry
	10, // 5: storage.ComplianceOperatorProfile.rules:type_name -> storage.ComplianceOperatorProfile.Rule
	11, // 6: storage.ComplianceOperatorRule.labels:type_name -> storage.ComplianceOperatorRule.LabelsEntry
	12, // 7: storage.ComplianceOperatorRule.annotations:type_name -> storage.ComplianceOperatorRule.AnnotationsEntry
	13, // 8: storage.ComplianceOperatorScanSettingBinding.labels:type_name -> storage.ComplianceOperatorScanSettingBinding.LabelsEntry
	14, // 9: storage.ComplianceOperatorScanSettingBinding.annotations:type_name -> storage.ComplianceOperatorScanSettingBinding.AnnotationsEntry
	15, // 10: storage.ComplianceOperatorScanSettingBinding.profiles:type_name -> storage.ComplianceOperatorScanSettingBinding.Profile
	16, // 11: storage.ComplianceOperatorScan.labels:type_name -> storage.ComplianceOperatorScan.LabelsEntry
	17, // 12: storage.ComplianceOperatorScan.annotations:type_name -> storage.ComplianceOperatorScan.AnnotationsEntry
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_storage_compliance_operator_proto_init() }
func file_storage_compliance_operator_proto_init() {
	if File_storage_compliance_operator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storage_compliance_operator_proto_rawDesc), len(file_storage_compliance_operator_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_compliance_operator_proto_goTypes,
		DependencyIndexes: file_storage_compliance_operator_proto_depIdxs,
		EnumInfos:         file_storage_compliance_operator_proto_enumTypes,
		MessageInfos:      file_storage_compliance_operator_proto_msgTypes,
	}.Build()
	File_storage_compliance_operator_proto = out.File
	file_storage_compliance_operator_proto_goTypes = nil
	file_storage_compliance_operator_proto_depIdxs = nil
}
