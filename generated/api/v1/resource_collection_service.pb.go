// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/v1/resource_collection_service.proto

//go:build !protoopaque

package v1

import (
	storage "github.com/stackrox/rox/generated/storage"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListCollectionSelectorsResponse struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Selectors     []string               `protobuf:"bytes,1,rep,name=selectors" json:"selectors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectionSelectorsResponse) Reset() {
	*x = ListCollectionSelectorsResponse{}
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionSelectorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionSelectorsResponse) ProtoMessage() {}

func (x *ListCollectionSelectorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListCollectionSelectorsResponse) GetSelectors() []string {
	if x != nil {
		return x.Selectors
	}
	return nil
}

func (x *ListCollectionSelectorsResponse) SetSelectors(v []string) {
	x.Selectors = v
}

type ListCollectionSelectorsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Selectors []string
}

func (b0 ListCollectionSelectorsResponse_builder) Build() *ListCollectionSelectorsResponse {
	m0 := &ListCollectionSelectorsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Selectors = b.Selectors
	return m0
}

type GetCollectionRequest struct {
	state         protoimpl.MessageState            `protogen:"hybrid.v1"`
	Id            string                            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Options       *CollectionDeploymentMatchOptions `protobuf:"bytes,2,opt,name=options" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCollectionRequest) Reset() {
	*x = GetCollectionRequest{}
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionRequest) ProtoMessage() {}

func (x *GetCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetCollectionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetCollectionRequest) GetOptions() *CollectionDeploymentMatchOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *GetCollectionRequest) SetId(v string) {
	x.Id = v
}

func (x *GetCollectionRequest) SetOptions(v *CollectionDeploymentMatchOptions) {
	x.Options = v
}

func (x *GetCollectionRequest) HasOptions() bool {
	if x == nil {
		return false
	}
	return x.Options != nil
}

func (x *GetCollectionRequest) ClearOptions() {
	x.Options = nil
}

type GetCollectionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      string
	Options *CollectionDeploymentMatchOptions
}

func (b0 GetCollectionRequest_builder) Build() *GetCollectionRequest {
	m0 := &GetCollectionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	x.Options = b.Options
	return m0
}

type CollectionDeploymentMatchOptions struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	WithMatches   bool                   `protobuf:"varint,1,opt,name=with_matches,json=withMatches" json:"with_matches,omitempty"`
	FilterQuery   *RawQuery              `protobuf:"bytes,2,opt,name=filter_query,json=filterQuery" json:"filter_query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectionDeploymentMatchOptions) Reset() {
	*x = CollectionDeploymentMatchOptions{}
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionDeploymentMatchOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionDeploymentMatchOptions) ProtoMessage() {}

func (x *CollectionDeploymentMatchOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CollectionDeploymentMatchOptions) GetWithMatches() bool {
	if x != nil {
		return x.WithMatches
	}
	return false
}

func (x *CollectionDeploymentMatchOptions) GetFilterQuery() *RawQuery {
	if x != nil {
		return x.FilterQuery
	}
	return nil
}

func (x *CollectionDeploymentMatchOptions) SetWithMatches(v bool) {
	x.WithMatches = v
}

func (x *CollectionDeploymentMatchOptions) SetFilterQuery(v *RawQuery) {
	x.FilterQuery = v
}

func (x *CollectionDeploymentMatchOptions) HasFilterQuery() bool {
	if x == nil {
		return false
	}
	return x.FilterQuery != nil
}

func (x *CollectionDeploymentMatchOptions) ClearFilterQuery() {
	x.FilterQuery = nil
}

type CollectionDeploymentMatchOptions_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	WithMatches bool
	FilterQuery *RawQuery
}

func (b0 CollectionDeploymentMatchOptions_builder) Build() *CollectionDeploymentMatchOptions {
	m0 := &CollectionDeploymentMatchOptions{}
	b, x := &b0, m0
	_, _ = b, x
	x.WithMatches = b.WithMatches
	x.FilterQuery = b.FilterQuery
	return m0
}

type GetCollectionResponse struct {
	state         protoimpl.MessageState      `protogen:"hybrid.v1"`
	Collection    *storage.ResourceCollection `protobuf:"bytes,1,opt,name=collection" json:"collection,omitempty"`
	Deployments   []*storage.ListDeployment   `protobuf:"bytes,2,rep,name=deployments" json:"deployments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCollectionResponse) Reset() {
	*x = GetCollectionResponse{}
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionResponse) ProtoMessage() {}

func (x *GetCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetCollectionResponse) GetCollection() *storage.ResourceCollection {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *GetCollectionResponse) GetDeployments() []*storage.ListDeployment {
	if x != nil {
		return x.Deployments
	}
	return nil
}

func (x *GetCollectionResponse) SetCollection(v *storage.ResourceCollection) {
	x.Collection = v
}

func (x *GetCollectionResponse) SetDeployments(v []*storage.ListDeployment) {
	x.Deployments = v
}

func (x *GetCollectionResponse) HasCollection() bool {
	if x == nil {
		return false
	}
	return x.Collection != nil
}

func (x *GetCollectionResponse) ClearCollection() {
	x.Collection = nil
}

type GetCollectionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Collection  *storage.ResourceCollection
	Deployments []*storage.ListDeployment
}

func (b0 GetCollectionResponse_builder) Build() *GetCollectionResponse {
	m0 := &GetCollectionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Collection = b.Collection
	x.Deployments = b.Deployments
	return m0
}

type GetCollectionCountRequest struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Query         *RawQuery              `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCollectionCountRequest) Reset() {
	*x = GetCollectionCountRequest{}
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollectionCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionCountRequest) ProtoMessage() {}

func (x *GetCollectionCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetCollectionCountRequest) GetQuery() *RawQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *GetCollectionCountRequest) SetQuery(v *RawQuery) {
	x.Query = v
}

func (x *GetCollectionCountRequest) HasQuery() bool {
	if x == nil {
		return false
	}
	return x.Query != nil
}

func (x *GetCollectionCountRequest) ClearQuery() {
	x.Query = nil
}

type GetCollectionCountRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Query *RawQuery
}

func (b0 GetCollectionCountRequest_builder) Build() *GetCollectionCountRequest {
	m0 := &GetCollectionCountRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Query = b.Query
	return m0
}

type GetCollectionCountResponse struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCollectionCountResponse) Reset() {
	*x = GetCollectionCountResponse{}
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollectionCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionCountResponse) ProtoMessage() {}

func (x *GetCollectionCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetCollectionCountResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetCollectionCountResponse) SetCount(v int32) {
	x.Count = v
}

type GetCollectionCountResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Count int32
}

func (b0 GetCollectionCountResponse_builder) Build() *GetCollectionCountResponse {
	m0 := &GetCollectionCountResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Count = b.Count
	return m0
}

type CreateCollectionRequest struct {
	state                 protoimpl.MessageState      `protogen:"hybrid.v1"`
	Name                  string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description           string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	ResourceSelectors     []*storage.ResourceSelector `protobuf:"bytes,3,rep,name=resource_selectors,json=resourceSelectors" json:"resource_selectors,omitempty"`
	EmbeddedCollectionIds []string                    `protobuf:"bytes,4,rep,name=embedded_collection_ids,json=embeddedCollectionIds" json:"embedded_collection_ids,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CreateCollectionRequest) Reset() {
	*x = CreateCollectionRequest{}
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionRequest) ProtoMessage() {}

func (x *CreateCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateCollectionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCollectionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateCollectionRequest) GetResourceSelectors() []*storage.ResourceSelector {
	if x != nil {
		return x.ResourceSelectors
	}
	return nil
}

func (x *CreateCollectionRequest) GetEmbeddedCollectionIds() []string {
	if x != nil {
		return x.EmbeddedCollectionIds
	}
	return nil
}

func (x *CreateCollectionRequest) SetName(v string) {
	x.Name = v
}

func (x *CreateCollectionRequest) SetDescription(v string) {
	x.Description = v
}

func (x *CreateCollectionRequest) SetResourceSelectors(v []*storage.ResourceSelector) {
	x.ResourceSelectors = v
}

func (x *CreateCollectionRequest) SetEmbeddedCollectionIds(v []string) {
	x.EmbeddedCollectionIds = v
}

type CreateCollectionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name                  string
	Description           string
	ResourceSelectors     []*storage.ResourceSelector
	EmbeddedCollectionIds []string
}

func (b0 CreateCollectionRequest_builder) Build() *CreateCollectionRequest {
	m0 := &CreateCollectionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Description = b.Description
	x.ResourceSelectors = b.ResourceSelectors
	x.EmbeddedCollectionIds = b.EmbeddedCollectionIds
	return m0
}

type CreateCollectionResponse struct {
	state         protoimpl.MessageState      `protogen:"hybrid.v1"`
	Collection    *storage.ResourceCollection `protobuf:"bytes,1,opt,name=collection" json:"collection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCollectionResponse) Reset() {
	*x = CreateCollectionResponse{}
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionResponse) ProtoMessage() {}

func (x *CreateCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CreateCollectionResponse) GetCollection() *storage.ResourceCollection {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *CreateCollectionResponse) SetCollection(v *storage.ResourceCollection) {
	x.Collection = v
}

func (x *CreateCollectionResponse) HasCollection() bool {
	if x == nil {
		return false
	}
	return x.Collection != nil
}

func (x *CreateCollectionResponse) ClearCollection() {
	x.Collection = nil
}

type CreateCollectionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Collection *storage.ResourceCollection
}

func (b0 CreateCollectionResponse_builder) Build() *CreateCollectionResponse {
	m0 := &CreateCollectionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Collection = b.Collection
	return m0
}

type UpdateCollectionRequest struct {
	state                 protoimpl.MessageState      `protogen:"hybrid.v1"`
	Id                    string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                  string                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description           string                      `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ResourceSelectors     []*storage.ResourceSelector `protobuf:"bytes,4,rep,name=resource_selectors,json=resourceSelectors" json:"resource_selectors,omitempty"`
	EmbeddedCollectionIds []string                    `protobuf:"bytes,5,rep,name=embedded_collection_ids,json=embeddedCollectionIds" json:"embedded_collection_ids,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *UpdateCollectionRequest) Reset() {
	*x = UpdateCollectionRequest{}
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCollectionRequest) ProtoMessage() {}

func (x *UpdateCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateCollectionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCollectionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCollectionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateCollectionRequest) GetResourceSelectors() []*storage.ResourceSelector {
	if x != nil {
		return x.ResourceSelectors
	}
	return nil
}

func (x *UpdateCollectionRequest) GetEmbeddedCollectionIds() []string {
	if x != nil {
		return x.EmbeddedCollectionIds
	}
	return nil
}

func (x *UpdateCollectionRequest) SetId(v string) {
	x.Id = v
}

func (x *UpdateCollectionRequest) SetName(v string) {
	x.Name = v
}

func (x *UpdateCollectionRequest) SetDescription(v string) {
	x.Description = v
}

func (x *UpdateCollectionRequest) SetResourceSelectors(v []*storage.ResourceSelector) {
	x.ResourceSelectors = v
}

func (x *UpdateCollectionRequest) SetEmbeddedCollectionIds(v []string) {
	x.EmbeddedCollectionIds = v
}

type UpdateCollectionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id                    string
	Name                  string
	Description           string
	ResourceSelectors     []*storage.ResourceSelector
	EmbeddedCollectionIds []string
}

func (b0 UpdateCollectionRequest_builder) Build() *UpdateCollectionRequest {
	m0 := &UpdateCollectionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	x.Name = b.Name
	x.Description = b.Description
	x.ResourceSelectors = b.ResourceSelectors
	x.EmbeddedCollectionIds = b.EmbeddedCollectionIds
	return m0
}

type UpdateCollectionResponse struct {
	state         protoimpl.MessageState      `protogen:"hybrid.v1"`
	Collection    *storage.ResourceCollection `protobuf:"bytes,1,opt,name=collection" json:"collection,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCollectionResponse) Reset() {
	*x = UpdateCollectionResponse{}
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCollectionResponse) ProtoMessage() {}

func (x *UpdateCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateCollectionResponse) GetCollection() *storage.ResourceCollection {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *UpdateCollectionResponse) SetCollection(v *storage.ResourceCollection) {
	x.Collection = v
}

func (x *UpdateCollectionResponse) HasCollection() bool {
	if x == nil {
		return false
	}
	return x.Collection != nil
}

func (x *UpdateCollectionResponse) ClearCollection() {
	x.Collection = nil
}

type UpdateCollectionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Collection *storage.ResourceCollection
}

func (b0 UpdateCollectionResponse_builder) Build() *UpdateCollectionResponse {
	m0 := &UpdateCollectionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Collection = b.Collection
	return m0
}

type DryRunCollectionRequest struct {
	state                 protoimpl.MessageState            `protogen:"hybrid.v1"`
	Name                  string                            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id                    string                            `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"` // set if dryrun on existing collections
	Description           string                            `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ResourceSelectors     []*storage.ResourceSelector       `protobuf:"bytes,4,rep,name=resource_selectors,json=resourceSelectors" json:"resource_selectors,omitempty"`
	EmbeddedCollectionIds []string                          `protobuf:"bytes,5,rep,name=embedded_collection_ids,json=embeddedCollectionIds" json:"embedded_collection_ids,omitempty"`
	Options               *CollectionDeploymentMatchOptions `protobuf:"bytes,6,opt,name=options" json:"options,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *DryRunCollectionRequest) Reset() {
	*x = DryRunCollectionRequest{}
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DryRunCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DryRunCollectionRequest) ProtoMessage() {}

func (x *DryRunCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DryRunCollectionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DryRunCollectionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DryRunCollectionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DryRunCollectionRequest) GetResourceSelectors() []*storage.ResourceSelector {
	if x != nil {
		return x.ResourceSelectors
	}
	return nil
}

func (x *DryRunCollectionRequest) GetEmbeddedCollectionIds() []string {
	if x != nil {
		return x.EmbeddedCollectionIds
	}
	return nil
}

func (x *DryRunCollectionRequest) GetOptions() *CollectionDeploymentMatchOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *DryRunCollectionRequest) SetName(v string) {
	x.Name = v
}

func (x *DryRunCollectionRequest) SetId(v string) {
	x.Id = v
}

func (x *DryRunCollectionRequest) SetDescription(v string) {
	x.Description = v
}

func (x *DryRunCollectionRequest) SetResourceSelectors(v []*storage.ResourceSelector) {
	x.ResourceSelectors = v
}

func (x *DryRunCollectionRequest) SetEmbeddedCollectionIds(v []string) {
	x.EmbeddedCollectionIds = v
}

func (x *DryRunCollectionRequest) SetOptions(v *CollectionDeploymentMatchOptions) {
	x.Options = v
}

func (x *DryRunCollectionRequest) HasOptions() bool {
	if x == nil {
		return false
	}
	return x.Options != nil
}

func (x *DryRunCollectionRequest) ClearOptions() {
	x.Options = nil
}

type DryRunCollectionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name                  string
	Id                    string
	Description           string
	ResourceSelectors     []*storage.ResourceSelector
	EmbeddedCollectionIds []string
	Options               *CollectionDeploymentMatchOptions
}

func (b0 DryRunCollectionRequest_builder) Build() *DryRunCollectionRequest {
	m0 := &DryRunCollectionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Name = b.Name
	x.Id = b.Id
	x.Description = b.Description
	x.ResourceSelectors = b.ResourceSelectors
	x.EmbeddedCollectionIds = b.EmbeddedCollectionIds
	x.Options = b.Options
	return m0
}

type DryRunCollectionResponse struct {
	state         protoimpl.MessageState    `protogen:"hybrid.v1"`
	Deployments   []*storage.ListDeployment `protobuf:"bytes,1,rep,name=deployments" json:"deployments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DryRunCollectionResponse) Reset() {
	*x = DryRunCollectionResponse{}
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DryRunCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DryRunCollectionResponse) ProtoMessage() {}

func (x *DryRunCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DryRunCollectionResponse) GetDeployments() []*storage.ListDeployment {
	if x != nil {
		return x.Deployments
	}
	return nil
}

func (x *DryRunCollectionResponse) SetDeployments(v []*storage.ListDeployment) {
	x.Deployments = v
}

type DryRunCollectionResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Deployments []*storage.ListDeployment
}

func (b0 DryRunCollectionResponse_builder) Build() *DryRunCollectionResponse {
	m0 := &DryRunCollectionResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Deployments = b.Deployments
	return m0
}

type ListCollectionsRequest struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Query         *RawQuery              `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectionsRequest) Reset() {
	*x = ListCollectionsRequest{}
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsRequest) ProtoMessage() {}

func (x *ListCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListCollectionsRequest) GetQuery() *RawQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListCollectionsRequest) SetQuery(v *RawQuery) {
	x.Query = v
}

func (x *ListCollectionsRequest) HasQuery() bool {
	if x == nil {
		return false
	}
	return x.Query != nil
}

func (x *ListCollectionsRequest) ClearQuery() {
	x.Query = nil
}

type ListCollectionsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Query *RawQuery
}

func (b0 ListCollectionsRequest_builder) Build() *ListCollectionsRequest {
	m0 := &ListCollectionsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Query = b.Query
	return m0
}

type ListCollectionsResponse struct {
	state         protoimpl.MessageState        `protogen:"hybrid.v1"`
	Collections   []*storage.ResourceCollection `protobuf:"bytes,1,rep,name=collections" json:"collections,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectionsResponse) Reset() {
	*x = ListCollectionsResponse{}
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsResponse) ProtoMessage() {}

func (x *ListCollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_resource_collection_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListCollectionsResponse) GetCollections() []*storage.ResourceCollection {
	if x != nil {
		return x.Collections
	}
	return nil
}

func (x *ListCollectionsResponse) SetCollections(v []*storage.ResourceCollection) {
	x.Collections = v
}

type ListCollectionsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Collections []*storage.ResourceCollection
}

func (b0 ListCollectionsResponse_builder) Build() *ListCollectionsResponse {
	m0 := &ListCollectionsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Collections = b.Collections
	return m0
}

var File_api_v1_resource_collection_service_proto protoreflect.FileDescriptor

const file_api_v1_resource_collection_service_proto_rawDesc = "" +
	"\n" +
	"(api/v1/resource_collection_service.proto\x12\x02v1\x1a\x13api/v1/common.proto\x1a\x12api/v1/empty.proto\x1a\x1bapi/v1/search_service.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x18storage/deployment.proto\x1a!storage/resource_collection.proto\x1a!google/protobuf/go_features.proto\"?\n" +
	"\x1fListCollectionSelectorsResponse\x12\x1c\n" +
	"\tselectors\x18\x01 \x03(\tR\tselectors\"j\n" +
	"\x14GetCollectionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12B\n" +
	"\aoptions\x18\x02 \x01(\v2$.v1.CollectionDeploymentMatchOptionsB\x02(\x01R\aoptions\"z\n" +
	" CollectionDeploymentMatchOptions\x12!\n" +
	"\fwith_matches\x18\x01 \x01(\bR\vwithMatches\x123\n" +
	"\ffilter_query\x18\x02 \x01(\v2\f.v1.RawQueryB\x02(\x01R\vfilterQuery\"\x97\x01\n" +
	"\x15GetCollectionResponse\x12?\n" +
	"\n" +
	"collection\x18\x01 \x01(\v2\x1b.storage.ResourceCollectionB\x02(\x01R\n" +
	"collection\x12=\n" +
	"\vdeployments\x18\x02 \x03(\v2\x17.storage.ListDeploymentB\x02(\x01R\vdeployments\"C\n" +
	"\x19GetCollectionCountRequest\x12&\n" +
	"\x05query\x18\x01 \x01(\v2\f.v1.RawQueryB\x02(\x01R\x05query\"2\n" +
	"\x1aGetCollectionCountResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\"\xd5\x01\n" +
	"\x17CreateCollectionRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12L\n" +
	"\x12resource_selectors\x18\x03 \x03(\v2\x19.storage.ResourceSelectorB\x02(\x01R\x11resourceSelectors\x126\n" +
	"\x17embedded_collection_ids\x18\x04 \x03(\tR\x15embeddedCollectionIds\"[\n" +
	"\x18CreateCollectionResponse\x12?\n" +
	"\n" +
	"collection\x18\x01 \x01(\v2\x1b.storage.ResourceCollectionB\x02(\x01R\n" +
	"collection\"\xe5\x01\n" +
	"\x17UpdateCollectionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12L\n" +
	"\x12resource_selectors\x18\x04 \x03(\v2\x19.storage.ResourceSelectorB\x02(\x01R\x11resourceSelectors\x126\n" +
	"\x17embedded_collection_ids\x18\x05 \x03(\tR\x15embeddedCollectionIds\"[\n" +
	"\x18UpdateCollectionResponse\x12?\n" +
	"\n" +
	"collection\x18\x01 \x01(\v2\x1b.storage.ResourceCollectionB\x02(\x01R\n" +
	"collection\"\xa9\x02\n" +
	"\x17DryRunCollectionRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12L\n" +
	"\x12resource_selectors\x18\x04 \x03(\v2\x19.storage.ResourceSelectorB\x02(\x01R\x11resourceSelectors\x126\n" +
	"\x17embedded_collection_ids\x18\x05 \x03(\tR\x15embeddedCollectionIds\x12B\n" +
	"\aoptions\x18\x06 \x01(\v2$.v1.CollectionDeploymentMatchOptionsB\x02(\x01R\aoptions\"Y\n" +
	"\x18DryRunCollectionResponse\x12=\n" +
	"\vdeployments\x18\x01 \x03(\v2\x17.storage.ListDeploymentB\x02(\x01R\vdeployments\"@\n" +
	"\x16ListCollectionsRequest\x12&\n" +
	"\x05query\x18\x01 \x01(\v2\f.v1.RawQueryB\x02(\x01R\x05query\"\\\n" +
	"\x17ListCollectionsResponse\x12A\n" +
	"\vcollections\x18\x01 \x03(\v2\x1b.storage.ResourceCollectionB\x02(\x01R\vcollections2\xd9\x06\n" +
	"\x11CollectionService\x12l\n" +
	"\x17ListCollectionSelectors\x12\t.v1.Empty\x1a#.v1.ListCollectionSelectorsResponse\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/v1/collections/selectors\x12b\n" +
	"\rGetCollection\x12\x18.v1.GetCollectionRequest\x1a\x19.v1.GetCollectionResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/v1/collections/{id}\x12q\n" +
	"\x12GetCollectionCount\x12\x1d.v1.GetCollectionCountRequest\x1a\x1e.v1.GetCollectionCountResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/v1/collectionscount\x12i\n" +
	"\x10CreateCollection\x12\x1b.v1.CreateCollectionRequest\x1a\x1c.v1.CreateCollectionResponse\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/v1/collections\x12n\n" +
	"\x10UpdateCollection\x12\x1b.v1.UpdateCollectionRequest\x1a\x1c.v1.UpdateCollectionResponse\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*2\x14/v1/collections/{id}\x12c\n" +
	"\x0fListCollections\x12\x1a.v1.ListCollectionsRequest\x1a\x1b.v1.ListCollectionsResponse\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/v1/collections\x12M\n" +
	"\x10DeleteCollection\x12\x10.v1.ResourceByID\x1a\t.v1.Empty\"\x1c\x82\xd3\xe4\x93\x02\x16*\x14/v1/collections/{id}\x12p\n" +
	"\x10DryRunCollection\x12\x1b.v1.DryRunCollectionRequest\x1a\x1c.v1.DryRunCollectionResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1/collections/dryrunB7\n" +
	"\x18io.stackrox.proto.api.v1Z\v./api/v1;v1\x92\x03\r\xd2>\x02\x10\x02\b\x02\x10\x01 \x020\x01X\x03b\beditionsp\xe8\a"

var file_api_v1_resource_collection_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_v1_resource_collection_service_proto_goTypes = []any{
	(*ListCollectionSelectorsResponse)(nil),  // 0: v1.ListCollectionSelectorsResponse
	(*GetCollectionRequest)(nil),             // 1: v1.GetCollectionRequest
	(*CollectionDeploymentMatchOptions)(nil), // 2: v1.CollectionDeploymentMatchOptions
	(*GetCollectionResponse)(nil),            // 3: v1.GetCollectionResponse
	(*GetCollectionCountRequest)(nil),        // 4: v1.GetCollectionCountRequest
	(*GetCollectionCountResponse)(nil),       // 5: v1.GetCollectionCountResponse
	(*CreateCollectionRequest)(nil),          // 6: v1.CreateCollectionRequest
	(*CreateCollectionResponse)(nil),         // 7: v1.CreateCollectionResponse
	(*UpdateCollectionRequest)(nil),          // 8: v1.UpdateCollectionRequest
	(*UpdateCollectionResponse)(nil),         // 9: v1.UpdateCollectionResponse
	(*DryRunCollectionRequest)(nil),          // 10: v1.DryRunCollectionRequest
	(*DryRunCollectionResponse)(nil),         // 11: v1.DryRunCollectionResponse
	(*ListCollectionsRequest)(nil),           // 12: v1.ListCollectionsRequest
	(*ListCollectionsResponse)(nil),          // 13: v1.ListCollectionsResponse
	(*RawQuery)(nil),                         // 14: v1.RawQuery
	(*storage.ResourceCollection)(nil),       // 15: storage.ResourceCollection
	(*storage.ListDeployment)(nil),           // 16: storage.ListDeployment
	(*storage.ResourceSelector)(nil),         // 17: storage.ResourceSelector
	(*Empty)(nil),                            // 18: v1.Empty
	(*ResourceByID)(nil),                     // 19: v1.ResourceByID
}
var file_api_v1_resource_collection_service_proto_depIdxs = []int32{
	2,  // 0: v1.GetCollectionRequest.options:type_name -> v1.CollectionDeploymentMatchOptions
	14, // 1: v1.CollectionDeploymentMatchOptions.filter_query:type_name -> v1.RawQuery
	15, // 2: v1.GetCollectionResponse.collection:type_name -> storage.ResourceCollection
	16, // 3: v1.GetCollectionResponse.deployments:type_name -> storage.ListDeployment
	14, // 4: v1.GetCollectionCountRequest.query:type_name -> v1.RawQuery
	17, // 5: v1.CreateCollectionRequest.resource_selectors:type_name -> storage.ResourceSelector
	15, // 6: v1.CreateCollectionResponse.collection:type_name -> storage.ResourceCollection
	17, // 7: v1.UpdateCollectionRequest.resource_selectors:type_name -> storage.ResourceSelector
	15, // 8: v1.UpdateCollectionResponse.collection:type_name -> storage.ResourceCollection
	17, // 9: v1.DryRunCollectionRequest.resource_selectors:type_name -> storage.ResourceSelector
	2,  // 10: v1.DryRunCollectionRequest.options:type_name -> v1.CollectionDeploymentMatchOptions
	16, // 11: v1.DryRunCollectionResponse.deployments:type_name -> storage.ListDeployment
	14, // 12: v1.ListCollectionsRequest.query:type_name -> v1.RawQuery
	15, // 13: v1.ListCollectionsResponse.collections:type_name -> storage.ResourceCollection
	18, // 14: v1.CollectionService.ListCollectionSelectors:input_type -> v1.Empty
	1,  // 15: v1.CollectionService.GetCollection:input_type -> v1.GetCollectionRequest
	4,  // 16: v1.CollectionService.GetCollectionCount:input_type -> v1.GetCollectionCountRequest
	6,  // 17: v1.CollectionService.CreateCollection:input_type -> v1.CreateCollectionRequest
	8,  // 18: v1.CollectionService.UpdateCollection:input_type -> v1.UpdateCollectionRequest
	12, // 19: v1.CollectionService.ListCollections:input_type -> v1.ListCollectionsRequest
	19, // 20: v1.CollectionService.DeleteCollection:input_type -> v1.ResourceByID
	10, // 21: v1.CollectionService.DryRunCollection:input_type -> v1.DryRunCollectionRequest
	0,  // 22: v1.CollectionService.ListCollectionSelectors:output_type -> v1.ListCollectionSelectorsResponse
	3,  // 23: v1.CollectionService.GetCollection:output_type -> v1.GetCollectionResponse
	5,  // 24: v1.CollectionService.GetCollectionCount:output_type -> v1.GetCollectionCountResponse
	7,  // 25: v1.CollectionService.CreateCollection:output_type -> v1.CreateCollectionResponse
	9,  // 26: v1.CollectionService.UpdateCollection:output_type -> v1.UpdateCollectionResponse
	13, // 27: v1.CollectionService.ListCollections:output_type -> v1.ListCollectionsResponse
	18, // 28: v1.CollectionService.DeleteCollection:output_type -> v1.Empty
	11, // 29: v1.CollectionService.DryRunCollection:output_type -> v1.DryRunCollectionResponse
	22, // [22:30] is the sub-list for method output_type
	14, // [14:22] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_v1_resource_collection_service_proto_init() }
func file_api_v1_resource_collection_service_proto_init() {
	if File_api_v1_resource_collection_service_proto != nil {
		return
	}
	file_api_v1_common_proto_init()
	file_api_v1_empty_proto_init()
	file_api_v1_search_service_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_resource_collection_service_proto_rawDesc), len(file_api_v1_resource_collection_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_resource_collection_service_proto_goTypes,
		DependencyIndexes: file_api_v1_resource_collection_service_proto_depIdxs,
		MessageInfos:      file_api_v1_resource_collection_service_proto_msgTypes,
	}.Build()
	File_api_v1_resource_collection_service_proto = out.File
	file_api_v1_resource_collection_service_proto_goTypes = nil
	file_api_v1_resource_collection_service_proto_depIdxs = nil
}
