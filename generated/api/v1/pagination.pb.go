// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/v1/pagination.proto

//go:build !protoopaque

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Aggregation int32

const (
	Aggregation_UNSET Aggregation = 0
	Aggregation_COUNT Aggregation = 1
	Aggregation_MIN   Aggregation = 2
	Aggregation_MAX   Aggregation = 3
)

// Enum value maps for Aggregation.
var (
	Aggregation_name = map[int32]string{
		0: "UNSET",
		1: "COUNT",
		2: "MIN",
		3: "MAX",
	}
	Aggregation_value = map[string]int32{
		"UNSET": 0,
		"COUNT": 1,
		"MIN":   2,
		"MAX":   3,
	}
)

func (x Aggregation) Enum() *Aggregation {
	p := new(Aggregation)
	*p = x
	return p
}

func (x Aggregation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Aggregation) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_pagination_proto_enumTypes[0].Descriptor()
}

func (Aggregation) Type() protoreflect.EnumType {
	return &file_api_v1_pagination_proto_enumTypes[0]
}

func (x Aggregation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type AggregateBy struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	AggrFunc      *Aggregation           `protobuf:"varint,1,opt,name=aggrFunc,enum=v1.Aggregation" json:"aggrFunc,omitempty"`
	Distinct      *bool                  `protobuf:"varint,2,opt,name=distinct" json:"distinct,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateBy) Reset() {
	*x = AggregateBy{}
	mi := &file_api_v1_pagination_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateBy) ProtoMessage() {}

func (x *AggregateBy) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pagination_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AggregateBy) GetAggrFunc() Aggregation {
	if x != nil && x.AggrFunc != nil {
		return *x.AggrFunc
	}
	return Aggregation_UNSET
}

func (x *AggregateBy) GetDistinct() bool {
	if x != nil && x.Distinct != nil {
		return *x.Distinct
	}
	return false
}

func (x *AggregateBy) SetAggrFunc(v Aggregation) {
	x.AggrFunc = &v
}

func (x *AggregateBy) SetDistinct(v bool) {
	x.Distinct = &v
}

func (x *AggregateBy) HasAggrFunc() bool {
	if x == nil {
		return false
	}
	return x.AggrFunc != nil
}

func (x *AggregateBy) HasDistinct() bool {
	if x == nil {
		return false
	}
	return x.Distinct != nil
}

func (x *AggregateBy) ClearAggrFunc() {
	x.AggrFunc = nil
}

func (x *AggregateBy) ClearDistinct() {
	x.Distinct = nil
}

type AggregateBy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AggrFunc *Aggregation
	Distinct *bool
}

func (b0 AggregateBy_builder) Build() *AggregateBy {
	m0 := &AggregateBy{}
	b, x := &b0, m0
	_, _ = b, x
	x.AggrFunc = b.AggrFunc
	x.Distinct = b.Distinct
	return m0
}

type SortOption struct {
	state    protoimpl.MessageState `protogen:"hybrid.v1"`
	Field    *string                `protobuf:"bytes,1,opt,name=field" json:"field,omitempty"`
	Reversed *bool                  `protobuf:"varint,2,opt,name=reversed" json:"reversed,omitempty"`
	// This field is under development. It is not supported on any REST APIs.
	AggregateBy   *AggregateBy `protobuf:"bytes,3,opt,name=aggregate_by,json=aggregateBy" json:"aggregate_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortOption) Reset() {
	*x = SortOption{}
	mi := &file_api_v1_pagination_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortOption) ProtoMessage() {}

func (x *SortOption) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pagination_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SortOption) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *SortOption) GetReversed() bool {
	if x != nil && x.Reversed != nil {
		return *x.Reversed
	}
	return false
}

func (x *SortOption) GetAggregateBy() *AggregateBy {
	if x != nil {
		return x.AggregateBy
	}
	return nil
}

func (x *SortOption) SetField(v string) {
	x.Field = &v
}

func (x *SortOption) SetReversed(v bool) {
	x.Reversed = &v
}

func (x *SortOption) SetAggregateBy(v *AggregateBy) {
	x.AggregateBy = v
}

func (x *SortOption) HasField() bool {
	if x == nil {
		return false
	}
	return x.Field != nil
}

func (x *SortOption) HasReversed() bool {
	if x == nil {
		return false
	}
	return x.Reversed != nil
}

func (x *SortOption) HasAggregateBy() bool {
	if x == nil {
		return false
	}
	return x.AggregateBy != nil
}

func (x *SortOption) ClearField() {
	x.Field = nil
}

func (x *SortOption) ClearReversed() {
	x.Reversed = nil
}

func (x *SortOption) ClearAggregateBy() {
	x.AggregateBy = nil
}

type SortOption_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Field    *string
	Reversed *bool
	// This field is under development. It is not supported on any REST APIs.
	AggregateBy *AggregateBy
}

func (b0 SortOption_builder) Build() *SortOption {
	m0 := &SortOption{}
	b, x := &b0, m0
	_, _ = b, x
	x.Field = b.Field
	x.Reversed = b.Reversed
	x.AggregateBy = b.AggregateBy
	return m0
}

type Pagination struct {
	state      protoimpl.MessageState `protogen:"hybrid.v1"`
	Limit      *int32                 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	Offset     *int32                 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	SortOption *SortOption            `protobuf:"bytes,3,opt,name=sort_option,json=sortOption" json:"sort_option,omitempty"`
	// This field is under development. It is not supported on any REST APIs.
	SortOptions   []*SortOption `protobuf:"bytes,4,rep,name=sort_options,json=sortOptions" json:"sort_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_api_v1_pagination_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_pagination_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Pagination) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *Pagination) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *Pagination) GetSortOption() *SortOption {
	if x != nil {
		return x.SortOption
	}
	return nil
}

func (x *Pagination) GetSortOptions() []*SortOption {
	if x != nil {
		return x.SortOptions
	}
	return nil
}

func (x *Pagination) SetLimit(v int32) {
	x.Limit = &v
}

func (x *Pagination) SetOffset(v int32) {
	x.Offset = &v
}

func (x *Pagination) SetSortOption(v *SortOption) {
	x.SortOption = v
}

func (x *Pagination) SetSortOptions(v []*SortOption) {
	x.SortOptions = v
}

func (x *Pagination) HasLimit() bool {
	if x == nil {
		return false
	}
	return x.Limit != nil
}

func (x *Pagination) HasOffset() bool {
	if x == nil {
		return false
	}
	return x.Offset != nil
}

func (x *Pagination) HasSortOption() bool {
	if x == nil {
		return false
	}
	return x.SortOption != nil
}

func (x *Pagination) ClearLimit() {
	x.Limit = nil
}

func (x *Pagination) ClearOffset() {
	x.Offset = nil
}

func (x *Pagination) ClearSortOption() {
	x.SortOption = nil
}

type Pagination_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Limit      *int32
	Offset     *int32
	SortOption *SortOption
	// This field is under development. It is not supported on any REST APIs.
	SortOptions []*SortOption
}

func (b0 Pagination_builder) Build() *Pagination {
	m0 := &Pagination{}
	b, x := &b0, m0
	_, _ = b, x
	x.Limit = b.Limit
	x.Offset = b.Offset
	x.SortOption = b.SortOption
	x.SortOptions = b.SortOptions
	return m0
}

var File_api_v1_pagination_proto protoreflect.FileDescriptor

const file_api_v1_pagination_proto_rawDesc = "" +
	"\n" +
	"\x17api/v1/pagination.proto\x12\x02v1\x1a!google/protobuf/go_features.proto\"V\n" +
	"\vAggregateBy\x12+\n" +
	"\baggrFunc\x18\x01 \x01(\x0e2\x0f.v1.AggregationR\baggrFunc\x12\x1a\n" +
	"\bdistinct\x18\x02 \x01(\bR\bdistinct\"r\n" +
	"\n" +
	"SortOption\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x1a\n" +
	"\breversed\x18\x02 \x01(\bR\breversed\x122\n" +
	"\faggregate_by\x18\x03 \x01(\v2\x0f.v1.AggregateByR\vaggregateBy\"\x9e\x01\n" +
	"\n" +
	"Pagination\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12/\n" +
	"\vsort_option\x18\x03 \x01(\v2\x0e.v1.SortOptionR\n" +
	"sortOption\x121\n" +
	"\fsort_options\x18\x04 \x03(\v2\x0e.v1.SortOptionR\vsortOptions*5\n" +
	"\vAggregation\x12\t\n" +
	"\x05UNSET\x10\x00\x12\t\n" +
	"\x05COUNT\x10\x01\x12\a\n" +
	"\x03MIN\x10\x02\x12\a\n" +
	"\x03MAX\x10\x03B/\n" +
	"\x18io.stackrox.proto.api.v1Z\v./api/v1;v1\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_api_v1_pagination_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1_pagination_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_v1_pagination_proto_goTypes = []any{
	(Aggregation)(0),    // 0: v1.Aggregation
	(*AggregateBy)(nil), // 1: v1.AggregateBy
	(*SortOption)(nil),  // 2: v1.SortOption
	(*Pagination)(nil),  // 3: v1.Pagination
}
var file_api_v1_pagination_proto_depIdxs = []int32{
	0, // 0: v1.AggregateBy.aggrFunc:type_name -> v1.Aggregation
	1, // 1: v1.SortOption.aggregate_by:type_name -> v1.AggregateBy
	2, // 2: v1.Pagination.sort_option:type_name -> v1.SortOption
	2, // 3: v1.Pagination.sort_options:type_name -> v1.SortOption
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_v1_pagination_proto_init() }
func file_api_v1_pagination_proto_init() {
	if File_api_v1_pagination_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_pagination_proto_rawDesc), len(file_api_v1_pagination_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1_pagination_proto_goTypes,
		DependencyIndexes: file_api_v1_pagination_proto_depIdxs,
		EnumInfos:         file_api_v1_pagination_proto_enumTypes,
		MessageInfos:      file_api_v1_pagination_proto_msgTypes,
	}.Build()
	File_api_v1_pagination_proto = out.File
	file_api_v1_pagination_proto_goTypes = nil
	file_api_v1_pagination_proto_depIdxs = nil
}
