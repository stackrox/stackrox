// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: api/v1/role_service.proto

package v1

import (
	storage "github.com/stackrox/rox/generated/storage"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComputeEffectiveAccessScopeRequest_Detail int32

const (
	ComputeEffectiveAccessScopeRequest_STANDARD ComputeEffectiveAccessScopeRequest_Detail = 0
	ComputeEffectiveAccessScopeRequest_MINIMAL  ComputeEffectiveAccessScopeRequest_Detail = 1
	ComputeEffectiveAccessScopeRequest_HIGH     ComputeEffectiveAccessScopeRequest_Detail = 2
)

// Enum value maps for ComputeEffectiveAccessScopeRequest_Detail.
var (
	ComputeEffectiveAccessScopeRequest_Detail_name = map[int32]string{
		0: "STANDARD",
		1: "MINIMAL",
		2: "HIGH",
	}
	ComputeEffectiveAccessScopeRequest_Detail_value = map[string]int32{
		"STANDARD": 0,
		"MINIMAL":  1,
		"HIGH":     2,
	}
)

func (x ComputeEffectiveAccessScopeRequest_Detail) Enum() *ComputeEffectiveAccessScopeRequest_Detail {
	p := new(ComputeEffectiveAccessScopeRequest_Detail)
	*p = x
	return p
}

func (x ComputeEffectiveAccessScopeRequest_Detail) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComputeEffectiveAccessScopeRequest_Detail) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_role_service_proto_enumTypes[0].Descriptor()
}

func (ComputeEffectiveAccessScopeRequest_Detail) Type() protoreflect.EnumType {
	return &file_api_v1_role_service_proto_enumTypes[0]
}

func (x ComputeEffectiveAccessScopeRequest_Detail) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComputeEffectiveAccessScopeRequest_Detail.Descriptor instead.
func (ComputeEffectiveAccessScopeRequest_Detail) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{9, 0}
}

type Permission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resource      string                 `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Access        storage.Access         `protobuf:"varint,2,opt,name=access,proto3,enum=storage.Access" json:"access,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Permission) Reset() {
	*x = Permission{}
	mi := &file_api_v1_role_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{0}
}

func (x *Permission) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *Permission) GetAccess() storage.Access {
	if x != nil {
		return x.Access
	}
	return storage.Access(0)
}

type GetRolesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Roles         []*storage.Role        `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRolesResponse) Reset() {
	*x = GetRolesResponse{}
	mi := &file_api_v1_role_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesResponse) ProtoMessage() {}

func (x *GetRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesResponse.ProtoReflect.Descriptor instead.
func (*GetRolesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetRolesResponse) GetRoles() []*storage.Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

// GetPermissionsResponse is wire-compatible with the old format of the Role
// message and represents a collection of aggregated permissions.
type GetPermissionsResponse struct {
	state            protoimpl.MessageState    `protogen:"open.v1"`
	ResourceToAccess map[string]storage.Access `protobuf:"bytes,3,rep,name=resource_to_access,json=resourceToAccess,proto3" json:"resource_to_access,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=storage.Access"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetPermissionsResponse) Reset() {
	*x = GetPermissionsResponse{}
	mi := &file_api_v1_role_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionsResponse) ProtoMessage() {}

func (x *GetPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetPermissionsResponse) GetResourceToAccess() map[string]storage.Access {
	if x != nil {
		return x.ResourceToAccess
	}
	return nil
}

type GetResourcesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resources     []string               `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResourcesResponse) Reset() {
	*x = GetResourcesResponse{}
	mi := &file_api_v1_role_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesResponse) ProtoMessage() {}

func (x *GetResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesResponse.ProtoReflect.Descriptor instead.
func (*GetResourcesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetResourcesResponse) GetResources() []string {
	if x != nil {
		return x.Resources
	}
	return nil
}

type ListPermissionSetsResponse struct {
	state          protoimpl.MessageState   `protogen:"open.v1"`
	PermissionSets []*storage.PermissionSet `protobuf:"bytes,1,rep,name=permission_sets,json=permissionSets,proto3" json:"permission_sets,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListPermissionSetsResponse) Reset() {
	*x = ListPermissionSetsResponse{}
	mi := &file_api_v1_role_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPermissionSetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionSetsResponse) ProtoMessage() {}

func (x *ListPermissionSetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionSetsResponse.ProtoReflect.Descriptor instead.
func (*ListPermissionSetsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListPermissionSetsResponse) GetPermissionSets() []*storage.PermissionSet {
	if x != nil {
		return x.PermissionSets
	}
	return nil
}

type ListSimpleAccessScopesResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	AccessScopes  []*storage.SimpleAccessScope `protobuf:"bytes,1,rep,name=access_scopes,json=accessScopes,proto3" json:"access_scopes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSimpleAccessScopesResponse) Reset() {
	*x = ListSimpleAccessScopesResponse{}
	mi := &file_api_v1_role_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSimpleAccessScopesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSimpleAccessScopesResponse) ProtoMessage() {}

func (x *ListSimpleAccessScopesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSimpleAccessScopesResponse.ProtoReflect.Descriptor instead.
func (*ListSimpleAccessScopesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListSimpleAccessScopesResponse) GetAccessScopes() []*storage.SimpleAccessScope {
	if x != nil {
		return x.AccessScopes
	}
	return nil
}

// ScopeObject represents an ID, name pair, which can apply to any
// entity that takes part in an access scope (so far Cluster and Namespace).
type ScopeObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScopeObject) Reset() {
	*x = ScopeObject{}
	mi := &file_api_v1_role_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScopeObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScopeObject) ProtoMessage() {}

func (x *ScopeObject) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScopeObject.ProtoReflect.Descriptor instead.
func (*ScopeObject) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{6}
}

func (x *ScopeObject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ScopeObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetClustersForPermissionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Clusters      []*ScopeObject         `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClustersForPermissionsResponse) Reset() {
	*x = GetClustersForPermissionsResponse{}
	mi := &file_api_v1_role_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClustersForPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClustersForPermissionsResponse) ProtoMessage() {}

func (x *GetClustersForPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClustersForPermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetClustersForPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetClustersForPermissionsResponse) GetClusters() []*ScopeObject {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type GetNamespacesForClusterAndPermissionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespaces    []*ScopeObject         `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNamespacesForClusterAndPermissionsResponse) Reset() {
	*x = GetNamespacesForClusterAndPermissionsResponse{}
	mi := &file_api_v1_role_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespacesForClusterAndPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespacesForClusterAndPermissionsResponse) ProtoMessage() {}

func (x *GetNamespacesForClusterAndPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespacesForClusterAndPermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetNamespacesForClusterAndPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetNamespacesForClusterAndPermissionsResponse) GetNamespaces() []*ScopeObject {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

type ComputeEffectiveAccessScopeRequest struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Detail        ComputeEffectiveAccessScopeRequest_Detail   `protobuf:"varint,1,opt,name=detail,proto3,enum=v1.ComputeEffectiveAccessScopeRequest_Detail" json:"detail,omitempty"`
	AccessScope   *ComputeEffectiveAccessScopeRequest_Payload `protobuf:"bytes,2,opt,name=access_scope,json=accessScope,proto3" json:"access_scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComputeEffectiveAccessScopeRequest) Reset() {
	*x = ComputeEffectiveAccessScopeRequest{}
	mi := &file_api_v1_role_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComputeEffectiveAccessScopeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeEffectiveAccessScopeRequest) ProtoMessage() {}

func (x *ComputeEffectiveAccessScopeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeEffectiveAccessScopeRequest.ProtoReflect.Descriptor instead.
func (*ComputeEffectiveAccessScopeRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{9}
}

func (x *ComputeEffectiveAccessScopeRequest) GetDetail() ComputeEffectiveAccessScopeRequest_Detail {
	if x != nil {
		return x.Detail
	}
	return ComputeEffectiveAccessScopeRequest_STANDARD
}

func (x *ComputeEffectiveAccessScopeRequest) GetAccessScope() *ComputeEffectiveAccessScopeRequest_Payload {
	if x != nil {
		return x.AccessScope
	}
	return nil
}

// CreateRoleRequest unites name we take from the URL path and role body in the same structure.
// This way we can verify that name in the path and name in the body are identical.
type CreateRoleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Role          *storage.Role          `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoleRequest) Reset() {
	*x = CreateRoleRequest{}
	mi := &file_api_v1_role_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRequest) ProtoMessage() {}

func (x *CreateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateRoleRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{10}
}

func (x *CreateRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoleRequest) GetRole() *storage.Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type GetClustersForPermissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pagination    *Pagination            `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Permissions   []string               `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClustersForPermissionsRequest) Reset() {
	*x = GetClustersForPermissionsRequest{}
	mi := &file_api_v1_role_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClustersForPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClustersForPermissionsRequest) ProtoMessage() {}

func (x *GetClustersForPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClustersForPermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetClustersForPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetClustersForPermissionsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetClustersForPermissionsRequest) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type GetNamespaceForClusterAndPermissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterId     string                 `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Permissions   []string               `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNamespaceForClusterAndPermissionsRequest) Reset() {
	*x = GetNamespaceForClusterAndPermissionsRequest{}
	mi := &file_api_v1_role_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespaceForClusterAndPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceForClusterAndPermissionsRequest) ProtoMessage() {}

func (x *GetNamespaceForClusterAndPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceForClusterAndPermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetNamespaceForClusterAndPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetNamespaceForClusterAndPermissionsRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *GetNamespaceForClusterAndPermissionsRequest) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type ComputeEffectiveAccessScopeRequest_Payload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Other definitions of access scope rules is science fiction for now;
	// however, prepare for that possible future.
	//
	// Types that are valid to be assigned to RulesOpt:
	//
	//	*ComputeEffectiveAccessScopeRequest_Payload_SimpleRules
	RulesOpt      isComputeEffectiveAccessScopeRequest_Payload_RulesOpt `protobuf_oneof:"rules_opt"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComputeEffectiveAccessScopeRequest_Payload) Reset() {
	*x = ComputeEffectiveAccessScopeRequest_Payload{}
	mi := &file_api_v1_role_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComputeEffectiveAccessScopeRequest_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeEffectiveAccessScopeRequest_Payload) ProtoMessage() {}

func (x *ComputeEffectiveAccessScopeRequest_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_role_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeEffectiveAccessScopeRequest_Payload.ProtoReflect.Descriptor instead.
func (*ComputeEffectiveAccessScopeRequest_Payload) Descriptor() ([]byte, []int) {
	return file_api_v1_role_service_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ComputeEffectiveAccessScopeRequest_Payload) GetRulesOpt() isComputeEffectiveAccessScopeRequest_Payload_RulesOpt {
	if x != nil {
		return x.RulesOpt
	}
	return nil
}

func (x *ComputeEffectiveAccessScopeRequest_Payload) GetSimpleRules() *storage.SimpleAccessScope_Rules {
	if x != nil {
		if x, ok := x.RulesOpt.(*ComputeEffectiveAccessScopeRequest_Payload_SimpleRules); ok {
			return x.SimpleRules
		}
	}
	return nil
}

type isComputeEffectiveAccessScopeRequest_Payload_RulesOpt interface {
	isComputeEffectiveAccessScopeRequest_Payload_RulesOpt()
}

type ComputeEffectiveAccessScopeRequest_Payload_SimpleRules struct {
	SimpleRules *storage.SimpleAccessScope_Rules `protobuf:"bytes,1,opt,name=simple_rules,json=simpleRules,proto3,oneof"`
}

func (*ComputeEffectiveAccessScopeRequest_Payload_SimpleRules) isComputeEffectiveAccessScopeRequest_Payload_RulesOpt() {
}

var File_api_v1_role_service_proto protoreflect.FileDescriptor

const file_api_v1_role_service_proto_rawDesc = "" +
	"\n" +
	"\x19api/v1/role_service.proto\x12\x02v1\x1a\x13api/v1/common.proto\x1a\x12api/v1/empty.proto\x1a\x17api/v1/pagination.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x12storage/role.proto\"Q\n" +
	"\n" +
	"Permission\x12\x1a\n" +
	"\bresource\x18\x01 \x01(\tR\bresource\x12'\n" +
	"\x06access\x18\x02 \x01(\x0e2\x0f.storage.AccessR\x06access\"7\n" +
	"\x10GetRolesResponse\x12#\n" +
	"\x05roles\x18\x01 \x03(\v2\r.storage.RoleR\x05roles\"\xda\x01\n" +
	"\x16GetPermissionsResponse\x12^\n" +
	"\x12resource_to_access\x18\x03 \x03(\v20.v1.GetPermissionsResponse.ResourceToAccessEntryR\x10resourceToAccess\x1aT\n" +
	"\x15ResourceToAccessEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12%\n" +
	"\x05value\x18\x02 \x01(\x0e2\x0f.storage.AccessR\x05value:\x028\x01J\x04\b\x01\x10\x02J\x04\b\x02\x10\x03\"4\n" +
	"\x14GetResourcesResponse\x12\x1c\n" +
	"\tresources\x18\x01 \x03(\tR\tresources\"]\n" +
	"\x1aListPermissionSetsResponse\x12?\n" +
	"\x0fpermission_sets\x18\x01 \x03(\v2\x16.storage.PermissionSetR\x0epermissionSets\"a\n" +
	"\x1eListSimpleAccessScopesResponse\x12?\n" +
	"\raccess_scopes\x18\x01 \x03(\v2\x1a.storage.SimpleAccessScopeR\faccessScopes\"1\n" +
	"\vScopeObject\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"P\n" +
	"!GetClustersForPermissionsResponse\x12+\n" +
	"\bclusters\x18\x01 \x03(\v2\x0f.v1.ScopeObjectR\bclusters\"`\n" +
	"-GetNamespacesForClusterAndPermissionsResponse\x12/\n" +
	"\n" +
	"namespaces\x18\x01 \x03(\v2\x0f.v1.ScopeObjectR\n" +
	"namespaces\"\xcc\x02\n" +
	"\"ComputeEffectiveAccessScopeRequest\x12E\n" +
	"\x06detail\x18\x01 \x01(\x0e2-.v1.ComputeEffectiveAccessScopeRequest.DetailR\x06detail\x12Q\n" +
	"\faccess_scope\x18\x02 \x01(\v2..v1.ComputeEffectiveAccessScopeRequest.PayloadR\vaccessScope\x1a]\n" +
	"\aPayload\x12E\n" +
	"\fsimple_rules\x18\x01 \x01(\v2 .storage.SimpleAccessScope.RulesH\x00R\vsimpleRulesB\v\n" +
	"\trules_opt\"-\n" +
	"\x06Detail\x12\f\n" +
	"\bSTANDARD\x10\x00\x12\v\n" +
	"\aMINIMAL\x10\x01\x12\b\n" +
	"\x04HIGH\x10\x02\"J\n" +
	"\x11CreateRoleRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\x04role\x18\x02 \x01(\v2\r.storage.RoleR\x04role\"t\n" +
	" GetClustersForPermissionsRequest\x12.\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2\x0e.v1.PaginationR\n" +
	"pagination\x12 \n" +
	"\vpermissions\x18\x02 \x03(\tR\vpermissions\"t\n" +
	"+GetNamespaceForClusterAndPermissionsRequest\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x02 \x01(\tR\tclusterId\x12 \n" +
	"\vpermissions\x18\x03 \x03(\tR\vpermissionsJ\x04\b\x01\x10\x022\xca\x0f\n" +
	"\vRoleService\x12>\n" +
	"\bGetRoles\x12\t.v1.Empty\x1a\x14.v1.GetRolesResponse\"\x11\x82\xd3\xe4\x93\x02\v\x12\t/v1/roles\x12B\n" +
	"\aGetRole\x12\x10.v1.ResourceByID\x1a\r.storage.Role\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v1/roles/{id}\x12T\n" +
	"\x10GetMyPermissions\x12\t.v1.Empty\x1a\x1a.v1.GetPermissionsResponse\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v1/mypermissions\x12N\n" +
	"\n" +
	"CreateRole\x12\x15.v1.CreateRoleRequest\x1a\t.v1.Empty\"\x1e\x82\xd3\xe4\x93\x02\x18:\x04role\"\x10/v1/roles/{name}\x12C\n" +
	"\n" +
	"UpdateRole\x12\r.storage.Role\x1a\t.v1.Empty\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\x1a\x10/v1/roles/{name}\x12A\n" +
	"\n" +
	"DeleteRole\x12\x10.v1.ResourceByID\x1a\t.v1.Empty\"\x16\x82\xd3\xe4\x93\x02\x10*\x0e/v1/roles/{id}\x12J\n" +
	"\fGetResources\x12\t.v1.Empty\x1a\x18.v1.GetResourcesResponse\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/v1/resources\x12]\n" +
	"\x10GetPermissionSet\x12\x10.v1.ResourceByID\x1a\x16.storage.PermissionSet\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/v1/permissionsets/{id}\x12[\n" +
	"\x12ListPermissionSets\x12\t.v1.Empty\x1a\x1e.v1.ListPermissionSetsResponse\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/permissionsets\x12b\n" +
	"\x11PostPermissionSet\x12\x16.storage.PermissionSet\x1a\x16.storage.PermissionSet\"\x1d\x82\xd3\xe4\x93\x02\x17:\x01*\"\x12/v1/permissionsets\x12Y\n" +
	"\x10PutPermissionSet\x12\x16.storage.PermissionSet\x1a\t.v1.Empty\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\x1a\x17/v1/permissionsets/{id}\x12S\n" +
	"\x13DeletePermissionSet\x12\x10.v1.ResourceByID\x1a\t.v1.Empty\"\x1f\x82\xd3\xe4\x93\x02\x19*\x17/v1/permissionsets/{id}\x12i\n" +
	"\x14GetSimpleAccessScope\x12\x10.v1.ResourceByID\x1a\x1a.storage.SimpleAccessScope\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v1/simpleaccessscopes/{id}\x12g\n" +
	"\x16ListSimpleAccessScopes\x12\t.v1.Empty\x1a\".v1.ListSimpleAccessScopesResponse\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/v1/simpleaccessscopes\x12r\n" +
	"\x15PostSimpleAccessScope\x12\x1a.storage.SimpleAccessScope\x1a\x1a.storage.SimpleAccessScope\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1/simpleaccessscopes\x12e\n" +
	"\x14PutSimpleAccessScope\x12\x1a.storage.SimpleAccessScope\x1a\t.v1.Empty\"&\x82\xd3\xe4\x93\x02 :\x01*\x1a\x1b/v1/simpleaccessscopes/{id}\x12[\n" +
	"\x17DeleteSimpleAccessScope\x12\x10.v1.ResourceByID\x1a\t.v1.Empty\"#\x82\xd3\xe4\x93\x02\x1d*\x1b/v1/simpleaccessscopes/{id}\x12\x9b\x01\n" +
	"\x1bComputeEffectiveAccessScope\x12&.v1.ComputeEffectiveAccessScopeRequest\x1a\x1d.storage.EffectiveAccessScope\"5\x82\xd3\xe4\x93\x02/:\faccess_scope\"\x1f/v1/computeeffectiveaccessscope\x12\x82\x01\n" +
	"\x19GetClustersForPermissions\x12$.v1.GetClustersForPermissionsRequest\x1a%.v1.GetClustersForPermissionsResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1/sac/clusters\x12\xbd\x01\n" +
	"%GetNamespacesForClusterAndPermissions\x12/.v1.GetNamespaceForClusterAndPermissionsRequest\x1a1.v1.GetNamespacesForClusterAndPermissionsResponse\"0\x82\xd3\xe4\x93\x02*\x12(/v1/sac/clusters/{cluster_id}/namespacesB'\n" +
	"\x18io.stackrox.proto.api.v1Z\v./api/v1;v1X\x03b\x06proto3"

var (
	file_api_v1_role_service_proto_rawDescOnce sync.Once
	file_api_v1_role_service_proto_rawDescData []byte
)

func file_api_v1_role_service_proto_rawDescGZIP() []byte {
	file_api_v1_role_service_proto_rawDescOnce.Do(func() {
		file_api_v1_role_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_role_service_proto_rawDesc), len(file_api_v1_role_service_proto_rawDesc)))
	})
	return file_api_v1_role_service_proto_rawDescData
}

var file_api_v1_role_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1_role_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_v1_role_service_proto_goTypes = []any{
	(ComputeEffectiveAccessScopeRequest_Detail)(0), // 0: v1.ComputeEffectiveAccessScopeRequest.Detail
	(*Permission)(nil),                                    // 1: v1.Permission
	(*GetRolesResponse)(nil),                              // 2: v1.GetRolesResponse
	(*GetPermissionsResponse)(nil),                        // 3: v1.GetPermissionsResponse
	(*GetResourcesResponse)(nil),                          // 4: v1.GetResourcesResponse
	(*ListPermissionSetsResponse)(nil),                    // 5: v1.ListPermissionSetsResponse
	(*ListSimpleAccessScopesResponse)(nil),                // 6: v1.ListSimpleAccessScopesResponse
	(*ScopeObject)(nil),                                   // 7: v1.ScopeObject
	(*GetClustersForPermissionsResponse)(nil),             // 8: v1.GetClustersForPermissionsResponse
	(*GetNamespacesForClusterAndPermissionsResponse)(nil), // 9: v1.GetNamespacesForClusterAndPermissionsResponse
	(*ComputeEffectiveAccessScopeRequest)(nil),            // 10: v1.ComputeEffectiveAccessScopeRequest
	(*CreateRoleRequest)(nil),                             // 11: v1.CreateRoleRequest
	(*GetClustersForPermissionsRequest)(nil),              // 12: v1.GetClustersForPermissionsRequest
	(*GetNamespaceForClusterAndPermissionsRequest)(nil),   // 13: v1.GetNamespaceForClusterAndPermissionsRequest
	nil, // 14: v1.GetPermissionsResponse.ResourceToAccessEntry
	(*ComputeEffectiveAccessScopeRequest_Payload)(nil), // 15: v1.ComputeEffectiveAccessScopeRequest.Payload
	(storage.Access)(0),                     // 16: storage.Access
	(*storage.Role)(nil),                    // 17: storage.Role
	(*storage.PermissionSet)(nil),           // 18: storage.PermissionSet
	(*storage.SimpleAccessScope)(nil),       // 19: storage.SimpleAccessScope
	(*Pagination)(nil),                      // 20: v1.Pagination
	(*storage.SimpleAccessScope_Rules)(nil), // 21: storage.SimpleAccessScope.Rules
	(*Empty)(nil),                           // 22: v1.Empty
	(*ResourceByID)(nil),                    // 23: v1.ResourceByID
	(*storage.EffectiveAccessScope)(nil),    // 24: storage.EffectiveAccessScope
}
var file_api_v1_role_service_proto_depIdxs = []int32{
	16, // 0: v1.Permission.access:type_name -> storage.Access
	17, // 1: v1.GetRolesResponse.roles:type_name -> storage.Role
	14, // 2: v1.GetPermissionsResponse.resource_to_access:type_name -> v1.GetPermissionsResponse.ResourceToAccessEntry
	18, // 3: v1.ListPermissionSetsResponse.permission_sets:type_name -> storage.PermissionSet
	19, // 4: v1.ListSimpleAccessScopesResponse.access_scopes:type_name -> storage.SimpleAccessScope
	7,  // 5: v1.GetClustersForPermissionsResponse.clusters:type_name -> v1.ScopeObject
	7,  // 6: v1.GetNamespacesForClusterAndPermissionsResponse.namespaces:type_name -> v1.ScopeObject
	0,  // 7: v1.ComputeEffectiveAccessScopeRequest.detail:type_name -> v1.ComputeEffectiveAccessScopeRequest.Detail
	15, // 8: v1.ComputeEffectiveAccessScopeRequest.access_scope:type_name -> v1.ComputeEffectiveAccessScopeRequest.Payload
	17, // 9: v1.CreateRoleRequest.role:type_name -> storage.Role
	20, // 10: v1.GetClustersForPermissionsRequest.pagination:type_name -> v1.Pagination
	16, // 11: v1.GetPermissionsResponse.ResourceToAccessEntry.value:type_name -> storage.Access
	21, // 12: v1.ComputeEffectiveAccessScopeRequest.Payload.simple_rules:type_name -> storage.SimpleAccessScope.Rules
	22, // 13: v1.RoleService.GetRoles:input_type -> v1.Empty
	23, // 14: v1.RoleService.GetRole:input_type -> v1.ResourceByID
	22, // 15: v1.RoleService.GetMyPermissions:input_type -> v1.Empty
	11, // 16: v1.RoleService.CreateRole:input_type -> v1.CreateRoleRequest
	17, // 17: v1.RoleService.UpdateRole:input_type -> storage.Role
	23, // 18: v1.RoleService.DeleteRole:input_type -> v1.ResourceByID
	22, // 19: v1.RoleService.GetResources:input_type -> v1.Empty
	23, // 20: v1.RoleService.GetPermissionSet:input_type -> v1.ResourceByID
	22, // 21: v1.RoleService.ListPermissionSets:input_type -> v1.Empty
	18, // 22: v1.RoleService.PostPermissionSet:input_type -> storage.PermissionSet
	18, // 23: v1.RoleService.PutPermissionSet:input_type -> storage.PermissionSet
	23, // 24: v1.RoleService.DeletePermissionSet:input_type -> v1.ResourceByID
	23, // 25: v1.RoleService.GetSimpleAccessScope:input_type -> v1.ResourceByID
	22, // 26: v1.RoleService.ListSimpleAccessScopes:input_type -> v1.Empty
	19, // 27: v1.RoleService.PostSimpleAccessScope:input_type -> storage.SimpleAccessScope
	19, // 28: v1.RoleService.PutSimpleAccessScope:input_type -> storage.SimpleAccessScope
	23, // 29: v1.RoleService.DeleteSimpleAccessScope:input_type -> v1.ResourceByID
	10, // 30: v1.RoleService.ComputeEffectiveAccessScope:input_type -> v1.ComputeEffectiveAccessScopeRequest
	12, // 31: v1.RoleService.GetClustersForPermissions:input_type -> v1.GetClustersForPermissionsRequest
	13, // 32: v1.RoleService.GetNamespacesForClusterAndPermissions:input_type -> v1.GetNamespaceForClusterAndPermissionsRequest
	2,  // 33: v1.RoleService.GetRoles:output_type -> v1.GetRolesResponse
	17, // 34: v1.RoleService.GetRole:output_type -> storage.Role
	3,  // 35: v1.RoleService.GetMyPermissions:output_type -> v1.GetPermissionsResponse
	22, // 36: v1.RoleService.CreateRole:output_type -> v1.Empty
	22, // 37: v1.RoleService.UpdateRole:output_type -> v1.Empty
	22, // 38: v1.RoleService.DeleteRole:output_type -> v1.Empty
	4,  // 39: v1.RoleService.GetResources:output_type -> v1.GetResourcesResponse
	18, // 40: v1.RoleService.GetPermissionSet:output_type -> storage.PermissionSet
	5,  // 41: v1.RoleService.ListPermissionSets:output_type -> v1.ListPermissionSetsResponse
	18, // 42: v1.RoleService.PostPermissionSet:output_type -> storage.PermissionSet
	22, // 43: v1.RoleService.PutPermissionSet:output_type -> v1.Empty
	22, // 44: v1.RoleService.DeletePermissionSet:output_type -> v1.Empty
	19, // 45: v1.RoleService.GetSimpleAccessScope:output_type -> storage.SimpleAccessScope
	6,  // 46: v1.RoleService.ListSimpleAccessScopes:output_type -> v1.ListSimpleAccessScopesResponse
	19, // 47: v1.RoleService.PostSimpleAccessScope:output_type -> storage.SimpleAccessScope
	22, // 48: v1.RoleService.PutSimpleAccessScope:output_type -> v1.Empty
	22, // 49: v1.RoleService.DeleteSimpleAccessScope:output_type -> v1.Empty
	24, // 50: v1.RoleService.ComputeEffectiveAccessScope:output_type -> storage.EffectiveAccessScope
	8,  // 51: v1.RoleService.GetClustersForPermissions:output_type -> v1.GetClustersForPermissionsResponse
	9,  // 52: v1.RoleService.GetNamespacesForClusterAndPermissions:output_type -> v1.GetNamespacesForClusterAndPermissionsResponse
	33, // [33:53] is the sub-list for method output_type
	13, // [13:33] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_api_v1_role_service_proto_init() }
func file_api_v1_role_service_proto_init() {
	if File_api_v1_role_service_proto != nil {
		return
	}
	file_api_v1_common_proto_init()
	file_api_v1_empty_proto_init()
	file_api_v1_pagination_proto_init()
	file_api_v1_role_service_proto_msgTypes[14].OneofWrappers = []any{
		(*ComputeEffectiveAccessScopeRequest_Payload_SimpleRules)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_role_service_proto_rawDesc), len(file_api_v1_role_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_role_service_proto_goTypes,
		DependencyIndexes: file_api_v1_role_service_proto_depIdxs,
		EnumInfos:         file_api_v1_role_service_proto_enumTypes,
		MessageInfos:      file_api_v1_role_service_proto_msgTypes,
	}.Build()
	File_api_v1_role_service_proto = out.File
	file_api_v1_role_service_proto_goTypes = nil
	file_api_v1_role_service_proto_depIdxs = nil
}
