// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: api/v1/metadata_service.proto

package v1

import (
	storage "github.com/stackrox/rox/generated/storage"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Metadata_LicenseStatus int32

const (
	// Deprecated: Marked as deprecated in api/v1/metadata_service.proto.
	Metadata_NONE Metadata_LicenseStatus = 0
	// Deprecated: Marked as deprecated in api/v1/metadata_service.proto.
	Metadata_INVALID Metadata_LicenseStatus = 1
	// Deprecated: Marked as deprecated in api/v1/metadata_service.proto.
	Metadata_EXPIRED Metadata_LicenseStatus = 2
	// Deprecated: Marked as deprecated in api/v1/metadata_service.proto.
	Metadata_RESTARTING Metadata_LicenseStatus = 3
	Metadata_VALID      Metadata_LicenseStatus = 4
)

// Enum value maps for Metadata_LicenseStatus.
var (
	Metadata_LicenseStatus_name = map[int32]string{
		0: "NONE",
		1: "INVALID",
		2: "EXPIRED",
		3: "RESTARTING",
		4: "VALID",
	}
	Metadata_LicenseStatus_value = map[string]int32{
		"NONE":       0,
		"INVALID":    1,
		"EXPIRED":    2,
		"RESTARTING": 3,
		"VALID":      4,
	}
)

func (x Metadata_LicenseStatus) Enum() *Metadata_LicenseStatus {
	p := new(Metadata_LicenseStatus)
	*p = x
	return p
}

func (x Metadata_LicenseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Metadata_LicenseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_metadata_service_proto_enumTypes[0].Descriptor()
}

func (Metadata_LicenseStatus) Type() protoreflect.EnumType {
	return &file_api_v1_metadata_service_proto_enumTypes[0]
}

func (x Metadata_LicenseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Metadata_LicenseStatus.Descriptor instead.
func (Metadata_LicenseStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_metadata_service_proto_rawDescGZIP(), []int{0, 0}
}

type DatabaseStatus_DatabaseType int32

const (
	DatabaseStatus_Hidden     DatabaseStatus_DatabaseType = 0
	DatabaseStatus_RocksDB    DatabaseStatus_DatabaseType = 1
	DatabaseStatus_PostgresDB DatabaseStatus_DatabaseType = 2
)

// Enum value maps for DatabaseStatus_DatabaseType.
var (
	DatabaseStatus_DatabaseType_name = map[int32]string{
		0: "Hidden",
		1: "RocksDB",
		2: "PostgresDB",
	}
	DatabaseStatus_DatabaseType_value = map[string]int32{
		"Hidden":     0,
		"RocksDB":    1,
		"PostgresDB": 2,
	}
)

func (x DatabaseStatus_DatabaseType) Enum() *DatabaseStatus_DatabaseType {
	p := new(DatabaseStatus_DatabaseType)
	*p = x
	return p
}

func (x DatabaseStatus_DatabaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DatabaseStatus_DatabaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_metadata_service_proto_enumTypes[1].Descriptor()
}

func (DatabaseStatus_DatabaseType) Type() protoreflect.EnumType {
	return &file_api_v1_metadata_service_proto_enumTypes[1]
}

func (x DatabaseStatus_DatabaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DatabaseStatus_DatabaseType.Descriptor instead.
func (DatabaseStatus_DatabaseType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_metadata_service_proto_rawDescGZIP(), []int{4, 0}
}

type CentralServicesCapabilities_CapabilityStatus int32

const (
	// CapabilityAvailable means that UI and APIs should be available for users to use.
	// This does not automatically mean that the functionality is 100% available and any calls to APIs will result
	// in successful execution. Rather it means that users should be allowed to leverage the functionality as
	// opposed to CapabilityDisabled when functionality should be blocked.
	CentralServicesCapabilities_CapabilityAvailable CentralServicesCapabilities_CapabilityStatus = 0
	// CapabilityDisabled means the corresponding UI should be disabled and attempts to use related APIs
	// should lead to errors.
	CentralServicesCapabilities_CapabilityDisabled CentralServicesCapabilities_CapabilityStatus = 1
)

// Enum value maps for CentralServicesCapabilities_CapabilityStatus.
var (
	CentralServicesCapabilities_CapabilityStatus_name = map[int32]string{
		0: "CapabilityAvailable",
		1: "CapabilityDisabled",
	}
	CentralServicesCapabilities_CapabilityStatus_value = map[string]int32{
		"CapabilityAvailable": 0,
		"CapabilityDisabled":  1,
	}
)

func (x CentralServicesCapabilities_CapabilityStatus) Enum() *CentralServicesCapabilities_CapabilityStatus {
	p := new(CentralServicesCapabilities_CapabilityStatus)
	*p = x
	return p
}

func (x CentralServicesCapabilities_CapabilityStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CentralServicesCapabilities_CapabilityStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_metadata_service_proto_enumTypes[2].Descriptor()
}

func (CentralServicesCapabilities_CapabilityStatus) Type() protoreflect.EnumType {
	return &file_api_v1_metadata_service_proto_enumTypes[2]
}

func (x CentralServicesCapabilities_CapabilityStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CentralServicesCapabilities_CapabilityStatus.Descriptor instead.
func (CentralServicesCapabilities_CapabilityStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_metadata_service_proto_rawDescGZIP(), []int{6, 0}
}

type Metadata struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Version      string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	BuildFlavor  string                 `protobuf:"bytes,2,opt,name=build_flavor,json=buildFlavor,proto3" json:"build_flavor,omitempty"`
	ReleaseBuild bool                   `protobuf:"varint,3,opt,name=release_build,json=releaseBuild,proto3" json:"release_build,omitempty"`
	// Do not use this field. It will always contain "VALID"
	//
	// Deprecated: Marked as deprecated in api/v1/metadata_service.proto.
	LicenseStatus Metadata_LicenseStatus `protobuf:"varint,4,opt,name=license_status,json=licenseStatus,proto3,enum=v1.Metadata_LicenseStatus" json:"license_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_api_v1_metadata_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_metadata_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_api_v1_metadata_service_proto_rawDescGZIP(), []int{0}
}

func (x *Metadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Metadata) GetBuildFlavor() string {
	if x != nil {
		return x.BuildFlavor
	}
	return ""
}

func (x *Metadata) GetReleaseBuild() bool {
	if x != nil {
		return x.ReleaseBuild
	}
	return false
}

// Deprecated: Marked as deprecated in api/v1/metadata_service.proto.
func (x *Metadata) GetLicenseStatus() Metadata_LicenseStatus {
	if x != nil {
		return x.LicenseStatus
	}
	return Metadata_NONE
}

type TrustInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// holds the certificate chain hold by central
	CertChain [][]byte `protobuf:"bytes,1,rep,name=cert_chain,json=certChain,proto3" json:"cert_chain,omitempty"`
	// sensor challenge string
	SensorChallenge string `protobuf:"bytes,2,opt,name=sensor_challenge,json=sensorChallenge,proto3" json:"sensor_challenge,omitempty"`
	// central challenge string
	CentralChallenge string `protobuf:"bytes,3,opt,name=central_challenge,json=centralChallenge,proto3" json:"central_challenge,omitempty"`
	// additional CA certs configured in central in DER format
	AdditionalCas [][]byte `protobuf:"bytes,4,rep,name=additional_cas,json=additionalCas,proto3" json:"additional_cas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrustInfo) Reset() {
	*x = TrustInfo{}
	mi := &file_api_v1_metadata_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrustInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustInfo) ProtoMessage() {}

func (x *TrustInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_metadata_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustInfo.ProtoReflect.Descriptor instead.
func (*TrustInfo) Descriptor() ([]byte, []int) {
	return file_api_v1_metadata_service_proto_rawDescGZIP(), []int{1}
}

func (x *TrustInfo) GetCertChain() [][]byte {
	if x != nil {
		return x.CertChain
	}
	return nil
}

func (x *TrustInfo) GetSensorChallenge() string {
	if x != nil {
		return x.SensorChallenge
	}
	return ""
}

func (x *TrustInfo) GetCentralChallenge() string {
	if x != nil {
		return x.CentralChallenge
	}
	return ""
}

func (x *TrustInfo) GetAdditionalCas() [][]byte {
	if x != nil {
		return x.AdditionalCas
	}
	return nil
}

type TLSChallengeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// signed data which is returned to the caller, is validated against the signature
	TrustInfoSerialized []byte `protobuf:"bytes,1,opt,name=trust_info_serialized,json=trustInfoSerialized,proto3" json:"trust_info_serialized,omitempty"`
	Signature           []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TLSChallengeResponse) Reset() {
	*x = TLSChallengeResponse{}
	mi := &file_api_v1_metadata_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSChallengeResponse) ProtoMessage() {}

func (x *TLSChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_metadata_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSChallengeResponse.ProtoReflect.Descriptor instead.
func (*TLSChallengeResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_metadata_service_proto_rawDescGZIP(), []int{2}
}

func (x *TLSChallengeResponse) GetTrustInfoSerialized() []byte {
	if x != nil {
		return x.TrustInfoSerialized
	}
	return nil
}

func (x *TLSChallengeResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type TLSChallengeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// generated challenge token by the service asking for TLS certs
	ChallengeToken string `protobuf:"bytes,1,opt,name=challenge_token,json=challengeToken,proto3" json:"challenge_token,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TLSChallengeRequest) Reset() {
	*x = TLSChallengeRequest{}
	mi := &file_api_v1_metadata_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSChallengeRequest) ProtoMessage() {}

func (x *TLSChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_metadata_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSChallengeRequest.ProtoReflect.Descriptor instead.
func (*TLSChallengeRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_metadata_service_proto_rawDescGZIP(), []int{3}
}

func (x *TLSChallengeRequest) GetChallengeToken() string {
	if x != nil {
		return x.ChallengeToken
	}
	return ""
}

type DatabaseStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// indicates whether or not central can communicate with the database
	DatabaseAvailable bool `protobuf:"varint,1,opt,name=database_available,json=databaseAvailable,proto3" json:"database_available,omitempty"`
	// type of database serving central
	DatabaseType DatabaseStatus_DatabaseType `protobuf:"varint,2,opt,name=database_type,json=databaseType,proto3,enum=v1.DatabaseStatus_DatabaseType" json:"database_type,omitempty"`
	// version of the database
	DatabaseVersion string `protobuf:"bytes,3,opt,name=database_version,json=databaseVersion,proto3" json:"database_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DatabaseStatus) Reset() {
	*x = DatabaseStatus{}
	mi := &file_api_v1_metadata_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseStatus) ProtoMessage() {}

func (x *DatabaseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_metadata_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseStatus.ProtoReflect.Descriptor instead.
func (*DatabaseStatus) Descriptor() ([]byte, []int) {
	return file_api_v1_metadata_service_proto_rawDescGZIP(), []int{4}
}

func (x *DatabaseStatus) GetDatabaseAvailable() bool {
	if x != nil {
		return x.DatabaseAvailable
	}
	return false
}

func (x *DatabaseStatus) GetDatabaseType() DatabaseStatus_DatabaseType {
	if x != nil {
		return x.DatabaseType
	}
	return DatabaseStatus_Hidden
}

func (x *DatabaseStatus) GetDatabaseVersion() string {
	if x != nil {
		return x.DatabaseVersion
	}
	return ""
}

type DatabaseBackupStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BackupInfo    *storage.BackupInfo    `protobuf:"bytes,1,opt,name=backup_info,json=backupInfo,proto3" json:"backup_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseBackupStatus) Reset() {
	*x = DatabaseBackupStatus{}
	mi := &file_api_v1_metadata_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseBackupStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseBackupStatus) ProtoMessage() {}

func (x *DatabaseBackupStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_metadata_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseBackupStatus.ProtoReflect.Descriptor instead.
func (*DatabaseBackupStatus) Descriptor() ([]byte, []int) {
	return file_api_v1_metadata_service_proto_rawDescGZIP(), []int{5}
}

func (x *DatabaseBackupStatus) GetBackupInfo() *storage.BackupInfo {
	if x != nil {
		return x.BackupInfo
	}
	return nil
}

// Provides availability of certain functionality of Central Services in the current configuration.
// The initial intended use is to disable certain functionality that does not make sense in the Cloud Service context.
type CentralServicesCapabilities struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Ability to use container IAM role for scanning images from Amazon ECR using Scanner deployed as part of Central
	// Services.
	// Note that CapabilityAvailable status does not mean that Scanner container actually has IAM role attached. Such
	// check isn't implemented at the moment and an attempt to use the corresponding setting may lead to errors when
	// the role is not actually there. It's user's responsibility to check the presence of role and integration status
	// when the corresponding setting is enabled.
	CentralScanningCanUseContainerIamRoleForEcr CentralServicesCapabilities_CapabilityStatus `protobuf:"varint,1,opt,name=central_scanning_can_use_container_iam_role_for_ecr,json=centralScanningCanUseContainerIamRoleForEcr,proto3,enum=v1.CentralServicesCapabilities_CapabilityStatus" json:"central_scanning_can_use_container_iam_role_for_ecr,omitempty"`
	// Ability to configure and perform Central backups to Amazon S3 or Google Cloud Storage.
	CentralCanUseCloudBackupIntegrations CentralServicesCapabilities_CapabilityStatus `protobuf:"varint,2,opt,name=central_can_use_cloud_backup_integrations,json=centralCanUseCloudBackupIntegrations,proto3,enum=v1.CentralServicesCapabilities_CapabilityStatus" json:"central_can_use_cloud_backup_integrations,omitempty"`
	// Ability to present health of declarative config resources (e.g. auth providers, roles, access scopes, permission
	// sets, notifiers) to the user.
	CentralCanDisplayDeclarativeConfigHealth CentralServicesCapabilities_CapabilityStatus `protobuf:"varint,3,opt,name=central_can_display_declarative_config_health,json=centralCanDisplayDeclarativeConfigHealth,proto3,enum=v1.CentralServicesCapabilities_CapabilityStatus" json:"central_can_display_declarative_config_health,omitempty"`
	// Ability to trigger generation of new certificates
	CentralCanUpdateCert CentralServicesCapabilities_CapabilityStatus `protobuf:"varint,4,opt,name=central_can_update_cert,json=centralCanUpdateCert,proto3,enum=v1.CentralServicesCapabilities_CapabilityStatus" json:"central_can_update_cert,omitempty"`
	// Ability to use integration of type acscsEmail
	CentralCanUseAcscsEmailIntegration CentralServicesCapabilities_CapabilityStatus `protobuf:"varint,5,opt,name=central_can_use_acscs_email_integration,json=centralCanUseAcscsEmailIntegration,proto3,enum=v1.CentralServicesCapabilities_CapabilityStatus" json:"central_can_use_acscs_email_integration,omitempty"`
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *CentralServicesCapabilities) Reset() {
	*x = CentralServicesCapabilities{}
	mi := &file_api_v1_metadata_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CentralServicesCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CentralServicesCapabilities) ProtoMessage() {}

func (x *CentralServicesCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_metadata_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CentralServicesCapabilities.ProtoReflect.Descriptor instead.
func (*CentralServicesCapabilities) Descriptor() ([]byte, []int) {
	return file_api_v1_metadata_service_proto_rawDescGZIP(), []int{6}
}

func (x *CentralServicesCapabilities) GetCentralScanningCanUseContainerIamRoleForEcr() CentralServicesCapabilities_CapabilityStatus {
	if x != nil {
		return x.CentralScanningCanUseContainerIamRoleForEcr
	}
	return CentralServicesCapabilities_CapabilityAvailable
}

func (x *CentralServicesCapabilities) GetCentralCanUseCloudBackupIntegrations() CentralServicesCapabilities_CapabilityStatus {
	if x != nil {
		return x.CentralCanUseCloudBackupIntegrations
	}
	return CentralServicesCapabilities_CapabilityAvailable
}

func (x *CentralServicesCapabilities) GetCentralCanDisplayDeclarativeConfigHealth() CentralServicesCapabilities_CapabilityStatus {
	if x != nil {
		return x.CentralCanDisplayDeclarativeConfigHealth
	}
	return CentralServicesCapabilities_CapabilityAvailable
}

func (x *CentralServicesCapabilities) GetCentralCanUpdateCert() CentralServicesCapabilities_CapabilityStatus {
	if x != nil {
		return x.CentralCanUpdateCert
	}
	return CentralServicesCapabilities_CapabilityAvailable
}

func (x *CentralServicesCapabilities) GetCentralCanUseAcscsEmailIntegration() CentralServicesCapabilities_CapabilityStatus {
	if x != nil {
		return x.CentralCanUseAcscsEmailIntegration
	}
	return CentralServicesCapabilities_CapabilityAvailable
}

var File_api_v1_metadata_service_proto protoreflect.FileDescriptor

const file_api_v1_metadata_service_proto_rawDesc = "" +
	"\n" +
	"\x1dapi/v1/metadata_service.proto\x12\x02v1\x1a\x12api/v1/empty.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x19storage/system_info.proto\"\x93\x02\n" +
	"\bMetadata\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12!\n" +
	"\fbuild_flavor\x18\x02 \x01(\tR\vbuildFlavor\x12#\n" +
	"\rrelease_build\x18\x03 \x01(\bR\freleaseBuild\x12E\n" +
	"\x0elicense_status\x18\x04 \x01(\x0e2\x1a.v1.Metadata.LicenseStatusB\x02\x18\x01R\rlicenseStatus\"^\n" +
	"\rLicenseStatus\x12\f\n" +
	"\x04NONE\x10\x00\x1a\x02\b\x01\x12\x0f\n" +
	"\aINVALID\x10\x01\x1a\x02\b\x01\x12\x0f\n" +
	"\aEXPIRED\x10\x02\x1a\x02\b\x01\x12\x12\n" +
	"\n" +
	"RESTARTING\x10\x03\x1a\x02\b\x01\x12\t\n" +
	"\x05VALID\x10\x04\"\xa9\x01\n" +
	"\tTrustInfo\x12\x1d\n" +
	"\n" +
	"cert_chain\x18\x01 \x03(\fR\tcertChain\x12)\n" +
	"\x10sensor_challenge\x18\x02 \x01(\tR\x0fsensorChallenge\x12+\n" +
	"\x11central_challenge\x18\x03 \x01(\tR\x10centralChallenge\x12%\n" +
	"\x0eadditional_cas\x18\x04 \x03(\fR\radditionalCas\"h\n" +
	"\x14TLSChallengeResponse\x122\n" +
	"\x15trust_info_serialized\x18\x01 \x01(\fR\x13trustInfoSerialized\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\">\n" +
	"\x13TLSChallengeRequest\x12'\n" +
	"\x0fchallenge_token\x18\x01 \x01(\tR\x0echallengeToken\"\xe9\x01\n" +
	"\x0eDatabaseStatus\x12-\n" +
	"\x12database_available\x18\x01 \x01(\bR\x11databaseAvailable\x12D\n" +
	"\rdatabase_type\x18\x02 \x01(\x0e2\x1f.v1.DatabaseStatus.DatabaseTypeR\fdatabaseType\x12)\n" +
	"\x10database_version\x18\x03 \x01(\tR\x0fdatabaseVersion\"7\n" +
	"\fDatabaseType\x12\n" +
	"\n" +
	"\x06Hidden\x10\x00\x12\v\n" +
	"\aRocksDB\x10\x01\x12\x0e\n" +
	"\n" +
	"PostgresDB\x10\x02\"L\n" +
	"\x14DatabaseBackupStatus\x124\n" +
	"\vbackup_info\x18\x01 \x01(\v2\x13.storage.BackupInfoR\n" +
	"backupInfo\"\x90\x06\n" +
	"\x1bCentralServicesCapabilities\x12\x9a\x01\n" +
	"3central_scanning_can_use_container_iam_role_for_ecr\x18\x01 \x01(\x0e20.v1.CentralServicesCapabilities.CapabilityStatusR+centralScanningCanUseContainerIamRoleForEcr\x12\x89\x01\n" +
	")central_can_use_cloud_backup_integrations\x18\x02 \x01(\x0e20.v1.CentralServicesCapabilities.CapabilityStatusR$centralCanUseCloudBackupIntegrations\x12\x91\x01\n" +
	"-central_can_display_declarative_config_health\x18\x03 \x01(\x0e20.v1.CentralServicesCapabilities.CapabilityStatusR(centralCanDisplayDeclarativeConfigHealth\x12g\n" +
	"\x17central_can_update_cert\x18\x04 \x01(\x0e20.v1.CentralServicesCapabilities.CapabilityStatusR\x14centralCanUpdateCert\x12\x85\x01\n" +
	"'central_can_use_acscs_email_integration\x18\x05 \x01(\x0e20.v1.CentralServicesCapabilities.CapabilityStatusR\"centralCanUseAcscsEmailIntegration\"C\n" +
	"\x10CapabilityStatus\x12\x17\n" +
	"\x13CapabilityAvailable\x10\x00\x12\x16\n" +
	"\x12CapabilityDisabled\x10\x012\xc1\x03\n" +
	"\x0fMetadataService\x12<\n" +
	"\vGetMetadata\x12\t.v1.Empty\x1a\f.v1.Metadata\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\f/v1/metadata\x12\\\n" +
	"\fTLSChallenge\x12\x17.v1.TLSChallengeRequest\x1a\x18.v1.TLSChallengeResponse\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v1/tls-challenge\x12O\n" +
	"\x11GetDatabaseStatus\x12\t.v1.Empty\x1a\x12.v1.DatabaseStatus\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v1/database/status\x12Y\n" +
	"\x17GetDatabaseBackupStatus\x12\t.v1.Empty\x1a\x18.v1.DatabaseBackupStatus\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v1/backup/status\x12f\n" +
	"\x16GetCentralCapabilities\x12\t.v1.Empty\x1a\x1f.v1.CentralServicesCapabilities\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/v1/central-capabilitiesB'\n" +
	"\x18io.stackrox.proto.api.v1Z\v./api/v1;v1X\x01b\x06proto3"

var (
	file_api_v1_metadata_service_proto_rawDescOnce sync.Once
	file_api_v1_metadata_service_proto_rawDescData []byte
)

func file_api_v1_metadata_service_proto_rawDescGZIP() []byte {
	file_api_v1_metadata_service_proto_rawDescOnce.Do(func() {
		file_api_v1_metadata_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_metadata_service_proto_rawDesc), len(file_api_v1_metadata_service_proto_rawDesc)))
	})
	return file_api_v1_metadata_service_proto_rawDescData
}

var file_api_v1_metadata_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_v1_metadata_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_v1_metadata_service_proto_goTypes = []any{
	(Metadata_LicenseStatus)(0),                       // 0: v1.Metadata.LicenseStatus
	(DatabaseStatus_DatabaseType)(0),                  // 1: v1.DatabaseStatus.DatabaseType
	(CentralServicesCapabilities_CapabilityStatus)(0), // 2: v1.CentralServicesCapabilities.CapabilityStatus
	(*Metadata)(nil),                                  // 3: v1.Metadata
	(*TrustInfo)(nil),                                 // 4: v1.TrustInfo
	(*TLSChallengeResponse)(nil),                      // 5: v1.TLSChallengeResponse
	(*TLSChallengeRequest)(nil),                       // 6: v1.TLSChallengeRequest
	(*DatabaseStatus)(nil),                            // 7: v1.DatabaseStatus
	(*DatabaseBackupStatus)(nil),                      // 8: v1.DatabaseBackupStatus
	(*CentralServicesCapabilities)(nil),               // 9: v1.CentralServicesCapabilities
	(*storage.BackupInfo)(nil),                        // 10: storage.BackupInfo
	(*Empty)(nil),                                     // 11: v1.Empty
}
var file_api_v1_metadata_service_proto_depIdxs = []int32{
	0,  // 0: v1.Metadata.license_status:type_name -> v1.Metadata.LicenseStatus
	1,  // 1: v1.DatabaseStatus.database_type:type_name -> v1.DatabaseStatus.DatabaseType
	10, // 2: v1.DatabaseBackupStatus.backup_info:type_name -> storage.BackupInfo
	2,  // 3: v1.CentralServicesCapabilities.central_scanning_can_use_container_iam_role_for_ecr:type_name -> v1.CentralServicesCapabilities.CapabilityStatus
	2,  // 4: v1.CentralServicesCapabilities.central_can_use_cloud_backup_integrations:type_name -> v1.CentralServicesCapabilities.CapabilityStatus
	2,  // 5: v1.CentralServicesCapabilities.central_can_display_declarative_config_health:type_name -> v1.CentralServicesCapabilities.CapabilityStatus
	2,  // 6: v1.CentralServicesCapabilities.central_can_update_cert:type_name -> v1.CentralServicesCapabilities.CapabilityStatus
	2,  // 7: v1.CentralServicesCapabilities.central_can_use_acscs_email_integration:type_name -> v1.CentralServicesCapabilities.CapabilityStatus
	11, // 8: v1.MetadataService.GetMetadata:input_type -> v1.Empty
	6,  // 9: v1.MetadataService.TLSChallenge:input_type -> v1.TLSChallengeRequest
	11, // 10: v1.MetadataService.GetDatabaseStatus:input_type -> v1.Empty
	11, // 11: v1.MetadataService.GetDatabaseBackupStatus:input_type -> v1.Empty
	11, // 12: v1.MetadataService.GetCentralCapabilities:input_type -> v1.Empty
	3,  // 13: v1.MetadataService.GetMetadata:output_type -> v1.Metadata
	5,  // 14: v1.MetadataService.TLSChallenge:output_type -> v1.TLSChallengeResponse
	7,  // 15: v1.MetadataService.GetDatabaseStatus:output_type -> v1.DatabaseStatus
	8,  // 16: v1.MetadataService.GetDatabaseBackupStatus:output_type -> v1.DatabaseBackupStatus
	9,  // 17: v1.MetadataService.GetCentralCapabilities:output_type -> v1.CentralServicesCapabilities
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_v1_metadata_service_proto_init() }
func file_api_v1_metadata_service_proto_init() {
	if File_api_v1_metadata_service_proto != nil {
		return
	}
	file_api_v1_empty_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_metadata_service_proto_rawDesc), len(file_api_v1_metadata_service_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_metadata_service_proto_goTypes,
		DependencyIndexes: file_api_v1_metadata_service_proto_depIdxs,
		EnumInfos:         file_api_v1_metadata_service_proto_enumTypes,
		MessageInfos:      file_api_v1_metadata_service_proto_msgTypes,
	}.Build()
	File_api_v1_metadata_service_proto = out.File
	file_api_v1_metadata_service_proto_goTypes = nil
	file_api_v1_metadata_service_proto_depIdxs = nil
}
