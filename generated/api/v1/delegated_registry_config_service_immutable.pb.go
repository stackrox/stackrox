// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package v1

import (
	"iter"
)

// ImmutableDelegatedRegistryClustersResponse is an immutable interface for DelegatedRegistryClustersResponse
type ImmutableDelegatedRegistryClustersResponse interface {
	GetImmutableClusters() iter.Seq[ImmutableDelegatedRegistryCluster]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *DelegatedRegistryClustersResponse
}

// GetImmutableClusters implements ImmutableDelegatedRegistryClustersResponse
func (m *DelegatedRegistryClustersResponse) GetImmutableClusters() iter.Seq[ImmutableDelegatedRegistryCluster] {
	return func(yield func(ImmutableDelegatedRegistryCluster) bool) {
		if m == nil || m.Clusters == nil {
			return
		}
		for _, v := range m.Clusters {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that DelegatedRegistryClustersResponse implements ImmutableDelegatedRegistryClustersResponse
var _ ImmutableDelegatedRegistryClustersResponse = (*DelegatedRegistryClustersResponse)(nil)

// ImmutableDelegatedRegistryCluster is an immutable interface for DelegatedRegistryCluster
type ImmutableDelegatedRegistryCluster interface {
	GetId() string
	GetName() string
	GetIsValid() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *DelegatedRegistryCluster
}

// Verify that DelegatedRegistryCluster implements ImmutableDelegatedRegistryCluster
var _ ImmutableDelegatedRegistryCluster = (*DelegatedRegistryCluster)(nil)

// ImmutableDelegatedRegistryConfig is an immutable interface for DelegatedRegistryConfig
type ImmutableDelegatedRegistryConfig interface {
	// Determines if delegation is enabled for no registries, all registries, or specific registries
	GetEnabledFor() DelegatedRegistryConfig_EnabledFor
	// The default cluster to delegate ad-hoc requests to if no match found in registries, not used
	// if `enabled for` is NONE
	GetDefaultClusterId() string
	// If `enabled for` is NONE registries has no effect.
	//
	// If `ALL` registries directs ad-hoc requests to the specified secured clusters if the path matches.
	//
	// If `SPECIFIC` registries directs ad-hoc requests to the specified secured clusters just like with `ALL`,
	// but in addition images that match the specified paths will be scanned locally by the secured clusters
	// (images from the OCP integrated registry are always scanned locally). Images that do not match a path
	// will be scanned via central services
	GetImmutableRegistries() iter.Seq[ImmutableDelegatedRegistryConfig_DelegatedRegistry]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *DelegatedRegistryConfig
}

// GetImmutableRegistries implements ImmutableDelegatedRegistryConfig
func (m *DelegatedRegistryConfig) GetImmutableRegistries() iter.Seq[ImmutableDelegatedRegistryConfig_DelegatedRegistry] {
	return func(yield func(ImmutableDelegatedRegistryConfig_DelegatedRegistry) bool) {
		if m == nil || m.Registries == nil {
			return
		}
		for _, v := range m.Registries {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that DelegatedRegistryConfig implements ImmutableDelegatedRegistryConfig
var _ ImmutableDelegatedRegistryConfig = (*DelegatedRegistryConfig)(nil)

// ImmutableDelegatedRegistryConfig_DelegatedRegistry is an immutable interface for DelegatedRegistryConfig_DelegatedRegistry
type ImmutableDelegatedRegistryConfig_DelegatedRegistry interface {
	// Registry + optional path, ie: quay.example.com/prod
	GetPath() string
	// ID of the cluster to delegate ad-hoc requests to
	GetClusterId() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *DelegatedRegistryConfig_DelegatedRegistry
}

// Verify that DelegatedRegistryConfig_DelegatedRegistry implements ImmutableDelegatedRegistryConfig_DelegatedRegistry
var _ ImmutableDelegatedRegistryConfig_DelegatedRegistry = (*DelegatedRegistryConfig_DelegatedRegistry)(nil)
