// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/v1/auth_service.proto

//go:build !protoopaque

package v1

import (
	storage "github.com/stackrox/rox/generated/storage"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The type of the auth machine to machine config.
// Currently supports GitHub actions or any other generic OIDC provider to use for verifying and
// exchanging the token.
type AuthMachineToMachineConfig_Type int32

const (
	AuthMachineToMachineConfig_GENERIC              AuthMachineToMachineConfig_Type = 0
	AuthMachineToMachineConfig_GITHUB_ACTIONS       AuthMachineToMachineConfig_Type = 1
	AuthMachineToMachineConfig_KUBE_SERVICE_ACCOUNT AuthMachineToMachineConfig_Type = 2
)

// Enum value maps for AuthMachineToMachineConfig_Type.
var (
	AuthMachineToMachineConfig_Type_name = map[int32]string{
		0: "GENERIC",
		1: "GITHUB_ACTIONS",
		2: "KUBE_SERVICE_ACCOUNT",
	}
	AuthMachineToMachineConfig_Type_value = map[string]int32{
		"GENERIC":              0,
		"GITHUB_ACTIONS":       1,
		"KUBE_SERVICE_ACCOUNT": 2,
	}
)

func (x AuthMachineToMachineConfig_Type) Enum() *AuthMachineToMachineConfig_Type {
	p := new(AuthMachineToMachineConfig_Type)
	*p = x
	return p
}

func (x AuthMachineToMachineConfig_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthMachineToMachineConfig_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_auth_service_proto_enumTypes[0].Descriptor()
}

func (AuthMachineToMachineConfig_Type) Type() protoreflect.EnumType {
	return &file_api_v1_auth_service_proto_enumTypes[0]
}

func (x AuthMachineToMachineConfig_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type UserAttribute struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Key           *string                `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Values        []string               `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserAttribute) Reset() {
	*x = UserAttribute{}
	mi := &file_api_v1_auth_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAttribute) ProtoMessage() {}

func (x *UserAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UserAttribute) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *UserAttribute) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *UserAttribute) SetKey(v string) {
	x.Key = &v
}

func (x *UserAttribute) SetValues(v []string) {
	x.Values = v
}

func (x *UserAttribute) HasKey() bool {
	if x == nil {
		return false
	}
	return x.Key != nil
}

func (x *UserAttribute) ClearKey() {
	x.Key = nil
}

type UserAttribute_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key    *string
	Values []string
}

func (b0 UserAttribute_builder) Build() *UserAttribute {
	m0 := &UserAttribute{}
	b, x := &b0, m0
	_, _ = b, x
	x.Key = b.Key
	x.Values = b.Values
	return m0
}

type AuthStatus struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Types that are valid to be assigned to Id:
	//
	//	*AuthStatus_UserId
	//	*AuthStatus_ServiceId
	Id             isAuthStatus_Id        `protobuf_oneof:"id"`
	Expires        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires" json:"expires,omitempty"`
	RefreshUrl     *string                `protobuf:"bytes,4,opt,name=refresh_url,json=refreshUrl" json:"refresh_url,omitempty"`
	AuthProvider   *storage.AuthProvider  `protobuf:"bytes,5,opt,name=auth_provider,json=authProvider" json:"auth_provider,omitempty"`
	UserInfo       *storage.UserInfo      `protobuf:"bytes,6,opt,name=user_info,json=userInfo" json:"user_info,omitempty"`
	UserAttributes []*UserAttribute       `protobuf:"bytes,7,rep,name=user_attributes,json=userAttributes" json:"user_attributes,omitempty"`
	// Token returned to ACS by the underlying identity provider. This field is set only in a few,
	// specific contexts. Do not rely on this field being present in the response.
	IdpToken      *string `protobuf:"bytes,8,opt,name=idp_token,json=idpToken" json:"idp_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthStatus) Reset() {
	*x = AuthStatus{}
	mi := &file_api_v1_auth_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthStatus) ProtoMessage() {}

func (x *AuthStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthStatus) GetId() isAuthStatus_Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *AuthStatus) GetUserId() string {
	if x != nil {
		if x, ok := x.Id.(*AuthStatus_UserId); ok {
			return x.UserId
		}
	}
	return ""
}

func (x *AuthStatus) GetServiceId() *storage.ServiceIdentity {
	if x != nil {
		if x, ok := x.Id.(*AuthStatus_ServiceId); ok {
			return x.ServiceId
		}
	}
	return nil
}

func (x *AuthStatus) GetExpires() *timestamppb.Timestamp {
	if x != nil {
		return x.Expires
	}
	return nil
}

func (x *AuthStatus) GetRefreshUrl() string {
	if x != nil && x.RefreshUrl != nil {
		return *x.RefreshUrl
	}
	return ""
}

func (x *AuthStatus) GetAuthProvider() *storage.AuthProvider {
	if x != nil {
		return x.AuthProvider
	}
	return nil
}

func (x *AuthStatus) GetUserInfo() *storage.UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *AuthStatus) GetUserAttributes() []*UserAttribute {
	if x != nil {
		return x.UserAttributes
	}
	return nil
}

func (x *AuthStatus) GetIdpToken() string {
	if x != nil && x.IdpToken != nil {
		return *x.IdpToken
	}
	return ""
}

func (x *AuthStatus) SetUserId(v string) {
	x.Id = &AuthStatus_UserId{v}
}

func (x *AuthStatus) SetServiceId(v *storage.ServiceIdentity) {
	if v == nil {
		x.Id = nil
		return
	}
	x.Id = &AuthStatus_ServiceId{v}
}

func (x *AuthStatus) SetExpires(v *timestamppb.Timestamp) {
	x.Expires = v
}

func (x *AuthStatus) SetRefreshUrl(v string) {
	x.RefreshUrl = &v
}

func (x *AuthStatus) SetAuthProvider(v *storage.AuthProvider) {
	x.AuthProvider = v
}

func (x *AuthStatus) SetUserInfo(v *storage.UserInfo) {
	x.UserInfo = v
}

func (x *AuthStatus) SetUserAttributes(v []*UserAttribute) {
	x.UserAttributes = v
}

func (x *AuthStatus) SetIdpToken(v string) {
	x.IdpToken = &v
}

func (x *AuthStatus) HasId() bool {
	if x == nil {
		return false
	}
	return x.Id != nil
}

func (x *AuthStatus) HasUserId() bool {
	if x == nil {
		return false
	}
	_, ok := x.Id.(*AuthStatus_UserId)
	return ok
}

func (x *AuthStatus) HasServiceId() bool {
	if x == nil {
		return false
	}
	_, ok := x.Id.(*AuthStatus_ServiceId)
	return ok
}

func (x *AuthStatus) HasExpires() bool {
	if x == nil {
		return false
	}
	return x.Expires != nil
}

func (x *AuthStatus) HasRefreshUrl() bool {
	if x == nil {
		return false
	}
	return x.RefreshUrl != nil
}

func (x *AuthStatus) HasAuthProvider() bool {
	if x == nil {
		return false
	}
	return x.AuthProvider != nil
}

func (x *AuthStatus) HasUserInfo() bool {
	if x == nil {
		return false
	}
	return x.UserInfo != nil
}

func (x *AuthStatus) HasIdpToken() bool {
	if x == nil {
		return false
	}
	return x.IdpToken != nil
}

func (x *AuthStatus) ClearId() {
	x.Id = nil
}

func (x *AuthStatus) ClearUserId() {
	if _, ok := x.Id.(*AuthStatus_UserId); ok {
		x.Id = nil
	}
}

func (x *AuthStatus) ClearServiceId() {
	if _, ok := x.Id.(*AuthStatus_ServiceId); ok {
		x.Id = nil
	}
}

func (x *AuthStatus) ClearExpires() {
	x.Expires = nil
}

func (x *AuthStatus) ClearRefreshUrl() {
	x.RefreshUrl = nil
}

func (x *AuthStatus) ClearAuthProvider() {
	x.AuthProvider = nil
}

func (x *AuthStatus) ClearUserInfo() {
	x.UserInfo = nil
}

func (x *AuthStatus) ClearIdpToken() {
	x.IdpToken = nil
}

const AuthStatus_Id_not_set_case case_AuthStatus_Id = 0
const AuthStatus_UserId_case case_AuthStatus_Id = 1
const AuthStatus_ServiceId_case case_AuthStatus_Id = 2

func (x *AuthStatus) WhichId() case_AuthStatus_Id {
	if x == nil {
		return AuthStatus_Id_not_set_case
	}
	switch x.Id.(type) {
	case *AuthStatus_UserId:
		return AuthStatus_UserId_case
	case *AuthStatus_ServiceId:
		return AuthStatus_ServiceId_case
	default:
		return AuthStatus_Id_not_set_case
	}
}

type AuthStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof Id:
	UserId    *string
	ServiceId *storage.ServiceIdentity
	// -- end of Id
	Expires        *timestamppb.Timestamp
	RefreshUrl     *string
	AuthProvider   *storage.AuthProvider
	UserInfo       *storage.UserInfo
	UserAttributes []*UserAttribute
	// Token returned to ACS by the underlying identity provider. This field is set only in a few,
	// specific contexts. Do not rely on this field being present in the response.
	IdpToken *string
}

func (b0 AuthStatus_builder) Build() *AuthStatus {
	m0 := &AuthStatus{}
	b, x := &b0, m0
	_, _ = b, x
	if b.UserId != nil {
		x.Id = &AuthStatus_UserId{*b.UserId}
	}
	if b.ServiceId != nil {
		x.Id = &AuthStatus_ServiceId{b.ServiceId}
	}
	x.Expires = b.Expires
	x.RefreshUrl = b.RefreshUrl
	x.AuthProvider = b.AuthProvider
	x.UserInfo = b.UserInfo
	x.UserAttributes = b.UserAttributes
	x.IdpToken = b.IdpToken
	return m0
}

type case_AuthStatus_Id protoreflect.FieldNumber

func (x case_AuthStatus_Id) String() string {
	md := file_api_v1_auth_service_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isAuthStatus_Id interface {
	isAuthStatus_Id()
}

type AuthStatus_UserId struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,oneof"`
}

type AuthStatus_ServiceId struct {
	ServiceId *storage.ServiceIdentity `protobuf:"bytes,2,opt,name=service_id,json=serviceId,oneof"`
}

func (*AuthStatus_UserId) isAuthStatus_Id() {}

func (*AuthStatus_ServiceId) isAuthStatus_Id() {}

// AuthMachineToMachineConfig determines rules for exchanging an identity token from a third party with
// a Central access token. The M2M stands for machine to machine, as this is the intended use-case
// for the config.
type AuthMachineToMachineConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// UUID of the config.
	// Note that when adding a machine to machine config, this field should not be set.
	Id   *string                          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type *AuthMachineToMachineConfig_Type `protobuf:"varint,2,opt,name=type,enum=v1.AuthMachineToMachineConfig_Type" json:"type,omitempty"`
	// Sets the expiration of the token returned from the ExchangeAuthMachineToMachineToken API call.
	// Possible valid time units are: s, m, h.
	// The maximum allowed expiration duration is 24h.
	// As an example: 2h45m.
	// For additional information on the validation of the duration, see:
	// https://pkg.go.dev/time#ParseDuration.
	TokenExpirationDuration *string `protobuf:"bytes,3,opt,name=token_expiration_duration,json=tokenExpirationDuration" json:"token_expiration_duration,omitempty"`
	// At least one mapping is required to resolve to a valid role for the access token to be successfully generated.
	Mappings []*AuthMachineToMachineConfig_Mapping `protobuf:"bytes,4,rep,name=mappings" json:"mappings,omitempty"`
	// The issuer of the related OIDC provider issuing the ID tokens to exchange.
	//
	// Must be non-empty string containing URL when type is GENERIC.
	// In case of GitHub actions, this must be empty or set to https://token.actions.githubusercontent.com.
	//
	// Issuer is a unique key, therefore there may be at most one GITHUB_ACTIONS config, and each
	// GENERIC config must have a distinct issuer.
	Issuer        *string `protobuf:"bytes,5,opt,name=issuer" json:"issuer,omitempty"`
	Traits        *Traits `protobuf:"bytes,6,opt,name=traits" json:"traits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthMachineToMachineConfig) Reset() {
	*x = AuthMachineToMachineConfig{}
	mi := &file_api_v1_auth_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthMachineToMachineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthMachineToMachineConfig) ProtoMessage() {}

func (x *AuthMachineToMachineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthMachineToMachineConfig) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *AuthMachineToMachineConfig) GetType() AuthMachineToMachineConfig_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return AuthMachineToMachineConfig_GENERIC
}

func (x *AuthMachineToMachineConfig) GetTokenExpirationDuration() string {
	if x != nil && x.TokenExpirationDuration != nil {
		return *x.TokenExpirationDuration
	}
	return ""
}

func (x *AuthMachineToMachineConfig) GetMappings() []*AuthMachineToMachineConfig_Mapping {
	if x != nil {
		return x.Mappings
	}
	return nil
}

func (x *AuthMachineToMachineConfig) GetIssuer() string {
	if x != nil && x.Issuer != nil {
		return *x.Issuer
	}
	return ""
}

func (x *AuthMachineToMachineConfig) GetTraits() *Traits {
	if x != nil {
		return x.Traits
	}
	return nil
}

func (x *AuthMachineToMachineConfig) SetId(v string) {
	x.Id = &v
}

func (x *AuthMachineToMachineConfig) SetType(v AuthMachineToMachineConfig_Type) {
	x.Type = &v
}

func (x *AuthMachineToMachineConfig) SetTokenExpirationDuration(v string) {
	x.TokenExpirationDuration = &v
}

func (x *AuthMachineToMachineConfig) SetMappings(v []*AuthMachineToMachineConfig_Mapping) {
	x.Mappings = v
}

func (x *AuthMachineToMachineConfig) SetIssuer(v string) {
	x.Issuer = &v
}

func (x *AuthMachineToMachineConfig) SetTraits(v *Traits) {
	x.Traits = v
}

func (x *AuthMachineToMachineConfig) HasId() bool {
	if x == nil {
		return false
	}
	return x.Id != nil
}

func (x *AuthMachineToMachineConfig) HasType() bool {
	if x == nil {
		return false
	}
	return x.Type != nil
}

func (x *AuthMachineToMachineConfig) HasTokenExpirationDuration() bool {
	if x == nil {
		return false
	}
	return x.TokenExpirationDuration != nil
}

func (x *AuthMachineToMachineConfig) HasIssuer() bool {
	if x == nil {
		return false
	}
	return x.Issuer != nil
}

func (x *AuthMachineToMachineConfig) HasTraits() bool {
	if x == nil {
		return false
	}
	return x.Traits != nil
}

func (x *AuthMachineToMachineConfig) ClearId() {
	x.Id = nil
}

func (x *AuthMachineToMachineConfig) ClearType() {
	x.Type = nil
}

func (x *AuthMachineToMachineConfig) ClearTokenExpirationDuration() {
	x.TokenExpirationDuration = nil
}

func (x *AuthMachineToMachineConfig) ClearIssuer() {
	x.Issuer = nil
}

func (x *AuthMachineToMachineConfig) ClearTraits() {
	x.Traits = nil
}

type AuthMachineToMachineConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// UUID of the config.
	// Note that when adding a machine to machine config, this field should not be set.
	Id   *string
	Type *AuthMachineToMachineConfig_Type
	// Sets the expiration of the token returned from the ExchangeAuthMachineToMachineToken API call.
	// Possible valid time units are: s, m, h.
	// The maximum allowed expiration duration is 24h.
	// As an example: 2h45m.
	// For additional information on the validation of the duration, see:
	// https://pkg.go.dev/time#ParseDuration.
	TokenExpirationDuration *string
	// At least one mapping is required to resolve to a valid role for the access token to be successfully generated.
	Mappings []*AuthMachineToMachineConfig_Mapping
	// The issuer of the related OIDC provider issuing the ID tokens to exchange.
	//
	// Must be non-empty string containing URL when type is GENERIC.
	// In case of GitHub actions, this must be empty or set to https://token.actions.githubusercontent.com.
	//
	// Issuer is a unique key, therefore there may be at most one GITHUB_ACTIONS config, and each
	// GENERIC config must have a distinct issuer.
	Issuer *string
	Traits *Traits
}

func (b0 AuthMachineToMachineConfig_builder) Build() *AuthMachineToMachineConfig {
	m0 := &AuthMachineToMachineConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	x.Type = b.Type
	x.TokenExpirationDuration = b.TokenExpirationDuration
	x.Mappings = b.Mappings
	x.Issuer = b.Issuer
	x.Traits = b.Traits
	return m0
}

type ListAuthMachineToMachineConfigResponse struct {
	state         protoimpl.MessageState        `protogen:"hybrid.v1"`
	Configs       []*AuthMachineToMachineConfig `protobuf:"bytes,1,rep,name=configs" json:"configs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAuthMachineToMachineConfigResponse) Reset() {
	*x = ListAuthMachineToMachineConfigResponse{}
	mi := &file_api_v1_auth_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAuthMachineToMachineConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuthMachineToMachineConfigResponse) ProtoMessage() {}

func (x *ListAuthMachineToMachineConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListAuthMachineToMachineConfigResponse) GetConfigs() []*AuthMachineToMachineConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

func (x *ListAuthMachineToMachineConfigResponse) SetConfigs(v []*AuthMachineToMachineConfig) {
	x.Configs = v
}

type ListAuthMachineToMachineConfigResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Configs []*AuthMachineToMachineConfig
}

func (b0 ListAuthMachineToMachineConfigResponse_builder) Build() *ListAuthMachineToMachineConfigResponse {
	m0 := &ListAuthMachineToMachineConfigResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Configs = b.Configs
	return m0
}

type GetAuthMachineToMachineConfigResponse struct {
	state         protoimpl.MessageState      `protogen:"hybrid.v1"`
	Config        *AuthMachineToMachineConfig `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuthMachineToMachineConfigResponse) Reset() {
	*x = GetAuthMachineToMachineConfigResponse{}
	mi := &file_api_v1_auth_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuthMachineToMachineConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthMachineToMachineConfigResponse) ProtoMessage() {}

func (x *GetAuthMachineToMachineConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetAuthMachineToMachineConfigResponse) GetConfig() *AuthMachineToMachineConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GetAuthMachineToMachineConfigResponse) SetConfig(v *AuthMachineToMachineConfig) {
	x.Config = v
}

func (x *GetAuthMachineToMachineConfigResponse) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *GetAuthMachineToMachineConfigResponse) ClearConfig() {
	x.Config = nil
}

type GetAuthMachineToMachineConfigResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Config *AuthMachineToMachineConfig
}

func (b0 GetAuthMachineToMachineConfigResponse_builder) Build() *GetAuthMachineToMachineConfigResponse {
	m0 := &GetAuthMachineToMachineConfigResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Config = b.Config
	return m0
}

type AddAuthMachineToMachineConfigRequest struct {
	state         protoimpl.MessageState      `protogen:"hybrid.v1"`
	Config        *AuthMachineToMachineConfig `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAuthMachineToMachineConfigRequest) Reset() {
	*x = AddAuthMachineToMachineConfigRequest{}
	mi := &file_api_v1_auth_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAuthMachineToMachineConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAuthMachineToMachineConfigRequest) ProtoMessage() {}

func (x *AddAuthMachineToMachineConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddAuthMachineToMachineConfigRequest) GetConfig() *AuthMachineToMachineConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *AddAuthMachineToMachineConfigRequest) SetConfig(v *AuthMachineToMachineConfig) {
	x.Config = v
}

func (x *AddAuthMachineToMachineConfigRequest) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *AddAuthMachineToMachineConfigRequest) ClearConfig() {
	x.Config = nil
}

type AddAuthMachineToMachineConfigRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Config *AuthMachineToMachineConfig
}

func (b0 AddAuthMachineToMachineConfigRequest_builder) Build() *AddAuthMachineToMachineConfigRequest {
	m0 := &AddAuthMachineToMachineConfigRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Config = b.Config
	return m0
}

type AddAuthMachineToMachineConfigResponse struct {
	state         protoimpl.MessageState      `protogen:"hybrid.v1"`
	Config        *AuthMachineToMachineConfig `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAuthMachineToMachineConfigResponse) Reset() {
	*x = AddAuthMachineToMachineConfigResponse{}
	mi := &file_api_v1_auth_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAuthMachineToMachineConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAuthMachineToMachineConfigResponse) ProtoMessage() {}

func (x *AddAuthMachineToMachineConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AddAuthMachineToMachineConfigResponse) GetConfig() *AuthMachineToMachineConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *AddAuthMachineToMachineConfigResponse) SetConfig(v *AuthMachineToMachineConfig) {
	x.Config = v
}

func (x *AddAuthMachineToMachineConfigResponse) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *AddAuthMachineToMachineConfigResponse) ClearConfig() {
	x.Config = nil
}

type AddAuthMachineToMachineConfigResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Config *AuthMachineToMachineConfig
}

func (b0 AddAuthMachineToMachineConfigResponse_builder) Build() *AddAuthMachineToMachineConfigResponse {
	m0 := &AddAuthMachineToMachineConfigResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Config = b.Config
	return m0
}

type UpdateAuthMachineToMachineConfigRequest struct {
	state         protoimpl.MessageState      `protogen:"hybrid.v1"`
	Config        *AuthMachineToMachineConfig `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAuthMachineToMachineConfigRequest) Reset() {
	*x = UpdateAuthMachineToMachineConfigRequest{}
	mi := &file_api_v1_auth_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAuthMachineToMachineConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthMachineToMachineConfigRequest) ProtoMessage() {}

func (x *UpdateAuthMachineToMachineConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateAuthMachineToMachineConfigRequest) GetConfig() *AuthMachineToMachineConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *UpdateAuthMachineToMachineConfigRequest) SetConfig(v *AuthMachineToMachineConfig) {
	x.Config = v
}

func (x *UpdateAuthMachineToMachineConfigRequest) HasConfig() bool {
	if x == nil {
		return false
	}
	return x.Config != nil
}

func (x *UpdateAuthMachineToMachineConfigRequest) ClearConfig() {
	x.Config = nil
}

type UpdateAuthMachineToMachineConfigRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Config *AuthMachineToMachineConfig
}

func (b0 UpdateAuthMachineToMachineConfigRequest_builder) Build() *UpdateAuthMachineToMachineConfigRequest {
	m0 := &UpdateAuthMachineToMachineConfigRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Config = b.Config
	return m0
}

type ExchangeAuthMachineToMachineTokenRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Identity token that is supposed to be exchanged.
	IdToken       *string `protobuf:"bytes,1,opt,name=id_token,json=idToken" json:"id_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeAuthMachineToMachineTokenRequest) Reset() {
	*x = ExchangeAuthMachineToMachineTokenRequest{}
	mi := &file_api_v1_auth_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeAuthMachineToMachineTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeAuthMachineToMachineTokenRequest) ProtoMessage() {}

func (x *ExchangeAuthMachineToMachineTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExchangeAuthMachineToMachineTokenRequest) GetIdToken() string {
	if x != nil && x.IdToken != nil {
		return *x.IdToken
	}
	return ""
}

func (x *ExchangeAuthMachineToMachineTokenRequest) SetIdToken(v string) {
	x.IdToken = &v
}

func (x *ExchangeAuthMachineToMachineTokenRequest) HasIdToken() bool {
	if x == nil {
		return false
	}
	return x.IdToken != nil
}

func (x *ExchangeAuthMachineToMachineTokenRequest) ClearIdToken() {
	x.IdToken = nil
}

type ExchangeAuthMachineToMachineTokenRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Identity token that is supposed to be exchanged.
	IdToken *string
}

func (b0 ExchangeAuthMachineToMachineTokenRequest_builder) Build() *ExchangeAuthMachineToMachineTokenRequest {
	m0 := &ExchangeAuthMachineToMachineTokenRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.IdToken = b.IdToken
	return m0
}

type ExchangeAuthMachineToMachineTokenResponse struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// The exchanged access token.
	AccessToken   *string `protobuf:"bytes,1,opt,name=access_token,json=accessToken" json:"access_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExchangeAuthMachineToMachineTokenResponse) Reset() {
	*x = ExchangeAuthMachineToMachineTokenResponse{}
	mi := &file_api_v1_auth_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeAuthMachineToMachineTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeAuthMachineToMachineTokenResponse) ProtoMessage() {}

func (x *ExchangeAuthMachineToMachineTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExchangeAuthMachineToMachineTokenResponse) GetAccessToken() string {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return ""
}

func (x *ExchangeAuthMachineToMachineTokenResponse) SetAccessToken(v string) {
	x.AccessToken = &v
}

func (x *ExchangeAuthMachineToMachineTokenResponse) HasAccessToken() bool {
	if x == nil {
		return false
	}
	return x.AccessToken != nil
}

func (x *ExchangeAuthMachineToMachineTokenResponse) ClearAccessToken() {
	x.AccessToken = nil
}

type ExchangeAuthMachineToMachineTokenResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The exchanged access token.
	AccessToken *string
}

func (b0 ExchangeAuthMachineToMachineTokenResponse_builder) Build() *ExchangeAuthMachineToMachineTokenResponse {
	m0 := &ExchangeAuthMachineToMachineTokenResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.AccessToken = b.AccessToken
	return m0
}

// Mappings map an identity token's claim values to a specific role within Central.
type AuthMachineToMachineConfig_Mapping struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// A key within the identity token's claim value to use.
	Key *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// A regular expression that will be evaluated against values of the identity token claim
	// identified by the specified key.
	// This regular expressions is in RE2 format, see more here:
	// https://github.com/google/re2/wiki/Syntax.
	ValueExpression *string `protobuf:"bytes,2,opt,name=value_expression,json=valueExpression" json:"value_expression,omitempty"`
	// The role which should be issued when the key and value match for a particular identity token.
	Role          *string `protobuf:"bytes,3,opt,name=role" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthMachineToMachineConfig_Mapping) Reset() {
	*x = AuthMachineToMachineConfig_Mapping{}
	mi := &file_api_v1_auth_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthMachineToMachineConfig_Mapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthMachineToMachineConfig_Mapping) ProtoMessage() {}

func (x *AuthMachineToMachineConfig_Mapping) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_auth_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuthMachineToMachineConfig_Mapping) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *AuthMachineToMachineConfig_Mapping) GetValueExpression() string {
	if x != nil && x.ValueExpression != nil {
		return *x.ValueExpression
	}
	return ""
}

func (x *AuthMachineToMachineConfig_Mapping) GetRole() string {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ""
}

func (x *AuthMachineToMachineConfig_Mapping) SetKey(v string) {
	x.Key = &v
}

func (x *AuthMachineToMachineConfig_Mapping) SetValueExpression(v string) {
	x.ValueExpression = &v
}

func (x *AuthMachineToMachineConfig_Mapping) SetRole(v string) {
	x.Role = &v
}

func (x *AuthMachineToMachineConfig_Mapping) HasKey() bool {
	if x == nil {
		return false
	}
	return x.Key != nil
}

func (x *AuthMachineToMachineConfig_Mapping) HasValueExpression() bool {
	if x == nil {
		return false
	}
	return x.ValueExpression != nil
}

func (x *AuthMachineToMachineConfig_Mapping) HasRole() bool {
	if x == nil {
		return false
	}
	return x.Role != nil
}

func (x *AuthMachineToMachineConfig_Mapping) ClearKey() {
	x.Key = nil
}

func (x *AuthMachineToMachineConfig_Mapping) ClearValueExpression() {
	x.ValueExpression = nil
}

func (x *AuthMachineToMachineConfig_Mapping) ClearRole() {
	x.Role = nil
}

type AuthMachineToMachineConfig_Mapping_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// A key within the identity token's claim value to use.
	Key *string
	// A regular expression that will be evaluated against values of the identity token claim
	// identified by the specified key.
	// This regular expressions is in RE2 format, see more here:
	// https://github.com/google/re2/wiki/Syntax.
	ValueExpression *string
	// The role which should be issued when the key and value match for a particular identity token.
	Role *string
}

func (b0 AuthMachineToMachineConfig_Mapping_builder) Build() *AuthMachineToMachineConfig_Mapping {
	m0 := &AuthMachineToMachineConfig_Mapping{}
	b, x := &b0, m0
	_, _ = b, x
	x.Key = b.Key
	x.ValueExpression = b.ValueExpression
	x.Role = b.Role
	return m0
}

var File_api_v1_auth_service_proto protoreflect.FileDescriptor

const file_api_v1_auth_service_proto_rawDesc = "" +
	"\n" +
	"\x19api/v1/auth_service.proto\x12\x02v1\x1a\x13api/v1/common.proto\x1a\x12api/v1/empty.proto\x1a\x13api/v1/traits.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bstorage/auth_provider.proto\x1a\x1estorage/service_identity.proto\x1a\x12storage/user.proto\x1a!google/protobuf/go_features.proto\"9\n" +
	"\rUserAttribute\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x16\n" +
	"\x06values\x18\x02 \x03(\tR\x06values\"\x84\x03\n" +
	"\n" +
	"AuthStatus\x12\x19\n" +
	"\auser_id\x18\x01 \x01(\tH\x00R\x06userId\x129\n" +
	"\n" +
	"service_id\x18\x02 \x01(\v2\x18.storage.ServiceIdentityH\x00R\tserviceId\x124\n" +
	"\aexpires\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aexpires\x12\x1f\n" +
	"\vrefresh_url\x18\x04 \x01(\tR\n" +
	"refreshUrl\x12:\n" +
	"\rauth_provider\x18\x05 \x01(\v2\x15.storage.AuthProviderR\fauthProvider\x12.\n" +
	"\tuser_info\x18\x06 \x01(\v2\x11.storage.UserInfoR\buserInfo\x12:\n" +
	"\x0fuser_attributes\x18\a \x03(\v2\x11.v1.UserAttributeR\x0euserAttributes\x12\x1b\n" +
	"\tidp_token\x18\b \x01(\tR\bidpTokenB\x04\n" +
	"\x02id\"\xc0\x03\n" +
	"\x1aAuthMachineToMachineConfig\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x127\n" +
	"\x04type\x18\x02 \x01(\x0e2#.v1.AuthMachineToMachineConfig.TypeR\x04type\x12:\n" +
	"\x19token_expiration_duration\x18\x03 \x01(\tR\x17tokenExpirationDuration\x12B\n" +
	"\bmappings\x18\x04 \x03(\v2&.v1.AuthMachineToMachineConfig.MappingR\bmappings\x12\x16\n" +
	"\x06issuer\x18\x05 \x01(\tR\x06issuer\x12\"\n" +
	"\x06traits\x18\x06 \x01(\v2\n" +
	".v1.TraitsR\x06traits\x1aZ\n" +
	"\aMapping\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12)\n" +
	"\x10value_expression\x18\x02 \x01(\tR\x0fvalueExpression\x12\x12\n" +
	"\x04role\x18\x03 \x01(\tR\x04role\"A\n" +
	"\x04Type\x12\v\n" +
	"\aGENERIC\x10\x00\x12\x12\n" +
	"\x0eGITHUB_ACTIONS\x10\x01\x12\x18\n" +
	"\x14KUBE_SERVICE_ACCOUNT\x10\x02\"b\n" +
	"&ListAuthMachineToMachineConfigResponse\x128\n" +
	"\aconfigs\x18\x01 \x03(\v2\x1e.v1.AuthMachineToMachineConfigR\aconfigs\"_\n" +
	"%GetAuthMachineToMachineConfigResponse\x126\n" +
	"\x06config\x18\x01 \x01(\v2\x1e.v1.AuthMachineToMachineConfigR\x06config\"^\n" +
	"$AddAuthMachineToMachineConfigRequest\x126\n" +
	"\x06config\x18\x01 \x01(\v2\x1e.v1.AuthMachineToMachineConfigR\x06config\"_\n" +
	"%AddAuthMachineToMachineConfigResponse\x126\n" +
	"\x06config\x18\x01 \x01(\v2\x1e.v1.AuthMachineToMachineConfigR\x06config\"a\n" +
	"'UpdateAuthMachineToMachineConfigRequest\x126\n" +
	"\x06config\x18\x01 \x01(\v2\x1e.v1.AuthMachineToMachineConfigR\x06config\"E\n" +
	"(ExchangeAuthMachineToMachineTokenRequest\x12\x19\n" +
	"\bid_token\x18\x01 \x01(\tR\aidToken\"N\n" +
	")ExchangeAuthMachineToMachineTokenResponse\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken2\xcd\x06\n" +
	"\vAuthService\x12C\n" +
	"\rGetAuthStatus\x12\t.v1.Empty\x1a\x0e.v1.AuthStatus\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/v1/auth/status\x12n\n" +
	"\x1fListAuthMachineToMachineConfigs\x12\t.v1.Empty\x1a*.v1.ListAuthMachineToMachineConfigResponse\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\f/v1/auth/m2m\x12w\n" +
	"\x1dGetAuthMachineToMachineConfig\x12\x10.v1.ResourceByID\x1a).v1.GetAuthMachineToMachineConfigResponse\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v1/auth/m2m/{id}\x12\x8d\x01\n" +
	"\x1dAddAuthMachineToMachineConfig\x12(.v1.AddAuthMachineToMachineConfigRequest\x1a).v1.AddAuthMachineToMachineConfigResponse\"\x17\x82\xd3\xe4\x93\x02\x11:\x01*\"\f/v1/auth/m2m\x12\x7f\n" +
	" UpdateAuthMachineToMachineConfig\x12+.v1.UpdateAuthMachineToMachineConfigRequest\x1a\t.v1.Empty\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\x1a\x18/v1/auth/m2m/{config.id}\x12Z\n" +
	" DeleteAuthMachineToMachineConfig\x12\x10.v1.ResourceByID\x1a\t.v1.Empty\"\x19\x82\xd3\xe4\x93\x02\x13*\x11/v1/auth/m2m/{id}\x12\xa2\x01\n" +
	"!ExchangeAuthMachineToMachineToken\x12,.v1.ExchangeAuthMachineToMachineTokenRequest\x1a-.v1.ExchangeAuthMachineToMachineTokenResponse\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/v1/auth/m2m/exchangeB/\n" +
	"\x18io.stackrox.proto.api.v1Z\v./api/v1;v1\x92\x03\x05\xd2>\x02\x10\x02X\x03b\beditionsp\xe8\a"

var file_api_v1_auth_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1_auth_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_v1_auth_service_proto_goTypes = []any{
	(AuthMachineToMachineConfig_Type)(0),              // 0: v1.AuthMachineToMachineConfig.Type
	(*UserAttribute)(nil),                             // 1: v1.UserAttribute
	(*AuthStatus)(nil),                                // 2: v1.AuthStatus
	(*AuthMachineToMachineConfig)(nil),                // 3: v1.AuthMachineToMachineConfig
	(*ListAuthMachineToMachineConfigResponse)(nil),    // 4: v1.ListAuthMachineToMachineConfigResponse
	(*GetAuthMachineToMachineConfigResponse)(nil),     // 5: v1.GetAuthMachineToMachineConfigResponse
	(*AddAuthMachineToMachineConfigRequest)(nil),      // 6: v1.AddAuthMachineToMachineConfigRequest
	(*AddAuthMachineToMachineConfigResponse)(nil),     // 7: v1.AddAuthMachineToMachineConfigResponse
	(*UpdateAuthMachineToMachineConfigRequest)(nil),   // 8: v1.UpdateAuthMachineToMachineConfigRequest
	(*ExchangeAuthMachineToMachineTokenRequest)(nil),  // 9: v1.ExchangeAuthMachineToMachineTokenRequest
	(*ExchangeAuthMachineToMachineTokenResponse)(nil), // 10: v1.ExchangeAuthMachineToMachineTokenResponse
	(*AuthMachineToMachineConfig_Mapping)(nil),        // 11: v1.AuthMachineToMachineConfig.Mapping
	(*storage.ServiceIdentity)(nil),                   // 12: storage.ServiceIdentity
	(*timestamppb.Timestamp)(nil),                     // 13: google.protobuf.Timestamp
	(*storage.AuthProvider)(nil),                      // 14: storage.AuthProvider
	(*storage.UserInfo)(nil),                          // 15: storage.UserInfo
	(*Traits)(nil),                                    // 16: v1.Traits
	(*Empty)(nil),                                     // 17: v1.Empty
	(*ResourceByID)(nil),                              // 18: v1.ResourceByID
}
var file_api_v1_auth_service_proto_depIdxs = []int32{
	12, // 0: v1.AuthStatus.service_id:type_name -> storage.ServiceIdentity
	13, // 1: v1.AuthStatus.expires:type_name -> google.protobuf.Timestamp
	14, // 2: v1.AuthStatus.auth_provider:type_name -> storage.AuthProvider
	15, // 3: v1.AuthStatus.user_info:type_name -> storage.UserInfo
	1,  // 4: v1.AuthStatus.user_attributes:type_name -> v1.UserAttribute
	0,  // 5: v1.AuthMachineToMachineConfig.type:type_name -> v1.AuthMachineToMachineConfig.Type
	11, // 6: v1.AuthMachineToMachineConfig.mappings:type_name -> v1.AuthMachineToMachineConfig.Mapping
	16, // 7: v1.AuthMachineToMachineConfig.traits:type_name -> v1.Traits
	3,  // 8: v1.ListAuthMachineToMachineConfigResponse.configs:type_name -> v1.AuthMachineToMachineConfig
	3,  // 9: v1.GetAuthMachineToMachineConfigResponse.config:type_name -> v1.AuthMachineToMachineConfig
	3,  // 10: v1.AddAuthMachineToMachineConfigRequest.config:type_name -> v1.AuthMachineToMachineConfig
	3,  // 11: v1.AddAuthMachineToMachineConfigResponse.config:type_name -> v1.AuthMachineToMachineConfig
	3,  // 12: v1.UpdateAuthMachineToMachineConfigRequest.config:type_name -> v1.AuthMachineToMachineConfig
	17, // 13: v1.AuthService.GetAuthStatus:input_type -> v1.Empty
	17, // 14: v1.AuthService.ListAuthMachineToMachineConfigs:input_type -> v1.Empty
	18, // 15: v1.AuthService.GetAuthMachineToMachineConfig:input_type -> v1.ResourceByID
	6,  // 16: v1.AuthService.AddAuthMachineToMachineConfig:input_type -> v1.AddAuthMachineToMachineConfigRequest
	8,  // 17: v1.AuthService.UpdateAuthMachineToMachineConfig:input_type -> v1.UpdateAuthMachineToMachineConfigRequest
	18, // 18: v1.AuthService.DeleteAuthMachineToMachineConfig:input_type -> v1.ResourceByID
	9,  // 19: v1.AuthService.ExchangeAuthMachineToMachineToken:input_type -> v1.ExchangeAuthMachineToMachineTokenRequest
	2,  // 20: v1.AuthService.GetAuthStatus:output_type -> v1.AuthStatus
	4,  // 21: v1.AuthService.ListAuthMachineToMachineConfigs:output_type -> v1.ListAuthMachineToMachineConfigResponse
	5,  // 22: v1.AuthService.GetAuthMachineToMachineConfig:output_type -> v1.GetAuthMachineToMachineConfigResponse
	7,  // 23: v1.AuthService.AddAuthMachineToMachineConfig:output_type -> v1.AddAuthMachineToMachineConfigResponse
	17, // 24: v1.AuthService.UpdateAuthMachineToMachineConfig:output_type -> v1.Empty
	17, // 25: v1.AuthService.DeleteAuthMachineToMachineConfig:output_type -> v1.Empty
	10, // 26: v1.AuthService.ExchangeAuthMachineToMachineToken:output_type -> v1.ExchangeAuthMachineToMachineTokenResponse
	20, // [20:27] is the sub-list for method output_type
	13, // [13:20] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_api_v1_auth_service_proto_init() }
func file_api_v1_auth_service_proto_init() {
	if File_api_v1_auth_service_proto != nil {
		return
	}
	file_api_v1_common_proto_init()
	file_api_v1_empty_proto_init()
	file_api_v1_traits_proto_init()
	file_api_v1_auth_service_proto_msgTypes[1].OneofWrappers = []any{
		(*AuthStatus_UserId)(nil),
		(*AuthStatus_ServiceId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_auth_service_proto_rawDesc), len(file_api_v1_auth_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_auth_service_proto_goTypes,
		DependencyIndexes: file_api_v1_auth_service_proto_depIdxs,
		EnumInfos:         file_api_v1_auth_service_proto_enumTypes,
		MessageInfos:      file_api_v1_auth_service_proto_msgTypes,
	}.Build()
	File_api_v1_auth_service_proto = out.File
	file_api_v1_auth_service_proto_goTypes = nil
	file_api_v1_auth_service_proto_depIdxs = nil
}
