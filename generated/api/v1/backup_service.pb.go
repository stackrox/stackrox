// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/v1/backup_service.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	storage "github.com/stackrox/rox/generated/storage"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetExternalBackupsResponse struct {
	ExternalBackups      []*storage.ExternalBackup `protobuf:"bytes,1,rep,name=external_backups,json=externalBackups,proto3" json:"external_backups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetExternalBackupsResponse) Reset()         { *m = GetExternalBackupsResponse{} }
func (m *GetExternalBackupsResponse) String() string { return proto.CompactTextString(m) }
func (*GetExternalBackupsResponse) ProtoMessage()    {}
func (*GetExternalBackupsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_87b5f012147a9d12, []int{0}
}
func (m *GetExternalBackupsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetExternalBackupsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetExternalBackupsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetExternalBackupsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExternalBackupsResponse.Merge(m, src)
}
func (m *GetExternalBackupsResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetExternalBackupsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExternalBackupsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetExternalBackupsResponse proto.InternalMessageInfo

func (m *GetExternalBackupsResponse) GetExternalBackups() []*storage.ExternalBackup {
	if m != nil {
		return m.ExternalBackups
	}
	return nil
}

func (m *GetExternalBackupsResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *GetExternalBackupsResponse) Clone() *GetExternalBackupsResponse {
	if m == nil {
		return nil
	}
	cloned := new(GetExternalBackupsResponse)
	*cloned = *m

	if m.ExternalBackups != nil {
		cloned.ExternalBackups = make([]*storage.ExternalBackup, len(m.ExternalBackups))
		for idx, v := range m.ExternalBackups {
			cloned.ExternalBackups[idx] = v.Clone()
		}
	}
	return cloned
}

type UpdateExternalBackupRequest struct {
	ExternalBackup *storage.ExternalBackup `protobuf:"bytes,1,opt,name=external_backup,json=externalBackup,proto3" json:"external_backup,omitempty"`
	// When false, use the stored credentials of an existing external backup configuration given its ID.
	UpdatePassword       bool     `protobuf:"varint,2,opt,name=update_password,json=updatePassword,proto3" json:"update_password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateExternalBackupRequest) Reset()         { *m = UpdateExternalBackupRequest{} }
func (m *UpdateExternalBackupRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateExternalBackupRequest) ProtoMessage()    {}
func (*UpdateExternalBackupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_87b5f012147a9d12, []int{1}
}
func (m *UpdateExternalBackupRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateExternalBackupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateExternalBackupRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateExternalBackupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateExternalBackupRequest.Merge(m, src)
}
func (m *UpdateExternalBackupRequest) XXX_Size() int {
	return m.Size()
}
func (m *UpdateExternalBackupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateExternalBackupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateExternalBackupRequest proto.InternalMessageInfo

func (m *UpdateExternalBackupRequest) GetExternalBackup() *storage.ExternalBackup {
	if m != nil {
		return m.ExternalBackup
	}
	return nil
}

func (m *UpdateExternalBackupRequest) GetUpdatePassword() bool {
	if m != nil {
		return m.UpdatePassword
	}
	return false
}

func (m *UpdateExternalBackupRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *UpdateExternalBackupRequest) Clone() *UpdateExternalBackupRequest {
	if m == nil {
		return nil
	}
	cloned := new(UpdateExternalBackupRequest)
	*cloned = *m

	cloned.ExternalBackup = m.ExternalBackup.Clone()
	return cloned
}

func init() {
	proto.RegisterType((*GetExternalBackupsResponse)(nil), "v1.GetExternalBackupsResponse")
	proto.RegisterType((*UpdateExternalBackupRequest)(nil), "v1.UpdateExternalBackupRequest")
}

func init() { proto.RegisterFile("api/v1/backup_service.proto", fileDescriptor_87b5f012147a9d12) }

var fileDescriptor_87b5f012147a9d12 = []byte{
	// 522 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0x4d, 0x6b, 0xd4, 0x40,
	0x18, 0xc7, 0x9d, 0x08, 0xbe, 0x8c, 0xd0, 0x97, 0x69, 0x17, 0x63, 0xd6, 0xc6, 0x10, 0x11, 0x97,
	0x15, 0x13, 0xb2, 0xbd, 0xf5, 0x24, 0x4b, 0x8b, 0x78, 0x5b, 0xd6, 0x56, 0x44, 0x94, 0xed, 0x34,
	0x79, 0x0c, 0xb1, 0xbb, 0x99, 0x98, 0x99, 0xc4, 0x16, 0xf1, 0x22, 0x08, 0xde, 0xbd, 0xf8, 0x4d,
	0xfc, 0x0a, 0x1e, 0x05, 0xbf, 0x80, 0xac, 0x7e, 0x10, 0xc9, 0x64, 0xc4, 0x6e, 0x9a, 0x29, 0xbe,
	0xdc, 0xc2, 0xf3, 0x9f, 0xf9, 0xff, 0xe6, 0x79, 0xfe, 0x99, 0xc1, 0x5d, 0x9a, 0x25, 0x7e, 0x19,
	0xf8, 0x07, 0x34, 0x3c, 0x2c, 0xb2, 0x09, 0x87, 0xbc, 0x4c, 0x42, 0xf0, 0xb2, 0x9c, 0x09, 0x46,
	0x8c, 0x32, 0xb0, 0xd6, 0xd4, 0x82, 0x90, 0xcd, 0x66, 0x2c, 0xad, 0x05, 0x8b, 0xa8, 0x22, 0xcc,
	0x32, 0x71, 0xac, 0x6a, 0xd7, 0x63, 0xc6, 0xe2, 0x29, 0xf8, 0x95, 0x44, 0xd3, 0x94, 0x09, 0x2a,
	0x12, 0x96, 0x72, 0xa5, 0x6e, 0x70, 0xc1, 0x72, 0x1a, 0x83, 0x0f, 0x47, 0x02, 0xf2, 0x94, 0x4e,
	0x27, 0x35, 0xb1, 0x96, 0xdd, 0x7d, 0x6c, 0xdd, 0x07, 0xb1, 0xa3, 0xb4, 0xa1, 0x94, 0xf8, 0x18,
	0x78, 0xc6, 0x52, 0x0e, 0x64, 0x88, 0x57, 0x1a, 0xdb, 0xb8, 0x89, 0x9c, 0xf3, 0xbd, 0x2b, 0x83,
	0xab, 0x9e, 0xf2, 0xf5, 0x16, 0xf7, 0x8e, 0x97, 0x61, 0xd1, 0xcb, 0x7d, 0x8f, 0x70, 0x77, 0x2f,
	0x8b, 0xa8, 0x80, 0xc6, 0x4a, 0x78, 0x59, 0x00, 0x17, 0xe4, 0x1e, 0x5e, 0x6e, 0x30, 0x4c, 0xe4,
	0xa0, 0xb3, 0x10, 0x4b, 0x8b, 0x08, 0x72, 0x1b, 0x2f, 0x17, 0x12, 0x30, 0xc9, 0x28, 0xe7, 0xaf,
	0x58, 0x1e, 0x99, 0x86, 0x83, 0x7a, 0x97, 0xc6, 0x4b, 0x75, 0x79, 0xa4, 0xaa, 0x83, 0x4f, 0x17,
	0x71, 0x67, 0xd1, 0xeb, 0x61, 0x3d, 0x76, 0xb2, 0x8f, 0x57, 0x4f, 0x8d, 0x81, 0xac, 0x78, 0x65,
	0xe0, 0x8d, 0x81, 0xb3, 0x22, 0x0f, 0x61, 0x78, 0xfc, 0x60, 0xdb, 0xd2, 0x1d, 0xc9, 0x75, 0xde,
	0x7e, 0xfd, 0xf1, 0xc1, 0xb0, 0x88, 0x29, 0xc3, 0x51, 0x9a, 0x9a, 0x98, 0xff, 0x3a, 0x89, 0xde,
	0x90, 0xa7, 0x98, 0x9c, 0x1e, 0x34, 0xb9, 0x5c, 0x21, 0x76, 0xaa, 0x30, 0x2d, 0xbb, 0xfa, 0xd4,
	0x67, 0xe1, 0x76, 0x25, 0xa2, 0x43, 0xd6, 0x5a, 0x10, 0xe4, 0x39, 0x26, 0x23, 0xc6, 0x9b, 0x0d,
	0xe8, 0x8e, 0xab, 0xef, 0xc3, 0x96, 0x10, 0xd3, 0x6d, 0x83, 0x6c, 0xa1, 0x3e, 0x79, 0x81, 0x57,
	0x47, 0xc5, 0xff, 0x63, 0x6e, 0x4a, 0xcc, 0x86, 0xa5, 0x1d, 0x57, 0xc5, 0x7a, 0x86, 0xc9, 0x2e,
	0xfc, 0x79, 0x4f, 0xbf, 0x47, 0xf9, 0xcb, 0xde, 0x6d, 0xb5, 0x17, 0xc0, 0x45, 0x65, 0xbf, 0x87,
	0xd7, 0xb7, 0x61, 0x0a, 0xcd, 0xdf, 0xb2, 0x25, 0xf5, 0x13, 0xce, 0x2a, 0xe7, 0xbe, 0x3e, 0xe7,
	0x47, 0xb8, 0xb3, 0x9b, 0x27, 0x71, 0x0c, 0xf9, 0x3f, 0xf8, 0xba, 0x7a, 0xdf, 0x77, 0x08, 0xaf,
	0xb7, 0x5d, 0x23, 0x72, 0xa3, 0x72, 0x39, 0xe3, 0x82, 0xe9, 0x53, 0xd8, 0x94, 0xd0, 0xbb, 0x83,
	0x5e, 0x2b, 0xb4, 0xf9, 0x5e, 0xa8, 0x54, 0x04, 0xbe, 0x56, 0xa5, 0x52, 0x03, 0xa3, 0xbf, 0x3d,
	0xcb, 0x89, 0x96, 0xef, 0x48, 0xfa, 0x2d, 0xd7, 0xd1, 0x85, 0xe4, 0xd7, 0xb7, 0x37, 0xda, 0x42,
	0xfd, 0xa1, 0xf7, 0x79, 0x6e, 0xa3, 0x2f, 0x73, 0x1b, 0x7d, 0x9b, 0xdb, 0xe8, 0xe3, 0x77, 0xfb,
	0x1c, 0x36, 0x13, 0xe6, 0x71, 0x41, 0xc3, 0xc3, 0x9c, 0x1d, 0xd5, 0x6f, 0x99, 0x47, 0xb3, 0xc4,
	0x2b, 0x83, 0x27, 0x46, 0x19, 0x3c, 0x36, 0x0e, 0x2e, 0xc8, 0xda, 0xe6, 0xcf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x52, 0x3e, 0x26, 0xea, 0x68, 0x05, 0x00, 0x00,
}

func (m *GetExternalBackupsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetExternalBackupsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetExternalBackupsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ExternalBackups) > 0 {
		for iNdEx := len(m.ExternalBackups) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ExternalBackups[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBackupService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *UpdateExternalBackupRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateExternalBackupRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateExternalBackupRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UpdatePassword {
		i--
		if m.UpdatePassword {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.ExternalBackup != nil {
		{
			size, err := m.ExternalBackup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBackupService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintBackupService(dAtA []byte, offset int, v uint64) int {
	offset -= sovBackupService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetExternalBackupsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ExternalBackups) > 0 {
		for _, e := range m.ExternalBackups {
			l = e.Size()
			n += 1 + l + sovBackupService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateExternalBackupRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ExternalBackup != nil {
		l = m.ExternalBackup.Size()
		n += 1 + l + sovBackupService(uint64(l))
	}
	if m.UpdatePassword {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovBackupService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBackupService(x uint64) (n int) {
	return sovBackupService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetExternalBackupsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBackupService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetExternalBackupsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetExternalBackupsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExternalBackups", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBackupService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBackupService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBackupService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExternalBackups = append(m.ExternalBackups, &storage.ExternalBackup{})
			if err := m.ExternalBackups[len(m.ExternalBackups)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBackupService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBackupService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateExternalBackupRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBackupService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateExternalBackupRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateExternalBackupRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExternalBackup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBackupService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBackupService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBackupService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExternalBackup == nil {
				m.ExternalBackup = &storage.ExternalBackup{}
			}
			if err := m.ExternalBackup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatePassword", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBackupService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UpdatePassword = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipBackupService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBackupService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBackupService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBackupService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBackupService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBackupService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBackupService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBackupService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBackupService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBackupService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBackupService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBackupService = fmt.Errorf("proto: unexpected end of group")
)
