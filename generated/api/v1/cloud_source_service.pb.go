// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: api/v1/cloud_source_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CloudSource_Type int32

const (
	CloudSource_TYPE_UNSPECIFIED   CloudSource_Type = 0
	CloudSource_TYPE_PALADIN_CLOUD CloudSource_Type = 1
	CloudSource_TYPE_OCM           CloudSource_Type = 2
)

// Enum value maps for CloudSource_Type.
var (
	CloudSource_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_PALADIN_CLOUD",
		2: "TYPE_OCM",
	}
	CloudSource_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED":   0,
		"TYPE_PALADIN_CLOUD": 1,
		"TYPE_OCM":           2,
	}
)

func (x CloudSource_Type) Enum() *CloudSource_Type {
	p := new(CloudSource_Type)
	*p = x
	return p
}

func (x CloudSource_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloudSource_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_cloud_source_service_proto_enumTypes[0].Descriptor()
}

func (CloudSource_Type) Type() protoreflect.EnumType {
	return &file_api_v1_cloud_source_service_proto_enumTypes[0]
}

func (x CloudSource_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloudSource_Type.Descriptor instead.
func (CloudSource_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{0, 0}
}

// CloudSource is an integration which provides a source for discovered
// clusters.
type CloudSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                CloudSource_Type         `protobuf:"varint,3,opt,name=type,proto3,enum=v1.CloudSource_Type" json:"type,omitempty"`
	Credentials         *CloudSource_Credentials `protobuf:"bytes,4,opt,name=credentials,proto3" json:"credentials,omitempty"`
	SkipTestIntegration bool                     `protobuf:"varint,5,opt,name=skip_test_integration,json=skipTestIntegration,proto3" json:"skip_test_integration,omitempty"`
	// Types that are assignable to Config:
	//
	//	*CloudSource_PaladinCloud
	//	*CloudSource_Ocm
	Config isCloudSource_Config `protobuf_oneof:"Config"`
}

func (x *CloudSource) Reset() {
	*x = CloudSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cloud_source_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudSource) ProtoMessage() {}

func (x *CloudSource) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cloud_source_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudSource.ProtoReflect.Descriptor instead.
func (*CloudSource) Descriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{0}
}

func (x *CloudSource) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CloudSource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloudSource) GetType() CloudSource_Type {
	if x != nil {
		return x.Type
	}
	return CloudSource_TYPE_UNSPECIFIED
}

func (x *CloudSource) GetCredentials() *CloudSource_Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *CloudSource) GetSkipTestIntegration() bool {
	if x != nil {
		return x.SkipTestIntegration
	}
	return false
}

func (m *CloudSource) GetConfig() isCloudSource_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *CloudSource) GetPaladinCloud() *PaladinCloudConfig {
	if x, ok := x.GetConfig().(*CloudSource_PaladinCloud); ok {
		return x.PaladinCloud
	}
	return nil
}

func (x *CloudSource) GetOcm() *OCMConfig {
	if x, ok := x.GetConfig().(*CloudSource_Ocm); ok {
		return x.Ocm
	}
	return nil
}

type isCloudSource_Config interface {
	isCloudSource_Config()
}

type CloudSource_PaladinCloud struct {
	PaladinCloud *PaladinCloudConfig `protobuf:"bytes,6,opt,name=paladin_cloud,json=paladinCloud,proto3,oneof"`
}

type CloudSource_Ocm struct {
	Ocm *OCMConfig `protobuf:"bytes,7,opt,name=ocm,proto3,oneof"`
}

func (*CloudSource_PaladinCloud) isCloudSource_Config() {}

func (*CloudSource_Ocm) isCloudSource_Config() {}

// PaladinCloudConfig provides information required to fetch discovered
// clusters from Paladin Cloud.
type PaladinCloudConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Endpoint to the Paladin Cloud API server. Https is assumed if no
	// protocol is specified. Example: https://apiqa.paladincloud.io
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *PaladinCloudConfig) Reset() {
	*x = PaladinCloudConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cloud_source_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaladinCloudConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaladinCloudConfig) ProtoMessage() {}

func (x *PaladinCloudConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cloud_source_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaladinCloudConfig.ProtoReflect.Descriptor instead.
func (*PaladinCloudConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{1}
}

func (x *PaladinCloudConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

// OCMConfig provides information required to fetch discovered clusters from
// the OpenShift cluster manager.
type OCMConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Endpoint to the OpenShift API server. Https is assumed if no
	// protocol is specified. Example: https://api.openshift.com
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *OCMConfig) Reset() {
	*x = OCMConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cloud_source_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OCMConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCMConfig) ProtoMessage() {}

func (x *OCMConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cloud_source_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCMConfig.ProtoReflect.Descriptor instead.
func (*OCMConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{2}
}

func (x *OCMConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type CloudSourcesFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Matches cloud sources based on their name.
	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	// Matches cloud sources based on their type.
	Types []CloudSource_Type `protobuf:"varint,2,rep,packed,name=types,proto3,enum=v1.CloudSource_Type" json:"types,omitempty"`
}

func (x *CloudSourcesFilter) Reset() {
	*x = CloudSourcesFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cloud_source_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudSourcesFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudSourcesFilter) ProtoMessage() {}

func (x *CloudSourcesFilter) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cloud_source_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudSourcesFilter.ProtoReflect.Descriptor instead.
func (*CloudSourcesFilter) Descriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{3}
}

func (x *CloudSourcesFilter) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *CloudSourcesFilter) GetTypes() []CloudSource_Type {
	if x != nil {
		return x.Types
	}
	return nil
}

type CountCloudSourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filters cloud sources based on the requested fields.
	Filter *CloudSourcesFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *CountCloudSourcesRequest) Reset() {
	*x = CountCloudSourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cloud_source_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountCloudSourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountCloudSourcesRequest) ProtoMessage() {}

func (x *CountCloudSourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cloud_source_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountCloudSourcesRequest.ProtoReflect.Descriptor instead.
func (*CountCloudSourcesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{4}
}

func (x *CountCloudSourcesRequest) GetFilter() *CloudSourcesFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type CountCloudSourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountCloudSourcesResponse) Reset() {
	*x = CountCloudSourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cloud_source_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountCloudSourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountCloudSourcesResponse) ProtoMessage() {}

func (x *CountCloudSourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cloud_source_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountCloudSourcesResponse.ProtoReflect.Descriptor instead.
func (*CountCloudSourcesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{5}
}

func (x *CountCloudSourcesResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetCloudSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCloudSourceRequest) Reset() {
	*x = GetCloudSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cloud_source_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCloudSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCloudSourceRequest) ProtoMessage() {}

func (x *GetCloudSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cloud_source_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCloudSourceRequest.ProtoReflect.Descriptor instead.
func (*GetCloudSourceRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetCloudSourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetCloudSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudSource *CloudSource `protobuf:"bytes,1,opt,name=cloud_source,json=cloudSource,proto3" json:"cloud_source,omitempty"`
}

func (x *GetCloudSourceResponse) Reset() {
	*x = GetCloudSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cloud_source_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCloudSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCloudSourceResponse) ProtoMessage() {}

func (x *GetCloudSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cloud_source_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCloudSourceResponse.ProtoReflect.Descriptor instead.
func (*GetCloudSourceResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetCloudSourceResponse) GetCloudSource() *CloudSource {
	if x != nil {
		return x.CloudSource
	}
	return nil
}

type ListCloudSourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Divides the response into chunks.
	Pagination *Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// Filters cloud sources based on the requested fields.
	Filter *CloudSourcesFilter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListCloudSourcesRequest) Reset() {
	*x = ListCloudSourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cloud_source_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCloudSourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudSourcesRequest) ProtoMessage() {}

func (x *ListCloudSourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cloud_source_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudSourcesRequest.ProtoReflect.Descriptor instead.
func (*ListCloudSourcesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListCloudSourcesRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListCloudSourcesRequest) GetFilter() *CloudSourcesFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListCloudSourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudSources []*CloudSource `protobuf:"bytes,1,rep,name=cloud_sources,json=cloudSources,proto3" json:"cloud_sources,omitempty"`
}

func (x *ListCloudSourcesResponse) Reset() {
	*x = ListCloudSourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cloud_source_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCloudSourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudSourcesResponse) ProtoMessage() {}

func (x *ListCloudSourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cloud_source_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudSourcesResponse.ProtoReflect.Descriptor instead.
func (*ListCloudSourcesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListCloudSourcesResponse) GetCloudSources() []*CloudSource {
	if x != nil {
		return x.CloudSources
	}
	return nil
}

type CreateCloudSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudSource *CloudSource `protobuf:"bytes,1,opt,name=cloud_source,json=cloudSource,proto3" json:"cloud_source,omitempty"`
}

func (x *CreateCloudSourceRequest) Reset() {
	*x = CreateCloudSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cloud_source_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCloudSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCloudSourceRequest) ProtoMessage() {}

func (x *CreateCloudSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cloud_source_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCloudSourceRequest.ProtoReflect.Descriptor instead.
func (*CreateCloudSourceRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{10}
}

func (x *CreateCloudSourceRequest) GetCloudSource() *CloudSource {
	if x != nil {
		return x.CloudSource
	}
	return nil
}

type CreateCloudSourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudSource *CloudSource `protobuf:"bytes,1,opt,name=cloud_source,json=cloudSource,proto3" json:"cloud_source,omitempty"`
}

func (x *CreateCloudSourceResponse) Reset() {
	*x = CreateCloudSourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cloud_source_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCloudSourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCloudSourceResponse) ProtoMessage() {}

func (x *CreateCloudSourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cloud_source_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCloudSourceResponse.ProtoReflect.Descriptor instead.
func (*CreateCloudSourceResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{11}
}

func (x *CreateCloudSourceResponse) GetCloudSource() *CloudSource {
	if x != nil {
		return x.CloudSource
	}
	return nil
}

type UpdateCloudSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudSource *CloudSource `protobuf:"bytes,1,opt,name=cloud_source,json=cloudSource,proto3" json:"cloud_source,omitempty"`
	// If true, cloud_source must include valid credentials.
	// If false, the resource must already exist and
	// credentials in cloud_source are ignored.
	UpdateCredentials bool `protobuf:"varint,2,opt,name=update_credentials,json=updateCredentials,proto3" json:"update_credentials,omitempty"`
}

func (x *UpdateCloudSourceRequest) Reset() {
	*x = UpdateCloudSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cloud_source_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCloudSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCloudSourceRequest) ProtoMessage() {}

func (x *UpdateCloudSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cloud_source_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCloudSourceRequest.ProtoReflect.Descriptor instead.
func (*UpdateCloudSourceRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateCloudSourceRequest) GetCloudSource() *CloudSource {
	if x != nil {
		return x.CloudSource
	}
	return nil
}

func (x *UpdateCloudSourceRequest) GetUpdateCredentials() bool {
	if x != nil {
		return x.UpdateCredentials
	}
	return false
}

type DeleteCloudSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCloudSourceRequest) Reset() {
	*x = DeleteCloudSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cloud_source_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCloudSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCloudSourceRequest) ProtoMessage() {}

func (x *DeleteCloudSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cloud_source_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCloudSourceRequest.ProtoReflect.Descriptor instead.
func (*DeleteCloudSourceRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteCloudSourceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TestCloudSourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudSource *CloudSource `protobuf:"bytes,1,opt,name=cloud_source,json=cloudSource,proto3" json:"cloud_source,omitempty"`
	// If true, cloud_source must include valid credentials.
	// If false, the resource must already exist and
	// credentials in cloud_source are ignored.
	UpdateCredentials bool `protobuf:"varint,2,opt,name=update_credentials,json=updateCredentials,proto3" json:"update_credentials,omitempty"`
}

func (x *TestCloudSourceRequest) Reset() {
	*x = TestCloudSourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cloud_source_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestCloudSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCloudSourceRequest) ProtoMessage() {}

func (x *TestCloudSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cloud_source_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCloudSourceRequest.ProtoReflect.Descriptor instead.
func (*TestCloudSourceRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{14}
}

func (x *TestCloudSourceRequest) GetCloudSource() *CloudSource {
	if x != nil {
		return x.CloudSource
	}
	return nil
}

func (x *TestCloudSourceRequest) GetUpdateCredentials() bool {
	if x != nil {
		return x.UpdateCredentials
	}
	return false
}

type CloudSource_Credentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Used for single-valued authentication via long-lived tokens.
	Secret string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty" scrub:"always"` // @gotags: scrub:"always"
	// Used for client authentication in combination with client_secret.
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty" scrub:"always"` // @gotags: scrub:"always"
	// Used for client authentication in combination with client_id.
	ClientSecret string `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty" scrub:"always"` // @gotags: scrub:"always"
}

func (x *CloudSource_Credentials) Reset() {
	*x = CloudSource_Credentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_cloud_source_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudSource_Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudSource_Credentials) ProtoMessage() {}

func (x *CloudSource_Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_cloud_source_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudSource_Credentials.ProtoReflect.Descriptor instead.
func (*CloudSource_Credentials) Descriptor() ([]byte, []int) {
	return file_api_v1_cloud_source_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CloudSource_Credentials) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *CloudSource_Credentials) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CloudSource_Credentials) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

var File_api_v1_cloud_source_service_proto protoreflect.FileDescriptor

var file_api_v1_cloud_source_service_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe7, 0x03, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12,
	0x32, 0x0a, 0x15, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x73, 0x6b, 0x69, 0x70, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0d, 0x70, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x5f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x12, 0x21, 0x0a, 0x03, 0x6f, 0x63, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x43, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00,
	0x52, 0x03, 0x6f, 0x63, 0x6d, 0x1a, 0x67, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x42,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x4c, 0x41, 0x44, 0x49, 0x4e, 0x5f, 0x43, 0x4c, 0x4f,
	0x55, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x43, 0x4d,
	0x10, 0x02, 0x42, 0x08, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x30, 0x0a, 0x12,
	0x50, 0x61, 0x6c, 0x61, 0x64, 0x69, 0x6e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x27,
	0x0a, 0x09, 0x4f, 0x43, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x56, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22,
	0x4a, 0x0a, 0x18, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x31, 0x0a, 0x19, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x27,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x79, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2e, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0x50, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0d,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x22, 0x4e, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32,
	0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x4f, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0x7d, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x32, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x22, 0x2a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7b,
	0x0a, 0x16, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x12,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x32, 0xf4, 0x05, 0x0a, 0x13,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x71, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x67, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x68, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x6e, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x6c, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a,
	0x01, 0x2a, 0x1a, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2e, 0x69, 0x64, 0x7d, 0x12, 0x5c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x5b, 0x0a, 0x0f, 0x54, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65,
	0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x74, 0x65,
	0x73, 0x74, 0x42, 0x27, 0x0a, 0x18, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x72, 0x6f,
	0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x5a, 0x0b,
	0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x58, 0x02, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_cloud_source_service_proto_rawDescOnce sync.Once
	file_api_v1_cloud_source_service_proto_rawDescData = file_api_v1_cloud_source_service_proto_rawDesc
)

func file_api_v1_cloud_source_service_proto_rawDescGZIP() []byte {
	file_api_v1_cloud_source_service_proto_rawDescOnce.Do(func() {
		file_api_v1_cloud_source_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_cloud_source_service_proto_rawDescData)
	})
	return file_api_v1_cloud_source_service_proto_rawDescData
}

var file_api_v1_cloud_source_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1_cloud_source_service_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_api_v1_cloud_source_service_proto_goTypes = []any{
	(CloudSource_Type)(0),             // 0: v1.CloudSource.Type
	(*CloudSource)(nil),               // 1: v1.CloudSource
	(*PaladinCloudConfig)(nil),        // 2: v1.PaladinCloudConfig
	(*OCMConfig)(nil),                 // 3: v1.OCMConfig
	(*CloudSourcesFilter)(nil),        // 4: v1.CloudSourcesFilter
	(*CountCloudSourcesRequest)(nil),  // 5: v1.CountCloudSourcesRequest
	(*CountCloudSourcesResponse)(nil), // 6: v1.CountCloudSourcesResponse
	(*GetCloudSourceRequest)(nil),     // 7: v1.GetCloudSourceRequest
	(*GetCloudSourceResponse)(nil),    // 8: v1.GetCloudSourceResponse
	(*ListCloudSourcesRequest)(nil),   // 9: v1.ListCloudSourcesRequest
	(*ListCloudSourcesResponse)(nil),  // 10: v1.ListCloudSourcesResponse
	(*CreateCloudSourceRequest)(nil),  // 11: v1.CreateCloudSourceRequest
	(*CreateCloudSourceResponse)(nil), // 12: v1.CreateCloudSourceResponse
	(*UpdateCloudSourceRequest)(nil),  // 13: v1.UpdateCloudSourceRequest
	(*DeleteCloudSourceRequest)(nil),  // 14: v1.DeleteCloudSourceRequest
	(*TestCloudSourceRequest)(nil),    // 15: v1.TestCloudSourceRequest
	(*CloudSource_Credentials)(nil),   // 16: v1.CloudSource.Credentials
	(*Pagination)(nil),                // 17: v1.Pagination
	(*Empty)(nil),                     // 18: v1.Empty
}
var file_api_v1_cloud_source_service_proto_depIdxs = []int32{
	0,  // 0: v1.CloudSource.type:type_name -> v1.CloudSource.Type
	16, // 1: v1.CloudSource.credentials:type_name -> v1.CloudSource.Credentials
	2,  // 2: v1.CloudSource.paladin_cloud:type_name -> v1.PaladinCloudConfig
	3,  // 3: v1.CloudSource.ocm:type_name -> v1.OCMConfig
	0,  // 4: v1.CloudSourcesFilter.types:type_name -> v1.CloudSource.Type
	4,  // 5: v1.CountCloudSourcesRequest.filter:type_name -> v1.CloudSourcesFilter
	1,  // 6: v1.GetCloudSourceResponse.cloud_source:type_name -> v1.CloudSource
	17, // 7: v1.ListCloudSourcesRequest.pagination:type_name -> v1.Pagination
	4,  // 8: v1.ListCloudSourcesRequest.filter:type_name -> v1.CloudSourcesFilter
	1,  // 9: v1.ListCloudSourcesResponse.cloud_sources:type_name -> v1.CloudSource
	1,  // 10: v1.CreateCloudSourceRequest.cloud_source:type_name -> v1.CloudSource
	1,  // 11: v1.CreateCloudSourceResponse.cloud_source:type_name -> v1.CloudSource
	1,  // 12: v1.UpdateCloudSourceRequest.cloud_source:type_name -> v1.CloudSource
	1,  // 13: v1.TestCloudSourceRequest.cloud_source:type_name -> v1.CloudSource
	5,  // 14: v1.CloudSourcesService.CountCloudSources:input_type -> v1.CountCloudSourcesRequest
	7,  // 15: v1.CloudSourcesService.GetCloudSource:input_type -> v1.GetCloudSourceRequest
	9,  // 16: v1.CloudSourcesService.ListCloudSources:input_type -> v1.ListCloudSourcesRequest
	11, // 17: v1.CloudSourcesService.CreateCloudSource:input_type -> v1.CreateCloudSourceRequest
	13, // 18: v1.CloudSourcesService.UpdateCloudSource:input_type -> v1.UpdateCloudSourceRequest
	14, // 19: v1.CloudSourcesService.DeleteCloudSource:input_type -> v1.DeleteCloudSourceRequest
	15, // 20: v1.CloudSourcesService.TestCloudSource:input_type -> v1.TestCloudSourceRequest
	6,  // 21: v1.CloudSourcesService.CountCloudSources:output_type -> v1.CountCloudSourcesResponse
	8,  // 22: v1.CloudSourcesService.GetCloudSource:output_type -> v1.GetCloudSourceResponse
	10, // 23: v1.CloudSourcesService.ListCloudSources:output_type -> v1.ListCloudSourcesResponse
	12, // 24: v1.CloudSourcesService.CreateCloudSource:output_type -> v1.CreateCloudSourceResponse
	18, // 25: v1.CloudSourcesService.UpdateCloudSource:output_type -> v1.Empty
	18, // 26: v1.CloudSourcesService.DeleteCloudSource:output_type -> v1.Empty
	18, // 27: v1.CloudSourcesService.TestCloudSource:output_type -> v1.Empty
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_v1_cloud_source_service_proto_init() }
func file_api_v1_cloud_source_service_proto_init() {
	if File_api_v1_cloud_source_service_proto != nil {
		return
	}
	file_api_v1_empty_proto_init()
	file_api_v1_pagination_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1_cloud_source_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CloudSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cloud_source_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PaladinCloudConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cloud_source_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*OCMConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cloud_source_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CloudSourcesFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cloud_source_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CountCloudSourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cloud_source_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CountCloudSourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cloud_source_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetCloudSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cloud_source_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetCloudSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cloud_source_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListCloudSourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cloud_source_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ListCloudSourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cloud_source_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCloudSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cloud_source_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCloudSourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cloud_source_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateCloudSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cloud_source_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCloudSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cloud_source_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*TestCloudSourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_cloud_source_service_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CloudSource_Credentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_cloud_source_service_proto_msgTypes[0].OneofWrappers = []any{
		(*CloudSource_PaladinCloud)(nil),
		(*CloudSource_Ocm)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_cloud_source_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_cloud_source_service_proto_goTypes,
		DependencyIndexes: file_api_v1_cloud_source_service_proto_depIdxs,
		EnumInfos:         file_api_v1_cloud_source_service_proto_enumTypes,
		MessageInfos:      file_api_v1_cloud_source_service_proto_msgTypes,
	}.Build()
	File_api_v1_cloud_source_service_proto = out.File
	file_api_v1_cloud_source_service_proto_rawDesc = nil
	file_api_v1_cloud_source_service_proto_goTypes = nil
	file_api_v1_cloud_source_service_proto_depIdxs = nil
}
