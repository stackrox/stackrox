// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package v1

import (
	storage "github.com/stackrox/rox/generated/storage"
)

import (
	"iter"
)

// ImmutableListServiceAccountResponse is an immutable interface for ListServiceAccountResponse
type ImmutableListServiceAccountResponse interface {
	GetImmutableSaAndRoles() iter.Seq[ImmutableServiceAccountAndRoles]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ListServiceAccountResponse
}

// GetImmutableSaAndRoles implements ImmutableListServiceAccountResponse
func (m *ListServiceAccountResponse) GetImmutableSaAndRoles() iter.Seq[ImmutableServiceAccountAndRoles] {
	return func(yield func(ImmutableServiceAccountAndRoles) bool) {
		if m == nil || m.SaAndRoles == nil {
			return
		}
		for _, v := range m.SaAndRoles {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that ListServiceAccountResponse implements ImmutableListServiceAccountResponse
var _ ImmutableListServiceAccountResponse = (*ListServiceAccountResponse)(nil)

// ImmutableServiceAccountAndRoles is an immutable interface for ServiceAccountAndRoles
type ImmutableServiceAccountAndRoles interface {
	GetServiceAccount() *storage.ServiceAccount
	GetImmutableClusterRoles() iter.Seq[*storage.K8SRole]
	GetImmutableScopedRoles() iter.Seq[ImmutableScopedRoles]
	GetImmutableDeploymentRelationships() iter.Seq[ImmutableSADeploymentRelationship]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ServiceAccountAndRoles
}

// GetImmutableClusterRoles implements ImmutableServiceAccountAndRoles
func (m *ServiceAccountAndRoles) GetImmutableClusterRoles() iter.Seq[*storage.K8SRole] {
	return func(yield func(*storage.K8SRole) bool) {
		if m == nil || m.ClusterRoles == nil {
			return
		}
		for _, v := range m.ClusterRoles {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableScopedRoles implements ImmutableServiceAccountAndRoles
func (m *ServiceAccountAndRoles) GetImmutableScopedRoles() iter.Seq[ImmutableScopedRoles] {
	return func(yield func(ImmutableScopedRoles) bool) {
		if m == nil || m.ScopedRoles == nil {
			return
		}
		for _, v := range m.ScopedRoles {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableDeploymentRelationships implements ImmutableServiceAccountAndRoles
func (m *ServiceAccountAndRoles) GetImmutableDeploymentRelationships() iter.Seq[ImmutableSADeploymentRelationship] {
	return func(yield func(ImmutableSADeploymentRelationship) bool) {
		if m == nil || m.DeploymentRelationships == nil {
			return
		}
		for _, v := range m.DeploymentRelationships {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that ServiceAccountAndRoles implements ImmutableServiceAccountAndRoles
var _ ImmutableServiceAccountAndRoles = (*ServiceAccountAndRoles)(nil)

// ImmutableGetServiceAccountResponse is an immutable interface for GetServiceAccountResponse
type ImmutableGetServiceAccountResponse interface {
	GetImmutableSaAndRole() ImmutableServiceAccountAndRoles
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *GetServiceAccountResponse
}

// GetImmutableSaAndRole implements ImmutableGetServiceAccountResponse
func (m *GetServiceAccountResponse) GetImmutableSaAndRole() ImmutableServiceAccountAndRoles {
	return m.GetSaAndRole()
}

// Verify that GetServiceAccountResponse implements ImmutableGetServiceAccountResponse
var _ ImmutableGetServiceAccountResponse = (*GetServiceAccountResponse)(nil)

// ImmutableSADeploymentRelationship is an immutable interface for SADeploymentRelationship
type ImmutableSADeploymentRelationship interface {
	// Id of the deployment using the service account
	GetId() string
	// Name of the deployment.
	GetName() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *SADeploymentRelationship
}

// Verify that SADeploymentRelationship implements ImmutableSADeploymentRelationship
var _ ImmutableSADeploymentRelationship = (*SADeploymentRelationship)(nil)
