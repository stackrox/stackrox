// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/v1/user_service.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	storage "github.com/stackrox/rox/generated/storage"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Next Tag: 2
type GetUsersResponse struct {
	Users                []*storage.User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetUsersResponse) Reset()         { *m = GetUsersResponse{} }
func (m *GetUsersResponse) String() string { return proto.CompactTextString(m) }
func (*GetUsersResponse) ProtoMessage()    {}
func (*GetUsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c5a2f35b9340512, []int{0}
}
func (m *GetUsersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetUsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetUsersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetUsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUsersResponse.Merge(m, src)
}
func (m *GetUsersResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetUsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUsersResponse proto.InternalMessageInfo

func (m *GetUsersResponse) GetUsers() []*storage.User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *GetUsersResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *GetUsersResponse) Clone() *GetUsersResponse {
	if m == nil {
		return nil
	}
	cloned := new(GetUsersResponse)
	*cloned = *m

	if m.Users != nil {
		cloned.Users = make([]*storage.User, len(m.Users))
		for idx, v := range m.Users {
			cloned.Users[idx] = v.Clone()
		}
	}
	return cloned
}

// UserAttributeTuple descript the auth:key:value tuple that decides group membership.
// Next Tag: 4
type UserAttributeTuple struct {
	AuthProviderId       string   `protobuf:"bytes,1,opt,name=auth_provider_id,json=authProviderId,proto3" json:"auth_provider_id,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserAttributeTuple) Reset()         { *m = UserAttributeTuple{} }
func (m *UserAttributeTuple) String() string { return proto.CompactTextString(m) }
func (*UserAttributeTuple) ProtoMessage()    {}
func (*UserAttributeTuple) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c5a2f35b9340512, []int{1}
}
func (m *UserAttributeTuple) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserAttributeTuple) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserAttributeTuple.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserAttributeTuple) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAttributeTuple.Merge(m, src)
}
func (m *UserAttributeTuple) XXX_Size() int {
	return m.Size()
}
func (m *UserAttributeTuple) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAttributeTuple.DiscardUnknown(m)
}

var xxx_messageInfo_UserAttributeTuple proto.InternalMessageInfo

func (m *UserAttributeTuple) GetAuthProviderId() string {
	if m != nil {
		return m.AuthProviderId
	}
	return ""
}

func (m *UserAttributeTuple) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *UserAttributeTuple) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *UserAttributeTuple) MessageClone() proto.Message {
	return m.Clone()
}
func (m *UserAttributeTuple) Clone() *UserAttributeTuple {
	if m == nil {
		return nil
	}
	cloned := new(UserAttributeTuple)
	*cloned = *m

	return cloned
}

// Next Tag: 2
type GetUsersAttributesResponse struct {
	UsersAttributes      []*UserAttributeTuple `protobuf:"bytes,1,rep,name=users_attributes,json=usersAttributes,proto3" json:"users_attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetUsersAttributesResponse) Reset()         { *m = GetUsersAttributesResponse{} }
func (m *GetUsersAttributesResponse) String() string { return proto.CompactTextString(m) }
func (*GetUsersAttributesResponse) ProtoMessage()    {}
func (*GetUsersAttributesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c5a2f35b9340512, []int{2}
}
func (m *GetUsersAttributesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetUsersAttributesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetUsersAttributesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetUsersAttributesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUsersAttributesResponse.Merge(m, src)
}
func (m *GetUsersAttributesResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetUsersAttributesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUsersAttributesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUsersAttributesResponse proto.InternalMessageInfo

func (m *GetUsersAttributesResponse) GetUsersAttributes() []*UserAttributeTuple {
	if m != nil {
		return m.UsersAttributes
	}
	return nil
}

func (m *GetUsersAttributesResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *GetUsersAttributesResponse) Clone() *GetUsersAttributesResponse {
	if m == nil {
		return nil
	}
	cloned := new(GetUsersAttributesResponse)
	*cloned = *m

	if m.UsersAttributes != nil {
		cloned.UsersAttributes = make([]*UserAttributeTuple, len(m.UsersAttributes))
		for idx, v := range m.UsersAttributes {
			cloned.UsersAttributes[idx] = v.Clone()
		}
	}
	return cloned
}

func init() {
	proto.RegisterType((*GetUsersResponse)(nil), "v1.GetUsersResponse")
	proto.RegisterType((*UserAttributeTuple)(nil), "v1.UserAttributeTuple")
	proto.RegisterType((*GetUsersAttributesResponse)(nil), "v1.GetUsersAttributesResponse")
}

func init() { proto.RegisterFile("api/v1/user_service.proto", fileDescriptor_4c5a2f35b9340512) }

var fileDescriptor_4c5a2f35b9340512 = []byte{
	// 417 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0xcd, 0x8a, 0xd4, 0x40,
	0x18, 0x34, 0x19, 0x56, 0x9d, 0x1e, 0x5c, 0xe3, 0xb7, 0xeb, 0x12, 0xa3, 0x84, 0x25, 0x5e, 0xe6,
	0xd4, 0x21, 0xeb, 0xc1, 0x9b, 0xb0, 0x83, 0x22, 0x7b, 0x93, 0xa8, 0x20, 0x22, 0x84, 0xde, 0xe4,
	0x73, 0x6c, 0x76, 0x26, 0x1d, 0xba, 0x3b, 0x8d, 0x83, 0x78, 0xf1, 0x15, 0xbc, 0xf8, 0x48, 0x1e,
	0x05, 0x5f, 0x40, 0x46, 0xef, 0xbe, 0x82, 0x74, 0xfe, 0x66, 0xc6, 0xb9, 0x75, 0x57, 0x7d, 0x55,
	0x5f, 0xa5, 0xd2, 0xe4, 0x1e, 0xab, 0x78, 0x6c, 0x92, 0xb8, 0x56, 0x28, 0x33, 0x85, 0xd2, 0xf0,
	0x1c, 0x69, 0x25, 0x85, 0x16, 0xe0, 0x9a, 0x24, 0x38, 0xea, 0xe8, 0x5c, 0x2c, 0x97, 0xa2, 0x6c,
	0x89, 0x00, 0x3a, 0x10, 0x97, 0x95, 0x5e, 0x75, 0xd8, 0x83, 0xb9, 0x10, 0xf3, 0x05, 0xc6, 0x96,
	0x62, 0x65, 0x29, 0x34, 0xd3, 0x5c, 0x94, 0xaa, 0x57, 0x28, 0x2d, 0x24, 0x9b, 0x63, 0xb3, 0xa6,
	0xc5, 0xa2, 0xc7, 0xc4, 0x7b, 0x8e, 0xfa, 0xb5, 0x42, 0xa9, 0x52, 0x54, 0x95, 0x28, 0x15, 0xc2,
	0x43, 0x72, 0x60, 0x27, 0x94, 0xef, 0x9c, 0x8e, 0xa6, 0x93, 0xb3, 0x5b, 0xb4, 0xd3, 0x51, 0x3b,
	0x96, 0xb6, 0x5c, 0xf4, 0x9e, 0x80, 0xbd, 0x9e, 0x6b, 0x2d, 0xf9, 0x65, 0xad, 0xf1, 0x55, 0x5d,
	0x2d, 0x10, 0xa6, 0xc4, 0x63, 0xb5, 0xfe, 0x90, 0x55, 0x52, 0x18, 0x5e, 0xa0, 0xcc, 0x78, 0xe1,
	0x3b, 0xa7, 0xce, 0x74, 0x9c, 0x1e, 0x5a, 0xfc, 0x45, 0x07, 0x5f, 0x14, 0xe0, 0x91, 0xd1, 0x15,
	0xae, 0x7c, 0xb7, 0x21, 0xed, 0x11, 0x8e, 0xc9, 0x81, 0x61, 0x8b, 0x1a, 0xfd, 0x51, 0x83, 0xb5,
	0x97, 0x28, 0x23, 0x41, 0x1f, 0x70, 0xd8, 0xb5, 0x89, 0x7a, 0x4e, 0xbc, 0x26, 0x4e, 0xc6, 0x06,
	0xae, 0x4b, 0x7d, 0x42, 0x4d, 0x42, 0xf7, 0x13, 0xa6, 0xb7, 0xeb, 0x5d, 0xab, 0xb3, 0xbf, 0x0e,
	0x99, 0xd8, 0xb9, 0x97, 0x6d, 0xed, 0xf0, 0x84, 0xdc, 0xec, 0x17, 0xc2, 0xd8, 0x9a, 0x3c, 0xb3,
	0x05, 0x07, 0xc7, 0xf6, 0xf8, 0x7f, 0x55, 0xd1, 0x9d, 0x2f, 0x3f, 0xff, 0x7c, 0x75, 0x27, 0x30,
	0xee, 0xff, 0x9e, 0x82, 0x19, 0xb9, 0xd1, 0x8d, 0x81, 0x67, 0x35, 0x29, 0x2a, 0x51, 0xcb, 0x1c,
	0x67, 0xab, 0x8b, 0xa7, 0xc1, 0x6e, 0x97, 0xd1, 0x49, 0x23, 0xf7, 0xe0, 0x70, 0x90, 0xc7, 0x9f,
	0x78, 0xf1, 0x19, 0xde, 0x11, 0xd8, 0xff, 0xe8, 0xed, 0x34, 0xe1, 0x76, 0x9a, 0xfd, 0x5e, 0xa2,
	0xfb, 0x8d, 0xf1, 0x5d, 0x38, 0x1a, 0x8c, 0x37, 0x05, 0xcd, 0xe8, 0xf7, 0x75, 0xe8, 0xfc, 0x58,
	0x87, 0xce, 0xaf, 0x75, 0xe8, 0x7c, 0xfb, 0x1d, 0x5e, 0x23, 0x3e, 0x17, 0x54, 0x69, 0x96, 0x5f,
	0x49, 0xf1, 0xb1, 0x7d, 0x18, 0x94, 0x55, 0x9c, 0x9a, 0xe4, 0xad, 0x6b, 0x92, 0x37, 0xee, 0xe5,
	0xf5, 0x06, 0x7b, 0xf4, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xc2, 0xf8, 0x10, 0xca, 0xa8, 0x02, 0x00,
	0x00,
}

func (m *GetUsersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetUsersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetUsersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Users) > 0 {
		for iNdEx := len(m.Users) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Users[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintUserService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *UserAttributeTuple) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserAttributeTuple) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserAttributeTuple) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintUserService(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintUserService(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AuthProviderId) > 0 {
		i -= len(m.AuthProviderId)
		copy(dAtA[i:], m.AuthProviderId)
		i = encodeVarintUserService(dAtA, i, uint64(len(m.AuthProviderId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetUsersAttributesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetUsersAttributesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetUsersAttributesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UsersAttributes) > 0 {
		for iNdEx := len(m.UsersAttributes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.UsersAttributes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintUserService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintUserService(dAtA []byte, offset int, v uint64) int {
	offset -= sovUserService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetUsersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Users) > 0 {
		for _, e := range m.Users {
			l = e.Size()
			n += 1 + l + sovUserService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserAttributeTuple) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AuthProviderId)
	if l > 0 {
		n += 1 + l + sovUserService(uint64(l))
	}
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovUserService(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovUserService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetUsersAttributesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.UsersAttributes) > 0 {
		for _, e := range m.UsersAttributes {
			l = e.Size()
			n += 1 + l + sovUserService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovUserService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozUserService(x uint64) (n int) {
	return sovUserService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetUsersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUserService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetUsersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetUsersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUserService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUserService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUserService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Users = append(m.Users, &storage.User{})
			if err := m.Users[len(m.Users)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUserService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUserService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserAttributeTuple) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUserService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserAttributeTuple: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserAttributeTuple: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthProviderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUserService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUserService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUserService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthProviderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUserService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUserService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUserService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUserService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthUserService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthUserService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUserService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUserService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetUsersAttributesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowUserService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetUsersAttributesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetUsersAttributesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UsersAttributes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowUserService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthUserService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthUserService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UsersAttributes = append(m.UsersAttributes, &UserAttributeTuple{})
			if err := m.UsersAttributes[len(m.UsersAttributes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipUserService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthUserService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipUserService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowUserService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUserService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowUserService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthUserService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupUserService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthUserService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthUserService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowUserService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupUserService = fmt.Errorf("proto: unexpected end of group")
)
