// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: api/v1/policy_service.proto

package v1

import (
	storage "github.com/stackrox/rox/generated/storage"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DryRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alerts []*DryRunResponse_Alert `protobuf:"bytes,1,rep,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *DryRunResponse) Reset() {
	*x = DryRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DryRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DryRunResponse) ProtoMessage() {}

func (x *DryRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DryRunResponse.ProtoReflect.Descriptor instead.
func (*DryRunResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{0}
}

func (x *DryRunResponse) GetAlerts() []*DryRunResponse_Alert {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type JobId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *JobId) Reset() {
	*x = JobId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobId) ProtoMessage() {}

func (x *JobId) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobId.ProtoReflect.Descriptor instead.
func (*JobId) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{1}
}

func (x *JobId) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type DryRunJobStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pending bool            `protobuf:"varint,1,opt,name=pending,proto3" json:"pending,omitempty"`
	Result  *DryRunResponse `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DryRunJobStatusResponse) Reset() {
	*x = DryRunJobStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DryRunJobStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DryRunJobStatusResponse) ProtoMessage() {}

func (x *DryRunJobStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DryRunJobStatusResponse.ProtoReflect.Descriptor instead.
func (*DryRunJobStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{2}
}

func (x *DryRunJobStatusResponse) GetPending() bool {
	if x != nil {
		return x.Pending
	}
	return false
}

func (x *DryRunJobStatusResponse) GetResult() *DryRunResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

type PolicyCategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories []string `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
}

func (x *PolicyCategoriesResponse) Reset() {
	*x = PolicyCategoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyCategoriesResponse) ProtoMessage() {}

func (x *PolicyCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyCategoriesResponse.ProtoReflect.Descriptor instead.
func (*PolicyCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{3}
}

func (x *PolicyCategoriesResponse) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

type EnableDisablePolicyNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyId    string   `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	NotifierIds []string `protobuf:"bytes,2,rep,name=notifier_ids,json=notifierIds,proto3" json:"notifier_ids,omitempty"`
	Disable     bool     `protobuf:"varint,3,opt,name=disable,proto3" json:"disable,omitempty"`
}

func (x *EnableDisablePolicyNotificationRequest) Reset() {
	*x = EnableDisablePolicyNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableDisablePolicyNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableDisablePolicyNotificationRequest) ProtoMessage() {}

func (x *EnableDisablePolicyNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableDisablePolicyNotificationRequest.ProtoReflect.Descriptor instead.
func (*EnableDisablePolicyNotificationRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{4}
}

func (x *EnableDisablePolicyNotificationRequest) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *EnableDisablePolicyNotificationRequest) GetNotifierIds() []string {
	if x != nil {
		return x.NotifierIds
	}
	return nil
}

func (x *EnableDisablePolicyNotificationRequest) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

type ListPoliciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policies []*storage.ListPolicy `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
}

func (x *ListPoliciesResponse) Reset() {
	*x = ListPoliciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesResponse) ProtoMessage() {}

func (x *ListPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoliciesResponse.ProtoReflect.Descriptor instead.
func (*ListPoliciesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListPoliciesResponse) GetPolicies() []*storage.ListPolicy {
	if x != nil {
		return x.Policies
	}
	return nil
}

type PostPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy                 *storage.Policy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	EnableStrictValidation bool            `protobuf:"varint,2,opt,name=enable_strict_validation,json=enableStrictValidation,proto3" json:"enable_strict_validation,omitempty"`
}

func (x *PostPolicyRequest) Reset() {
	*x = PostPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostPolicyRequest) ProtoMessage() {}

func (x *PostPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostPolicyRequest.ProtoReflect.Descriptor instead.
func (*PostPolicyRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{6}
}

func (x *PostPolicyRequest) GetPolicy() *storage.Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *PostPolicyRequest) GetEnableStrictValidation() bool {
	if x != nil {
		return x.EnableStrictValidation
	}
	return false
}

type PatchPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to SetDisabled:
	//
	//	*PatchPolicyRequest_Disabled
	SetDisabled isPatchPolicyRequest_SetDisabled `protobuf_oneof:"set_disabled"`
}

func (x *PatchPolicyRequest) Reset() {
	*x = PatchPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchPolicyRequest) ProtoMessage() {}

func (x *PatchPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchPolicyRequest.ProtoReflect.Descriptor instead.
func (*PatchPolicyRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{7}
}

func (x *PatchPolicyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *PatchPolicyRequest) GetSetDisabled() isPatchPolicyRequest_SetDisabled {
	if m != nil {
		return m.SetDisabled
	}
	return nil
}

func (x *PatchPolicyRequest) GetDisabled() bool {
	if x, ok := x.GetSetDisabled().(*PatchPolicyRequest_Disabled); ok {
		return x.Disabled
	}
	return false
}

type isPatchPolicyRequest_SetDisabled interface {
	isPatchPolicyRequest_SetDisabled()
}

type PatchPolicyRequest_Disabled struct {
	Disabled bool `protobuf:"varint,2,opt,name=disabled,proto3,oneof"`
}

func (*PatchPolicyRequest_Disabled) isPatchPolicyRequest_SetDisabled() {}

type ExportPoliciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyIds []string `protobuf:"bytes,1,rep,name=policy_ids,json=policyIds,proto3" json:"policy_ids,omitempty"`
}

func (x *ExportPoliciesRequest) Reset() {
	*x = ExportPoliciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportPoliciesRequest) ProtoMessage() {}

func (x *ExportPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportPoliciesRequest.ProtoReflect.Descriptor instead.
func (*ExportPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{8}
}

func (x *ExportPoliciesRequest) GetPolicyIds() []string {
	if x != nil {
		return x.PolicyIds
	}
	return nil
}

type PolicyError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PolicyError) Reset() {
	*x = PolicyError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyError) ProtoMessage() {}

func (x *PolicyError) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyError.ProtoReflect.Descriptor instead.
func (*PolicyError) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{9}
}

func (x *PolicyError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ExportPolicyError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyId string       `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	Error    *PolicyError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ExportPolicyError) Reset() {
	*x = ExportPolicyError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportPolicyError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportPolicyError) ProtoMessage() {}

func (x *ExportPolicyError) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportPolicyError.ProtoReflect.Descriptor instead.
func (*ExportPolicyError) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{10}
}

func (x *ExportPolicyError) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *ExportPolicyError) GetError() *PolicyError {
	if x != nil {
		return x.Error
	}
	return nil
}

type ExportPoliciesErrorList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors []*ExportPolicyError `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *ExportPoliciesErrorList) Reset() {
	*x = ExportPoliciesErrorList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportPoliciesErrorList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportPoliciesErrorList) ProtoMessage() {}

func (x *ExportPoliciesErrorList) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportPoliciesErrorList.ProtoReflect.Descriptor instead.
func (*ExportPoliciesErrorList) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{11}
}

func (x *ExportPoliciesErrorList) GetErrors() []*ExportPolicyError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type PolicyFromSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchParams string `protobuf:"bytes,1,opt,name=search_params,json=searchParams,proto3" json:"search_params,omitempty"`
}

func (x *PolicyFromSearchRequest) Reset() {
	*x = PolicyFromSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyFromSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyFromSearchRequest) ProtoMessage() {}

func (x *PolicyFromSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyFromSearchRequest.ProtoReflect.Descriptor instead.
func (*PolicyFromSearchRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{12}
}

func (x *PolicyFromSearchRequest) GetSearchParams() string {
	if x != nil {
		return x.SearchParams
	}
	return ""
}

type ImportPoliciesMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Overwrite bool `protobuf:"varint,1,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
}

func (x *ImportPoliciesMetadata) Reset() {
	*x = ImportPoliciesMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportPoliciesMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPoliciesMetadata) ProtoMessage() {}

func (x *ImportPoliciesMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportPoliciesMetadata.ProtoReflect.Descriptor instead.
func (*ImportPoliciesMetadata) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{13}
}

func (x *ImportPoliciesMetadata) GetOverwrite() bool {
	if x != nil {
		return x.Overwrite
	}
	return false
}

type ImportPoliciesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *ImportPoliciesMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Policies []*storage.Policy       `protobuf:"bytes,2,rep,name=policies,proto3" json:"policies,omitempty"`
}

func (x *ImportPoliciesRequest) Reset() {
	*x = ImportPoliciesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPoliciesRequest) ProtoMessage() {}

func (x *ImportPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportPoliciesRequest.ProtoReflect.Descriptor instead.
func (*ImportPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{14}
}

func (x *ImportPoliciesRequest) GetMetadata() *ImportPoliciesMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ImportPoliciesRequest) GetPolicies() []*storage.Policy {
	if x != nil {
		return x.Policies
	}
	return nil
}

type ImportPolicyError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Type    string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Types that are assignable to Metadata:
	//
	//	*ImportPolicyError_DuplicateName
	//	*ImportPolicyError_ValidationError
	Metadata isImportPolicyError_Metadata `protobuf_oneof:"metadata"`
}

func (x *ImportPolicyError) Reset() {
	*x = ImportPolicyError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportPolicyError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPolicyError) ProtoMessage() {}

func (x *ImportPolicyError) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportPolicyError.ProtoReflect.Descriptor instead.
func (*ImportPolicyError) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{15}
}

func (x *ImportPolicyError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ImportPolicyError) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (m *ImportPolicyError) GetMetadata() isImportPolicyError_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *ImportPolicyError) GetDuplicateName() string {
	if x, ok := x.GetMetadata().(*ImportPolicyError_DuplicateName); ok {
		return x.DuplicateName
	}
	return ""
}

func (x *ImportPolicyError) GetValidationError() string {
	if x, ok := x.GetMetadata().(*ImportPolicyError_ValidationError); ok {
		return x.ValidationError
	}
	return ""
}

type isImportPolicyError_Metadata interface {
	isImportPolicyError_Metadata()
}

type ImportPolicyError_DuplicateName struct {
	DuplicateName string `protobuf:"bytes,3,opt,name=duplicate_name,json=duplicateName,proto3,oneof"`
}

type ImportPolicyError_ValidationError struct {
	ValidationError string `protobuf:"bytes,4,opt,name=validation_error,json=validationError,proto3,oneof"`
}

func (*ImportPolicyError_DuplicateName) isImportPolicyError_Metadata() {}

func (*ImportPolicyError_ValidationError) isImportPolicyError_Metadata() {}

type ImportPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succeeded bool                 `protobuf:"varint,1,opt,name=succeeded,proto3" json:"succeeded,omitempty"`
	Policy    *storage.Policy      `protobuf:"bytes,2,opt,name=policy,proto3" json:"policy,omitempty"`
	Errors    []*ImportPolicyError `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *ImportPolicyResponse) Reset() {
	*x = ImportPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPolicyResponse) ProtoMessage() {}

func (x *ImportPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportPolicyResponse.ProtoReflect.Descriptor instead.
func (*ImportPolicyResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{16}
}

func (x *ImportPolicyResponse) GetSucceeded() bool {
	if x != nil {
		return x.Succeeded
	}
	return false
}

func (x *ImportPolicyResponse) GetPolicy() *storage.Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *ImportPolicyResponse) GetErrors() []*ImportPolicyError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type ImportPoliciesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses    []*ImportPolicyResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	AllSucceeded bool                    `protobuf:"varint,2,opt,name=all_succeeded,json=allSucceeded,proto3" json:"all_succeeded,omitempty"`
}

func (x *ImportPoliciesResponse) Reset() {
	*x = ImportPoliciesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPoliciesResponse) ProtoMessage() {}

func (x *ImportPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportPoliciesResponse.ProtoReflect.Descriptor instead.
func (*ImportPoliciesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{17}
}

func (x *ImportPoliciesResponse) GetResponses() []*ImportPolicyResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *ImportPoliciesResponse) GetAllSucceeded() bool {
	if x != nil {
		return x.AllSucceeded
	}
	return false
}

type PolicyFromSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy             *storage.Policy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	AlteredSearchTerms []string        `protobuf:"bytes,2,rep,name=altered_search_terms,json=alteredSearchTerms,proto3" json:"altered_search_terms,omitempty"`
	HasNestedFields    bool            `protobuf:"varint,3,opt,name=has_nested_fields,json=hasNestedFields,proto3" json:"has_nested_fields,omitempty"`
}

func (x *PolicyFromSearchResponse) Reset() {
	*x = PolicyFromSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyFromSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyFromSearchResponse) ProtoMessage() {}

func (x *PolicyFromSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyFromSearchResponse.ProtoReflect.Descriptor instead.
func (*PolicyFromSearchResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{18}
}

func (x *PolicyFromSearchResponse) GetPolicy() *storage.Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *PolicyFromSearchResponse) GetAlteredSearchTerms() []string {
	if x != nil {
		return x.AlteredSearchTerms
	}
	return nil
}

func (x *PolicyFromSearchResponse) GetHasNestedFields() bool {
	if x != nil {
		return x.HasNestedFields
	}
	return false
}

type GetPolicyMitreVectorsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Options *GetPolicyMitreVectorsRequest_Options `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *GetPolicyMitreVectorsRequest) Reset() {
	*x = GetPolicyMitreVectorsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPolicyMitreVectorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyMitreVectorsRequest) ProtoMessage() {}

func (x *GetPolicyMitreVectorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyMitreVectorsRequest.ProtoReflect.Descriptor instead.
func (*GetPolicyMitreVectorsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetPolicyMitreVectorsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetPolicyMitreVectorsRequest) GetOptions() *GetPolicyMitreVectorsRequest_Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetPolicyMitreVectorsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy  *storage.Policy              `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	Vectors []*storage.MitreAttackVector `protobuf:"bytes,2,rep,name=vectors,proto3" json:"vectors,omitempty"`
}

func (x *GetPolicyMitreVectorsResponse) Reset() {
	*x = GetPolicyMitreVectorsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPolicyMitreVectorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyMitreVectorsResponse) ProtoMessage() {}

func (x *GetPolicyMitreVectorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyMitreVectorsResponse.ProtoReflect.Descriptor instead.
func (*GetPolicyMitreVectorsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetPolicyMitreVectorsResponse) GetPolicy() *storage.Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *GetPolicyMitreVectorsResponse) GetVectors() []*storage.MitreAttackVector {
	if x != nil {
		return x.Vectors
	}
	return nil
}

type DryRunResponse_Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment string   `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Violations []string `protobuf:"bytes,2,rep,name=violations,proto3" json:"violations,omitempty"`
}

func (x *DryRunResponse_Alert) Reset() {
	*x = DryRunResponse_Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DryRunResponse_Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DryRunResponse_Alert) ProtoMessage() {}

func (x *DryRunResponse_Alert) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DryRunResponse_Alert.ProtoReflect.Descriptor instead.
func (*DryRunResponse_Alert) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *DryRunResponse_Alert) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *DryRunResponse_Alert) GetViolations() []string {
	if x != nil {
		return x.Violations
	}
	return nil
}

type GetPolicyMitreVectorsRequest_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If set to true, policy is excluded from the response.
	ExcludePolicy bool `protobuf:"varint,1,opt,name=exclude_policy,json=excludePolicy,proto3" json:"exclude_policy,omitempty"`
}

func (x *GetPolicyMitreVectorsRequest_Options) Reset() {
	*x = GetPolicyMitreVectorsRequest_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPolicyMitreVectorsRequest_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyMitreVectorsRequest_Options) ProtoMessage() {}

func (x *GetPolicyMitreVectorsRequest_Options) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyMitreVectorsRequest_Options.ProtoReflect.Descriptor instead.
func (*GetPolicyMitreVectorsRequest_Options) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_service_proto_rawDescGZIP(), []int{19, 0}
}

func (x *GetPolicyMitreVectorsRequest_Options) GetExcludePolicy() bool {
	if x != nil {
		return x.ExcludePolicy
	}
	return false
}

var File_api_v1_policy_service_proto protoreflect.FileDescriptor

var file_api_v1_policy_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76,
	0x31, 0x1a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x6d,
	0x69, 0x74, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8b, 0x01, 0x0a, 0x0e, 0x44, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x06, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x1a, 0x47, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x1e,
	0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x5f,
	0x0a, 0x17, 0x44, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x3a, 0x0a, 0x18, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x26,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x22, 0x47, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x22, 0x76, 0x0a, 0x11, 0x50, 0x6f, 0x73,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x38, 0x0a, 0x18, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x74, 0x72, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x52, 0x0a, 0x12, 0x50, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x36, 0x0a, 0x15, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x73, 0x22, 0x23, 0x0a,
	0x0b, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x57, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x48, 0x0a, 0x17, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x3e, 0x0a, 0x17, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x46,
	0x72, 0x6f, 0x6d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x36, 0x0a, 0x16, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x6f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x22, 0x7c, 0x0a,
	0x15, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2b,
	0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x11,
	0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x27, 0x0a, 0x0e, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x75, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x10, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x8c, 0x01, 0x0a, 0x14, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x22, 0x75, 0x0a, 0x16, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65,
	0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x18, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x30, 0x0a,
	0x14, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x61, 0x6c, 0x74,
	0x65, 0x72, 0x65, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12,
	0x2a, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x4e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x69, 0x74, 0x72, 0x65, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x69, 0x74, 0x72,
	0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x30, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x22, 0x7e, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d,
	0x69, 0x74, 0x72, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x34, 0x0a, 0x07,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x69, 0x74, 0x72, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x76, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x32, 0xc6, 0x0c, 0x0a, 0x0d, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x12, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x1a, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x84, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x69, 0x74,
	0x72, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x69, 0x74, 0x72, 0x65, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4d, 0x69, 0x74, 0x72, 0x65, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x6d, 0x69, 0x74, 0x72, 0x65, 0x76,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x4c, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x77, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x18, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x3a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x0c, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x09, 0x50, 0x75, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x1a, 0x11, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x4e, 0x0a, 0x0b, 0x50, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x16,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x32, 0x11, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x46, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x10, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x87, 0x01, 0x0a, 0x1f, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x32, 0x22, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x73, 0x12, 0x47, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x2f, 0x72, 0x65, 0x61, 0x73, 0x73, 0x65, 0x73, 0x73, 0x12, 0x53, 0x0a, 0x0c, 0x44, 0x72,
	0x79, 0x52, 0x75, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x0f, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x1a, 0x12, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x64, 0x72, 0x79, 0x72, 0x75, 0x6e, 0x12,
	0x56, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4a, 0x6f, 0x62, 0x12, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x4a,
	0x6f, 0x62, 0x49, 0x64, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22,
	0x16, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x64, 0x72,
	0x79, 0x72, 0x75, 0x6e, 0x6a, 0x6f, 0x62, 0x12, 0x67, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x09, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x1a, 0x1b, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12,
	0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x64, 0x72,
	0x79, 0x72, 0x75, 0x6e, 0x6a, 0x6f, 0x62, 0x2f, 0x7b, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0x50, 0x0a, 0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x44, 0x72, 0x79, 0x52, 0x75, 0x6e,
	0x4a, 0x6f, 0x62, 0x12, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x1a, 0x09,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x21, 0x2a, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f,
	0x64, 0x72, 0x79, 0x72, 0x75, 0x6e, 0x6a, 0x6f, 0x62, 0x2f, 0x7b, 0x6a, 0x6f, 0x62, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0x5c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x6c, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x12, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x72,
	0x0a, 0x10, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x46, 0x72,
	0x6f, 0x6d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x2f, 0x66, 0x72, 0x6f, 0x6d, 0x2d, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x67, 0x0a, 0x0e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x2f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x27, 0x0a, 0x18, 0x69,
	0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x72, 0x6f, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x5a, 0x0b, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x3b, 0x76, 0x31, 0x58, 0x03, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_policy_service_proto_rawDescOnce sync.Once
	file_api_v1_policy_service_proto_rawDescData = file_api_v1_policy_service_proto_rawDesc
)

func file_api_v1_policy_service_proto_rawDescGZIP() []byte {
	file_api_v1_policy_service_proto_rawDescOnce.Do(func() {
		file_api_v1_policy_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_policy_service_proto_rawDescData)
	})
	return file_api_v1_policy_service_proto_rawDescData
}

var file_api_v1_policy_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_api_v1_policy_service_proto_goTypes = []any{
	(*DryRunResponse)(nil),                         // 0: v1.DryRunResponse
	(*JobId)(nil),                                  // 1: v1.JobId
	(*DryRunJobStatusResponse)(nil),                // 2: v1.DryRunJobStatusResponse
	(*PolicyCategoriesResponse)(nil),               // 3: v1.PolicyCategoriesResponse
	(*EnableDisablePolicyNotificationRequest)(nil), // 4: v1.EnableDisablePolicyNotificationRequest
	(*ListPoliciesResponse)(nil),                   // 5: v1.ListPoliciesResponse
	(*PostPolicyRequest)(nil),                      // 6: v1.PostPolicyRequest
	(*PatchPolicyRequest)(nil),                     // 7: v1.PatchPolicyRequest
	(*ExportPoliciesRequest)(nil),                  // 8: v1.ExportPoliciesRequest
	(*PolicyError)(nil),                            // 9: v1.PolicyError
	(*ExportPolicyError)(nil),                      // 10: v1.ExportPolicyError
	(*ExportPoliciesErrorList)(nil),                // 11: v1.ExportPoliciesErrorList
	(*PolicyFromSearchRequest)(nil),                // 12: v1.PolicyFromSearchRequest
	(*ImportPoliciesMetadata)(nil),                 // 13: v1.ImportPoliciesMetadata
	(*ImportPoliciesRequest)(nil),                  // 14: v1.ImportPoliciesRequest
	(*ImportPolicyError)(nil),                      // 15: v1.ImportPolicyError
	(*ImportPolicyResponse)(nil),                   // 16: v1.ImportPolicyResponse
	(*ImportPoliciesResponse)(nil),                 // 17: v1.ImportPoliciesResponse
	(*PolicyFromSearchResponse)(nil),               // 18: v1.PolicyFromSearchResponse
	(*GetPolicyMitreVectorsRequest)(nil),           // 19: v1.GetPolicyMitreVectorsRequest
	(*GetPolicyMitreVectorsResponse)(nil),          // 20: v1.GetPolicyMitreVectorsResponse
	(*DryRunResponse_Alert)(nil),                   // 21: v1.DryRunResponse.Alert
	(*GetPolicyMitreVectorsRequest_Options)(nil),   // 22: v1.GetPolicyMitreVectorsRequest.Options
	(*storage.ListPolicy)(nil),                     // 23: storage.ListPolicy
	(*storage.Policy)(nil),                         // 24: storage.Policy
	(*storage.MitreAttackVector)(nil),              // 25: storage.MitreAttackVector
	(*ResourceByID)(nil),                           // 26: v1.ResourceByID
	(*RawQuery)(nil),                               // 27: v1.RawQuery
	(*Empty)(nil),                                  // 28: v1.Empty
	(*storage.ExportPoliciesResponse)(nil),         // 29: storage.ExportPoliciesResponse
}
var file_api_v1_policy_service_proto_depIdxs = []int32{
	21, // 0: v1.DryRunResponse.alerts:type_name -> v1.DryRunResponse.Alert
	0,  // 1: v1.DryRunJobStatusResponse.result:type_name -> v1.DryRunResponse
	23, // 2: v1.ListPoliciesResponse.policies:type_name -> storage.ListPolicy
	24, // 3: v1.PostPolicyRequest.policy:type_name -> storage.Policy
	9,  // 4: v1.ExportPolicyError.error:type_name -> v1.PolicyError
	10, // 5: v1.ExportPoliciesErrorList.errors:type_name -> v1.ExportPolicyError
	13, // 6: v1.ImportPoliciesRequest.metadata:type_name -> v1.ImportPoliciesMetadata
	24, // 7: v1.ImportPoliciesRequest.policies:type_name -> storage.Policy
	24, // 8: v1.ImportPolicyResponse.policy:type_name -> storage.Policy
	15, // 9: v1.ImportPolicyResponse.errors:type_name -> v1.ImportPolicyError
	16, // 10: v1.ImportPoliciesResponse.responses:type_name -> v1.ImportPolicyResponse
	24, // 11: v1.PolicyFromSearchResponse.policy:type_name -> storage.Policy
	22, // 12: v1.GetPolicyMitreVectorsRequest.options:type_name -> v1.GetPolicyMitreVectorsRequest.Options
	24, // 13: v1.GetPolicyMitreVectorsResponse.policy:type_name -> storage.Policy
	25, // 14: v1.GetPolicyMitreVectorsResponse.vectors:type_name -> storage.MitreAttackVector
	26, // 15: v1.PolicyService.GetPolicy:input_type -> v1.ResourceByID
	19, // 16: v1.PolicyService.GetPolicyMitreVectors:input_type -> v1.GetPolicyMitreVectorsRequest
	27, // 17: v1.PolicyService.ListPolicies:input_type -> v1.RawQuery
	6,  // 18: v1.PolicyService.PostPolicy:input_type -> v1.PostPolicyRequest
	24, // 19: v1.PolicyService.PutPolicy:input_type -> storage.Policy
	7,  // 20: v1.PolicyService.PatchPolicy:input_type -> v1.PatchPolicyRequest
	26, // 21: v1.PolicyService.DeletePolicy:input_type -> v1.ResourceByID
	4,  // 22: v1.PolicyService.EnableDisablePolicyNotification:input_type -> v1.EnableDisablePolicyNotificationRequest
	28, // 23: v1.PolicyService.ReassessPolicies:input_type -> v1.Empty
	24, // 24: v1.PolicyService.DryRunPolicy:input_type -> storage.Policy
	24, // 25: v1.PolicyService.SubmitDryRunPolicyJob:input_type -> storage.Policy
	1,  // 26: v1.PolicyService.QueryDryRunJobStatus:input_type -> v1.JobId
	1,  // 27: v1.PolicyService.CancelDryRunJob:input_type -> v1.JobId
	28, // 28: v1.PolicyService.GetPolicyCategories:input_type -> v1.Empty
	8,  // 29: v1.PolicyService.ExportPolicies:input_type -> v1.ExportPoliciesRequest
	12, // 30: v1.PolicyService.PolicyFromSearch:input_type -> v1.PolicyFromSearchRequest
	14, // 31: v1.PolicyService.ImportPolicies:input_type -> v1.ImportPoliciesRequest
	24, // 32: v1.PolicyService.GetPolicy:output_type -> storage.Policy
	20, // 33: v1.PolicyService.GetPolicyMitreVectors:output_type -> v1.GetPolicyMitreVectorsResponse
	5,  // 34: v1.PolicyService.ListPolicies:output_type -> v1.ListPoliciesResponse
	24, // 35: v1.PolicyService.PostPolicy:output_type -> storage.Policy
	28, // 36: v1.PolicyService.PutPolicy:output_type -> v1.Empty
	28, // 37: v1.PolicyService.PatchPolicy:output_type -> v1.Empty
	28, // 38: v1.PolicyService.DeletePolicy:output_type -> v1.Empty
	28, // 39: v1.PolicyService.EnableDisablePolicyNotification:output_type -> v1.Empty
	28, // 40: v1.PolicyService.ReassessPolicies:output_type -> v1.Empty
	0,  // 41: v1.PolicyService.DryRunPolicy:output_type -> v1.DryRunResponse
	1,  // 42: v1.PolicyService.SubmitDryRunPolicyJob:output_type -> v1.JobId
	2,  // 43: v1.PolicyService.QueryDryRunJobStatus:output_type -> v1.DryRunJobStatusResponse
	28, // 44: v1.PolicyService.CancelDryRunJob:output_type -> v1.Empty
	3,  // 45: v1.PolicyService.GetPolicyCategories:output_type -> v1.PolicyCategoriesResponse
	29, // 46: v1.PolicyService.ExportPolicies:output_type -> storage.ExportPoliciesResponse
	18, // 47: v1.PolicyService.PolicyFromSearch:output_type -> v1.PolicyFromSearchResponse
	17, // 48: v1.PolicyService.ImportPolicies:output_type -> v1.ImportPoliciesResponse
	32, // [32:49] is the sub-list for method output_type
	15, // [15:32] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_api_v1_policy_service_proto_init() }
func file_api_v1_policy_service_proto_init() {
	if File_api_v1_policy_service_proto != nil {
		return
	}
	file_api_v1_common_proto_init()
	file_api_v1_empty_proto_init()
	file_api_v1_search_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1_policy_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*DryRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*JobId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DryRunJobStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PolicyCategoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*EnableDisablePolicyNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListPoliciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PostPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PatchPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ExportPoliciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PolicyError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ExportPolicyError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ExportPoliciesErrorList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PolicyFromSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ImportPoliciesMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ImportPoliciesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ImportPolicyError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ImportPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ImportPoliciesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*PolicyFromSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetPolicyMitreVectorsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetPolicyMitreVectorsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*DryRunResponse_Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_service_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetPolicyMitreVectorsRequest_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_policy_service_proto_msgTypes[7].OneofWrappers = []any{
		(*PatchPolicyRequest_Disabled)(nil),
	}
	file_api_v1_policy_service_proto_msgTypes[15].OneofWrappers = []any{
		(*ImportPolicyError_DuplicateName)(nil),
		(*ImportPolicyError_ValidationError)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_policy_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_policy_service_proto_goTypes,
		DependencyIndexes: file_api_v1_policy_service_proto_depIdxs,
		MessageInfos:      file_api_v1_policy_service_proto_msgTypes,
	}.Build()
	File_api_v1_policy_service_proto = out.File
	file_api_v1_policy_service_proto_rawDesc = nil
	file_api_v1_policy_service_proto_goTypes = nil
	file_api_v1_policy_service_proto_depIdxs = nil
}
