// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/v1/deployment_service.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	storage "github.com/stackrox/rox/generated/storage"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DeploymentLabelsResponse struct {
	Labels               map[string]*DeploymentLabelsResponse_LabelValues `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Values               []string                                         `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *DeploymentLabelsResponse) Reset()         { *m = DeploymentLabelsResponse{} }
func (m *DeploymentLabelsResponse) String() string { return proto.CompactTextString(m) }
func (*DeploymentLabelsResponse) ProtoMessage()    {}
func (*DeploymentLabelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_081153b22511ab60, []int{0}
}
func (m *DeploymentLabelsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeploymentLabelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeploymentLabelsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeploymentLabelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentLabelsResponse.Merge(m, src)
}
func (m *DeploymentLabelsResponse) XXX_Size() int {
	return m.Size()
}
func (m *DeploymentLabelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentLabelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentLabelsResponse proto.InternalMessageInfo

func (m *DeploymentLabelsResponse) GetLabels() map[string]*DeploymentLabelsResponse_LabelValues {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *DeploymentLabelsResponse) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *DeploymentLabelsResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *DeploymentLabelsResponse) Clone() *DeploymentLabelsResponse {
	if m == nil {
		return nil
	}
	cloned := new(DeploymentLabelsResponse)
	*cloned = *m

	if m.Labels != nil {
		cloned.Labels = make(map[string]*DeploymentLabelsResponse_LabelValues, len(m.Labels))
		for k, v := range m.Labels {
			cloned.Labels[k] = v.Clone()
		}
	}
	if m.Values != nil {
		cloned.Values = make([]string, len(m.Values))
		copy(cloned.Values, m.Values)
	}
	return cloned
}

type DeploymentLabelsResponse_LabelValues struct {
	Values               []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeploymentLabelsResponse_LabelValues) Reset()         { *m = DeploymentLabelsResponse_LabelValues{} }
func (m *DeploymentLabelsResponse_LabelValues) String() string { return proto.CompactTextString(m) }
func (*DeploymentLabelsResponse_LabelValues) ProtoMessage()    {}
func (*DeploymentLabelsResponse_LabelValues) Descriptor() ([]byte, []int) {
	return fileDescriptor_081153b22511ab60, []int{0, 0}
}
func (m *DeploymentLabelsResponse_LabelValues) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeploymentLabelsResponse_LabelValues) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeploymentLabelsResponse_LabelValues.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeploymentLabelsResponse_LabelValues) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentLabelsResponse_LabelValues.Merge(m, src)
}
func (m *DeploymentLabelsResponse_LabelValues) XXX_Size() int {
	return m.Size()
}
func (m *DeploymentLabelsResponse_LabelValues) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentLabelsResponse_LabelValues.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentLabelsResponse_LabelValues proto.InternalMessageInfo

func (m *DeploymentLabelsResponse_LabelValues) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *DeploymentLabelsResponse_LabelValues) MessageClone() proto.Message {
	return m.Clone()
}
func (m *DeploymentLabelsResponse_LabelValues) Clone() *DeploymentLabelsResponse_LabelValues {
	if m == nil {
		return nil
	}
	cloned := new(DeploymentLabelsResponse_LabelValues)
	*cloned = *m

	if m.Values != nil {
		cloned.Values = make([]string, len(m.Values))
		copy(cloned.Values, m.Values)
	}
	return cloned
}

type ListDeploymentsResponse struct {
	Deployments          []*storage.ListDeployment `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ListDeploymentsResponse) Reset()         { *m = ListDeploymentsResponse{} }
func (m *ListDeploymentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListDeploymentsResponse) ProtoMessage()    {}
func (*ListDeploymentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_081153b22511ab60, []int{1}
}
func (m *ListDeploymentsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDeploymentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDeploymentsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDeploymentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeploymentsResponse.Merge(m, src)
}
func (m *ListDeploymentsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListDeploymentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeploymentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeploymentsResponse proto.InternalMessageInfo

func (m *ListDeploymentsResponse) GetDeployments() []*storage.ListDeployment {
	if m != nil {
		return m.Deployments
	}
	return nil
}

func (m *ListDeploymentsResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ListDeploymentsResponse) Clone() *ListDeploymentsResponse {
	if m == nil {
		return nil
	}
	cloned := new(ListDeploymentsResponse)
	*cloned = *m

	if m.Deployments != nil {
		cloned.Deployments = make([]*storage.ListDeployment, len(m.Deployments))
		for idx, v := range m.Deployments {
			cloned.Deployments[idx] = v.Clone()
		}
	}
	return cloned
}

type CountDeploymentsResponse struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountDeploymentsResponse) Reset()         { *m = CountDeploymentsResponse{} }
func (m *CountDeploymentsResponse) String() string { return proto.CompactTextString(m) }
func (*CountDeploymentsResponse) ProtoMessage()    {}
func (*CountDeploymentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_081153b22511ab60, []int{2}
}
func (m *CountDeploymentsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CountDeploymentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CountDeploymentsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CountDeploymentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountDeploymentsResponse.Merge(m, src)
}
func (m *CountDeploymentsResponse) XXX_Size() int {
	return m.Size()
}
func (m *CountDeploymentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CountDeploymentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CountDeploymentsResponse proto.InternalMessageInfo

func (m *CountDeploymentsResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *CountDeploymentsResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *CountDeploymentsResponse) Clone() *CountDeploymentsResponse {
	if m == nil {
		return nil
	}
	cloned := new(CountDeploymentsResponse)
	*cloned = *m

	return cloned
}

type ListDeploymentsWithProcessInfoResponse struct {
	Deployments          []*ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo `protobuf:"bytes,1,rep,name=deployments,proto3" json:"deployments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                            `json:"-"`
	XXX_unrecognized     []byte                                                              `json:"-"`
	XXX_sizecache        int32                                                               `json:"-"`
}

func (m *ListDeploymentsWithProcessInfoResponse) Reset() {
	*m = ListDeploymentsWithProcessInfoResponse{}
}
func (m *ListDeploymentsWithProcessInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ListDeploymentsWithProcessInfoResponse) ProtoMessage()    {}
func (*ListDeploymentsWithProcessInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_081153b22511ab60, []int{3}
}
func (m *ListDeploymentsWithProcessInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDeploymentsWithProcessInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDeploymentsWithProcessInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDeploymentsWithProcessInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeploymentsWithProcessInfoResponse.Merge(m, src)
}
func (m *ListDeploymentsWithProcessInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListDeploymentsWithProcessInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeploymentsWithProcessInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeploymentsWithProcessInfoResponse proto.InternalMessageInfo

func (m *ListDeploymentsWithProcessInfoResponse) GetDeployments() []*ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo {
	if m != nil {
		return m.Deployments
	}
	return nil
}

func (m *ListDeploymentsWithProcessInfoResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ListDeploymentsWithProcessInfoResponse) Clone() *ListDeploymentsWithProcessInfoResponse {
	if m == nil {
		return nil
	}
	cloned := new(ListDeploymentsWithProcessInfoResponse)
	*cloned = *m

	if m.Deployments != nil {
		cloned.Deployments = make([]*ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo, len(m.Deployments))
		for idx, v := range m.Deployments {
			cloned.Deployments[idx] = v.Clone()
		}
	}
	return cloned
}

type ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo struct {
	Deployment           *storage.ListDeployment                   `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	BaselineStatuses     []*storage.ContainerNameAndBaselineStatus `protobuf:"bytes,3,rep,name=baseline_statuses,json=baselineStatuses,proto3" json:"baseline_statuses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) Reset() {
	*m = ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo{}
}
func (m *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) String() string {
	return proto.CompactTextString(m)
}
func (*ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) ProtoMessage() {}
func (*ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_081153b22511ab60, []int{3, 0}
}
func (m *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo.Merge(m, src)
}
func (m *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) XXX_Size() int {
	return m.Size()
}
func (m *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo proto.InternalMessageInfo

func (m *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) GetDeployment() *storage.ListDeployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func (m *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) GetBaselineStatuses() []*storage.ContainerNameAndBaselineStatus {
	if m != nil {
		return m.BaselineStatuses
	}
	return nil
}

func (m *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) Clone() *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo {
	if m == nil {
		return nil
	}
	cloned := new(ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo)
	*cloned = *m

	cloned.Deployment = m.Deployment.Clone()
	if m.BaselineStatuses != nil {
		cloned.BaselineStatuses = make([]*storage.ContainerNameAndBaselineStatus, len(m.BaselineStatuses))
		for idx, v := range m.BaselineStatuses {
			cloned.BaselineStatuses[idx] = v.Clone()
		}
	}
	return cloned
}

type GetDeploymentWithRiskResponse struct {
	Deployment           *storage.Deployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Risk                 *storage.Risk       `protobuf:"bytes,2,opt,name=risk,proto3" json:"risk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetDeploymentWithRiskResponse) Reset()         { *m = GetDeploymentWithRiskResponse{} }
func (m *GetDeploymentWithRiskResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeploymentWithRiskResponse) ProtoMessage()    {}
func (*GetDeploymentWithRiskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_081153b22511ab60, []int{4}
}
func (m *GetDeploymentWithRiskResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetDeploymentWithRiskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetDeploymentWithRiskResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetDeploymentWithRiskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeploymentWithRiskResponse.Merge(m, src)
}
func (m *GetDeploymentWithRiskResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetDeploymentWithRiskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeploymentWithRiskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeploymentWithRiskResponse proto.InternalMessageInfo

func (m *GetDeploymentWithRiskResponse) GetDeployment() *storage.Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func (m *GetDeploymentWithRiskResponse) GetRisk() *storage.Risk {
	if m != nil {
		return m.Risk
	}
	return nil
}

func (m *GetDeploymentWithRiskResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *GetDeploymentWithRiskResponse) Clone() *GetDeploymentWithRiskResponse {
	if m == nil {
		return nil
	}
	cloned := new(GetDeploymentWithRiskResponse)
	*cloned = *m

	cloned.Deployment = m.Deployment.Clone()
	cloned.Risk = m.Risk.Clone()
	return cloned
}

type ExportDeploymentRequest struct {
	Timeout              int32    `protobuf:"varint,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Query                string   `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExportDeploymentRequest) Reset()         { *m = ExportDeploymentRequest{} }
func (m *ExportDeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*ExportDeploymentRequest) ProtoMessage()    {}
func (*ExportDeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_081153b22511ab60, []int{5}
}
func (m *ExportDeploymentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExportDeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExportDeploymentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExportDeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportDeploymentRequest.Merge(m, src)
}
func (m *ExportDeploymentRequest) XXX_Size() int {
	return m.Size()
}
func (m *ExportDeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportDeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExportDeploymentRequest proto.InternalMessageInfo

func (m *ExportDeploymentRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *ExportDeploymentRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *ExportDeploymentRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ExportDeploymentRequest) Clone() *ExportDeploymentRequest {
	if m == nil {
		return nil
	}
	cloned := new(ExportDeploymentRequest)
	*cloned = *m

	return cloned
}

type ExportDeploymentResponse struct {
	Deployment           *storage.Deployment `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ExportDeploymentResponse) Reset()         { *m = ExportDeploymentResponse{} }
func (m *ExportDeploymentResponse) String() string { return proto.CompactTextString(m) }
func (*ExportDeploymentResponse) ProtoMessage()    {}
func (*ExportDeploymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_081153b22511ab60, []int{6}
}
func (m *ExportDeploymentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExportDeploymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExportDeploymentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExportDeploymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportDeploymentResponse.Merge(m, src)
}
func (m *ExportDeploymentResponse) XXX_Size() int {
	return m.Size()
}
func (m *ExportDeploymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportDeploymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExportDeploymentResponse proto.InternalMessageInfo

func (m *ExportDeploymentResponse) GetDeployment() *storage.Deployment {
	if m != nil {
		return m.Deployment
	}
	return nil
}

func (m *ExportDeploymentResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ExportDeploymentResponse) Clone() *ExportDeploymentResponse {
	if m == nil {
		return nil
	}
	cloned := new(ExportDeploymentResponse)
	*cloned = *m

	cloned.Deployment = m.Deployment.Clone()
	return cloned
}

func init() {
	proto.RegisterType((*DeploymentLabelsResponse)(nil), "v1.DeploymentLabelsResponse")
	proto.RegisterMapType((map[string]*DeploymentLabelsResponse_LabelValues)(nil), "v1.DeploymentLabelsResponse.LabelsEntry")
	proto.RegisterType((*DeploymentLabelsResponse_LabelValues)(nil), "v1.DeploymentLabelsResponse.LabelValues")
	proto.RegisterType((*ListDeploymentsResponse)(nil), "v1.ListDeploymentsResponse")
	proto.RegisterType((*CountDeploymentsResponse)(nil), "v1.CountDeploymentsResponse")
	proto.RegisterType((*ListDeploymentsWithProcessInfoResponse)(nil), "v1.ListDeploymentsWithProcessInfoResponse")
	proto.RegisterType((*ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo)(nil), "v1.ListDeploymentsWithProcessInfoResponse.DeploymentWithProcessInfo")
	proto.RegisterType((*GetDeploymentWithRiskResponse)(nil), "v1.GetDeploymentWithRiskResponse")
	proto.RegisterType((*ExportDeploymentRequest)(nil), "v1.ExportDeploymentRequest")
	proto.RegisterType((*ExportDeploymentResponse)(nil), "v1.ExportDeploymentResponse")
}

func init() { proto.RegisterFile("api/v1/deployment_service.proto", fileDescriptor_081153b22511ab60) }

var fileDescriptor_081153b22511ab60 = []byte{
	// 796 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xdd, 0x4e, 0xdb, 0x48,
	0x14, 0x5e, 0x3b, 0x84, 0xdd, 0x1c, 0x16, 0x91, 0x0c, 0x2c, 0xf1, 0x86, 0xac, 0x09, 0xd6, 0x2e,
	0x44, 0x7b, 0xe1, 0x10, 0xb8, 0xd8, 0x6d, 0x2f, 0xaa, 0x96, 0x1f, 0x21, 0x2a, 0xd4, 0x1f, 0x43,
	0x7f, 0x54, 0xb5, 0x42, 0x13, 0x67, 0x00, 0x2b, 0x89, 0xc7, 0x78, 0x26, 0x81, 0xa8, 0xaa, 0x54,
	0xf1, 0x0a, 0xbd, 0xe9, 0x63, 0xf4, 0x1d, 0x7a, 0xd3, 0xcb, 0x4a, 0x7d, 0x81, 0x8a, 0xf6, 0xa2,
	0x8f, 0x51, 0x79, 0x3c, 0x49, 0x1c, 0xd7, 0x46, 0x48, 0xbd, 0xf3, 0x39, 0xe7, 0x3b, 0xdf, 0x39,
	0xf3, 0xf9, 0x9c, 0x19, 0x58, 0xc4, 0x9e, 0x53, 0xeb, 0xd5, 0x6b, 0x4d, 0xe2, 0xb5, 0x69, 0xbf,
	0x43, 0x5c, 0x7e, 0xc8, 0x88, 0xdf, 0x73, 0x6c, 0x62, 0x7a, 0x3e, 0xe5, 0x14, 0xa9, 0xbd, 0x7a,
	0x69, 0x56, 0x82, 0x6c, 0xda, 0xe9, 0x50, 0x37, 0x0c, 0x94, 0x90, 0x74, 0x92, 0x8e, 0xc7, 0xfb,
	0xd2, 0xb7, 0x20, 0x7d, 0x8c, 0x60, 0xdf, 0x3e, 0x19, 0x67, 0x2a, 0x95, 0x8f, 0x29, 0x3d, 0x6e,
	0x93, 0x5a, 0x80, 0xc1, 0xae, 0x4b, 0x39, 0xe6, 0x0e, 0x75, 0x99, 0x8c, 0x6a, 0x8c, 0x53, 0x1f,
	0x1f, 0x93, 0x48, 0x27, 0x32, 0xa2, 0x0f, 0x22, 0x9e, 0x4f, 0x6d, 0xc2, 0xd8, 0x61, 0x03, 0x33,
	0xd2, 0x76, 0xdc, 0x01, 0x2f, 0x1a, 0xc4, 0x7d, 0x87, 0xb5, 0x42, 0x9f, 0xf1, 0x5a, 0x05, 0x6d,
	0x6b, 0x48, 0xb4, 0x87, 0x1b, 0xa4, 0xcd, 0x2c, 0xc2, 0x3c, 0xea, 0x32, 0x82, 0x6e, 0xc3, 0x64,
	0x5b, 0x78, 0x34, 0xa5, 0x92, 0xa9, 0x4e, 0xad, 0x55, 0xcd, 0x5e, 0xdd, 0x4c, 0x43, 0x9b, 0xa1,
	0xb9, 0xed, 0x72, 0xbf, 0x6f, 0xc9, 0x3c, 0x34, 0x0f, 0x93, 0x3d, 0xdc, 0xee, 0x12, 0xa6, 0xa9,
	0x95, 0x4c, 0x35, 0x67, 0x49, 0xab, 0xf4, 0x0f, 0x4c, 0x09, 0xf8, 0x63, 0x61, 0x46, 0x60, 0xca,
	0x18, 0xcc, 0x96, 0xb0, 0x90, 0x15, 0xe5, 0x21, 0xd3, 0x22, 0x7d, 0x4d, 0xa9, 0x28, 0xd5, 0x9c,
	0x15, 0x7c, 0xa2, 0x5b, 0x90, 0x15, 0x50, 0x4d, 0xad, 0x28, 0xd7, 0x6b, 0x30, 0xac, 0x68, 0x85,
	0x69, 0x37, 0xd5, 0xff, 0x15, 0xe3, 0x00, 0x8a, 0x7b, 0x0e, 0xe3, 0xa3, 0xb4, 0x91, 0x00, 0x37,
	0x60, 0x6a, 0xa4, 0xf2, 0x40, 0x85, 0xa2, 0x29, 0x75, 0x34, 0xc7, 0xd3, 0xac, 0x28, 0xd6, 0x58,
	0x05, 0x6d, 0x93, 0x76, 0xdd, 0x44, 0xda, 0x39, 0xc8, 0xda, 0x41, 0x4c, 0x9c, 0x24, 0x6b, 0x85,
	0x86, 0xf1, 0x5e, 0x85, 0xe5, 0x58, 0x23, 0x4f, 0x1c, 0x7e, 0xf2, 0x20, 0xfc, 0x99, 0xbb, 0xee,
	0x11, 0x1d, 0x12, 0x1c, 0x25, 0xf5, 0xb5, 0x15, 0x1c, 0xfe, 0x7a, 0x04, 0x11, 0x8d, 0xe2, 0x88,
	0x28, 0x71, 0xe9, 0x9d, 0x02, 0x7f, 0xa6, 0x42, 0xd1, 0x7f, 0x00, 0x23, 0xb0, 0x38, 0xcb, 0x15,
	0xe2, 0x44, 0xa0, 0xe8, 0x00, 0x0a, 0x83, 0xd1, 0x3c, 0x64, 0x1c, 0xf3, 0x2e, 0x23, 0x4c, 0xcb,
	0x88, 0x43, 0xac, 0x0c, 0xf3, 0x37, 0xa9, 0xcb, 0xb1, 0xe3, 0x12, 0xff, 0x1e, 0xee, 0x90, 0x3b,
	0x6e, 0x73, 0x43, 0x66, 0xec, 0x8b, 0x04, 0x2b, 0xdf, 0x18, 0xb3, 0x09, 0xbb, 0x3b, 0xf1, 0x9b,
	0x9a, 0xcf, 0x18, 0x67, 0xf0, 0xd7, 0x0e, 0xe1, 0xe3, 0x4d, 0x5b, 0x0e, 0x6b, 0x0d, 0xb5, 0x5b,
	0x4f, 0xe8, 0x7a, 0x76, 0x58, 0x35, 0xa5, 0xe3, 0x25, 0x98, 0x08, 0x96, 0x46, 0x8e, 0xd9, 0xf4,
	0x10, 0x2e, 0x98, 0x45, 0xc8, 0xd8, 0x85, 0xe2, 0xf6, 0xb9, 0x47, 0xfd, 0xe8, 0xa1, 0xc9, 0x69,
	0x97, 0x30, 0x8e, 0x34, 0xf8, 0x95, 0x3b, 0x1d, 0x42, 0xbb, 0x83, 0x3f, 0x3e, 0x30, 0x83, 0x49,
	0x38, 0xed, 0x12, 0xbf, 0x2f, 0x88, 0x73, 0x56, 0x68, 0x18, 0xf7, 0x41, 0xfb, 0x91, 0xea, 0x27,
	0xda, 0x5f, 0xfb, 0x96, 0x85, 0xc2, 0x28, 0xb4, 0x1f, 0xde, 0x36, 0xe8, 0x00, 0xa6, 0xc7, 0xa4,
	0x42, 0xf9, 0x60, 0x82, 0x2c, 0xc2, 0x68, 0xd7, 0xb7, 0xc9, 0x46, 0x7f, 0x77, 0xab, 0x94, 0xc4,
	0x6c, 0x94, 0x2f, 0x3e, 0x7d, 0x7d, 0xa3, 0xce, 0xa3, 0xb9, 0xf1, 0xfb, 0x90, 0xd5, 0x5e, 0x3a,
	0xcd, 0x57, 0xc8, 0x87, 0x3f, 0x12, 0x7f, 0x40, 0x02, 0xfb, 0x52, 0xe0, 0xb9, 0xf2, 0x6f, 0x19,
	0x7f, 0x8b, 0x5a, 0x3a, 0x2a, 0xc7, 0x6a, 0x9d, 0x39, 0xfc, 0x24, 0x90, 0x3d, 0xac, 0xf9, 0x1c,
	0xf2, 0xf1, 0x65, 0x43, 0xbf, 0x8b, 0x72, 0xf8, 0xec, 0x61, 0x20, 0x69, 0xa9, 0x1c, 0x58, 0x69,
	0x0b, 0x99, 0x7a, 0x22, 0xb1, 0x98, 0xe8, 0x11, 0xcc, 0xc4, 0xd6, 0x2a, 0x46, 0xbe, 0x90, 0xb0,
	0x79, 0x43, 0xee, 0xa2, 0xe0, 0x2e, 0xa0, 0x99, 0x18, 0x37, 0xba, 0x50, 0x40, 0xbf, 0x7a, 0x5d,
	0x63, 0x65, 0xfe, 0xbd, 0xfe, 0x82, 0x1b, 0xcb, 0xa2, 0x6a, 0x05, 0xe9, 0x09, 0xba, 0xc9, 0xe7,
	0xc1, 0x09, 0x2a, 0xbc, 0x80, 0xdc, 0x0e, 0x91, 0x17, 0x25, 0xca, 0x05, 0x05, 0xb6, 0x83, 0x67,
	0x2a, 0xd4, 0x2b, 0xed, 0x26, 0x35, 0x56, 0x04, 0xfb, 0x12, 0x5a, 0x8c, 0x4f, 0x40, 0x87, 0x70,
	0xdc, 0xc4, 0x1c, 0xd7, 0xe4, 0xfd, 0xef, 0x41, 0x21, 0x3e, 0xc9, 0x0c, 0x09, 0xb9, 0x52, 0x76,
	0x25, 0x2c, 0x9c, 0x36, 0xfd, 0x86, 0x2e, 0x0a, 0x6b, 0x68, 0x5e, 0x3c, 0xa8, 0x02, 0x15, 0xad,
	0xbf, 0xaa, 0x6c, 0x98, 0x1f, 0x2e, 0x75, 0xe5, 0xe3, 0xa5, 0xae, 0x7c, 0xbe, 0xd4, 0x95, 0xb7,
	0x5f, 0xf4, 0x5f, 0x40, 0x73, 0xa8, 0xc9, 0x38, 0xb6, 0x5b, 0x3e, 0x3d, 0x0f, 0x5f, 0x3d, 0x13,
	0x7b, 0x8e, 0xd9, 0xab, 0x3f, 0x53, 0x7b, 0xf5, 0xa7, 0x99, 0xc6, 0xa4, 0xf0, 0xad, 0x7f, 0x0f,
	0x00, 0x00, 0xff, 0xff, 0xa4, 0xc2, 0xcd, 0xa6, 0xe2, 0x07, 0x00, 0x00,
}

func (m *DeploymentLabelsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeploymentLabelsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeploymentLabelsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Values) > 0 {
		for iNdEx := len(m.Values) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Values[iNdEx])
			copy(dAtA[i:], m.Values[iNdEx])
			i = encodeVarintDeploymentService(dAtA, i, uint64(len(m.Values[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Labels) > 0 {
		for k := range m.Labels {
			v := m.Labels[k]
			baseI := i
			if v != nil {
				{
					size, err := v.MarshalToSizedBuffer(dAtA[:i])
					if err != nil {
						return 0, err
					}
					i -= size
					i = encodeVarintDeploymentService(dAtA, i, uint64(size))
				}
				i--
				dAtA[i] = 0x12
			}
			i -= len(k)
			copy(dAtA[i:], k)
			i = encodeVarintDeploymentService(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = encodeVarintDeploymentService(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *DeploymentLabelsResponse_LabelValues) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeploymentLabelsResponse_LabelValues) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeploymentLabelsResponse_LabelValues) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Values) > 0 {
		for iNdEx := len(m.Values) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Values[iNdEx])
			copy(dAtA[i:], m.Values[iNdEx])
			i = encodeVarintDeploymentService(dAtA, i, uint64(len(m.Values[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ListDeploymentsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDeploymentsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListDeploymentsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Deployments) > 0 {
		for iNdEx := len(m.Deployments) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Deployments[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDeploymentService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *CountDeploymentsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CountDeploymentsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CountDeploymentsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Count != 0 {
		i = encodeVarintDeploymentService(dAtA, i, uint64(m.Count))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListDeploymentsWithProcessInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDeploymentsWithProcessInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListDeploymentsWithProcessInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Deployments) > 0 {
		for iNdEx := len(m.Deployments) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Deployments[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDeploymentService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.BaselineStatuses) > 0 {
		for iNdEx := len(m.BaselineStatuses) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BaselineStatuses[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDeploymentService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Deployment != nil {
		{
			size, err := m.Deployment.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDeploymentService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetDeploymentWithRiskResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetDeploymentWithRiskResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetDeploymentWithRiskResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Risk != nil {
		{
			size, err := m.Risk.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDeploymentService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Deployment != nil {
		{
			size, err := m.Deployment.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDeploymentService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ExportDeploymentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExportDeploymentRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExportDeploymentRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Query) > 0 {
		i -= len(m.Query)
		copy(dAtA[i:], m.Query)
		i = encodeVarintDeploymentService(dAtA, i, uint64(len(m.Query)))
		i--
		dAtA[i] = 0x12
	}
	if m.Timeout != 0 {
		i = encodeVarintDeploymentService(dAtA, i, uint64(m.Timeout))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ExportDeploymentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExportDeploymentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExportDeploymentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Deployment != nil {
		{
			size, err := m.Deployment.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDeploymentService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintDeploymentService(dAtA []byte, offset int, v uint64) int {
	offset -= sovDeploymentService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *DeploymentLabelsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Labels) > 0 {
		for k, v := range m.Labels {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovDeploymentService(uint64(l))
			}
			mapEntrySize := 1 + len(k) + sovDeploymentService(uint64(len(k))) + l
			n += mapEntrySize + 1 + sovDeploymentService(uint64(mapEntrySize))
		}
	}
	if len(m.Values) > 0 {
		for _, s := range m.Values {
			l = len(s)
			n += 1 + l + sovDeploymentService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeploymentLabelsResponse_LabelValues) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Values) > 0 {
		for _, s := range m.Values {
			l = len(s)
			n += 1 + l + sovDeploymentService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDeploymentsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Deployments) > 0 {
		for _, e := range m.Deployments {
			l = e.Size()
			n += 1 + l + sovDeploymentService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CountDeploymentsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Count != 0 {
		n += 1 + sovDeploymentService(uint64(m.Count))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDeploymentsWithProcessInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Deployments) > 0 {
		for _, e := range m.Deployments {
			l = e.Size()
			n += 1 + l + sovDeploymentService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Deployment != nil {
		l = m.Deployment.Size()
		n += 1 + l + sovDeploymentService(uint64(l))
	}
	if len(m.BaselineStatuses) > 0 {
		for _, e := range m.BaselineStatuses {
			l = e.Size()
			n += 1 + l + sovDeploymentService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetDeploymentWithRiskResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Deployment != nil {
		l = m.Deployment.Size()
		n += 1 + l + sovDeploymentService(uint64(l))
	}
	if m.Risk != nil {
		l = m.Risk.Size()
		n += 1 + l + sovDeploymentService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExportDeploymentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Timeout != 0 {
		n += 1 + sovDeploymentService(uint64(m.Timeout))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovDeploymentService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExportDeploymentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Deployment != nil {
		l = m.Deployment.Size()
		n += 1 + l + sovDeploymentService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovDeploymentService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDeploymentService(x uint64) (n int) {
	return sovDeploymentService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *DeploymentLabelsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeploymentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeploymentLabelsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeploymentLabelsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Labels", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Labels == nil {
				m.Labels = make(map[string]*DeploymentLabelsResponse_LabelValues)
			}
			var mapkey string
			var mapvalue *DeploymentLabelsResponse_LabelValues
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDeploymentService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDeploymentService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthDeploymentService
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthDeploymentService
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDeploymentService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthDeploymentService
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthDeploymentService
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &DeploymentLabelsResponse_LabelValues{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipDeploymentService(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthDeploymentService
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Labels[mapkey] = mapvalue
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Values", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeploymentService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Values = append(m.Values, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeploymentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeploymentLabelsResponse_LabelValues) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeploymentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LabelValues: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LabelValues: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Values", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeploymentService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Values = append(m.Values, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeploymentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDeploymentsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeploymentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListDeploymentsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListDeploymentsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deployments", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Deployments = append(m.Deployments, &storage.ListDeployment{})
			if err := m.Deployments[len(m.Deployments)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeploymentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CountDeploymentsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeploymentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CountDeploymentsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CountDeploymentsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			m.Count = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Count |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDeploymentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDeploymentsWithProcessInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeploymentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListDeploymentsWithProcessInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListDeploymentsWithProcessInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deployments", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Deployments = append(m.Deployments, &ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo{})
			if err := m.Deployments[len(m.Deployments)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeploymentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListDeploymentsWithProcessInfoResponse_DeploymentWithProcessInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeploymentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeploymentWithProcessInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeploymentWithProcessInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deployment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Deployment == nil {
				m.Deployment = &storage.ListDeployment{}
			}
			if err := m.Deployment.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaselineStatuses", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BaselineStatuses = append(m.BaselineStatuses, &storage.ContainerNameAndBaselineStatus{})
			if err := m.BaselineStatuses[len(m.BaselineStatuses)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeploymentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetDeploymentWithRiskResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeploymentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetDeploymentWithRiskResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetDeploymentWithRiskResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deployment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Deployment == nil {
				m.Deployment = &storage.Deployment{}
			}
			if err := m.Deployment.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Risk", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Risk == nil {
				m.Risk = &storage.Risk{}
			}
			if err := m.Risk.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeploymentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExportDeploymentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeploymentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExportDeploymentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExportDeploymentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timeout", wireType)
			}
			m.Timeout = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timeout |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDeploymentService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeploymentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExportDeploymentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDeploymentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExportDeploymentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExportDeploymentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deployment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDeploymentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDeploymentService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Deployment == nil {
				m.Deployment = &storage.Deployment{}
			}
			if err := m.Deployment.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDeploymentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDeploymentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDeploymentService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDeploymentService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDeploymentService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDeploymentService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDeploymentService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDeploymentService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDeploymentService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDeploymentService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDeploymentService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDeploymentService = fmt.Errorf("proto: unexpected end of group")
)
