{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/notifier_service.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/notifiers": {
      "get": {
        "summary": "GetNotifiers returns all notifier configurations.",
        "operationId": "NotifierService_GetNotifiers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetNotifiersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "NotifierService"
        ]
      },
      "post": {
        "summary": "PostNotifier creates a notifier configuration.",
        "operationId": "NotifierService_PostNotifier",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageNotifier"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageNotifier"
            }
          }
        ],
        "tags": [
          "NotifierService"
        ]
      }
    },
    "/v1/notifiers/test": {
      "post": {
        "summary": "TestNotifier checks if a notifier is correctly configured.",
        "operationId": "NotifierService_TestNotifier",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageNotifier"
            }
          }
        ],
        "tags": [
          "NotifierService"
        ]
      }
    },
    "/v1/notifiers/test/updated": {
      "post": {
        "summary": "TestUpdatedNotifier checks if the given notifier is correctly configured, with optional stored credential reconciliation.",
        "operationId": "NotifierService_TestUpdatedNotifier",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateNotifierRequest"
            }
          }
        ],
        "tags": [
          "NotifierService"
        ]
      }
    },
    "/v1/notifiers/{id}": {
      "get": {
        "summary": "GetNotifier returns the notifier configuration given its ID.",
        "operationId": "NotifierService_GetNotifier",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/storageNotifier"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "NotifierService"
        ]
      },
      "delete": {
        "summary": "DeleteNotifier removes a notifier configuration given its ID.",
        "operationId": "NotifierService_DeleteNotifier",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "NotifierService"
        ]
      },
      "put": {
        "summary": "PutNotifier modifies a given notifier, without using stored credential reconciliation.",
        "operationId": "NotifierService_PutNotifier",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/storageNotifier"
            }
          }
        ],
        "tags": [
          "NotifierService"
        ]
      }
    },
    "/v1/notifiers/{notifier.id}": {
      "patch": {
        "summary": "UpdateNotifier modifies a given notifier, with optional stored credential reconciliation.",
        "operationId": "NotifierService_UpdateNotifier",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Empty"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "notifier.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateNotifierRequest"
            }
          }
        ],
        "tags": [
          "NotifierService"
        ]
      }
    }
  },
  "definitions": {
    "AWSSecurityHubCredentials": {
      "type": "object",
      "properties": {
        "accessKeyId": {
          "type": "string"
        },
        "secretAccessKey": {
          "type": "string"
        }
      }
    },
    "EmailAuthMethod": {
      "type": "string",
      "enum": [
        "DISABLED",
        "PLAIN",
        "LOGIN"
      ],
      "default": "DISABLED"
    },
    "JiraPriorityMapping": {
      "type": "object",
      "properties": {
        "severity": {
          "$ref": "#/definitions/storageSeverity"
        },
        "priorityName": {
          "type": "string"
        }
      }
    },
    "SyslogLocalFacility": {
      "type": "string",
      "enum": [
        "LOCAL0",
        "LOCAL1",
        "LOCAL2",
        "LOCAL3",
        "LOCAL4",
        "LOCAL5",
        "LOCAL6",
        "LOCAL7"
      ],
      "default": "LOCAL0"
    },
    "SyslogMessageFormat": {
      "type": "string",
      "enum": [
        "LEGACY",
        "CEF"
      ],
      "default": "LEGACY"
    },
    "SyslogTCPConfig": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "skipTlsVerify": {
          "type": "boolean"
        },
        "useTls": {
          "type": "boolean"
        }
      }
    },
    "TraitsMutabilityMode": {
      "type": "string",
      "enum": [
        "ALLOW_MUTATE",
        "ALLOW_MUTATE_FORCED"
      ],
      "default": "ALLOW_MUTATE",
      "description": "EXPERIMENTAL.\nNOTE: Please refer from using MutabilityMode for the time being. It will be replaced in the future (ROX-14276).\nMutabilityMode specifies whether and how an object can be modified. Default\nis ALLOW_MUTATE and means there are no modification restrictions; this is equivalent\nto the absence of MutabilityMode specification. ALLOW_MUTATE_FORCED forbids all\nmodifying operations except object removal with force bit on.\n\nBe careful when changing the state of this field. For example, modifying an\nobject from ALLOW_MUTATE to ALLOW_MUTATE_FORCED is allowed but will prohibit any further\nchanges to it, including modifying it back to ALLOW_MUTATE."
    },
    "TraitsOrigin": {
      "type": "string",
      "enum": [
        "IMPERATIVE",
        "DEFAULT",
        "DECLARATIVE",
        "DECLARATIVE_ORPHANED"
      ],
      "default": "IMPERATIVE",
      "description": "Origin specifies the origin of an object.\nObjects can have four different origins:\n- IMPERATIVE: the object was created via the API. This is assumed by default.\n- DEFAULT: the object is a default object, such as default roles, access scopes etc.\n- DECLARATIVE: the object is created via declarative configuration.\n- DECLARATIVE_ORPHANED: the object is created via declarative configuration and then unsuccessfully deleted(for example, because it is referenced by another object)\nBased on the origin, different rules apply to the objects.\nObjects with the DECLARATIVE origin are not allowed to be modified via API, only via declarative configuration.\nAdditionally, they may not reference objects with the IMPERATIVE origin.\nObjects with the DEFAULT origin are not allowed to be modified via either API or declarative configuration.\nThey may be referenced by all other objects.\nObjects with the IMPERATIVE origin are allowed to be modified via API, not via declarative configuration.\nThey may reference all other objects.\nObjects with the DECLARATIVE_ORPHANED origin are not allowed to be modified via either API or declarative configuration.\nDECLARATIVE_ORPHANED resource can become DECLARATIVE again if it is redefined in declarative configuration.\nObjects with this origin will be cleaned up from the system immediately after they are not referenced by other resources anymore.\nThey may be referenced by all other objects."
    },
    "TraitsVisibility": {
      "type": "string",
      "enum": [
        "VISIBLE",
        "HIDDEN"
      ],
      "default": "VISIBLE",
      "description": "EXPERIMENTAL.\nvisibility allows to specify whether the object should be visible for certain APIs."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "storageAWSSecurityHub": {
      "type": "object",
      "properties": {
        "region": {
          "type": "string"
        },
        "credentials": {
          "$ref": "#/definitions/AWSSecurityHubCredentials"
        },
        "accountId": {
          "type": "string"
        }
      }
    },
    "storageCSCC": {
      "type": "object",
      "properties": {
        "serviceAccount": {
          "type": "string",
          "description": "The service account for the integration. The server will mask the value of this credential in responses and logs."
        },
        "sourceId": {
          "type": "string"
        }
      }
    },
    "storageEmail": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string"
        },
        "sender": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "The password for the integration. The server will mask the value of this credential in responses and logs."
        },
        "disableTLS": {
          "type": "boolean"
        },
        "DEPRECATEDUseStartTLS": {
          "type": "boolean"
        },
        "from": {
          "type": "string"
        },
        "startTLSAuthMethod": {
          "$ref": "#/definitions/EmailAuthMethod"
        },
        "allowUnauthenticatedSmtp": {
          "type": "boolean",
          "title": "Set to true to allow unauthenticated SMTP"
        }
      }
    },
    "storageGeneric": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "skipTLSVerify": {
          "type": "boolean"
        },
        "caCert": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "The password for the integration. The server will mask the value of this credential in responses and logs."
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageKeyValuePair"
          }
        },
        "extraFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageKeyValuePair"
          }
        },
        "auditLoggingEnabled": {
          "type": "boolean"
        }
      }
    },
    "storageJira": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "The password for the integration. The server will mask the value of this credential in responses and logs."
        },
        "issueType": {
          "type": "string"
        },
        "priorityMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JiraPriorityMapping"
          }
        },
        "defaultFieldsJson": {
          "type": "string"
        },
        "disablePriority": {
          "type": "boolean"
        }
      }
    },
    "storageKeyValuePair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "storageNotifier": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uiEndpoint": {
          "type": "string"
        },
        "labelKey": {
          "type": "string"
        },
        "labelDefault": {
          "type": "string"
        },
        "jira": {
          "$ref": "#/definitions/storageJira"
        },
        "email": {
          "$ref": "#/definitions/storageEmail"
        },
        "cscc": {
          "$ref": "#/definitions/storageCSCC"
        },
        "splunk": {
          "$ref": "#/definitions/storageSplunk"
        },
        "pagerduty": {
          "$ref": "#/definitions/storagePagerDuty"
        },
        "generic": {
          "$ref": "#/definitions/storageGeneric"
        },
        "sumologic": {
          "$ref": "#/definitions/storageSumoLogic"
        },
        "awsSecurityHub": {
          "$ref": "#/definitions/storageAWSSecurityHub"
        },
        "syslog": {
          "$ref": "#/definitions/storageSyslog"
        },
        "notifierSecret": {
          "type": "string"
        },
        "traits": {
          "$ref": "#/definitions/storageTraits"
        }
      },
      "title": "Next Tag: 19"
    },
    "storagePagerDuty": {
      "type": "object",
      "properties": {
        "apiKey": {
          "type": "string",
          "description": "The API key for the integration. The server will mask the value of this credential in responses and logs."
        }
      }
    },
    "storageSeverity": {
      "type": "string",
      "enum": [
        "UNSET_SEVERITY",
        "LOW_SEVERITY",
        "MEDIUM_SEVERITY",
        "HIGH_SEVERITY",
        "CRITICAL_SEVERITY"
      ],
      "default": "UNSET_SEVERITY"
    },
    "storageSplunk": {
      "type": "object",
      "properties": {
        "httpToken": {
          "type": "string",
          "description": "The HTTP token for the integration. The server will mask the value of this credential in responses and logs."
        },
        "httpEndpoint": {
          "type": "string"
        },
        "insecure": {
          "type": "boolean"
        },
        "truncate": {
          "type": "string",
          "format": "int64"
        },
        "auditLoggingEnabled": {
          "type": "boolean"
        },
        "derivedSourceType": {
          "type": "boolean",
          "title": "derived_source_type is deprecated in lieu of source_types"
        },
        "sourceTypes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "storageSumoLogic": {
      "type": "object",
      "properties": {
        "httpSourceAddress": {
          "type": "string"
        },
        "skipTLSVerify": {
          "type": "boolean"
        }
      }
    },
    "storageSyslog": {
      "type": "object",
      "properties": {
        "localFacility": {
          "$ref": "#/definitions/SyslogLocalFacility"
        },
        "tcpConfig": {
          "$ref": "#/definitions/SyslogTCPConfig"
        },
        "extraFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageKeyValuePair"
          }
        },
        "messageFormat": {
          "$ref": "#/definitions/SyslogMessageFormat"
        }
      }
    },
    "storageTraits": {
      "type": "object",
      "properties": {
        "mutabilityMode": {
          "$ref": "#/definitions/TraitsMutabilityMode"
        },
        "visibility": {
          "$ref": "#/definitions/TraitsVisibility"
        },
        "origin": {
          "$ref": "#/definitions/TraitsOrigin"
        }
      }
    },
    "v1Empty": {
      "type": "object"
    },
    "v1GetNotifiersResponse": {
      "type": "object",
      "properties": {
        "notifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/storageNotifier"
          }
        }
      }
    },
    "v1UpdateNotifierRequest": {
      "type": "object",
      "properties": {
        "notifier": {
          "$ref": "#/definitions/storageNotifier"
        },
        "updatePassword": {
          "type": "boolean",
          "description": "When false, use the stored credentials of an existing notifier configuration given its ID."
        }
      }
    }
  }
}
