// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/v1/policy_service.proto

//go:build protoopaque

package v1

import (
	storage "github.com/stackrox/rox/generated/storage"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DryRunResponse struct {
	state             protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Alerts *[]*DryRunResponse_Alert `protobuf:"bytes,1,rep,name=alerts"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DryRunResponse) Reset() {
	*x = DryRunResponse{}
	mi := &file_api_v1_policy_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DryRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DryRunResponse) ProtoMessage() {}

func (x *DryRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DryRunResponse) GetAlerts() []*DryRunResponse_Alert {
	if x != nil {
		if x.xxx_hidden_Alerts != nil {
			return *x.xxx_hidden_Alerts
		}
	}
	return nil
}

func (x *DryRunResponse) SetAlerts(v []*DryRunResponse_Alert) {
	x.xxx_hidden_Alerts = &v
}

type DryRunResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Alerts []*DryRunResponse_Alert
}

func (b0 DryRunResponse_builder) Build() *DryRunResponse {
	m0 := &DryRunResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Alerts = &b.Alerts
	return m0
}

type JobId struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_JobId       *string                `protobuf:"bytes,1,opt,name=job_id,json=jobId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *JobId) Reset() {
	*x = JobId{}
	mi := &file_api_v1_policy_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobId) ProtoMessage() {}

func (x *JobId) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *JobId) GetJobId() string {
	if x != nil {
		if x.xxx_hidden_JobId != nil {
			return *x.xxx_hidden_JobId
		}
		return ""
	}
	return ""
}

func (x *JobId) SetJobId(v string) {
	x.xxx_hidden_JobId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *JobId) HasJobId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *JobId) ClearJobId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_JobId = nil
}

type JobId_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	JobId *string
}

func (b0 JobId_builder) Build() *JobId {
	m0 := &JobId{}
	b, x := &b0, m0
	_, _ = b, x
	if b.JobId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_JobId = b.JobId
	}
	return m0
}

type DryRunJobStatusResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Pending     bool                   `protobuf:"varint,1,opt,name=pending"`
	xxx_hidden_Result      *DryRunResponse        `protobuf:"bytes,2,opt,name=result"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DryRunJobStatusResponse) Reset() {
	*x = DryRunJobStatusResponse{}
	mi := &file_api_v1_policy_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DryRunJobStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DryRunJobStatusResponse) ProtoMessage() {}

func (x *DryRunJobStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DryRunJobStatusResponse) GetPending() bool {
	if x != nil {
		return x.xxx_hidden_Pending
	}
	return false
}

func (x *DryRunJobStatusResponse) GetResult() *DryRunResponse {
	if x != nil {
		return x.xxx_hidden_Result
	}
	return nil
}

func (x *DryRunJobStatusResponse) SetPending(v bool) {
	x.xxx_hidden_Pending = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DryRunJobStatusResponse) SetResult(v *DryRunResponse) {
	x.xxx_hidden_Result = v
}

func (x *DryRunJobStatusResponse) HasPending() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DryRunJobStatusResponse) HasResult() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Result != nil
}

func (x *DryRunJobStatusResponse) ClearPending() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Pending = false
}

func (x *DryRunJobStatusResponse) ClearResult() {
	x.xxx_hidden_Result = nil
}

type DryRunJobStatusResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Pending *bool
	Result  *DryRunResponse
}

func (b0 DryRunJobStatusResponse_builder) Build() *DryRunJobStatusResponse {
	m0 := &DryRunJobStatusResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Pending != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Pending = *b.Pending
	}
	x.xxx_hidden_Result = b.Result
	return m0
}

type PolicyCategoriesResponse struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Categories []string               `protobuf:"bytes,1,rep,name=categories"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PolicyCategoriesResponse) Reset() {
	*x = PolicyCategoriesResponse{}
	mi := &file_api_v1_policy_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyCategoriesResponse) ProtoMessage() {}

func (x *PolicyCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PolicyCategoriesResponse) GetCategories() []string {
	if x != nil {
		return x.xxx_hidden_Categories
	}
	return nil
}

func (x *PolicyCategoriesResponse) SetCategories(v []string) {
	x.xxx_hidden_Categories = v
}

type PolicyCategoriesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Categories []string
}

func (b0 PolicyCategoriesResponse_builder) Build() *PolicyCategoriesResponse {
	m0 := &PolicyCategoriesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Categories = b.Categories
	return m0
}

type EnableDisablePolicyNotificationRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PolicyId    *string                `protobuf:"bytes,1,opt,name=policy_id,json=policyId"`
	xxx_hidden_NotifierIds []string               `protobuf:"bytes,2,rep,name=notifier_ids,json=notifierIds"`
	xxx_hidden_Disable     bool                   `protobuf:"varint,3,opt,name=disable"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *EnableDisablePolicyNotificationRequest) Reset() {
	*x = EnableDisablePolicyNotificationRequest{}
	mi := &file_api_v1_policy_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableDisablePolicyNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableDisablePolicyNotificationRequest) ProtoMessage() {}

func (x *EnableDisablePolicyNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EnableDisablePolicyNotificationRequest) GetPolicyId() string {
	if x != nil {
		if x.xxx_hidden_PolicyId != nil {
			return *x.xxx_hidden_PolicyId
		}
		return ""
	}
	return ""
}

func (x *EnableDisablePolicyNotificationRequest) GetNotifierIds() []string {
	if x != nil {
		return x.xxx_hidden_NotifierIds
	}
	return nil
}

func (x *EnableDisablePolicyNotificationRequest) GetDisable() bool {
	if x != nil {
		return x.xxx_hidden_Disable
	}
	return false
}

func (x *EnableDisablePolicyNotificationRequest) SetPolicyId(v string) {
	x.xxx_hidden_PolicyId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *EnableDisablePolicyNotificationRequest) SetNotifierIds(v []string) {
	x.xxx_hidden_NotifierIds = v
}

func (x *EnableDisablePolicyNotificationRequest) SetDisable(v bool) {
	x.xxx_hidden_Disable = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *EnableDisablePolicyNotificationRequest) HasPolicyId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *EnableDisablePolicyNotificationRequest) HasDisable() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *EnableDisablePolicyNotificationRequest) ClearPolicyId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PolicyId = nil
}

func (x *EnableDisablePolicyNotificationRequest) ClearDisable() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Disable = false
}

type EnableDisablePolicyNotificationRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PolicyId    *string
	NotifierIds []string
	Disable     *bool
}

func (b0 EnableDisablePolicyNotificationRequest_builder) Build() *EnableDisablePolicyNotificationRequest {
	m0 := &EnableDisablePolicyNotificationRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PolicyId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_PolicyId = b.PolicyId
	}
	x.xxx_hidden_NotifierIds = b.NotifierIds
	if b.Disable != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Disable = *b.Disable
	}
	return m0
}

type ListPoliciesResponse struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Policies *[]*storage.ListPolicy `protobuf:"bytes,1,rep,name=policies"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListPoliciesResponse) Reset() {
	*x = ListPoliciesResponse{}
	mi := &file_api_v1_policy_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesResponse) ProtoMessage() {}

func (x *ListPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListPoliciesResponse) GetPolicies() []*storage.ListPolicy {
	if x != nil {
		if x.xxx_hidden_Policies != nil {
			return *x.xxx_hidden_Policies
		}
	}
	return nil
}

func (x *ListPoliciesResponse) SetPolicies(v []*storage.ListPolicy) {
	x.xxx_hidden_Policies = &v
}

type ListPoliciesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Policies []*storage.ListPolicy
}

func (b0 ListPoliciesResponse_builder) Build() *ListPoliciesResponse {
	m0 := &ListPoliciesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Policies = &b.Policies
	return m0
}

type PostPolicyRequest struct {
	state                             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Policy                 *storage.Policy        `protobuf:"bytes,1,opt,name=policy"`
	xxx_hidden_EnableStrictValidation bool                   `protobuf:"varint,2,opt,name=enable_strict_validation,json=enableStrictValidation"`
	XXX_raceDetectHookData            protoimpl.RaceDetectHookData
	XXX_presence                      [1]uint32
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *PostPolicyRequest) Reset() {
	*x = PostPolicyRequest{}
	mi := &file_api_v1_policy_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostPolicyRequest) ProtoMessage() {}

func (x *PostPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PostPolicyRequest) GetPolicy() *storage.Policy {
	if x != nil {
		return x.xxx_hidden_Policy
	}
	return nil
}

func (x *PostPolicyRequest) GetEnableStrictValidation() bool {
	if x != nil {
		return x.xxx_hidden_EnableStrictValidation
	}
	return false
}

func (x *PostPolicyRequest) SetPolicy(v *storage.Policy) {
	x.xxx_hidden_Policy = v
}

func (x *PostPolicyRequest) SetEnableStrictValidation(v bool) {
	x.xxx_hidden_EnableStrictValidation = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *PostPolicyRequest) HasPolicy() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Policy != nil
}

func (x *PostPolicyRequest) HasEnableStrictValidation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *PostPolicyRequest) ClearPolicy() {
	x.xxx_hidden_Policy = nil
}

func (x *PostPolicyRequest) ClearEnableStrictValidation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_EnableStrictValidation = false
}

type PostPolicyRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Policy                 *storage.Policy
	EnableStrictValidation *bool
}

func (b0 PostPolicyRequest_builder) Build() *PostPolicyRequest {
	m0 := &PostPolicyRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Policy = b.Policy
	if b.EnableStrictValidation != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_EnableStrictValidation = *b.EnableStrictValidation
	}
	return m0
}

type PatchPolicyRequest struct {
	state                  protoimpl.MessageState           `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                          `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_SetDisabled isPatchPolicyRequest_SetDisabled `protobuf_oneof:"set_disabled"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PatchPolicyRequest) Reset() {
	*x = PatchPolicyRequest{}
	mi := &file_api_v1_policy_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatchPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchPolicyRequest) ProtoMessage() {}

func (x *PatchPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PatchPolicyRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *PatchPolicyRequest) GetDisabled() bool {
	if x != nil {
		if x, ok := x.xxx_hidden_SetDisabled.(*patchPolicyRequest_Disabled); ok {
			return x.Disabled
		}
	}
	return false
}

func (x *PatchPolicyRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *PatchPolicyRequest) SetDisabled(v bool) {
	x.xxx_hidden_SetDisabled = &patchPolicyRequest_Disabled{v}
}

func (x *PatchPolicyRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PatchPolicyRequest) HasSetDisabled() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SetDisabled != nil
}

func (x *PatchPolicyRequest) HasDisabled() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_SetDisabled.(*patchPolicyRequest_Disabled)
	return ok
}

func (x *PatchPolicyRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *PatchPolicyRequest) ClearSetDisabled() {
	x.xxx_hidden_SetDisabled = nil
}

func (x *PatchPolicyRequest) ClearDisabled() {
	if _, ok := x.xxx_hidden_SetDisabled.(*patchPolicyRequest_Disabled); ok {
		x.xxx_hidden_SetDisabled = nil
	}
}

const PatchPolicyRequest_SetDisabled_not_set_case case_PatchPolicyRequest_SetDisabled = 0
const PatchPolicyRequest_Disabled_case case_PatchPolicyRequest_SetDisabled = 2

func (x *PatchPolicyRequest) WhichSetDisabled() case_PatchPolicyRequest_SetDisabled {
	if x == nil {
		return PatchPolicyRequest_SetDisabled_not_set_case
	}
	switch x.xxx_hidden_SetDisabled.(type) {
	case *patchPolicyRequest_Disabled:
		return PatchPolicyRequest_Disabled_case
	default:
		return PatchPolicyRequest_SetDisabled_not_set_case
	}
}

type PatchPolicyRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *string
	// Fields of oneof xxx_hidden_SetDisabled:
	Disabled *bool
	// -- end of xxx_hidden_SetDisabled
}

func (b0 PatchPolicyRequest_builder) Build() *PatchPolicyRequest {
	m0 := &PatchPolicyRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Disabled != nil {
		x.xxx_hidden_SetDisabled = &patchPolicyRequest_Disabled{*b.Disabled}
	}
	return m0
}

type case_PatchPolicyRequest_SetDisabled protoreflect.FieldNumber

func (x case_PatchPolicyRequest_SetDisabled) String() string {
	md := file_api_v1_policy_service_proto_msgTypes[7].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isPatchPolicyRequest_SetDisabled interface {
	isPatchPolicyRequest_SetDisabled()
}

type patchPolicyRequest_Disabled struct {
	Disabled bool `protobuf:"varint,2,opt,name=disabled,oneof"`
}

func (*patchPolicyRequest_Disabled) isPatchPolicyRequest_SetDisabled() {}

type ExportPoliciesRequest struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PolicyIds []string               `protobuf:"bytes,1,rep,name=policy_ids,json=policyIds"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ExportPoliciesRequest) Reset() {
	*x = ExportPoliciesRequest{}
	mi := &file_api_v1_policy_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportPoliciesRequest) ProtoMessage() {}

func (x *ExportPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExportPoliciesRequest) GetPolicyIds() []string {
	if x != nil {
		return x.xxx_hidden_PolicyIds
	}
	return nil
}

func (x *ExportPoliciesRequest) SetPolicyIds(v []string) {
	x.xxx_hidden_PolicyIds = v
}

type ExportPoliciesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PolicyIds []string
}

func (b0 ExportPoliciesRequest_builder) Build() *ExportPoliciesRequest {
	m0 := &ExportPoliciesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_PolicyIds = b.PolicyIds
	return m0
}

type PolicyError struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Error       *string                `protobuf:"bytes,1,opt,name=error"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PolicyError) Reset() {
	*x = PolicyError{}
	mi := &file_api_v1_policy_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyError) ProtoMessage() {}

func (x *PolicyError) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PolicyError) GetError() string {
	if x != nil {
		if x.xxx_hidden_Error != nil {
			return *x.xxx_hidden_Error
		}
		return ""
	}
	return ""
}

func (x *PolicyError) SetError(v string) {
	x.xxx_hidden_Error = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *PolicyError) HasError() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PolicyError) ClearError() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Error = nil
}

type PolicyError_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Error *string
}

func (b0 PolicyError_builder) Build() *PolicyError {
	m0 := &PolicyError{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Error != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Error = b.Error
	}
	return m0
}

type PolicyOperationError struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PolicyId    *string                `protobuf:"bytes,1,opt,name=policy_id,json=policyId"`
	xxx_hidden_Error       *PolicyError           `protobuf:"bytes,2,opt,name=error"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PolicyOperationError) Reset() {
	*x = PolicyOperationError{}
	mi := &file_api_v1_policy_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyOperationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyOperationError) ProtoMessage() {}

func (x *PolicyOperationError) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PolicyOperationError) GetPolicyId() string {
	if x != nil {
		if x.xxx_hidden_PolicyId != nil {
			return *x.xxx_hidden_PolicyId
		}
		return ""
	}
	return ""
}

func (x *PolicyOperationError) GetError() *PolicyError {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return nil
}

func (x *PolicyOperationError) SetPolicyId(v string) {
	x.xxx_hidden_PolicyId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *PolicyOperationError) SetError(v *PolicyError) {
	x.xxx_hidden_Error = v
}

func (x *PolicyOperationError) HasPolicyId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PolicyOperationError) HasError() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Error != nil
}

func (x *PolicyOperationError) ClearPolicyId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PolicyId = nil
}

func (x *PolicyOperationError) ClearError() {
	x.xxx_hidden_Error = nil
}

type PolicyOperationError_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PolicyId *string
	Error    *PolicyError
}

func (b0 PolicyOperationError_builder) Build() *PolicyOperationError {
	m0 := &PolicyOperationError{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PolicyId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_PolicyId = b.PolicyId
	}
	x.xxx_hidden_Error = b.Error
	return m0
}

type PolicyOperationErrorList struct {
	state             protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Errors *[]*PolicyOperationError `protobuf:"bytes,1,rep,name=errors"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PolicyOperationErrorList) Reset() {
	*x = PolicyOperationErrorList{}
	mi := &file_api_v1_policy_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyOperationErrorList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyOperationErrorList) ProtoMessage() {}

func (x *PolicyOperationErrorList) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PolicyOperationErrorList) GetErrors() []*PolicyOperationError {
	if x != nil {
		if x.xxx_hidden_Errors != nil {
			return *x.xxx_hidden_Errors
		}
	}
	return nil
}

func (x *PolicyOperationErrorList) SetErrors(v []*PolicyOperationError) {
	x.xxx_hidden_Errors = &v
}

type PolicyOperationErrorList_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Errors []*PolicyOperationError
}

func (b0 PolicyOperationErrorList_builder) Build() *PolicyOperationErrorList {
	m0 := &PolicyOperationErrorList{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Errors = &b.Errors
	return m0
}

type PolicyFromSearchRequest struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SearchParams *string                `protobuf:"bytes,1,opt,name=search_params,json=searchParams"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *PolicyFromSearchRequest) Reset() {
	*x = PolicyFromSearchRequest{}
	mi := &file_api_v1_policy_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyFromSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyFromSearchRequest) ProtoMessage() {}

func (x *PolicyFromSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PolicyFromSearchRequest) GetSearchParams() string {
	if x != nil {
		if x.xxx_hidden_SearchParams != nil {
			return *x.xxx_hidden_SearchParams
		}
		return ""
	}
	return ""
}

func (x *PolicyFromSearchRequest) SetSearchParams(v string) {
	x.xxx_hidden_SearchParams = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *PolicyFromSearchRequest) HasSearchParams() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PolicyFromSearchRequest) ClearSearchParams() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SearchParams = nil
}

type PolicyFromSearchRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SearchParams *string
}

func (b0 PolicyFromSearchRequest_builder) Build() *PolicyFromSearchRequest {
	m0 := &PolicyFromSearchRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SearchParams != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_SearchParams = b.SearchParams
	}
	return m0
}

type ImportPoliciesMetadata struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Overwrite   bool                   `protobuf:"varint,1,opt,name=overwrite"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ImportPoliciesMetadata) Reset() {
	*x = ImportPoliciesMetadata{}
	mi := &file_api_v1_policy_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportPoliciesMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPoliciesMetadata) ProtoMessage() {}

func (x *ImportPoliciesMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ImportPoliciesMetadata) GetOverwrite() bool {
	if x != nil {
		return x.xxx_hidden_Overwrite
	}
	return false
}

func (x *ImportPoliciesMetadata) SetOverwrite(v bool) {
	x.xxx_hidden_Overwrite = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ImportPoliciesMetadata) HasOverwrite() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ImportPoliciesMetadata) ClearOverwrite() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Overwrite = false
}

type ImportPoliciesMetadata_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Overwrite *bool
}

func (b0 ImportPoliciesMetadata_builder) Build() *ImportPoliciesMetadata {
	m0 := &ImportPoliciesMetadata{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Overwrite != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Overwrite = *b.Overwrite
	}
	return m0
}

type ImportPoliciesRequest struct {
	state               protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Metadata *ImportPoliciesMetadata `protobuf:"bytes,1,opt,name=metadata"`
	xxx_hidden_Policies *[]*storage.Policy      `protobuf:"bytes,2,rep,name=policies"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ImportPoliciesRequest) Reset() {
	*x = ImportPoliciesRequest{}
	mi := &file_api_v1_policy_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPoliciesRequest) ProtoMessage() {}

func (x *ImportPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ImportPoliciesRequest) GetMetadata() *ImportPoliciesMetadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *ImportPoliciesRequest) GetPolicies() []*storage.Policy {
	if x != nil {
		if x.xxx_hidden_Policies != nil {
			return *x.xxx_hidden_Policies
		}
	}
	return nil
}

func (x *ImportPoliciesRequest) SetMetadata(v *ImportPoliciesMetadata) {
	x.xxx_hidden_Metadata = v
}

func (x *ImportPoliciesRequest) SetPolicies(v []*storage.Policy) {
	x.xxx_hidden_Policies = &v
}

func (x *ImportPoliciesRequest) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *ImportPoliciesRequest) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

type ImportPoliciesRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Metadata *ImportPoliciesMetadata
	Policies []*storage.Policy
}

func (b0 ImportPoliciesRequest_builder) Build() *ImportPoliciesRequest {
	m0 := &ImportPoliciesRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Metadata = b.Metadata
	x.xxx_hidden_Policies = &b.Policies
	return m0
}

type ImportPolicyError struct {
	state                  protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_Message     *string                      `protobuf:"bytes,1,opt,name=message"`
	xxx_hidden_Type        *string                      `protobuf:"bytes,2,opt,name=type"`
	xxx_hidden_Metadata    isImportPolicyError_Metadata `protobuf_oneof:"metadata"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ImportPolicyError) Reset() {
	*x = ImportPolicyError{}
	mi := &file_api_v1_policy_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportPolicyError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPolicyError) ProtoMessage() {}

func (x *ImportPolicyError) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ImportPolicyError) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *ImportPolicyError) GetType() string {
	if x != nil {
		if x.xxx_hidden_Type != nil {
			return *x.xxx_hidden_Type
		}
		return ""
	}
	return ""
}

func (x *ImportPolicyError) GetDuplicateName() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Metadata.(*importPolicyError_DuplicateName); ok {
			return x.DuplicateName
		}
	}
	return ""
}

func (x *ImportPolicyError) GetValidationError() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Metadata.(*importPolicyError_ValidationError); ok {
			return x.ValidationError
		}
	}
	return ""
}

func (x *ImportPolicyError) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ImportPolicyError) SetType(v string) {
	x.xxx_hidden_Type = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ImportPolicyError) SetDuplicateName(v string) {
	x.xxx_hidden_Metadata = &importPolicyError_DuplicateName{v}
}

func (x *ImportPolicyError) SetValidationError(v string) {
	x.xxx_hidden_Metadata = &importPolicyError_ValidationError{v}
}

func (x *ImportPolicyError) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ImportPolicyError) HasType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ImportPolicyError) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *ImportPolicyError) HasDuplicateName() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Metadata.(*importPolicyError_DuplicateName)
	return ok
}

func (x *ImportPolicyError) HasValidationError() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Metadata.(*importPolicyError_ValidationError)
	return ok
}

func (x *ImportPolicyError) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Message = nil
}

func (x *ImportPolicyError) ClearType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Type = nil
}

func (x *ImportPolicyError) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *ImportPolicyError) ClearDuplicateName() {
	if _, ok := x.xxx_hidden_Metadata.(*importPolicyError_DuplicateName); ok {
		x.xxx_hidden_Metadata = nil
	}
}

func (x *ImportPolicyError) ClearValidationError() {
	if _, ok := x.xxx_hidden_Metadata.(*importPolicyError_ValidationError); ok {
		x.xxx_hidden_Metadata = nil
	}
}

const ImportPolicyError_Metadata_not_set_case case_ImportPolicyError_Metadata = 0
const ImportPolicyError_DuplicateName_case case_ImportPolicyError_Metadata = 3
const ImportPolicyError_ValidationError_case case_ImportPolicyError_Metadata = 4

func (x *ImportPolicyError) WhichMetadata() case_ImportPolicyError_Metadata {
	if x == nil {
		return ImportPolicyError_Metadata_not_set_case
	}
	switch x.xxx_hidden_Metadata.(type) {
	case *importPolicyError_DuplicateName:
		return ImportPolicyError_DuplicateName_case
	case *importPolicyError_ValidationError:
		return ImportPolicyError_ValidationError_case
	default:
		return ImportPolicyError_Metadata_not_set_case
	}
}

type ImportPolicyError_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Message *string
	Type    *string
	// Fields of oneof xxx_hidden_Metadata:
	DuplicateName   *string
	ValidationError *string
	// -- end of xxx_hidden_Metadata
}

func (b0 ImportPolicyError_builder) Build() *ImportPolicyError {
	m0 := &ImportPolicyError{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Message = b.Message
	}
	if b.Type != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Type = b.Type
	}
	if b.DuplicateName != nil {
		x.xxx_hidden_Metadata = &importPolicyError_DuplicateName{*b.DuplicateName}
	}
	if b.ValidationError != nil {
		x.xxx_hidden_Metadata = &importPolicyError_ValidationError{*b.ValidationError}
	}
	return m0
}

type case_ImportPolicyError_Metadata protoreflect.FieldNumber

func (x case_ImportPolicyError_Metadata) String() string {
	md := file_api_v1_policy_service_proto_msgTypes[15].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isImportPolicyError_Metadata interface {
	isImportPolicyError_Metadata()
}

type importPolicyError_DuplicateName struct {
	DuplicateName string `protobuf:"bytes,3,opt,name=duplicate_name,json=duplicateName,oneof"`
}

type importPolicyError_ValidationError struct {
	ValidationError string `protobuf:"bytes,4,opt,name=validation_error,json=validationError,oneof"`
}

func (*importPolicyError_DuplicateName) isImportPolicyError_Metadata() {}

func (*importPolicyError_ValidationError) isImportPolicyError_Metadata() {}

type ImportPolicyResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Succeeded   bool                   `protobuf:"varint,1,opt,name=succeeded"`
	xxx_hidden_Policy      *storage.Policy        `protobuf:"bytes,2,opt,name=policy"`
	xxx_hidden_Errors      *[]*ImportPolicyError  `protobuf:"bytes,3,rep,name=errors"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ImportPolicyResponse) Reset() {
	*x = ImportPolicyResponse{}
	mi := &file_api_v1_policy_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPolicyResponse) ProtoMessage() {}

func (x *ImportPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ImportPolicyResponse) GetSucceeded() bool {
	if x != nil {
		return x.xxx_hidden_Succeeded
	}
	return false
}

func (x *ImportPolicyResponse) GetPolicy() *storage.Policy {
	if x != nil {
		return x.xxx_hidden_Policy
	}
	return nil
}

func (x *ImportPolicyResponse) GetErrors() []*ImportPolicyError {
	if x != nil {
		if x.xxx_hidden_Errors != nil {
			return *x.xxx_hidden_Errors
		}
	}
	return nil
}

func (x *ImportPolicyResponse) SetSucceeded(v bool) {
	x.xxx_hidden_Succeeded = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ImportPolicyResponse) SetPolicy(v *storage.Policy) {
	x.xxx_hidden_Policy = v
}

func (x *ImportPolicyResponse) SetErrors(v []*ImportPolicyError) {
	x.xxx_hidden_Errors = &v
}

func (x *ImportPolicyResponse) HasSucceeded() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ImportPolicyResponse) HasPolicy() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Policy != nil
}

func (x *ImportPolicyResponse) ClearSucceeded() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Succeeded = false
}

func (x *ImportPolicyResponse) ClearPolicy() {
	x.xxx_hidden_Policy = nil
}

type ImportPolicyResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Succeeded *bool
	Policy    *storage.Policy
	Errors    []*ImportPolicyError
}

func (b0 ImportPolicyResponse_builder) Build() *ImportPolicyResponse {
	m0 := &ImportPolicyResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Succeeded != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Succeeded = *b.Succeeded
	}
	x.xxx_hidden_Policy = b.Policy
	x.xxx_hidden_Errors = &b.Errors
	return m0
}

type ImportPoliciesResponse struct {
	state                   protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Responses    *[]*ImportPolicyResponse `protobuf:"bytes,1,rep,name=responses"`
	xxx_hidden_AllSucceeded bool                     `protobuf:"varint,2,opt,name=all_succeeded,json=allSucceeded"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ImportPoliciesResponse) Reset() {
	*x = ImportPoliciesResponse{}
	mi := &file_api_v1_policy_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportPoliciesResponse) ProtoMessage() {}

func (x *ImportPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ImportPoliciesResponse) GetResponses() []*ImportPolicyResponse {
	if x != nil {
		if x.xxx_hidden_Responses != nil {
			return *x.xxx_hidden_Responses
		}
	}
	return nil
}

func (x *ImportPoliciesResponse) GetAllSucceeded() bool {
	if x != nil {
		return x.xxx_hidden_AllSucceeded
	}
	return false
}

func (x *ImportPoliciesResponse) SetResponses(v []*ImportPolicyResponse) {
	x.xxx_hidden_Responses = &v
}

func (x *ImportPoliciesResponse) SetAllSucceeded(v bool) {
	x.xxx_hidden_AllSucceeded = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ImportPoliciesResponse) HasAllSucceeded() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ImportPoliciesResponse) ClearAllSucceeded() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_AllSucceeded = false
}

type ImportPoliciesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Responses    []*ImportPolicyResponse
	AllSucceeded *bool
}

func (b0 ImportPoliciesResponse_builder) Build() *ImportPoliciesResponse {
	m0 := &ImportPoliciesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Responses = &b.Responses
	if b.AllSucceeded != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_AllSucceeded = *b.AllSucceeded
	}
	return m0
}

type PolicyFromSearchResponse struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Policy             *storage.Policy        `protobuf:"bytes,1,opt,name=policy"`
	xxx_hidden_AlteredSearchTerms []string               `protobuf:"bytes,2,rep,name=altered_search_terms,json=alteredSearchTerms"`
	xxx_hidden_HasNestedFields    bool                   `protobuf:"varint,3,opt,name=has_nested_fields,json=hasNestedFields"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *PolicyFromSearchResponse) Reset() {
	*x = PolicyFromSearchResponse{}
	mi := &file_api_v1_policy_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyFromSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyFromSearchResponse) ProtoMessage() {}

func (x *PolicyFromSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PolicyFromSearchResponse) GetPolicy() *storage.Policy {
	if x != nil {
		return x.xxx_hidden_Policy
	}
	return nil
}

func (x *PolicyFromSearchResponse) GetAlteredSearchTerms() []string {
	if x != nil {
		return x.xxx_hidden_AlteredSearchTerms
	}
	return nil
}

func (x *PolicyFromSearchResponse) GetHasNestedFields() bool {
	if x != nil {
		return x.xxx_hidden_HasNestedFields
	}
	return false
}

func (x *PolicyFromSearchResponse) SetPolicy(v *storage.Policy) {
	x.xxx_hidden_Policy = v
}

func (x *PolicyFromSearchResponse) SetAlteredSearchTerms(v []string) {
	x.xxx_hidden_AlteredSearchTerms = v
}

func (x *PolicyFromSearchResponse) SetHasNestedFields(v bool) {
	x.xxx_hidden_HasNestedFields = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *PolicyFromSearchResponse) HasPolicy() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Policy != nil
}

func (x *PolicyFromSearchResponse) HasHasNestedFields() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *PolicyFromSearchResponse) ClearPolicy() {
	x.xxx_hidden_Policy = nil
}

func (x *PolicyFromSearchResponse) ClearHasNestedFields() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_HasNestedFields = false
}

type PolicyFromSearchResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Policy             *storage.Policy
	AlteredSearchTerms []string
	HasNestedFields    *bool
}

func (b0 PolicyFromSearchResponse_builder) Build() *PolicyFromSearchResponse {
	m0 := &PolicyFromSearchResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Policy = b.Policy
	x.xxx_hidden_AlteredSearchTerms = b.AlteredSearchTerms
	if b.HasNestedFields != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_HasNestedFields = *b.HasNestedFields
	}
	return m0
}

type GetPolicyMitreVectorsRequest struct {
	state                  protoimpl.MessageState                `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                               `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Options     *GetPolicyMitreVectorsRequest_Options `protobuf:"bytes,2,opt,name=options"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetPolicyMitreVectorsRequest) Reset() {
	*x = GetPolicyMitreVectorsRequest{}
	mi := &file_api_v1_policy_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPolicyMitreVectorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyMitreVectorsRequest) ProtoMessage() {}

func (x *GetPolicyMitreVectorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetPolicyMitreVectorsRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *GetPolicyMitreVectorsRequest) GetOptions() *GetPolicyMitreVectorsRequest_Options {
	if x != nil {
		return x.xxx_hidden_Options
	}
	return nil
}

func (x *GetPolicyMitreVectorsRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *GetPolicyMitreVectorsRequest) SetOptions(v *GetPolicyMitreVectorsRequest_Options) {
	x.xxx_hidden_Options = v
}

func (x *GetPolicyMitreVectorsRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetPolicyMitreVectorsRequest) HasOptions() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Options != nil
}

func (x *GetPolicyMitreVectorsRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *GetPolicyMitreVectorsRequest) ClearOptions() {
	x.xxx_hidden_Options = nil
}

type GetPolicyMitreVectorsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *string
	Options *GetPolicyMitreVectorsRequest_Options
}

func (b0 GetPolicyMitreVectorsRequest_builder) Build() *GetPolicyMitreVectorsRequest {
	m0 := &GetPolicyMitreVectorsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	x.xxx_hidden_Options = b.Options
	return m0
}

type GetPolicyMitreVectorsResponse struct {
	state              protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_Policy  *storage.Policy               `protobuf:"bytes,1,opt,name=policy"`
	xxx_hidden_Vectors *[]*storage.MitreAttackVector `protobuf:"bytes,2,rep,name=vectors"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetPolicyMitreVectorsResponse) Reset() {
	*x = GetPolicyMitreVectorsResponse{}
	mi := &file_api_v1_policy_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPolicyMitreVectorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyMitreVectorsResponse) ProtoMessage() {}

func (x *GetPolicyMitreVectorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetPolicyMitreVectorsResponse) GetPolicy() *storage.Policy {
	if x != nil {
		return x.xxx_hidden_Policy
	}
	return nil
}

func (x *GetPolicyMitreVectorsResponse) GetVectors() []*storage.MitreAttackVector {
	if x != nil {
		if x.xxx_hidden_Vectors != nil {
			return *x.xxx_hidden_Vectors
		}
	}
	return nil
}

func (x *GetPolicyMitreVectorsResponse) SetPolicy(v *storage.Policy) {
	x.xxx_hidden_Policy = v
}

func (x *GetPolicyMitreVectorsResponse) SetVectors(v []*storage.MitreAttackVector) {
	x.xxx_hidden_Vectors = &v
}

func (x *GetPolicyMitreVectorsResponse) HasPolicy() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Policy != nil
}

func (x *GetPolicyMitreVectorsResponse) ClearPolicy() {
	x.xxx_hidden_Policy = nil
}

type GetPolicyMitreVectorsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Policy  *storage.Policy
	Vectors []*storage.MitreAttackVector
}

func (b0 GetPolicyMitreVectorsResponse_builder) Build() *GetPolicyMitreVectorsResponse {
	m0 := &GetPolicyMitreVectorsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Policy = b.Policy
	x.xxx_hidden_Vectors = &b.Vectors
	return m0
}

type DryRunResponse_Alert struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Deployment  *string                `protobuf:"bytes,1,opt,name=deployment"`
	xxx_hidden_Violations  []string               `protobuf:"bytes,2,rep,name=violations"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DryRunResponse_Alert) Reset() {
	*x = DryRunResponse_Alert{}
	mi := &file_api_v1_policy_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DryRunResponse_Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DryRunResponse_Alert) ProtoMessage() {}

func (x *DryRunResponse_Alert) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DryRunResponse_Alert) GetDeployment() string {
	if x != nil {
		if x.xxx_hidden_Deployment != nil {
			return *x.xxx_hidden_Deployment
		}
		return ""
	}
	return ""
}

func (x *DryRunResponse_Alert) GetViolations() []string {
	if x != nil {
		return x.xxx_hidden_Violations
	}
	return nil
}

func (x *DryRunResponse_Alert) SetDeployment(v string) {
	x.xxx_hidden_Deployment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DryRunResponse_Alert) SetViolations(v []string) {
	x.xxx_hidden_Violations = v
}

func (x *DryRunResponse_Alert) HasDeployment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DryRunResponse_Alert) ClearDeployment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Deployment = nil
}

type DryRunResponse_Alert_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Deployment *string
	Violations []string
}

func (b0 DryRunResponse_Alert_builder) Build() *DryRunResponse_Alert {
	m0 := &DryRunResponse_Alert{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Deployment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Deployment = b.Deployment
	}
	x.xxx_hidden_Violations = b.Violations
	return m0
}

type GetPolicyMitreVectorsRequest_Options struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ExcludePolicy bool                   `protobuf:"varint,1,opt,name=exclude_policy,json=excludePolicy"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *GetPolicyMitreVectorsRequest_Options) Reset() {
	*x = GetPolicyMitreVectorsRequest_Options{}
	mi := &file_api_v1_policy_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPolicyMitreVectorsRequest_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyMitreVectorsRequest_Options) ProtoMessage() {}

func (x *GetPolicyMitreVectorsRequest_Options) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetPolicyMitreVectorsRequest_Options) GetExcludePolicy() bool {
	if x != nil {
		return x.xxx_hidden_ExcludePolicy
	}
	return false
}

func (x *GetPolicyMitreVectorsRequest_Options) SetExcludePolicy(v bool) {
	x.xxx_hidden_ExcludePolicy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *GetPolicyMitreVectorsRequest_Options) HasExcludePolicy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetPolicyMitreVectorsRequest_Options) ClearExcludePolicy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ExcludePolicy = false
}

type GetPolicyMitreVectorsRequest_Options_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// If set to true, policy is excluded from the response.
	ExcludePolicy *bool
}

func (b0 GetPolicyMitreVectorsRequest_Options_builder) Build() *GetPolicyMitreVectorsRequest_Options {
	m0 := &GetPolicyMitreVectorsRequest_Options{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ExcludePolicy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_ExcludePolicy = *b.ExcludePolicy
	}
	return m0
}

var File_api_v1_policy_service_proto protoreflect.FileDescriptor

const file_api_v1_policy_service_proto_rawDesc = "" +
	"\n" +
	"\x1bapi/v1/policy_service.proto\x12\x02v1\x1a\x13api/v1/common.proto\x1a\x12api/v1/empty.proto\x1a\x1bapi/v1/search_service.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x13storage/mitre.proto\x1a\x14storage/policy.proto\x1a!google/protobuf/go_features.proto\"\x8b\x01\n" +
	"\x0eDryRunResponse\x120\n" +
	"\x06alerts\x18\x01 \x03(\v2\x18.v1.DryRunResponse.AlertR\x06alerts\x1aG\n" +
	"\x05Alert\x12\x1e\n" +
	"\n" +
	"deployment\x18\x01 \x01(\tR\n" +
	"deployment\x12\x1e\n" +
	"\n" +
	"violations\x18\x02 \x03(\tR\n" +
	"violations\"\x1e\n" +
	"\x05JobId\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\"_\n" +
	"\x17DryRunJobStatusResponse\x12\x18\n" +
	"\apending\x18\x01 \x01(\bR\apending\x12*\n" +
	"\x06result\x18\x02 \x01(\v2\x12.v1.DryRunResponseR\x06result\":\n" +
	"\x18PolicyCategoriesResponse\x12\x1e\n" +
	"\n" +
	"categories\x18\x01 \x03(\tR\n" +
	"categories\"\x82\x01\n" +
	"&EnableDisablePolicyNotificationRequest\x12\x1b\n" +
	"\tpolicy_id\x18\x01 \x01(\tR\bpolicyId\x12!\n" +
	"\fnotifier_ids\x18\x02 \x03(\tR\vnotifierIds\x12\x18\n" +
	"\adisable\x18\x03 \x01(\bR\adisable\"G\n" +
	"\x14ListPoliciesResponse\x12/\n" +
	"\bpolicies\x18\x01 \x03(\v2\x13.storage.ListPolicyR\bpolicies\"v\n" +
	"\x11PostPolicyRequest\x12'\n" +
	"\x06policy\x18\x01 \x01(\v2\x0f.storage.PolicyR\x06policy\x128\n" +
	"\x18enable_strict_validation\x18\x02 \x01(\bR\x16enableStrictValidation\"R\n" +
	"\x12PatchPolicyRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\bdisabled\x18\x02 \x01(\bH\x00R\bdisabledB\x0e\n" +
	"\fset_disabled\"6\n" +
	"\x15ExportPoliciesRequest\x12\x1d\n" +
	"\n" +
	"policy_ids\x18\x01 \x03(\tR\tpolicyIds\"#\n" +
	"\vPolicyError\x12\x14\n" +
	"\x05error\x18\x01 \x01(\tR\x05error\"Z\n" +
	"\x14PolicyOperationError\x12\x1b\n" +
	"\tpolicy_id\x18\x01 \x01(\tR\bpolicyId\x12%\n" +
	"\x05error\x18\x02 \x01(\v2\x0f.v1.PolicyErrorR\x05error\"L\n" +
	"\x18PolicyOperationErrorList\x120\n" +
	"\x06errors\x18\x01 \x03(\v2\x18.v1.PolicyOperationErrorR\x06errors\">\n" +
	"\x17PolicyFromSearchRequest\x12#\n" +
	"\rsearch_params\x18\x01 \x01(\tR\fsearchParams\"6\n" +
	"\x16ImportPoliciesMetadata\x12\x1c\n" +
	"\toverwrite\x18\x01 \x01(\bR\toverwrite\"|\n" +
	"\x15ImportPoliciesRequest\x126\n" +
	"\bmetadata\x18\x01 \x01(\v2\x1a.v1.ImportPoliciesMetadataR\bmetadata\x12+\n" +
	"\bpolicies\x18\x02 \x03(\v2\x0f.storage.PolicyR\bpolicies\"\xa3\x01\n" +
	"\x11ImportPolicyError\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12'\n" +
	"\x0eduplicate_name\x18\x03 \x01(\tH\x00R\rduplicateName\x12+\n" +
	"\x10validation_error\x18\x04 \x01(\tH\x00R\x0fvalidationErrorB\n" +
	"\n" +
	"\bmetadata\"\x8c\x01\n" +
	"\x14ImportPolicyResponse\x12\x1c\n" +
	"\tsucceeded\x18\x01 \x01(\bR\tsucceeded\x12'\n" +
	"\x06policy\x18\x02 \x01(\v2\x0f.storage.PolicyR\x06policy\x12-\n" +
	"\x06errors\x18\x03 \x03(\v2\x15.v1.ImportPolicyErrorR\x06errors\"u\n" +
	"\x16ImportPoliciesResponse\x126\n" +
	"\tresponses\x18\x01 \x03(\v2\x18.v1.ImportPolicyResponseR\tresponses\x12#\n" +
	"\rall_succeeded\x18\x02 \x01(\bR\fallSucceeded\"\xa1\x01\n" +
	"\x18PolicyFromSearchResponse\x12'\n" +
	"\x06policy\x18\x01 \x01(\v2\x0f.storage.PolicyR\x06policy\x120\n" +
	"\x14altered_search_terms\x18\x02 \x03(\tR\x12alteredSearchTerms\x12*\n" +
	"\x11has_nested_fields\x18\x03 \x01(\bR\x0fhasNestedFields\"\xa4\x01\n" +
	"\x1cGetPolicyMitreVectorsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12B\n" +
	"\aoptions\x18\x02 \x01(\v2(.v1.GetPolicyMitreVectorsRequest.OptionsR\aoptions\x1a0\n" +
	"\aOptions\x12%\n" +
	"\x0eexclude_policy\x18\x01 \x01(\bR\rexcludePolicy\"~\n" +
	"\x1dGetPolicyMitreVectorsResponse\x12'\n" +
	"\x06policy\x18\x01 \x01(\v2\x0f.storage.PolicyR\x06policy\x124\n" +
	"\avectors\x18\x02 \x03(\v2\x1a.storage.MitreAttackVectorR\avectors2\xc6\f\n" +
	"\rPolicyService\x12I\n" +
	"\tGetPolicy\x12\x10.v1.ResourceByID\x1a\x0f.storage.Policy\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v1/policies/{id}\x12\x84\x01\n" +
	"\x15GetPolicyMitreVectors\x12 .v1.GetPolicyMitreVectorsRequest\x1a!.v1.GetPolicyMitreVectorsResponse\"&\x82\xd3\xe4\x93\x02 \x12\x1e/v1/policies/{id}/mitrevectors\x12L\n" +
	"\fListPolicies\x12\f.v1.RawQuery\x1a\x18.v1.ListPoliciesResponse\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\f/v1/policies\x12R\n" +
	"\n" +
	"PostPolicy\x12\x15.v1.PostPolicyRequest\x1a\x0f.storage.Policy\"\x1c\x82\xd3\xe4\x93\x02\x16:\x06policy\"\f/v1/policies\x12E\n" +
	"\tPutPolicy\x12\x0f.storage.Policy\x1a\t.v1.Empty\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\x1a\x11/v1/policies/{id}\x12N\n" +
	"\vPatchPolicy\x12\x16.v1.PatchPolicyRequest\x1a\t.v1.Empty\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*2\x11/v1/policies/{id}\x12F\n" +
	"\fDeletePolicy\x12\x10.v1.ResourceByID\x1a\t.v1.Empty\"\x19\x82\xd3\xe4\x93\x02\x13*\x11/v1/policies/{id}\x12\x87\x01\n" +
	"\x1fEnableDisablePolicyNotification\x12*.v1.EnableDisablePolicyNotificationRequest\x1a\t.v1.Empty\"-\x82\xd3\xe4\x93\x02':\x01*2\"/v1/policies/{policy_id}/notifiers\x12G\n" +
	"\x10ReassessPolicies\x12\t.v1.Empty\x1a\t.v1.Empty\"\x1d\x82\xd3\xe4\x93\x02\x17\"\x15/v1/policies/reassess\x12S\n" +
	"\fDryRunPolicy\x12\x0f.storage.Policy\x1a\x12.v1.DryRunResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/v1/policies/dryrun\x12V\n" +
	"\x15SubmitDryRunPolicyJob\x12\x0f.storage.Policy\x1a\t.v1.JobId\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1/policies/dryrunjob\x12g\n" +
	"\x14QueryDryRunJobStatus\x12\t.v1.JobId\x1a\x1b.v1.DryRunJobStatusResponse\"'\x82\xd3\xe4\x93\x02!\x12\x1f/v1/policies/dryrunjob/{job_id}\x12P\n" +
	"\x0fCancelDryRunJob\x12\t.v1.JobId\x1a\t.v1.Empty\"'\x82\xd3\xe4\x93\x02!*\x1f/v1/policies/dryrunjob/{job_id}\x12\\\n" +
	"\x13GetPolicyCategories\x12\t.v1.Empty\x1a\x1c.v1.PolicyCategoriesResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/v1/policyCategories\x12l\n" +
	"\x0eExportPolicies\x12\x19.v1.ExportPoliciesRequest\x1a\x1f.storage.ExportPoliciesResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/v1/policies/export\x12r\n" +
	"\x10PolicyFromSearch\x12\x1b.v1.PolicyFromSearchRequest\x1a\x1c.v1.PolicyFromSearchResponse\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/v1/policies/from-search\x12g\n" +
	"\x0eImportPolicies\x12\x19.v1.ImportPoliciesRequest\x1a\x1a.v1.ImportPoliciesResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/v1/policies/importB/\n" +
	"\x18io.stackrox.proto.api.v1Z\v./api/v1;v1\x92\x03\x05\xd2>\x02\x10\x02X\x03b\beditionsp\xe8\a"

var file_api_v1_policy_service_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_api_v1_policy_service_proto_goTypes = []any{
	(*DryRunResponse)(nil),                         // 0: v1.DryRunResponse
	(*JobId)(nil),                                  // 1: v1.JobId
	(*DryRunJobStatusResponse)(nil),                // 2: v1.DryRunJobStatusResponse
	(*PolicyCategoriesResponse)(nil),               // 3: v1.PolicyCategoriesResponse
	(*EnableDisablePolicyNotificationRequest)(nil), // 4: v1.EnableDisablePolicyNotificationRequest
	(*ListPoliciesResponse)(nil),                   // 5: v1.ListPoliciesResponse
	(*PostPolicyRequest)(nil),                      // 6: v1.PostPolicyRequest
	(*PatchPolicyRequest)(nil),                     // 7: v1.PatchPolicyRequest
	(*ExportPoliciesRequest)(nil),                  // 8: v1.ExportPoliciesRequest
	(*PolicyError)(nil),                            // 9: v1.PolicyError
	(*PolicyOperationError)(nil),                   // 10: v1.PolicyOperationError
	(*PolicyOperationErrorList)(nil),               // 11: v1.PolicyOperationErrorList
	(*PolicyFromSearchRequest)(nil),                // 12: v1.PolicyFromSearchRequest
	(*ImportPoliciesMetadata)(nil),                 // 13: v1.ImportPoliciesMetadata
	(*ImportPoliciesRequest)(nil),                  // 14: v1.ImportPoliciesRequest
	(*ImportPolicyError)(nil),                      // 15: v1.ImportPolicyError
	(*ImportPolicyResponse)(nil),                   // 16: v1.ImportPolicyResponse
	(*ImportPoliciesResponse)(nil),                 // 17: v1.ImportPoliciesResponse
	(*PolicyFromSearchResponse)(nil),               // 18: v1.PolicyFromSearchResponse
	(*GetPolicyMitreVectorsRequest)(nil),           // 19: v1.GetPolicyMitreVectorsRequest
	(*GetPolicyMitreVectorsResponse)(nil),          // 20: v1.GetPolicyMitreVectorsResponse
	(*DryRunResponse_Alert)(nil),                   // 21: v1.DryRunResponse.Alert
	(*GetPolicyMitreVectorsRequest_Options)(nil),   // 22: v1.GetPolicyMitreVectorsRequest.Options
	(*storage.ListPolicy)(nil),                     // 23: storage.ListPolicy
	(*storage.Policy)(nil),                         // 24: storage.Policy
	(*storage.MitreAttackVector)(nil),              // 25: storage.MitreAttackVector
	(*ResourceByID)(nil),                           // 26: v1.ResourceByID
	(*RawQuery)(nil),                               // 27: v1.RawQuery
	(*Empty)(nil),                                  // 28: v1.Empty
	(*storage.ExportPoliciesResponse)(nil),         // 29: storage.ExportPoliciesResponse
}
var file_api_v1_policy_service_proto_depIdxs = []int32{
	21, // 0: v1.DryRunResponse.alerts:type_name -> v1.DryRunResponse.Alert
	0,  // 1: v1.DryRunJobStatusResponse.result:type_name -> v1.DryRunResponse
	23, // 2: v1.ListPoliciesResponse.policies:type_name -> storage.ListPolicy
	24, // 3: v1.PostPolicyRequest.policy:type_name -> storage.Policy
	9,  // 4: v1.PolicyOperationError.error:type_name -> v1.PolicyError
	10, // 5: v1.PolicyOperationErrorList.errors:type_name -> v1.PolicyOperationError
	13, // 6: v1.ImportPoliciesRequest.metadata:type_name -> v1.ImportPoliciesMetadata
	24, // 7: v1.ImportPoliciesRequest.policies:type_name -> storage.Policy
	24, // 8: v1.ImportPolicyResponse.policy:type_name -> storage.Policy
	15, // 9: v1.ImportPolicyResponse.errors:type_name -> v1.ImportPolicyError
	16, // 10: v1.ImportPoliciesResponse.responses:type_name -> v1.ImportPolicyResponse
	24, // 11: v1.PolicyFromSearchResponse.policy:type_name -> storage.Policy
	22, // 12: v1.GetPolicyMitreVectorsRequest.options:type_name -> v1.GetPolicyMitreVectorsRequest.Options
	24, // 13: v1.GetPolicyMitreVectorsResponse.policy:type_name -> storage.Policy
	25, // 14: v1.GetPolicyMitreVectorsResponse.vectors:type_name -> storage.MitreAttackVector
	26, // 15: v1.PolicyService.GetPolicy:input_type -> v1.ResourceByID
	19, // 16: v1.PolicyService.GetPolicyMitreVectors:input_type -> v1.GetPolicyMitreVectorsRequest
	27, // 17: v1.PolicyService.ListPolicies:input_type -> v1.RawQuery
	6,  // 18: v1.PolicyService.PostPolicy:input_type -> v1.PostPolicyRequest
	24, // 19: v1.PolicyService.PutPolicy:input_type -> storage.Policy
	7,  // 20: v1.PolicyService.PatchPolicy:input_type -> v1.PatchPolicyRequest
	26, // 21: v1.PolicyService.DeletePolicy:input_type -> v1.ResourceByID
	4,  // 22: v1.PolicyService.EnableDisablePolicyNotification:input_type -> v1.EnableDisablePolicyNotificationRequest
	28, // 23: v1.PolicyService.ReassessPolicies:input_type -> v1.Empty
	24, // 24: v1.PolicyService.DryRunPolicy:input_type -> storage.Policy
	24, // 25: v1.PolicyService.SubmitDryRunPolicyJob:input_type -> storage.Policy
	1,  // 26: v1.PolicyService.QueryDryRunJobStatus:input_type -> v1.JobId
	1,  // 27: v1.PolicyService.CancelDryRunJob:input_type -> v1.JobId
	28, // 28: v1.PolicyService.GetPolicyCategories:input_type -> v1.Empty
	8,  // 29: v1.PolicyService.ExportPolicies:input_type -> v1.ExportPoliciesRequest
	12, // 30: v1.PolicyService.PolicyFromSearch:input_type -> v1.PolicyFromSearchRequest
	14, // 31: v1.PolicyService.ImportPolicies:input_type -> v1.ImportPoliciesRequest
	24, // 32: v1.PolicyService.GetPolicy:output_type -> storage.Policy
	20, // 33: v1.PolicyService.GetPolicyMitreVectors:output_type -> v1.GetPolicyMitreVectorsResponse
	5,  // 34: v1.PolicyService.ListPolicies:output_type -> v1.ListPoliciesResponse
	24, // 35: v1.PolicyService.PostPolicy:output_type -> storage.Policy
	28, // 36: v1.PolicyService.PutPolicy:output_type -> v1.Empty
	28, // 37: v1.PolicyService.PatchPolicy:output_type -> v1.Empty
	28, // 38: v1.PolicyService.DeletePolicy:output_type -> v1.Empty
	28, // 39: v1.PolicyService.EnableDisablePolicyNotification:output_type -> v1.Empty
	28, // 40: v1.PolicyService.ReassessPolicies:output_type -> v1.Empty
	0,  // 41: v1.PolicyService.DryRunPolicy:output_type -> v1.DryRunResponse
	1,  // 42: v1.PolicyService.SubmitDryRunPolicyJob:output_type -> v1.JobId
	2,  // 43: v1.PolicyService.QueryDryRunJobStatus:output_type -> v1.DryRunJobStatusResponse
	28, // 44: v1.PolicyService.CancelDryRunJob:output_type -> v1.Empty
	3,  // 45: v1.PolicyService.GetPolicyCategories:output_type -> v1.PolicyCategoriesResponse
	29, // 46: v1.PolicyService.ExportPolicies:output_type -> storage.ExportPoliciesResponse
	18, // 47: v1.PolicyService.PolicyFromSearch:output_type -> v1.PolicyFromSearchResponse
	17, // 48: v1.PolicyService.ImportPolicies:output_type -> v1.ImportPoliciesResponse
	32, // [32:49] is the sub-list for method output_type
	15, // [15:32] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_api_v1_policy_service_proto_init() }
func file_api_v1_policy_service_proto_init() {
	if File_api_v1_policy_service_proto != nil {
		return
	}
	file_api_v1_common_proto_init()
	file_api_v1_empty_proto_init()
	file_api_v1_search_service_proto_init()
	file_api_v1_policy_service_proto_msgTypes[7].OneofWrappers = []any{
		(*patchPolicyRequest_Disabled)(nil),
	}
	file_api_v1_policy_service_proto_msgTypes[15].OneofWrappers = []any{
		(*importPolicyError_DuplicateName)(nil),
		(*importPolicyError_ValidationError)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_policy_service_proto_rawDesc), len(file_api_v1_policy_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_policy_service_proto_goTypes,
		DependencyIndexes: file_api_v1_policy_service_proto_depIdxs,
		MessageInfos:      file_api_v1_policy_service_proto_msgTypes,
	}.Build()
	File_api_v1_policy_service_proto = out.File
	file_api_v1_policy_service_proto_goTypes = nil
	file_api_v1_policy_service_proto_depIdxs = nil
}
