// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/v1/audit.proto

//go:build !protoopaque

package v1

import (
	storage "github.com/stackrox/rox/generated/storage"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Audit_RequestStatus int32

const (
	Audit_UNKNOWN_STATUS    Audit_RequestStatus = 0
	Audit_REQUEST_SUCCEEDED Audit_RequestStatus = 1
	Audit_AUTH_FAILED       Audit_RequestStatus = 2
	Audit_REQUEST_FAILED    Audit_RequestStatus = 3
)

// Enum value maps for Audit_RequestStatus.
var (
	Audit_RequestStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "REQUEST_SUCCEEDED",
		2: "AUTH_FAILED",
		3: "REQUEST_FAILED",
	}
	Audit_RequestStatus_value = map[string]int32{
		"UNKNOWN_STATUS":    0,
		"REQUEST_SUCCEEDED": 1,
		"AUTH_FAILED":       2,
		"REQUEST_FAILED":    3,
	}
)

func (x Audit_RequestStatus) Enum() *Audit_RequestStatus {
	p := new(Audit_RequestStatus)
	*p = x
	return p
}

func (x Audit_RequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Audit_RequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_audit_proto_enumTypes[0].Descriptor()
}

func (Audit_RequestStatus) Type() protoreflect.EnumType {
	return &file_api_v1_audit_proto_enumTypes[0]
}

func (x Audit_RequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Audit_Interaction int32

const (
	Audit_UNKNOWN_INTERACTION Audit_Interaction = 0
	Audit_CREATE              Audit_Interaction = 1
	Audit_UPDATE              Audit_Interaction = 2
	Audit_DELETE              Audit_Interaction = 3
)

// Enum value maps for Audit_Interaction.
var (
	Audit_Interaction_name = map[int32]string{
		0: "UNKNOWN_INTERACTION",
		1: "CREATE",
		2: "UPDATE",
		3: "DELETE",
	}
	Audit_Interaction_value = map[string]int32{
		"UNKNOWN_INTERACTION": 0,
		"CREATE":              1,
		"UPDATE":              2,
		"DELETE":              3,
	}
)

func (x Audit_Interaction) Enum() *Audit_Interaction {
	p := new(Audit_Interaction)
	*p = x
	return p
}

func (x Audit_Interaction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Audit_Interaction) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_audit_proto_enumTypes[1].Descriptor()
}

func (Audit_Interaction) Type() protoreflect.EnumType {
	return &file_api_v1_audit_proto_enumTypes[1]
}

func (x Audit_Interaction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Audit_AccessMethod int32

const (
	Audit_UNKNOWN_METHOD Audit_AccessMethod = 0
	Audit_CLI            Audit_AccessMethod = 1
	Audit_UI             Audit_AccessMethod = 2
	Audit_API            Audit_AccessMethod = 3
)

// Enum value maps for Audit_AccessMethod.
var (
	Audit_AccessMethod_name = map[int32]string{
		0: "UNKNOWN_METHOD",
		1: "CLI",
		2: "UI",
		3: "API",
	}
	Audit_AccessMethod_value = map[string]int32{
		"UNKNOWN_METHOD": 0,
		"CLI":            1,
		"UI":             2,
		"API":            3,
	}
)

func (x Audit_AccessMethod) Enum() *Audit_AccessMethod {
	p := new(Audit_AccessMethod)
	*p = x
	return p
}

func (x Audit_AccessMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Audit_AccessMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_audit_proto_enumTypes[2].Descriptor()
}

func (Audit_AccessMethod) Type() protoreflect.EnumType {
	return &file_api_v1_audit_proto_enumTypes[2]
}

func (x Audit_AccessMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Audit struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Audit) Reset() {
	*x = Audit{}
	mi := &file_api_v1_audit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Audit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audit) ProtoMessage() {}

func (x *Audit) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_audit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Audit_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Audit_builder) Build() *Audit {
	m0 := &Audit{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Audit_Message struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Time          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time" json:"time,omitempty"`
	Status        Audit_RequestStatus    `protobuf:"varint,2,opt,name=status,enum=v1.Audit_RequestStatus" json:"status,omitempty"`
	StatusReason  string                 `protobuf:"bytes,3,opt,name=status_reason,json=statusReason" json:"status_reason,omitempty"`
	User          *storage.UserInfo      `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	Request       *Audit_Message_Request `protobuf:"bytes,5,opt,name=request" json:"request,omitempty"`
	Method        Audit_AccessMethod     `protobuf:"varint,6,opt,name=method,enum=v1.Audit_AccessMethod" json:"method,omitempty"`
	Interaction   Audit_Interaction      `protobuf:"varint,7,opt,name=interaction,enum=v1.Audit_Interaction" json:"interaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Audit_Message) Reset() {
	*x = Audit_Message{}
	mi := &file_api_v1_audit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Audit_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audit_Message) ProtoMessage() {}

func (x *Audit_Message) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_audit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Audit_Message) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Audit_Message) GetStatus() Audit_RequestStatus {
	if x != nil {
		return x.Status
	}
	return Audit_UNKNOWN_STATUS
}

func (x *Audit_Message) GetStatusReason() string {
	if x != nil {
		return x.StatusReason
	}
	return ""
}

func (x *Audit_Message) GetUser() *storage.UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Audit_Message) GetRequest() *Audit_Message_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *Audit_Message) GetMethod() Audit_AccessMethod {
	if x != nil {
		return x.Method
	}
	return Audit_UNKNOWN_METHOD
}

func (x *Audit_Message) GetInteraction() Audit_Interaction {
	if x != nil {
		return x.Interaction
	}
	return Audit_UNKNOWN_INTERACTION
}

func (x *Audit_Message) SetTime(v *timestamppb.Timestamp) {
	x.Time = v
}

func (x *Audit_Message) SetStatus(v Audit_RequestStatus) {
	x.Status = v
}

func (x *Audit_Message) SetStatusReason(v string) {
	x.StatusReason = v
}

func (x *Audit_Message) SetUser(v *storage.UserInfo) {
	x.User = v
}

func (x *Audit_Message) SetRequest(v *Audit_Message_Request) {
	x.Request = v
}

func (x *Audit_Message) SetMethod(v Audit_AccessMethod) {
	x.Method = v
}

func (x *Audit_Message) SetInteraction(v Audit_Interaction) {
	x.Interaction = v
}

func (x *Audit_Message) HasTime() bool {
	if x == nil {
		return false
	}
	return x.Time != nil
}

func (x *Audit_Message) HasUser() bool {
	if x == nil {
		return false
	}
	return x.User != nil
}

func (x *Audit_Message) HasRequest() bool {
	if x == nil {
		return false
	}
	return x.Request != nil
}

func (x *Audit_Message) ClearTime() {
	x.Time = nil
}

func (x *Audit_Message) ClearUser() {
	x.User = nil
}

func (x *Audit_Message) ClearRequest() {
	x.Request = nil
}

type Audit_Message_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Time         *timestamppb.Timestamp
	Status       Audit_RequestStatus
	StatusReason string
	User         *storage.UserInfo
	Request      *Audit_Message_Request
	Method       Audit_AccessMethod
	Interaction  Audit_Interaction
}

func (b0 Audit_Message_builder) Build() *Audit_Message {
	m0 := &Audit_Message{}
	b, x := &b0, m0
	_, _ = b, x
	x.Time = b.Time
	x.Status = b.Status
	x.StatusReason = b.StatusReason
	x.User = b.User
	x.Request = b.Request
	x.Method = b.Method
	x.Interaction = b.Interaction
	return m0
}

type Audit_Message_Request struct {
	state         protoimpl.MessageState               `protogen:"hybrid.v1"`
	Endpoint      string                               `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	Method        string                               `protobuf:"bytes,2,opt,name=method" json:"method,omitempty"`
	Payload       *anypb.Any                           `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
	SourceHeaders *Audit_Message_Request_SourceHeaders `protobuf:"bytes,4,opt,name=source_headers,json=sourceHeaders" json:"source_headers,omitempty"`
	// The source IP of the request.
	// This is determined from the values found within the request's source.
	// The following priority is given:
	//  1. X-Forwarded-For
	//  2. Remote-Addr
	//  3. Request address
	//
	// Depending on how Central configured to be exposed, the source IP _may_ be a cluster internal IP.
	//
	// In case of exposure with a Kubernetes Load Balancer Service, follow this configuration instruction
	// to preserve the client IP: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
	//
	// In case of exposure with a Route, following types support preserving the client IP:
	// - edge
	// - re-encrypt
	// The tls-passthrough type does not support preserving the client IP, due to the router not being able
	// to decrypt the incoming HTTP request and adding additional headers (i.e. X-Forwarded-For) to the request.
	//
	// In case of exposure with a custom loadbalancer / ingress controller, if HTTPS is passed through to the
	// Central, it also might not preserve the client IP correctly.
	SourceIp      string `protobuf:"bytes,5,opt,name=source_ip,json=sourceIp" json:"source_ip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Audit_Message_Request) Reset() {
	*x = Audit_Message_Request{}
	mi := &file_api_v1_audit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Audit_Message_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audit_Message_Request) ProtoMessage() {}

func (x *Audit_Message_Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_audit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Audit_Message_Request) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Audit_Message_Request) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Audit_Message_Request) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Audit_Message_Request) GetSourceHeaders() *Audit_Message_Request_SourceHeaders {
	if x != nil {
		return x.SourceHeaders
	}
	return nil
}

func (x *Audit_Message_Request) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *Audit_Message_Request) SetEndpoint(v string) {
	x.Endpoint = v
}

func (x *Audit_Message_Request) SetMethod(v string) {
	x.Method = v
}

func (x *Audit_Message_Request) SetPayload(v *anypb.Any) {
	x.Payload = v
}

func (x *Audit_Message_Request) SetSourceHeaders(v *Audit_Message_Request_SourceHeaders) {
	x.SourceHeaders = v
}

func (x *Audit_Message_Request) SetSourceIp(v string) {
	x.SourceIp = v
}

func (x *Audit_Message_Request) HasPayload() bool {
	if x == nil {
		return false
	}
	return x.Payload != nil
}

func (x *Audit_Message_Request) HasSourceHeaders() bool {
	if x == nil {
		return false
	}
	return x.SourceHeaders != nil
}

func (x *Audit_Message_Request) ClearPayload() {
	x.Payload = nil
}

func (x *Audit_Message_Request) ClearSourceHeaders() {
	x.SourceHeaders = nil
}

type Audit_Message_Request_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Endpoint      string
	Method        string
	Payload       *anypb.Any
	SourceHeaders *Audit_Message_Request_SourceHeaders
	// The source IP of the request.
	// This is determined from the values found within the request's source.
	// The following priority is given:
	//  1. X-Forwarded-For
	//  2. Remote-Addr
	//  3. Request address
	//
	// Depending on how Central configured to be exposed, the source IP _may_ be a cluster internal IP.
	//
	// In case of exposure with a Kubernetes Load Balancer Service, follow this configuration instruction
	// to preserve the client IP: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
	//
	// In case of exposure with a Route, following types support preserving the client IP:
	// - edge
	// - re-encrypt
	// The tls-passthrough type does not support preserving the client IP, due to the router not being able
	// to decrypt the incoming HTTP request and adding additional headers (i.e. X-Forwarded-For) to the request.
	//
	// In case of exposure with a custom loadbalancer / ingress controller, if HTTPS is passed through to the
	// Central, it also might not preserve the client IP correctly.
	SourceIp string
}

func (b0 Audit_Message_Request_builder) Build() *Audit_Message_Request {
	m0 := &Audit_Message_Request{}
	b, x := &b0, m0
	_, _ = b, x
	x.Endpoint = b.Endpoint
	x.Method = b.Method
	x.Payload = b.Payload
	x.SourceHeaders = b.SourceHeaders
	x.SourceIp = b.SourceIp
	return m0
}

// SourceHeaders holds information about the request's source.
type Audit_Message_Request_SourceHeaders struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// The "X-Forwarded-For" header associated with the request, if it was present.
	XForwardedFor string `protobuf:"bytes,1,opt,name=x_forwarded_for,json=xForwardedFor" json:"x_forwarded_for,omitempty"`
	// The "Remote-Addr" header associated with the request, if it was present.
	RemoteAddr string `protobuf:"bytes,2,opt,name=remote_addr,json=remoteAddr" json:"remote_addr,omitempty"`
	// The HTTP request's address. This will always be present, but may not preserve
	// the _actual_ client IP. See source_ip for a more detailed documentation.
	RequestAddr   string `protobuf:"bytes,3,opt,name=request_addr,json=requestAddr" json:"request_addr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Audit_Message_Request_SourceHeaders) Reset() {
	*x = Audit_Message_Request_SourceHeaders{}
	mi := &file_api_v1_audit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Audit_Message_Request_SourceHeaders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audit_Message_Request_SourceHeaders) ProtoMessage() {}

func (x *Audit_Message_Request_SourceHeaders) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_audit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Audit_Message_Request_SourceHeaders) GetXForwardedFor() string {
	if x != nil {
		return x.XForwardedFor
	}
	return ""
}

func (x *Audit_Message_Request_SourceHeaders) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

func (x *Audit_Message_Request_SourceHeaders) GetRequestAddr() string {
	if x != nil {
		return x.RequestAddr
	}
	return ""
}

func (x *Audit_Message_Request_SourceHeaders) SetXForwardedFor(v string) {
	x.XForwardedFor = v
}

func (x *Audit_Message_Request_SourceHeaders) SetRemoteAddr(v string) {
	x.RemoteAddr = v
}

func (x *Audit_Message_Request_SourceHeaders) SetRequestAddr(v string) {
	x.RequestAddr = v
}

type Audit_Message_Request_SourceHeaders_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The "X-Forwarded-For" header associated with the request, if it was present.
	XForwardedFor string
	// The "Remote-Addr" header associated with the request, if it was present.
	RemoteAddr string
	// The HTTP request's address. This will always be present, but may not preserve
	// the _actual_ client IP. See source_ip for a more detailed documentation.
	RequestAddr string
}

func (b0 Audit_Message_Request_SourceHeaders_builder) Build() *Audit_Message_Request_SourceHeaders {
	m0 := &Audit_Message_Request_SourceHeaders{}
	b, x := &b0, m0
	_, _ = b, x
	x.XForwardedFor = b.XForwardedFor
	x.RemoteAddr = b.RemoteAddr
	x.RequestAddr = b.RequestAddr
	return m0
}

var File_api_v1_audit_proto protoreflect.FileDescriptor

const file_api_v1_audit_proto_rawDesc = "" +
	"\n" +
	"\x12api/v1/audit.proto\x12\x02v1\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x12storage/user.proto\x1a!google/protobuf/go_features.proto\"\xaf\a\n" +
	"\x05Audit\x1a\xba\x05\n" +
	"\aMessage\x122\n" +
	"\x04time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\x04time\x12/\n" +
	"\x06status\x18\x02 \x01(\x0e2\x17.v1.Audit.RequestStatusR\x06status\x12#\n" +
	"\rstatus_reason\x18\x03 \x01(\tR\fstatusReason\x12)\n" +
	"\x04user\x18\x04 \x01(\v2\x11.storage.UserInfoB\x02(\x01R\x04user\x123\n" +
	"\arequest\x18\x05 \x01(\v2\x19.v1.Audit.Message.RequestR\arequest\x12.\n" +
	"\x06method\x18\x06 \x01(\x0e2\x16.v1.Audit.AccessMethodR\x06method\x127\n" +
	"\vinteraction\x18\a \x01(\x0e2\x15.v1.Audit.InteractionR\vinteraction\x1a\xdb\x02\n" +
	"\aRequest\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x122\n" +
	"\apayload\x18\x03 \x01(\v2\x14.google.protobuf.AnyB\x02(\x01R\apayload\x12N\n" +
	"\x0esource_headers\x18\x04 \x01(\v2'.v1.Audit.Message.Request.SourceHeadersR\rsourceHeaders\x12\x1b\n" +
	"\tsource_ip\x18\x05 \x01(\tR\bsourceIp\x1a{\n" +
	"\rSourceHeaders\x12&\n" +
	"\x0fx_forwarded_for\x18\x01 \x01(\tR\rxForwardedFor\x12\x1f\n" +
	"\vremote_addr\x18\x02 \x01(\tR\n" +
	"remoteAddr\x12!\n" +
	"\frequest_addr\x18\x03 \x01(\tR\vrequestAddr\"_\n" +
	"\rRequestStatus\x12\x12\n" +
	"\x0eUNKNOWN_STATUS\x10\x00\x12\x15\n" +
	"\x11REQUEST_SUCCEEDED\x10\x01\x12\x0f\n" +
	"\vAUTH_FAILED\x10\x02\x12\x12\n" +
	"\x0eREQUEST_FAILED\x10\x03\"J\n" +
	"\vInteraction\x12\x17\n" +
	"\x13UNKNOWN_INTERACTION\x10\x00\x12\n" +
	"\n" +
	"\x06CREATE\x10\x01\x12\n" +
	"\n" +
	"\x06UPDATE\x10\x02\x12\n" +
	"\n" +
	"\x06DELETE\x10\x03\"<\n" +
	"\fAccessMethod\x12\x12\n" +
	"\x0eUNKNOWN_METHOD\x10\x00\x12\a\n" +
	"\x03CLI\x10\x01\x12\x06\n" +
	"\x02UI\x10\x02\x12\a\n" +
	"\x03API\x10\x03B7\n" +
	"\x18io.stackrox.proto.api.v1Z\v./api/v1;v1\x92\x03\r\xd2>\x02\x10\x02\b\x02\x10\x01 \x020\x01b\beditionsp\xe8\a"

var file_api_v1_audit_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_v1_audit_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_v1_audit_proto_goTypes = []any{
	(Audit_RequestStatus)(0),                    // 0: v1.Audit.RequestStatus
	(Audit_Interaction)(0),                      // 1: v1.Audit.Interaction
	(Audit_AccessMethod)(0),                     // 2: v1.Audit.AccessMethod
	(*Audit)(nil),                               // 3: v1.Audit
	(*Audit_Message)(nil),                       // 4: v1.Audit.Message
	(*Audit_Message_Request)(nil),               // 5: v1.Audit.Message.Request
	(*Audit_Message_Request_SourceHeaders)(nil), // 6: v1.Audit.Message.Request.SourceHeaders
	(*timestamppb.Timestamp)(nil),               // 7: google.protobuf.Timestamp
	(*storage.UserInfo)(nil),                    // 8: storage.UserInfo
	(*anypb.Any)(nil),                           // 9: google.protobuf.Any
}
var file_api_v1_audit_proto_depIdxs = []int32{
	7, // 0: v1.Audit.Message.time:type_name -> google.protobuf.Timestamp
	0, // 1: v1.Audit.Message.status:type_name -> v1.Audit.RequestStatus
	8, // 2: v1.Audit.Message.user:type_name -> storage.UserInfo
	5, // 3: v1.Audit.Message.request:type_name -> v1.Audit.Message.Request
	2, // 4: v1.Audit.Message.method:type_name -> v1.Audit.AccessMethod
	1, // 5: v1.Audit.Message.interaction:type_name -> v1.Audit.Interaction
	9, // 6: v1.Audit.Message.Request.payload:type_name -> google.protobuf.Any
	6, // 7: v1.Audit.Message.Request.source_headers:type_name -> v1.Audit.Message.Request.SourceHeaders
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_api_v1_audit_proto_init() }
func file_api_v1_audit_proto_init() {
	if File_api_v1_audit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_audit_proto_rawDesc), len(file_api_v1_audit_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1_audit_proto_goTypes,
		DependencyIndexes: file_api_v1_audit_proto_depIdxs,
		EnumInfos:         file_api_v1_audit_proto_enumTypes,
		MessageInfos:      file_api_v1_audit_proto_msgTypes,
	}.Build()
	File_api_v1_audit_proto = out.File
	file_api_v1_audit_proto_goTypes = nil
	file_api_v1_audit_proto_depIdxs = nil
}
