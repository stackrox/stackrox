// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: api/v1/audit.proto

package v1

import (
	storage "github.com/stackrox/rox/generated/storage"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Audit_RequestStatus int32

const (
	Audit_UNKNOWN_STATUS    Audit_RequestStatus = 0
	Audit_REQUEST_SUCCEEDED Audit_RequestStatus = 1
	Audit_AUTH_FAILED       Audit_RequestStatus = 2
	Audit_REQUEST_FAILED    Audit_RequestStatus = 3
)

// Enum value maps for Audit_RequestStatus.
var (
	Audit_RequestStatus_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "REQUEST_SUCCEEDED",
		2: "AUTH_FAILED",
		3: "REQUEST_FAILED",
	}
	Audit_RequestStatus_value = map[string]int32{
		"UNKNOWN_STATUS":    0,
		"REQUEST_SUCCEEDED": 1,
		"AUTH_FAILED":       2,
		"REQUEST_FAILED":    3,
	}
)

func (x Audit_RequestStatus) Enum() *Audit_RequestStatus {
	p := new(Audit_RequestStatus)
	*p = x
	return p
}

func (x Audit_RequestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Audit_RequestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_audit_proto_enumTypes[0].Descriptor()
}

func (Audit_RequestStatus) Type() protoreflect.EnumType {
	return &file_api_v1_audit_proto_enumTypes[0]
}

func (x Audit_RequestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Audit_RequestStatus.Descriptor instead.
func (Audit_RequestStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_audit_proto_rawDescGZIP(), []int{0, 0}
}

type Audit_Interaction int32

const (
	Audit_UNKNOWN_INTERACTION Audit_Interaction = 0
	Audit_CREATE              Audit_Interaction = 1
	Audit_UPDATE              Audit_Interaction = 2
	Audit_DELETE              Audit_Interaction = 3
)

// Enum value maps for Audit_Interaction.
var (
	Audit_Interaction_name = map[int32]string{
		0: "UNKNOWN_INTERACTION",
		1: "CREATE",
		2: "UPDATE",
		3: "DELETE",
	}
	Audit_Interaction_value = map[string]int32{
		"UNKNOWN_INTERACTION": 0,
		"CREATE":              1,
		"UPDATE":              2,
		"DELETE":              3,
	}
)

func (x Audit_Interaction) Enum() *Audit_Interaction {
	p := new(Audit_Interaction)
	*p = x
	return p
}

func (x Audit_Interaction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Audit_Interaction) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_audit_proto_enumTypes[1].Descriptor()
}

func (Audit_Interaction) Type() protoreflect.EnumType {
	return &file_api_v1_audit_proto_enumTypes[1]
}

func (x Audit_Interaction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Audit_Interaction.Descriptor instead.
func (Audit_Interaction) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_audit_proto_rawDescGZIP(), []int{0, 1}
}

type Audit_AccessMethod int32

const (
	Audit_UNKNOWN_METHOD Audit_AccessMethod = 0
	Audit_CLI            Audit_AccessMethod = 1
	Audit_UI             Audit_AccessMethod = 2
	Audit_API            Audit_AccessMethod = 3
)

// Enum value maps for Audit_AccessMethod.
var (
	Audit_AccessMethod_name = map[int32]string{
		0: "UNKNOWN_METHOD",
		1: "CLI",
		2: "UI",
		3: "API",
	}
	Audit_AccessMethod_value = map[string]int32{
		"UNKNOWN_METHOD": 0,
		"CLI":            1,
		"UI":             2,
		"API":            3,
	}
)

func (x Audit_AccessMethod) Enum() *Audit_AccessMethod {
	p := new(Audit_AccessMethod)
	*p = x
	return p
}

func (x Audit_AccessMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Audit_AccessMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_audit_proto_enumTypes[2].Descriptor()
}

func (Audit_AccessMethod) Type() protoreflect.EnumType {
	return &file_api_v1_audit_proto_enumTypes[2]
}

func (x Audit_AccessMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Audit_AccessMethod.Descriptor instead.
func (Audit_AccessMethod) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_audit_proto_rawDescGZIP(), []int{0, 2}
}

type Audit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Audit) Reset() {
	*x = Audit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_audit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audit) ProtoMessage() {}

func (x *Audit) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_audit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audit.ProtoReflect.Descriptor instead.
func (*Audit) Descriptor() ([]byte, []int) {
	return file_api_v1_audit_proto_rawDescGZIP(), []int{0}
}

type Audit_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Status       Audit_RequestStatus    `protobuf:"varint,2,opt,name=status,proto3,enum=v1.Audit_RequestStatus" json:"status,omitempty"`
	StatusReason string                 `protobuf:"bytes,3,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
	User         *storage.UserInfo      `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Request      *Audit_Message_Request `protobuf:"bytes,5,opt,name=request,proto3" json:"request,omitempty"`
	Method       Audit_AccessMethod     `protobuf:"varint,6,opt,name=method,proto3,enum=v1.Audit_AccessMethod" json:"method,omitempty"`
	Interaction  Audit_Interaction      `protobuf:"varint,7,opt,name=interaction,proto3,enum=v1.Audit_Interaction" json:"interaction,omitempty"`
}

func (x *Audit_Message) Reset() {
	*x = Audit_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_audit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audit_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audit_Message) ProtoMessage() {}

func (x *Audit_Message) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_audit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audit_Message.ProtoReflect.Descriptor instead.
func (*Audit_Message) Descriptor() ([]byte, []int) {
	return file_api_v1_audit_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Audit_Message) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Audit_Message) GetStatus() Audit_RequestStatus {
	if x != nil {
		return x.Status
	}
	return Audit_UNKNOWN_STATUS
}

func (x *Audit_Message) GetStatusReason() string {
	if x != nil {
		return x.StatusReason
	}
	return ""
}

func (x *Audit_Message) GetUser() *storage.UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Audit_Message) GetRequest() *Audit_Message_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *Audit_Message) GetMethod() Audit_AccessMethod {
	if x != nil {
		return x.Method
	}
	return Audit_UNKNOWN_METHOD
}

func (x *Audit_Message) GetInteraction() Audit_Interaction {
	if x != nil {
		return x.Interaction
	}
	return Audit_UNKNOWN_INTERACTION
}

type Audit_Message_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint      string                               `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Method        string                               `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Payload       *anypb.Any                           `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	SourceHeaders *Audit_Message_Request_SourceHeaders `protobuf:"bytes,4,opt,name=source_headers,json=sourceHeaders,proto3" json:"source_headers,omitempty"`
	// The source IP of the request.
	// This is determined from the values found within the request's source.
	// The following priority is given:
	//  1. X-Forwarded-For
	//  2. Remote-Addr
	//  3. Request address
	//
	// Depending on how Central configured to be exposed, the source IP _may_ be a cluster internal IP.
	//
	// In case of exposure with a Kubernetes Load Balancer Service, follow this configuration instruction
	// to preserve the client IP: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
	//
	// In case of exposure with a Route, following types support preserving the client IP:
	// - edge
	// - re-encrypt
	// The tls-passthrough type does not support preserving the client IP, due to the router not being able
	// to decrypt the incoming HTTP request and adding additional headers (i.e. X-Forwarded-For) to the request.
	//
	// In case of exposure with a custom loadbalancer / ingress controller, if HTTPS is passed through to the
	// Central, it also might not preserve the client IP correctly.
	SourceIp string `protobuf:"bytes,5,opt,name=source_ip,json=sourceIp,proto3" json:"source_ip,omitempty"`
}

func (x *Audit_Message_Request) Reset() {
	*x = Audit_Message_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_audit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audit_Message_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audit_Message_Request) ProtoMessage() {}

func (x *Audit_Message_Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_audit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audit_Message_Request.ProtoReflect.Descriptor instead.
func (*Audit_Message_Request) Descriptor() ([]byte, []int) {
	return file_api_v1_audit_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Audit_Message_Request) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Audit_Message_Request) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Audit_Message_Request) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Audit_Message_Request) GetSourceHeaders() *Audit_Message_Request_SourceHeaders {
	if x != nil {
		return x.SourceHeaders
	}
	return nil
}

func (x *Audit_Message_Request) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

// SourceHeaders holds information about the request's source.
type Audit_Message_Request_SourceHeaders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The "X-Forwarded-For" header associated with the request, if it was present.
	XForwardedFor string `protobuf:"bytes,1,opt,name=x_forwarded_for,json=xForwardedFor,proto3" json:"x_forwarded_for,omitempty"`
	// The "Remote-Addr" header associated with the request, if it was present.
	RemoteAddr string `protobuf:"bytes,2,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	// The HTTP request's address. This will always be present, but may not preserve
	// the _actual_ client IP. See source_ip for a more detailed documentation.
	RequestAddr string `protobuf:"bytes,3,opt,name=request_addr,json=requestAddr,proto3" json:"request_addr,omitempty"`
}

func (x *Audit_Message_Request_SourceHeaders) Reset() {
	*x = Audit_Message_Request_SourceHeaders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_audit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audit_Message_Request_SourceHeaders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audit_Message_Request_SourceHeaders) ProtoMessage() {}

func (x *Audit_Message_Request_SourceHeaders) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_audit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audit_Message_Request_SourceHeaders.ProtoReflect.Descriptor instead.
func (*Audit_Message_Request_SourceHeaders) Descriptor() ([]byte, []int) {
	return file_api_v1_audit_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *Audit_Message_Request_SourceHeaders) GetXForwardedFor() string {
	if x != nil {
		return x.XForwardedFor
	}
	return ""
}

func (x *Audit_Message_Request_SourceHeaders) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

func (x *Audit_Message_Request_SourceHeaders) GetRequestAddr() string {
	if x != nil {
		return x.RequestAddr
	}
	return ""
}

var File_api_v1_audit_proto protoreflect.FileDescriptor

var file_api_v1_audit_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x07, 0x0a, 0x05, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x1a, 0xae, 0x05, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x37, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xd7, 0x02, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4e, 0x0a, 0x0e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x70, 0x1a, 0x7b, 0x0a, 0x0d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x78, 0x5f, 0x66, 0x6f, 0x72,
	0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x78, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x22, 0x5f, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0f, 0x0a, 0x0b, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x03, 0x22, 0x4a, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03,
	0x22, 0x3c, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4d, 0x45, 0x54, 0x48,
	0x4f, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4c, 0x49, 0x10, 0x01, 0x12, 0x06, 0x0a,
	0x02, 0x55, 0x49, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x50, 0x49, 0x10, 0x03, 0x42, 0x27,
	0x0a, 0x18, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x72, 0x6f, 0x78, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x5a, 0x0b, 0x2e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_audit_proto_rawDescOnce sync.Once
	file_api_v1_audit_proto_rawDescData = file_api_v1_audit_proto_rawDesc
)

func file_api_v1_audit_proto_rawDescGZIP() []byte {
	file_api_v1_audit_proto_rawDescOnce.Do(func() {
		file_api_v1_audit_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_audit_proto_rawDescData)
	})
	return file_api_v1_audit_proto_rawDescData
}

var file_api_v1_audit_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_v1_audit_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_v1_audit_proto_goTypes = []any{
	(Audit_RequestStatus)(0),                    // 0: v1.Audit.RequestStatus
	(Audit_Interaction)(0),                      // 1: v1.Audit.Interaction
	(Audit_AccessMethod)(0),                     // 2: v1.Audit.AccessMethod
	(*Audit)(nil),                               // 3: v1.Audit
	(*Audit_Message)(nil),                       // 4: v1.Audit.Message
	(*Audit_Message_Request)(nil),               // 5: v1.Audit.Message.Request
	(*Audit_Message_Request_SourceHeaders)(nil), // 6: v1.Audit.Message.Request.SourceHeaders
	(*timestamppb.Timestamp)(nil),               // 7: google.protobuf.Timestamp
	(*storage.UserInfo)(nil),                    // 8: storage.UserInfo
	(*anypb.Any)(nil),                           // 9: google.protobuf.Any
}
var file_api_v1_audit_proto_depIdxs = []int32{
	7, // 0: v1.Audit.Message.time:type_name -> google.protobuf.Timestamp
	0, // 1: v1.Audit.Message.status:type_name -> v1.Audit.RequestStatus
	8, // 2: v1.Audit.Message.user:type_name -> storage.UserInfo
	5, // 3: v1.Audit.Message.request:type_name -> v1.Audit.Message.Request
	2, // 4: v1.Audit.Message.method:type_name -> v1.Audit.AccessMethod
	1, // 5: v1.Audit.Message.interaction:type_name -> v1.Audit.Interaction
	9, // 6: v1.Audit.Message.Request.payload:type_name -> google.protobuf.Any
	6, // 7: v1.Audit.Message.Request.source_headers:type_name -> v1.Audit.Message.Request.SourceHeaders
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_api_v1_audit_proto_init() }
func file_api_v1_audit_proto_init() {
	if File_api_v1_audit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_audit_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Audit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_audit_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Audit_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_audit_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Audit_Message_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_audit_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Audit_Message_Request_SourceHeaders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_audit_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1_audit_proto_goTypes,
		DependencyIndexes: file_api_v1_audit_proto_depIdxs,
		EnumInfos:         file_api_v1_audit_proto_enumTypes,
		MessageInfos:      file_api_v1_audit_proto_msgTypes,
	}.Build()
	File_api_v1_audit_proto = out.File
	file_api_v1_audit_proto_rawDesc = nil
	file_api_v1_audit_proto_goTypes = nil
	file_api_v1_audit_proto_depIdxs = nil
}
