// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: api/v1/config_service.proto

package v1

import (
	storage "github.com/stackrox/rox/generated/storage"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PutConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *storage.Config `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *PutConfigRequest) Reset() {
	*x = PutConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_config_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutConfigRequest) ProtoMessage() {}

func (x *PutConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_config_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutConfigRequest.ProtoReflect.Descriptor instead.
func (*PutConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_config_service_proto_rawDescGZIP(), []int{0}
}

func (x *PutConfigRequest) GetConfig() *storage.Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type DayOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumDays uint32 `protobuf:"varint,1,opt,name=num_days,json=numDays,proto3" json:"num_days,omitempty"`
	Enabled bool   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *DayOption) Reset() {
	*x = DayOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_config_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DayOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayOption) ProtoMessage() {}

func (x *DayOption) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_config_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayOption.ProtoReflect.Descriptor instead.
func (*DayOption) Descriptor() ([]byte, []int) {
	return file_api_v1_config_service_proto_rawDescGZIP(), []int{1}
}

func (x *DayOption) GetNumDays() uint32 {
	if x != nil {
		return x.NumDays
	}
	return 0
}

func (x *DayOption) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type VulnerabilityExceptionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpiryOptions *VulnerabilityExceptionConfig_ExpiryOptions `protobuf:"bytes,1,opt,name=expiry_options,json=expiryOptions,proto3" json:"expiry_options,omitempty"`
}

func (x *VulnerabilityExceptionConfig) Reset() {
	*x = VulnerabilityExceptionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_config_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnerabilityExceptionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityExceptionConfig) ProtoMessage() {}

func (x *VulnerabilityExceptionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_config_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnerabilityExceptionConfig.ProtoReflect.Descriptor instead.
func (*VulnerabilityExceptionConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_config_service_proto_rawDescGZIP(), []int{2}
}

func (x *VulnerabilityExceptionConfig) GetExpiryOptions() *VulnerabilityExceptionConfig_ExpiryOptions {
	if x != nil {
		return x.ExpiryOptions
	}
	return nil
}

type GetVulnerabilityExceptionConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *VulnerabilityExceptionConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetVulnerabilityExceptionConfigResponse) Reset() {
	*x = GetVulnerabilityExceptionConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_config_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVulnerabilityExceptionConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVulnerabilityExceptionConfigResponse) ProtoMessage() {}

func (x *GetVulnerabilityExceptionConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_config_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVulnerabilityExceptionConfigResponse.ProtoReflect.Descriptor instead.
func (*GetVulnerabilityExceptionConfigResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_config_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetVulnerabilityExceptionConfigResponse) GetConfig() *VulnerabilityExceptionConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateVulnerabilityExceptionConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *VulnerabilityExceptionConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *UpdateVulnerabilityExceptionConfigRequest) Reset() {
	*x = UpdateVulnerabilityExceptionConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_config_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVulnerabilityExceptionConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVulnerabilityExceptionConfigRequest) ProtoMessage() {}

func (x *UpdateVulnerabilityExceptionConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_config_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVulnerabilityExceptionConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateVulnerabilityExceptionConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_config_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateVulnerabilityExceptionConfigRequest) GetConfig() *VulnerabilityExceptionConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateVulnerabilityExceptionConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *VulnerabilityExceptionConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *UpdateVulnerabilityExceptionConfigResponse) Reset() {
	*x = UpdateVulnerabilityExceptionConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_config_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVulnerabilityExceptionConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVulnerabilityExceptionConfigResponse) ProtoMessage() {}

func (x *UpdateVulnerabilityExceptionConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_config_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVulnerabilityExceptionConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateVulnerabilityExceptionConfigResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_config_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateVulnerabilityExceptionConfigResponse) GetConfig() *VulnerabilityExceptionConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type VulnerabilityExceptionConfig_FixableCVEOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This options allows users to expire the vulnerability deferral request if and only if **all** vulnerabilities
	// in the requests become fixable.
	AllFixable bool `protobuf:"varint,1,opt,name=all_fixable,json=allFixable,proto3" json:"all_fixable,omitempty"`
	// This options allows users to expire the vulnerability deferral request if **any** vulnerability
	// in the requests become fixable.
	AnyFixable bool `protobuf:"varint,2,opt,name=any_fixable,json=anyFixable,proto3" json:"any_fixable,omitempty"`
}

func (x *VulnerabilityExceptionConfig_FixableCVEOptions) Reset() {
	*x = VulnerabilityExceptionConfig_FixableCVEOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_config_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnerabilityExceptionConfig_FixableCVEOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityExceptionConfig_FixableCVEOptions) ProtoMessage() {}

func (x *VulnerabilityExceptionConfig_FixableCVEOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_config_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnerabilityExceptionConfig_FixableCVEOptions.ProtoReflect.Descriptor instead.
func (*VulnerabilityExceptionConfig_FixableCVEOptions) Descriptor() ([]byte, []int) {
	return file_api_v1_config_service_proto_rawDescGZIP(), []int{2, 0}
}

func (x *VulnerabilityExceptionConfig_FixableCVEOptions) GetAllFixable() bool {
	if x != nil {
		return x.AllFixable
	}
	return false
}

func (x *VulnerabilityExceptionConfig_FixableCVEOptions) GetAnyFixable() bool {
	if x != nil {
		return x.AnyFixable
	}
	return false
}

type VulnerabilityExceptionConfig_ExpiryOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This allows users to set expiry interval based on number of days.
	DayOptions []*DayOption `protobuf:"bytes,1,rep,name=day_options,json=dayOptions,proto3" json:"day_options,omitempty"`
	// This allows users to set vulnerability request expiry based on the CVEs.
	FixableCveOptions *VulnerabilityExceptionConfig_FixableCVEOptions `protobuf:"bytes,2,opt,name=fixable_cve_options,json=fixableCveOptions,proto3" json:"fixable_cve_options,omitempty"`
	// This option, if true, allows UI to show a custom date picker for setting expiry date.
	CustomDate bool `protobuf:"varint,3,opt,name=custom_date,json=customDate,proto3" json:"custom_date,omitempty"`
	Indefinite bool `protobuf:"varint,4,opt,name=indefinite,proto3" json:"indefinite,omitempty"`
}

func (x *VulnerabilityExceptionConfig_ExpiryOptions) Reset() {
	*x = VulnerabilityExceptionConfig_ExpiryOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_config_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnerabilityExceptionConfig_ExpiryOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityExceptionConfig_ExpiryOptions) ProtoMessage() {}

func (x *VulnerabilityExceptionConfig_ExpiryOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_config_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnerabilityExceptionConfig_ExpiryOptions.ProtoReflect.Descriptor instead.
func (*VulnerabilityExceptionConfig_ExpiryOptions) Descriptor() ([]byte, []int) {
	return file_api_v1_config_service_proto_rawDescGZIP(), []int{2, 1}
}

func (x *VulnerabilityExceptionConfig_ExpiryOptions) GetDayOptions() []*DayOption {
	if x != nil {
		return x.DayOptions
	}
	return nil
}

func (x *VulnerabilityExceptionConfig_ExpiryOptions) GetFixableCveOptions() *VulnerabilityExceptionConfig_FixableCVEOptions {
	if x != nil {
		return x.FixableCveOptions
	}
	return nil
}

func (x *VulnerabilityExceptionConfig_ExpiryOptions) GetCustomDate() bool {
	if x != nil {
		return x.CustomDate
	}
	return false
}

func (x *VulnerabilityExceptionConfig_ExpiryOptions) GetIndefinite() bool {
	if x != nil {
		return x.Indefinite
	}
	return false
}

var File_api_v1_config_service_proto protoreflect.FileDescriptor

var file_api_v1_config_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76,
	0x31, 0x1a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x10, 0x50, 0x75, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x40, 0x0a, 0x09, 0x44, 0x61, 0x79, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x44, 0x61, 0x79, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xb3, 0x03, 0x0a, 0x1c, 0x56, 0x75, 0x6c,
	0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x55, 0x0a, 0x0e, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x55, 0x0a, 0x11, 0x46, 0x69, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x56, 0x45, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x5f, 0x66, 0x69, 0x78,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x46,
	0x69, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x79, 0x5f, 0x66, 0x69,
	0x78, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6e, 0x79,
	0x46, 0x69, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0xe4, 0x01, 0x0a, 0x0d, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x0b, 0x64, 0x61, 0x79,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64,
	0x61, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x62, 0x0a, 0x13, 0x66, 0x69, 0x78,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x76, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x75, 0x6c, 0x6e,
	0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x69, 0x78, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x56, 0x45, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x66, 0x69, 0x78, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x76, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x22, 0x63,
	0x0a, 0x27, 0x47, 0x65, 0x74, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0x65, 0x0a, 0x29, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x75, 0x6c,
	0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x38, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x66, 0x0a, 0x2a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x75,
	0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x32, 0x8b, 0x05, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x12, 0x51, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x1a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x56,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x09, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f,
	0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0xbc, 0x01, 0x0a, 0x22, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x2d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x75, 0x6c, 0x6e,
	0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x3a, 0x01, 0x2a, 0x1a, 0x2c, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x2f, 0x65,
	0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x49, 0x0a, 0x09, 0x50, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0f, 0x3a, 0x01, 0x2a, 0x1a, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x42, 0x27, 0x0a, 0x18, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x72, 0x6f, 0x78, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x5a, 0x0b, 0x2e, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x58, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_v1_config_service_proto_rawDescOnce sync.Once
	file_api_v1_config_service_proto_rawDescData = file_api_v1_config_service_proto_rawDesc
)

func file_api_v1_config_service_proto_rawDescGZIP() []byte {
	file_api_v1_config_service_proto_rawDescOnce.Do(func() {
		file_api_v1_config_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_config_service_proto_rawDescData)
	})
	return file_api_v1_config_service_proto_rawDescData
}

var file_api_v1_config_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_v1_config_service_proto_goTypes = []any{
	(*PutConfigRequest)(nil),                               // 0: v1.PutConfigRequest
	(*DayOption)(nil),                                      // 1: v1.DayOption
	(*VulnerabilityExceptionConfig)(nil),                   // 2: v1.VulnerabilityExceptionConfig
	(*GetVulnerabilityExceptionConfigResponse)(nil),        // 3: v1.GetVulnerabilityExceptionConfigResponse
	(*UpdateVulnerabilityExceptionConfigRequest)(nil),      // 4: v1.UpdateVulnerabilityExceptionConfigRequest
	(*UpdateVulnerabilityExceptionConfigResponse)(nil),     // 5: v1.UpdateVulnerabilityExceptionConfigResponse
	(*VulnerabilityExceptionConfig_FixableCVEOptions)(nil), // 6: v1.VulnerabilityExceptionConfig.FixableCVEOptions
	(*VulnerabilityExceptionConfig_ExpiryOptions)(nil),     // 7: v1.VulnerabilityExceptionConfig.ExpiryOptions
	(*storage.Config)(nil),                                 // 8: storage.Config
	(*Empty)(nil),                                          // 9: v1.Empty
	(*storage.PublicConfig)(nil),                           // 10: storage.PublicConfig
	(*storage.PrivateConfig)(nil),                          // 11: storage.PrivateConfig
}
var file_api_v1_config_service_proto_depIdxs = []int32{
	8,  // 0: v1.PutConfigRequest.config:type_name -> storage.Config
	7,  // 1: v1.VulnerabilityExceptionConfig.expiry_options:type_name -> v1.VulnerabilityExceptionConfig.ExpiryOptions
	2,  // 2: v1.GetVulnerabilityExceptionConfigResponse.config:type_name -> v1.VulnerabilityExceptionConfig
	2,  // 3: v1.UpdateVulnerabilityExceptionConfigRequest.config:type_name -> v1.VulnerabilityExceptionConfig
	2,  // 4: v1.UpdateVulnerabilityExceptionConfigResponse.config:type_name -> v1.VulnerabilityExceptionConfig
	1,  // 5: v1.VulnerabilityExceptionConfig.ExpiryOptions.day_options:type_name -> v1.DayOption
	6,  // 6: v1.VulnerabilityExceptionConfig.ExpiryOptions.fixable_cve_options:type_name -> v1.VulnerabilityExceptionConfig.FixableCVEOptions
	9,  // 7: v1.ConfigService.GetPublicConfig:input_type -> v1.Empty
	9,  // 8: v1.ConfigService.GetPrivateConfig:input_type -> v1.Empty
	9,  // 9: v1.ConfigService.GetVulnerabilityExceptionConfig:input_type -> v1.Empty
	4,  // 10: v1.ConfigService.UpdateVulnerabilityExceptionConfig:input_type -> v1.UpdateVulnerabilityExceptionConfigRequest
	9,  // 11: v1.ConfigService.GetConfig:input_type -> v1.Empty
	0,  // 12: v1.ConfigService.PutConfig:input_type -> v1.PutConfigRequest
	10, // 13: v1.ConfigService.GetPublicConfig:output_type -> storage.PublicConfig
	11, // 14: v1.ConfigService.GetPrivateConfig:output_type -> storage.PrivateConfig
	3,  // 15: v1.ConfigService.GetVulnerabilityExceptionConfig:output_type -> v1.GetVulnerabilityExceptionConfigResponse
	5,  // 16: v1.ConfigService.UpdateVulnerabilityExceptionConfig:output_type -> v1.UpdateVulnerabilityExceptionConfigResponse
	8,  // 17: v1.ConfigService.GetConfig:output_type -> storage.Config
	8,  // 18: v1.ConfigService.PutConfig:output_type -> storage.Config
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_v1_config_service_proto_init() }
func file_api_v1_config_service_proto_init() {
	if File_api_v1_config_service_proto != nil {
		return
	}
	file_api_v1_empty_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1_config_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PutConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_config_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DayOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_config_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*VulnerabilityExceptionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_config_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetVulnerabilityExceptionConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_config_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateVulnerabilityExceptionConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_config_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateVulnerabilityExceptionConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_config_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*VulnerabilityExceptionConfig_FixableCVEOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_config_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*VulnerabilityExceptionConfig_ExpiryOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_config_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_config_service_proto_goTypes,
		DependencyIndexes: file_api_v1_config_service_proto_depIdxs,
		MessageInfos:      file_api_v1_config_service_proto_msgTypes,
	}.Build()
	File_api_v1_config_service_proto = out.File
	file_api_v1_config_service_proto_rawDesc = nil
	file_api_v1_config_service_proto_goTypes = nil
	file_api_v1_config_service_proto_depIdxs = nil
}
