// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/v1/delegated_registry_config_service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	storage "github.com/stackrox/rox/generated/storage"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PutDelegatedRegistryConfigRequest struct {
	Config               *storage.DelegatedRegistryConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *PutDelegatedRegistryConfigRequest) Reset()         { *m = PutDelegatedRegistryConfigRequest{} }
func (m *PutDelegatedRegistryConfigRequest) String() string { return proto.CompactTextString(m) }
func (*PutDelegatedRegistryConfigRequest) ProtoMessage()    {}
func (*PutDelegatedRegistryConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_70904b65c1aaa73b, []int{0}
}
func (m *PutDelegatedRegistryConfigRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PutDelegatedRegistryConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PutDelegatedRegistryConfigRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PutDelegatedRegistryConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutDelegatedRegistryConfigRequest.Merge(m, src)
}
func (m *PutDelegatedRegistryConfigRequest) XXX_Size() int {
	return m.Size()
}
func (m *PutDelegatedRegistryConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutDelegatedRegistryConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutDelegatedRegistryConfigRequest proto.InternalMessageInfo

func (m *PutDelegatedRegistryConfigRequest) GetConfig() *storage.DelegatedRegistryConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *PutDelegatedRegistryConfigRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *PutDelegatedRegistryConfigRequest) Clone() *PutDelegatedRegistryConfigRequest {
	if m == nil {
		return nil
	}
	cloned := new(PutDelegatedRegistryConfigRequest)
	*cloned = *m

	cloned.Config = m.Config.Clone()
	return cloned
}

func init() {
	proto.RegisterType((*PutDelegatedRegistryConfigRequest)(nil), "v1.PutDelegatedRegistryConfigRequest")
}

func init() {
	proto.RegisterFile("api/v1/delegated_registry_config_service.proto", fileDescriptor_70904b65c1aaa73b)
}

var fileDescriptor_70904b65c1aaa73b = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x4b, 0x2c, 0xc8, 0xd4,
	0x2f, 0x33, 0xd4, 0x4f, 0x49, 0xcd, 0x49, 0x4d, 0x4f, 0x2c, 0x49, 0x4d, 0x89, 0x2f, 0x4a, 0x4d,
	0xcf, 0x2c, 0x2e, 0x29, 0xaa, 0x8c, 0x4f, 0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0x8f, 0x2f, 0x4e, 0x2d,
	0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x33, 0x94, 0x92,
	0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x69, 0x4d, 0xcc, 0xcb, 0xcb, 0x2f, 0x49, 0x2c,
	0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0xa8, 0x90, 0x12, 0x82, 0x9a, 0x98, 0x9a, 0x5b, 0x50, 0x52, 0x09,
	0x15, 0x53, 0x2f, 0x2e, 0xc9, 0x2f, 0x4a, 0x4c, 0x4f, 0xc5, 0x6d, 0x0d, 0x44, 0xa1, 0x52, 0x2c,
	0x97, 0x62, 0x40, 0x69, 0x89, 0x0b, 0x4c, 0x55, 0x10, 0x54, 0x91, 0x33, 0x58, 0x4d, 0x50, 0x6a,
	0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x05, 0x17, 0x1b, 0x44, 0x93, 0x04, 0xa3, 0x02, 0xa3, 0x06,
	0xb7, 0x91, 0x82, 0x1e, 0xd4, 0x78, 0x3d, 0x5c, 0x1a, 0xa1, 0xea, 0x8d, 0xfe, 0x32, 0x72, 0xc9,
	0xe1, 0x50, 0x13, 0x0c, 0xf1, 0xa6, 0x50, 0x2c, 0x17, 0xa7, 0x7b, 0x6a, 0x09, 0x44, 0x4c, 0x88,
	0x53, 0xaf, 0xcc, 0x50, 0xcf, 0x15, 0xe4, 0x11, 0x29, 0x82, 0x96, 0x28, 0x29, 0x37, 0x5d, 0x7e,
	0x32, 0x99, 0x49, 0x56, 0x48, 0x1a, 0x25, 0x3c, 0x61, 0xfe, 0x84, 0xb8, 0x40, 0xa8, 0x86, 0x8b,
	0x33, 0xa0, 0x14, 0x66, 0xbc, 0x2a, 0xc8, 0x78, 0x82, 0xfe, 0x25, 0xc2, 0x6a, 0x35, 0xb0, 0xd5,
	0x0a, 0x52, 0xf8, 0xac, 0xb6, 0x62, 0xd4, 0x72, 0xd2, 0x3b, 0xf1, 0x48, 0x8e, 0xf1, 0xc2, 0x23,
	0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x67, 0x3c, 0x96, 0x63, 0xe0, 0x92, 0xc8, 0xcc, 0xd7, 0x2b,
	0x2e, 0x49, 0x4c, 0xce, 0x2e, 0xca, 0xaf, 0x80, 0xc4, 0x01, 0x28, 0x45, 0xe8, 0x95, 0x19, 0x46,
	0x31, 0x95, 0x19, 0x46, 0x30, 0x24, 0xb1, 0x81, 0xc5, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x73, 0xf7, 0x5a, 0x96, 0x28, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DelegatedRegistryConfigServiceClient is the client API for DelegatedRegistryConfigService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConnInterface.NewStream.
type DelegatedRegistryConfigServiceClient interface {
	GetConfig(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*storage.DelegatedRegistryConfig, error)
	PutConfig(ctx context.Context, in *PutDelegatedRegistryConfigRequest, opts ...grpc.CallOption) (*storage.DelegatedRegistryConfig, error)
}

type delegatedRegistryConfigServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDelegatedRegistryConfigServiceClient(cc grpc.ClientConnInterface) DelegatedRegistryConfigServiceClient {
	return &delegatedRegistryConfigServiceClient{cc}
}

func (c *delegatedRegistryConfigServiceClient) GetConfig(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*storage.DelegatedRegistryConfig, error) {
	out := new(storage.DelegatedRegistryConfig)
	err := c.cc.Invoke(ctx, "/v1.DelegatedRegistryConfigService/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *delegatedRegistryConfigServiceClient) PutConfig(ctx context.Context, in *PutDelegatedRegistryConfigRequest, opts ...grpc.CallOption) (*storage.DelegatedRegistryConfig, error) {
	out := new(storage.DelegatedRegistryConfig)
	err := c.cc.Invoke(ctx, "/v1.DelegatedRegistryConfigService/PutConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DelegatedRegistryConfigServiceServer is the server API for DelegatedRegistryConfigService service.
type DelegatedRegistryConfigServiceServer interface {
	GetConfig(context.Context, *Empty) (*storage.DelegatedRegistryConfig, error)
	PutConfig(context.Context, *PutDelegatedRegistryConfigRequest) (*storage.DelegatedRegistryConfig, error)
}

// UnimplementedDelegatedRegistryConfigServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDelegatedRegistryConfigServiceServer struct {
}

func (*UnimplementedDelegatedRegistryConfigServiceServer) GetConfig(ctx context.Context, req *Empty) (*storage.DelegatedRegistryConfig, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfig not implemented")
}
func (*UnimplementedDelegatedRegistryConfigServiceServer) PutConfig(ctx context.Context, req *PutDelegatedRegistryConfigRequest) (*storage.DelegatedRegistryConfig, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutConfig not implemented")
}

func RegisterDelegatedRegistryConfigServiceServer(s *grpc.Server, srv DelegatedRegistryConfigServiceServer) {
	s.RegisterService(&_DelegatedRegistryConfigService_serviceDesc, srv)
}

func _DelegatedRegistryConfigService_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DelegatedRegistryConfigServiceServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.DelegatedRegistryConfigService/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DelegatedRegistryConfigServiceServer).GetConfig(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DelegatedRegistryConfigService_PutConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutDelegatedRegistryConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DelegatedRegistryConfigServiceServer).PutConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.DelegatedRegistryConfigService/PutConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DelegatedRegistryConfigServiceServer).PutConfig(ctx, req.(*PutDelegatedRegistryConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DelegatedRegistryConfigService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.DelegatedRegistryConfigService",
	HandlerType: (*DelegatedRegistryConfigServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetConfig",
			Handler:    _DelegatedRegistryConfigService_GetConfig_Handler,
		},
		{
			MethodName: "PutConfig",
			Handler:    _DelegatedRegistryConfigService_PutConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1/delegated_registry_config_service.proto",
}

func (m *PutDelegatedRegistryConfigRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PutDelegatedRegistryConfigRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PutDelegatedRegistryConfigRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Config != nil {
		{
			size, err := m.Config.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDelegatedRegistryConfigService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintDelegatedRegistryConfigService(dAtA []byte, offset int, v uint64) int {
	offset -= sovDelegatedRegistryConfigService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PutDelegatedRegistryConfigRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Config != nil {
		l = m.Config.Size()
		n += 1 + l + sovDelegatedRegistryConfigService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovDelegatedRegistryConfigService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDelegatedRegistryConfigService(x uint64) (n int) {
	return sovDelegatedRegistryConfigService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PutDelegatedRegistryConfigRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDelegatedRegistryConfigService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PutDelegatedRegistryConfigRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PutDelegatedRegistryConfigRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDelegatedRegistryConfigService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDelegatedRegistryConfigService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDelegatedRegistryConfigService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Config == nil {
				m.Config = &storage.DelegatedRegistryConfig{}
			}
			if err := m.Config.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDelegatedRegistryConfigService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDelegatedRegistryConfigService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDelegatedRegistryConfigService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDelegatedRegistryConfigService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDelegatedRegistryConfigService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDelegatedRegistryConfigService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDelegatedRegistryConfigService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDelegatedRegistryConfigService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDelegatedRegistryConfigService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDelegatedRegistryConfigService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDelegatedRegistryConfigService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDelegatedRegistryConfigService = fmt.Errorf("proto: unexpected end of group")
)
