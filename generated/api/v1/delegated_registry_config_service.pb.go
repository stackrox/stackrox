// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/v1/delegated_registry_config_service.proto

//go:build !protoopaque

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DelegatedRegistryConfig_EnabledFor int32

const (
	// Scan all images via central services except for images from the OCP integrated registry
	DelegatedRegistryConfig_NONE DelegatedRegistryConfig_EnabledFor = 0
	// Scan all images via the secured clusters
	DelegatedRegistryConfig_ALL DelegatedRegistryConfig_EnabledFor = 1
	// Scan images that match `registries` or are from the OCP integrated registry via the secured clusters
	// otherwise scan via central services
	DelegatedRegistryConfig_SPECIFIC DelegatedRegistryConfig_EnabledFor = 2
)

// Enum value maps for DelegatedRegistryConfig_EnabledFor.
var (
	DelegatedRegistryConfig_EnabledFor_name = map[int32]string{
		0: "NONE",
		1: "ALL",
		2: "SPECIFIC",
	}
	DelegatedRegistryConfig_EnabledFor_value = map[string]int32{
		"NONE":     0,
		"ALL":      1,
		"SPECIFIC": 2,
	}
)

func (x DelegatedRegistryConfig_EnabledFor) Enum() *DelegatedRegistryConfig_EnabledFor {
	p := new(DelegatedRegistryConfig_EnabledFor)
	*p = x
	return p
}

func (x DelegatedRegistryConfig_EnabledFor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DelegatedRegistryConfig_EnabledFor) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_delegated_registry_config_service_proto_enumTypes[0].Descriptor()
}

func (DelegatedRegistryConfig_EnabledFor) Type() protoreflect.EnumType {
	return &file_api_v1_delegated_registry_config_service_proto_enumTypes[0]
}

func (x DelegatedRegistryConfig_EnabledFor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type DelegatedRegistryClustersResponse struct {
	state         protoimpl.MessageState      `protogen:"hybrid.v1"`
	Clusters      []*DelegatedRegistryCluster `protobuf:"bytes,1,rep,name=clusters" json:"clusters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelegatedRegistryClustersResponse) Reset() {
	*x = DelegatedRegistryClustersResponse{}
	mi := &file_api_v1_delegated_registry_config_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelegatedRegistryClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegatedRegistryClustersResponse) ProtoMessage() {}

func (x *DelegatedRegistryClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_delegated_registry_config_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DelegatedRegistryClustersResponse) GetClusters() []*DelegatedRegistryCluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *DelegatedRegistryClustersResponse) SetClusters(v []*DelegatedRegistryCluster) {
	x.Clusters = v
}

type DelegatedRegistryClustersResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Clusters []*DelegatedRegistryCluster
}

func (b0 DelegatedRegistryClustersResponse_builder) Build() *DelegatedRegistryClustersResponse {
	m0 := &DelegatedRegistryClustersResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.Clusters = b.Clusters
	return m0
}

type DelegatedRegistryCluster struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Id            *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	IsValid       *bool                  `protobuf:"varint,3,opt,name=is_valid,json=isValid" json:"is_valid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelegatedRegistryCluster) Reset() {
	*x = DelegatedRegistryCluster{}
	mi := &file_api_v1_delegated_registry_config_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelegatedRegistryCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegatedRegistryCluster) ProtoMessage() {}

func (x *DelegatedRegistryCluster) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_delegated_registry_config_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DelegatedRegistryCluster) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *DelegatedRegistryCluster) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DelegatedRegistryCluster) GetIsValid() bool {
	if x != nil && x.IsValid != nil {
		return *x.IsValid
	}
	return false
}

func (x *DelegatedRegistryCluster) SetId(v string) {
	x.Id = &v
}

func (x *DelegatedRegistryCluster) SetName(v string) {
	x.Name = &v
}

func (x *DelegatedRegistryCluster) SetIsValid(v bool) {
	x.IsValid = &v
}

func (x *DelegatedRegistryCluster) HasId() bool {
	if x == nil {
		return false
	}
	return x.Id != nil
}

func (x *DelegatedRegistryCluster) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *DelegatedRegistryCluster) HasIsValid() bool {
	if x == nil {
		return false
	}
	return x.IsValid != nil
}

func (x *DelegatedRegistryCluster) ClearId() {
	x.Id = nil
}

func (x *DelegatedRegistryCluster) ClearName() {
	x.Name = nil
}

func (x *DelegatedRegistryCluster) ClearIsValid() {
	x.IsValid = nil
}

type DelegatedRegistryCluster_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *string
	Name    *string
	IsValid *bool
}

func (b0 DelegatedRegistryCluster_builder) Build() *DelegatedRegistryCluster {
	m0 := &DelegatedRegistryCluster{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	x.Name = b.Name
	x.IsValid = b.IsValid
	return m0
}

// DelegatedRegistryConfig determines if and where scan requests are delegated to, such as kept in
// central services or sent to particular secured clusters.
type DelegatedRegistryConfig struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Determines if delegation is enabled for no registries, all registries, or specific registries
	EnabledFor *DelegatedRegistryConfig_EnabledFor `protobuf:"varint,1,opt,name=enabled_for,json=enabledFor,enum=v1.DelegatedRegistryConfig_EnabledFor" json:"enabled_for,omitempty"`
	// The default cluster to delegate ad-hoc requests to if no match found in registries, not used
	// if `enabled for` is NONE
	DefaultClusterId *string `protobuf:"bytes,2,opt,name=default_cluster_id,json=defaultClusterId" json:"default_cluster_id,omitempty"`
	// If `enabled for` is NONE registries has no effect.
	//
	// If `ALL` registries directs ad-hoc requests to the specified secured clusters if the path matches.
	//
	// If `SPECIFIC` registries directs ad-hoc requests to the specified secured clusters just like with `ALL`,
	// but in addition images that match the specified paths will be scanned locally by the secured clusters
	// (images from the OCP integrated registry are always scanned locally). Images that do not match a path
	// will be scanned via central services
	Registries    []*DelegatedRegistryConfig_DelegatedRegistry `protobuf:"bytes,3,rep,name=registries" json:"registries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelegatedRegistryConfig) Reset() {
	*x = DelegatedRegistryConfig{}
	mi := &file_api_v1_delegated_registry_config_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelegatedRegistryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegatedRegistryConfig) ProtoMessage() {}

func (x *DelegatedRegistryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_delegated_registry_config_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DelegatedRegistryConfig) GetEnabledFor() DelegatedRegistryConfig_EnabledFor {
	if x != nil && x.EnabledFor != nil {
		return *x.EnabledFor
	}
	return DelegatedRegistryConfig_NONE
}

func (x *DelegatedRegistryConfig) GetDefaultClusterId() string {
	if x != nil && x.DefaultClusterId != nil {
		return *x.DefaultClusterId
	}
	return ""
}

func (x *DelegatedRegistryConfig) GetRegistries() []*DelegatedRegistryConfig_DelegatedRegistry {
	if x != nil {
		return x.Registries
	}
	return nil
}

func (x *DelegatedRegistryConfig) SetEnabledFor(v DelegatedRegistryConfig_EnabledFor) {
	x.EnabledFor = &v
}

func (x *DelegatedRegistryConfig) SetDefaultClusterId(v string) {
	x.DefaultClusterId = &v
}

func (x *DelegatedRegistryConfig) SetRegistries(v []*DelegatedRegistryConfig_DelegatedRegistry) {
	x.Registries = v
}

func (x *DelegatedRegistryConfig) HasEnabledFor() bool {
	if x == nil {
		return false
	}
	return x.EnabledFor != nil
}

func (x *DelegatedRegistryConfig) HasDefaultClusterId() bool {
	if x == nil {
		return false
	}
	return x.DefaultClusterId != nil
}

func (x *DelegatedRegistryConfig) ClearEnabledFor() {
	x.EnabledFor = nil
}

func (x *DelegatedRegistryConfig) ClearDefaultClusterId() {
	x.DefaultClusterId = nil
}

type DelegatedRegistryConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Determines if delegation is enabled for no registries, all registries, or specific registries
	EnabledFor *DelegatedRegistryConfig_EnabledFor
	// The default cluster to delegate ad-hoc requests to if no match found in registries, not used
	// if `enabled for` is NONE
	DefaultClusterId *string
	// If `enabled for` is NONE registries has no effect.
	//
	// If `ALL` registries directs ad-hoc requests to the specified secured clusters if the path matches.
	//
	// If `SPECIFIC` registries directs ad-hoc requests to the specified secured clusters just like with `ALL`,
	// but in addition images that match the specified paths will be scanned locally by the secured clusters
	// (images from the OCP integrated registry are always scanned locally). Images that do not match a path
	// will be scanned via central services
	Registries []*DelegatedRegistryConfig_DelegatedRegistry
}

func (b0 DelegatedRegistryConfig_builder) Build() *DelegatedRegistryConfig {
	m0 := &DelegatedRegistryConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.EnabledFor = b.EnabledFor
	x.DefaultClusterId = b.DefaultClusterId
	x.Registries = b.Registries
	return m0
}

type DelegatedRegistryConfig_DelegatedRegistry struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Registry + optional path, ie: quay.example.com/prod
	Path *string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	// ID of the cluster to delegate ad-hoc requests to
	ClusterId     *string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelegatedRegistryConfig_DelegatedRegistry) Reset() {
	*x = DelegatedRegistryConfig_DelegatedRegistry{}
	mi := &file_api_v1_delegated_registry_config_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelegatedRegistryConfig_DelegatedRegistry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegatedRegistryConfig_DelegatedRegistry) ProtoMessage() {}

func (x *DelegatedRegistryConfig_DelegatedRegistry) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_delegated_registry_config_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DelegatedRegistryConfig_DelegatedRegistry) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *DelegatedRegistryConfig_DelegatedRegistry) GetClusterId() string {
	if x != nil && x.ClusterId != nil {
		return *x.ClusterId
	}
	return ""
}

func (x *DelegatedRegistryConfig_DelegatedRegistry) SetPath(v string) {
	x.Path = &v
}

func (x *DelegatedRegistryConfig_DelegatedRegistry) SetClusterId(v string) {
	x.ClusterId = &v
}

func (x *DelegatedRegistryConfig_DelegatedRegistry) HasPath() bool {
	if x == nil {
		return false
	}
	return x.Path != nil
}

func (x *DelegatedRegistryConfig_DelegatedRegistry) HasClusterId() bool {
	if x == nil {
		return false
	}
	return x.ClusterId != nil
}

func (x *DelegatedRegistryConfig_DelegatedRegistry) ClearPath() {
	x.Path = nil
}

func (x *DelegatedRegistryConfig_DelegatedRegistry) ClearClusterId() {
	x.ClusterId = nil
}

type DelegatedRegistryConfig_DelegatedRegistry_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Registry + optional path, ie: quay.example.com/prod
	Path *string
	// ID of the cluster to delegate ad-hoc requests to
	ClusterId *string
}

func (b0 DelegatedRegistryConfig_DelegatedRegistry_builder) Build() *DelegatedRegistryConfig_DelegatedRegistry {
	m0 := &DelegatedRegistryConfig_DelegatedRegistry{}
	b, x := &b0, m0
	_, _ = b, x
	x.Path = b.Path
	x.ClusterId = b.ClusterId
	return m0
}

var File_api_v1_delegated_registry_config_service_proto protoreflect.FileDescriptor

const file_api_v1_delegated_registry_config_service_proto_rawDesc = "" +
	"\n" +
	".api/v1/delegated_registry_config_service.proto\x12\x02v1\x1a\x12api/v1/empty.proto\x1a\x1cgoogle/api/annotations.proto\x1a!google/protobuf/go_features.proto\"]\n" +
	"!DelegatedRegistryClustersResponse\x128\n" +
	"\bclusters\x18\x01 \x03(\v2\x1c.v1.DelegatedRegistryClusterR\bclusters\"Y\n" +
	"\x18DelegatedRegistryCluster\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x19\n" +
	"\bis_valid\x18\x03 \x01(\bR\aisValid\"\xd6\x02\n" +
	"\x17DelegatedRegistryConfig\x12G\n" +
	"\venabled_for\x18\x01 \x01(\x0e2&.v1.DelegatedRegistryConfig.EnabledForR\n" +
	"enabledFor\x12,\n" +
	"\x12default_cluster_id\x18\x02 \x01(\tR\x10defaultClusterId\x12M\n" +
	"\n" +
	"registries\x18\x03 \x03(\v2-.v1.DelegatedRegistryConfig.DelegatedRegistryR\n" +
	"registries\x1aF\n" +
	"\x11DelegatedRegistry\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x02 \x01(\tR\tclusterId\"-\n" +
	"\n" +
	"EnabledFor\x12\b\n" +
	"\x04NONE\x10\x00\x12\a\n" +
	"\x03ALL\x10\x01\x12\f\n" +
	"\bSPECIFIC\x10\x022\xdb\x02\n" +
	"\x1eDelegatedRegistryConfigService\x12X\n" +
	"\tGetConfig\x12\t.v1.Empty\x1a\x1b.v1.DelegatedRegistryConfig\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v1/delegatedregistryconfig\x12m\n" +
	"\vGetClusters\x12\t.v1.Empty\x1a%.v1.DelegatedRegistryClustersResponse\",\x82\xd3\xe4\x93\x02&\x12$/v1/delegatedregistryconfig/clusters\x12p\n" +
	"\fUpdateConfig\x12\x1b.v1.DelegatedRegistryConfig\x1a\x1b.v1.DelegatedRegistryConfig\"&\x82\xd3\xe4\x93\x02 :\x01*\x1a\x1b/v1/delegatedregistryconfigB/\n" +
	"\x18io.stackrox.proto.api.v1Z\v./api/v1;v1\x92\x03\x05\xd2>\x02\x10\x02X\x01b\beditionsp\xe8\a"

var file_api_v1_delegated_registry_config_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1_delegated_registry_config_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_v1_delegated_registry_config_service_proto_goTypes = []any{
	(DelegatedRegistryConfig_EnabledFor)(0),           // 0: v1.DelegatedRegistryConfig.EnabledFor
	(*DelegatedRegistryClustersResponse)(nil),         // 1: v1.DelegatedRegistryClustersResponse
	(*DelegatedRegistryCluster)(nil),                  // 2: v1.DelegatedRegistryCluster
	(*DelegatedRegistryConfig)(nil),                   // 3: v1.DelegatedRegistryConfig
	(*DelegatedRegistryConfig_DelegatedRegistry)(nil), // 4: v1.DelegatedRegistryConfig.DelegatedRegistry
	(*Empty)(nil), // 5: v1.Empty
}
var file_api_v1_delegated_registry_config_service_proto_depIdxs = []int32{
	2, // 0: v1.DelegatedRegistryClustersResponse.clusters:type_name -> v1.DelegatedRegistryCluster
	0, // 1: v1.DelegatedRegistryConfig.enabled_for:type_name -> v1.DelegatedRegistryConfig.EnabledFor
	4, // 2: v1.DelegatedRegistryConfig.registries:type_name -> v1.DelegatedRegistryConfig.DelegatedRegistry
	5, // 3: v1.DelegatedRegistryConfigService.GetConfig:input_type -> v1.Empty
	5, // 4: v1.DelegatedRegistryConfigService.GetClusters:input_type -> v1.Empty
	3, // 5: v1.DelegatedRegistryConfigService.UpdateConfig:input_type -> v1.DelegatedRegistryConfig
	3, // 6: v1.DelegatedRegistryConfigService.GetConfig:output_type -> v1.DelegatedRegistryConfig
	1, // 7: v1.DelegatedRegistryConfigService.GetClusters:output_type -> v1.DelegatedRegistryClustersResponse
	3, // 8: v1.DelegatedRegistryConfigService.UpdateConfig:output_type -> v1.DelegatedRegistryConfig
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_v1_delegated_registry_config_service_proto_init() }
func file_api_v1_delegated_registry_config_service_proto_init() {
	if File_api_v1_delegated_registry_config_service_proto != nil {
		return
	}
	file_api_v1_empty_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_delegated_registry_config_service_proto_rawDesc), len(file_api_v1_delegated_registry_config_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_delegated_registry_config_service_proto_goTypes,
		DependencyIndexes: file_api_v1_delegated_registry_config_service_proto_depIdxs,
		EnumInfos:         file_api_v1_delegated_registry_config_service_proto_enumTypes,
		MessageInfos:      file_api_v1_delegated_registry_config_service_proto_msgTypes,
	}.Build()
	File_api_v1_delegated_registry_config_service_proto = out.File
	file_api_v1_delegated_registry_config_service_proto_goTypes = nil
	file_api_v1_delegated_registry_config_service_proto_depIdxs = nil
}
