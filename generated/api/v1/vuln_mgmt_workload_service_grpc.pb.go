// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.3
// source: api/v1/vuln_mgmt_workload_service.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	VulnMgmtWorkloadService_VulnMgmtExportWorkloads_FullMethodName = "/v1.VulnMgmtWorkloadService/VulnMgmtExportWorkloads"
)

// VulnMgmtWorkloadServiceClient is the client API for VulnMgmtWorkloadService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type VulnMgmtWorkloadServiceClient interface {
	VulnMgmtExportWorkloads(ctx context.Context, in *VulnMgmtExportWorkloadsRequest, opts ...grpc.CallOption) (VulnMgmtWorkloadService_VulnMgmtExportWorkloadsClient, error)
}

type vulnMgmtWorkloadServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewVulnMgmtWorkloadServiceClient(cc grpc.ClientConnInterface) VulnMgmtWorkloadServiceClient {
	return &vulnMgmtWorkloadServiceClient{cc}
}

func (c *vulnMgmtWorkloadServiceClient) VulnMgmtExportWorkloads(ctx context.Context, in *VulnMgmtExportWorkloadsRequest, opts ...grpc.CallOption) (VulnMgmtWorkloadService_VulnMgmtExportWorkloadsClient, error) {
	stream, err := c.cc.NewStream(ctx, &VulnMgmtWorkloadService_ServiceDesc.Streams[0], VulnMgmtWorkloadService_VulnMgmtExportWorkloads_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &vulnMgmtWorkloadServiceVulnMgmtExportWorkloadsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VulnMgmtWorkloadService_VulnMgmtExportWorkloadsClient interface {
	Recv() (*VulnMgmtExportWorkloadsResponse, error)
	grpc.ClientStream
}

type vulnMgmtWorkloadServiceVulnMgmtExportWorkloadsClient struct {
	grpc.ClientStream
}

func (x *vulnMgmtWorkloadServiceVulnMgmtExportWorkloadsClient) Recv() (*VulnMgmtExportWorkloadsResponse, error) {
	m := new(VulnMgmtExportWorkloadsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// VulnMgmtWorkloadServiceServer is the server API for VulnMgmtWorkloadService service.
// All implementations should embed UnimplementedVulnMgmtWorkloadServiceServer
// for forward compatibility
type VulnMgmtWorkloadServiceServer interface {
	VulnMgmtExportWorkloads(*VulnMgmtExportWorkloadsRequest, VulnMgmtWorkloadService_VulnMgmtExportWorkloadsServer) error
}

// UnimplementedVulnMgmtWorkloadServiceServer should be embedded to have forward compatible implementations.
type UnimplementedVulnMgmtWorkloadServiceServer struct {
}

func (UnimplementedVulnMgmtWorkloadServiceServer) VulnMgmtExportWorkloads(*VulnMgmtExportWorkloadsRequest, VulnMgmtWorkloadService_VulnMgmtExportWorkloadsServer) error {
	return status.Errorf(codes.Unimplemented, "method VulnMgmtExportWorkloads not implemented")
}

// UnsafeVulnMgmtWorkloadServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to VulnMgmtWorkloadServiceServer will
// result in compilation errors.
type UnsafeVulnMgmtWorkloadServiceServer interface {
	mustEmbedUnimplementedVulnMgmtWorkloadServiceServer()
}

func RegisterVulnMgmtWorkloadServiceServer(s grpc.ServiceRegistrar, srv VulnMgmtWorkloadServiceServer) {
	s.RegisterService(&VulnMgmtWorkloadService_ServiceDesc, srv)
}

func _VulnMgmtWorkloadService_VulnMgmtExportWorkloads_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(VulnMgmtExportWorkloadsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VulnMgmtWorkloadServiceServer).VulnMgmtExportWorkloads(m, &vulnMgmtWorkloadServiceVulnMgmtExportWorkloadsServer{stream})
}

type VulnMgmtWorkloadService_VulnMgmtExportWorkloadsServer interface {
	Send(*VulnMgmtExportWorkloadsResponse) error
	grpc.ServerStream
}

type vulnMgmtWorkloadServiceVulnMgmtExportWorkloadsServer struct {
	grpc.ServerStream
}

func (x *vulnMgmtWorkloadServiceVulnMgmtExportWorkloadsServer) Send(m *VulnMgmtExportWorkloadsResponse) error {
	return x.ServerStream.SendMsg(m)
}

// VulnMgmtWorkloadService_ServiceDesc is the grpc.ServiceDesc for VulnMgmtWorkloadService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var VulnMgmtWorkloadService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "v1.VulnMgmtWorkloadService",
	HandlerType: (*VulnMgmtWorkloadServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "VulnMgmtExportWorkloads",
			Handler:       _VulnMgmtWorkloadService_VulnMgmtExportWorkloads_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api/v1/vuln_mgmt_workload_service.proto",
}
