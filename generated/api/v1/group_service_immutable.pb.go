// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package v1

import (
	storage "github.com/stackrox/rox/generated/storage"
)

import (
	"iter"
)

// ImmutableGetGroupsRequest is an immutable interface for GetGroupsRequest
type ImmutableGetGroupsRequest interface {
	GetAuthProviderId() string
	GetKey() string
	GetValue() string
	GetId() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *GetGroupsRequest
}

// Verify that GetGroupsRequest implements ImmutableGetGroupsRequest
var _ ImmutableGetGroupsRequest = (*GetGroupsRequest)(nil)

// ImmutableGetGroupsResponse is an immutable interface for GetGroupsResponse
type ImmutableGetGroupsResponse interface {
	GetImmutableGroups() iter.Seq[*storage.Group]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *GetGroupsResponse
}

// GetImmutableGroups implements ImmutableGetGroupsResponse
func (m *GetGroupsResponse) GetImmutableGroups() iter.Seq[*storage.Group] {
	return func(yield func(*storage.Group) bool) {
		if m == nil || m.Groups == nil {
			return
		}
		for _, v := range m.Groups {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that GetGroupsResponse implements ImmutableGetGroupsResponse
var _ ImmutableGetGroupsResponse = (*GetGroupsResponse)(nil)

// ImmutableGroupBatchUpdateRequest is an immutable interface for GroupBatchUpdateRequest
type ImmutableGroupBatchUpdateRequest interface {
	// Previous groups are the groups expected to be present in the store.
	// Performs a diff on the GroupProperties present in previous_groups and required_groups:
	// 1) if in previous_groups but not required_groups, it gets deleted.
	// 2) if in previous_groups and required_groups, it gets updated.
	// 3) if not in previous_groups but in required_groups, it gets added.
	GetImmutablePreviousGroups() iter.Seq[*storage.Group]
	// Required groups are the groups we want to mutate the previous groups into.
	GetImmutableRequiredGroups() iter.Seq[*storage.Group]
	GetForce() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *GroupBatchUpdateRequest
}

// GetImmutablePreviousGroups implements ImmutableGroupBatchUpdateRequest
func (m *GroupBatchUpdateRequest) GetImmutablePreviousGroups() iter.Seq[*storage.Group] {
	return func(yield func(*storage.Group) bool) {
		if m == nil || m.PreviousGroups == nil {
			return
		}
		for _, v := range m.PreviousGroups {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableRequiredGroups implements ImmutableGroupBatchUpdateRequest
func (m *GroupBatchUpdateRequest) GetImmutableRequiredGroups() iter.Seq[*storage.Group] {
	return func(yield func(*storage.Group) bool) {
		if m == nil || m.RequiredGroups == nil {
			return
		}
		for _, v := range m.RequiredGroups {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that GroupBatchUpdateRequest implements ImmutableGroupBatchUpdateRequest
var _ ImmutableGroupBatchUpdateRequest = (*GroupBatchUpdateRequest)(nil)

// ImmutableDeleteGroupRequest is an immutable interface for DeleteGroupRequest
type ImmutableDeleteGroupRequest interface {
	// We copy over parameters from storage.GroupProperties for seamless HTTP API migration.
	GetAuthProviderId() string
	GetKey() string
	GetValue() string
	GetId() string
	GetForce() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *DeleteGroupRequest
}

// Verify that DeleteGroupRequest implements ImmutableDeleteGroupRequest
var _ ImmutableDeleteGroupRequest = (*DeleteGroupRequest)(nil)

// ImmutableUpdateGroupRequest is an immutable interface for UpdateGroupRequest
type ImmutableUpdateGroupRequest interface {
	GetGroup() *storage.Group
	GetForce() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *UpdateGroupRequest
}

// Verify that UpdateGroupRequest implements ImmutableUpdateGroupRequest
var _ ImmutableUpdateGroupRequest = (*UpdateGroupRequest)(nil)
