// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/v1/search_service.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Next available tag: 78
type SearchCategory int32

const (
	SearchCategory_SEARCH_UNSET                     SearchCategory = 0
	SearchCategory_ALERTS                           SearchCategory = 1
	SearchCategory_IMAGES                           SearchCategory = 2
	SearchCategory_IMAGE_COMPONENTS                 SearchCategory = 20
	SearchCategory_IMAGE_VULN_EDGE                  SearchCategory = 27
	SearchCategory_IMAGE_COMPONENT_EDGE             SearchCategory = 23
	SearchCategory_POLICIES                         SearchCategory = 3
	SearchCategory_DEPLOYMENTS                      SearchCategory = 4
	SearchCategory_ACTIVE_COMPONENT                 SearchCategory = 30
	SearchCategory_PODS                             SearchCategory = 25
	SearchCategory_SECRETS                          SearchCategory = 5
	SearchCategory_PROCESS_INDICATORS               SearchCategory = 6
	SearchCategory_COMPLIANCE                       SearchCategory = 7
	SearchCategory_CLUSTERS                         SearchCategory = 8
	SearchCategory_NAMESPACES                       SearchCategory = 9
	SearchCategory_NODES                            SearchCategory = 10
	SearchCategory_NODE_COMPONENTS                  SearchCategory = 38
	SearchCategory_NODE_VULN_EDGE                   SearchCategory = 28
	SearchCategory_NODE_COMPONENT_EDGE              SearchCategory = 29
	SearchCategory_NODE_COMPONENT_CVE_EDGE          SearchCategory = 33
	SearchCategory_COMPLIANCE_STANDARD              SearchCategory = 11
	SearchCategory_COMPLIANCE_CONTROL_GROUP         SearchCategory = 12
	SearchCategory_COMPLIANCE_CONTROL               SearchCategory = 13
	SearchCategory_SERVICE_ACCOUNTS                 SearchCategory = 14
	SearchCategory_ROLES                            SearchCategory = 15
	SearchCategory_ROLEBINDINGS                     SearchCategory = 16
	SearchCategory_REPORT_CONFIGURATIONS            SearchCategory = 37
	SearchCategory_PROCESS_BASELINES                SearchCategory = 17
	SearchCategory_SUBJECTS                         SearchCategory = 18
	SearchCategory_RISKS                            SearchCategory = 19
	SearchCategory_VULNERABILITIES                  SearchCategory = 21
	SearchCategory_CLUSTER_VULNERABILITIES          SearchCategory = 34
	SearchCategory_IMAGE_VULNERABILITIES            SearchCategory = 35
	SearchCategory_NODE_VULNERABILITIES             SearchCategory = 36
	SearchCategory_COMPONENT_VULN_EDGE              SearchCategory = 22
	SearchCategory_CLUSTER_VULN_EDGE                SearchCategory = 24
	SearchCategory_NETWORK_ENTITY                   SearchCategory = 26
	SearchCategory_VULN_REQUEST                     SearchCategory = 32
	SearchCategory_NETWORK_BASELINE                 SearchCategory = 39
	SearchCategory_NETWORK_POLICIES                 SearchCategory = 40
	SearchCategory_PROCESS_BASELINE_RESULTS         SearchCategory = 41
	SearchCategory_COMPLIANCE_METADATA              SearchCategory = 42
	SearchCategory_COMPLIANCE_RESULTS               SearchCategory = 43
	SearchCategory_COMPLIANCE_DOMAIN                SearchCategory = 44
	SearchCategory_CLUSTER_HEALTH                   SearchCategory = 45
	SearchCategory_POLICY_CATEGORIES                SearchCategory = 46
	SearchCategory_IMAGE_INTEGRATIONS               SearchCategory = 47
	SearchCategory_COLLECTIONS                      SearchCategory = 48
	SearchCategory_POLICY_CATEGORY_EDGE             SearchCategory = 49
	SearchCategory_PROCESS_LISTENING_ON_PORT        SearchCategory = 50
	SearchCategory_API_TOKEN                        SearchCategory = 51
	SearchCategory_REPORT_METADATA                  SearchCategory = 52
	SearchCategory_REPORT_SNAPSHOT                  SearchCategory = 53
	SearchCategory_COMPLIANCE_INTEGRATIONS          SearchCategory = 54
	SearchCategory_COMPLIANCE_SCAN_CONFIG           SearchCategory = 55
	SearchCategory_COMPLIANCE_SCAN                  SearchCategory = 56
	SearchCategory_COMPLIANCE_CHECK_RESULTS         SearchCategory = 57
	SearchCategory_BLOB                             SearchCategory = 58
	SearchCategory_ADMINISTRATION_EVENTS            SearchCategory = 60
	SearchCategory_COMPLIANCE_SCAN_CONFIG_STATUS    SearchCategory = 61
	SearchCategory_ADMINISTRATION_USAGE             SearchCategory = 62
	SearchCategory_COMPLIANCE_PROFILES              SearchCategory = 63
	SearchCategory_COMPLIANCE_RULES                 SearchCategory = 65
	SearchCategory_COMPLIANCE_SCAN_SETTING_BINDINGS SearchCategory = 66
	SearchCategory_COMPLIANCE_SUITES                SearchCategory = 67
	SearchCategory_CLOUD_SOURCES                    SearchCategory = 68
	SearchCategory_DISCOVERED_CLUSTERS              SearchCategory = 69
	SearchCategory_COMPLIANCE_REMEDIATIONS          SearchCategory = 70
	SearchCategory_COMPLIANCE_BENCHMARKS            SearchCategory = 71
	SearchCategory_AUTH_PROVIDERS                   SearchCategory = 72
	SearchCategory_COMPLIANCE_REPORT_SNAPSHOT       SearchCategory = 73
	SearchCategory_IMAGE_COMPONENTS_V2              SearchCategory = 74
	SearchCategory_IMAGE_VULNERABILITIES_V2         SearchCategory = 75
	SearchCategory_IMAGES_V2                        SearchCategory = 76
	SearchCategory_VIRTUAL_MACHINES                 SearchCategory = 77
)

// Enum value maps for SearchCategory.
var (
	SearchCategory_name = map[int32]string{
		0:  "SEARCH_UNSET",
		1:  "ALERTS",
		2:  "IMAGES",
		20: "IMAGE_COMPONENTS",
		27: "IMAGE_VULN_EDGE",
		23: "IMAGE_COMPONENT_EDGE",
		3:  "POLICIES",
		4:  "DEPLOYMENTS",
		30: "ACTIVE_COMPONENT",
		25: "PODS",
		5:  "SECRETS",
		6:  "PROCESS_INDICATORS",
		7:  "COMPLIANCE",
		8:  "CLUSTERS",
		9:  "NAMESPACES",
		10: "NODES",
		38: "NODE_COMPONENTS",
		28: "NODE_VULN_EDGE",
		29: "NODE_COMPONENT_EDGE",
		33: "NODE_COMPONENT_CVE_EDGE",
		11: "COMPLIANCE_STANDARD",
		12: "COMPLIANCE_CONTROL_GROUP",
		13: "COMPLIANCE_CONTROL",
		14: "SERVICE_ACCOUNTS",
		15: "ROLES",
		16: "ROLEBINDINGS",
		37: "REPORT_CONFIGURATIONS",
		17: "PROCESS_BASELINES",
		18: "SUBJECTS",
		19: "RISKS",
		21: "VULNERABILITIES",
		34: "CLUSTER_VULNERABILITIES",
		35: "IMAGE_VULNERABILITIES",
		36: "NODE_VULNERABILITIES",
		22: "COMPONENT_VULN_EDGE",
		24: "CLUSTER_VULN_EDGE",
		26: "NETWORK_ENTITY",
		32: "VULN_REQUEST",
		39: "NETWORK_BASELINE",
		40: "NETWORK_POLICIES",
		41: "PROCESS_BASELINE_RESULTS",
		42: "COMPLIANCE_METADATA",
		43: "COMPLIANCE_RESULTS",
		44: "COMPLIANCE_DOMAIN",
		45: "CLUSTER_HEALTH",
		46: "POLICY_CATEGORIES",
		47: "IMAGE_INTEGRATIONS",
		48: "COLLECTIONS",
		49: "POLICY_CATEGORY_EDGE",
		50: "PROCESS_LISTENING_ON_PORT",
		51: "API_TOKEN",
		52: "REPORT_METADATA",
		53: "REPORT_SNAPSHOT",
		54: "COMPLIANCE_INTEGRATIONS",
		55: "COMPLIANCE_SCAN_CONFIG",
		56: "COMPLIANCE_SCAN",
		57: "COMPLIANCE_CHECK_RESULTS",
		58: "BLOB",
		60: "ADMINISTRATION_EVENTS",
		61: "COMPLIANCE_SCAN_CONFIG_STATUS",
		62: "ADMINISTRATION_USAGE",
		63: "COMPLIANCE_PROFILES",
		65: "COMPLIANCE_RULES",
		66: "COMPLIANCE_SCAN_SETTING_BINDINGS",
		67: "COMPLIANCE_SUITES",
		68: "CLOUD_SOURCES",
		69: "DISCOVERED_CLUSTERS",
		70: "COMPLIANCE_REMEDIATIONS",
		71: "COMPLIANCE_BENCHMARKS",
		72: "AUTH_PROVIDERS",
		73: "COMPLIANCE_REPORT_SNAPSHOT",
		74: "IMAGE_COMPONENTS_V2",
		75: "IMAGE_VULNERABILITIES_V2",
		76: "IMAGES_V2",
		77: "VIRTUAL_MACHINES",
	}
	SearchCategory_value = map[string]int32{
		"SEARCH_UNSET":                     0,
		"ALERTS":                           1,
		"IMAGES":                           2,
		"IMAGE_COMPONENTS":                 20,
		"IMAGE_VULN_EDGE":                  27,
		"IMAGE_COMPONENT_EDGE":             23,
		"POLICIES":                         3,
		"DEPLOYMENTS":                      4,
		"ACTIVE_COMPONENT":                 30,
		"PODS":                             25,
		"SECRETS":                          5,
		"PROCESS_INDICATORS":               6,
		"COMPLIANCE":                       7,
		"CLUSTERS":                         8,
		"NAMESPACES":                       9,
		"NODES":                            10,
		"NODE_COMPONENTS":                  38,
		"NODE_VULN_EDGE":                   28,
		"NODE_COMPONENT_EDGE":              29,
		"NODE_COMPONENT_CVE_EDGE":          33,
		"COMPLIANCE_STANDARD":              11,
		"COMPLIANCE_CONTROL_GROUP":         12,
		"COMPLIANCE_CONTROL":               13,
		"SERVICE_ACCOUNTS":                 14,
		"ROLES":                            15,
		"ROLEBINDINGS":                     16,
		"REPORT_CONFIGURATIONS":            37,
		"PROCESS_BASELINES":                17,
		"SUBJECTS":                         18,
		"RISKS":                            19,
		"VULNERABILITIES":                  21,
		"CLUSTER_VULNERABILITIES":          34,
		"IMAGE_VULNERABILITIES":            35,
		"NODE_VULNERABILITIES":             36,
		"COMPONENT_VULN_EDGE":              22,
		"CLUSTER_VULN_EDGE":                24,
		"NETWORK_ENTITY":                   26,
		"VULN_REQUEST":                     32,
		"NETWORK_BASELINE":                 39,
		"NETWORK_POLICIES":                 40,
		"PROCESS_BASELINE_RESULTS":         41,
		"COMPLIANCE_METADATA":              42,
		"COMPLIANCE_RESULTS":               43,
		"COMPLIANCE_DOMAIN":                44,
		"CLUSTER_HEALTH":                   45,
		"POLICY_CATEGORIES":                46,
		"IMAGE_INTEGRATIONS":               47,
		"COLLECTIONS":                      48,
		"POLICY_CATEGORY_EDGE":             49,
		"PROCESS_LISTENING_ON_PORT":        50,
		"API_TOKEN":                        51,
		"REPORT_METADATA":                  52,
		"REPORT_SNAPSHOT":                  53,
		"COMPLIANCE_INTEGRATIONS":          54,
		"COMPLIANCE_SCAN_CONFIG":           55,
		"COMPLIANCE_SCAN":                  56,
		"COMPLIANCE_CHECK_RESULTS":         57,
		"BLOB":                             58,
		"ADMINISTRATION_EVENTS":            60,
		"COMPLIANCE_SCAN_CONFIG_STATUS":    61,
		"ADMINISTRATION_USAGE":             62,
		"COMPLIANCE_PROFILES":              63,
		"COMPLIANCE_RULES":                 65,
		"COMPLIANCE_SCAN_SETTING_BINDINGS": 66,
		"COMPLIANCE_SUITES":                67,
		"CLOUD_SOURCES":                    68,
		"DISCOVERED_CLUSTERS":              69,
		"COMPLIANCE_REMEDIATIONS":          70,
		"COMPLIANCE_BENCHMARKS":            71,
		"AUTH_PROVIDERS":                   72,
		"COMPLIANCE_REPORT_SNAPSHOT":       73,
		"IMAGE_COMPONENTS_V2":              74,
		"IMAGE_VULNERABILITIES_V2":         75,
		"IMAGES_V2":                        76,
		"VIRTUAL_MACHINES":                 77,
	}
)

func (x SearchCategory) Enum() *SearchCategory {
	p := new(SearchCategory)
	*p = x
	return p
}

func (x SearchCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_search_service_proto_enumTypes[0].Descriptor()
}

func (SearchCategory) Type() protoreflect.EnumType {
	return &file_api_v1_search_service_proto_enumTypes[0]
}

func (x SearchCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type SearchDataType int32

const (
	SearchDataType_SEARCH_BOOL     SearchDataType = 0
	SearchDataType_SEARCH_NUMERIC  SearchDataType = 1
	SearchDataType_SEARCH_STRING   SearchDataType = 2
	SearchDataType_SEARCH_DATETIME SearchDataType = 3
	SearchDataType_SEARCH_MAP      SearchDataType = 4
	SearchDataType_SEARCH_ENUM     SearchDataType = 5
)

// Enum value maps for SearchDataType.
var (
	SearchDataType_name = map[int32]string{
		0: "SEARCH_BOOL",
		1: "SEARCH_NUMERIC",
		2: "SEARCH_STRING",
		3: "SEARCH_DATETIME",
		4: "SEARCH_MAP",
		5: "SEARCH_ENUM",
	}
	SearchDataType_value = map[string]int32{
		"SEARCH_BOOL":     0,
		"SEARCH_NUMERIC":  1,
		"SEARCH_STRING":   2,
		"SEARCH_DATETIME": 3,
		"SEARCH_MAP":      4,
		"SEARCH_ENUM":     5,
	}
)

func (x SearchDataType) Enum() *SearchDataType {
	p := new(SearchDataType)
	*p = x
	return p
}

func (x SearchDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_search_service_proto_enumTypes[1].Descriptor()
}

func (SearchDataType) Type() protoreflect.EnumType {
	return &file_api_v1_search_service_proto_enumTypes[1]
}

func (x SearchDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// RawQuery represents the search query string.
// The format of the query string is "<field name>:<value,value,...>+<field name>:<value, value,...>+..."
// For example:
// To search for deployments named "central" and "sensor" in the namespace "stackrox", the query string would be
// "Deployment:central,sensor+Namespace:stackrox"
// RawQuery is used in ListAPIs to search for a particular object.
type RawQuery struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Query       *string                `protobuf:"bytes,1,opt,name=query"`
	xxx_hidden_Pagination  *Pagination            `protobuf:"bytes,2,opt,name=pagination"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RawQuery) Reset() {
	*x = RawQuery{}
	mi := &file_api_v1_search_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawQuery) ProtoMessage() {}

func (x *RawQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RawQuery) GetQuery() string {
	if x != nil {
		if x.xxx_hidden_Query != nil {
			return *x.xxx_hidden_Query
		}
		return ""
	}
	return ""
}

func (x *RawQuery) GetPagination() *Pagination {
	if x != nil {
		return x.xxx_hidden_Pagination
	}
	return nil
}

func (x *RawQuery) SetQuery(v string) {
	x.xxx_hidden_Query = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *RawQuery) SetPagination(v *Pagination) {
	x.xxx_hidden_Pagination = v
}

func (x *RawQuery) HasQuery() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RawQuery) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Pagination != nil
}

func (x *RawQuery) ClearQuery() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Query = nil
}

func (x *RawQuery) ClearPagination() {
	x.xxx_hidden_Pagination = nil
}

type RawQuery_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Query      *string
	Pagination *Pagination
}

func (b0 RawQuery_builder) Build() *RawQuery {
	m0 := &RawQuery{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Query != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Query = b.Query
	}
	x.xxx_hidden_Pagination = b.Pagination
	return m0
}

// RawSearchRequest is used to scope a given search in a specific category.
// The search categories could be deployments, policies, images etc.
type RawSearchRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Query       *string                `protobuf:"bytes,1,opt,name=query"`
	xxx_hidden_Categories  []SearchCategory       `protobuf:"varint,2,rep,packed,name=categories,enum=v1.SearchCategory"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RawSearchRequest) Reset() {
	*x = RawSearchRequest{}
	mi := &file_api_v1_search_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawSearchRequest) ProtoMessage() {}

func (x *RawSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RawSearchRequest) GetQuery() string {
	if x != nil {
		if x.xxx_hidden_Query != nil {
			return *x.xxx_hidden_Query
		}
		return ""
	}
	return ""
}

func (x *RawSearchRequest) GetCategories() []SearchCategory {
	if x != nil {
		return x.xxx_hidden_Categories
	}
	return nil
}

func (x *RawSearchRequest) SetQuery(v string) {
	x.xxx_hidden_Query = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *RawSearchRequest) SetCategories(v []SearchCategory) {
	x.xxx_hidden_Categories = v
}

func (x *RawSearchRequest) HasQuery() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *RawSearchRequest) ClearQuery() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Query = nil
}

type RawSearchRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Query      *string
	Categories []SearchCategory
}

func (b0 RawSearchRequest_builder) Build() *RawSearchRequest {
	m0 := &RawSearchRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Query != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Query = b.Query
	}
	x.xxx_hidden_Categories = b.Categories
	return m0
}

type QuerySortOption struct {
	state                     protoimpl.MessageState           `protogen:"opaque.v1"`
	xxx_hidden_Field          *string                          `protobuf:"bytes,1,opt,name=field"`
	xxx_hidden_Reversed       bool                             `protobuf:"varint,2,opt,name=reversed"`
	xxx_hidden_SearchAfterOpt isQuerySortOption_SearchAfterOpt `protobuf_oneof:"search_after_opt"`
	xxx_hidden_AggregateBy    *AggregateBy                     `protobuf:"bytes,4,opt,name=aggregate_by,json=aggregateBy"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *QuerySortOption) Reset() {
	*x = QuerySortOption{}
	mi := &file_api_v1_search_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySortOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySortOption) ProtoMessage() {}

func (x *QuerySortOption) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QuerySortOption) GetField() string {
	if x != nil {
		if x.xxx_hidden_Field != nil {
			return *x.xxx_hidden_Field
		}
		return ""
	}
	return ""
}

func (x *QuerySortOption) GetReversed() bool {
	if x != nil {
		return x.xxx_hidden_Reversed
	}
	return false
}

func (x *QuerySortOption) GetSearchAfter() string {
	if x != nil {
		if x, ok := x.xxx_hidden_SearchAfterOpt.(*querySortOption_SearchAfter); ok {
			return x.SearchAfter
		}
	}
	return ""
}

func (x *QuerySortOption) GetAggregateBy() *AggregateBy {
	if x != nil {
		return x.xxx_hidden_AggregateBy
	}
	return nil
}

func (x *QuerySortOption) SetField(v string) {
	x.xxx_hidden_Field = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *QuerySortOption) SetReversed(v bool) {
	x.xxx_hidden_Reversed = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *QuerySortOption) SetSearchAfter(v string) {
	x.xxx_hidden_SearchAfterOpt = &querySortOption_SearchAfter{v}
}

func (x *QuerySortOption) SetAggregateBy(v *AggregateBy) {
	x.xxx_hidden_AggregateBy = v
}

func (x *QuerySortOption) HasField() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *QuerySortOption) HasReversed() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *QuerySortOption) HasSearchAfterOpt() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SearchAfterOpt != nil
}

func (x *QuerySortOption) HasSearchAfter() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_SearchAfterOpt.(*querySortOption_SearchAfter)
	return ok
}

func (x *QuerySortOption) HasAggregateBy() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_AggregateBy != nil
}

func (x *QuerySortOption) ClearField() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Field = nil
}

func (x *QuerySortOption) ClearReversed() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Reversed = false
}

func (x *QuerySortOption) ClearSearchAfterOpt() {
	x.xxx_hidden_SearchAfterOpt = nil
}

func (x *QuerySortOption) ClearSearchAfter() {
	if _, ok := x.xxx_hidden_SearchAfterOpt.(*querySortOption_SearchAfter); ok {
		x.xxx_hidden_SearchAfterOpt = nil
	}
}

func (x *QuerySortOption) ClearAggregateBy() {
	x.xxx_hidden_AggregateBy = nil
}

const QuerySortOption_SearchAfterOpt_not_set_case case_QuerySortOption_SearchAfterOpt = 0
const QuerySortOption_SearchAfter_case case_QuerySortOption_SearchAfterOpt = 3

func (x *QuerySortOption) WhichSearchAfterOpt() case_QuerySortOption_SearchAfterOpt {
	if x == nil {
		return QuerySortOption_SearchAfterOpt_not_set_case
	}
	switch x.xxx_hidden_SearchAfterOpt.(type) {
	case *querySortOption_SearchAfter:
		return QuerySortOption_SearchAfter_case
	default:
		return QuerySortOption_SearchAfterOpt_not_set_case
	}
}

type QuerySortOption_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Field    *string
	Reversed *bool
	// Fields of oneof xxx_hidden_SearchAfterOpt:
	// search_after is alternative to offset for pagination.
	// Each value in search_after corresponds to a field. Only results following a record specified by a combination
	// of field+search_after values in specified sorting order will be returned.
	SearchAfter *string
	// -- end of xxx_hidden_SearchAfterOpt
	AggregateBy *AggregateBy
}

func (b0 QuerySortOption_builder) Build() *QuerySortOption {
	m0 := &QuerySortOption{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Field != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Field = b.Field
	}
	if b.Reversed != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Reversed = *b.Reversed
	}
	if b.SearchAfter != nil {
		x.xxx_hidden_SearchAfterOpt = &querySortOption_SearchAfter{*b.SearchAfter}
	}
	x.xxx_hidden_AggregateBy = b.AggregateBy
	return m0
}

type case_QuerySortOption_SearchAfterOpt protoreflect.FieldNumber

func (x case_QuerySortOption_SearchAfterOpt) String() string {
	md := file_api_v1_search_service_proto_msgTypes[2].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isQuerySortOption_SearchAfterOpt interface {
	isQuerySortOption_SearchAfterOpt()
}

type querySortOption_SearchAfter struct {
	// search_after is alternative to offset for pagination.
	// Each value in search_after corresponds to a field. Only results following a record specified by a combination
	// of field+search_after values in specified sorting order will be returned.
	SearchAfter string `protobuf:"bytes,3,opt,name=search_after,json=searchAfter,oneof"`
}

func (*querySortOption_SearchAfter) isQuerySortOption_SearchAfterOpt() {}

type QueryField struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name          *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_AggregateFunc *string                `protobuf:"bytes,2,opt,name=aggregate_func,json=aggregateFunc"`
	xxx_hidden_Distinct      bool                   `protobuf:"varint,3,opt,name=distinct"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *QueryField) Reset() {
	*x = QueryField{}
	mi := &file_api_v1_search_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryField) ProtoMessage() {}

func (x *QueryField) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryField) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *QueryField) GetAggregateFunc() string {
	if x != nil {
		if x.xxx_hidden_AggregateFunc != nil {
			return *x.xxx_hidden_AggregateFunc
		}
		return ""
	}
	return ""
}

func (x *QueryField) GetDistinct() bool {
	if x != nil {
		return x.xxx_hidden_Distinct
	}
	return false
}

func (x *QueryField) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *QueryField) SetAggregateFunc(v string) {
	x.xxx_hidden_AggregateFunc = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *QueryField) SetDistinct(v bool) {
	x.xxx_hidden_Distinct = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *QueryField) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *QueryField) HasAggregateFunc() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *QueryField) HasDistinct() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *QueryField) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *QueryField) ClearAggregateFunc() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_AggregateFunc = nil
}

func (x *QueryField) ClearDistinct() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Distinct = false
}

type QueryField_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name          *string
	AggregateFunc *string
	Distinct      *bool
}

func (b0 QueryField_builder) Build() *QueryField {
	m0 := &QueryField{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Name = b.Name
	}
	if b.AggregateFunc != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_AggregateFunc = b.AggregateFunc
	}
	if b.Distinct != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Distinct = *b.Distinct
	}
	return m0
}

type QuerySelectFilter struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Query       *Query                 `protobuf:"bytes,2,opt,name=query"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *QuerySelectFilter) Reset() {
	*x = QuerySelectFilter{}
	mi := &file_api_v1_search_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySelectFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySelectFilter) ProtoMessage() {}

func (x *QuerySelectFilter) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QuerySelectFilter) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *QuerySelectFilter) GetQuery() *Query {
	if x != nil {
		return x.xxx_hidden_Query
	}
	return nil
}

func (x *QuerySelectFilter) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *QuerySelectFilter) SetQuery(v *Query) {
	x.xxx_hidden_Query = v
}

func (x *QuerySelectFilter) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *QuerySelectFilter) HasQuery() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Query != nil
}

func (x *QuerySelectFilter) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *QuerySelectFilter) ClearQuery() {
	x.xxx_hidden_Query = nil
}

type QuerySelectFilter_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name  *string
	Query *Query
}

func (b0 QuerySelectFilter_builder) Build() *QuerySelectFilter {
	m0 := &QuerySelectFilter{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Query = b.Query
	return m0
}

type QuerySelect struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Field  *QueryField            `protobuf:"bytes,1,opt,name=field"`
	xxx_hidden_Filter *QuerySelectFilter     `protobuf:"bytes,2,opt,name=filter"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *QuerySelect) Reset() {
	*x = QuerySelect{}
	mi := &file_api_v1_search_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuerySelect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySelect) ProtoMessage() {}

func (x *QuerySelect) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QuerySelect) GetField() *QueryField {
	if x != nil {
		return x.xxx_hidden_Field
	}
	return nil
}

func (x *QuerySelect) GetFilter() *QuerySelectFilter {
	if x != nil {
		return x.xxx_hidden_Filter
	}
	return nil
}

func (x *QuerySelect) SetField(v *QueryField) {
	x.xxx_hidden_Field = v
}

func (x *QuerySelect) SetFilter(v *QuerySelectFilter) {
	x.xxx_hidden_Filter = v
}

func (x *QuerySelect) HasField() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Field != nil
}

func (x *QuerySelect) HasFilter() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Filter != nil
}

func (x *QuerySelect) ClearField() {
	x.xxx_hidden_Field = nil
}

func (x *QuerySelect) ClearFilter() {
	x.xxx_hidden_Filter = nil
}

type QuerySelect_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Field  *QueryField
	Filter *QuerySelectFilter
}

func (b0 QuerySelect_builder) Build() *QuerySelect {
	m0 := &QuerySelect{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Field = b.Field
	x.xxx_hidden_Filter = b.Filter
	return m0
}

type QueryGroupBy struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Fields []string               `protobuf:"bytes,1,rep,name=fields"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *QueryGroupBy) Reset() {
	*x = QueryGroupBy{}
	mi := &file_api_v1_search_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryGroupBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGroupBy) ProtoMessage() {}

func (x *QueryGroupBy) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryGroupBy) GetFields() []string {
	if x != nil {
		return x.xxx_hidden_Fields
	}
	return nil
}

func (x *QueryGroupBy) SetFields(v []string) {
	x.xxx_hidden_Fields = v
}

type QueryGroupBy_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Fields []string
}

func (b0 QueryGroupBy_builder) Build() *QueryGroupBy {
	m0 := &QueryGroupBy{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Fields = b.Fields
	return m0
}

type QueryPagination struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Limit       int32                  `protobuf:"varint,1,opt,name=limit"`
	xxx_hidden_Offset      int32                  `protobuf:"varint,2,opt,name=offset"`
	xxx_hidden_SortOptions *[]*QuerySortOption    `protobuf:"bytes,3,rep,name=sort_options,json=sortOptions"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *QueryPagination) Reset() {
	*x = QueryPagination{}
	mi := &file_api_v1_search_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPagination) ProtoMessage() {}

func (x *QueryPagination) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *QueryPagination) GetLimit() int32 {
	if x != nil {
		return x.xxx_hidden_Limit
	}
	return 0
}

func (x *QueryPagination) GetOffset() int32 {
	if x != nil {
		return x.xxx_hidden_Offset
	}
	return 0
}

func (x *QueryPagination) GetSortOptions() []*QuerySortOption {
	if x != nil {
		if x.xxx_hidden_SortOptions != nil {
			return *x.xxx_hidden_SortOptions
		}
	}
	return nil
}

func (x *QueryPagination) SetLimit(v int32) {
	x.xxx_hidden_Limit = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *QueryPagination) SetOffset(v int32) {
	x.xxx_hidden_Offset = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *QueryPagination) SetSortOptions(v []*QuerySortOption) {
	x.xxx_hidden_SortOptions = &v
}

func (x *QueryPagination) HasLimit() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *QueryPagination) HasOffset() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *QueryPagination) ClearLimit() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Limit = 0
}

func (x *QueryPagination) ClearOffset() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Offset = 0
}

type QueryPagination_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Limit       *int32
	Offset      *int32
	SortOptions []*QuerySortOption
}

func (b0 QueryPagination_builder) Build() *QueryPagination {
	m0 := &QueryPagination{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Limit != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Limit = *b.Limit
	}
	if b.Offset != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Offset = *b.Offset
	}
	x.xxx_hidden_SortOptions = &b.SortOptions
	return m0
}

type BooleanQuery struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Must    *ConjunctionQuery      `protobuf:"bytes,1,opt,name=must"`
	xxx_hidden_MustNot *DisjunctionQuery      `protobuf:"bytes,2,opt,name=must_not,json=mustNot"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BooleanQuery) Reset() {
	*x = BooleanQuery{}
	mi := &file_api_v1_search_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BooleanQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanQuery) ProtoMessage() {}

func (x *BooleanQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BooleanQuery) GetMust() *ConjunctionQuery {
	if x != nil {
		return x.xxx_hidden_Must
	}
	return nil
}

func (x *BooleanQuery) GetMustNot() *DisjunctionQuery {
	if x != nil {
		return x.xxx_hidden_MustNot
	}
	return nil
}

func (x *BooleanQuery) SetMust(v *ConjunctionQuery) {
	x.xxx_hidden_Must = v
}

func (x *BooleanQuery) SetMustNot(v *DisjunctionQuery) {
	x.xxx_hidden_MustNot = v
}

func (x *BooleanQuery) HasMust() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Must != nil
}

func (x *BooleanQuery) HasMustNot() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_MustNot != nil
}

func (x *BooleanQuery) ClearMust() {
	x.xxx_hidden_Must = nil
}

func (x *BooleanQuery) ClearMustNot() {
	x.xxx_hidden_MustNot = nil
}

type BooleanQuery_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Must    *ConjunctionQuery
	MustNot *DisjunctionQuery
}

func (b0 BooleanQuery_builder) Build() *BooleanQuery {
	m0 := &BooleanQuery{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Must = b.Must
	x.xxx_hidden_MustNot = b.MustNot
	return m0
}

// next tag: 9
type Query struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Query      isQuery_Query          `protobuf_oneof:"query"`
	xxx_hidden_Selects    *[]*QuerySelect        `protobuf:"bytes,8,rep,name=selects"`
	xxx_hidden_GroupBy    *QueryGroupBy          `protobuf:"bytes,7,opt,name=group_by,json=groupBy"`
	xxx_hidden_Pagination *QueryPagination       `protobuf:"bytes,4,opt,name=pagination"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Query) Reset() {
	*x = Query{}
	mi := &file_api_v1_search_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Query) GetConjunction() *ConjunctionQuery {
	if x != nil {
		if x, ok := x.xxx_hidden_Query.(*query_Conjunction); ok {
			return x.Conjunction
		}
	}
	return nil
}

func (x *Query) GetDisjunction() *DisjunctionQuery {
	if x != nil {
		if x, ok := x.xxx_hidden_Query.(*query_Disjunction); ok {
			return x.Disjunction
		}
	}
	return nil
}

func (x *Query) GetBaseQuery() *BaseQuery {
	if x != nil {
		if x, ok := x.xxx_hidden_Query.(*query_BaseQuery); ok {
			return x.BaseQuery
		}
	}
	return nil
}

func (x *Query) GetBooleanQuery() *BooleanQuery {
	if x != nil {
		if x, ok := x.xxx_hidden_Query.(*query_BooleanQuery); ok {
			return x.BooleanQuery
		}
	}
	return nil
}

func (x *Query) GetSelects() []*QuerySelect {
	if x != nil {
		if x.xxx_hidden_Selects != nil {
			return *x.xxx_hidden_Selects
		}
	}
	return nil
}

func (x *Query) GetGroupBy() *QueryGroupBy {
	if x != nil {
		return x.xxx_hidden_GroupBy
	}
	return nil
}

func (x *Query) GetPagination() *QueryPagination {
	if x != nil {
		return x.xxx_hidden_Pagination
	}
	return nil
}

func (x *Query) SetConjunction(v *ConjunctionQuery) {
	if v == nil {
		x.xxx_hidden_Query = nil
		return
	}
	x.xxx_hidden_Query = &query_Conjunction{v}
}

func (x *Query) SetDisjunction(v *DisjunctionQuery) {
	if v == nil {
		x.xxx_hidden_Query = nil
		return
	}
	x.xxx_hidden_Query = &query_Disjunction{v}
}

func (x *Query) SetBaseQuery(v *BaseQuery) {
	if v == nil {
		x.xxx_hidden_Query = nil
		return
	}
	x.xxx_hidden_Query = &query_BaseQuery{v}
}

func (x *Query) SetBooleanQuery(v *BooleanQuery) {
	if v == nil {
		x.xxx_hidden_Query = nil
		return
	}
	x.xxx_hidden_Query = &query_BooleanQuery{v}
}

func (x *Query) SetSelects(v []*QuerySelect) {
	x.xxx_hidden_Selects = &v
}

func (x *Query) SetGroupBy(v *QueryGroupBy) {
	x.xxx_hidden_GroupBy = v
}

func (x *Query) SetPagination(v *QueryPagination) {
	x.xxx_hidden_Pagination = v
}

func (x *Query) HasQuery() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Query != nil
}

func (x *Query) HasConjunction() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Query.(*query_Conjunction)
	return ok
}

func (x *Query) HasDisjunction() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Query.(*query_Disjunction)
	return ok
}

func (x *Query) HasBaseQuery() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Query.(*query_BaseQuery)
	return ok
}

func (x *Query) HasBooleanQuery() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Query.(*query_BooleanQuery)
	return ok
}

func (x *Query) HasGroupBy() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_GroupBy != nil
}

func (x *Query) HasPagination() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Pagination != nil
}

func (x *Query) ClearQuery() {
	x.xxx_hidden_Query = nil
}

func (x *Query) ClearConjunction() {
	if _, ok := x.xxx_hidden_Query.(*query_Conjunction); ok {
		x.xxx_hidden_Query = nil
	}
}

func (x *Query) ClearDisjunction() {
	if _, ok := x.xxx_hidden_Query.(*query_Disjunction); ok {
		x.xxx_hidden_Query = nil
	}
}

func (x *Query) ClearBaseQuery() {
	if _, ok := x.xxx_hidden_Query.(*query_BaseQuery); ok {
		x.xxx_hidden_Query = nil
	}
}

func (x *Query) ClearBooleanQuery() {
	if _, ok := x.xxx_hidden_Query.(*query_BooleanQuery); ok {
		x.xxx_hidden_Query = nil
	}
}

func (x *Query) ClearGroupBy() {
	x.xxx_hidden_GroupBy = nil
}

func (x *Query) ClearPagination() {
	x.xxx_hidden_Pagination = nil
}

const Query_Query_not_set_case case_Query_Query = 0
const Query_Conjunction_case case_Query_Query = 1
const Query_Disjunction_case case_Query_Query = 2
const Query_BaseQuery_case case_Query_Query = 3
const Query_BooleanQuery_case case_Query_Query = 6

func (x *Query) WhichQuery() case_Query_Query {
	if x == nil {
		return Query_Query_not_set_case
	}
	switch x.xxx_hidden_Query.(type) {
	case *query_Conjunction:
		return Query_Conjunction_case
	case *query_Disjunction:
		return Query_Disjunction_case
	case *query_BaseQuery:
		return Query_BaseQuery_case
	case *query_BooleanQuery:
		return Query_BooleanQuery_case
	default:
		return Query_Query_not_set_case
	}
}

type Query_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Query:
	Conjunction  *ConjunctionQuery
	Disjunction  *DisjunctionQuery
	BaseQuery    *BaseQuery
	BooleanQuery *BooleanQuery
	// -- end of xxx_hidden_Query
	Selects    []*QuerySelect
	GroupBy    *QueryGroupBy
	Pagination *QueryPagination
}

func (b0 Query_builder) Build() *Query {
	m0 := &Query{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Conjunction != nil {
		x.xxx_hidden_Query = &query_Conjunction{b.Conjunction}
	}
	if b.Disjunction != nil {
		x.xxx_hidden_Query = &query_Disjunction{b.Disjunction}
	}
	if b.BaseQuery != nil {
		x.xxx_hidden_Query = &query_BaseQuery{b.BaseQuery}
	}
	if b.BooleanQuery != nil {
		x.xxx_hidden_Query = &query_BooleanQuery{b.BooleanQuery}
	}
	x.xxx_hidden_Selects = &b.Selects
	x.xxx_hidden_GroupBy = b.GroupBy
	x.xxx_hidden_Pagination = b.Pagination
	return m0
}

type case_Query_Query protoreflect.FieldNumber

func (x case_Query_Query) String() string {
	md := file_api_v1_search_service_proto_msgTypes[9].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isQuery_Query interface {
	isQuery_Query()
}

type query_Conjunction struct {
	Conjunction *ConjunctionQuery `protobuf:"bytes,1,opt,name=conjunction,oneof"`
}

type query_Disjunction struct {
	Disjunction *DisjunctionQuery `protobuf:"bytes,2,opt,name=disjunction,oneof"`
}

type query_BaseQuery struct {
	BaseQuery *BaseQuery `protobuf:"bytes,3,opt,name=base_query,json=baseQuery,oneof"`
}

type query_BooleanQuery struct {
	BooleanQuery *BooleanQuery `protobuf:"bytes,6,opt,name=boolean_query,json=booleanQuery,oneof"`
}

func (*query_Conjunction) isQuery_Query() {}

func (*query_Disjunction) isQuery_Query() {}

func (*query_BaseQuery) isQuery_Query() {}

func (*query_BooleanQuery) isQuery_Query() {}

// StringQuery represents a query that matches documents that contain the
// query text in _any_ of their fields.
type StringQuery struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Query       *string                `protobuf:"bytes,1,opt,name=query"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *StringQuery) Reset() {
	*x = StringQuery{}
	mi := &file_api_v1_search_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringQuery) ProtoMessage() {}

func (x *StringQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringQuery) GetQuery() string {
	if x != nil {
		if x.xxx_hidden_Query != nil {
			return *x.xxx_hidden_Query
		}
		return ""
	}
	return ""
}

func (x *StringQuery) SetQuery(v string) {
	x.xxx_hidden_Query = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *StringQuery) HasQuery() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *StringQuery) ClearQuery() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Query = nil
}

type StringQuery_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Query *string
}

func (b0 StringQuery_builder) Build() *StringQuery {
	m0 := &StringQuery{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Query != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Query = b.Query
	}
	return m0
}

// MatchFieldQuery represents a query that matches documents containing the
// query text in the provided field.
type MatchFieldQuery struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Field       *string                `protobuf:"bytes,1,opt,name=field"`
	xxx_hidden_Value       *string                `protobuf:"bytes,2,opt,name=value"`
	xxx_hidden_Highlight   bool                   `protobuf:"varint,3,opt,name=highlight"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MatchFieldQuery) Reset() {
	*x = MatchFieldQuery{}
	mi := &file_api_v1_search_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchFieldQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchFieldQuery) ProtoMessage() {}

func (x *MatchFieldQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MatchFieldQuery) GetField() string {
	if x != nil {
		if x.xxx_hidden_Field != nil {
			return *x.xxx_hidden_Field
		}
		return ""
	}
	return ""
}

func (x *MatchFieldQuery) GetValue() string {
	if x != nil {
		if x.xxx_hidden_Value != nil {
			return *x.xxx_hidden_Value
		}
		return ""
	}
	return ""
}

func (x *MatchFieldQuery) GetHighlight() bool {
	if x != nil {
		return x.xxx_hidden_Highlight
	}
	return false
}

func (x *MatchFieldQuery) SetField(v string) {
	x.xxx_hidden_Field = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *MatchFieldQuery) SetValue(v string) {
	x.xxx_hidden_Value = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *MatchFieldQuery) SetHighlight(v bool) {
	x.xxx_hidden_Highlight = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *MatchFieldQuery) HasField() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MatchFieldQuery) HasValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MatchFieldQuery) HasHighlight() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *MatchFieldQuery) ClearField() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Field = nil
}

func (x *MatchFieldQuery) ClearValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Value = nil
}

func (x *MatchFieldQuery) ClearHighlight() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Highlight = false
}

type MatchFieldQuery_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Field     *string
	Value     *string
	Highlight *bool
}

func (b0 MatchFieldQuery_builder) Build() *MatchFieldQuery {
	m0 := &MatchFieldQuery{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Field != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Field = b.Field
	}
	if b.Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Value = b.Value
	}
	if b.Highlight != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Highlight = *b.Highlight
	}
	return m0
}

// MatchLinkedFieldsQuery represents a query that matches documents which have matches for all the provided
// field values, in corresponding locations.
type MatchLinkedFieldsQuery struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Query *[]*MatchFieldQuery    `protobuf:"bytes,1,rep,name=query"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MatchLinkedFieldsQuery) Reset() {
	*x = MatchLinkedFieldsQuery{}
	mi := &file_api_v1_search_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchLinkedFieldsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchLinkedFieldsQuery) ProtoMessage() {}

func (x *MatchLinkedFieldsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MatchLinkedFieldsQuery) GetQuery() []*MatchFieldQuery {
	if x != nil {
		if x.xxx_hidden_Query != nil {
			return *x.xxx_hidden_Query
		}
	}
	return nil
}

func (x *MatchLinkedFieldsQuery) SetQuery(v []*MatchFieldQuery) {
	x.xxx_hidden_Query = &v
}

type MatchLinkedFieldsQuery_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Query []*MatchFieldQuery
}

func (b0 MatchLinkedFieldsQuery_builder) Build() *MatchLinkedFieldsQuery {
	m0 := &MatchLinkedFieldsQuery{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Query = &b.Query
	return m0
}

// DocIDQuery represents a query that matches documents with the provided ids.
type DocIDQuery struct {
	state          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Ids []string               `protobuf:"bytes,1,rep,name=ids"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DocIDQuery) Reset() {
	*x = DocIDQuery{}
	mi := &file_api_v1_search_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocIDQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocIDQuery) ProtoMessage() {}

func (x *DocIDQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DocIDQuery) GetIds() []string {
	if x != nil {
		return x.xxx_hidden_Ids
	}
	return nil
}

func (x *DocIDQuery) SetIds(v []string) {
	x.xxx_hidden_Ids = v
}

type DocIDQuery_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Ids []string
}

func (b0 DocIDQuery_builder) Build() *DocIDQuery {
	m0 := &DocIDQuery{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Ids = b.Ids
	return m0
}

type BaseQuery struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Query isBaseQuery_Query      `protobuf_oneof:"query"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BaseQuery) Reset() {
	*x = BaseQuery{}
	mi := &file_api_v1_search_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseQuery) ProtoMessage() {}

func (x *BaseQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *BaseQuery) GetMatchFieldQuery() *MatchFieldQuery {
	if x != nil {
		if x, ok := x.xxx_hidden_Query.(*baseQuery_MatchFieldQuery); ok {
			return x.MatchFieldQuery
		}
	}
	return nil
}

func (x *BaseQuery) GetMatchLinkedFieldsQuery() *MatchLinkedFieldsQuery {
	if x != nil {
		if x, ok := x.xxx_hidden_Query.(*baseQuery_MatchLinkedFieldsQuery); ok {
			return x.MatchLinkedFieldsQuery
		}
	}
	return nil
}

func (x *BaseQuery) GetDocIdQuery() *DocIDQuery {
	if x != nil {
		if x, ok := x.xxx_hidden_Query.(*baseQuery_DocIdQuery); ok {
			return x.DocIdQuery
		}
	}
	return nil
}

func (x *BaseQuery) GetMatchNoneQuery() *MatchNoneQuery {
	if x != nil {
		if x, ok := x.xxx_hidden_Query.(*baseQuery_MatchNoneQuery); ok {
			return x.MatchNoneQuery
		}
	}
	return nil
}

func (x *BaseQuery) SetMatchFieldQuery(v *MatchFieldQuery) {
	if v == nil {
		x.xxx_hidden_Query = nil
		return
	}
	x.xxx_hidden_Query = &baseQuery_MatchFieldQuery{v}
}

func (x *BaseQuery) SetMatchLinkedFieldsQuery(v *MatchLinkedFieldsQuery) {
	if v == nil {
		x.xxx_hidden_Query = nil
		return
	}
	x.xxx_hidden_Query = &baseQuery_MatchLinkedFieldsQuery{v}
}

func (x *BaseQuery) SetDocIdQuery(v *DocIDQuery) {
	if v == nil {
		x.xxx_hidden_Query = nil
		return
	}
	x.xxx_hidden_Query = &baseQuery_DocIdQuery{v}
}

func (x *BaseQuery) SetMatchNoneQuery(v *MatchNoneQuery) {
	if v == nil {
		x.xxx_hidden_Query = nil
		return
	}
	x.xxx_hidden_Query = &baseQuery_MatchNoneQuery{v}
}

func (x *BaseQuery) HasQuery() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Query != nil
}

func (x *BaseQuery) HasMatchFieldQuery() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Query.(*baseQuery_MatchFieldQuery)
	return ok
}

func (x *BaseQuery) HasMatchLinkedFieldsQuery() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Query.(*baseQuery_MatchLinkedFieldsQuery)
	return ok
}

func (x *BaseQuery) HasDocIdQuery() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Query.(*baseQuery_DocIdQuery)
	return ok
}

func (x *BaseQuery) HasMatchNoneQuery() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Query.(*baseQuery_MatchNoneQuery)
	return ok
}

func (x *BaseQuery) ClearQuery() {
	x.xxx_hidden_Query = nil
}

func (x *BaseQuery) ClearMatchFieldQuery() {
	if _, ok := x.xxx_hidden_Query.(*baseQuery_MatchFieldQuery); ok {
		x.xxx_hidden_Query = nil
	}
}

func (x *BaseQuery) ClearMatchLinkedFieldsQuery() {
	if _, ok := x.xxx_hidden_Query.(*baseQuery_MatchLinkedFieldsQuery); ok {
		x.xxx_hidden_Query = nil
	}
}

func (x *BaseQuery) ClearDocIdQuery() {
	if _, ok := x.xxx_hidden_Query.(*baseQuery_DocIdQuery); ok {
		x.xxx_hidden_Query = nil
	}
}

func (x *BaseQuery) ClearMatchNoneQuery() {
	if _, ok := x.xxx_hidden_Query.(*baseQuery_MatchNoneQuery); ok {
		x.xxx_hidden_Query = nil
	}
}

const BaseQuery_Query_not_set_case case_BaseQuery_Query = 0
const BaseQuery_MatchFieldQuery_case case_BaseQuery_Query = 2
const BaseQuery_MatchLinkedFieldsQuery_case case_BaseQuery_Query = 3
const BaseQuery_DocIdQuery_case case_BaseQuery_Query = 4
const BaseQuery_MatchNoneQuery_case case_BaseQuery_Query = 5

func (x *BaseQuery) WhichQuery() case_BaseQuery_Query {
	if x == nil {
		return BaseQuery_Query_not_set_case
	}
	switch x.xxx_hidden_Query.(type) {
	case *baseQuery_MatchFieldQuery:
		return BaseQuery_MatchFieldQuery_case
	case *baseQuery_MatchLinkedFieldsQuery:
		return BaseQuery_MatchLinkedFieldsQuery_case
	case *baseQuery_DocIdQuery:
		return BaseQuery_DocIdQuery_case
	case *baseQuery_MatchNoneQuery:
		return BaseQuery_MatchNoneQuery_case
	default:
		return BaseQuery_Query_not_set_case
	}
}

type BaseQuery_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Query:
	MatchFieldQuery        *MatchFieldQuery
	MatchLinkedFieldsQuery *MatchLinkedFieldsQuery
	DocIdQuery             *DocIDQuery
	MatchNoneQuery         *MatchNoneQuery
	// -- end of xxx_hidden_Query
}

func (b0 BaseQuery_builder) Build() *BaseQuery {
	m0 := &BaseQuery{}
	b, x := &b0, m0
	_, _ = b, x
	if b.MatchFieldQuery != nil {
		x.xxx_hidden_Query = &baseQuery_MatchFieldQuery{b.MatchFieldQuery}
	}
	if b.MatchLinkedFieldsQuery != nil {
		x.xxx_hidden_Query = &baseQuery_MatchLinkedFieldsQuery{b.MatchLinkedFieldsQuery}
	}
	if b.DocIdQuery != nil {
		x.xxx_hidden_Query = &baseQuery_DocIdQuery{b.DocIdQuery}
	}
	if b.MatchNoneQuery != nil {
		x.xxx_hidden_Query = &baseQuery_MatchNoneQuery{b.MatchNoneQuery}
	}
	return m0
}

type case_BaseQuery_Query protoreflect.FieldNumber

func (x case_BaseQuery_Query) String() string {
	md := file_api_v1_search_service_proto_msgTypes[14].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isBaseQuery_Query interface {
	isBaseQuery_Query()
}

type baseQuery_MatchFieldQuery struct {
	MatchFieldQuery *MatchFieldQuery `protobuf:"bytes,2,opt,name=match_field_query,json=matchFieldQuery,oneof"`
}

type baseQuery_MatchLinkedFieldsQuery struct {
	MatchLinkedFieldsQuery *MatchLinkedFieldsQuery `protobuf:"bytes,3,opt,name=match_linked_fields_query,json=matchLinkedFieldsQuery,oneof"`
}

type baseQuery_DocIdQuery struct {
	DocIdQuery *DocIDQuery `protobuf:"bytes,4,opt,name=doc_id_query,json=docIdQuery,oneof"`
}

type baseQuery_MatchNoneQuery struct {
	MatchNoneQuery *MatchNoneQuery `protobuf:"bytes,5,opt,name=match_none_query,json=matchNoneQuery,oneof"`
}

func (*baseQuery_MatchFieldQuery) isBaseQuery_Query() {}

func (*baseQuery_MatchLinkedFieldsQuery) isBaseQuery_Query() {}

func (*baseQuery_DocIdQuery) isBaseQuery_Query() {}

func (*baseQuery_MatchNoneQuery) isBaseQuery_Query() {}

type ConjunctionQuery struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Queries *[]*Query              `protobuf:"bytes,1,rep,name=queries"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ConjunctionQuery) Reset() {
	*x = ConjunctionQuery{}
	mi := &file_api_v1_search_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConjunctionQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConjunctionQuery) ProtoMessage() {}

func (x *ConjunctionQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConjunctionQuery) GetQueries() []*Query {
	if x != nil {
		if x.xxx_hidden_Queries != nil {
			return *x.xxx_hidden_Queries
		}
	}
	return nil
}

func (x *ConjunctionQuery) SetQueries(v []*Query) {
	x.xxx_hidden_Queries = &v
}

type ConjunctionQuery_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Queries []*Query
}

func (b0 ConjunctionQuery_builder) Build() *ConjunctionQuery {
	m0 := &ConjunctionQuery{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Queries = &b.Queries
	return m0
}

type DisjunctionQuery struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Queries *[]*Query              `protobuf:"bytes,1,rep,name=queries"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DisjunctionQuery) Reset() {
	*x = DisjunctionQuery{}
	mi := &file_api_v1_search_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisjunctionQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisjunctionQuery) ProtoMessage() {}

func (x *DisjunctionQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DisjunctionQuery) GetQueries() []*Query {
	if x != nil {
		if x.xxx_hidden_Queries != nil {
			return *x.xxx_hidden_Queries
		}
	}
	return nil
}

func (x *DisjunctionQuery) SetQueries(v []*Query) {
	x.xxx_hidden_Queries = &v
}

type DisjunctionQuery_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Queries []*Query
}

func (b0 DisjunctionQuery_builder) Build() *DisjunctionQuery {
	m0 := &DisjunctionQuery{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Queries = &b.Queries
	return m0
}

type MatchNoneQuery struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchNoneQuery) Reset() {
	*x = MatchNoneQuery{}
	mi := &file_api_v1_search_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchNoneQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchNoneQuery) ProtoMessage() {}

func (x *MatchNoneQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type MatchNoneQuery_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 MatchNoneQuery_builder) Build() *MatchNoneQuery {
	m0 := &MatchNoneQuery{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type SearchResult struct {
	state                     protoimpl.MessageState           `protogen:"opaque.v1"`
	xxx_hidden_Id             *string                          `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name           *string                          `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Category       SearchCategory                   `protobuf:"varint,3,opt,name=category,enum=v1.SearchCategory"`
	xxx_hidden_FieldToMatches map[string]*SearchResult_Matches `protobuf:"bytes,4,rep,name=field_to_matches,json=fieldToMatches" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Score          float64                          `protobuf:"fixed64,5,opt,name=score"`
	xxx_hidden_Location       *string                          `protobuf:"bytes,6,opt,name=location"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	mi := &file_api_v1_search_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SearchResult) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *SearchResult) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *SearchResult) GetCategory() SearchCategory {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_Category
		}
	}
	return SearchCategory_SEARCH_UNSET
}

func (x *SearchResult) GetFieldToMatches() map[string]*SearchResult_Matches {
	if x != nil {
		return x.xxx_hidden_FieldToMatches
	}
	return nil
}

func (x *SearchResult) GetScore() float64 {
	if x != nil {
		return x.xxx_hidden_Score
	}
	return 0
}

func (x *SearchResult) GetLocation() string {
	if x != nil {
		if x.xxx_hidden_Location != nil {
			return *x.xxx_hidden_Location
		}
		return ""
	}
	return ""
}

func (x *SearchResult) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *SearchResult) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *SearchResult) SetCategory(v SearchCategory) {
	x.xxx_hidden_Category = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *SearchResult) SetFieldToMatches(v map[string]*SearchResult_Matches) {
	x.xxx_hidden_FieldToMatches = v
}

func (x *SearchResult) SetScore(v float64) {
	x.xxx_hidden_Score = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *SearchResult) SetLocation(v string) {
	x.xxx_hidden_Location = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *SearchResult) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SearchResult) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SearchResult) HasCategory() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *SearchResult) HasScore() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *SearchResult) HasLocation() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *SearchResult) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *SearchResult) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *SearchResult) ClearCategory() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Category = SearchCategory_SEARCH_UNSET
}

func (x *SearchResult) ClearScore() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Score = 0
}

func (x *SearchResult) ClearLocation() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Location = nil
}

type SearchResult_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id             *string
	Name           *string
	Category       *SearchCategory
	FieldToMatches map[string]*SearchResult_Matches
	Score          *float64
	// Location is intended to be a unique, yet human readable,
	// identifier for the result. For example, for a deployment,
	// the location will be "$cluster_name/$namespace/$deployment_name.
	// It is displayed in the UI in the global search results, underneath
	// the name for each result.
	Location *string
}

func (b0 SearchResult_builder) Build() *SearchResult {
	m0 := &SearchResult{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_Name = b.Name
	}
	if b.Category != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_Category = *b.Category
	}
	x.xxx_hidden_FieldToMatches = b.FieldToMatches
	if b.Score != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_Score = *b.Score
	}
	if b.Location != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_Location = b.Location
	}
	return m0
}

type SearchResponse struct {
	state              protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_Results *[]*SearchResult         `protobuf:"bytes,1,rep,name=results"`
	xxx_hidden_Counts  *[]*SearchResponse_Count `protobuf:"bytes,2,rep,name=counts"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_api_v1_search_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SearchResponse) GetResults() []*SearchResult {
	if x != nil {
		if x.xxx_hidden_Results != nil {
			return *x.xxx_hidden_Results
		}
	}
	return nil
}

func (x *SearchResponse) GetCounts() []*SearchResponse_Count {
	if x != nil {
		if x.xxx_hidden_Counts != nil {
			return *x.xxx_hidden_Counts
		}
	}
	return nil
}

func (x *SearchResponse) SetResults(v []*SearchResult) {
	x.xxx_hidden_Results = &v
}

func (x *SearchResponse) SetCounts(v []*SearchResponse_Count) {
	x.xxx_hidden_Counts = &v
}

type SearchResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Results []*SearchResult
	Counts  []*SearchResponse_Count
}

func (b0 SearchResponse_builder) Build() *SearchResponse {
	m0 := &SearchResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Results = &b.Results
	x.xxx_hidden_Counts = &b.Counts
	return m0
}

type SearchOptionsRequest struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Categories []SearchCategory       `protobuf:"varint,1,rep,packed,name=categories,enum=v1.SearchCategory"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SearchOptionsRequest) Reset() {
	*x = SearchOptionsRequest{}
	mi := &file_api_v1_search_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOptionsRequest) ProtoMessage() {}

func (x *SearchOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SearchOptionsRequest) GetCategories() []SearchCategory {
	if x != nil {
		return x.xxx_hidden_Categories
	}
	return nil
}

func (x *SearchOptionsRequest) SetCategories(v []SearchCategory) {
	x.xxx_hidden_Categories = v
}

type SearchOptionsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Categories []SearchCategory
}

func (b0 SearchOptionsRequest_builder) Build() *SearchOptionsRequest {
	m0 := &SearchOptionsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Categories = b.Categories
	return m0
}

type SearchOptionsResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Options []string               `protobuf:"bytes,1,rep,name=options"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SearchOptionsResponse) Reset() {
	*x = SearchOptionsResponse{}
	mi := &file_api_v1_search_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOptionsResponse) ProtoMessage() {}

func (x *SearchOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SearchOptionsResponse) GetOptions() []string {
	if x != nil {
		return x.xxx_hidden_Options
	}
	return nil
}

func (x *SearchOptionsResponse) SetOptions(v []string) {
	x.xxx_hidden_Options = v
}

type SearchOptionsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Options []string
}

func (b0 SearchOptionsResponse_builder) Build() *SearchOptionsResponse {
	m0 := &SearchOptionsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Options = b.Options
	return m0
}

type AutocompleteResponse struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Values []string               `protobuf:"bytes,1,rep,name=values"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AutocompleteResponse) Reset() {
	*x = AutocompleteResponse{}
	mi := &file_api_v1_search_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AutocompleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutocompleteResponse) ProtoMessage() {}

func (x *AutocompleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AutocompleteResponse) GetValues() []string {
	if x != nil {
		return x.xxx_hidden_Values
	}
	return nil
}

func (x *AutocompleteResponse) SetValues(v []string) {
	x.xxx_hidden_Values = v
}

type AutocompleteResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Values []string
}

func (b0 AutocompleteResponse_builder) Build() *AutocompleteResponse {
	m0 := &AutocompleteResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Values = b.Values
	return m0
}

type SearchResult_Matches struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Values []string               `protobuf:"bytes,1,rep,name=values"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SearchResult_Matches) Reset() {
	*x = SearchResult_Matches{}
	mi := &file_api_v1_search_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResult_Matches) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult_Matches) ProtoMessage() {}

func (x *SearchResult_Matches) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SearchResult_Matches) GetValues() []string {
	if x != nil {
		return x.xxx_hidden_Values
	}
	return nil
}

func (x *SearchResult_Matches) SetValues(v []string) {
	x.xxx_hidden_Values = v
}

type SearchResult_Matches_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Values []string
}

func (b0 SearchResult_Matches_builder) Build() *SearchResult_Matches {
	m0 := &SearchResult_Matches{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Values = b.Values
	return m0
}

type SearchResponse_Count struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Category    SearchCategory         `protobuf:"varint,1,opt,name=category,enum=v1.SearchCategory"`
	xxx_hidden_Count       int64                  `protobuf:"varint,2,opt,name=count"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SearchResponse_Count) Reset() {
	*x = SearchResponse_Count{}
	mi := &file_api_v1_search_service_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse_Count) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse_Count) ProtoMessage() {}

func (x *SearchResponse_Count) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_search_service_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SearchResponse_Count) GetCategory() SearchCategory {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Category
		}
	}
	return SearchCategory_SEARCH_UNSET
}

func (x *SearchResponse_Count) GetCount() int64 {
	if x != nil {
		return x.xxx_hidden_Count
	}
	return 0
}

func (x *SearchResponse_Count) SetCategory(v SearchCategory) {
	x.xxx_hidden_Category = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *SearchResponse_Count) SetCount(v int64) {
	x.xxx_hidden_Count = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *SearchResponse_Count) HasCategory() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SearchResponse_Count) HasCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SearchResponse_Count) ClearCategory() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Category = SearchCategory_SEARCH_UNSET
}

func (x *SearchResponse_Count) ClearCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Count = 0
}

type SearchResponse_Count_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Category *SearchCategory
	Count    *int64
}

func (b0 SearchResponse_Count_builder) Build() *SearchResponse_Count {
	m0 := &SearchResponse_Count{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Category != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Category = *b.Category
	}
	if b.Count != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Count = *b.Count
	}
	return m0
}

var File_api_v1_search_service_proto protoreflect.FileDescriptor

const file_api_v1_search_service_proto_rawDesc = "" +
	"\n" +
	"\x1bapi/v1/search_service.proto\x12\x02v1\x1a\x17api/v1/pagination.proto\x1a\x1cgoogle/api/annotations.proto\x1a!google/protobuf/go_features.proto\"P\n" +
	"\bRawQuery\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12.\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x0e.v1.PaginationR\n" +
	"pagination\"\\\n" +
	"\x10RawSearchRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x122\n" +
	"\n" +
	"categories\x18\x02 \x03(\x0e2\x12.v1.SearchCategoryR\n" +
	"categories\"\xb0\x01\n" +
	"\x0fQuerySortOption\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x1a\n" +
	"\breversed\x18\x02 \x01(\bR\breversed\x12#\n" +
	"\fsearch_after\x18\x03 \x01(\tH\x00R\vsearchAfter\x122\n" +
	"\faggregate_by\x18\x04 \x01(\v2\x0f.v1.AggregateByR\vaggregateByB\x12\n" +
	"\x10search_after_opt\"c\n" +
	"\n" +
	"QueryField\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12%\n" +
	"\x0eaggregate_func\x18\x02 \x01(\tR\raggregateFunc\x12\x1a\n" +
	"\bdistinct\x18\x03 \x01(\bR\bdistinct\"H\n" +
	"\x11QuerySelectFilter\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\x05query\x18\x02 \x01(\v2\t.v1.QueryR\x05query\"b\n" +
	"\vQuerySelect\x12$\n" +
	"\x05field\x18\x01 \x01(\v2\x0e.v1.QueryFieldR\x05field\x12-\n" +
	"\x06filter\x18\x02 \x01(\v2\x15.v1.QuerySelectFilterR\x06filter\"&\n" +
	"\fQueryGroupBy\x12\x16\n" +
	"\x06fields\x18\x01 \x03(\tR\x06fields\"w\n" +
	"\x0fQueryPagination\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x126\n" +
	"\fsort_options\x18\x03 \x03(\v2\x13.v1.QuerySortOptionR\vsortOptions\"i\n" +
	"\fBooleanQuery\x12(\n" +
	"\x04must\x18\x01 \x01(\v2\x14.v1.ConjunctionQueryR\x04must\x12/\n" +
	"\bmust_not\x18\x02 \x01(\v2\x14.v1.DisjunctionQueryR\amustNot\"\x80\x03\n" +
	"\x05Query\x128\n" +
	"\vconjunction\x18\x01 \x01(\v2\x14.v1.ConjunctionQueryH\x00R\vconjunction\x128\n" +
	"\vdisjunction\x18\x02 \x01(\v2\x14.v1.DisjunctionQueryH\x00R\vdisjunction\x12.\n" +
	"\n" +
	"base_query\x18\x03 \x01(\v2\r.v1.BaseQueryH\x00R\tbaseQuery\x127\n" +
	"\rboolean_query\x18\x06 \x01(\v2\x10.v1.BooleanQueryH\x00R\fbooleanQuery\x12)\n" +
	"\aselects\x18\b \x03(\v2\x0f.v1.QuerySelectR\aselects\x12+\n" +
	"\bgroup_by\x18\a \x01(\v2\x10.v1.QueryGroupByR\agroupBy\x123\n" +
	"\n" +
	"pagination\x18\x04 \x01(\v2\x13.v1.QueryPaginationR\n" +
	"paginationB\a\n" +
	"\x05queryJ\x04\b\x05\x10\x06\"#\n" +
	"\vStringQuery\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\"[\n" +
	"\x0fMatchFieldQuery\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x1c\n" +
	"\thighlight\x18\x03 \x01(\bR\thighlight\"C\n" +
	"\x16MatchLinkedFieldsQuery\x12)\n" +
	"\x05query\x18\x01 \x03(\v2\x13.v1.MatchFieldQueryR\x05query\"\x1e\n" +
	"\n" +
	"DocIDQuery\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\tR\x03ids\"\xa4\x02\n" +
	"\tBaseQuery\x12A\n" +
	"\x11match_field_query\x18\x02 \x01(\v2\x13.v1.MatchFieldQueryH\x00R\x0fmatchFieldQuery\x12W\n" +
	"\x19match_linked_fields_query\x18\x03 \x01(\v2\x1a.v1.MatchLinkedFieldsQueryH\x00R\x16matchLinkedFieldsQuery\x122\n" +
	"\fdoc_id_query\x18\x04 \x01(\v2\x0e.v1.DocIDQueryH\x00R\n" +
	"docIdQuery\x12>\n" +
	"\x10match_none_query\x18\x05 \x01(\v2\x12.v1.MatchNoneQueryH\x00R\x0ematchNoneQueryB\a\n" +
	"\x05query\"7\n" +
	"\x10ConjunctionQuery\x12#\n" +
	"\aqueries\x18\x01 \x03(\v2\t.v1.QueryR\aqueries\"7\n" +
	"\x10DisjunctionQuery\x12#\n" +
	"\aqueries\x18\x01 \x03(\v2\t.v1.QueryR\aqueries\"\x10\n" +
	"\x0eMatchNoneQuery\"\xe4\x02\n" +
	"\fSearchResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12.\n" +
	"\bcategory\x18\x03 \x01(\x0e2\x12.v1.SearchCategoryR\bcategory\x12N\n" +
	"\x10field_to_matches\x18\x04 \x03(\v2$.v1.SearchResult.FieldToMatchesEntryR\x0efieldToMatches\x12\x14\n" +
	"\x05score\x18\x05 \x01(\x01R\x05score\x12\x1a\n" +
	"\blocation\x18\x06 \x01(\tR\blocation\x1a!\n" +
	"\aMatches\x12\x16\n" +
	"\x06values\x18\x01 \x03(\tR\x06values\x1a[\n" +
	"\x13FieldToMatchesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12.\n" +
	"\x05value\x18\x02 \x01(\v2\x18.v1.SearchResult.MatchesR\x05value:\x028\x01\"\xbd\x01\n" +
	"\x0eSearchResponse\x12*\n" +
	"\aresults\x18\x01 \x03(\v2\x10.v1.SearchResultR\aresults\x120\n" +
	"\x06counts\x18\x02 \x03(\v2\x18.v1.SearchResponse.CountR\x06counts\x1aM\n" +
	"\x05Count\x12.\n" +
	"\bcategory\x18\x01 \x01(\x0e2\x12.v1.SearchCategoryR\bcategory\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\"J\n" +
	"\x14SearchOptionsRequest\x122\n" +
	"\n" +
	"categories\x18\x01 \x03(\x0e2\x12.v1.SearchCategoryR\n" +
	"categories\"1\n" +
	"\x15SearchOptionsResponse\x12\x18\n" +
	"\aoptions\x18\x01 \x03(\tR\aoptions\".\n" +
	"\x14AutocompleteResponse\x12\x16\n" +
	"\x06values\x18\x01 \x03(\tR\x06values*\x97\r\n" +
	"\x0eSearchCategory\x12\x10\n" +
	"\fSEARCH_UNSET\x10\x00\x12\n" +
	"\n" +
	"\x06ALERTS\x10\x01\x12\n" +
	"\n" +
	"\x06IMAGES\x10\x02\x12\x14\n" +
	"\x10IMAGE_COMPONENTS\x10\x14\x12\x13\n" +
	"\x0fIMAGE_VULN_EDGE\x10\x1b\x12\x18\n" +
	"\x14IMAGE_COMPONENT_EDGE\x10\x17\x12\f\n" +
	"\bPOLICIES\x10\x03\x12\x0f\n" +
	"\vDEPLOYMENTS\x10\x04\x12\x14\n" +
	"\x10ACTIVE_COMPONENT\x10\x1e\x12\b\n" +
	"\x04PODS\x10\x19\x12\v\n" +
	"\aSECRETS\x10\x05\x12\x16\n" +
	"\x12PROCESS_INDICATORS\x10\x06\x12\x0e\n" +
	"\n" +
	"COMPLIANCE\x10\a\x12\f\n" +
	"\bCLUSTERS\x10\b\x12\x0e\n" +
	"\n" +
	"NAMESPACES\x10\t\x12\t\n" +
	"\x05NODES\x10\n" +
	"\x12\x13\n" +
	"\x0fNODE_COMPONENTS\x10&\x12\x12\n" +
	"\x0eNODE_VULN_EDGE\x10\x1c\x12\x17\n" +
	"\x13NODE_COMPONENT_EDGE\x10\x1d\x12\x1b\n" +
	"\x17NODE_COMPONENT_CVE_EDGE\x10!\x12\x17\n" +
	"\x13COMPLIANCE_STANDARD\x10\v\x12\x1c\n" +
	"\x18COMPLIANCE_CONTROL_GROUP\x10\f\x12\x16\n" +
	"\x12COMPLIANCE_CONTROL\x10\r\x12\x14\n" +
	"\x10SERVICE_ACCOUNTS\x10\x0e\x12\t\n" +
	"\x05ROLES\x10\x0f\x12\x10\n" +
	"\fROLEBINDINGS\x10\x10\x12\x19\n" +
	"\x15REPORT_CONFIGURATIONS\x10%\x12\x15\n" +
	"\x11PROCESS_BASELINES\x10\x11\x12\f\n" +
	"\bSUBJECTS\x10\x12\x12\t\n" +
	"\x05RISKS\x10\x13\x12\x13\n" +
	"\x0fVULNERABILITIES\x10\x15\x12\x1b\n" +
	"\x17CLUSTER_VULNERABILITIES\x10\"\x12\x19\n" +
	"\x15IMAGE_VULNERABILITIES\x10#\x12\x18\n" +
	"\x14NODE_VULNERABILITIES\x10$\x12\x17\n" +
	"\x13COMPONENT_VULN_EDGE\x10\x16\x12\x15\n" +
	"\x11CLUSTER_VULN_EDGE\x10\x18\x12\x12\n" +
	"\x0eNETWORK_ENTITY\x10\x1a\x12\x10\n" +
	"\fVULN_REQUEST\x10 \x12\x14\n" +
	"\x10NETWORK_BASELINE\x10'\x12\x14\n" +
	"\x10NETWORK_POLICIES\x10(\x12\x1c\n" +
	"\x18PROCESS_BASELINE_RESULTS\x10)\x12\x17\n" +
	"\x13COMPLIANCE_METADATA\x10*\x12\x16\n" +
	"\x12COMPLIANCE_RESULTS\x10+\x12\x15\n" +
	"\x11COMPLIANCE_DOMAIN\x10,\x12\x12\n" +
	"\x0eCLUSTER_HEALTH\x10-\x12\x15\n" +
	"\x11POLICY_CATEGORIES\x10.\x12\x16\n" +
	"\x12IMAGE_INTEGRATIONS\x10/\x12\x0f\n" +
	"\vCOLLECTIONS\x100\x12\x18\n" +
	"\x14POLICY_CATEGORY_EDGE\x101\x12\x1d\n" +
	"\x19PROCESS_LISTENING_ON_PORT\x102\x12\r\n" +
	"\tAPI_TOKEN\x103\x12\x13\n" +
	"\x0fREPORT_METADATA\x104\x12\x13\n" +
	"\x0fREPORT_SNAPSHOT\x105\x12\x1b\n" +
	"\x17COMPLIANCE_INTEGRATIONS\x106\x12\x1a\n" +
	"\x16COMPLIANCE_SCAN_CONFIG\x107\x12\x13\n" +
	"\x0fCOMPLIANCE_SCAN\x108\x12\x1c\n" +
	"\x18COMPLIANCE_CHECK_RESULTS\x109\x12\b\n" +
	"\x04BLOB\x10:\x12\x19\n" +
	"\x15ADMINISTRATION_EVENTS\x10<\x12!\n" +
	"\x1dCOMPLIANCE_SCAN_CONFIG_STATUS\x10=\x12\x18\n" +
	"\x14ADMINISTRATION_USAGE\x10>\x12\x17\n" +
	"\x13COMPLIANCE_PROFILES\x10?\x12\x14\n" +
	"\x10COMPLIANCE_RULES\x10A\x12$\n" +
	" COMPLIANCE_SCAN_SETTING_BINDINGS\x10B\x12\x15\n" +
	"\x11COMPLIANCE_SUITES\x10C\x12\x11\n" +
	"\rCLOUD_SOURCES\x10D\x12\x17\n" +
	"\x13DISCOVERED_CLUSTERS\x10E\x12\x1b\n" +
	"\x17COMPLIANCE_REMEDIATIONS\x10F\x12\x19\n" +
	"\x15COMPLIANCE_BENCHMARKS\x10G\x12\x12\n" +
	"\x0eAUTH_PROVIDERS\x10H\x12\x1e\n" +
	"\x1aCOMPLIANCE_REPORT_SNAPSHOT\x10I\x12\x17\n" +
	"\x13IMAGE_COMPONENTS_V2\x10J\x12\x1c\n" +
	"\x18IMAGE_VULNERABILITIES_V2\x10K\x12\r\n" +
	"\tIMAGES_V2\x10L\x12\x14\n" +
	"\x10VIRTUAL_MACHINES\x10M\"\x04\b;\x10;\"\x04\b@\x10@*~\n" +
	"\x0eSearchDataType\x12\x0f\n" +
	"\vSEARCH_BOOL\x10\x00\x12\x12\n" +
	"\x0eSEARCH_NUMERIC\x10\x01\x12\x11\n" +
	"\rSEARCH_STRING\x10\x02\x12\x13\n" +
	"\x0fSEARCH_DATETIME\x10\x03\x12\x0e\n" +
	"\n" +
	"SEARCH_MAP\x10\x04\x12\x0f\n" +
	"\vSEARCH_ENUM\x10\x052\x9d\x02\n" +
	"\rSearchService\x12F\n" +
	"\x06Search\x12\x14.v1.RawSearchRequest\x1a\x12.v1.SearchResponse\"\x12\x82\xd3\xe4\x93\x02\f\x12\n" +
	"/v1/search\x12c\n" +
	"\aOptions\x12\x18.v1.SearchOptionsRequest\x1a\x19.v1.SearchOptionsResponse\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v1/search/metadata/options\x12_\n" +
	"\fAutocomplete\x12\x14.v1.RawSearchRequest\x1a\x18.v1.AutocompleteResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/v1/search/autocompleteB/\n" +
	"\x18io.stackrox.proto.api.v1Z\v./api/v1;v1\x92\x03\x05\xd2>\x02\x10\x03X\x01b\beditionsp\xe8\a"

var file_api_v1_search_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_v1_search_service_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_api_v1_search_service_proto_goTypes = []any{
	(SearchCategory)(0),            // 0: v1.SearchCategory
	(SearchDataType)(0),            // 1: v1.SearchDataType
	(*RawQuery)(nil),               // 2: v1.RawQuery
	(*RawSearchRequest)(nil),       // 3: v1.RawSearchRequest
	(*QuerySortOption)(nil),        // 4: v1.QuerySortOption
	(*QueryField)(nil),             // 5: v1.QueryField
	(*QuerySelectFilter)(nil),      // 6: v1.QuerySelectFilter
	(*QuerySelect)(nil),            // 7: v1.QuerySelect
	(*QueryGroupBy)(nil),           // 8: v1.QueryGroupBy
	(*QueryPagination)(nil),        // 9: v1.QueryPagination
	(*BooleanQuery)(nil),           // 10: v1.BooleanQuery
	(*Query)(nil),                  // 11: v1.Query
	(*StringQuery)(nil),            // 12: v1.StringQuery
	(*MatchFieldQuery)(nil),        // 13: v1.MatchFieldQuery
	(*MatchLinkedFieldsQuery)(nil), // 14: v1.MatchLinkedFieldsQuery
	(*DocIDQuery)(nil),             // 15: v1.DocIDQuery
	(*BaseQuery)(nil),              // 16: v1.BaseQuery
	(*ConjunctionQuery)(nil),       // 17: v1.ConjunctionQuery
	(*DisjunctionQuery)(nil),       // 18: v1.DisjunctionQuery
	(*MatchNoneQuery)(nil),         // 19: v1.MatchNoneQuery
	(*SearchResult)(nil),           // 20: v1.SearchResult
	(*SearchResponse)(nil),         // 21: v1.SearchResponse
	(*SearchOptionsRequest)(nil),   // 22: v1.SearchOptionsRequest
	(*SearchOptionsResponse)(nil),  // 23: v1.SearchOptionsResponse
	(*AutocompleteResponse)(nil),   // 24: v1.AutocompleteResponse
	(*SearchResult_Matches)(nil),   // 25: v1.SearchResult.Matches
	nil,                            // 26: v1.SearchResult.FieldToMatchesEntry
	(*SearchResponse_Count)(nil),   // 27: v1.SearchResponse.Count
	(*Pagination)(nil),             // 28: v1.Pagination
	(*AggregateBy)(nil),            // 29: v1.AggregateBy
}
var file_api_v1_search_service_proto_depIdxs = []int32{
	28, // 0: v1.RawQuery.pagination:type_name -> v1.Pagination
	0,  // 1: v1.RawSearchRequest.categories:type_name -> v1.SearchCategory
	29, // 2: v1.QuerySortOption.aggregate_by:type_name -> v1.AggregateBy
	11, // 3: v1.QuerySelectFilter.query:type_name -> v1.Query
	5,  // 4: v1.QuerySelect.field:type_name -> v1.QueryField
	6,  // 5: v1.QuerySelect.filter:type_name -> v1.QuerySelectFilter
	4,  // 6: v1.QueryPagination.sort_options:type_name -> v1.QuerySortOption
	17, // 7: v1.BooleanQuery.must:type_name -> v1.ConjunctionQuery
	18, // 8: v1.BooleanQuery.must_not:type_name -> v1.DisjunctionQuery
	17, // 9: v1.Query.conjunction:type_name -> v1.ConjunctionQuery
	18, // 10: v1.Query.disjunction:type_name -> v1.DisjunctionQuery
	16, // 11: v1.Query.base_query:type_name -> v1.BaseQuery
	10, // 12: v1.Query.boolean_query:type_name -> v1.BooleanQuery
	7,  // 13: v1.Query.selects:type_name -> v1.QuerySelect
	8,  // 14: v1.Query.group_by:type_name -> v1.QueryGroupBy
	9,  // 15: v1.Query.pagination:type_name -> v1.QueryPagination
	13, // 16: v1.MatchLinkedFieldsQuery.query:type_name -> v1.MatchFieldQuery
	13, // 17: v1.BaseQuery.match_field_query:type_name -> v1.MatchFieldQuery
	14, // 18: v1.BaseQuery.match_linked_fields_query:type_name -> v1.MatchLinkedFieldsQuery
	15, // 19: v1.BaseQuery.doc_id_query:type_name -> v1.DocIDQuery
	19, // 20: v1.BaseQuery.match_none_query:type_name -> v1.MatchNoneQuery
	11, // 21: v1.ConjunctionQuery.queries:type_name -> v1.Query
	11, // 22: v1.DisjunctionQuery.queries:type_name -> v1.Query
	0,  // 23: v1.SearchResult.category:type_name -> v1.SearchCategory
	26, // 24: v1.SearchResult.field_to_matches:type_name -> v1.SearchResult.FieldToMatchesEntry
	20, // 25: v1.SearchResponse.results:type_name -> v1.SearchResult
	27, // 26: v1.SearchResponse.counts:type_name -> v1.SearchResponse.Count
	0,  // 27: v1.SearchOptionsRequest.categories:type_name -> v1.SearchCategory
	25, // 28: v1.SearchResult.FieldToMatchesEntry.value:type_name -> v1.SearchResult.Matches
	0,  // 29: v1.SearchResponse.Count.category:type_name -> v1.SearchCategory
	3,  // 30: v1.SearchService.Search:input_type -> v1.RawSearchRequest
	22, // 31: v1.SearchService.Options:input_type -> v1.SearchOptionsRequest
	3,  // 32: v1.SearchService.Autocomplete:input_type -> v1.RawSearchRequest
	21, // 33: v1.SearchService.Search:output_type -> v1.SearchResponse
	23, // 34: v1.SearchService.Options:output_type -> v1.SearchOptionsResponse
	24, // 35: v1.SearchService.Autocomplete:output_type -> v1.AutocompleteResponse
	33, // [33:36] is the sub-list for method output_type
	30, // [30:33] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_api_v1_search_service_proto_init() }
func file_api_v1_search_service_proto_init() {
	if File_api_v1_search_service_proto != nil {
		return
	}
	file_api_v1_pagination_proto_init()
	file_api_v1_search_service_proto_msgTypes[2].OneofWrappers = []any{
		(*querySortOption_SearchAfter)(nil),
	}
	file_api_v1_search_service_proto_msgTypes[9].OneofWrappers = []any{
		(*query_Conjunction)(nil),
		(*query_Disjunction)(nil),
		(*query_BaseQuery)(nil),
		(*query_BooleanQuery)(nil),
	}
	file_api_v1_search_service_proto_msgTypes[14].OneofWrappers = []any{
		(*baseQuery_MatchFieldQuery)(nil),
		(*baseQuery_MatchLinkedFieldsQuery)(nil),
		(*baseQuery_DocIdQuery)(nil),
		(*baseQuery_MatchNoneQuery)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_search_service_proto_rawDesc), len(file_api_v1_search_service_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_search_service_proto_goTypes,
		DependencyIndexes: file_api_v1_search_service_proto_depIdxs,
		EnumInfos:         file_api_v1_search_service_proto_enumTypes,
		MessageInfos:      file_api_v1_search_service_proto_msgTypes,
	}.Build()
	File_api_v1_search_service_proto = out.File
	file_api_v1_search_service_proto_goTypes = nil
	file_api_v1_search_service_proto_depIdxs = nil
}
