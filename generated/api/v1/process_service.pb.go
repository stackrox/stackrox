// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: api/v1/process_service.proto

package v1

import (
	storage "github.com/stackrox/rox/generated/storage"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetProcessesByDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
}

func (x *GetProcessesByDeploymentRequest) Reset() {
	*x = GetProcessesByDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_process_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessesByDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessesByDeploymentRequest) ProtoMessage() {}

func (x *GetProcessesByDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_process_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessesByDeploymentRequest.ProtoReflect.Descriptor instead.
func (*GetProcessesByDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_process_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetProcessesByDeploymentRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

type GetProcessesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Processes []*storage.ProcessIndicator `protobuf:"bytes,1,rep,name=processes,proto3" json:"processes,omitempty"`
}

func (x *GetProcessesResponse) Reset() {
	*x = GetProcessesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_process_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProcessesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessesResponse) ProtoMessage() {}

func (x *GetProcessesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_process_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessesResponse.ProtoReflect.Descriptor instead.
func (*GetProcessesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_process_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetProcessesResponse) GetProcesses() []*storage.ProcessIndicator {
	if x != nil {
		return x.Processes
	}
	return nil
}

type ProcessGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Args    string                      `protobuf:"bytes,1,opt,name=args,proto3" json:"args,omitempty"`
	Signals []*storage.ProcessIndicator `protobuf:"bytes,2,rep,name=signals,proto3" json:"signals,omitempty"`
}

func (x *ProcessGroup) Reset() {
	*x = ProcessGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_process_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessGroup) ProtoMessage() {}

func (x *ProcessGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_process_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessGroup.ProtoReflect.Descriptor instead.
func (*ProcessGroup) Descriptor() ([]byte, []int) {
	return file_api_v1_process_service_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessGroup) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

func (x *ProcessGroup) GetSignals() []*storage.ProcessIndicator {
	if x != nil {
		return x.Signals
	}
	return nil
}

type ProcessNameGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TimesExecuted uint32          `protobuf:"varint,2,opt,name=times_executed,json=timesExecuted,proto3" json:"times_executed,omitempty"`
	Groups        []*ProcessGroup `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *ProcessNameGroup) Reset() {
	*x = ProcessNameGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_process_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessNameGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessNameGroup) ProtoMessage() {}

func (x *ProcessNameGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_process_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessNameGroup.ProtoReflect.Descriptor instead.
func (*ProcessNameGroup) Descriptor() ([]byte, []int) {
	return file_api_v1_process_service_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessNameGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcessNameGroup) GetTimesExecuted() uint32 {
	if x != nil {
		return x.TimesExecuted
	}
	return 0
}

func (x *ProcessNameGroup) GetGroups() []*ProcessGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GetGroupedProcessesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*ProcessNameGroup `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GetGroupedProcessesResponse) Reset() {
	*x = GetGroupedProcessesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_process_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupedProcessesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupedProcessesResponse) ProtoMessage() {}

func (x *GetGroupedProcessesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_process_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupedProcessesResponse.ProtoReflect.Descriptor instead.
func (*GetGroupedProcessesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_process_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetGroupedProcessesResponse) GetGroups() []*ProcessNameGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

type ProcessNameAndContainerNameGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ContainerName string          `protobuf:"bytes,2,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	TimesExecuted uint32          `protobuf:"varint,3,opt,name=times_executed,json=timesExecuted,proto3" json:"times_executed,omitempty"`
	Groups        []*ProcessGroup `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	Suspicious    bool            `protobuf:"varint,5,opt,name=suspicious,proto3" json:"suspicious,omitempty"`
}

func (x *ProcessNameAndContainerNameGroup) Reset() {
	*x = ProcessNameAndContainerNameGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_process_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessNameAndContainerNameGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessNameAndContainerNameGroup) ProtoMessage() {}

func (x *ProcessNameAndContainerNameGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_process_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessNameAndContainerNameGroup.ProtoReflect.Descriptor instead.
func (*ProcessNameAndContainerNameGroup) Descriptor() ([]byte, []int) {
	return file_api_v1_process_service_proto_rawDescGZIP(), []int{5}
}

func (x *ProcessNameAndContainerNameGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcessNameAndContainerNameGroup) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *ProcessNameAndContainerNameGroup) GetTimesExecuted() uint32 {
	if x != nil {
		return x.TimesExecuted
	}
	return 0
}

func (x *ProcessNameAndContainerNameGroup) GetGroups() []*ProcessGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *ProcessNameAndContainerNameGroup) GetSuspicious() bool {
	if x != nil {
		return x.Suspicious
	}
	return false
}

type GetGroupedProcessesWithContainerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*ProcessNameAndContainerNameGroup `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GetGroupedProcessesWithContainerResponse) Reset() {
	*x = GetGroupedProcessesWithContainerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_process_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupedProcessesWithContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupedProcessesWithContainerResponse) ProtoMessage() {}

func (x *GetGroupedProcessesWithContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_process_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupedProcessesWithContainerResponse.ProtoReflect.Descriptor instead.
func (*GetGroupedProcessesWithContainerResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_process_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetGroupedProcessesWithContainerResponse) GetGroups() []*ProcessNameAndContainerNameGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

type CountProcessesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountProcessesResponse) Reset() {
	*x = CountProcessesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_process_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountProcessesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountProcessesResponse) ProtoMessage() {}

func (x *CountProcessesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_process_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountProcessesResponse.ProtoReflect.Descriptor instead.
func (*CountProcessesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_process_service_proto_rawDescGZIP(), []int{7}
}

func (x *CountProcessesResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_api_v1_process_service_proto protoreflect.FileDescriptor

var file_api_v1_process_service_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x76, 0x31, 0x1a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42, 0x79,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73,
	0x22, 0x77, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x12,
	0x28, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x4b, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x20, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x5f,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x12, 0x28, 0x0a,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x73, 0x70, 0x69,
	0x63, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x73,
	0x70, 0x69, 0x63, 0x69, 0x6f, 0x75, 0x73, 0x22, 0x68, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x57, 0x69,
	0x74, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x22, 0x2e, 0x0a, 0x16, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x32, 0xdb, 0x04, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x77, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x1a, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x8b, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42, 0x79, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42, 0x79, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x12, 0x28,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x9f, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x42, 0x79,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42, 0x79, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2f, 0x7b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x12, 0xc2, 0x01, 0x0a, 0x29, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x42, 0x79, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x42, 0x79, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x3c, 0x12, 0x3a, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x42,
	0x27, 0x0a, 0x18, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x72, 0x6f, 0x78, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x5a, 0x0b, 0x2e, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x58, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_v1_process_service_proto_rawDescOnce sync.Once
	file_api_v1_process_service_proto_rawDescData = file_api_v1_process_service_proto_rawDesc
)

func file_api_v1_process_service_proto_rawDescGZIP() []byte {
	file_api_v1_process_service_proto_rawDescOnce.Do(func() {
		file_api_v1_process_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_process_service_proto_rawDescData)
	})
	return file_api_v1_process_service_proto_rawDescData
}

var file_api_v1_process_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_v1_process_service_proto_goTypes = []any{
	(*GetProcessesByDeploymentRequest)(nil),          // 0: v1.GetProcessesByDeploymentRequest
	(*GetProcessesResponse)(nil),                     // 1: v1.GetProcessesResponse
	(*ProcessGroup)(nil),                             // 2: v1.ProcessGroup
	(*ProcessNameGroup)(nil),                         // 3: v1.ProcessNameGroup
	(*GetGroupedProcessesResponse)(nil),              // 4: v1.GetGroupedProcessesResponse
	(*ProcessNameAndContainerNameGroup)(nil),         // 5: v1.ProcessNameAndContainerNameGroup
	(*GetGroupedProcessesWithContainerResponse)(nil), // 6: v1.GetGroupedProcessesWithContainerResponse
	(*CountProcessesResponse)(nil),                   // 7: v1.CountProcessesResponse
	(*storage.ProcessIndicator)(nil),                 // 8: storage.ProcessIndicator
	(*RawQuery)(nil),                                 // 9: v1.RawQuery
}
var file_api_v1_process_service_proto_depIdxs = []int32{
	8,  // 0: v1.GetProcessesResponse.processes:type_name -> storage.ProcessIndicator
	8,  // 1: v1.ProcessGroup.signals:type_name -> storage.ProcessIndicator
	2,  // 2: v1.ProcessNameGroup.groups:type_name -> v1.ProcessGroup
	3,  // 3: v1.GetGroupedProcessesResponse.groups:type_name -> v1.ProcessNameGroup
	2,  // 4: v1.ProcessNameAndContainerNameGroup.groups:type_name -> v1.ProcessGroup
	5,  // 5: v1.GetGroupedProcessesWithContainerResponse.groups:type_name -> v1.ProcessNameAndContainerNameGroup
	9,  // 6: v1.ProcessService.CountProcesses:input_type -> v1.RawQuery
	0,  // 7: v1.ProcessService.GetProcessesByDeployment:input_type -> v1.GetProcessesByDeploymentRequest
	0,  // 8: v1.ProcessService.GetGroupedProcessByDeployment:input_type -> v1.GetProcessesByDeploymentRequest
	0,  // 9: v1.ProcessService.GetGroupedProcessByDeploymentAndContainer:input_type -> v1.GetProcessesByDeploymentRequest
	7,  // 10: v1.ProcessService.CountProcesses:output_type -> v1.CountProcessesResponse
	1,  // 11: v1.ProcessService.GetProcessesByDeployment:output_type -> v1.GetProcessesResponse
	4,  // 12: v1.ProcessService.GetGroupedProcessByDeployment:output_type -> v1.GetGroupedProcessesResponse
	6,  // 13: v1.ProcessService.GetGroupedProcessByDeploymentAndContainer:output_type -> v1.GetGroupedProcessesWithContainerResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_api_v1_process_service_proto_init() }
func file_api_v1_process_service_proto_init() {
	if File_api_v1_process_service_proto != nil {
		return
	}
	file_api_v1_search_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1_process_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetProcessesByDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_process_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetProcessesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_process_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_process_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessNameGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_process_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetGroupedProcessesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_process_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ProcessNameAndContainerNameGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_process_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetGroupedProcessesWithContainerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_process_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CountProcessesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_process_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_process_service_proto_goTypes,
		DependencyIndexes: file_api_v1_process_service_proto_depIdxs,
		MessageInfos:      file_api_v1_process_service_proto_msgTypes,
	}.Build()
	File_api_v1_process_service_proto = out.File
	file_api_v1_process_service_proto_rawDesc = nil
	file_api_v1_process_service_proto_goTypes = nil
	file_api_v1_process_service_proto_depIdxs = nil
}
