// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: api/v1/group_service.proto

package v1

import (
	storage "github.com/stackrox/rox/generated/storage"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to AuthProviderIdOpt:
	//
	//	*GetGroupsRequest_AuthProviderId
	AuthProviderIdOpt isGetGroupsRequest_AuthProviderIdOpt `protobuf_oneof:"auth_provider_id_opt"`
	// Types that are assignable to KeyOpt:
	//
	//	*GetGroupsRequest_Key
	KeyOpt isGetGroupsRequest_KeyOpt `protobuf_oneof:"key_opt"`
	// Types that are assignable to ValueOpt:
	//
	//	*GetGroupsRequest_Value
	ValueOpt isGetGroupsRequest_ValueOpt `protobuf_oneof:"value_opt"`
	// Types that are assignable to IdOpt:
	//
	//	*GetGroupsRequest_Id
	IdOpt isGetGroupsRequest_IdOpt `protobuf_oneof:"id_opt"`
}

func (x *GetGroupsRequest) Reset() {
	*x = GetGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_group_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsRequest) ProtoMessage() {}

func (x *GetGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_group_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsRequest.ProtoReflect.Descriptor instead.
func (*GetGroupsRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_group_service_proto_rawDescGZIP(), []int{0}
}

func (m *GetGroupsRequest) GetAuthProviderIdOpt() isGetGroupsRequest_AuthProviderIdOpt {
	if m != nil {
		return m.AuthProviderIdOpt
	}
	return nil
}

func (x *GetGroupsRequest) GetAuthProviderId() string {
	if x, ok := x.GetAuthProviderIdOpt().(*GetGroupsRequest_AuthProviderId); ok {
		return x.AuthProviderId
	}
	return ""
}

func (m *GetGroupsRequest) GetKeyOpt() isGetGroupsRequest_KeyOpt {
	if m != nil {
		return m.KeyOpt
	}
	return nil
}

func (x *GetGroupsRequest) GetKey() string {
	if x, ok := x.GetKeyOpt().(*GetGroupsRequest_Key); ok {
		return x.Key
	}
	return ""
}

func (m *GetGroupsRequest) GetValueOpt() isGetGroupsRequest_ValueOpt {
	if m != nil {
		return m.ValueOpt
	}
	return nil
}

func (x *GetGroupsRequest) GetValue() string {
	if x, ok := x.GetValueOpt().(*GetGroupsRequest_Value); ok {
		return x.Value
	}
	return ""
}

func (m *GetGroupsRequest) GetIdOpt() isGetGroupsRequest_IdOpt {
	if m != nil {
		return m.IdOpt
	}
	return nil
}

func (x *GetGroupsRequest) GetId() string {
	if x, ok := x.GetIdOpt().(*GetGroupsRequest_Id); ok {
		return x.Id
	}
	return ""
}

type isGetGroupsRequest_AuthProviderIdOpt interface {
	isGetGroupsRequest_AuthProviderIdOpt()
}

type GetGroupsRequest_AuthProviderId struct {
	AuthProviderId string `protobuf:"bytes,1,opt,name=auth_provider_id,json=authProviderId,proto3,oneof"`
}

func (*GetGroupsRequest_AuthProviderId) isGetGroupsRequest_AuthProviderIdOpt() {}

type isGetGroupsRequest_KeyOpt interface {
	isGetGroupsRequest_KeyOpt()
}

type GetGroupsRequest_Key struct {
	Key string `protobuf:"bytes,2,opt,name=key,proto3,oneof"`
}

func (*GetGroupsRequest_Key) isGetGroupsRequest_KeyOpt() {}

type isGetGroupsRequest_ValueOpt interface {
	isGetGroupsRequest_ValueOpt()
}

type GetGroupsRequest_Value struct {
	Value string `protobuf:"bytes,3,opt,name=value,proto3,oneof"`
}

func (*GetGroupsRequest_Value) isGetGroupsRequest_ValueOpt() {}

type isGetGroupsRequest_IdOpt interface {
	isGetGroupsRequest_IdOpt()
}

type GetGroupsRequest_Id struct {
	Id string `protobuf:"bytes,4,opt,name=id,proto3,oneof"`
}

func (*GetGroupsRequest_Id) isGetGroupsRequest_IdOpt() {}

// API for updating Groups and getting users.
// Next Available Tag: 2
type GetGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*storage.Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GetGroupsResponse) Reset() {
	*x = GetGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_group_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupsResponse) ProtoMessage() {}

func (x *GetGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_group_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupsResponse.ProtoReflect.Descriptor instead.
func (*GetGroupsResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_group_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetGroupsResponse) GetGroups() []*storage.Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

// GroupBatchUpdateRequest is an in transaction batch update to the groups present.
// Next Available Tag: 3
type GroupBatchUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Previous groups are the groups expected to be present in the store.
	// Performs a diff on the GroupProperties present in previous_groups and required_groups:
	// 1) if in previous_groups but not required_groups, it gets deleted.
	// 2) if in previous_groups and required_groups, it gets updated.
	// 3) if not in previous_groups but in required_groups, it gets added.
	PreviousGroups []*storage.Group `protobuf:"bytes,1,rep,name=previous_groups,json=previousGroups,proto3" json:"previous_groups,omitempty"`
	// Required groups are the groups we want to mutate the previous groups into.
	RequiredGroups []*storage.Group `protobuf:"bytes,2,rep,name=required_groups,json=requiredGroups,proto3" json:"required_groups,omitempty"`
	Force          bool             `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *GroupBatchUpdateRequest) Reset() {
	*x = GroupBatchUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_group_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupBatchUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupBatchUpdateRequest) ProtoMessage() {}

func (x *GroupBatchUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_group_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupBatchUpdateRequest.ProtoReflect.Descriptor instead.
func (*GroupBatchUpdateRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_group_service_proto_rawDescGZIP(), []int{2}
}

func (x *GroupBatchUpdateRequest) GetPreviousGroups() []*storage.Group {
	if x != nil {
		return x.PreviousGroups
	}
	return nil
}

func (x *GroupBatchUpdateRequest) GetRequiredGroups() []*storage.Group {
	if x != nil {
		return x.RequiredGroups
	}
	return nil
}

func (x *GroupBatchUpdateRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type DeleteGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// We copy over parameters from storage.GroupProperties for seamless HTTP API migration.
	AuthProviderId string `protobuf:"bytes,1,opt,name=auth_provider_id,json=authProviderId,proto3" json:"auth_provider_id,omitempty"`
	Key            string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value          string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Id             string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Force          bool   `protobuf:"varint,5,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *DeleteGroupRequest) Reset() {
	*x = DeleteGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_group_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupRequest) ProtoMessage() {}

func (x *DeleteGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_group_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_group_service_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteGroupRequest) GetAuthProviderId() string {
	if x != nil {
		return x.AuthProviderId
	}
	return ""
}

func (x *DeleteGroupRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeleteGroupRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DeleteGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteGroupRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type UpdateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *storage.Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Force bool           `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *UpdateGroupRequest) Reset() {
	*x = UpdateGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_group_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupRequest) ProtoMessage() {}

func (x *UpdateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_group_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroupRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_group_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateGroupRequest) GetGroup() *storage.Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *UpdateGroupRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

var File_api_v1_group_service_proto protoreflect.FileDescriptor

var file_api_v1_group_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31,
	0x1a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x02, 0x69, 0x64, 0x42, 0x16, 0x0a, 0x14, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x42, 0x09,
	0x0a, 0x07, 0x6b, 0x65, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x69, 0x64, 0x5f, 0x6f, 0x70, 0x74,
	0x22, 0x3b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0xa1, 0x01,
	0x0a, 0x17, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0f, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x37, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0e, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x22, 0x8c, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x22, 0x50, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x32, 0xcc, 0x03, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x47, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x0e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12,
	0x09, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x51, 0x0a, 0x0b, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x76,
	0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x62, 0x61, 0x74, 0x63, 0x68, 0x12, 0x3f, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x09, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a,
	0x01, 0x2a, 0x22, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x4b,
	0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x1a,
	0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x44, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x12, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x2a, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x42, 0x27, 0x0a, 0x18, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x72, 0x6f, 0x78,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x5a, 0x0b, 0x2e,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x58, 0x01, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_group_service_proto_rawDescOnce sync.Once
	file_api_v1_group_service_proto_rawDescData = file_api_v1_group_service_proto_rawDesc
)

func file_api_v1_group_service_proto_rawDescGZIP() []byte {
	file_api_v1_group_service_proto_rawDescOnce.Do(func() {
		file_api_v1_group_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_group_service_proto_rawDescData)
	})
	return file_api_v1_group_service_proto_rawDescData
}

var file_api_v1_group_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_v1_group_service_proto_goTypes = []any{
	(*GetGroupsRequest)(nil),        // 0: v1.GetGroupsRequest
	(*GetGroupsResponse)(nil),       // 1: v1.GetGroupsResponse
	(*GroupBatchUpdateRequest)(nil), // 2: v1.GroupBatchUpdateRequest
	(*DeleteGroupRequest)(nil),      // 3: v1.DeleteGroupRequest
	(*UpdateGroupRequest)(nil),      // 4: v1.UpdateGroupRequest
	(*storage.Group)(nil),           // 5: storage.Group
	(*storage.GroupProperties)(nil), // 6: storage.GroupProperties
	(*Empty)(nil),                   // 7: v1.Empty
}
var file_api_v1_group_service_proto_depIdxs = []int32{
	5,  // 0: v1.GetGroupsResponse.groups:type_name -> storage.Group
	5,  // 1: v1.GroupBatchUpdateRequest.previous_groups:type_name -> storage.Group
	5,  // 2: v1.GroupBatchUpdateRequest.required_groups:type_name -> storage.Group
	5,  // 3: v1.UpdateGroupRequest.group:type_name -> storage.Group
	0,  // 4: v1.GroupService.GetGroups:input_type -> v1.GetGroupsRequest
	6,  // 5: v1.GroupService.GetGroup:input_type -> storage.GroupProperties
	2,  // 6: v1.GroupService.BatchUpdate:input_type -> v1.GroupBatchUpdateRequest
	5,  // 7: v1.GroupService.CreateGroup:input_type -> storage.Group
	4,  // 8: v1.GroupService.UpdateGroup:input_type -> v1.UpdateGroupRequest
	3,  // 9: v1.GroupService.DeleteGroup:input_type -> v1.DeleteGroupRequest
	1,  // 10: v1.GroupService.GetGroups:output_type -> v1.GetGroupsResponse
	5,  // 11: v1.GroupService.GetGroup:output_type -> storage.Group
	7,  // 12: v1.GroupService.BatchUpdate:output_type -> v1.Empty
	7,  // 13: v1.GroupService.CreateGroup:output_type -> v1.Empty
	7,  // 14: v1.GroupService.UpdateGroup:output_type -> v1.Empty
	7,  // 15: v1.GroupService.DeleteGroup:output_type -> v1.Empty
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_v1_group_service_proto_init() }
func file_api_v1_group_service_proto_init() {
	if File_api_v1_group_service_proto != nil {
		return
	}
	file_api_v1_empty_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1_group_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_group_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_group_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GroupBatchUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_group_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_group_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_group_service_proto_msgTypes[0].OneofWrappers = []any{
		(*GetGroupsRequest_AuthProviderId)(nil),
		(*GetGroupsRequest_Key)(nil),
		(*GetGroupsRequest_Value)(nil),
		(*GetGroupsRequest_Id)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_group_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_group_service_proto_goTypes,
		DependencyIndexes: file_api_v1_group_service_proto_depIdxs,
		MessageInfos:      file_api_v1_group_service_proto_msgTypes,
	}.Build()
	File_api_v1_group_service_proto = out.File
	file_api_v1_group_service_proto_rawDesc = nil
	file_api_v1_group_service_proto_goTypes = nil
	file_api_v1_group_service_proto_depIdxs = nil
}
