// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/v1/signature_integration_service.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	storage "github.com/stackrox/rox/generated/storage"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListSignatureIntegrationsResponse struct {
	Integrations         []*storage.SignatureIntegration `protobuf:"bytes,1,rep,name=integrations,proto3" json:"integrations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ListSignatureIntegrationsResponse) Reset()         { *m = ListSignatureIntegrationsResponse{} }
func (m *ListSignatureIntegrationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListSignatureIntegrationsResponse) ProtoMessage()    {}
func (*ListSignatureIntegrationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dda2156ddd73baf3, []int{0}
}
func (m *ListSignatureIntegrationsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListSignatureIntegrationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListSignatureIntegrationsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListSignatureIntegrationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSignatureIntegrationsResponse.Merge(m, src)
}
func (m *ListSignatureIntegrationsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListSignatureIntegrationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSignatureIntegrationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSignatureIntegrationsResponse proto.InternalMessageInfo

func (m *ListSignatureIntegrationsResponse) GetIntegrations() []*storage.SignatureIntegration {
	if m != nil {
		return m.Integrations
	}
	return nil
}

func (m *ListSignatureIntegrationsResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ListSignatureIntegrationsResponse) Clone() *ListSignatureIntegrationsResponse {
	if m == nil {
		return nil
	}
	cloned := new(ListSignatureIntegrationsResponse)
	*cloned = *m

	if m.Integrations != nil {
		cloned.Integrations = make([]*storage.SignatureIntegration, len(m.Integrations))
		for idx, v := range m.Integrations {
			cloned.Integrations[idx] = v.Clone()
		}
	}
	return cloned
}

func init() {
	proto.RegisterType((*ListSignatureIntegrationsResponse)(nil), "v1.ListSignatureIntegrationsResponse")
}

func init() {
	proto.RegisterFile("api/v1/signature_integration_service.proto", fileDescriptor_dda2156ddd73baf3)
}

var fileDescriptor_dda2156ddd73baf3 = []byte{
	// 389 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x4a, 0x2c, 0xc8, 0xd4,
	0x2f, 0x33, 0xd4, 0x2f, 0xce, 0x4c, 0xcf, 0x4b, 0x2c, 0x29, 0x2d, 0x4a, 0x8d, 0xcf, 0xcc, 0x2b,
	0x49, 0x4d, 0x2f, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0x8b, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x33, 0x94, 0x12, 0x86, 0xaa, 0x4f, 0xce,
	0xcf, 0xcd, 0xcd, 0xcf, 0x83, 0x48, 0x48, 0x09, 0x41, 0x05, 0x53, 0x73, 0x0b, 0x4a, 0x2a, 0xa1,
	0x62, 0x32, 0xe9, 0xf9, 0xf9, 0xe9, 0x39, 0xa9, 0xfa, 0x20, 0xa9, 0xc4, 0xbc, 0xbc, 0xfc, 0x12,
	0xb0, 0x89, 0xc5, 0x50, 0x59, 0xe5, 0xe2, 0x92, 0xfc, 0xa2, 0xc4, 0xf4, 0x54, 0xec, 0xf6, 0x42,
	0x14, 0x29, 0xa5, 0x71, 0x29, 0xfa, 0x64, 0x16, 0x97, 0x04, 0xc3, 0x94, 0x78, 0x22, 0x54, 0x14,
	0x07, 0xa5, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x39, 0x72, 0xf1, 0x20, 0xe9, 0x2c, 0x96,
	0x60, 0x54, 0x60, 0xd6, 0xe0, 0x36, 0x92, 0xd5, 0x83, 0x5a, 0xa0, 0x87, 0x4d, 0x77, 0x10, 0x8a,
	0x16, 0xa3, 0x6b, 0x2c, 0x5c, 0xd2, 0xd8, 0x94, 0x05, 0x43, 0x7c, 0x2f, 0x54, 0xc0, 0x25, 0x89,
	0xd3, 0x1d, 0x42, 0x9c, 0x7a, 0x65, 0x86, 0x7a, 0xae, 0x20, 0x8f, 0x4b, 0xa9, 0x82, 0x98, 0x04,
	0x5d, 0xac, 0xa4, 0xd8, 0x74, 0xf9, 0xc9, 0x64, 0x26, 0x69, 0x21, 0x49, 0x94, 0x70, 0x47, 0x76,
	0x91, 0x50, 0x11, 0x97, 0xb8, 0x7b, 0x2a, 0x56, 0x63, 0x84, 0x04, 0x40, 0x96, 0x04, 0xa5, 0x16,
	0xe7, 0x97, 0x16, 0x25, 0xa7, 0x3a, 0x55, 0x7a, 0xba, 0x48, 0xe1, 0xf7, 0xab, 0x92, 0x1a, 0xd8,
	0x3a, 0x05, 0x21, 0x39, 0x9c, 0xd6, 0xe9, 0x57, 0x67, 0xa6, 0xd4, 0x0a, 0xd5, 0x71, 0x49, 0x04,
	0xe4, 0x63, 0x77, 0xbb, 0x10, 0x7e, 0x2b, 0x08, 0xb9, 0x40, 0x05, 0xec, 0x02, 0x39, 0x25, 0xdc,
	0x1e, 0xb6, 0x62, 0xd4, 0x12, 0xca, 0xe3, 0x12, 0x0f, 0x28, 0x25, 0xcb, 0x7a, 0x44, 0x14, 0x28,
	0x69, 0x82, 0xad, 0x52, 0x96, 0x22, 0xe0, 0x59, 0x90, 0x7d, 0x89, 0x5c, 0x52, 0x2e, 0xa9, 0x39,
	0xa9, 0x25, 0xa9, 0x44, 0x06, 0x33, 0x92, 0x2d, 0xd0, 0x20, 0xd5, 0x22, 0x60, 0x8b, 0x93, 0xf9,
	0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7, 0x38, 0xe3, 0xb1, 0x1c,
	0x03, 0x97, 0x44, 0x66, 0xbe, 0x5e, 0x71, 0x49, 0x62, 0x72, 0x76, 0x51, 0x7e, 0x05, 0x24, 0x95,
	0xeb, 0x25, 0x16, 0x64, 0xea, 0x95, 0x19, 0x46, 0x71, 0xeb, 0xe9, 0x43, 0x72, 0x91, 0x75, 0x99,
	0x61, 0x04, 0x53, 0x12, 0x1b, 0x58, 0xd2, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xfc, 0xed, 0x33,
	0xb1, 0xa0, 0x03, 0x00, 0x00,
}

func (m *ListSignatureIntegrationsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListSignatureIntegrationsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListSignatureIntegrationsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Integrations) > 0 {
		for iNdEx := len(m.Integrations) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Integrations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSignatureIntegrationService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintSignatureIntegrationService(dAtA []byte, offset int, v uint64) int {
	offset -= sovSignatureIntegrationService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ListSignatureIntegrationsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Integrations) > 0 {
		for _, e := range m.Integrations {
			l = e.Size()
			n += 1 + l + sovSignatureIntegrationService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovSignatureIntegrationService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSignatureIntegrationService(x uint64) (n int) {
	return sovSignatureIntegrationService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ListSignatureIntegrationsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSignatureIntegrationService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListSignatureIntegrationsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListSignatureIntegrationsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Integrations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSignatureIntegrationService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSignatureIntegrationService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSignatureIntegrationService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Integrations = append(m.Integrations, &storage.SignatureIntegration{})
			if err := m.Integrations[len(m.Integrations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSignatureIntegrationService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSignatureIntegrationService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSignatureIntegrationService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSignatureIntegrationService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSignatureIntegrationService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSignatureIntegrationService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSignatureIntegrationService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSignatureIntegrationService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSignatureIntegrationService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSignatureIntegrationService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSignatureIntegrationService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSignatureIntegrationService = fmt.Errorf("proto: unexpected end of group")
)
