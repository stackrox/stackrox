// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: api/v1/network_graph_service.proto

package v1

import (
	storage "github.com/stackrox/rox/generated/storage"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NetworkGraphScope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *NetworkGraphScope) Reset() {
	*x = NetworkGraphScope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_network_graph_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkGraphScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkGraphScope) ProtoMessage() {}

func (x *NetworkGraphScope) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_network_graph_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkGraphScope.ProtoReflect.Descriptor instead.
func (*NetworkGraphScope) Descriptor() ([]byte, []int) {
	return file_api_v1_network_graph_service_proto_rawDescGZIP(), []int{0}
}

func (x *NetworkGraphScope) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type NetworkEdgeProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port                uint32                 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Protocol            storage.L4Protocol     `protobuf:"varint,2,opt,name=protocol,proto3,enum=storage.L4Protocol" json:"protocol,omitempty"`
	LastActiveTimestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_active_timestamp,json=lastActiveTimestamp,proto3" json:"last_active_timestamp,omitempty"`
}

func (x *NetworkEdgeProperties) Reset() {
	*x = NetworkEdgeProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_network_graph_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkEdgeProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkEdgeProperties) ProtoMessage() {}

func (x *NetworkEdgeProperties) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_network_graph_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkEdgeProperties.ProtoReflect.Descriptor instead.
func (*NetworkEdgeProperties) Descriptor() ([]byte, []int) {
	return file_api_v1_network_graph_service_proto_rawDescGZIP(), []int{1}
}

func (x *NetworkEdgeProperties) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *NetworkEdgeProperties) GetProtocol() storage.L4Protocol {
	if x != nil {
		return x.Protocol
	}
	return storage.L4Protocol(0)
}

func (x *NetworkEdgeProperties) GetLastActiveTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActiveTimestamp
	}
	return nil
}

type NetworkEdgePropertiesBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties []*NetworkEdgeProperties `protobuf:"bytes,1,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *NetworkEdgePropertiesBundle) Reset() {
	*x = NetworkEdgePropertiesBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_network_graph_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkEdgePropertiesBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkEdgePropertiesBundle) ProtoMessage() {}

func (x *NetworkEdgePropertiesBundle) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_network_graph_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkEdgePropertiesBundle.ProtoReflect.Descriptor instead.
func (*NetworkEdgePropertiesBundle) Descriptor() ([]byte, []int) {
	return file_api_v1_network_graph_service_proto_rawDescGZIP(), []int{2}
}

func (x *NetworkEdgePropertiesBundle) GetProperties() []*NetworkEdgeProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

type NetworkNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity             *storage.NetworkEntityInfo             `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	InternetAccess     bool                                   `protobuf:"varint,2,opt,name=internet_access,json=internetAccess,proto3" json:"internet_access,omitempty"`
	PolicyIds          []string                               `protobuf:"bytes,3,rep,name=policy_ids,json=policyIds,proto3" json:"policy_ids,omitempty"`
	NonIsolatedIngress bool                                   `protobuf:"varint,5,opt,name=non_isolated_ingress,json=nonIsolatedIngress,proto3" json:"non_isolated_ingress,omitempty"`
	NonIsolatedEgress  bool                                   `protobuf:"varint,6,opt,name=non_isolated_egress,json=nonIsolatedEgress,proto3" json:"non_isolated_egress,omitempty"`
	QueryMatch         bool                                   `protobuf:"varint,7,opt,name=query_match,json=queryMatch,proto3" json:"query_match,omitempty"`
	OutEdges           map[int32]*NetworkEdgePropertiesBundle `protobuf:"bytes,4,rep,name=out_edges,json=outEdges,proto3" json:"out_edges,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NetworkNode) Reset() {
	*x = NetworkNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_network_graph_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkNode) ProtoMessage() {}

func (x *NetworkNode) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_network_graph_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkNode.ProtoReflect.Descriptor instead.
func (*NetworkNode) Descriptor() ([]byte, []int) {
	return file_api_v1_network_graph_service_proto_rawDescGZIP(), []int{3}
}

func (x *NetworkNode) GetEntity() *storage.NetworkEntityInfo {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *NetworkNode) GetInternetAccess() bool {
	if x != nil {
		return x.InternetAccess
	}
	return false
}

func (x *NetworkNode) GetPolicyIds() []string {
	if x != nil {
		return x.PolicyIds
	}
	return nil
}

func (x *NetworkNode) GetNonIsolatedIngress() bool {
	if x != nil {
		return x.NonIsolatedIngress
	}
	return false
}

func (x *NetworkNode) GetNonIsolatedEgress() bool {
	if x != nil {
		return x.NonIsolatedEgress
	}
	return false
}

func (x *NetworkNode) GetQueryMatch() bool {
	if x != nil {
		return x.QueryMatch
	}
	return false
}

func (x *NetworkNode) GetOutEdges() map[int32]*NetworkEdgePropertiesBundle {
	if x != nil {
		return x.OutEdges
	}
	return nil
}

type NetworkGraphRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId       string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Query           string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Since           *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=since,proto3" json:"since,omitempty"`
	IncludePorts    bool                   `protobuf:"varint,4,opt,name=include_ports,json=includePorts,proto3" json:"include_ports,omitempty"`
	Scope           *NetworkGraphScope     `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	IncludePolicies bool                   `protobuf:"varint,6,opt,name=include_policies,json=includePolicies,proto3" json:"include_policies,omitempty"`
}

func (x *NetworkGraphRequest) Reset() {
	*x = NetworkGraphRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_network_graph_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkGraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkGraphRequest) ProtoMessage() {}

func (x *NetworkGraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_network_graph_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkGraphRequest.ProtoReflect.Descriptor instead.
func (*NetworkGraphRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_network_graph_service_proto_rawDescGZIP(), []int{4}
}

func (x *NetworkGraphRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *NetworkGraphRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *NetworkGraphRequest) GetSince() *timestamppb.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

func (x *NetworkGraphRequest) GetIncludePorts() bool {
	if x != nil {
		return x.IncludePorts
	}
	return false
}

func (x *NetworkGraphRequest) GetScope() *NetworkGraphScope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *NetworkGraphRequest) GetIncludePolicies() bool {
	if x != nil {
		return x.IncludePolicies
	}
	return false
}

type NetworkGraph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch uint32         `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Nodes []*NetworkNode `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *NetworkGraph) Reset() {
	*x = NetworkGraph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_network_graph_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkGraph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkGraph) ProtoMessage() {}

func (x *NetworkGraph) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_network_graph_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkGraph.ProtoReflect.Descriptor instead.
func (*NetworkGraph) Descriptor() ([]byte, []int) {
	return file_api_v1_network_graph_service_proto_rawDescGZIP(), []int{5}
}

func (x *NetworkGraph) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *NetworkGraph) GetNodes() []*NetworkNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type CreateNetworkEntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId string                                    `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Entity    *storage.NetworkEntityInfo_ExternalSource `protobuf:"bytes,2,opt,name=entity,proto3" json:"entity,omitempty"`
}

func (x *CreateNetworkEntityRequest) Reset() {
	*x = CreateNetworkEntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_network_graph_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNetworkEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkEntityRequest) ProtoMessage() {}

func (x *CreateNetworkEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_network_graph_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworkEntityRequest.ProtoReflect.Descriptor instead.
func (*CreateNetworkEntityRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_network_graph_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateNetworkEntityRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *CreateNetworkEntityRequest) GetEntity() *storage.NetworkEntityInfo_ExternalSource {
	if x != nil {
		return x.Entity
	}
	return nil
}

type PatchNetworkEntityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PatchNetworkEntityRequest) Reset() {
	*x = PatchNetworkEntityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_network_graph_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchNetworkEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchNetworkEntityRequest) ProtoMessage() {}

func (x *PatchNetworkEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_network_graph_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchNetworkEntityRequest.ProtoReflect.Descriptor instead.
func (*PatchNetworkEntityRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_network_graph_service_proto_rawDescGZIP(), []int{7}
}

func (x *PatchNetworkEntityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PatchNetworkEntityRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetExternalNetworkEntitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Query     string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *GetExternalNetworkEntitiesRequest) Reset() {
	*x = GetExternalNetworkEntitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_network_graph_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExternalNetworkEntitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExternalNetworkEntitiesRequest) ProtoMessage() {}

func (x *GetExternalNetworkEntitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_network_graph_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExternalNetworkEntitiesRequest.ProtoReflect.Descriptor instead.
func (*GetExternalNetworkEntitiesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_network_graph_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetExternalNetworkEntitiesRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *GetExternalNetworkEntitiesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type GetExternalNetworkEntitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entities []*storage.NetworkEntity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *GetExternalNetworkEntitiesResponse) Reset() {
	*x = GetExternalNetworkEntitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_network_graph_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExternalNetworkEntitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExternalNetworkEntitiesResponse) ProtoMessage() {}

func (x *GetExternalNetworkEntitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_network_graph_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExternalNetworkEntitiesResponse.ProtoReflect.Descriptor instead.
func (*GetExternalNetworkEntitiesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_network_graph_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetExternalNetworkEntitiesResponse) GetEntities() []*storage.NetworkEntity {
	if x != nil {
		return x.Entities
	}
	return nil
}

type PutNetworkGraphConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *storage.NetworkGraphConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *PutNetworkGraphConfigRequest) Reset() {
	*x = PutNetworkGraphConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_network_graph_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutNetworkGraphConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutNetworkGraphConfigRequest) ProtoMessage() {}

func (x *PutNetworkGraphConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_network_graph_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutNetworkGraphConfigRequest.ProtoReflect.Descriptor instead.
func (*PutNetworkGraphConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_network_graph_service_proto_rawDescGZIP(), []int{10}
}

func (x *PutNetworkGraphConfigRequest) GetConfig() *storage.NetworkGraphConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

var File_api_v1_network_graph_service_proto protoreflect.FileDescriptor

var file_api_v1_network_graph_service_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x29, 0x0a, 0x11, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0xac, 0x01, 0x0a, 0x15,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x64, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x34, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x4e, 0x0a, 0x15, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x58, 0x0a, 0x1b, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x64, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x64, 0x67, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x22, 0xa6, 0x03, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x73,
	0x12, 0x30, 0x0a, 0x14, 0x6e, 0x6f, 0x6e, 0x5f, 0x69, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x6e, 0x6f, 0x6e, 0x49, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x6f, 0x6e, 0x5f, 0x69, 0x73, 0x6f, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x6e, 0x6f, 0x6e, 0x49, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x45, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x3a, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x5f, 0x65, 0x64, 0x67, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x4f, 0x75, 0x74, 0x45, 0x64, 0x67, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x45, 0x64, 0x67, 0x65, 0x73, 0x1a,
	0x5c, 0x0a, 0x0d, 0x4f, 0x75, 0x74, 0x45, 0x64, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x64,
	0x67, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x42, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf9, 0x01,
	0x0a, 0x13, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x69,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x73, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x0c, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12,
	0x25, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x7e, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x3f, 0x0a, 0x19, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x22, 0x58, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x1c, 0x50,
	0x75, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x32, 0x9e, 0x07, 0x0a, 0x13, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x17, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25,
	0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x7b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xab, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x12, 0x36, 0x2f, 0x76, 0x31,
	0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x7b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x98, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x41, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x3b, 0x3a, 0x01, 0x2a, 0x22, 0x36, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x2f, 0x7b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x86,
	0x01, 0x0a, 0x1a, 0x50, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x32,
	0x26, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6a, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x2a, 0x26, 0x2f, 0x76, 0x31,
	0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x60, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x09, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76,
	0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x7a, 0x0a, 0x15, 0x50, 0x75, 0x74, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x1a, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x27, 0x0a, 0x18, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x72, 0x6f, 0x78,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x5a, 0x0b, 0x2e,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x58, 0x02, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_network_graph_service_proto_rawDescOnce sync.Once
	file_api_v1_network_graph_service_proto_rawDescData = file_api_v1_network_graph_service_proto_rawDesc
)

func file_api_v1_network_graph_service_proto_rawDescGZIP() []byte {
	file_api_v1_network_graph_service_proto_rawDescOnce.Do(func() {
		file_api_v1_network_graph_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_network_graph_service_proto_rawDescData)
	})
	return file_api_v1_network_graph_service_proto_rawDescData
}

var file_api_v1_network_graph_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_v1_network_graph_service_proto_goTypes = []any{
	(*NetworkGraphScope)(nil),                        // 0: v1.NetworkGraphScope
	(*NetworkEdgeProperties)(nil),                    // 1: v1.NetworkEdgeProperties
	(*NetworkEdgePropertiesBundle)(nil),              // 2: v1.NetworkEdgePropertiesBundle
	(*NetworkNode)(nil),                              // 3: v1.NetworkNode
	(*NetworkGraphRequest)(nil),                      // 4: v1.NetworkGraphRequest
	(*NetworkGraph)(nil),                             // 5: v1.NetworkGraph
	(*CreateNetworkEntityRequest)(nil),               // 6: v1.CreateNetworkEntityRequest
	(*PatchNetworkEntityRequest)(nil),                // 7: v1.PatchNetworkEntityRequest
	(*GetExternalNetworkEntitiesRequest)(nil),        // 8: v1.GetExternalNetworkEntitiesRequest
	(*GetExternalNetworkEntitiesResponse)(nil),       // 9: v1.GetExternalNetworkEntitiesResponse
	(*PutNetworkGraphConfigRequest)(nil),             // 10: v1.PutNetworkGraphConfigRequest
	nil,                                              // 11: v1.NetworkNode.OutEdgesEntry
	(storage.L4Protocol)(0),                          // 12: storage.L4Protocol
	(*timestamppb.Timestamp)(nil),                    // 13: google.protobuf.Timestamp
	(*storage.NetworkEntityInfo)(nil),                // 14: storage.NetworkEntityInfo
	(*storage.NetworkEntityInfo_ExternalSource)(nil), // 15: storage.NetworkEntityInfo.ExternalSource
	(*storage.NetworkEntity)(nil),                    // 16: storage.NetworkEntity
	(*storage.NetworkGraphConfig)(nil),               // 17: storage.NetworkGraphConfig
	(*ResourceByID)(nil),                             // 18: v1.ResourceByID
	(*Empty)(nil),                                    // 19: v1.Empty
}
var file_api_v1_network_graph_service_proto_depIdxs = []int32{
	12, // 0: v1.NetworkEdgeProperties.protocol:type_name -> storage.L4Protocol
	13, // 1: v1.NetworkEdgeProperties.last_active_timestamp:type_name -> google.protobuf.Timestamp
	1,  // 2: v1.NetworkEdgePropertiesBundle.properties:type_name -> v1.NetworkEdgeProperties
	14, // 3: v1.NetworkNode.entity:type_name -> storage.NetworkEntityInfo
	11, // 4: v1.NetworkNode.out_edges:type_name -> v1.NetworkNode.OutEdgesEntry
	13, // 5: v1.NetworkGraphRequest.since:type_name -> google.protobuf.Timestamp
	0,  // 6: v1.NetworkGraphRequest.scope:type_name -> v1.NetworkGraphScope
	3,  // 7: v1.NetworkGraph.nodes:type_name -> v1.NetworkNode
	15, // 8: v1.CreateNetworkEntityRequest.entity:type_name -> storage.NetworkEntityInfo.ExternalSource
	16, // 9: v1.GetExternalNetworkEntitiesResponse.entities:type_name -> storage.NetworkEntity
	17, // 10: v1.PutNetworkGraphConfigRequest.config:type_name -> storage.NetworkGraphConfig
	2,  // 11: v1.NetworkNode.OutEdgesEntry.value:type_name -> v1.NetworkEdgePropertiesBundle
	4,  // 12: v1.NetworkGraphService.GetNetworkGraph:input_type -> v1.NetworkGraphRequest
	8,  // 13: v1.NetworkGraphService.GetExternalNetworkEntities:input_type -> v1.GetExternalNetworkEntitiesRequest
	6,  // 14: v1.NetworkGraphService.CreateExternalNetworkEntity:input_type -> v1.CreateNetworkEntityRequest
	7,  // 15: v1.NetworkGraphService.PatchExternalNetworkEntity:input_type -> v1.PatchNetworkEntityRequest
	18, // 16: v1.NetworkGraphService.DeleteExternalNetworkEntity:input_type -> v1.ResourceByID
	19, // 17: v1.NetworkGraphService.GetNetworkGraphConfig:input_type -> v1.Empty
	10, // 18: v1.NetworkGraphService.PutNetworkGraphConfig:input_type -> v1.PutNetworkGraphConfigRequest
	5,  // 19: v1.NetworkGraphService.GetNetworkGraph:output_type -> v1.NetworkGraph
	9,  // 20: v1.NetworkGraphService.GetExternalNetworkEntities:output_type -> v1.GetExternalNetworkEntitiesResponse
	16, // 21: v1.NetworkGraphService.CreateExternalNetworkEntity:output_type -> storage.NetworkEntity
	16, // 22: v1.NetworkGraphService.PatchExternalNetworkEntity:output_type -> storage.NetworkEntity
	19, // 23: v1.NetworkGraphService.DeleteExternalNetworkEntity:output_type -> v1.Empty
	17, // 24: v1.NetworkGraphService.GetNetworkGraphConfig:output_type -> storage.NetworkGraphConfig
	17, // 25: v1.NetworkGraphService.PutNetworkGraphConfig:output_type -> storage.NetworkGraphConfig
	19, // [19:26] is the sub-list for method output_type
	12, // [12:19] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_v1_network_graph_service_proto_init() }
func file_api_v1_network_graph_service_proto_init() {
	if File_api_v1_network_graph_service_proto != nil {
		return
	}
	file_api_v1_common_proto_init()
	file_api_v1_empty_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1_network_graph_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkGraphScope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_network_graph_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkEdgeProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_network_graph_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkEdgePropertiesBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_network_graph_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_network_graph_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkGraphRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_network_graph_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*NetworkGraph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_network_graph_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CreateNetworkEntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_network_graph_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PatchNetworkEntityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_network_graph_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetExternalNetworkEntitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_network_graph_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetExternalNetworkEntitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_network_graph_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PutNetworkGraphConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_network_graph_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_network_graph_service_proto_goTypes,
		DependencyIndexes: file_api_v1_network_graph_service_proto_depIdxs,
		MessageInfos:      file_api_v1_network_graph_service_proto_msgTypes,
	}.Build()
	File_api_v1_network_graph_service_proto = out.File
	file_api_v1_network_graph_service_proto_rawDesc = nil
	file_api_v1_network_graph_service_proto_goTypes = nil
	file_api_v1_network_graph_service_proto_depIdxs = nil
}
