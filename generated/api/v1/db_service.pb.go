// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: api/v1/db_service.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DBRestoreProcessStatus_State int32

const (
	DBRestoreProcessStatus_UNKNOWN     DBRestoreProcessStatus_State = 0
	DBRestoreProcessStatus_NOT_STARTED DBRestoreProcessStatus_State = 1
	DBRestoreProcessStatus_IN_PROGRESS DBRestoreProcessStatus_State = 2
	DBRestoreProcessStatus_PAUSED      DBRestoreProcessStatus_State = 3
	DBRestoreProcessStatus_COMPLETED   DBRestoreProcessStatus_State = 4 // successful if error is empty, unsuccessful otherwise
)

// Enum value maps for DBRestoreProcessStatus_State.
var (
	DBRestoreProcessStatus_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "NOT_STARTED",
		2: "IN_PROGRESS",
		3: "PAUSED",
		4: "COMPLETED",
	}
	DBRestoreProcessStatus_State_value = map[string]int32{
		"UNKNOWN":     0,
		"NOT_STARTED": 1,
		"IN_PROGRESS": 2,
		"PAUSED":      3,
		"COMPLETED":   4,
	}
)

func (x DBRestoreProcessStatus_State) Enum() *DBRestoreProcessStatus_State {
	p := new(DBRestoreProcessStatus_State)
	*p = x
	return p
}

func (x DBRestoreProcessStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DBRestoreProcessStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_db_service_proto_enumTypes[0].Descriptor()
}

func (DBRestoreProcessStatus_State) Type() protoreflect.EnumType {
	return &file_api_v1_db_service_proto_enumTypes[0]
}

func (x DBRestoreProcessStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DBRestoreProcessStatus_State.Descriptor instead.
func (DBRestoreProcessStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_db_service_proto_rawDescGZIP(), []int{2, 0}
}

// The encoding of the file data in the restore body, usually for compression purposes.
type DBExportManifest_EncodingType int32

const (
	DBExportManifest_UNKNOWN       DBExportManifest_EncodingType = 0
	DBExportManifest_UNCOMPREESSED DBExportManifest_EncodingType = 1
	DBExportManifest_DEFLATED      DBExportManifest_EncodingType = 2
)

// Enum value maps for DBExportManifest_EncodingType.
var (
	DBExportManifest_EncodingType_name = map[int32]string{
		0: "UNKNOWN",
		1: "UNCOMPREESSED",
		2: "DEFLATED",
	}
	DBExportManifest_EncodingType_value = map[string]int32{
		"UNKNOWN":       0,
		"UNCOMPREESSED": 1,
		"DEFLATED":      2,
	}
)

func (x DBExportManifest_EncodingType) Enum() *DBExportManifest_EncodingType {
	p := new(DBExportManifest_EncodingType)
	*p = x
	return p
}

func (x DBExportManifest_EncodingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DBExportManifest_EncodingType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1_db_service_proto_enumTypes[1].Descriptor()
}

func (DBExportManifest_EncodingType) Type() protoreflect.EnumType {
	return &file_api_v1_db_service_proto_enumTypes[1]
}

func (x DBExportManifest_EncodingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DBExportManifest_EncodingType.Descriptor instead.
func (DBExportManifest_EncodingType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1_db_service_proto_rawDescGZIP(), []int{3, 0}
}

type DBRestoreRequestHeader struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the database export format. Mandatory.
	FormatName string `protobuf:"bytes,1,opt,name=format_name,json=formatName,proto3" json:"format_name,omitempty"`
	// A manifest of all the files in the restore data. The remainder of a restore request body (without the header),
	// independent of the export format, is always a concatenation of all encoded file data, with no separators in
	// between (determined purely by the order and sizes listed in the manifest).
	Manifest *DBExportManifest `protobuf:"bytes,2,opt,name=manifest,proto3" json:"manifest,omitempty"`
	// Information about the local file with which the restore was initiated. Optional.
	LocalFile     *DBRestoreRequestHeader_LocalFileInfo `protobuf:"bytes,3,opt,name=local_file,json=localFile,proto3" json:"local_file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DBRestoreRequestHeader) Reset() {
	*x = DBRestoreRequestHeader{}
	mi := &file_api_v1_db_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DBRestoreRequestHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBRestoreRequestHeader) ProtoMessage() {}

func (x *DBRestoreRequestHeader) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_db_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBRestoreRequestHeader.ProtoReflect.Descriptor instead.
func (*DBRestoreRequestHeader) Descriptor() ([]byte, []int) {
	return file_api_v1_db_service_proto_rawDescGZIP(), []int{0}
}

func (x *DBRestoreRequestHeader) GetFormatName() string {
	if x != nil {
		return x.FormatName
	}
	return ""
}

func (x *DBRestoreRequestHeader) GetManifest() *DBExportManifest {
	if x != nil {
		return x.Manifest
	}
	return nil
}

func (x *DBRestoreRequestHeader) GetLocalFile() *DBRestoreRequestHeader_LocalFileInfo {
	if x != nil {
		return x.LocalFile
	}
	return nil
}

// The metadata of an ongoing or completed restore process. This is the *static* metadata, which will not change
// (i.e., it is not a status).
type DBRestoreProcessMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An ID identifying the restore process. Auto-assigned.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The header with which the restore was initiated.
	Header *DBRestoreRequestHeader `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	// The time at which the restore process was started.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// The user who initiated the database restore process.
	InitiatingUserName string `protobuf:"bytes,4,opt,name=initiating_user_name,json=initiatingUserName,proto3" json:"initiating_user_name,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DBRestoreProcessMetadata) Reset() {
	*x = DBRestoreProcessMetadata{}
	mi := &file_api_v1_db_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DBRestoreProcessMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBRestoreProcessMetadata) ProtoMessage() {}

func (x *DBRestoreProcessMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_db_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBRestoreProcessMetadata.ProtoReflect.Descriptor instead.
func (*DBRestoreProcessMetadata) Descriptor() ([]byte, []int) {
	return file_api_v1_db_service_proto_rawDescGZIP(), []int{1}
}

func (x *DBRestoreProcessMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DBRestoreProcessMetadata) GetHeader() *DBRestoreRequestHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DBRestoreProcessMetadata) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *DBRestoreProcessMetadata) GetInitiatingUserName() string {
	if x != nil {
		return x.InitiatingUserName
	}
	return ""
}

type DBRestoreProcessStatus struct {
	state          protoimpl.MessageState             `protogen:"open.v1"`
	Metadata       *DBRestoreProcessMetadata          `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	AttemptId      string                             `protobuf:"bytes,2,opt,name=attempt_id,json=attemptId,proto3" json:"attempt_id,omitempty"`
	State          DBRestoreProcessStatus_State       `protobuf:"varint,3,opt,name=state,proto3,enum=v1.DBRestoreProcessStatus_State" json:"state,omitempty"`
	ResumeInfo     *DBRestoreProcessStatus_ResumeInfo `protobuf:"bytes,4,opt,name=resume_info,json=resumeInfo,proto3" json:"resume_info,omitempty"`              // only populated if state is PAUSED
	Error          string                             `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`                                          // only populated when state is COMPLETED
	BytesRead      int64                              `protobuf:"varint,6,opt,name=bytes_read,json=bytesRead,proto3" json:"bytes_read,omitempty"`                // Payload bytes read so far (approximate)
	FilesProcessed int64                              `protobuf:"varint,7,opt,name=files_processed,json=filesProcessed,proto3" json:"files_processed,omitempty"` // Files processed so far (approximate)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DBRestoreProcessStatus) Reset() {
	*x = DBRestoreProcessStatus{}
	mi := &file_api_v1_db_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DBRestoreProcessStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBRestoreProcessStatus) ProtoMessage() {}

func (x *DBRestoreProcessStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_db_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBRestoreProcessStatus.ProtoReflect.Descriptor instead.
func (*DBRestoreProcessStatus) Descriptor() ([]byte, []int) {
	return file_api_v1_db_service_proto_rawDescGZIP(), []int{2}
}

func (x *DBRestoreProcessStatus) GetMetadata() *DBRestoreProcessMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DBRestoreProcessStatus) GetAttemptId() string {
	if x != nil {
		return x.AttemptId
	}
	return ""
}

func (x *DBRestoreProcessStatus) GetState() DBRestoreProcessStatus_State {
	if x != nil {
		return x.State
	}
	return DBRestoreProcessStatus_UNKNOWN
}

func (x *DBRestoreProcessStatus) GetResumeInfo() *DBRestoreProcessStatus_ResumeInfo {
	if x != nil {
		return x.ResumeInfo
	}
	return nil
}

func (x *DBRestoreProcessStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DBRestoreProcessStatus) GetBytesRead() int64 {
	if x != nil {
		return x.BytesRead
	}
	return 0
}

func (x *DBRestoreProcessStatus) GetFilesProcessed() int64 {
	if x != nil {
		return x.FilesProcessed
	}
	return 0
}

// A DB export manifest describes the file contents of a restore request. To prevent data loss, a manifest is always
// interpreted as binding, i.e., the server must ensure that it will read and make use of every file listed in the
// manifest, otherwise it must reject the request.
type DBExportManifest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Files         []*DBExportManifest_File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DBExportManifest) Reset() {
	*x = DBExportManifest{}
	mi := &file_api_v1_db_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DBExportManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBExportManifest) ProtoMessage() {}

func (x *DBExportManifest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_db_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBExportManifest.ProtoReflect.Descriptor instead.
func (*DBExportManifest) Descriptor() ([]byte, []int) {
	return file_api_v1_db_service_proto_rawDescGZIP(), []int{3}
}

func (x *DBExportManifest) GetFiles() []*DBExportManifest_File {
	if x != nil {
		return x.Files
	}
	return nil
}

// DBExportFormat describes a format (= a collection of files) for the database export.
type DBExportFormat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FormatName    string                 `protobuf:"bytes,1,opt,name=format_name,json=formatName,proto3" json:"format_name,omitempty"`
	Files         []*DBExportFormat_File `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DBExportFormat) Reset() {
	*x = DBExportFormat{}
	mi := &file_api_v1_db_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DBExportFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBExportFormat) ProtoMessage() {}

func (x *DBExportFormat) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_db_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBExportFormat.ProtoReflect.Descriptor instead.
func (*DBExportFormat) Descriptor() ([]byte, []int) {
	return file_api_v1_db_service_proto_rawDescGZIP(), []int{4}
}

func (x *DBExportFormat) GetFormatName() string {
	if x != nil {
		return x.FormatName
	}
	return ""
}

func (x *DBExportFormat) GetFiles() []*DBExportFormat_File {
	if x != nil {
		return x.Files
	}
	return nil
}

type GetDBExportCapabilitiesResponse struct {
	state              protoimpl.MessageState          `protogen:"open.v1"`
	Formats            []*DBExportFormat               `protobuf:"bytes,1,rep,name=formats,proto3" json:"formats,omitempty"`
	SupportedEncodings []DBExportManifest_EncodingType `protobuf:"varint,2,rep,packed,name=supported_encodings,json=supportedEncodings,proto3,enum=v1.DBExportManifest_EncodingType" json:"supported_encodings,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetDBExportCapabilitiesResponse) Reset() {
	*x = GetDBExportCapabilitiesResponse{}
	mi := &file_api_v1_db_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDBExportCapabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDBExportCapabilitiesResponse) ProtoMessage() {}

func (x *GetDBExportCapabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_db_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDBExportCapabilitiesResponse.ProtoReflect.Descriptor instead.
func (*GetDBExportCapabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_db_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetDBExportCapabilitiesResponse) GetFormats() []*DBExportFormat {
	if x != nil {
		return x.Formats
	}
	return nil
}

func (x *GetDBExportCapabilitiesResponse) GetSupportedEncodings() []DBExportManifest_EncodingType {
	if x != nil {
		return x.SupportedEncodings
	}
	return nil
}

type GetActiveDBRestoreProcessResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	ActiveStatus  *DBRestoreProcessStatus `protobuf:"bytes,1,opt,name=active_status,json=activeStatus,proto3" json:"active_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveDBRestoreProcessResponse) Reset() {
	*x = GetActiveDBRestoreProcessResponse{}
	mi := &file_api_v1_db_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveDBRestoreProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveDBRestoreProcessResponse) ProtoMessage() {}

func (x *GetActiveDBRestoreProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_db_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveDBRestoreProcessResponse.ProtoReflect.Descriptor instead.
func (*GetActiveDBRestoreProcessResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_db_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetActiveDBRestoreProcessResponse) GetActiveStatus() *DBRestoreProcessStatus {
	if x != nil {
		return x.ActiveStatus
	}
	return nil
}

type InterruptDBRestoreProcessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessId     string                 `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	AttemptId     string                 `protobuf:"bytes,2,opt,name=attempt_id,json=attemptId,proto3" json:"attempt_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterruptDBRestoreProcessRequest) Reset() {
	*x = InterruptDBRestoreProcessRequest{}
	mi := &file_api_v1_db_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterruptDBRestoreProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterruptDBRestoreProcessRequest) ProtoMessage() {}

func (x *InterruptDBRestoreProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_db_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterruptDBRestoreProcessRequest.ProtoReflect.Descriptor instead.
func (*InterruptDBRestoreProcessRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_db_service_proto_rawDescGZIP(), []int{7}
}

func (x *InterruptDBRestoreProcessRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *InterruptDBRestoreProcessRequest) GetAttemptId() string {
	if x != nil {
		return x.AttemptId
	}
	return ""
}

type InterruptDBRestoreProcessResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	ResumeInfo    *DBRestoreProcessStatus_ResumeInfo `protobuf:"bytes,1,opt,name=resume_info,json=resumeInfo,proto3" json:"resume_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterruptDBRestoreProcessResponse) Reset() {
	*x = InterruptDBRestoreProcessResponse{}
	mi := &file_api_v1_db_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterruptDBRestoreProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterruptDBRestoreProcessResponse) ProtoMessage() {}

func (x *InterruptDBRestoreProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_db_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterruptDBRestoreProcessResponse.ProtoReflect.Descriptor instead.
func (*InterruptDBRestoreProcessResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_db_service_proto_rawDescGZIP(), []int{8}
}

func (x *InterruptDBRestoreProcessResponse) GetResumeInfo() *DBRestoreProcessStatus_ResumeInfo {
	if x != nil {
		return x.ResumeInfo
	}
	return nil
}

// LocalFileInfo provides information about the file on the local machine of the user initiating the restore
// process, in order to provide information to other users about ongoing restore processes.
type DBRestoreRequestHeader_LocalFileInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The full path of the file.
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// The size of the file, in bytes. 0 if unknown.
	BytesSize     int64 `protobuf:"varint,2,opt,name=bytes_size,json=bytesSize,proto3" json:"bytes_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DBRestoreRequestHeader_LocalFileInfo) Reset() {
	*x = DBRestoreRequestHeader_LocalFileInfo{}
	mi := &file_api_v1_db_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DBRestoreRequestHeader_LocalFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBRestoreRequestHeader_LocalFileInfo) ProtoMessage() {}

func (x *DBRestoreRequestHeader_LocalFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_db_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBRestoreRequestHeader_LocalFileInfo.ProtoReflect.Descriptor instead.
func (*DBRestoreRequestHeader_LocalFileInfo) Descriptor() ([]byte, []int) {
	return file_api_v1_db_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *DBRestoreRequestHeader_LocalFileInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DBRestoreRequestHeader_LocalFileInfo) GetBytesSize() int64 {
	if x != nil {
		return x.BytesSize
	}
	return 0
}

type DBRestoreProcessStatus_ResumeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pos           int64                  `protobuf:"varint,1,opt,name=pos,proto3" json:"pos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DBRestoreProcessStatus_ResumeInfo) Reset() {
	*x = DBRestoreProcessStatus_ResumeInfo{}
	mi := &file_api_v1_db_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DBRestoreProcessStatus_ResumeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBRestoreProcessStatus_ResumeInfo) ProtoMessage() {}

func (x *DBRestoreProcessStatus_ResumeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_db_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBRestoreProcessStatus_ResumeInfo.ProtoReflect.Descriptor instead.
func (*DBRestoreProcessStatus_ResumeInfo) Descriptor() ([]byte, []int) {
	return file_api_v1_db_service_proto_rawDescGZIP(), []int{2, 0}
}

func (x *DBRestoreProcessStatus_ResumeInfo) GetPos() int64 {
	if x != nil {
		return x.Pos
	}
	return 0
}

// A single file in the restore body.
type DBExportManifest_File struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the file. This may or may not be a (relative) file path and up to the server to interpret.
	// For databases exported as ZIP files, this is the path relative to the root of the archive.
	Name        string                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Encoding    DBExportManifest_EncodingType `protobuf:"varint,2,opt,name=encoding,proto3,enum=v1.DBExportManifest_EncodingType" json:"encoding,omitempty"`
	EncodedSize int64                         `protobuf:"varint,3,opt,name=encoded_size,json=encodedSize,proto3" json:"encoded_size,omitempty"`
	DecodedSize int64                         `protobuf:"varint,4,opt,name=decoded_size,json=decodedSize,proto3" json:"decoded_size,omitempty"`
	// The CRC32 (IEEE) checksum of the decoded(!) data.
	DecodedCrc32  uint32 `protobuf:"fixed32,5,opt,name=decoded_crc32,json=decodedCrc32,proto3" json:"decoded_crc32,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DBExportManifest_File) Reset() {
	*x = DBExportManifest_File{}
	mi := &file_api_v1_db_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DBExportManifest_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBExportManifest_File) ProtoMessage() {}

func (x *DBExportManifest_File) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_db_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBExportManifest_File.ProtoReflect.Descriptor instead.
func (*DBExportManifest_File) Descriptor() ([]byte, []int) {
	return file_api_v1_db_service_proto_rawDescGZIP(), []int{3, 0}
}

func (x *DBExportManifest_File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DBExportManifest_File) GetEncoding() DBExportManifest_EncodingType {
	if x != nil {
		return x.Encoding
	}
	return DBExportManifest_UNKNOWN
}

func (x *DBExportManifest_File) GetEncodedSize() int64 {
	if x != nil {
		return x.EncodedSize
	}
	return 0
}

func (x *DBExportManifest_File) GetDecodedSize() int64 {
	if x != nil {
		return x.DecodedSize
	}
	return 0
}

func (x *DBExportManifest_File) GetDecodedCrc32() uint32 {
	if x != nil {
		return x.DecodedCrc32
	}
	return 0
}

type DBExportFormat_File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Optional      bool                   `protobuf:"varint,2,opt,name=optional,proto3" json:"optional,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DBExportFormat_File) Reset() {
	*x = DBExportFormat_File{}
	mi := &file_api_v1_db_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DBExportFormat_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBExportFormat_File) ProtoMessage() {}

func (x *DBExportFormat_File) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_db_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBExportFormat_File.ProtoReflect.Descriptor instead.
func (*DBExportFormat_File) Descriptor() ([]byte, []int) {
	return file_api_v1_db_service_proto_rawDescGZIP(), []int{4, 0}
}

func (x *DBExportFormat_File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DBExportFormat_File) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

var File_api_v1_db_service_proto protoreflect.FileDescriptor

const file_api_v1_db_service_proto_rawDesc = "" +
	"\n" +
	"\x17api/v1/db_service.proto\x12\x02v1\x1a\x13api/v1/common.proto\x1a\x12api/v1/empty.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf8\x01\n" +
	"\x16DBRestoreRequestHeader\x12\x1f\n" +
	"\vformat_name\x18\x01 \x01(\tR\n" +
	"formatName\x120\n" +
	"\bmanifest\x18\x02 \x01(\v2\x14.v1.DBExportManifestR\bmanifest\x12G\n" +
	"\n" +
	"local_file\x18\x03 \x01(\v2(.v1.DBRestoreRequestHeader.LocalFileInfoR\tlocalFile\x1aB\n" +
	"\rLocalFileInfo\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1d\n" +
	"\n" +
	"bytes_size\x18\x02 \x01(\x03R\tbytesSize\"\xcb\x01\n" +
	"\x18DBRestoreProcessMetadata\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x122\n" +
	"\x06header\x18\x02 \x01(\v2\x1a.v1.DBRestoreRequestHeaderR\x06header\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x120\n" +
	"\x14initiating_user_name\x18\x04 \x01(\tR\x12initiatingUserName\"\xc2\x03\n" +
	"\x16DBRestoreProcessStatus\x128\n" +
	"\bmetadata\x18\x01 \x01(\v2\x1c.v1.DBRestoreProcessMetadataR\bmetadata\x12\x1d\n" +
	"\n" +
	"attempt_id\x18\x02 \x01(\tR\tattemptId\x126\n" +
	"\x05state\x18\x03 \x01(\x0e2 .v1.DBRestoreProcessStatus.StateR\x05state\x12F\n" +
	"\vresume_info\x18\x04 \x01(\v2%.v1.DBRestoreProcessStatus.ResumeInfoR\n" +
	"resumeInfo\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\x12\x1d\n" +
	"\n" +
	"bytes_read\x18\x06 \x01(\x03R\tbytesRead\x12'\n" +
	"\x0ffiles_processed\x18\a \x01(\x03R\x0efilesProcessed\x1a\x1e\n" +
	"\n" +
	"ResumeInfo\x12\x10\n" +
	"\x03pos\x18\x01 \x01(\x03R\x03pos\"Q\n" +
	"\x05State\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x0f\n" +
	"\vNOT_STARTED\x10\x01\x12\x0f\n" +
	"\vIN_PROGRESS\x10\x02\x12\n" +
	"\n" +
	"\x06PAUSED\x10\x03\x12\r\n" +
	"\tCOMPLETED\x10\x04\"\xc8\x02\n" +
	"\x10DBExportManifest\x12/\n" +
	"\x05files\x18\x01 \x03(\v2\x19.v1.DBExportManifest.FileR\x05files\x1a\xc4\x01\n" +
	"\x04File\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12=\n" +
	"\bencoding\x18\x02 \x01(\x0e2!.v1.DBExportManifest.EncodingTypeR\bencoding\x12!\n" +
	"\fencoded_size\x18\x03 \x01(\x03R\vencodedSize\x12!\n" +
	"\fdecoded_size\x18\x04 \x01(\x03R\vdecodedSize\x12#\n" +
	"\rdecoded_crc32\x18\x05 \x01(\aR\fdecodedCrc32\"<\n" +
	"\fEncodingType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x11\n" +
	"\rUNCOMPREESSED\x10\x01\x12\f\n" +
	"\bDEFLATED\x10\x02\"\x98\x01\n" +
	"\x0eDBExportFormat\x12\x1f\n" +
	"\vformat_name\x18\x01 \x01(\tR\n" +
	"formatName\x12-\n" +
	"\x05files\x18\x02 \x03(\v2\x17.v1.DBExportFormat.FileR\x05files\x1a6\n" +
	"\x04File\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\boptional\x18\x02 \x01(\bR\boptional\"\xa3\x01\n" +
	"\x1fGetDBExportCapabilitiesResponse\x12,\n" +
	"\aformats\x18\x01 \x03(\v2\x12.v1.DBExportFormatR\aformats\x12R\n" +
	"\x13supported_encodings\x18\x02 \x03(\x0e2!.v1.DBExportManifest.EncodingTypeR\x12supportedEncodings\"d\n" +
	"!GetActiveDBRestoreProcessResponse\x12?\n" +
	"\ractive_status\x18\x01 \x01(\v2\x1a.v1.DBRestoreProcessStatusR\factiveStatus\"`\n" +
	" InterruptDBRestoreProcessRequest\x12\x1d\n" +
	"\n" +
	"process_id\x18\x01 \x01(\tR\tprocessId\x12\x1d\n" +
	"\n" +
	"attempt_id\x18\x02 \x01(\tR\tattemptId\"k\n" +
	"!InterruptDBRestoreProcessResponse\x12F\n" +
	"\vresume_info\x18\x01 \x01(\v2%.v1.DBRestoreProcessStatus.ResumeInfoR\n" +
	"resumeInfo2\xca\x03\n" +
	"\tDBService\x12b\n" +
	"\x15GetExportCapabilities\x12\t.v1.Empty\x1a#.v1.GetDBExportCapabilitiesResponse\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v1/db/exportcaps\x12c\n" +
	"\x17GetActiveRestoreProcess\x12\t.v1.Empty\x1a%.v1.GetActiveDBRestoreProcessResponse\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v1/db/restore\x12\xa1\x01\n" +
	"\x17InterruptRestoreProcess\x12$.v1.InterruptDBRestoreProcessRequest\x1a%.v1.InterruptDBRestoreProcessResponse\"9\x82\xd3\xe4\x93\x023\"1/v1/db/interruptrestore/{process_id}/{attempt_id}\x12P\n" +
	"\x14CancelRestoreProcess\x12\x10.v1.ResourceByID\x1a\t.v1.Empty\"\x1b\x82\xd3\xe4\x93\x02\x15*\x13/v1/db/restore/{id}B'\n" +
	"\x18io.stackrox.proto.api.v1Z\v./api/v1;v1X\x02b\x06proto3"

var (
	file_api_v1_db_service_proto_rawDescOnce sync.Once
	file_api_v1_db_service_proto_rawDescData []byte
)

func file_api_v1_db_service_proto_rawDescGZIP() []byte {
	file_api_v1_db_service_proto_rawDescOnce.Do(func() {
		file_api_v1_db_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_db_service_proto_rawDesc), len(file_api_v1_db_service_proto_rawDesc)))
	})
	return file_api_v1_db_service_proto_rawDescData
}

var file_api_v1_db_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_v1_db_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_v1_db_service_proto_goTypes = []any{
	(DBRestoreProcessStatus_State)(0),            // 0: v1.DBRestoreProcessStatus.State
	(DBExportManifest_EncodingType)(0),           // 1: v1.DBExportManifest.EncodingType
	(*DBRestoreRequestHeader)(nil),               // 2: v1.DBRestoreRequestHeader
	(*DBRestoreProcessMetadata)(nil),             // 3: v1.DBRestoreProcessMetadata
	(*DBRestoreProcessStatus)(nil),               // 4: v1.DBRestoreProcessStatus
	(*DBExportManifest)(nil),                     // 5: v1.DBExportManifest
	(*DBExportFormat)(nil),                       // 6: v1.DBExportFormat
	(*GetDBExportCapabilitiesResponse)(nil),      // 7: v1.GetDBExportCapabilitiesResponse
	(*GetActiveDBRestoreProcessResponse)(nil),    // 8: v1.GetActiveDBRestoreProcessResponse
	(*InterruptDBRestoreProcessRequest)(nil),     // 9: v1.InterruptDBRestoreProcessRequest
	(*InterruptDBRestoreProcessResponse)(nil),    // 10: v1.InterruptDBRestoreProcessResponse
	(*DBRestoreRequestHeader_LocalFileInfo)(nil), // 11: v1.DBRestoreRequestHeader.LocalFileInfo
	(*DBRestoreProcessStatus_ResumeInfo)(nil),    // 12: v1.DBRestoreProcessStatus.ResumeInfo
	(*DBExportManifest_File)(nil),                // 13: v1.DBExportManifest.File
	(*DBExportFormat_File)(nil),                  // 14: v1.DBExportFormat.File
	(*timestamppb.Timestamp)(nil),                // 15: google.protobuf.Timestamp
	(*Empty)(nil),                                // 16: v1.Empty
	(*ResourceByID)(nil),                         // 17: v1.ResourceByID
}
var file_api_v1_db_service_proto_depIdxs = []int32{
	5,  // 0: v1.DBRestoreRequestHeader.manifest:type_name -> v1.DBExportManifest
	11, // 1: v1.DBRestoreRequestHeader.local_file:type_name -> v1.DBRestoreRequestHeader.LocalFileInfo
	2,  // 2: v1.DBRestoreProcessMetadata.header:type_name -> v1.DBRestoreRequestHeader
	15, // 3: v1.DBRestoreProcessMetadata.start_time:type_name -> google.protobuf.Timestamp
	3,  // 4: v1.DBRestoreProcessStatus.metadata:type_name -> v1.DBRestoreProcessMetadata
	0,  // 5: v1.DBRestoreProcessStatus.state:type_name -> v1.DBRestoreProcessStatus.State
	12, // 6: v1.DBRestoreProcessStatus.resume_info:type_name -> v1.DBRestoreProcessStatus.ResumeInfo
	13, // 7: v1.DBExportManifest.files:type_name -> v1.DBExportManifest.File
	14, // 8: v1.DBExportFormat.files:type_name -> v1.DBExportFormat.File
	6,  // 9: v1.GetDBExportCapabilitiesResponse.formats:type_name -> v1.DBExportFormat
	1,  // 10: v1.GetDBExportCapabilitiesResponse.supported_encodings:type_name -> v1.DBExportManifest.EncodingType
	4,  // 11: v1.GetActiveDBRestoreProcessResponse.active_status:type_name -> v1.DBRestoreProcessStatus
	12, // 12: v1.InterruptDBRestoreProcessResponse.resume_info:type_name -> v1.DBRestoreProcessStatus.ResumeInfo
	1,  // 13: v1.DBExportManifest.File.encoding:type_name -> v1.DBExportManifest.EncodingType
	16, // 14: v1.DBService.GetExportCapabilities:input_type -> v1.Empty
	16, // 15: v1.DBService.GetActiveRestoreProcess:input_type -> v1.Empty
	9,  // 16: v1.DBService.InterruptRestoreProcess:input_type -> v1.InterruptDBRestoreProcessRequest
	17, // 17: v1.DBService.CancelRestoreProcess:input_type -> v1.ResourceByID
	7,  // 18: v1.DBService.GetExportCapabilities:output_type -> v1.GetDBExportCapabilitiesResponse
	8,  // 19: v1.DBService.GetActiveRestoreProcess:output_type -> v1.GetActiveDBRestoreProcessResponse
	10, // 20: v1.DBService.InterruptRestoreProcess:output_type -> v1.InterruptDBRestoreProcessResponse
	16, // 21: v1.DBService.CancelRestoreProcess:output_type -> v1.Empty
	18, // [18:22] is the sub-list for method output_type
	14, // [14:18] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_v1_db_service_proto_init() }
func file_api_v1_db_service_proto_init() {
	if File_api_v1_db_service_proto != nil {
		return
	}
	file_api_v1_common_proto_init()
	file_api_v1_empty_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_db_service_proto_rawDesc), len(file_api_v1_db_service_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_db_service_proto_goTypes,
		DependencyIndexes: file_api_v1_db_service_proto_depIdxs,
		EnumInfos:         file_api_v1_db_service_proto_enumTypes,
		MessageInfos:      file_api_v1_db_service_proto_msgTypes,
	}.Build()
	File_api_v1_db_service_proto = out.File
	file_api_v1_db_service_proto_goTypes = nil
	file_api_v1_db_service_proto_depIdxs = nil
}
