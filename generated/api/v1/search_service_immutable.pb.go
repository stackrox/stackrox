// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package v1

import (
	"iter"
)

// ImmutableRawQuery is an immutable interface for RawQuery
type ImmutableRawQuery interface {
	GetQuery() string
	GetImmutablePagination() ImmutablePagination
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *RawQuery
}

// GetImmutablePagination implements ImmutableRawQuery
func (m *RawQuery) GetImmutablePagination() ImmutablePagination {
	return m.GetPagination()
}

// Verify that RawQuery implements ImmutableRawQuery
var _ ImmutableRawQuery = (*RawQuery)(nil)

// ImmutableRawSearchRequest is an immutable interface for RawSearchRequest
type ImmutableRawSearchRequest interface {
	GetQuery() string
	GetImmutableCategories() iter.Seq[SearchCategory]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *RawSearchRequest
}

// GetImmutableCategories implements ImmutableRawSearchRequest
func (m *RawSearchRequest) GetImmutableCategories() iter.Seq[SearchCategory] {
	return func(yield func(SearchCategory) bool) {
		if m == nil || m.Categories == nil {
			return
		}
		for _, v := range m.Categories {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that RawSearchRequest implements ImmutableRawSearchRequest
var _ ImmutableRawSearchRequest = (*RawSearchRequest)(nil)

// ImmutableQuerySortOption is an immutable interface for QuerySortOption
type ImmutableQuerySortOption interface {
	GetField() string
	GetReversed() bool
	// search_after is alternative to offset for pagination.
	// Each value in search_after corresponds to a field. Only results following a record specified by a combination
	// of field+search_after values in specified sorting order will be returned.
	GetSearchAfter() string
	GetImmutableAggregateBy() ImmutableAggregateBy
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *QuerySortOption
}

// GetImmutableAggregateBy implements ImmutableQuerySortOption
func (m *QuerySortOption) GetImmutableAggregateBy() ImmutableAggregateBy {
	return m.GetAggregateBy()
}

// Verify that QuerySortOption implements ImmutableQuerySortOption
var _ ImmutableQuerySortOption = (*QuerySortOption)(nil)

// ImmutableQueryField is an immutable interface for QueryField
type ImmutableQueryField interface {
	GetName() string
	GetAggregateFunc() string
	GetDistinct() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *QueryField
}

// Verify that QueryField implements ImmutableQueryField
var _ ImmutableQueryField = (*QueryField)(nil)

// ImmutableQuerySelectFilter is an immutable interface for QuerySelectFilter
type ImmutableQuerySelectFilter interface {
	GetName() string
	GetImmutableQuery() ImmutableQuery
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *QuerySelectFilter
}

// GetImmutableQuery implements ImmutableQuerySelectFilter
func (m *QuerySelectFilter) GetImmutableQuery() ImmutableQuery {
	return m.GetQuery()
}

// Verify that QuerySelectFilter implements ImmutableQuerySelectFilter
var _ ImmutableQuerySelectFilter = (*QuerySelectFilter)(nil)

// ImmutableQuerySelect is an immutable interface for QuerySelect
type ImmutableQuerySelect interface {
	GetImmutableField() ImmutableQueryField
	GetImmutableFilter() ImmutableQuerySelectFilter
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *QuerySelect
}

// GetImmutableField implements ImmutableQuerySelect
func (m *QuerySelect) GetImmutableField() ImmutableQueryField {
	return m.GetField()
}

// GetImmutableFilter implements ImmutableQuerySelect
func (m *QuerySelect) GetImmutableFilter() ImmutableQuerySelectFilter {
	return m.GetFilter()
}

// Verify that QuerySelect implements ImmutableQuerySelect
var _ ImmutableQuerySelect = (*QuerySelect)(nil)

// ImmutableQueryGroupBy is an immutable interface for QueryGroupBy
type ImmutableQueryGroupBy interface {
	GetImmutableFields() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *QueryGroupBy
}

// GetImmutableFields implements ImmutableQueryGroupBy
func (m *QueryGroupBy) GetImmutableFields() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.Fields == nil {
			return
		}
		for _, v := range m.Fields {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that QueryGroupBy implements ImmutableQueryGroupBy
var _ ImmutableQueryGroupBy = (*QueryGroupBy)(nil)

// ImmutableQueryPagination is an immutable interface for QueryPagination
type ImmutableQueryPagination interface {
	GetLimit() int32
	GetOffset() int32
	GetImmutableSortOptions() iter.Seq[ImmutableQuerySortOption]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *QueryPagination
}

// GetImmutableSortOptions implements ImmutableQueryPagination
func (m *QueryPagination) GetImmutableSortOptions() iter.Seq[ImmutableQuerySortOption] {
	return func(yield func(ImmutableQuerySortOption) bool) {
		if m == nil || m.SortOptions == nil {
			return
		}
		for _, v := range m.SortOptions {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that QueryPagination implements ImmutableQueryPagination
var _ ImmutableQueryPagination = (*QueryPagination)(nil)

// ImmutableBooleanQuery is an immutable interface for BooleanQuery
type ImmutableBooleanQuery interface {
	GetImmutableMust() ImmutableConjunctionQuery
	GetImmutableMustNot() ImmutableDisjunctionQuery
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *BooleanQuery
}

// GetImmutableMust implements ImmutableBooleanQuery
func (m *BooleanQuery) GetImmutableMust() ImmutableConjunctionQuery {
	return m.GetMust()
}

// GetImmutableMustNot implements ImmutableBooleanQuery
func (m *BooleanQuery) GetImmutableMustNot() ImmutableDisjunctionQuery {
	return m.GetMustNot()
}

// Verify that BooleanQuery implements ImmutableBooleanQuery
var _ ImmutableBooleanQuery = (*BooleanQuery)(nil)

// ImmutableQuery is an immutable interface for Query
type ImmutableQuery interface {
	GetImmutableConjunction() ImmutableConjunctionQuery
	GetImmutableDisjunction() ImmutableDisjunctionQuery
	GetImmutableBaseQuery() ImmutableBaseQuery
	GetImmutableBooleanQuery() ImmutableBooleanQuery
	GetImmutableSelects() iter.Seq[ImmutableQuerySelect]
	GetImmutableGroupBy() ImmutableQueryGroupBy
	GetImmutablePagination() ImmutableQueryPagination
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *Query
}

// GetImmutableConjunction implements ImmutableQuery
func (m *Query) GetImmutableConjunction() ImmutableConjunctionQuery {
	return m.GetConjunction()
}

// GetImmutableDisjunction implements ImmutableQuery
func (m *Query) GetImmutableDisjunction() ImmutableDisjunctionQuery {
	return m.GetDisjunction()
}

// GetImmutableBaseQuery implements ImmutableQuery
func (m *Query) GetImmutableBaseQuery() ImmutableBaseQuery {
	return m.GetBaseQuery()
}

// GetImmutableBooleanQuery implements ImmutableQuery
func (m *Query) GetImmutableBooleanQuery() ImmutableBooleanQuery {
	return m.GetBooleanQuery()
}

// GetImmutableSelects implements ImmutableQuery
func (m *Query) GetImmutableSelects() iter.Seq[ImmutableQuerySelect] {
	return func(yield func(ImmutableQuerySelect) bool) {
		if m == nil || m.Selects == nil {
			return
		}
		for _, v := range m.Selects {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableGroupBy implements ImmutableQuery
func (m *Query) GetImmutableGroupBy() ImmutableQueryGroupBy {
	return m.GetGroupBy()
}

// GetImmutablePagination implements ImmutableQuery
func (m *Query) GetImmutablePagination() ImmutableQueryPagination {
	return m.GetPagination()
}

// Verify that Query implements ImmutableQuery
var _ ImmutableQuery = (*Query)(nil)

// ImmutableStringQuery is an immutable interface for StringQuery
type ImmutableStringQuery interface {
	GetQuery() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *StringQuery
}

// Verify that StringQuery implements ImmutableStringQuery
var _ ImmutableStringQuery = (*StringQuery)(nil)

// ImmutableMatchFieldQuery is an immutable interface for MatchFieldQuery
type ImmutableMatchFieldQuery interface {
	GetField() string
	GetValue() string
	GetHighlight() bool
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *MatchFieldQuery
}

// Verify that MatchFieldQuery implements ImmutableMatchFieldQuery
var _ ImmutableMatchFieldQuery = (*MatchFieldQuery)(nil)

// ImmutableMatchLinkedFieldsQuery is an immutable interface for MatchLinkedFieldsQuery
type ImmutableMatchLinkedFieldsQuery interface {
	GetImmutableQuery() iter.Seq[ImmutableMatchFieldQuery]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *MatchLinkedFieldsQuery
}

// GetImmutableQuery implements ImmutableMatchLinkedFieldsQuery
func (m *MatchLinkedFieldsQuery) GetImmutableQuery() iter.Seq[ImmutableMatchFieldQuery] {
	return func(yield func(ImmutableMatchFieldQuery) bool) {
		if m == nil || m.Query == nil {
			return
		}
		for _, v := range m.Query {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that MatchLinkedFieldsQuery implements ImmutableMatchLinkedFieldsQuery
var _ ImmutableMatchLinkedFieldsQuery = (*MatchLinkedFieldsQuery)(nil)

// ImmutableDocIDQuery is an immutable interface for DocIDQuery
type ImmutableDocIDQuery interface {
	GetImmutableIds() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *DocIDQuery
}

// GetImmutableIds implements ImmutableDocIDQuery
func (m *DocIDQuery) GetImmutableIds() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.Ids == nil {
			return
		}
		for _, v := range m.Ids {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that DocIDQuery implements ImmutableDocIDQuery
var _ ImmutableDocIDQuery = (*DocIDQuery)(nil)

// ImmutableBaseQuery is an immutable interface for BaseQuery
type ImmutableBaseQuery interface {
	GetImmutableMatchFieldQuery() ImmutableMatchFieldQuery
	GetImmutableMatchLinkedFieldsQuery() ImmutableMatchLinkedFieldsQuery
	GetImmutableDocIdQuery() ImmutableDocIDQuery
	GetImmutableMatchNoneQuery() ImmutableMatchNoneQuery
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *BaseQuery
}

// GetImmutableMatchFieldQuery implements ImmutableBaseQuery
func (m *BaseQuery) GetImmutableMatchFieldQuery() ImmutableMatchFieldQuery {
	return m.GetMatchFieldQuery()
}

// GetImmutableMatchLinkedFieldsQuery implements ImmutableBaseQuery
func (m *BaseQuery) GetImmutableMatchLinkedFieldsQuery() ImmutableMatchLinkedFieldsQuery {
	return m.GetMatchLinkedFieldsQuery()
}

// GetImmutableDocIdQuery implements ImmutableBaseQuery
func (m *BaseQuery) GetImmutableDocIdQuery() ImmutableDocIDQuery {
	return m.GetDocIdQuery()
}

// GetImmutableMatchNoneQuery implements ImmutableBaseQuery
func (m *BaseQuery) GetImmutableMatchNoneQuery() ImmutableMatchNoneQuery {
	return m.GetMatchNoneQuery()
}

// Verify that BaseQuery implements ImmutableBaseQuery
var _ ImmutableBaseQuery = (*BaseQuery)(nil)

// ImmutableConjunctionQuery is an immutable interface for ConjunctionQuery
type ImmutableConjunctionQuery interface {
	GetImmutableQueries() iter.Seq[ImmutableQuery]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ConjunctionQuery
}

// GetImmutableQueries implements ImmutableConjunctionQuery
func (m *ConjunctionQuery) GetImmutableQueries() iter.Seq[ImmutableQuery] {
	return func(yield func(ImmutableQuery) bool) {
		if m == nil || m.Queries == nil {
			return
		}
		for _, v := range m.Queries {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that ConjunctionQuery implements ImmutableConjunctionQuery
var _ ImmutableConjunctionQuery = (*ConjunctionQuery)(nil)

// ImmutableDisjunctionQuery is an immutable interface for DisjunctionQuery
type ImmutableDisjunctionQuery interface {
	GetImmutableQueries() iter.Seq[ImmutableQuery]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *DisjunctionQuery
}

// GetImmutableQueries implements ImmutableDisjunctionQuery
func (m *DisjunctionQuery) GetImmutableQueries() iter.Seq[ImmutableQuery] {
	return func(yield func(ImmutableQuery) bool) {
		if m == nil || m.Queries == nil {
			return
		}
		for _, v := range m.Queries {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that DisjunctionQuery implements ImmutableDisjunctionQuery
var _ ImmutableDisjunctionQuery = (*DisjunctionQuery)(nil)

// ImmutableMatchNoneQuery is an immutable interface for MatchNoneQuery
type ImmutableMatchNoneQuery interface {
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *MatchNoneQuery
}

// Verify that MatchNoneQuery implements ImmutableMatchNoneQuery
var _ ImmutableMatchNoneQuery = (*MatchNoneQuery)(nil)

// ImmutableSearchResult is an immutable interface for SearchResult
type ImmutableSearchResult interface {
	GetId() string
	GetName() string
	GetCategory() SearchCategory
	GetImmutableFieldToMatches() iter.Seq2[string, ImmutableSearchResult_Matches]
	GetScore() float64
	// Location is intended to be a unique, yet human readable,
	// identifier for the result. For example, for a deployment,
	// the location will be "$cluster_name/$namespace/$deployment_name.
	// It is displayed in the UI in the global search results, underneath
	// the name for each result.
	GetLocation() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *SearchResult
}

// GetImmutableFieldToMatches implements ImmutableSearchResult
func (m *SearchResult) GetImmutableFieldToMatches() iter.Seq2[string, ImmutableSearchResult_Matches] {
	return func(yield func(string, ImmutableSearchResult_Matches) bool) {
		if m == nil || m.FieldToMatches == nil {
			return
		}
		for k, v := range m.FieldToMatches {
			if !yield(k, v) {
				return
			}
		}
	}
}

// Verify that SearchResult implements ImmutableSearchResult
var _ ImmutableSearchResult = (*SearchResult)(nil)

// ImmutableSearchResult_Matches is an immutable interface for SearchResult_Matches
type ImmutableSearchResult_Matches interface {
	GetImmutableValues() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *SearchResult_Matches
}

// GetImmutableValues implements ImmutableSearchResult_Matches
func (m *SearchResult_Matches) GetImmutableValues() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.Values == nil {
			return
		}
		for _, v := range m.Values {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that SearchResult_Matches implements ImmutableSearchResult_Matches
var _ ImmutableSearchResult_Matches = (*SearchResult_Matches)(nil)

// ImmutableSearchResponse is an immutable interface for SearchResponse
type ImmutableSearchResponse interface {
	GetImmutableResults() iter.Seq[ImmutableSearchResult]
	GetImmutableCounts() iter.Seq[ImmutableSearchResponse_Count]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *SearchResponse
}

// GetImmutableResults implements ImmutableSearchResponse
func (m *SearchResponse) GetImmutableResults() iter.Seq[ImmutableSearchResult] {
	return func(yield func(ImmutableSearchResult) bool) {
		if m == nil || m.Results == nil {
			return
		}
		for _, v := range m.Results {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableCounts implements ImmutableSearchResponse
func (m *SearchResponse) GetImmutableCounts() iter.Seq[ImmutableSearchResponse_Count] {
	return func(yield func(ImmutableSearchResponse_Count) bool) {
		if m == nil || m.Counts == nil {
			return
		}
		for _, v := range m.Counts {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that SearchResponse implements ImmutableSearchResponse
var _ ImmutableSearchResponse = (*SearchResponse)(nil)

// ImmutableSearchResponse_Count is an immutable interface for SearchResponse_Count
type ImmutableSearchResponse_Count interface {
	GetCategory() SearchCategory
	GetCount() int64
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *SearchResponse_Count
}

// Verify that SearchResponse_Count implements ImmutableSearchResponse_Count
var _ ImmutableSearchResponse_Count = (*SearchResponse_Count)(nil)

// ImmutableSearchOptionsRequest is an immutable interface for SearchOptionsRequest
type ImmutableSearchOptionsRequest interface {
	GetImmutableCategories() iter.Seq[SearchCategory]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *SearchOptionsRequest
}

// GetImmutableCategories implements ImmutableSearchOptionsRequest
func (m *SearchOptionsRequest) GetImmutableCategories() iter.Seq[SearchCategory] {
	return func(yield func(SearchCategory) bool) {
		if m == nil || m.Categories == nil {
			return
		}
		for _, v := range m.Categories {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that SearchOptionsRequest implements ImmutableSearchOptionsRequest
var _ ImmutableSearchOptionsRequest = (*SearchOptionsRequest)(nil)

// ImmutableSearchOptionsResponse is an immutable interface for SearchOptionsResponse
type ImmutableSearchOptionsResponse interface {
	GetImmutableOptions() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *SearchOptionsResponse
}

// GetImmutableOptions implements ImmutableSearchOptionsResponse
func (m *SearchOptionsResponse) GetImmutableOptions() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.Options == nil {
			return
		}
		for _, v := range m.Options {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that SearchOptionsResponse implements ImmutableSearchOptionsResponse
var _ ImmutableSearchOptionsResponse = (*SearchOptionsResponse)(nil)

// ImmutableAutocompleteResponse is an immutable interface for AutocompleteResponse
type ImmutableAutocompleteResponse interface {
	GetImmutableValues() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *AutocompleteResponse
}

// GetImmutableValues implements ImmutableAutocompleteResponse
func (m *AutocompleteResponse) GetImmutableValues() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.Values == nil {
			return
		}
		for _, v := range m.Values {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that AutocompleteResponse implements ImmutableAutocompleteResponse
var _ ImmutableAutocompleteResponse = (*AutocompleteResponse)(nil)
