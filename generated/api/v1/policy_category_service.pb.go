// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: api/v1/policy_category_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PolicyCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsDefault bool   `protobuf:"varint,3,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
}

func (x *PolicyCategory) Reset() {
	*x = PolicyCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_category_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyCategory) ProtoMessage() {}

func (x *PolicyCategory) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_category_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyCategory.ProtoReflect.Descriptor instead.
func (*PolicyCategory) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_category_service_proto_rawDescGZIP(), []int{0}
}

func (x *PolicyCategory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PolicyCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PolicyCategory) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type PostPolicyCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyCategory *PolicyCategory `protobuf:"bytes,1,opt,name=policyCategory,proto3" json:"policyCategory,omitempty"`
}

func (x *PostPolicyCategoryRequest) Reset() {
	*x = PostPolicyCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_category_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostPolicyCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostPolicyCategoryRequest) ProtoMessage() {}

func (x *PostPolicyCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_category_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostPolicyCategoryRequest.ProtoReflect.Descriptor instead.
func (*PostPolicyCategoryRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_category_service_proto_rawDescGZIP(), []int{1}
}

func (x *PostPolicyCategoryRequest) GetPolicyCategory() *PolicyCategory {
	if x != nil {
		return x.PolicyCategory
	}
	return nil
}

type GetPolicyCategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Categories []*PolicyCategory `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
}

func (x *GetPolicyCategoriesResponse) Reset() {
	*x = GetPolicyCategoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_category_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPolicyCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyCategoriesResponse) ProtoMessage() {}

func (x *GetPolicyCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_category_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyCategoriesResponse.ProtoReflect.Descriptor instead.
func (*GetPolicyCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_category_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetPolicyCategoriesResponse) GetCategories() []*PolicyCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

type RenamePolicyCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NewCategoryName string `protobuf:"bytes,2,opt,name=new_category_name,json=newCategoryName,proto3" json:"new_category_name,omitempty"`
}

func (x *RenamePolicyCategoryRequest) Reset() {
	*x = RenamePolicyCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_category_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenamePolicyCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenamePolicyCategoryRequest) ProtoMessage() {}

func (x *RenamePolicyCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_category_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenamePolicyCategoryRequest.ProtoReflect.Descriptor instead.
func (*RenamePolicyCategoryRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_category_service_proto_rawDescGZIP(), []int{3}
}

func (x *RenamePolicyCategoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RenamePolicyCategoryRequest) GetNewCategoryName() string {
	if x != nil {
		return x.NewCategoryName
	}
	return ""
}

type DeletePolicyCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePolicyCategoryRequest) Reset() {
	*x = DeletePolicyCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_policy_category_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePolicyCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePolicyCategoryRequest) ProtoMessage() {}

func (x *DeletePolicyCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_policy_category_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePolicyCategoryRequest.ProtoReflect.Descriptor instead.
func (*DeletePolicyCategoryRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_policy_category_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeletePolicyCategoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_api_v1_policy_category_service_proto protoreflect.FileDescriptor

var file_api_v1_policy_category_service_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x13, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x12, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52,
	0x0a, 0x0e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x22, 0x57, 0x0a, 0x19, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3a, 0x0a, 0x0e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0e, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x51, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x59,
	0x0a, 0x1b, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x1b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xa5, 0x04, 0x0a, 0x15, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x62, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x77,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x75, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x2c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x0e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x6c, 0x0a, 0x14, 0x52,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19,
	0x3a, 0x01, 0x2a, 0x1a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x65, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x09, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x21, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x2a, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x42, 0x27, 0x0a, 0x18, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x72, 0x6f, 0x78, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x5a, 0x0b, 0x2e, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x58, 0x03, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_v1_policy_category_service_proto_rawDescOnce sync.Once
	file_api_v1_policy_category_service_proto_rawDescData = file_api_v1_policy_category_service_proto_rawDesc
)

func file_api_v1_policy_category_service_proto_rawDescGZIP() []byte {
	file_api_v1_policy_category_service_proto_rawDescOnce.Do(func() {
		file_api_v1_policy_category_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_policy_category_service_proto_rawDescData)
	})
	return file_api_v1_policy_category_service_proto_rawDescData
}

var file_api_v1_policy_category_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_v1_policy_category_service_proto_goTypes = []any{
	(*PolicyCategory)(nil),              // 0: v1.PolicyCategory
	(*PostPolicyCategoryRequest)(nil),   // 1: v1.PostPolicyCategoryRequest
	(*GetPolicyCategoriesResponse)(nil), // 2: v1.GetPolicyCategoriesResponse
	(*RenamePolicyCategoryRequest)(nil), // 3: v1.RenamePolicyCategoryRequest
	(*DeletePolicyCategoryRequest)(nil), // 4: v1.DeletePolicyCategoryRequest
	(*ResourceByID)(nil),                // 5: v1.ResourceByID
	(*RawQuery)(nil),                    // 6: v1.RawQuery
	(*Empty)(nil),                       // 7: v1.Empty
}
var file_api_v1_policy_category_service_proto_depIdxs = []int32{
	0, // 0: v1.PostPolicyCategoryRequest.policyCategory:type_name -> v1.PolicyCategory
	0, // 1: v1.GetPolicyCategoriesResponse.categories:type_name -> v1.PolicyCategory
	5, // 2: v1.PolicyCategoryService.GetPolicyCategory:input_type -> v1.ResourceByID
	6, // 3: v1.PolicyCategoryService.GetPolicyCategories:input_type -> v1.RawQuery
	1, // 4: v1.PolicyCategoryService.PostPolicyCategory:input_type -> v1.PostPolicyCategoryRequest
	3, // 5: v1.PolicyCategoryService.RenamePolicyCategory:input_type -> v1.RenamePolicyCategoryRequest
	4, // 6: v1.PolicyCategoryService.DeletePolicyCategory:input_type -> v1.DeletePolicyCategoryRequest
	0, // 7: v1.PolicyCategoryService.GetPolicyCategory:output_type -> v1.PolicyCategory
	2, // 8: v1.PolicyCategoryService.GetPolicyCategories:output_type -> v1.GetPolicyCategoriesResponse
	0, // 9: v1.PolicyCategoryService.PostPolicyCategory:output_type -> v1.PolicyCategory
	0, // 10: v1.PolicyCategoryService.RenamePolicyCategory:output_type -> v1.PolicyCategory
	7, // 11: v1.PolicyCategoryService.DeletePolicyCategory:output_type -> v1.Empty
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_v1_policy_category_service_proto_init() }
func file_api_v1_policy_category_service_proto_init() {
	if File_api_v1_policy_category_service_proto != nil {
		return
	}
	file_api_v1_common_proto_init()
	file_api_v1_empty_proto_init()
	file_api_v1_search_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1_policy_category_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PolicyCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_category_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PostPolicyCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_category_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetPolicyCategoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_category_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RenamePolicyCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_policy_category_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeletePolicyCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_policy_category_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_policy_category_service_proto_goTypes,
		DependencyIndexes: file_api_v1_policy_category_service_proto_depIdxs,
		MessageInfos:      file_api_v1_policy_category_service_proto_msgTypes,
	}.Build()
	File_api_v1_policy_category_service_proto = out.File
	file_api_v1_policy_category_service_proto_rawDesc = nil
	file_api_v1_policy_category_service_proto_goTypes = nil
	file_api_v1_policy_category_service_proto_depIdxs = nil
}
