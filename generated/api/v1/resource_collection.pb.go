// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/v1/resource_collection.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	storage "github.com/stackrox/rox/generated/storage"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetCollectionRequest struct {
	Id                   string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Options              *GetCollectionRequest_Options `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *GetCollectionRequest) Reset()         { *m = GetCollectionRequest{} }
func (m *GetCollectionRequest) String() string { return proto.CompactTextString(m) }
func (*GetCollectionRequest) ProtoMessage()    {}
func (*GetCollectionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a4b41a84f86e4e8, []int{0}
}
func (m *GetCollectionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetCollectionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetCollectionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetCollectionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCollectionRequest.Merge(m, src)
}
func (m *GetCollectionRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetCollectionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCollectionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCollectionRequest proto.InternalMessageInfo

func (m *GetCollectionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetCollectionRequest) GetOptions() *GetCollectionRequest_Options {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *GetCollectionRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *GetCollectionRequest) Clone() *GetCollectionRequest {
	if m == nil {
		return nil
	}
	cloned := new(GetCollectionRequest)
	*cloned = *m

	cloned.Options = m.Options.Clone()
	return cloned
}

type GetCollectionRequest_Options struct {
	WithMatches          bool     `protobuf:"varint,1,opt,name=with_matches,json=withMatches,proto3" json:"with_matches,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCollectionRequest_Options) Reset()         { *m = GetCollectionRequest_Options{} }
func (m *GetCollectionRequest_Options) String() string { return proto.CompactTextString(m) }
func (*GetCollectionRequest_Options) ProtoMessage()    {}
func (*GetCollectionRequest_Options) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a4b41a84f86e4e8, []int{0, 0}
}
func (m *GetCollectionRequest_Options) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetCollectionRequest_Options) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetCollectionRequest_Options.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetCollectionRequest_Options) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCollectionRequest_Options.Merge(m, src)
}
func (m *GetCollectionRequest_Options) XXX_Size() int {
	return m.Size()
}
func (m *GetCollectionRequest_Options) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCollectionRequest_Options.DiscardUnknown(m)
}

var xxx_messageInfo_GetCollectionRequest_Options proto.InternalMessageInfo

func (m *GetCollectionRequest_Options) GetWithMatches() bool {
	if m != nil {
		return m.WithMatches
	}
	return false
}

func (m *GetCollectionRequest_Options) MessageClone() proto.Message {
	return m.Clone()
}
func (m *GetCollectionRequest_Options) Clone() *GetCollectionRequest_Options {
	if m == nil {
		return nil
	}
	cloned := new(GetCollectionRequest_Options)
	*cloned = *m

	return cloned
}

type GetCollectionResponse struct {
	Collection           *storage.ResourceCollection `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	Deployments          []*storage.ListDeployment   `protobuf:"bytes,2,rep,name=deployments,proto3" json:"deployments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *GetCollectionResponse) Reset()         { *m = GetCollectionResponse{} }
func (m *GetCollectionResponse) String() string { return proto.CompactTextString(m) }
func (*GetCollectionResponse) ProtoMessage()    {}
func (*GetCollectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a4b41a84f86e4e8, []int{1}
}
func (m *GetCollectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetCollectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetCollectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetCollectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCollectionResponse.Merge(m, src)
}
func (m *GetCollectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetCollectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCollectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCollectionResponse proto.InternalMessageInfo

func (m *GetCollectionResponse) GetCollection() *storage.ResourceCollection {
	if m != nil {
		return m.Collection
	}
	return nil
}

func (m *GetCollectionResponse) GetDeployments() []*storage.ListDeployment {
	if m != nil {
		return m.Deployments
	}
	return nil
}

func (m *GetCollectionResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *GetCollectionResponse) Clone() *GetCollectionResponse {
	if m == nil {
		return nil
	}
	cloned := new(GetCollectionResponse)
	*cloned = *m

	cloned.Collection = m.Collection.Clone()
	if m.Deployments != nil {
		cloned.Deployments = make([]*storage.ListDeployment, len(m.Deployments))
		for idx, v := range m.Deployments {
			cloned.Deployments[idx] = v.Clone()
		}
	}
	return cloned
}

func init() {
	proto.RegisterType((*GetCollectionRequest)(nil), "v1.GetCollectionRequest")
	proto.RegisterType((*GetCollectionRequest_Options)(nil), "v1.GetCollectionRequest.Options")
	proto.RegisterType((*GetCollectionResponse)(nil), "v1.GetCollectionResponse")
}

func init() { proto.RegisterFile("api/v1/resource_collection.proto", fileDescriptor_4a4b41a84f86e4e8) }

var fileDescriptor_4a4b41a84f86e4e8 = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x4a, 0xeb, 0x40,
	0x14, 0x86, 0x3b, 0xb9, 0x70, 0x7b, 0xef, 0x44, 0x05, 0x87, 0xaa, 0x31, 0x96, 0x90, 0x76, 0xd5,
	0x85, 0x4c, 0x48, 0x5c, 0xa9, 0x3b, 0x15, 0xdc, 0x28, 0x42, 0xdc, 0x88, 0x9b, 0x92, 0x26, 0x43,
	0x3b, 0x98, 0xe6, 0xc4, 0xcc, 0x34, 0x55, 0xc4, 0x8d, 0x2f, 0xa0, 0xe0, 0xc6, 0x47, 0x72, 0x29,
	0xf8, 0x02, 0x52, 0x7d, 0x10, 0x49, 0xd2, 0x36, 0x55, 0xda, 0xed, 0x7f, 0xbe, 0xff, 0x3f, 0xe7,
	0x4f, 0x06, 0x9b, 0x5e, 0xcc, 0xad, 0xd4, 0xb6, 0x12, 0x26, 0x60, 0x90, 0xf8, 0xac, 0xed, 0x43,
	0x18, 0x32, 0x5f, 0x72, 0x88, 0x68, 0x9c, 0x80, 0x04, 0xa2, 0xa4, 0xb6, 0x5e, 0xef, 0x02, 0x74,
	0x43, 0x66, 0x65, 0xb0, 0x17, 0x45, 0x20, 0xbd, 0x0c, 0x10, 0x05, 0xa1, 0x37, 0x84, 0x84, 0xc4,
	0xeb, 0xb2, 0xc5, 0x21, 0xba, 0x36, 0x41, 0x02, 0x16, 0x87, 0x70, 0xdb, 0x67, 0x91, 0x2c, 0x26,
	0xcd, 0x27, 0x84, 0x6b, 0xc7, 0x4c, 0x1e, 0x4e, 0x1d, 0x2e, 0xbb, 0x1e, 0x30, 0x21, 0xc9, 0x0a,
	0x56, 0x78, 0xa0, 0x21, 0x13, 0xb5, 0xfe, 0xbb, 0x0a, 0x0f, 0xc8, 0x1e, 0xae, 0x42, 0x9c, 0xaf,
	0xd5, 0x14, 0x13, 0xb5, 0x54, 0xc7, 0xa4, 0xa9, 0x4d, 0xe7, 0x59, 0xe9, 0x59, 0xc1, 0xb9, 0x13,
	0x83, 0xbe, 0x8d, 0xab, 0x63, 0x8d, 0x34, 0xf0, 0xd2, 0x90, 0xcb, 0x5e, 0xbb, 0xef, 0x49, 0xbf,
	0xc7, 0x44, 0xbe, 0xe0, 0x9f, 0xab, 0x66, 0xda, 0x69, 0x21, 0x35, 0x1f, 0x11, 0x5e, 0xfb, 0x95,
	0x2b, 0x62, 0x88, 0x04, 0x23, 0xfb, 0x18, 0x97, 0xd5, 0x72, 0xab, 0xea, 0x6c, 0xd1, 0x71, 0x37,
	0xea, 0x8e, 0xeb, 0xcf, 0x18, 0x67, 0x70, 0xb2, 0x8b, 0xd5, 0xb2, 0x7d, 0x56, 0xe2, 0x4f, 0x4b,
	0x75, 0x36, 0xa6, 0xee, 0x13, 0x2e, 0xe4, 0xd1, 0x74, 0xee, 0xce, 0xb2, 0xce, 0x10, 0xaf, 0x96,
	0xa1, 0xe7, 0x2c, 0x49, 0xb9, 0xcf, 0x48, 0x07, 0x2f, 0xff, 0xb8, 0x92, 0x68, 0x8b, 0x3e, 0x88,
	0xbe, 0x39, 0x67, 0x52, 0x54, 0x6a, 0xd6, 0x1f, 0xde, 0xbf, 0x9e, 0x95, 0x75, 0x52, 0xcb, 0x5e,
	0x41, 0x79, 0xad, 0xb0, 0xee, 0x78, 0x70, 0x7f, 0x40, 0x5f, 0x47, 0x06, 0x7a, 0x1b, 0x19, 0xe8,
	0x63, 0x64, 0xa0, 0x97, 0x4f, 0xa3, 0x82, 0x35, 0x0e, 0x54, 0x48, 0xcf, 0xbf, 0x4a, 0xe0, 0xa6,
	0xf8, 0x85, 0xd4, 0x8b, 0x39, 0x4d, 0xed, 0x4b, 0x25, 0xb5, 0x2f, 0x2a, 0x9d, 0xbf, 0xb9, 0xb6,
	0xf3, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x42, 0x50, 0x54, 0x58, 0x59, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CollectionServiceClient is the client API for CollectionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConnInterface.NewStream.
type CollectionServiceClient interface {
	GetCollection(ctx context.Context, in *GetCollectionRequest, opts ...grpc.CallOption) (*GetCollectionResponse, error)
}

type collectionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCollectionServiceClient(cc grpc.ClientConnInterface) CollectionServiceClient {
	return &collectionServiceClient{cc}
}

func (c *collectionServiceClient) GetCollection(ctx context.Context, in *GetCollectionRequest, opts ...grpc.CallOption) (*GetCollectionResponse, error) {
	out := new(GetCollectionResponse)
	err := c.cc.Invoke(ctx, "/v1.CollectionService/GetCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CollectionServiceServer is the server API for CollectionService service.
type CollectionServiceServer interface {
	GetCollection(context.Context, *GetCollectionRequest) (*GetCollectionResponse, error)
}

// UnimplementedCollectionServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCollectionServiceServer struct {
}

func (*UnimplementedCollectionServiceServer) GetCollection(ctx context.Context, req *GetCollectionRequest) (*GetCollectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollection not implemented")
}

func RegisterCollectionServiceServer(s *grpc.Server, srv CollectionServiceServer) {
	s.RegisterService(&_CollectionService_serviceDesc, srv)
}

func _CollectionService_GetCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectionServiceServer).GetCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.CollectionService/GetCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectionServiceServer).GetCollection(ctx, req.(*GetCollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CollectionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.CollectionService",
	HandlerType: (*CollectionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCollection",
			Handler:    _CollectionService_GetCollection_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1/resource_collection.proto",
}

func (m *GetCollectionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetCollectionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetCollectionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Options != nil {
		{
			size, err := m.Options.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceCollection(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintResourceCollection(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetCollectionRequest_Options) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetCollectionRequest_Options) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetCollectionRequest_Options) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.WithMatches {
		i--
		if m.WithMatches {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetCollectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetCollectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetCollectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Deployments) > 0 {
		for iNdEx := len(m.Deployments) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Deployments[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintResourceCollection(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Collection != nil {
		{
			size, err := m.Collection.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintResourceCollection(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintResourceCollection(dAtA []byte, offset int, v uint64) int {
	offset -= sovResourceCollection(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetCollectionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovResourceCollection(uint64(l))
	}
	if m.Options != nil {
		l = m.Options.Size()
		n += 1 + l + sovResourceCollection(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetCollectionRequest_Options) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.WithMatches {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetCollectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Collection != nil {
		l = m.Collection.Size()
		n += 1 + l + sovResourceCollection(uint64(l))
	}
	if len(m.Deployments) > 0 {
		for _, e := range m.Deployments {
			l = e.Size()
			n += 1 + l + sovResourceCollection(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovResourceCollection(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozResourceCollection(x uint64) (n int) {
	return sovResourceCollection(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetCollectionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceCollection
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetCollectionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetCollectionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceCollection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthResourceCollection
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthResourceCollection
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Options", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceCollection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceCollection
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceCollection
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Options == nil {
				m.Options = &GetCollectionRequest_Options{}
			}
			if err := m.Options.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceCollection(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceCollection
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetCollectionRequest_Options) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceCollection
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Options: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Options: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithMatches", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceCollection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WithMatches = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipResourceCollection(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceCollection
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetCollectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowResourceCollection
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetCollectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetCollectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Collection", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceCollection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceCollection
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceCollection
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Collection == nil {
				m.Collection = &storage.ResourceCollection{}
			}
			if err := m.Collection.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Deployments", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowResourceCollection
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthResourceCollection
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthResourceCollection
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Deployments = append(m.Deployments, &storage.ListDeployment{})
			if err := m.Deployments[len(m.Deployments)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipResourceCollection(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthResourceCollection
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipResourceCollection(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowResourceCollection
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowResourceCollection
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowResourceCollection
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthResourceCollection
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupResourceCollection
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthResourceCollection
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthResourceCollection        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowResourceCollection          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupResourceCollection = fmt.Errorf("proto: unexpected end of group")
)
