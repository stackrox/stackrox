// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: api/v1/probe_upload_service.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProbeUploadManifest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Files         []*ProbeUploadManifest_File `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProbeUploadManifest) Reset() {
	*x = ProbeUploadManifest{}
	mi := &file_api_v1_probe_upload_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProbeUploadManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeUploadManifest) ProtoMessage() {}

func (x *ProbeUploadManifest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_probe_upload_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeUploadManifest.ProtoReflect.Descriptor instead.
func (*ProbeUploadManifest) Descriptor() ([]byte, []int) {
	return file_api_v1_probe_upload_service_proto_rawDescGZIP(), []int{0}
}

func (x *ProbeUploadManifest) GetFiles() []*ProbeUploadManifest_File {
	if x != nil {
		return x.Files
	}
	return nil
}

type GetExistingProbesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilesToCheck  []string               `protobuf:"bytes,1,rep,name=files_to_check,json=filesToCheck,proto3" json:"files_to_check,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExistingProbesRequest) Reset() {
	*x = GetExistingProbesRequest{}
	mi := &file_api_v1_probe_upload_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExistingProbesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExistingProbesRequest) ProtoMessage() {}

func (x *GetExistingProbesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_probe_upload_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExistingProbesRequest.ProtoReflect.Descriptor instead.
func (*GetExistingProbesRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_probe_upload_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetExistingProbesRequest) GetFilesToCheck() []string {
	if x != nil {
		return x.FilesToCheck
	}
	return nil
}

type GetExistingProbesResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	ExistingFiles []*ProbeUploadManifest_File `protobuf:"bytes,1,rep,name=existing_files,json=existingFiles,proto3" json:"existing_files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExistingProbesResponse) Reset() {
	*x = GetExistingProbesResponse{}
	mi := &file_api_v1_probe_upload_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExistingProbesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExistingProbesResponse) ProtoMessage() {}

func (x *GetExistingProbesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_probe_upload_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExistingProbesResponse.ProtoReflect.Descriptor instead.
func (*GetExistingProbesResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_probe_upload_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetExistingProbesResponse) GetExistingFiles() []*ProbeUploadManifest_File {
	if x != nil {
		return x.ExistingFiles
	}
	return nil
}

type ProbeUploadManifest_File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Crc32         uint32                 `protobuf:"varint,3,opt,name=crc32,proto3" json:"crc32,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProbeUploadManifest_File) Reset() {
	*x = ProbeUploadManifest_File{}
	mi := &file_api_v1_probe_upload_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProbeUploadManifest_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeUploadManifest_File) ProtoMessage() {}

func (x *ProbeUploadManifest_File) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_probe_upload_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeUploadManifest_File.ProtoReflect.Descriptor instead.
func (*ProbeUploadManifest_File) Descriptor() ([]byte, []int) {
	return file_api_v1_probe_upload_service_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ProbeUploadManifest_File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProbeUploadManifest_File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ProbeUploadManifest_File) GetCrc32() uint32 {
	if x != nil {
		return x.Crc32
	}
	return 0
}

var File_api_v1_probe_upload_service_proto protoreflect.FileDescriptor

const file_api_v1_probe_upload_service_proto_rawDesc = "" +
	"\n" +
	"!api/v1/probe_upload_service.proto\x12\x02v1\x1a\x1cgoogle/api/annotations.proto\"\x8f\x01\n" +
	"\x13ProbeUploadManifest\x122\n" +
	"\x05files\x18\x01 \x03(\v2\x1c.v1.ProbeUploadManifest.FileR\x05files\x1aD\n" +
	"\x04File\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\x12\x14\n" +
	"\x05crc32\x18\x03 \x01(\rR\x05crc32\"@\n" +
	"\x18GetExistingProbesRequest\x12$\n" +
	"\x0efiles_to_check\x18\x01 \x03(\tR\ffilesToCheck\"`\n" +
	"\x19GetExistingProbesResponse\x12C\n" +
	"\x0eexisting_files\x18\x01 \x03(\v2\x1c.v1.ProbeUploadManifest.FileR\rexistingFiles2\x8b\x01\n" +
	"\x12ProbeUploadService\x12u\n" +
	"\x11GetExistingProbes\x12\x1c.v1.GetExistingProbesRequest\x1a\x1d.v1.GetExistingProbesResponse\"#\x82\xd3\xe4\x93\x02\x1d\"\x1b/v1/probeupload/getexistingB'\n" +
	"\x18io.stackrox.proto.api.v1Z\v./api/v1;v1X\x00b\x06proto3"

var (
	file_api_v1_probe_upload_service_proto_rawDescOnce sync.Once
	file_api_v1_probe_upload_service_proto_rawDescData []byte
)

func file_api_v1_probe_upload_service_proto_rawDescGZIP() []byte {
	file_api_v1_probe_upload_service_proto_rawDescOnce.Do(func() {
		file_api_v1_probe_upload_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_probe_upload_service_proto_rawDesc), len(file_api_v1_probe_upload_service_proto_rawDesc)))
	})
	return file_api_v1_probe_upload_service_proto_rawDescData
}

var file_api_v1_probe_upload_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_v1_probe_upload_service_proto_goTypes = []any{
	(*ProbeUploadManifest)(nil),       // 0: v1.ProbeUploadManifest
	(*GetExistingProbesRequest)(nil),  // 1: v1.GetExistingProbesRequest
	(*GetExistingProbesResponse)(nil), // 2: v1.GetExistingProbesResponse
	(*ProbeUploadManifest_File)(nil),  // 3: v1.ProbeUploadManifest.File
}
var file_api_v1_probe_upload_service_proto_depIdxs = []int32{
	3, // 0: v1.ProbeUploadManifest.files:type_name -> v1.ProbeUploadManifest.File
	3, // 1: v1.GetExistingProbesResponse.existing_files:type_name -> v1.ProbeUploadManifest.File
	1, // 2: v1.ProbeUploadService.GetExistingProbes:input_type -> v1.GetExistingProbesRequest
	2, // 3: v1.ProbeUploadService.GetExistingProbes:output_type -> v1.GetExistingProbesResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_v1_probe_upload_service_proto_init() }
func file_api_v1_probe_upload_service_proto_init() {
	if File_api_v1_probe_upload_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_probe_upload_service_proto_rawDesc), len(file_api_v1_probe_upload_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_probe_upload_service_proto_goTypes,
		DependencyIndexes: file_api_v1_probe_upload_service_proto_depIdxs,
		MessageInfos:      file_api_v1_probe_upload_service_proto_msgTypes,
	}.Build()
	File_api_v1_probe_upload_service_proto = out.File
	file_api_v1_probe_upload_service_proto_goTypes = nil
	file_api_v1_probe_upload_service_proto_depIdxs = nil
}
