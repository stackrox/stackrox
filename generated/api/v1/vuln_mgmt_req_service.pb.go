// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/v1/vuln_mgmt_req_service.proto

package v1

import (
	storage "github.com/stackrox/rox/generated/storage"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetVulnerabilityRequestResponse struct {
	state                  protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_RequestInfo *storage.VulnerabilityRequest `protobuf:"bytes,1,opt,name=request_info,json=requestInfo"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetVulnerabilityRequestResponse) Reset() {
	*x = GetVulnerabilityRequestResponse{}
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVulnerabilityRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVulnerabilityRequestResponse) ProtoMessage() {}

func (x *GetVulnerabilityRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetVulnerabilityRequestResponse) GetRequestInfo() *storage.VulnerabilityRequest {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_RequestInfo) {
				protoimpl.X.UnmarshalField(x, 1)
			}
			var rv *storage.VulnerabilityRequest
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_RequestInfo), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *GetVulnerabilityRequestResponse) SetRequestInfo(v *storage.VulnerabilityRequest) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_RequestInfo, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
	}
}

func (x *GetVulnerabilityRequestResponse) HasRequestInfo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetVulnerabilityRequestResponse) ClearRequestInfo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_RequestInfo, (*storage.VulnerabilityRequest)(nil))
}

type GetVulnerabilityRequestResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestInfo *storage.VulnerabilityRequest
}

func (b0 GetVulnerabilityRequestResponse_builder) Build() *GetVulnerabilityRequestResponse {
	m0 := &GetVulnerabilityRequestResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestInfo != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_RequestInfo = b.RequestInfo
	}
	return m0
}

type ListVulnerabilityRequestsResponse struct {
	state                   protoimpl.MessageState           `protogen:"opaque.v1"`
	xxx_hidden_RequestInfos *[]*storage.VulnerabilityRequest `protobuf:"bytes,1,rep,name=request_infos,json=requestInfos"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListVulnerabilityRequestsResponse) Reset() {
	*x = ListVulnerabilityRequestsResponse{}
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVulnerabilityRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVulnerabilityRequestsResponse) ProtoMessage() {}

func (x *ListVulnerabilityRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListVulnerabilityRequestsResponse) GetRequestInfos() []*storage.VulnerabilityRequest {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_RequestInfos) {
				protoimpl.X.UnmarshalField(x, 1)
			}
			var rv *[]*storage.VulnerabilityRequest
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_RequestInfos), protoimpl.Pointer(&rv))
			return *rv
		}
	}
	return nil
}

func (x *ListVulnerabilityRequestsResponse) SetRequestInfos(v []*storage.VulnerabilityRequest) {
	var sv *[]*storage.VulnerabilityRequest
	protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_RequestInfos), protoimpl.Pointer(&sv))
	if sv == nil {
		sv = &[]*storage.VulnerabilityRequest{}
		protoimpl.X.AtomicInitializePointer(protoimpl.Pointer(&x.xxx_hidden_RequestInfos), protoimpl.Pointer(&sv))
	}
	*sv = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

type ListVulnerabilityRequestsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestInfos []*storage.VulnerabilityRequest
}

func (b0 ListVulnerabilityRequestsResponse_builder) Build() *ListVulnerabilityRequestsResponse {
	m0 := &ListVulnerabilityRequestsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestInfos != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_RequestInfos = &b.RequestInfos
	}
	return m0
}

// next available tag: 6
type DeferVulnRequest struct {
	state              protoimpl.MessageState              `protogen:"opaque.v1"`
	xxx_hidden_Cve     *string                             `protobuf:"bytes,1,opt,name=cve"`
	xxx_hidden_Comment *string                             `protobuf:"bytes,2,opt,name=comment"`
	xxx_hidden_Scope   *storage.VulnerabilityRequest_Scope `protobuf:"bytes,3,opt,name=scope"`
	xxx_hidden_Expiry  isDeferVulnRequest_Expiry           `protobuf_oneof:"expiry"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeferVulnRequest) Reset() {
	*x = DeferVulnRequest{}
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeferVulnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeferVulnRequest) ProtoMessage() {}

func (x *DeferVulnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeferVulnRequest) GetCve() string {
	if x != nil {
		if x.xxx_hidden_Cve != nil {
			return *x.xxx_hidden_Cve
		}
		return ""
	}
	return ""
}

func (x *DeferVulnRequest) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *DeferVulnRequest) GetScope() *storage.VulnerabilityRequest_Scope {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_Scope) {
				protoimpl.X.UnmarshalField(x, 3)
			}
			var rv *storage.VulnerabilityRequest_Scope
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Scope), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *DeferVulnRequest) GetExpiresWhenFixed() bool {
	if x != nil {
		if x, ok := x.xxx_hidden_Expiry.(*deferVulnRequest_ExpiresWhenFixed); ok {
			return x.ExpiresWhenFixed
		}
	}
	return false
}

func (x *DeferVulnRequest) GetExpiresOn() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.xxx_hidden_Expiry.(*deferVulnRequest_ExpiresOn); ok {
			return x.ExpiresOn
		}
	}
	return nil
}

func (x *DeferVulnRequest) SetCve(v string) {
	x.xxx_hidden_Cve = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *DeferVulnRequest) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *DeferVulnRequest) SetScope(v *storage.VulnerabilityRequest_Scope) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_Scope, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
	}
}

func (x *DeferVulnRequest) SetExpiresWhenFixed(v bool) {
	x.xxx_hidden_Expiry = &deferVulnRequest_ExpiresWhenFixed{v}
}

func (x *DeferVulnRequest) SetExpiresOn(v *timestamppb.Timestamp) {
	if v == nil {
		x.xxx_hidden_Expiry = nil
		return
	}
	x.xxx_hidden_Expiry = &deferVulnRequest_ExpiresOn{v}
}

func (x *DeferVulnRequest) HasCve() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeferVulnRequest) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeferVulnRequest) HasScope() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeferVulnRequest) HasExpiry() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Expiry != nil
}

func (x *DeferVulnRequest) HasExpiresWhenFixed() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Expiry.(*deferVulnRequest_ExpiresWhenFixed)
	return ok
}

func (x *DeferVulnRequest) HasExpiresOn() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Expiry.(*deferVulnRequest_ExpiresOn)
	return ok
}

func (x *DeferVulnRequest) ClearCve() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Cve = nil
}

func (x *DeferVulnRequest) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Comment = nil
}

func (x *DeferVulnRequest) ClearScope() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_Scope, (*storage.VulnerabilityRequest_Scope)(nil))
}

func (x *DeferVulnRequest) ClearExpiry() {
	x.xxx_hidden_Expiry = nil
}

func (x *DeferVulnRequest) ClearExpiresWhenFixed() {
	if _, ok := x.xxx_hidden_Expiry.(*deferVulnRequest_ExpiresWhenFixed); ok {
		x.xxx_hidden_Expiry = nil
	}
}

func (x *DeferVulnRequest) ClearExpiresOn() {
	if _, ok := x.xxx_hidden_Expiry.(*deferVulnRequest_ExpiresOn); ok {
		x.xxx_hidden_Expiry = nil
	}
}

const DeferVulnRequest_Expiry_not_set_case case_DeferVulnRequest_Expiry = 0
const DeferVulnRequest_ExpiresWhenFixed_case case_DeferVulnRequest_Expiry = 4
const DeferVulnRequest_ExpiresOn_case case_DeferVulnRequest_Expiry = 5

func (x *DeferVulnRequest) WhichExpiry() case_DeferVulnRequest_Expiry {
	if x == nil {
		return DeferVulnRequest_Expiry_not_set_case
	}
	switch x.xxx_hidden_Expiry.(type) {
	case *deferVulnRequest_ExpiresWhenFixed:
		return DeferVulnRequest_ExpiresWhenFixed_case
	case *deferVulnRequest_ExpiresOn:
		return DeferVulnRequest_ExpiresOn_case
	default:
		return DeferVulnRequest_Expiry_not_set_case
	}
}

type DeferVulnRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// This field indicates the CVEs requested to be deferred.
	Cve     *string
	Comment *string
	Scope   *storage.VulnerabilityRequest_Scope
	// Fields of oneof xxx_hidden_Expiry:
	ExpiresWhenFixed *bool
	ExpiresOn        *timestamppb.Timestamp
	// -- end of xxx_hidden_Expiry
}

func (b0 DeferVulnRequest_builder) Build() *DeferVulnRequest {
	m0 := &DeferVulnRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Cve != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Cve = b.Cve
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Comment = b.Comment
	}
	if b.Scope != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Scope = b.Scope
	}
	if b.ExpiresWhenFixed != nil {
		x.xxx_hidden_Expiry = &deferVulnRequest_ExpiresWhenFixed{*b.ExpiresWhenFixed}
	}
	if b.ExpiresOn != nil {
		x.xxx_hidden_Expiry = &deferVulnRequest_ExpiresOn{b.ExpiresOn}
	}
	return m0
}

type case_DeferVulnRequest_Expiry protoreflect.FieldNumber

func (x case_DeferVulnRequest_Expiry) String() string {
	md := file_api_v1_vuln_mgmt_req_service_proto_msgTypes[2].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isDeferVulnRequest_Expiry interface {
	isDeferVulnRequest_Expiry()
}

type deferVulnRequest_ExpiresWhenFixed struct {
	ExpiresWhenFixed bool `protobuf:"varint,4,opt,name=expires_when_fixed,json=expiresWhenFixed,oneof"`
}

type deferVulnRequest_ExpiresOn struct {
	ExpiresOn *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expires_on,json=expiresOn,oneof"`
}

func (*deferVulnRequest_ExpiresWhenFixed) isDeferVulnRequest_Expiry() {}

func (*deferVulnRequest_ExpiresOn) isDeferVulnRequest_Expiry() {}

type DeferVulnResponse struct {
	state                  protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_RequestInfo *storage.VulnerabilityRequest `protobuf:"bytes,1,opt,name=request_info,json=requestInfo"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeferVulnResponse) Reset() {
	*x = DeferVulnResponse{}
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeferVulnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeferVulnResponse) ProtoMessage() {}

func (x *DeferVulnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeferVulnResponse) GetRequestInfo() *storage.VulnerabilityRequest {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_RequestInfo) {
				protoimpl.X.UnmarshalField(x, 1)
			}
			var rv *storage.VulnerabilityRequest
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_RequestInfo), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *DeferVulnResponse) SetRequestInfo(v *storage.VulnerabilityRequest) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_RequestInfo, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
	}
}

func (x *DeferVulnResponse) HasRequestInfo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeferVulnResponse) ClearRequestInfo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_RequestInfo, (*storage.VulnerabilityRequest)(nil))
}

type DeferVulnResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestInfo *storage.VulnerabilityRequest
}

func (b0 DeferVulnResponse_builder) Build() *DeferVulnResponse {
	m0 := &DeferVulnResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestInfo != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_RequestInfo = b.RequestInfo
	}
	return m0
}

type FalsePositiveVulnRequest struct {
	state              protoimpl.MessageState              `protogen:"opaque.v1"`
	xxx_hidden_Cve     *string                             `protobuf:"bytes,1,opt,name=cve"`
	xxx_hidden_Scope   *storage.VulnerabilityRequest_Scope `protobuf:"bytes,2,opt,name=scope"`
	xxx_hidden_Comment *string                             `protobuf:"bytes,3,opt,name=comment"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *FalsePositiveVulnRequest) Reset() {
	*x = FalsePositiveVulnRequest{}
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FalsePositiveVulnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FalsePositiveVulnRequest) ProtoMessage() {}

func (x *FalsePositiveVulnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FalsePositiveVulnRequest) GetCve() string {
	if x != nil {
		if x.xxx_hidden_Cve != nil {
			return *x.xxx_hidden_Cve
		}
		return ""
	}
	return ""
}

func (x *FalsePositiveVulnRequest) GetScope() *storage.VulnerabilityRequest_Scope {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_Scope) {
				protoimpl.X.UnmarshalField(x, 2)
			}
			var rv *storage.VulnerabilityRequest_Scope
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Scope), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *FalsePositiveVulnRequest) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *FalsePositiveVulnRequest) SetCve(v string) {
	x.xxx_hidden_Cve = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *FalsePositiveVulnRequest) SetScope(v *storage.VulnerabilityRequest_Scope) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_Scope, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
	}
}

func (x *FalsePositiveVulnRequest) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *FalsePositiveVulnRequest) HasCve() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FalsePositiveVulnRequest) HasScope() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FalsePositiveVulnRequest) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FalsePositiveVulnRequest) ClearCve() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Cve = nil
}

func (x *FalsePositiveVulnRequest) ClearScope() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_Scope, (*storage.VulnerabilityRequest_Scope)(nil))
}

func (x *FalsePositiveVulnRequest) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Comment = nil
}

type FalsePositiveVulnRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// This field indicates the CVE requested to be marked as false-positive.
	Cve     *string
	Scope   *storage.VulnerabilityRequest_Scope
	Comment *string
}

func (b0 FalsePositiveVulnRequest_builder) Build() *FalsePositiveVulnRequest {
	m0 := &FalsePositiveVulnRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Cve != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Cve = b.Cve
	}
	if b.Scope != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Scope = b.Scope
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type FalsePositiveVulnResponse struct {
	state                  protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_RequestInfo *storage.VulnerabilityRequest `protobuf:"bytes,1,opt,name=request_info,json=requestInfo"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *FalsePositiveVulnResponse) Reset() {
	*x = FalsePositiveVulnResponse{}
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FalsePositiveVulnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FalsePositiveVulnResponse) ProtoMessage() {}

func (x *FalsePositiveVulnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FalsePositiveVulnResponse) GetRequestInfo() *storage.VulnerabilityRequest {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_RequestInfo) {
				protoimpl.X.UnmarshalField(x, 1)
			}
			var rv *storage.VulnerabilityRequest
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_RequestInfo), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *FalsePositiveVulnResponse) SetRequestInfo(v *storage.VulnerabilityRequest) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_RequestInfo, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
	}
}

func (x *FalsePositiveVulnResponse) HasRequestInfo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FalsePositiveVulnResponse) ClearRequestInfo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_RequestInfo, (*storage.VulnerabilityRequest)(nil))
}

type FalsePositiveVulnResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestInfo *storage.VulnerabilityRequest
}

func (b0 FalsePositiveVulnResponse_builder) Build() *FalsePositiveVulnResponse {
	m0 := &FalsePositiveVulnResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestInfo != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_RequestInfo = b.RequestInfo
	}
	return m0
}

type ApproveVulnRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,2,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ApproveVulnRequest) Reset() {
	*x = ApproveVulnRequest{}
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveVulnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveVulnRequest) ProtoMessage() {}

func (x *ApproveVulnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ApproveVulnRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ApproveVulnRequest) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *ApproveVulnRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ApproveVulnRequest) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ApproveVulnRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ApproveVulnRequest) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ApproveVulnRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *ApproveVulnRequest) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Comment = nil
}

type ApproveVulnRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *string
	Comment *string
}

func (b0 ApproveVulnRequest_builder) Build() *ApproveVulnRequest {
	m0 := &ApproveVulnRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type ApproveVulnRequestResponse struct {
	state                  protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_RequestInfo *storage.VulnerabilityRequest `protobuf:"bytes,1,opt,name=request_info,json=requestInfo"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ApproveVulnRequestResponse) Reset() {
	*x = ApproveVulnRequestResponse{}
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveVulnRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveVulnRequestResponse) ProtoMessage() {}

func (x *ApproveVulnRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ApproveVulnRequestResponse) GetRequestInfo() *storage.VulnerabilityRequest {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_RequestInfo) {
				protoimpl.X.UnmarshalField(x, 1)
			}
			var rv *storage.VulnerabilityRequest
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_RequestInfo), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *ApproveVulnRequestResponse) SetRequestInfo(v *storage.VulnerabilityRequest) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_RequestInfo, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
	}
}

func (x *ApproveVulnRequestResponse) HasRequestInfo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ApproveVulnRequestResponse) ClearRequestInfo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_RequestInfo, (*storage.VulnerabilityRequest)(nil))
}

type ApproveVulnRequestResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestInfo *storage.VulnerabilityRequest
}

func (b0 ApproveVulnRequestResponse_builder) Build() *ApproveVulnRequestResponse {
	m0 := &ApproveVulnRequestResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestInfo != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_RequestInfo = b.RequestInfo
	}
	return m0
}

type DenyVulnRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Comment     *string                `protobuf:"bytes,2,opt,name=comment"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DenyVulnRequest) Reset() {
	*x = DenyVulnRequest{}
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DenyVulnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenyVulnRequest) ProtoMessage() {}

func (x *DenyVulnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DenyVulnRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *DenyVulnRequest) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *DenyVulnRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *DenyVulnRequest) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *DenyVulnRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DenyVulnRequest) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DenyVulnRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *DenyVulnRequest) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Comment = nil
}

type DenyVulnRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *string
	Comment *string
}

func (b0 DenyVulnRequest_builder) Build() *DenyVulnRequest {
	m0 := &DenyVulnRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Comment = b.Comment
	}
	return m0
}

type DenyVulnRequestResponse struct {
	state                  protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_RequestInfo *storage.VulnerabilityRequest `protobuf:"bytes,1,opt,name=request_info,json=requestInfo"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DenyVulnRequestResponse) Reset() {
	*x = DenyVulnRequestResponse{}
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DenyVulnRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenyVulnRequestResponse) ProtoMessage() {}

func (x *DenyVulnRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DenyVulnRequestResponse) GetRequestInfo() *storage.VulnerabilityRequest {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_RequestInfo) {
				protoimpl.X.UnmarshalField(x, 1)
			}
			var rv *storage.VulnerabilityRequest
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_RequestInfo), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *DenyVulnRequestResponse) SetRequestInfo(v *storage.VulnerabilityRequest) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_RequestInfo, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
	}
}

func (x *DenyVulnRequestResponse) HasRequestInfo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DenyVulnRequestResponse) ClearRequestInfo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_RequestInfo, (*storage.VulnerabilityRequest)(nil))
}

type DenyVulnRequestResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestInfo *storage.VulnerabilityRequest
}

func (b0 DenyVulnRequestResponse_builder) Build() *DenyVulnRequestResponse {
	m0 := &DenyVulnRequestResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestInfo != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_RequestInfo = b.RequestInfo
	}
	return m0
}

type UpdateVulnRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id      *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Comment *string                `protobuf:"bytes,2,opt,name=comment"`
	xxx_hidden_Expiry  *storage.RequestExpiry `protobuf:"bytes,3,opt,name=expiry"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateVulnRequest) Reset() {
	*x = UpdateVulnRequest{}
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVulnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVulnRequest) ProtoMessage() {}

func (x *UpdateVulnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateVulnRequest) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *UpdateVulnRequest) GetComment() string {
	if x != nil {
		if x.xxx_hidden_Comment != nil {
			return *x.xxx_hidden_Comment
		}
		return ""
	}
	return ""
}

func (x *UpdateVulnRequest) GetExpiry() *storage.RequestExpiry {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_Expiry) {
				protoimpl.X.UnmarshalField(x, 3)
			}
			var rv *storage.RequestExpiry
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Expiry), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *UpdateVulnRequest) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *UpdateVulnRequest) SetComment(v string) {
	x.xxx_hidden_Comment = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *UpdateVulnRequest) SetExpiry(v *storage.RequestExpiry) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_Expiry, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
	}
}

func (x *UpdateVulnRequest) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateVulnRequest) HasComment() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *UpdateVulnRequest) HasExpiry() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *UpdateVulnRequest) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *UpdateVulnRequest) ClearComment() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Comment = nil
}

func (x *UpdateVulnRequest) ClearExpiry() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_Expiry, (*storage.RequestExpiry)(nil))
}

type UpdateVulnRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id      *string
	Comment *string
	Expiry  *storage.RequestExpiry
}

func (b0 UpdateVulnRequest_builder) Build() *UpdateVulnRequest {
	m0 := &UpdateVulnRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = b.Id
	}
	if b.Comment != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Comment = b.Comment
	}
	if b.Expiry != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Expiry = b.Expiry
	}
	return m0
}

type UpdateVulnRequestResponse struct {
	state                  protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_RequestInfo *storage.VulnerabilityRequest `protobuf:"bytes,1,opt,name=request_info,json=requestInfo"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateVulnRequestResponse) Reset() {
	*x = UpdateVulnRequestResponse{}
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVulnRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVulnRequestResponse) ProtoMessage() {}

func (x *UpdateVulnRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateVulnRequestResponse) GetRequestInfo() *storage.VulnerabilityRequest {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_RequestInfo) {
				protoimpl.X.UnmarshalField(x, 1)
			}
			var rv *storage.VulnerabilityRequest
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_RequestInfo), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *UpdateVulnRequestResponse) SetRequestInfo(v *storage.VulnerabilityRequest) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_RequestInfo, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
	}
}

func (x *UpdateVulnRequestResponse) HasRequestInfo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UpdateVulnRequestResponse) ClearRequestInfo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_RequestInfo, (*storage.VulnerabilityRequest)(nil))
}

type UpdateVulnRequestResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestInfo *storage.VulnerabilityRequest
}

func (b0 UpdateVulnRequestResponse_builder) Build() *UpdateVulnRequestResponse {
	m0 := &UpdateVulnRequestResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestInfo != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_RequestInfo = b.RequestInfo
	}
	return m0
}

type UndoVulnRequestResponse struct {
	state                  protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_RequestInfo *storage.VulnerabilityRequest `protobuf:"bytes,1,opt,name=request_info,json=requestInfo"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UndoVulnRequestResponse) Reset() {
	*x = UndoVulnRequestResponse{}
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UndoVulnRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndoVulnRequestResponse) ProtoMessage() {}

func (x *UndoVulnRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_vuln_mgmt_req_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UndoVulnRequestResponse) GetRequestInfo() *storage.VulnerabilityRequest {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_RequestInfo) {
				protoimpl.X.UnmarshalField(x, 1)
			}
			var rv *storage.VulnerabilityRequest
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_RequestInfo), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *UndoVulnRequestResponse) SetRequestInfo(v *storage.VulnerabilityRequest) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_RequestInfo, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
	}
}

func (x *UndoVulnRequestResponse) HasRequestInfo() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *UndoVulnRequestResponse) ClearRequestInfo() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_RequestInfo, (*storage.VulnerabilityRequest)(nil))
}

type UndoVulnRequestResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestInfo *storage.VulnerabilityRequest
}

func (b0 UndoVulnRequestResponse_builder) Build() *UndoVulnRequestResponse {
	m0 := &UndoVulnRequestResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.RequestInfo != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_RequestInfo = b.RequestInfo
	}
	return m0
}

var File_api_v1_vuln_mgmt_req_service_proto protoreflect.FileDescriptor

const file_api_v1_vuln_mgmt_req_service_proto_rawDesc = "" +
	"\n" +
	"\"api/v1/vuln_mgmt_req_service.proto\x12\x02v1\x1a\x13api/v1/common.proto\x1a\x12api/v1/empty.proto\x1a\x1bapi/v1/search_service.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bstorage/vuln_requests.proto\x1a!google/protobuf/go_features.proto\"g\n" +
	"\x1fGetVulnerabilityRequestResponse\x12D\n" +
	"\frequest_info\x18\x01 \x01(\v2\x1d.storage.VulnerabilityRequestB\x02(\x01R\vrequestInfo\"k\n" +
	"!ListVulnerabilityRequestsResponse\x12F\n" +
	"\rrequest_infos\x18\x01 \x03(\v2\x1d.storage.VulnerabilityRequestB\x02(\x01R\frequestInfos\"\xf8\x01\n" +
	"\x10DeferVulnRequest\x12\x10\n" +
	"\x03cve\x18\x01 \x01(\tR\x03cve\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x12=\n" +
	"\x05scope\x18\x03 \x01(\v2#.storage.VulnerabilityRequest.ScopeB\x02(\x01R\x05scope\x12.\n" +
	"\x12expires_when_fixed\x18\x04 \x01(\bH\x00R\x10expiresWhenFixed\x12?\n" +
	"\n" +
	"expires_on\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01H\x00R\texpiresOnB\b\n" +
	"\x06expiry\"Y\n" +
	"\x11DeferVulnResponse\x12D\n" +
	"\frequest_info\x18\x01 \x01(\v2\x1d.storage.VulnerabilityRequestB\x02(\x01R\vrequestInfo\"\x85\x01\n" +
	"\x18FalsePositiveVulnRequest\x12\x10\n" +
	"\x03cve\x18\x01 \x01(\tR\x03cve\x12=\n" +
	"\x05scope\x18\x02 \x01(\v2#.storage.VulnerabilityRequest.ScopeB\x02(\x01R\x05scope\x12\x18\n" +
	"\acomment\x18\x03 \x01(\tR\acomment\"a\n" +
	"\x19FalsePositiveVulnResponse\x12D\n" +
	"\frequest_info\x18\x01 \x01(\v2\x1d.storage.VulnerabilityRequestB\x02(\x01R\vrequestInfo\">\n" +
	"\x12ApproveVulnRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\"b\n" +
	"\x1aApproveVulnRequestResponse\x12D\n" +
	"\frequest_info\x18\x01 \x01(\v2\x1d.storage.VulnerabilityRequestB\x02(\x01R\vrequestInfo\";\n" +
	"\x0fDenyVulnRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\"_\n" +
	"\x17DenyVulnRequestResponse\x12D\n" +
	"\frequest_info\x18\x01 \x01(\v2\x1d.storage.VulnerabilityRequestB\x02(\x01R\vrequestInfo\"q\n" +
	"\x11UpdateVulnRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x122\n" +
	"\x06expiry\x18\x03 \x01(\v2\x16.storage.RequestExpiryB\x02(\x01R\x06expiry\"a\n" +
	"\x19UpdateVulnRequestResponse\x12D\n" +
	"\frequest_info\x18\x01 \x01(\v2\x1d.storage.VulnerabilityRequestB\x02(\x01R\vrequestInfo\"_\n" +
	"\x17UndoVulnRequestResponse\x12D\n" +
	"\frequest_info\x18\x01 \x01(\v2\x1d.storage.VulnerabilityRequestB\x02(\x01R\vrequestInfo2\xa4\b\n" +
	"\x1bVulnerabilityRequestService\x12o\n" +
	"\x17GetVulnerabilityRequest\x12\x10.v1.ResourceByID\x1a#.v1.GetVulnerabilityRequestResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/v1/cve/requests/{id}\x12j\n" +
	"\x19ListVulnerabilityRequests\x12\f.v1.RawQuery\x1a%.v1.ListVulnerabilityRequestsResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1/cve/requests\x12d\n" +
	"\x12DeferVulnerability\x12\x14.v1.DeferVulnRequest\x1a\x15.v1.DeferVulnResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1/cve/requests/defer\x12\x85\x01\n" +
	"\x1aFalsePositiveVulnerability\x12\x1c.v1.FalsePositiveVulnRequest\x1a\x1d.v1.FalsePositiveVulnResponse\"*\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/v1/cve/requests/false-positive\x12\x7f\n" +
	"\x1bApproveVulnerabilityRequest\x12\x16.v1.ApproveVulnRequest\x1a\x1e.v1.ApproveVulnRequestResponse\"(\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/v1/cve/requests/{id}/approve\x12s\n" +
	"\x18DenyVulnerabilityRequest\x12\x13.v1.DenyVulnRequest\x1a\x1b.v1.DenyVulnRequestResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/v1/cve/requests/{id}/deny\x12{\n" +
	"\x1aUpdateVulnerabilityRequest\x12\x15.v1.UpdateVulnRequest\x1a\x1d.v1.UpdateVulnRequestResponse\"'\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/v1/cve/requests/{id}/update\x12m\n" +
	"\x18UndoVulnerabilityRequest\x12\x10.v1.ResourceByID\x1a\x1b.v1.UndoVulnRequestResponse\"\"\x82\xd3\xe4\x93\x02\x1c\"\x1a/v1/cve/requests/{id}/undo\x12X\n" +
	"\x1aDeleteVulnerabilityRequest\x12\x10.v1.ResourceByID\x1a\t.v1.Empty\"\x1d\x82\xd3\xe4\x93\x02\x17*\x15/v1/cve/requests/{id}B/\n" +
	"\x18io.stackrox.proto.api.v1Z\v./api/v1;v1\x92\x03\x05\xd2>\x02\x10\x03X\x03b\beditionsp\xe8\a"

var file_api_v1_vuln_mgmt_req_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_v1_vuln_mgmt_req_service_proto_goTypes = []any{
	(*GetVulnerabilityRequestResponse)(nil),    // 0: v1.GetVulnerabilityRequestResponse
	(*ListVulnerabilityRequestsResponse)(nil),  // 1: v1.ListVulnerabilityRequestsResponse
	(*DeferVulnRequest)(nil),                   // 2: v1.DeferVulnRequest
	(*DeferVulnResponse)(nil),                  // 3: v1.DeferVulnResponse
	(*FalsePositiveVulnRequest)(nil),           // 4: v1.FalsePositiveVulnRequest
	(*FalsePositiveVulnResponse)(nil),          // 5: v1.FalsePositiveVulnResponse
	(*ApproveVulnRequest)(nil),                 // 6: v1.ApproveVulnRequest
	(*ApproveVulnRequestResponse)(nil),         // 7: v1.ApproveVulnRequestResponse
	(*DenyVulnRequest)(nil),                    // 8: v1.DenyVulnRequest
	(*DenyVulnRequestResponse)(nil),            // 9: v1.DenyVulnRequestResponse
	(*UpdateVulnRequest)(nil),                  // 10: v1.UpdateVulnRequest
	(*UpdateVulnRequestResponse)(nil),          // 11: v1.UpdateVulnRequestResponse
	(*UndoVulnRequestResponse)(nil),            // 12: v1.UndoVulnRequestResponse
	(*storage.VulnerabilityRequest)(nil),       // 13: storage.VulnerabilityRequest
	(*storage.VulnerabilityRequest_Scope)(nil), // 14: storage.VulnerabilityRequest.Scope
	(*timestamppb.Timestamp)(nil),              // 15: google.protobuf.Timestamp
	(*storage.RequestExpiry)(nil),              // 16: storage.RequestExpiry
	(*ResourceByID)(nil),                       // 17: v1.ResourceByID
	(*RawQuery)(nil),                           // 18: v1.RawQuery
	(*Empty)(nil),                              // 19: v1.Empty
}
var file_api_v1_vuln_mgmt_req_service_proto_depIdxs = []int32{
	13, // 0: v1.GetVulnerabilityRequestResponse.request_info:type_name -> storage.VulnerabilityRequest
	13, // 1: v1.ListVulnerabilityRequestsResponse.request_infos:type_name -> storage.VulnerabilityRequest
	14, // 2: v1.DeferVulnRequest.scope:type_name -> storage.VulnerabilityRequest.Scope
	15, // 3: v1.DeferVulnRequest.expires_on:type_name -> google.protobuf.Timestamp
	13, // 4: v1.DeferVulnResponse.request_info:type_name -> storage.VulnerabilityRequest
	14, // 5: v1.FalsePositiveVulnRequest.scope:type_name -> storage.VulnerabilityRequest.Scope
	13, // 6: v1.FalsePositiveVulnResponse.request_info:type_name -> storage.VulnerabilityRequest
	13, // 7: v1.ApproveVulnRequestResponse.request_info:type_name -> storage.VulnerabilityRequest
	13, // 8: v1.DenyVulnRequestResponse.request_info:type_name -> storage.VulnerabilityRequest
	16, // 9: v1.UpdateVulnRequest.expiry:type_name -> storage.RequestExpiry
	13, // 10: v1.UpdateVulnRequestResponse.request_info:type_name -> storage.VulnerabilityRequest
	13, // 11: v1.UndoVulnRequestResponse.request_info:type_name -> storage.VulnerabilityRequest
	17, // 12: v1.VulnerabilityRequestService.GetVulnerabilityRequest:input_type -> v1.ResourceByID
	18, // 13: v1.VulnerabilityRequestService.ListVulnerabilityRequests:input_type -> v1.RawQuery
	2,  // 14: v1.VulnerabilityRequestService.DeferVulnerability:input_type -> v1.DeferVulnRequest
	4,  // 15: v1.VulnerabilityRequestService.FalsePositiveVulnerability:input_type -> v1.FalsePositiveVulnRequest
	6,  // 16: v1.VulnerabilityRequestService.ApproveVulnerabilityRequest:input_type -> v1.ApproveVulnRequest
	8,  // 17: v1.VulnerabilityRequestService.DenyVulnerabilityRequest:input_type -> v1.DenyVulnRequest
	10, // 18: v1.VulnerabilityRequestService.UpdateVulnerabilityRequest:input_type -> v1.UpdateVulnRequest
	17, // 19: v1.VulnerabilityRequestService.UndoVulnerabilityRequest:input_type -> v1.ResourceByID
	17, // 20: v1.VulnerabilityRequestService.DeleteVulnerabilityRequest:input_type -> v1.ResourceByID
	0,  // 21: v1.VulnerabilityRequestService.GetVulnerabilityRequest:output_type -> v1.GetVulnerabilityRequestResponse
	1,  // 22: v1.VulnerabilityRequestService.ListVulnerabilityRequests:output_type -> v1.ListVulnerabilityRequestsResponse
	3,  // 23: v1.VulnerabilityRequestService.DeferVulnerability:output_type -> v1.DeferVulnResponse
	5,  // 24: v1.VulnerabilityRequestService.FalsePositiveVulnerability:output_type -> v1.FalsePositiveVulnResponse
	7,  // 25: v1.VulnerabilityRequestService.ApproveVulnerabilityRequest:output_type -> v1.ApproveVulnRequestResponse
	9,  // 26: v1.VulnerabilityRequestService.DenyVulnerabilityRequest:output_type -> v1.DenyVulnRequestResponse
	11, // 27: v1.VulnerabilityRequestService.UpdateVulnerabilityRequest:output_type -> v1.UpdateVulnRequestResponse
	12, // 28: v1.VulnerabilityRequestService.UndoVulnerabilityRequest:output_type -> v1.UndoVulnRequestResponse
	19, // 29: v1.VulnerabilityRequestService.DeleteVulnerabilityRequest:output_type -> v1.Empty
	21, // [21:30] is the sub-list for method output_type
	12, // [12:21] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_v1_vuln_mgmt_req_service_proto_init() }
func file_api_v1_vuln_mgmt_req_service_proto_init() {
	if File_api_v1_vuln_mgmt_req_service_proto != nil {
		return
	}
	file_api_v1_common_proto_init()
	file_api_v1_empty_proto_init()
	file_api_v1_search_service_proto_init()
	file_api_v1_vuln_mgmt_req_service_proto_msgTypes[2].OneofWrappers = []any{
		(*deferVulnRequest_ExpiresWhenFixed)(nil),
		(*deferVulnRequest_ExpiresOn)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_vuln_mgmt_req_service_proto_rawDesc), len(file_api_v1_vuln_mgmt_req_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_vuln_mgmt_req_service_proto_goTypes,
		DependencyIndexes: file_api_v1_vuln_mgmt_req_service_proto_depIdxs,
		MessageInfos:      file_api_v1_vuln_mgmt_req_service_proto_msgTypes,
	}.Build()
	File_api_v1_vuln_mgmt_req_service_proto = out.File
	file_api_v1_vuln_mgmt_req_service_proto_goTypes = nil
	file_api_v1_vuln_mgmt_req_service_proto_depIdxs = nil
}
