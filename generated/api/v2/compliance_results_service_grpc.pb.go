// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v4.25.3
// source: api/v2/compliance_results_service.proto

package v2

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	ComplianceResultsService_GetComplianceScanCheckResult_FullMethodName          = "/v2.ComplianceResultsService/GetComplianceScanCheckResult"
	ComplianceResultsService_GetComplianceScanResults_FullMethodName              = "/v2.ComplianceResultsService/GetComplianceScanResults"
	ComplianceResultsService_GetComplianceScanConfigurationResults_FullMethodName = "/v2.ComplianceResultsService/GetComplianceScanConfigurationResults"
	ComplianceResultsService_GetComplianceProfileResults_FullMethodName           = "/v2.ComplianceResultsService/GetComplianceProfileResults"
	ComplianceResultsService_GetComplianceProfileCheckResult_FullMethodName       = "/v2.ComplianceResultsService/GetComplianceProfileCheckResult"
	ComplianceResultsService_GetComplianceProfileClusterResults_FullMethodName    = "/v2.ComplianceResultsService/GetComplianceProfileClusterResults"
	ComplianceResultsService_GetComplianceProfileCheckDetails_FullMethodName      = "/v2.ComplianceResultsService/GetComplianceProfileCheckDetails"
)

// ComplianceResultsServiceClient is the client API for ComplianceResultsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ComplianceResultsServiceClient interface {
	// GetComplianceScanCheckResult returns the specific result by ID
	GetComplianceScanCheckResult(ctx context.Context, in *ResourceByID, opts ...grpc.CallOption) (*ComplianceClusterCheckStatus, error)
	// GetComplianceScanResults retrieves the most recent compliance operator scan results for the specified query
	// Optional RawQuery query fields can be combined.
	// Commonly used ones include but are not limited to
	// - scan: id(s) of the compliance scan
	// - cluster: id(s) of the cluster
	// - profile: id(s) of the profile
	GetComplianceScanResults(ctx context.Context, in *RawQuery, opts ...grpc.CallOption) (*ListComplianceResultsResponse, error)
	// GetComplianceScanConfigurationResults retrieves the most recent compliance operator scan results for the specified query
	// Optional RawQuery query fields can be combined.
	GetComplianceScanConfigurationResults(ctx context.Context, in *ComplianceScanResultsRequest, opts ...grpc.CallOption) (*ListComplianceResultsResponse, error)
	// GetComplianceProfileResults retrieves the most recent compliance operator scan results for the specified query
	// Optional RawQuery query fields can be combined.
	GetComplianceProfileResults(ctx context.Context, in *ComplianceProfileResultsRequest, opts ...grpc.CallOption) (*ListComplianceProfileResults, error)
	// GetComplianceProfileCheckResult lists status of a check per cluster
	GetComplianceProfileCheckResult(ctx context.Context, in *ComplianceProfileCheckRequest, opts ...grpc.CallOption) (*ListComplianceCheckClusterResponse, error)
	// GetComplianceProfileClusterResults lists check results for a specific profile on a specific cluster
	GetComplianceProfileClusterResults(ctx context.Context, in *ComplianceProfileClusterRequest, opts ...grpc.CallOption) (*ListComplianceCheckResultResponse, error)
	// GetComplianceProfileCheckDetails
	GetComplianceProfileCheckDetails(ctx context.Context, in *ComplianceCheckDetailRequest, opts ...grpc.CallOption) (*ComplianceClusterCheckStatus, error)
}

type complianceResultsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewComplianceResultsServiceClient(cc grpc.ClientConnInterface) ComplianceResultsServiceClient {
	return &complianceResultsServiceClient{cc}
}

func (c *complianceResultsServiceClient) GetComplianceScanCheckResult(ctx context.Context, in *ResourceByID, opts ...grpc.CallOption) (*ComplianceClusterCheckStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ComplianceClusterCheckStatus)
	err := c.cc.Invoke(ctx, ComplianceResultsService_GetComplianceScanCheckResult_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *complianceResultsServiceClient) GetComplianceScanResults(ctx context.Context, in *RawQuery, opts ...grpc.CallOption) (*ListComplianceResultsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListComplianceResultsResponse)
	err := c.cc.Invoke(ctx, ComplianceResultsService_GetComplianceScanResults_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *complianceResultsServiceClient) GetComplianceScanConfigurationResults(ctx context.Context, in *ComplianceScanResultsRequest, opts ...grpc.CallOption) (*ListComplianceResultsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListComplianceResultsResponse)
	err := c.cc.Invoke(ctx, ComplianceResultsService_GetComplianceScanConfigurationResults_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *complianceResultsServiceClient) GetComplianceProfileResults(ctx context.Context, in *ComplianceProfileResultsRequest, opts ...grpc.CallOption) (*ListComplianceProfileResults, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListComplianceProfileResults)
	err := c.cc.Invoke(ctx, ComplianceResultsService_GetComplianceProfileResults_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *complianceResultsServiceClient) GetComplianceProfileCheckResult(ctx context.Context, in *ComplianceProfileCheckRequest, opts ...grpc.CallOption) (*ListComplianceCheckClusterResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListComplianceCheckClusterResponse)
	err := c.cc.Invoke(ctx, ComplianceResultsService_GetComplianceProfileCheckResult_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *complianceResultsServiceClient) GetComplianceProfileClusterResults(ctx context.Context, in *ComplianceProfileClusterRequest, opts ...grpc.CallOption) (*ListComplianceCheckResultResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListComplianceCheckResultResponse)
	err := c.cc.Invoke(ctx, ComplianceResultsService_GetComplianceProfileClusterResults_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *complianceResultsServiceClient) GetComplianceProfileCheckDetails(ctx context.Context, in *ComplianceCheckDetailRequest, opts ...grpc.CallOption) (*ComplianceClusterCheckStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ComplianceClusterCheckStatus)
	err := c.cc.Invoke(ctx, ComplianceResultsService_GetComplianceProfileCheckDetails_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ComplianceResultsServiceServer is the server API for ComplianceResultsService service.
// All implementations should embed UnimplementedComplianceResultsServiceServer
// for forward compatibility.
type ComplianceResultsServiceServer interface {
	// GetComplianceScanCheckResult returns the specific result by ID
	GetComplianceScanCheckResult(context.Context, *ResourceByID) (*ComplianceClusterCheckStatus, error)
	// GetComplianceScanResults retrieves the most recent compliance operator scan results for the specified query
	// Optional RawQuery query fields can be combined.
	// Commonly used ones include but are not limited to
	// - scan: id(s) of the compliance scan
	// - cluster: id(s) of the cluster
	// - profile: id(s) of the profile
	GetComplianceScanResults(context.Context, *RawQuery) (*ListComplianceResultsResponse, error)
	// GetComplianceScanConfigurationResults retrieves the most recent compliance operator scan results for the specified query
	// Optional RawQuery query fields can be combined.
	GetComplianceScanConfigurationResults(context.Context, *ComplianceScanResultsRequest) (*ListComplianceResultsResponse, error)
	// GetComplianceProfileResults retrieves the most recent compliance operator scan results for the specified query
	// Optional RawQuery query fields can be combined.
	GetComplianceProfileResults(context.Context, *ComplianceProfileResultsRequest) (*ListComplianceProfileResults, error)
	// GetComplianceProfileCheckResult lists status of a check per cluster
	GetComplianceProfileCheckResult(context.Context, *ComplianceProfileCheckRequest) (*ListComplianceCheckClusterResponse, error)
	// GetComplianceProfileClusterResults lists check results for a specific profile on a specific cluster
	GetComplianceProfileClusterResults(context.Context, *ComplianceProfileClusterRequest) (*ListComplianceCheckResultResponse, error)
	// GetComplianceProfileCheckDetails
	GetComplianceProfileCheckDetails(context.Context, *ComplianceCheckDetailRequest) (*ComplianceClusterCheckStatus, error)
}

// UnimplementedComplianceResultsServiceServer should be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedComplianceResultsServiceServer struct{}

func (UnimplementedComplianceResultsServiceServer) GetComplianceScanCheckResult(context.Context, *ResourceByID) (*ComplianceClusterCheckStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComplianceScanCheckResult not implemented")
}
func (UnimplementedComplianceResultsServiceServer) GetComplianceScanResults(context.Context, *RawQuery) (*ListComplianceResultsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComplianceScanResults not implemented")
}
func (UnimplementedComplianceResultsServiceServer) GetComplianceScanConfigurationResults(context.Context, *ComplianceScanResultsRequest) (*ListComplianceResultsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComplianceScanConfigurationResults not implemented")
}
func (UnimplementedComplianceResultsServiceServer) GetComplianceProfileResults(context.Context, *ComplianceProfileResultsRequest) (*ListComplianceProfileResults, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComplianceProfileResults not implemented")
}
func (UnimplementedComplianceResultsServiceServer) GetComplianceProfileCheckResult(context.Context, *ComplianceProfileCheckRequest) (*ListComplianceCheckClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComplianceProfileCheckResult not implemented")
}
func (UnimplementedComplianceResultsServiceServer) GetComplianceProfileClusterResults(context.Context, *ComplianceProfileClusterRequest) (*ListComplianceCheckResultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComplianceProfileClusterResults not implemented")
}
func (UnimplementedComplianceResultsServiceServer) GetComplianceProfileCheckDetails(context.Context, *ComplianceCheckDetailRequest) (*ComplianceClusterCheckStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetComplianceProfileCheckDetails not implemented")
}
func (UnimplementedComplianceResultsServiceServer) testEmbeddedByValue() {}

// UnsafeComplianceResultsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ComplianceResultsServiceServer will
// result in compilation errors.
type UnsafeComplianceResultsServiceServer interface {
	mustEmbedUnimplementedComplianceResultsServiceServer()
}

func RegisterComplianceResultsServiceServer(s grpc.ServiceRegistrar, srv ComplianceResultsServiceServer) {
	// If the following call pancis, it indicates UnimplementedComplianceResultsServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&ComplianceResultsService_ServiceDesc, srv)
}

func _ComplianceResultsService_GetComplianceScanCheckResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceByID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComplianceResultsServiceServer).GetComplianceScanCheckResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ComplianceResultsService_GetComplianceScanCheckResult_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComplianceResultsServiceServer).GetComplianceScanCheckResult(ctx, req.(*ResourceByID))
	}
	return interceptor(ctx, in, info, handler)
}

func _ComplianceResultsService_GetComplianceScanResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RawQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComplianceResultsServiceServer).GetComplianceScanResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ComplianceResultsService_GetComplianceScanResults_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComplianceResultsServiceServer).GetComplianceScanResults(ctx, req.(*RawQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _ComplianceResultsService_GetComplianceScanConfigurationResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ComplianceScanResultsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComplianceResultsServiceServer).GetComplianceScanConfigurationResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ComplianceResultsService_GetComplianceScanConfigurationResults_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComplianceResultsServiceServer).GetComplianceScanConfigurationResults(ctx, req.(*ComplianceScanResultsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ComplianceResultsService_GetComplianceProfileResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ComplianceProfileResultsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComplianceResultsServiceServer).GetComplianceProfileResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ComplianceResultsService_GetComplianceProfileResults_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComplianceResultsServiceServer).GetComplianceProfileResults(ctx, req.(*ComplianceProfileResultsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ComplianceResultsService_GetComplianceProfileCheckResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ComplianceProfileCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComplianceResultsServiceServer).GetComplianceProfileCheckResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ComplianceResultsService_GetComplianceProfileCheckResult_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComplianceResultsServiceServer).GetComplianceProfileCheckResult(ctx, req.(*ComplianceProfileCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ComplianceResultsService_GetComplianceProfileClusterResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ComplianceProfileClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComplianceResultsServiceServer).GetComplianceProfileClusterResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ComplianceResultsService_GetComplianceProfileClusterResults_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComplianceResultsServiceServer).GetComplianceProfileClusterResults(ctx, req.(*ComplianceProfileClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ComplianceResultsService_GetComplianceProfileCheckDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ComplianceCheckDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComplianceResultsServiceServer).GetComplianceProfileCheckDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ComplianceResultsService_GetComplianceProfileCheckDetails_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComplianceResultsServiceServer).GetComplianceProfileCheckDetails(ctx, req.(*ComplianceCheckDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ComplianceResultsService_ServiceDesc is the grpc.ServiceDesc for ComplianceResultsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ComplianceResultsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "v2.ComplianceResultsService",
	HandlerType: (*ComplianceResultsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetComplianceScanCheckResult",
			Handler:    _ComplianceResultsService_GetComplianceScanCheckResult_Handler,
		},
		{
			MethodName: "GetComplianceScanResults",
			Handler:    _ComplianceResultsService_GetComplianceScanResults_Handler,
		},
		{
			MethodName: "GetComplianceScanConfigurationResults",
			Handler:    _ComplianceResultsService_GetComplianceScanConfigurationResults_Handler,
		},
		{
			MethodName: "GetComplianceProfileResults",
			Handler:    _ComplianceResultsService_GetComplianceProfileResults_Handler,
		},
		{
			MethodName: "GetComplianceProfileCheckResult",
			Handler:    _ComplianceResultsService_GetComplianceProfileCheckResult_Handler,
		},
		{
			MethodName: "GetComplianceProfileClusterResults",
			Handler:    _ComplianceResultsService_GetComplianceProfileClusterResults_Handler,
		},
		{
			MethodName: "GetComplianceProfileCheckDetails",
			Handler:    _ComplianceResultsService_GetComplianceProfileCheckDetails_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v2/compliance_results_service.proto",
}
