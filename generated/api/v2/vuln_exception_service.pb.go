// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: api/v2/vuln_exception_service.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Indicates the status of a request.
type ExceptionStatus int32

const (
	// Default request state. It indicates that the request has not been fulfilled and that an action (approve/deny) is required.
	ExceptionStatus_PENDING ExceptionStatus = 0
	// Indicates that the request has been approved by the approver.
	ExceptionStatus_APPROVED ExceptionStatus = 1
	// Indicates that the request has been denied by the approver.
	ExceptionStatus_DENIED ExceptionStatus = 2
	// Indicates that the original request was approved, but an update is still pending an approval or denial.
	ExceptionStatus_APPROVED_PENDING_UPDATE ExceptionStatus = 3
)

// Enum value maps for ExceptionStatus.
var (
	ExceptionStatus_name = map[int32]string{
		0: "PENDING",
		1: "APPROVED",
		2: "DENIED",
		3: "APPROVED_PENDING_UPDATE",
	}
	ExceptionStatus_value = map[string]int32{
		"PENDING":                 0,
		"APPROVED":                1,
		"DENIED":                  2,
		"APPROVED_PENDING_UPDATE": 3,
	}
)

func (x ExceptionStatus) Enum() *ExceptionStatus {
	p := new(ExceptionStatus)
	*p = x
	return p
}

func (x ExceptionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExceptionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v2_vuln_exception_service_proto_enumTypes[0].Descriptor()
}

func (ExceptionStatus) Type() protoreflect.EnumType {
	return &file_api_v2_vuln_exception_service_proto_enumTypes[0]
}

func (x ExceptionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExceptionStatus.Descriptor instead.
func (ExceptionStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{0}
}

type ExceptionExpiry_ExpiryType int32

const (
	ExceptionExpiry_TIME            ExceptionExpiry_ExpiryType = 0
	ExceptionExpiry_ALL_CVE_FIXABLE ExceptionExpiry_ExpiryType = 1
	ExceptionExpiry_ANY_CVE_FIXABLE ExceptionExpiry_ExpiryType = 2
)

// Enum value maps for ExceptionExpiry_ExpiryType.
var (
	ExceptionExpiry_ExpiryType_name = map[int32]string{
		0: "TIME",
		1: "ALL_CVE_FIXABLE",
		2: "ANY_CVE_FIXABLE",
	}
	ExceptionExpiry_ExpiryType_value = map[string]int32{
		"TIME":            0,
		"ALL_CVE_FIXABLE": 1,
		"ANY_CVE_FIXABLE": 2,
	}
)

func (x ExceptionExpiry_ExpiryType) Enum() *ExceptionExpiry_ExpiryType {
	p := new(ExceptionExpiry_ExpiryType)
	*p = x
	return p
}

func (x ExceptionExpiry_ExpiryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExceptionExpiry_ExpiryType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v2_vuln_exception_service_proto_enumTypes[1].Descriptor()
}

func (ExceptionExpiry_ExpiryType) Type() protoreflect.EnumType {
	return &file_api_v2_vuln_exception_service_proto_enumTypes[1]
}

func (x ExceptionExpiry_ExpiryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExceptionExpiry_ExpiryType.Descriptor instead.
func (ExceptionExpiry_ExpiryType) EnumDescriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{1, 0}
}

type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message   string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	User      *SlimUser              `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{0}
}

func (x *Comment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Comment) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Comment) GetUser() *SlimUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *Comment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ExceptionExpiry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This field can be used only for deferral requests. It indicates the type of expiry set for the request.
	// `TIME` indicates that the request has a fixed expiry time. If used, `expires_on` must be set.
	// `ALL_CVE_FIXABLE` indicates the request expires if all CVEs in the request is fixable.
	// `ANY_CVE_FIXABLE` indicates the request expires if any CVE in the request is fixable.
	ExpiryType ExceptionExpiry_ExpiryType `protobuf:"varint,1,opt,name=expiry_type,json=expiryType,proto3,enum=v2.ExceptionExpiry_ExpiryType" json:"expiry_type,omitempty"`
	// Indicates the timestamp when the exception expires. This field is REQUIRED only if the expiry type is set to TIME.
	ExpiresOn *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expires_on,json=expiresOn,proto3" json:"expires_on,omitempty"`
}

func (x *ExceptionExpiry) Reset() {
	*x = ExceptionExpiry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExceptionExpiry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExceptionExpiry) ProtoMessage() {}

func (x *ExceptionExpiry) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExceptionExpiry.ProtoReflect.Descriptor instead.
func (*ExceptionExpiry) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{1}
}

func (x *ExceptionExpiry) GetExpiryType() ExceptionExpiry_ExpiryType {
	if x != nil {
		return x.ExpiryType
	}
	return ExceptionExpiry_TIME
}

func (x *ExceptionExpiry) GetExpiresOn() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresOn
	}
	return nil
}

type DeferralRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expiry *ExceptionExpiry `protobuf:"bytes,1,opt,name=expiry,proto3" json:"expiry,omitempty"`
}

func (x *DeferralRequest) Reset() {
	*x = DeferralRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeferralRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeferralRequest) ProtoMessage() {}

func (x *DeferralRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeferralRequest.ProtoReflect.Descriptor instead.
func (*DeferralRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeferralRequest) GetExpiry() *ExceptionExpiry {
	if x != nil {
		return x.Expiry
	}
	return nil
}

type FalsePositiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FalsePositiveRequest) Reset() {
	*x = FalsePositiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FalsePositiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FalsePositiveRequest) ProtoMessage() {}

func (x *FalsePositiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FalsePositiveRequest.ProtoReflect.Descriptor instead.
func (*FalsePositiveRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{3}
}

// Next available tag: 16
// VulnerabilityException represents a vulnerability exception such as deferral and false-positive.
type VulnerabilityException struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Auto-generated display name of the exception.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Indicates the state that the vulnerabilities will move to once the exception is enforced.
	TargetState VulnerabilityState `protobuf:"varint,3,opt,name=target_state,json=targetState,proto3,enum=v2.VulnerabilityState" json:"target_state,omitempty"`
	// Indicates the status of the exception.
	Status ExceptionStatus `protobuf:"varint,4,opt,name=status,proto3,enum=v2.ExceptionStatus" json:"status,omitempty"`
	// If set to `true`, this field indicates that the exception is no longer enforced.
	Expired     bool                   `protobuf:"varint,5,opt,name=expired,proto3" json:"expired,omitempty"`
	Requester   *SlimUser              `protobuf:"bytes,6,opt,name=requester,proto3" json:"requester,omitempty"`
	Approvers   []*SlimUser            `protobuf:"bytes,7,rep,name=approvers,proto3" json:"approvers,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastUpdated *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	Comments    []*Comment             `protobuf:"bytes,10,rep,name=comments,proto3" json:"comments,omitempty"`
	// Indicates the scope of enforcement of the exception.
	Scope *VulnerabilityException_Scope `protobuf:"bytes,11,opt,name=scope,proto3" json:"scope,omitempty"`
	// Types that are assignable to Req:
	//
	//	*VulnerabilityException_DeferralRequest
	//	*VulnerabilityException_FalsePositiveRequest
	Req isVulnerabilityException_Req `protobuf_oneof:"req"`
	// Indicates the CVEs to which the exception applies.
	Cves []string `protobuf:"bytes,14,rep,name=cves,proto3" json:"cves,omitempty"`
	// Types that are assignable to UpdatedReq:
	//
	//	*VulnerabilityException_DeferralUpdate
	//	*VulnerabilityException_FalsePositiveUpdate
	UpdatedReq isVulnerabilityException_UpdatedReq `protobuf_oneof:"updated_req"`
}

func (x *VulnerabilityException) Reset() {
	*x = VulnerabilityException{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnerabilityException) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityException) ProtoMessage() {}

func (x *VulnerabilityException) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnerabilityException.ProtoReflect.Descriptor instead.
func (*VulnerabilityException) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{4}
}

func (x *VulnerabilityException) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VulnerabilityException) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VulnerabilityException) GetTargetState() VulnerabilityState {
	if x != nil {
		return x.TargetState
	}
	return VulnerabilityState_OBSERVED
}

func (x *VulnerabilityException) GetStatus() ExceptionStatus {
	if x != nil {
		return x.Status
	}
	return ExceptionStatus_PENDING
}

func (x *VulnerabilityException) GetExpired() bool {
	if x != nil {
		return x.Expired
	}
	return false
}

func (x *VulnerabilityException) GetRequester() *SlimUser {
	if x != nil {
		return x.Requester
	}
	return nil
}

func (x *VulnerabilityException) GetApprovers() []*SlimUser {
	if x != nil {
		return x.Approvers
	}
	return nil
}

func (x *VulnerabilityException) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VulnerabilityException) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *VulnerabilityException) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *VulnerabilityException) GetScope() *VulnerabilityException_Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (m *VulnerabilityException) GetReq() isVulnerabilityException_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (x *VulnerabilityException) GetDeferralRequest() *DeferralRequest {
	if x, ok := x.GetReq().(*VulnerabilityException_DeferralRequest); ok {
		return x.DeferralRequest
	}
	return nil
}

func (x *VulnerabilityException) GetFalsePositiveRequest() *FalsePositiveRequest {
	if x, ok := x.GetReq().(*VulnerabilityException_FalsePositiveRequest); ok {
		return x.FalsePositiveRequest
	}
	return nil
}

func (x *VulnerabilityException) GetCves() []string {
	if x != nil {
		return x.Cves
	}
	return nil
}

func (m *VulnerabilityException) GetUpdatedReq() isVulnerabilityException_UpdatedReq {
	if m != nil {
		return m.UpdatedReq
	}
	return nil
}

func (x *VulnerabilityException) GetDeferralUpdate() *DeferralUpdate {
	if x, ok := x.GetUpdatedReq().(*VulnerabilityException_DeferralUpdate); ok {
		return x.DeferralUpdate
	}
	return nil
}

func (x *VulnerabilityException) GetFalsePositiveUpdate() *FalsePositiveUpdate {
	if x, ok := x.GetUpdatedReq().(*VulnerabilityException_FalsePositiveUpdate); ok {
		return x.FalsePositiveUpdate
	}
	return nil
}

type isVulnerabilityException_Req interface {
	isVulnerabilityException_Req()
}

type VulnerabilityException_DeferralRequest struct {
	DeferralRequest *DeferralRequest `protobuf:"bytes,12,opt,name=deferral_request,json=deferralRequest,proto3,oneof"`
}

type VulnerabilityException_FalsePositiveRequest struct {
	FalsePositiveRequest *FalsePositiveRequest `protobuf:"bytes,13,opt,name=false_positive_request,json=falsePositiveRequest,proto3,oneof"`
}

func (*VulnerabilityException_DeferralRequest) isVulnerabilityException_Req() {}

func (*VulnerabilityException_FalsePositiveRequest) isVulnerabilityException_Req() {}

type isVulnerabilityException_UpdatedReq interface {
	isVulnerabilityException_UpdatedReq()
}

type VulnerabilityException_DeferralUpdate struct {
	// If set, indicates the update to be applied to the original deferral exception.
	DeferralUpdate *DeferralUpdate `protobuf:"bytes,15,opt,name=deferral_update,json=deferralUpdate,proto3,oneof"`
}

type VulnerabilityException_FalsePositiveUpdate struct {
	// If set, indicates the update to be applied to the original false-positive exception.
	FalsePositiveUpdate *FalsePositiveUpdate `protobuf:"bytes,16,opt,name=false_positive_update,json=falsePositiveUpdate,proto3,oneof"`
}

func (*VulnerabilityException_DeferralUpdate) isVulnerabilityException_UpdatedReq() {}

func (*VulnerabilityException_FalsePositiveUpdate) isVulnerabilityException_UpdatedReq() {}

type DeferralUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Use this field to update the CVEs of a deferral exception.
	Cves []string `protobuf:"bytes,1,rep,name=cves,proto3" json:"cves,omitempty"`
	// Use this field to update the exception expiry.
	Expiry *ExceptionExpiry `protobuf:"bytes,2,opt,name=expiry,proto3" json:"expiry,omitempty"`
}

func (x *DeferralUpdate) Reset() {
	*x = DeferralUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeferralUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeferralUpdate) ProtoMessage() {}

func (x *DeferralUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeferralUpdate.ProtoReflect.Descriptor instead.
func (*DeferralUpdate) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeferralUpdate) GetCves() []string {
	if x != nil {
		return x.Cves
	}
	return nil
}

func (x *DeferralUpdate) GetExpiry() *ExceptionExpiry {
	if x != nil {
		return x.Expiry
	}
	return nil
}

type FalsePositiveUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Use this field to update the CVEs of a false-positive exception.
	Cves []string `protobuf:"bytes,1,rep,name=cves,proto3" json:"cves,omitempty"`
}

func (x *FalsePositiveUpdate) Reset() {
	*x = FalsePositiveUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FalsePositiveUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FalsePositiveUpdate) ProtoMessage() {}

func (x *FalsePositiveUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FalsePositiveUpdate.ProtoReflect.Descriptor instead.
func (*FalsePositiveUpdate) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{6}
}

func (x *FalsePositiveUpdate) GetCves() []string {
	if x != nil {
		return x.Cves
	}
	return nil
}

type GetVulnerabilityExceptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exception *VulnerabilityException `protobuf:"bytes,1,opt,name=exception,proto3" json:"exception,omitempty"`
}

func (x *GetVulnerabilityExceptionResponse) Reset() {
	*x = GetVulnerabilityExceptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVulnerabilityExceptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVulnerabilityExceptionResponse) ProtoMessage() {}

func (x *GetVulnerabilityExceptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVulnerabilityExceptionResponse.ProtoReflect.Descriptor instead.
func (*GetVulnerabilityExceptionResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetVulnerabilityExceptionResponse) GetException() *VulnerabilityException {
	if x != nil {
		return x.Exception
	}
	return nil
}

type ListVulnerabilityExceptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exceptions []*VulnerabilityException `protobuf:"bytes,1,rep,name=exceptions,proto3" json:"exceptions,omitempty"`
}

func (x *ListVulnerabilityExceptionsResponse) Reset() {
	*x = ListVulnerabilityExceptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVulnerabilityExceptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVulnerabilityExceptionsResponse) ProtoMessage() {}

func (x *ListVulnerabilityExceptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVulnerabilityExceptionsResponse.ProtoReflect.Descriptor instead.
func (*ListVulnerabilityExceptionsResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListVulnerabilityExceptionsResponse) GetExceptions() []*VulnerabilityException {
	if x != nil {
		return x.Exceptions
	}
	return nil
}

// next available tag: 6
type CreateDeferVulnerabilityExceptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. The CVEs to which the exception should be applied.
	Cves []string `protobuf:"bytes,1,rep,name=cves,proto3" json:"cves,omitempty"`
	// REQUIRED. The rationale for creating the exception.
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	// REQUIRED. The scope of enforcement of the exception.
	Scope *VulnerabilityException_Scope `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	// REQUIRED. The type of expiry to be enforced for the request.
	ExceptionExpiry *ExceptionExpiry `protobuf:"bytes,4,opt,name=exception_expiry,json=exceptionExpiry,proto3" json:"exception_expiry,omitempty"`
}

func (x *CreateDeferVulnerabilityExceptionRequest) Reset() {
	*x = CreateDeferVulnerabilityExceptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeferVulnerabilityExceptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeferVulnerabilityExceptionRequest) ProtoMessage() {}

func (x *CreateDeferVulnerabilityExceptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeferVulnerabilityExceptionRequest.ProtoReflect.Descriptor instead.
func (*CreateDeferVulnerabilityExceptionRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{9}
}

func (x *CreateDeferVulnerabilityExceptionRequest) GetCves() []string {
	if x != nil {
		return x.Cves
	}
	return nil
}

func (x *CreateDeferVulnerabilityExceptionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CreateDeferVulnerabilityExceptionRequest) GetScope() *VulnerabilityException_Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *CreateDeferVulnerabilityExceptionRequest) GetExceptionExpiry() *ExceptionExpiry {
	if x != nil {
		return x.ExceptionExpiry
	}
	return nil
}

type CreateDeferVulnerabilityExceptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exception *VulnerabilityException `protobuf:"bytes,1,opt,name=exception,proto3" json:"exception,omitempty"`
}

func (x *CreateDeferVulnerabilityExceptionResponse) Reset() {
	*x = CreateDeferVulnerabilityExceptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeferVulnerabilityExceptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeferVulnerabilityExceptionResponse) ProtoMessage() {}

func (x *CreateDeferVulnerabilityExceptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeferVulnerabilityExceptionResponse.ProtoReflect.Descriptor instead.
func (*CreateDeferVulnerabilityExceptionResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{10}
}

func (x *CreateDeferVulnerabilityExceptionResponse) GetException() *VulnerabilityException {
	if x != nil {
		return x.Exception
	}
	return nil
}

type CreateFalsePositiveVulnerabilityExceptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. The CVEs to which the exception should be applied.
	Cves []string `protobuf:"bytes,1,rep,name=cves,proto3" json:"cves,omitempty"`
	// REQUIRED. The scope of enforcement of the exception.
	Scope *VulnerabilityException_Scope `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	// REQUIRED. The rationale for creating the exception.
	Comment string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CreateFalsePositiveVulnerabilityExceptionRequest) Reset() {
	*x = CreateFalsePositiveVulnerabilityExceptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFalsePositiveVulnerabilityExceptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFalsePositiveVulnerabilityExceptionRequest) ProtoMessage() {}

func (x *CreateFalsePositiveVulnerabilityExceptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFalsePositiveVulnerabilityExceptionRequest.ProtoReflect.Descriptor instead.
func (*CreateFalsePositiveVulnerabilityExceptionRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{11}
}

func (x *CreateFalsePositiveVulnerabilityExceptionRequest) GetCves() []string {
	if x != nil {
		return x.Cves
	}
	return nil
}

func (x *CreateFalsePositiveVulnerabilityExceptionRequest) GetScope() *VulnerabilityException_Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *CreateFalsePositiveVulnerabilityExceptionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type CreateFalsePositiveVulnerabilityExceptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exception *VulnerabilityException `protobuf:"bytes,1,opt,name=exception,proto3" json:"exception,omitempty"`
}

func (x *CreateFalsePositiveVulnerabilityExceptionResponse) Reset() {
	*x = CreateFalsePositiveVulnerabilityExceptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFalsePositiveVulnerabilityExceptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFalsePositiveVulnerabilityExceptionResponse) ProtoMessage() {}

func (x *CreateFalsePositiveVulnerabilityExceptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFalsePositiveVulnerabilityExceptionResponse.ProtoReflect.Descriptor instead.
func (*CreateFalsePositiveVulnerabilityExceptionResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{12}
}

func (x *CreateFalsePositiveVulnerabilityExceptionResponse) GetException() *VulnerabilityException {
	if x != nil {
		return x.Exception
	}
	return nil
}

type ApproveVulnerabilityExceptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. The ID of vulnerability exception to be approved.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// REQUIRED. The rationale for approving the exception.
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *ApproveVulnerabilityExceptionRequest) Reset() {
	*x = ApproveVulnerabilityExceptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveVulnerabilityExceptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveVulnerabilityExceptionRequest) ProtoMessage() {}

func (x *ApproveVulnerabilityExceptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveVulnerabilityExceptionRequest.ProtoReflect.Descriptor instead.
func (*ApproveVulnerabilityExceptionRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{13}
}

func (x *ApproveVulnerabilityExceptionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApproveVulnerabilityExceptionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ApproveVulnerabilityExceptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exception *VulnerabilityException `protobuf:"bytes,1,opt,name=exception,proto3" json:"exception,omitempty"`
}

func (x *ApproveVulnerabilityExceptionResponse) Reset() {
	*x = ApproveVulnerabilityExceptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveVulnerabilityExceptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveVulnerabilityExceptionResponse) ProtoMessage() {}

func (x *ApproveVulnerabilityExceptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveVulnerabilityExceptionResponse.ProtoReflect.Descriptor instead.
func (*ApproveVulnerabilityExceptionResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{14}
}

func (x *ApproveVulnerabilityExceptionResponse) GetException() *VulnerabilityException {
	if x != nil {
		return x.Exception
	}
	return nil
}

type DenyVulnerabilityExceptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. The ID of vulnerability exception to be denied.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// REQUIRED. The rationale for denying the exception.
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *DenyVulnerabilityExceptionRequest) Reset() {
	*x = DenyVulnerabilityExceptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DenyVulnerabilityExceptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenyVulnerabilityExceptionRequest) ProtoMessage() {}

func (x *DenyVulnerabilityExceptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DenyVulnerabilityExceptionRequest.ProtoReflect.Descriptor instead.
func (*DenyVulnerabilityExceptionRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{15}
}

func (x *DenyVulnerabilityExceptionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DenyVulnerabilityExceptionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type DenyVulnerabilityExceptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exception *VulnerabilityException `protobuf:"bytes,1,opt,name=exception,proto3" json:"exception,omitempty"`
}

func (x *DenyVulnerabilityExceptionResponse) Reset() {
	*x = DenyVulnerabilityExceptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DenyVulnerabilityExceptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenyVulnerabilityExceptionResponse) ProtoMessage() {}

func (x *DenyVulnerabilityExceptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DenyVulnerabilityExceptionResponse.ProtoReflect.Descriptor instead.
func (*DenyVulnerabilityExceptionResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{16}
}

func (x *DenyVulnerabilityExceptionResponse) GetException() *VulnerabilityException {
	if x != nil {
		return x.Exception
	}
	return nil
}

type UpdateVulnerabilityExceptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// REQUIRED. The ID of vulnerability exception to be updated.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// REQUIRED. The rationale for updating the exception.
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	// Types that are assignable to Update:
	//
	//	*UpdateVulnerabilityExceptionRequest_DeferralUpdate
	//	*UpdateVulnerabilityExceptionRequest_FalsePositiveUpdate
	Update isUpdateVulnerabilityExceptionRequest_Update `protobuf_oneof:"update"`
}

func (x *UpdateVulnerabilityExceptionRequest) Reset() {
	*x = UpdateVulnerabilityExceptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVulnerabilityExceptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVulnerabilityExceptionRequest) ProtoMessage() {}

func (x *UpdateVulnerabilityExceptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVulnerabilityExceptionRequest.ProtoReflect.Descriptor instead.
func (*UpdateVulnerabilityExceptionRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateVulnerabilityExceptionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateVulnerabilityExceptionRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (m *UpdateVulnerabilityExceptionRequest) GetUpdate() isUpdateVulnerabilityExceptionRequest_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *UpdateVulnerabilityExceptionRequest) GetDeferralUpdate() *DeferralUpdate {
	if x, ok := x.GetUpdate().(*UpdateVulnerabilityExceptionRequest_DeferralUpdate); ok {
		return x.DeferralUpdate
	}
	return nil
}

func (x *UpdateVulnerabilityExceptionRequest) GetFalsePositiveUpdate() *FalsePositiveUpdate {
	if x, ok := x.GetUpdate().(*UpdateVulnerabilityExceptionRequest_FalsePositiveUpdate); ok {
		return x.FalsePositiveUpdate
	}
	return nil
}

type isUpdateVulnerabilityExceptionRequest_Update interface {
	isUpdateVulnerabilityExceptionRequest_Update()
}

type UpdateVulnerabilityExceptionRequest_DeferralUpdate struct {
	// Use this field to update a deferral exception.
	DeferralUpdate *DeferralUpdate `protobuf:"bytes,3,opt,name=deferral_update,json=deferralUpdate,proto3,oneof"`
}

type UpdateVulnerabilityExceptionRequest_FalsePositiveUpdate struct {
	// Use this field to update a false-positive exception.
	FalsePositiveUpdate *FalsePositiveUpdate `protobuf:"bytes,4,opt,name=false_positive_update,json=falsePositiveUpdate,proto3,oneof"`
}

func (*UpdateVulnerabilityExceptionRequest_DeferralUpdate) isUpdateVulnerabilityExceptionRequest_Update() {
}

func (*UpdateVulnerabilityExceptionRequest_FalsePositiveUpdate) isUpdateVulnerabilityExceptionRequest_Update() {
}

type UpdateVulnerabilityExceptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exception *VulnerabilityException `protobuf:"bytes,1,opt,name=exception,proto3" json:"exception,omitempty"`
}

func (x *UpdateVulnerabilityExceptionResponse) Reset() {
	*x = UpdateVulnerabilityExceptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVulnerabilityExceptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVulnerabilityExceptionResponse) ProtoMessage() {}

func (x *UpdateVulnerabilityExceptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVulnerabilityExceptionResponse.ProtoReflect.Descriptor instead.
func (*UpdateVulnerabilityExceptionResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateVulnerabilityExceptionResponse) GetException() *VulnerabilityException {
	if x != nil {
		return x.Exception
	}
	return nil
}

type CancelVulnerabilityExceptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exception *VulnerabilityException `protobuf:"bytes,1,opt,name=exception,proto3" json:"exception,omitempty"`
}

func (x *CancelVulnerabilityExceptionResponse) Reset() {
	*x = CancelVulnerabilityExceptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelVulnerabilityExceptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelVulnerabilityExceptionResponse) ProtoMessage() {}

func (x *CancelVulnerabilityExceptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelVulnerabilityExceptionResponse.ProtoReflect.Descriptor instead.
func (*CancelVulnerabilityExceptionResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{19}
}

func (x *CancelVulnerabilityExceptionResponse) GetException() *VulnerabilityException {
	if x != nil {
		return x.Exception
	}
	return nil
}

type VulnerabilityException_Scope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This field can be used to apply the exception to selected images.
	ImageScope *VulnerabilityException_Scope_Image `protobuf:"bytes,1,opt,name=image_scope,json=imageScope,proto3" json:"image_scope,omitempty"`
}

func (x *VulnerabilityException_Scope) Reset() {
	*x = VulnerabilityException_Scope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnerabilityException_Scope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityException_Scope) ProtoMessage() {}

func (x *VulnerabilityException_Scope) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnerabilityException_Scope.ProtoReflect.Descriptor instead.
func (*VulnerabilityException_Scope) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{4, 0}
}

func (x *VulnerabilityException_Scope) GetImageScope() *VulnerabilityException_Scope_Image {
	if x != nil {
		return x.ImageScope
	}
	return nil
}

type VulnerabilityException_Scope_Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registry string `protobuf:"bytes,1,opt,name=registry,proto3" json:"registry,omitempty"`
	Remote   string `protobuf:"bytes,2,opt,name=remote,proto3" json:"remote,omitempty"`
	Tag      string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *VulnerabilityException_Scope_Image) Reset() {
	*x = VulnerabilityException_Scope_Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_vuln_exception_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnerabilityException_Scope_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityException_Scope_Image) ProtoMessage() {}

func (x *VulnerabilityException_Scope_Image) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_vuln_exception_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnerabilityException_Scope_Image.ProtoReflect.Descriptor instead.
func (*VulnerabilityException_Scope_Image) Descriptor() ([]byte, []int) {
	return file_api_v2_vuln_exception_service_proto_rawDescGZIP(), []int{4, 0, 0}
}

func (x *VulnerabilityException_Scope_Image) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

func (x *VulnerabilityException_Scope_Image) GetRemote() string {
	if x != nil {
		return x.Remote
	}
	return ""
}

func (x *VulnerabilityException_Scope_Image) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

var File_api_v2_vuln_exception_service_proto protoreflect.FileDescriptor

var file_api_v2_vuln_exception_service_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x76, 0x75, 0x6c, 0x6e, 0x5f, 0x65, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x32, 0x1a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x32, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x32, 0x2f, 0x76, 0x75, 0x6c, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x90, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x6c,
	0x69, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x3f, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x2e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x4f, 0x6e, 0x22, 0x40, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x00, 0x12,
	0x13, 0x0a, 0x0f, 0x41, 0x4c, 0x4c, 0x5f, 0x43, 0x56, 0x45, 0x5f, 0x46, 0x49, 0x58, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x4e, 0x59, 0x5f, 0x43, 0x56, 0x45, 0x5f,
	0x46, 0x49, 0x58, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x22, 0x3e, 0x0a, 0x0f, 0x44, 0x65, 0x66,
	0x65, 0x72, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x79, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x22, 0x16, 0x0a, 0x14, 0x46, 0x61, 0x6c,
	0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0xdf, 0x07, 0x0a, 0x16, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x75, 0x6c, 0x6e,
	0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x12, 0x2a, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x6c, 0x69, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2a,
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x6c, 0x69, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x09, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x36, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76,
	0x32, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45,
	0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61,
	0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x16, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x61, 0x6c,
	0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x14, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x76, 0x65,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x76, 0x65, 0x73, 0x12, 0x3d, 0x0a,
	0x0f, 0x64, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x01, 0x52, 0x0e, 0x64, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4d, 0x0a, 0x15,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x32,
	0x2e, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x01, 0x52, 0x13, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x9f, 0x01, 0x0a, 0x05,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x76, 0x32, 0x2e,
	0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x1a, 0x4d,
	0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x42, 0x05, 0x0a,
	0x03, 0x72, 0x65, 0x71, 0x42, 0x0d, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x72, 0x65, 0x71, 0x22, 0x51, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x76, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x52, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x22, 0x29, 0x0a, 0x13, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x63, 0x76, 0x65,
	0x73, 0x22, 0x5d, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x32, 0x2e, 0x56,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x61, 0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x32,
	0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x28, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x66, 0x65, 0x72, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x76, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x36,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x76, 0x32, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x10, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x52, 0x0f, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x22, 0x65, 0x0a, 0x29, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x66, 0x65, 0x72, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x75, 0x6c, 0x6e,
	0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x98, 0x01,
	0x0a, 0x30, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x76, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x6d, 0x0a, 0x31, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x56,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x50, 0x0a, 0x24, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45,
	0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x61, 0x0a, 0x25, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x21,
	0x44, 0x65, 0x6e, 0x79, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x5e, 0x0a, 0x22, 0x44,
	0x65, 0x6e, 0x79, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe7, 0x01, 0x0a, 0x23,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a,
	0x0f, 0x64, 0x65, 0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x65,
	0x66, 0x65, 0x72, 0x72, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4d, 0x0a, 0x15,
	0x66, 0x61, 0x6c, 0x73, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x32,
	0x2e, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x13, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x60, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x60, 0x0a, 0x24, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x55, 0x0a, 0x0f, 0x45, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x50, 0x50,
	0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4e, 0x49, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x5f,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03,
	0x32, 0x8b, 0x0b, 0x0a, 0x1d, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x7f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x10, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x1a, 0x25, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x12, 0x21, 0x2f, 0x76, 0x32, 0x2f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2d, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x7a, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x0c, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x1a, 0x27, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1e, 0x12, 0x1c, 0x2f, 0x76, 0x32, 0x2f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x2d, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0xb2, 0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x66, 0x65, 0x72, 0x56,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x66, 0x65, 0x72, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x66, 0x65, 0x72, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f,
	0x76, 0x32, 0x2f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2d, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x65, 0x66, 0x65,
	0x72, 0x72, 0x61, 0x6c, 0x12, 0xd0, 0x01, 0x0a, 0x29, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x61, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x56, 0x75, 0x6c, 0x6e,
	0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x34, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61,
	0x6c, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x22, 0x2b, 0x2f, 0x76, 0x32, 0x2f,
	0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2d, 0x65, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x2d, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0xaa, 0x01, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x76, 0x32, 0x2e, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x22, 0x29, 0x2f, 0x76, 0x32, 0x2f, 0x76,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2d, 0x65, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x12, 0x9e, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x6e, 0x79, 0x56, 0x75, 0x6c,
	0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6e, 0x79, 0x56, 0x75, 0x6c,
	0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x76, 0x32, 0x2e,
	0x44, 0x65, 0x6e, 0x79, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f,
	0x76, 0x32, 0x2f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2d, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x2f, 0x64, 0x65, 0x6e, 0x79, 0x12, 0x9f, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45,
	0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x26, 0x3a, 0x01, 0x2a, 0x32, 0x21, 0x2f, 0x76, 0x32, 0x2f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2d, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8c, 0x01, 0x0a, 0x1c, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45,
	0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x28, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x22, 0x28, 0x2f, 0x76,
	0x32, 0x2f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2d,
	0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x66, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x09, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x2a, 0x21, 0x2f, 0x76, 0x32,
	0x2f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2d, 0x65,
	0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x27,
	0x0a, 0x18, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x72, 0x6f, 0x78, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5a, 0x0b, 0x2e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x32, 0x3b, 0x76, 0x32, 0x58, 0x04, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_v2_vuln_exception_service_proto_rawDescOnce sync.Once
	file_api_v2_vuln_exception_service_proto_rawDescData = file_api_v2_vuln_exception_service_proto_rawDesc
)

func file_api_v2_vuln_exception_service_proto_rawDescGZIP() []byte {
	file_api_v2_vuln_exception_service_proto_rawDescOnce.Do(func() {
		file_api_v2_vuln_exception_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v2_vuln_exception_service_proto_rawDescData)
	})
	return file_api_v2_vuln_exception_service_proto_rawDescData
}

var file_api_v2_vuln_exception_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_v2_vuln_exception_service_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_api_v2_vuln_exception_service_proto_goTypes = []any{
	(ExceptionStatus)(0),                                      // 0: v2.ExceptionStatus
	(ExceptionExpiry_ExpiryType)(0),                           // 1: v2.ExceptionExpiry.ExpiryType
	(*Comment)(nil),                                           // 2: v2.Comment
	(*ExceptionExpiry)(nil),                                   // 3: v2.ExceptionExpiry
	(*DeferralRequest)(nil),                                   // 4: v2.DeferralRequest
	(*FalsePositiveRequest)(nil),                              // 5: v2.FalsePositiveRequest
	(*VulnerabilityException)(nil),                            // 6: v2.VulnerabilityException
	(*DeferralUpdate)(nil),                                    // 7: v2.DeferralUpdate
	(*FalsePositiveUpdate)(nil),                               // 8: v2.FalsePositiveUpdate
	(*GetVulnerabilityExceptionResponse)(nil),                 // 9: v2.GetVulnerabilityExceptionResponse
	(*ListVulnerabilityExceptionsResponse)(nil),               // 10: v2.ListVulnerabilityExceptionsResponse
	(*CreateDeferVulnerabilityExceptionRequest)(nil),          // 11: v2.CreateDeferVulnerabilityExceptionRequest
	(*CreateDeferVulnerabilityExceptionResponse)(nil),         // 12: v2.CreateDeferVulnerabilityExceptionResponse
	(*CreateFalsePositiveVulnerabilityExceptionRequest)(nil),  // 13: v2.CreateFalsePositiveVulnerabilityExceptionRequest
	(*CreateFalsePositiveVulnerabilityExceptionResponse)(nil), // 14: v2.CreateFalsePositiveVulnerabilityExceptionResponse
	(*ApproveVulnerabilityExceptionRequest)(nil),              // 15: v2.ApproveVulnerabilityExceptionRequest
	(*ApproveVulnerabilityExceptionResponse)(nil),             // 16: v2.ApproveVulnerabilityExceptionResponse
	(*DenyVulnerabilityExceptionRequest)(nil),                 // 17: v2.DenyVulnerabilityExceptionRequest
	(*DenyVulnerabilityExceptionResponse)(nil),                // 18: v2.DenyVulnerabilityExceptionResponse
	(*UpdateVulnerabilityExceptionRequest)(nil),               // 19: v2.UpdateVulnerabilityExceptionRequest
	(*UpdateVulnerabilityExceptionResponse)(nil),              // 20: v2.UpdateVulnerabilityExceptionResponse
	(*CancelVulnerabilityExceptionResponse)(nil),              // 21: v2.CancelVulnerabilityExceptionResponse
	(*VulnerabilityException_Scope)(nil),                      // 22: v2.VulnerabilityException.Scope
	(*VulnerabilityException_Scope_Image)(nil),                // 23: v2.VulnerabilityException.Scope.Image
	(*SlimUser)(nil),                                          // 24: v2.SlimUser
	(*timestamppb.Timestamp)(nil),                             // 25: google.protobuf.Timestamp
	(VulnerabilityState)(0),                                   // 26: v2.VulnerabilityState
	(*ResourceByID)(nil),                                      // 27: v2.ResourceByID
	(*RawQuery)(nil),                                          // 28: v2.RawQuery
	(*Empty)(nil),                                             // 29: v2.Empty
}
var file_api_v2_vuln_exception_service_proto_depIdxs = []int32{
	24, // 0: v2.Comment.user:type_name -> v2.SlimUser
	25, // 1: v2.Comment.created_at:type_name -> google.protobuf.Timestamp
	1,  // 2: v2.ExceptionExpiry.expiry_type:type_name -> v2.ExceptionExpiry.ExpiryType
	25, // 3: v2.ExceptionExpiry.expires_on:type_name -> google.protobuf.Timestamp
	3,  // 4: v2.DeferralRequest.expiry:type_name -> v2.ExceptionExpiry
	26, // 5: v2.VulnerabilityException.target_state:type_name -> v2.VulnerabilityState
	0,  // 6: v2.VulnerabilityException.status:type_name -> v2.ExceptionStatus
	24, // 7: v2.VulnerabilityException.requester:type_name -> v2.SlimUser
	24, // 8: v2.VulnerabilityException.approvers:type_name -> v2.SlimUser
	25, // 9: v2.VulnerabilityException.created_at:type_name -> google.protobuf.Timestamp
	25, // 10: v2.VulnerabilityException.last_updated:type_name -> google.protobuf.Timestamp
	2,  // 11: v2.VulnerabilityException.comments:type_name -> v2.Comment
	22, // 12: v2.VulnerabilityException.scope:type_name -> v2.VulnerabilityException.Scope
	4,  // 13: v2.VulnerabilityException.deferral_request:type_name -> v2.DeferralRequest
	5,  // 14: v2.VulnerabilityException.false_positive_request:type_name -> v2.FalsePositiveRequest
	7,  // 15: v2.VulnerabilityException.deferral_update:type_name -> v2.DeferralUpdate
	8,  // 16: v2.VulnerabilityException.false_positive_update:type_name -> v2.FalsePositiveUpdate
	3,  // 17: v2.DeferralUpdate.expiry:type_name -> v2.ExceptionExpiry
	6,  // 18: v2.GetVulnerabilityExceptionResponse.exception:type_name -> v2.VulnerabilityException
	6,  // 19: v2.ListVulnerabilityExceptionsResponse.exceptions:type_name -> v2.VulnerabilityException
	22, // 20: v2.CreateDeferVulnerabilityExceptionRequest.scope:type_name -> v2.VulnerabilityException.Scope
	3,  // 21: v2.CreateDeferVulnerabilityExceptionRequest.exception_expiry:type_name -> v2.ExceptionExpiry
	6,  // 22: v2.CreateDeferVulnerabilityExceptionResponse.exception:type_name -> v2.VulnerabilityException
	22, // 23: v2.CreateFalsePositiveVulnerabilityExceptionRequest.scope:type_name -> v2.VulnerabilityException.Scope
	6,  // 24: v2.CreateFalsePositiveVulnerabilityExceptionResponse.exception:type_name -> v2.VulnerabilityException
	6,  // 25: v2.ApproveVulnerabilityExceptionResponse.exception:type_name -> v2.VulnerabilityException
	6,  // 26: v2.DenyVulnerabilityExceptionResponse.exception:type_name -> v2.VulnerabilityException
	7,  // 27: v2.UpdateVulnerabilityExceptionRequest.deferral_update:type_name -> v2.DeferralUpdate
	8,  // 28: v2.UpdateVulnerabilityExceptionRequest.false_positive_update:type_name -> v2.FalsePositiveUpdate
	6,  // 29: v2.UpdateVulnerabilityExceptionResponse.exception:type_name -> v2.VulnerabilityException
	6,  // 30: v2.CancelVulnerabilityExceptionResponse.exception:type_name -> v2.VulnerabilityException
	23, // 31: v2.VulnerabilityException.Scope.image_scope:type_name -> v2.VulnerabilityException.Scope.Image
	27, // 32: v2.VulnerabilityExceptionService.GetVulnerabilityException:input_type -> v2.ResourceByID
	28, // 33: v2.VulnerabilityExceptionService.ListVulnerabilityExceptions:input_type -> v2.RawQuery
	11, // 34: v2.VulnerabilityExceptionService.CreateDeferVulnerabilityException:input_type -> v2.CreateDeferVulnerabilityExceptionRequest
	13, // 35: v2.VulnerabilityExceptionService.CreateFalsePositiveVulnerabilityException:input_type -> v2.CreateFalsePositiveVulnerabilityExceptionRequest
	15, // 36: v2.VulnerabilityExceptionService.ApproveVulnerabilityException:input_type -> v2.ApproveVulnerabilityExceptionRequest
	17, // 37: v2.VulnerabilityExceptionService.DenyVulnerabilityException:input_type -> v2.DenyVulnerabilityExceptionRequest
	19, // 38: v2.VulnerabilityExceptionService.UpdateVulnerabilityException:input_type -> v2.UpdateVulnerabilityExceptionRequest
	27, // 39: v2.VulnerabilityExceptionService.CancelVulnerabilityException:input_type -> v2.ResourceByID
	27, // 40: v2.VulnerabilityExceptionService.DeleteVulnerabilityException:input_type -> v2.ResourceByID
	9,  // 41: v2.VulnerabilityExceptionService.GetVulnerabilityException:output_type -> v2.GetVulnerabilityExceptionResponse
	10, // 42: v2.VulnerabilityExceptionService.ListVulnerabilityExceptions:output_type -> v2.ListVulnerabilityExceptionsResponse
	12, // 43: v2.VulnerabilityExceptionService.CreateDeferVulnerabilityException:output_type -> v2.CreateDeferVulnerabilityExceptionResponse
	14, // 44: v2.VulnerabilityExceptionService.CreateFalsePositiveVulnerabilityException:output_type -> v2.CreateFalsePositiveVulnerabilityExceptionResponse
	16, // 45: v2.VulnerabilityExceptionService.ApproveVulnerabilityException:output_type -> v2.ApproveVulnerabilityExceptionResponse
	18, // 46: v2.VulnerabilityExceptionService.DenyVulnerabilityException:output_type -> v2.DenyVulnerabilityExceptionResponse
	20, // 47: v2.VulnerabilityExceptionService.UpdateVulnerabilityException:output_type -> v2.UpdateVulnerabilityExceptionResponse
	21, // 48: v2.VulnerabilityExceptionService.CancelVulnerabilityException:output_type -> v2.CancelVulnerabilityExceptionResponse
	29, // 49: v2.VulnerabilityExceptionService.DeleteVulnerabilityException:output_type -> v2.Empty
	41, // [41:50] is the sub-list for method output_type
	32, // [32:41] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_api_v2_vuln_exception_service_proto_init() }
func file_api_v2_vuln_exception_service_proto_init() {
	if File_api_v2_vuln_exception_service_proto != nil {
		return
	}
	file_api_v2_common_proto_init()
	file_api_v2_search_query_proto_init()
	file_api_v2_user_proto_init()
	file_api_v2_vuln_state_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v2_vuln_exception_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ExceptionExpiry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DeferralRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*FalsePositiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*VulnerabilityException); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeferralUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*FalsePositiveUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetVulnerabilityExceptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListVulnerabilityExceptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDeferVulnerabilityExceptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CreateDeferVulnerabilityExceptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*CreateFalsePositiveVulnerabilityExceptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CreateFalsePositiveVulnerabilityExceptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ApproveVulnerabilityExceptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ApproveVulnerabilityExceptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*DenyVulnerabilityExceptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*DenyVulnerabilityExceptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateVulnerabilityExceptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateVulnerabilityExceptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*CancelVulnerabilityExceptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*VulnerabilityException_Scope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_vuln_exception_service_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*VulnerabilityException_Scope_Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v2_vuln_exception_service_proto_msgTypes[4].OneofWrappers = []any{
		(*VulnerabilityException_DeferralRequest)(nil),
		(*VulnerabilityException_FalsePositiveRequest)(nil),
		(*VulnerabilityException_DeferralUpdate)(nil),
		(*VulnerabilityException_FalsePositiveUpdate)(nil),
	}
	file_api_v2_vuln_exception_service_proto_msgTypes[17].OneofWrappers = []any{
		(*UpdateVulnerabilityExceptionRequest_DeferralUpdate)(nil),
		(*UpdateVulnerabilityExceptionRequest_FalsePositiveUpdate)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v2_vuln_exception_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v2_vuln_exception_service_proto_goTypes,
		DependencyIndexes: file_api_v2_vuln_exception_service_proto_depIdxs,
		EnumInfos:         file_api_v2_vuln_exception_service_proto_enumTypes,
		MessageInfos:      file_api_v2_vuln_exception_service_proto_msgTypes,
	}.Build()
	File_api_v2_vuln_exception_service_proto = out.File
	file_api_v2_vuln_exception_service_proto_rawDesc = nil
	file_api_v2_vuln_exception_service_proto_goTypes = nil
	file_api_v2_vuln_exception_service_proto_depIdxs = nil
}
