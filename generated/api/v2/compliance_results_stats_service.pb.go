// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.25.3
// source: api/v2/compliance_results_stats_service.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ComplianceScanStatsShim models statistics of checks for a given scan configuration
type ComplianceScanStatsShim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScanName     string                        `protobuf:"bytes,1,opt,name=scan_name,json=scanName,proto3" json:"scan_name,omitempty"`
	CheckStats   []*ComplianceCheckStatusCount `protobuf:"bytes,2,rep,name=check_stats,json=checkStats,proto3" json:"check_stats,omitempty"`
	LastScan     *timestamppb.Timestamp        `protobuf:"bytes,3,opt,name=last_scan,json=lastScan,proto3" json:"last_scan,omitempty"`
	ScanConfigId string                        `protobuf:"bytes,4,opt,name=scan_config_id,json=scanConfigId,proto3" json:"scan_config_id,omitempty"`
}

func (x *ComplianceScanStatsShim) Reset() {
	*x = ComplianceScanStatsShim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_results_stats_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceScanStatsShim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceScanStatsShim) ProtoMessage() {}

func (x *ComplianceScanStatsShim) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_results_stats_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceScanStatsShim.ProtoReflect.Descriptor instead.
func (*ComplianceScanStatsShim) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_results_stats_service_proto_rawDescGZIP(), []int{0}
}

func (x *ComplianceScanStatsShim) GetScanName() string {
	if x != nil {
		return x.ScanName
	}
	return ""
}

func (x *ComplianceScanStatsShim) GetCheckStats() []*ComplianceCheckStatusCount {
	if x != nil {
		return x.CheckStats
	}
	return nil
}

func (x *ComplianceScanStatsShim) GetLastScan() *timestamppb.Timestamp {
	if x != nil {
		return x.LastScan
	}
	return nil
}

func (x *ComplianceScanStatsShim) GetScanConfigId() string {
	if x != nil {
		return x.ScanConfigId
	}
	return ""
}

// ComplianceProfileScanStats provides scan stats overview based on profile
type ComplianceProfileScanStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckStats  []*ComplianceCheckStatusCount `protobuf:"bytes,1,rep,name=check_stats,json=checkStats,proto3" json:"check_stats,omitempty"`
	ProfileName string                        `protobuf:"bytes,2,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	Title       string                        `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Version     string                        `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ComplianceProfileScanStats) Reset() {
	*x = ComplianceProfileScanStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_results_stats_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceProfileScanStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceProfileScanStats) ProtoMessage() {}

func (x *ComplianceProfileScanStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_results_stats_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceProfileScanStats.ProtoReflect.Descriptor instead.
func (*ComplianceProfileScanStats) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_results_stats_service_proto_rawDescGZIP(), []int{1}
}

func (x *ComplianceProfileScanStats) GetCheckStats() []*ComplianceCheckStatusCount {
	if x != nil {
		return x.CheckStats
	}
	return nil
}

func (x *ComplianceProfileScanStats) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *ComplianceProfileScanStats) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ComplianceProfileScanStats) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// ComplianceClusterScanStats provides scan stats overview based on cluster
type ComplianceClusterScanStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScanStats *ComplianceScanStatsShim `protobuf:"bytes,1,opt,name=scan_stats,json=scanStats,proto3" json:"scan_stats,omitempty"`
	Cluster   *ComplianceScanCluster   `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *ComplianceClusterScanStats) Reset() {
	*x = ComplianceClusterScanStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_results_stats_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceClusterScanStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceClusterScanStats) ProtoMessage() {}

func (x *ComplianceClusterScanStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_results_stats_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceClusterScanStats.ProtoReflect.Descriptor instead.
func (*ComplianceClusterScanStats) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_results_stats_service_proto_rawDescGZIP(), []int{2}
}

func (x *ComplianceClusterScanStats) GetScanStats() *ComplianceScanStatsShim {
	if x != nil {
		return x.ScanStats
	}
	return nil
}

func (x *ComplianceClusterScanStats) GetCluster() *ComplianceScanCluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

type ComplianceScanClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId string    `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Query     *RawQuery `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ComplianceScanClusterRequest) Reset() {
	*x = ComplianceScanClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_results_stats_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceScanClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceScanClusterRequest) ProtoMessage() {}

func (x *ComplianceScanClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_results_stats_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceScanClusterRequest.ProtoReflect.Descriptor instead.
func (*ComplianceScanClusterRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_results_stats_service_proto_rawDescGZIP(), []int{3}
}

func (x *ComplianceScanClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ComplianceScanClusterRequest) GetQuery() *RawQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

// ListComplianceProfileScanStatsResponse provides stats for the profiles within the scans
type ListComplianceProfileScanStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScanStats  []*ComplianceProfileScanStats `protobuf:"bytes,1,rep,name=scan_stats,json=scanStats,proto3" json:"scan_stats,omitempty"`
	TotalCount int32                         `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListComplianceProfileScanStatsResponse) Reset() {
	*x = ListComplianceProfileScanStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_results_stats_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComplianceProfileScanStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComplianceProfileScanStatsResponse) ProtoMessage() {}

func (x *ListComplianceProfileScanStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_results_stats_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComplianceProfileScanStatsResponse.ProtoReflect.Descriptor instead.
func (*ListComplianceProfileScanStatsResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_results_stats_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListComplianceProfileScanStatsResponse) GetScanStats() []*ComplianceProfileScanStats {
	if x != nil {
		return x.ScanStats
	}
	return nil
}

func (x *ListComplianceProfileScanStatsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ListComplianceClusterScanStatsResponse provides stats for the clusters within the scans
type ListComplianceClusterScanStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScanStats  []*ComplianceClusterScanStats `protobuf:"bytes,1,rep,name=scan_stats,json=scanStats,proto3" json:"scan_stats,omitempty"`
	TotalCount int32                         `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListComplianceClusterScanStatsResponse) Reset() {
	*x = ListComplianceClusterScanStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_results_stats_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComplianceClusterScanStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComplianceClusterScanStatsResponse) ProtoMessage() {}

func (x *ListComplianceClusterScanStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_results_stats_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComplianceClusterScanStatsResponse.ProtoReflect.Descriptor instead.
func (*ListComplianceClusterScanStatsResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_results_stats_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListComplianceClusterScanStatsResponse) GetScanStats() []*ComplianceClusterScanStats {
	if x != nil {
		return x.ScanStats
	}
	return nil
}

func (x *ListComplianceClusterScanStatsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_api_v2_compliance_results_stats_service_proto protoreflect.FileDescriptor

var file_api_v2_compliance_results_stats_service_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x76, 0x32, 0x1a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x01,
	0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x68, 0x69, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x63, 0x61,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x63,
	0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x73, 0x63, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x61, 0x6e,
	0x12, 0x24, 0x0a, 0x0e, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x61, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x61, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x8d, 0x01, 0x0a, 0x1a, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x63, 0x61, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x68, 0x69, 0x6d, 0x52, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x61, 0x0a, 0x1c, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x77,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x88, 0x01, 0x0a,
	0x26, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x73, 0x63, 0x61, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x09, 0x73, 0x63, 0x61,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x61,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x32, 0x83, 0x08, 0x0a, 0x1d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0xa7, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x23, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x12, 0x31, 0x2f, 0x76, 0x32,
	0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x73, 0x63, 0x61, 0x6e,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f,
	0x7b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x82,
	0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x0c, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x2a, 0x2e, 0x76, 0x32,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12,
	0x22, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2f,
	0x73, 0x63, 0x61, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0xb4, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76, 0x32, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x4d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x47, 0x12, 0x45, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x2f, 0x73, 0x63, 0x61, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x2f, 0x7b, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0xb0, 0x01, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x3b, 0x12, 0x39, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x2f, 0x7b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x92, 0x01,
	0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x4f,
	0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x0c, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x1a, 0x2d, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x61,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x73, 0x63, 0x61, 0x6e, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2f, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x12, 0xb3, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x23, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x12, 0x3a, 0x2f, 0x76,
	0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x73, 0x63, 0x61,
	0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x42, 0x27, 0x0a, 0x18, 0x69, 0x6f, 0x2e, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x72, 0x6f, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x32, 0x5a, 0x0b, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x3b, 0x76,
	0x32, 0x58, 0x02, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v2_compliance_results_stats_service_proto_rawDescOnce sync.Once
	file_api_v2_compliance_results_stats_service_proto_rawDescData = file_api_v2_compliance_results_stats_service_proto_rawDesc
)

func file_api_v2_compliance_results_stats_service_proto_rawDescGZIP() []byte {
	file_api_v2_compliance_results_stats_service_proto_rawDescOnce.Do(func() {
		file_api_v2_compliance_results_stats_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v2_compliance_results_stats_service_proto_rawDescData)
	})
	return file_api_v2_compliance_results_stats_service_proto_rawDescData
}

var file_api_v2_compliance_results_stats_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_v2_compliance_results_stats_service_proto_goTypes = []interface{}{
	(*ComplianceScanStatsShim)(nil),                   // 0: v2.ComplianceScanStatsShim
	(*ComplianceProfileScanStats)(nil),                // 1: v2.ComplianceProfileScanStats
	(*ComplianceClusterScanStats)(nil),                // 2: v2.ComplianceClusterScanStats
	(*ComplianceScanClusterRequest)(nil),              // 3: v2.ComplianceScanClusterRequest
	(*ListComplianceProfileScanStatsResponse)(nil),    // 4: v2.ListComplianceProfileScanStatsResponse
	(*ListComplianceClusterScanStatsResponse)(nil),    // 5: v2.ListComplianceClusterScanStatsResponse
	(*ComplianceCheckStatusCount)(nil),                // 6: v2.ComplianceCheckStatusCount
	(*timestamppb.Timestamp)(nil),                     // 7: google.protobuf.Timestamp
	(*ComplianceScanCluster)(nil),                     // 8: v2.ComplianceScanCluster
	(*RawQuery)(nil),                                  // 9: v2.RawQuery
	(*ComplianceProfileResultsRequest)(nil),           // 10: v2.ComplianceProfileResultsRequest
	(*ComplianceProfileCheckRequest)(nil),             // 11: v2.ComplianceProfileCheckRequest
	(*ListComplianceProfileResults)(nil),              // 12: v2.ListComplianceProfileResults
	(*ListComplianceClusterOverallStatsResponse)(nil), // 13: v2.ListComplianceClusterOverallStatsResponse
}
var file_api_v2_compliance_results_stats_service_proto_depIdxs = []int32{
	6,  // 0: v2.ComplianceScanStatsShim.check_stats:type_name -> v2.ComplianceCheckStatusCount
	7,  // 1: v2.ComplianceScanStatsShim.last_scan:type_name -> google.protobuf.Timestamp
	6,  // 2: v2.ComplianceProfileScanStats.check_stats:type_name -> v2.ComplianceCheckStatusCount
	0,  // 3: v2.ComplianceClusterScanStats.scan_stats:type_name -> v2.ComplianceScanStatsShim
	8,  // 4: v2.ComplianceClusterScanStats.cluster:type_name -> v2.ComplianceScanCluster
	9,  // 5: v2.ComplianceScanClusterRequest.query:type_name -> v2.RawQuery
	1,  // 6: v2.ListComplianceProfileScanStatsResponse.scan_stats:type_name -> v2.ComplianceProfileScanStats
	2,  // 7: v2.ListComplianceClusterScanStatsResponse.scan_stats:type_name -> v2.ComplianceClusterScanStats
	10, // 8: v2.ComplianceResultsStatsService.GetComplianceProfileStats:input_type -> v2.ComplianceProfileResultsRequest
	9,  // 9: v2.ComplianceResultsStatsService.GetComplianceProfilesStats:input_type -> v2.RawQuery
	11, // 10: v2.ComplianceResultsStatsService.GetComplianceProfileCheckStats:input_type -> v2.ComplianceProfileCheckRequest
	3,  // 11: v2.ComplianceResultsStatsService.GetComplianceClusterScanStats:input_type -> v2.ComplianceScanClusterRequest
	9,  // 12: v2.ComplianceResultsStatsService.GetComplianceOverallClusterStats:input_type -> v2.RawQuery
	10, // 13: v2.ComplianceResultsStatsService.GetComplianceClusterStats:input_type -> v2.ComplianceProfileResultsRequest
	4,  // 14: v2.ComplianceResultsStatsService.GetComplianceProfileStats:output_type -> v2.ListComplianceProfileScanStatsResponse
	4,  // 15: v2.ComplianceResultsStatsService.GetComplianceProfilesStats:output_type -> v2.ListComplianceProfileScanStatsResponse
	12, // 16: v2.ComplianceResultsStatsService.GetComplianceProfileCheckStats:output_type -> v2.ListComplianceProfileResults
	5,  // 17: v2.ComplianceResultsStatsService.GetComplianceClusterScanStats:output_type -> v2.ListComplianceClusterScanStatsResponse
	13, // 18: v2.ComplianceResultsStatsService.GetComplianceOverallClusterStats:output_type -> v2.ListComplianceClusterOverallStatsResponse
	13, // 19: v2.ComplianceResultsStatsService.GetComplianceClusterStats:output_type -> v2.ListComplianceClusterOverallStatsResponse
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_v2_compliance_results_stats_service_proto_init() }
func file_api_v2_compliance_results_stats_service_proto_init() {
	if File_api_v2_compliance_results_stats_service_proto != nil {
		return
	}
	file_api_v2_compliance_common_proto_init()
	file_api_v2_search_query_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v2_compliance_results_stats_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplianceScanStatsShim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_results_stats_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplianceProfileScanStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_results_stats_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplianceClusterScanStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_results_stats_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplianceScanClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_results_stats_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComplianceProfileScanStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_results_stats_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComplianceClusterScanStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v2_compliance_results_stats_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v2_compliance_results_stats_service_proto_goTypes,
		DependencyIndexes: file_api_v2_compliance_results_stats_service_proto_depIdxs,
		MessageInfos:      file_api_v2_compliance_results_stats_service_proto_msgTypes,
	}.Build()
	File_api_v2_compliance_results_stats_service_proto = out.File
	file_api_v2_compliance_results_stats_service_proto_rawDesc = nil
	file_api_v2_compliance_results_stats_service_proto_goTypes = nil
	file_api_v2_compliance_results_stats_service_proto_depIdxs = nil
}
