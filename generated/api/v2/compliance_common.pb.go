// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/v2/compliance_common.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComplianceCheckStatus int32

const (
	ComplianceCheckStatus_UNSET_CHECK_STATUS ComplianceCheckStatus = 0
	ComplianceCheckStatus_PASS               ComplianceCheckStatus = 1
	ComplianceCheckStatus_FAIL               ComplianceCheckStatus = 2
	ComplianceCheckStatus_ERROR              ComplianceCheckStatus = 3
	ComplianceCheckStatus_INFO               ComplianceCheckStatus = 4
	ComplianceCheckStatus_MANUAL             ComplianceCheckStatus = 5
	ComplianceCheckStatus_NOT_APPLICABLE     ComplianceCheckStatus = 6
	ComplianceCheckStatus_INCONSISTENT       ComplianceCheckStatus = 7
)

// Enum value maps for ComplianceCheckStatus.
var (
	ComplianceCheckStatus_name = map[int32]string{
		0: "UNSET_CHECK_STATUS",
		1: "PASS",
		2: "FAIL",
		3: "ERROR",
		4: "INFO",
		5: "MANUAL",
		6: "NOT_APPLICABLE",
		7: "INCONSISTENT",
	}
	ComplianceCheckStatus_value = map[string]int32{
		"UNSET_CHECK_STATUS": 0,
		"PASS":               1,
		"FAIL":               2,
		"ERROR":              3,
		"INFO":               4,
		"MANUAL":             5,
		"NOT_APPLICABLE":     6,
		"INCONSISTENT":       7,
	}
)

func (x ComplianceCheckStatus) Enum() *ComplianceCheckStatus {
	p := new(ComplianceCheckStatus)
	*p = x
	return p
}

func (x ComplianceCheckStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComplianceCheckStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v2_compliance_common_proto_enumTypes[0].Descriptor()
}

func (ComplianceCheckStatus) Type() protoreflect.EnumType {
	return &file_api_v2_compliance_common_proto_enumTypes[0]
}

func (x ComplianceCheckStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ComplianceRule struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name         *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_RuleType     *string                `protobuf:"bytes,3,opt,name=rule_type,json=ruleType"`
	xxx_hidden_Severity     *string                `protobuf:"bytes,4,opt,name=severity"`
	xxx_hidden_Standard     *string                `protobuf:"bytes,5,opt,name=standard"`
	xxx_hidden_Control      *string                `protobuf:"bytes,6,opt,name=control"`
	xxx_hidden_Title        *string                `protobuf:"bytes,7,opt,name=title"`
	xxx_hidden_Description  *string                `protobuf:"bytes,8,opt,name=description"`
	xxx_hidden_Rationale    *string                `protobuf:"bytes,9,opt,name=rationale"`
	xxx_hidden_Fixes        *[]*ComplianceRule_Fix `protobuf:"bytes,10,rep,name=fixes"`
	xxx_hidden_Id           *string                `protobuf:"bytes,11,opt,name=id"`
	xxx_hidden_RuleId       *string                `protobuf:"bytes,12,opt,name=rule_id,json=ruleId"`
	xxx_hidden_ParentRule   *string                `protobuf:"bytes,13,opt,name=parent_rule,json=parentRule"`
	xxx_hidden_Instructions *string                `protobuf:"bytes,14,opt,name=instructions"`
	xxx_hidden_Warning      *string                `protobuf:"bytes,15,opt,name=warning"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ComplianceRule) Reset() {
	*x = ComplianceRule{}
	mi := &file_api_v2_compliance_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceRule) ProtoMessage() {}

func (x *ComplianceRule) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceRule) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceRule) GetRuleType() string {
	if x != nil {
		if x.xxx_hidden_RuleType != nil {
			return *x.xxx_hidden_RuleType
		}
		return ""
	}
	return ""
}

func (x *ComplianceRule) GetSeverity() string {
	if x != nil {
		if x.xxx_hidden_Severity != nil {
			return *x.xxx_hidden_Severity
		}
		return ""
	}
	return ""
}

func (x *ComplianceRule) GetStandard() string {
	if x != nil {
		if x.xxx_hidden_Standard != nil {
			return *x.xxx_hidden_Standard
		}
		return ""
	}
	return ""
}

func (x *ComplianceRule) GetControl() string {
	if x != nil {
		if x.xxx_hidden_Control != nil {
			return *x.xxx_hidden_Control
		}
		return ""
	}
	return ""
}

func (x *ComplianceRule) GetTitle() string {
	if x != nil {
		if x.xxx_hidden_Title != nil {
			return *x.xxx_hidden_Title
		}
		return ""
	}
	return ""
}

func (x *ComplianceRule) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *ComplianceRule) GetRationale() string {
	if x != nil {
		if x.xxx_hidden_Rationale != nil {
			return *x.xxx_hidden_Rationale
		}
		return ""
	}
	return ""
}

func (x *ComplianceRule) GetFixes() []*ComplianceRule_Fix {
	if x != nil {
		if x.xxx_hidden_Fixes != nil {
			return *x.xxx_hidden_Fixes
		}
	}
	return nil
}

func (x *ComplianceRule) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *ComplianceRule) GetRuleId() string {
	if x != nil {
		if x.xxx_hidden_RuleId != nil {
			return *x.xxx_hidden_RuleId
		}
		return ""
	}
	return ""
}

func (x *ComplianceRule) GetParentRule() string {
	if x != nil {
		if x.xxx_hidden_ParentRule != nil {
			return *x.xxx_hidden_ParentRule
		}
		return ""
	}
	return ""
}

func (x *ComplianceRule) GetInstructions() string {
	if x != nil {
		if x.xxx_hidden_Instructions != nil {
			return *x.xxx_hidden_Instructions
		}
		return ""
	}
	return ""
}

func (x *ComplianceRule) GetWarning() string {
	if x != nil {
		if x.xxx_hidden_Warning != nil {
			return *x.xxx_hidden_Warning
		}
		return ""
	}
	return ""
}

func (x *ComplianceRule) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 14)
}

func (x *ComplianceRule) SetRuleType(v string) {
	x.xxx_hidden_RuleType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 14)
}

func (x *ComplianceRule) SetSeverity(v string) {
	x.xxx_hidden_Severity = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 14)
}

func (x *ComplianceRule) SetStandard(v string) {
	x.xxx_hidden_Standard = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 14)
}

func (x *ComplianceRule) SetControl(v string) {
	x.xxx_hidden_Control = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 14)
}

func (x *ComplianceRule) SetTitle(v string) {
	x.xxx_hidden_Title = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 14)
}

func (x *ComplianceRule) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 14)
}

func (x *ComplianceRule) SetRationale(v string) {
	x.xxx_hidden_Rationale = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 14)
}

func (x *ComplianceRule) SetFixes(v []*ComplianceRule_Fix) {
	x.xxx_hidden_Fixes = &v
}

func (x *ComplianceRule) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 14)
}

func (x *ComplianceRule) SetRuleId(v string) {
	x.xxx_hidden_RuleId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 14)
}

func (x *ComplianceRule) SetParentRule(v string) {
	x.xxx_hidden_ParentRule = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 14)
}

func (x *ComplianceRule) SetInstructions(v string) {
	x.xxx_hidden_Instructions = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 14)
}

func (x *ComplianceRule) SetWarning(v string) {
	x.xxx_hidden_Warning = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 14)
}

func (x *ComplianceRule) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceRule) HasRuleType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceRule) HasSeverity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceRule) HasStandard() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceRule) HasControl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ComplianceRule) HasTitle() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ComplianceRule) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ComplianceRule) HasRationale() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ComplianceRule) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *ComplianceRule) HasRuleId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *ComplianceRule) HasParentRule() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *ComplianceRule) HasInstructions() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *ComplianceRule) HasWarning() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *ComplianceRule) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceRule) ClearRuleType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_RuleType = nil
}

func (x *ComplianceRule) ClearSeverity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Severity = nil
}

func (x *ComplianceRule) ClearStandard() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Standard = nil
}

func (x *ComplianceRule) ClearControl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Control = nil
}

func (x *ComplianceRule) ClearTitle() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Title = nil
}

func (x *ComplianceRule) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Description = nil
}

func (x *ComplianceRule) ClearRationale() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Rationale = nil
}

func (x *ComplianceRule) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_Id = nil
}

func (x *ComplianceRule) ClearRuleId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_RuleId = nil
}

func (x *ComplianceRule) ClearParentRule() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_ParentRule = nil
}

func (x *ComplianceRule) ClearInstructions() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_Instructions = nil
}

func (x *ComplianceRule) ClearWarning() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_Warning = nil
}

type ComplianceRule_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name         *string
	RuleType     *string
	Severity     *string
	Standard     *string
	Control      *string
	Title        *string
	Description  *string
	Rationale    *string
	Fixes        []*ComplianceRule_Fix
	Id           *string
	RuleId       *string
	ParentRule   *string
	Instructions *string
	Warning      *string
}

func (b0 ComplianceRule_builder) Build() *ComplianceRule {
	m0 := &ComplianceRule{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 14)
		x.xxx_hidden_Name = b.Name
	}
	if b.RuleType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 14)
		x.xxx_hidden_RuleType = b.RuleType
	}
	if b.Severity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 14)
		x.xxx_hidden_Severity = b.Severity
	}
	if b.Standard != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 14)
		x.xxx_hidden_Standard = b.Standard
	}
	if b.Control != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 14)
		x.xxx_hidden_Control = b.Control
	}
	if b.Title != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 14)
		x.xxx_hidden_Title = b.Title
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 14)
		x.xxx_hidden_Description = b.Description
	}
	if b.Rationale != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 14)
		x.xxx_hidden_Rationale = b.Rationale
	}
	x.xxx_hidden_Fixes = &b.Fixes
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 14)
		x.xxx_hidden_Id = b.Id
	}
	if b.RuleId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 14)
		x.xxx_hidden_RuleId = b.RuleId
	}
	if b.ParentRule != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 14)
		x.xxx_hidden_ParentRule = b.ParentRule
	}
	if b.Instructions != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 14)
		x.xxx_hidden_Instructions = b.Instructions
	}
	if b.Warning != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 14)
		x.xxx_hidden_Warning = b.Warning
	}
	return m0
}

type ComplianceScanCluster struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ClusterId   *string                `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_ClusterName *string                `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceScanCluster) Reset() {
	*x = ComplianceScanCluster{}
	mi := &file_api_v2_compliance_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceScanCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceScanCluster) ProtoMessage() {}

func (x *ComplianceScanCluster) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceScanCluster) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *ComplianceScanCluster) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *ComplianceScanCluster) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ComplianceScanCluster) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ComplianceScanCluster) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceScanCluster) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceScanCluster) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ClusterId = nil
}

func (x *ComplianceScanCluster) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ClusterName = nil
}

type ComplianceScanCluster_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ClusterId   *string
	ClusterName *string
}

func (b0 ComplianceScanCluster_builder) Build() *ComplianceScanCluster {
	m0 := &ComplianceScanCluster{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	return m0
}

// Group the number of occurrences by status
type ComplianceCheckStatusCount struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Count       int32                  `protobuf:"varint,1,opt,name=count"`
	xxx_hidden_Status      ComplianceCheckStatus  `protobuf:"varint,2,opt,name=status,enum=v2.ComplianceCheckStatus"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceCheckStatusCount) Reset() {
	*x = ComplianceCheckStatusCount{}
	mi := &file_api_v2_compliance_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceCheckStatusCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceCheckStatusCount) ProtoMessage() {}

func (x *ComplianceCheckStatusCount) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceCheckStatusCount) GetCount() int32 {
	if x != nil {
		return x.xxx_hidden_Count
	}
	return 0
}

func (x *ComplianceCheckStatusCount) GetStatus() ComplianceCheckStatus {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Status
		}
	}
	return ComplianceCheckStatus_UNSET_CHECK_STATUS
}

func (x *ComplianceCheckStatusCount) SetCount(v int32) {
	x.xxx_hidden_Count = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ComplianceCheckStatusCount) SetStatus(v ComplianceCheckStatus) {
	x.xxx_hidden_Status = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ComplianceCheckStatusCount) HasCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceCheckStatusCount) HasStatus() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceCheckStatusCount) ClearCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Count = 0
}

func (x *ComplianceCheckStatusCount) ClearStatus() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Status = ComplianceCheckStatus_UNSET_CHECK_STATUS
}

type ComplianceCheckStatusCount_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Count  *int32
	Status *ComplianceCheckStatus
}

func (b0 ComplianceCheckStatusCount_builder) Build() *ComplianceCheckStatusCount {
	m0 := &ComplianceCheckStatusCount{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Count != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Count = *b.Count
	}
	if b.Status != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Status = *b.Status
	}
	return m0
}

// Group the number of occurrences by status
type ComplianceCheckResultStatusCount struct {
	state                  protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_CheckName   *string                        `protobuf:"bytes,1,opt,name=check_name,json=checkName"`
	xxx_hidden_Rationale   *string                        `protobuf:"bytes,2,opt,name=rationale"`
	xxx_hidden_RuleName    *string                        `protobuf:"bytes,3,opt,name=rule_name,json=ruleName"`
	xxx_hidden_CheckStats  *[]*ComplianceCheckStatusCount `protobuf:"bytes,4,rep,name=check_stats,json=checkStats"`
	xxx_hidden_Controls    *[]*ComplianceControl          `protobuf:"bytes,5,rep,name=controls"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceCheckResultStatusCount) Reset() {
	*x = ComplianceCheckResultStatusCount{}
	mi := &file_api_v2_compliance_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceCheckResultStatusCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceCheckResultStatusCount) ProtoMessage() {}

func (x *ComplianceCheckResultStatusCount) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceCheckResultStatusCount) GetCheckName() string {
	if x != nil {
		if x.xxx_hidden_CheckName != nil {
			return *x.xxx_hidden_CheckName
		}
		return ""
	}
	return ""
}

func (x *ComplianceCheckResultStatusCount) GetRationale() string {
	if x != nil {
		if x.xxx_hidden_Rationale != nil {
			return *x.xxx_hidden_Rationale
		}
		return ""
	}
	return ""
}

func (x *ComplianceCheckResultStatusCount) GetRuleName() string {
	if x != nil {
		if x.xxx_hidden_RuleName != nil {
			return *x.xxx_hidden_RuleName
		}
		return ""
	}
	return ""
}

func (x *ComplianceCheckResultStatusCount) GetCheckStats() []*ComplianceCheckStatusCount {
	if x != nil {
		if x.xxx_hidden_CheckStats != nil {
			return *x.xxx_hidden_CheckStats
		}
	}
	return nil
}

func (x *ComplianceCheckResultStatusCount) GetControls() []*ComplianceControl {
	if x != nil {
		if x.xxx_hidden_Controls != nil {
			return *x.xxx_hidden_Controls
		}
	}
	return nil
}

func (x *ComplianceCheckResultStatusCount) SetCheckName(v string) {
	x.xxx_hidden_CheckName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *ComplianceCheckResultStatusCount) SetRationale(v string) {
	x.xxx_hidden_Rationale = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ComplianceCheckResultStatusCount) SetRuleName(v string) {
	x.xxx_hidden_RuleName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *ComplianceCheckResultStatusCount) SetCheckStats(v []*ComplianceCheckStatusCount) {
	x.xxx_hidden_CheckStats = &v
}

func (x *ComplianceCheckResultStatusCount) SetControls(v []*ComplianceControl) {
	x.xxx_hidden_Controls = &v
}

func (x *ComplianceCheckResultStatusCount) HasCheckName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceCheckResultStatusCount) HasRationale() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceCheckResultStatusCount) HasRuleName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceCheckResultStatusCount) ClearCheckName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_CheckName = nil
}

func (x *ComplianceCheckResultStatusCount) ClearRationale() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Rationale = nil
}

func (x *ComplianceCheckResultStatusCount) ClearRuleName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_RuleName = nil
}

type ComplianceCheckResultStatusCount_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	CheckName  *string
	Rationale  *string
	RuleName   *string
	CheckStats []*ComplianceCheckStatusCount
	Controls   []*ComplianceControl
}

func (b0 ComplianceCheckResultStatusCount_builder) Build() *ComplianceCheckResultStatusCount {
	m0 := &ComplianceCheckResultStatusCount{}
	b, x := &b0, m0
	_, _ = b, x
	if b.CheckName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_CheckName = b.CheckName
	}
	if b.Rationale != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Rationale = b.Rationale
	}
	if b.RuleName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_RuleName = b.RuleName
	}
	x.xxx_hidden_CheckStats = &b.CheckStats
	x.xxx_hidden_Controls = &b.Controls
	return m0
}

type ComplianceControl struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Standard    *string                `protobuf:"bytes,1,opt,name=standard"`
	xxx_hidden_Control     *string                `protobuf:"bytes,2,opt,name=control"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceControl) Reset() {
	*x = ComplianceControl{}
	mi := &file_api_v2_compliance_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceControl) ProtoMessage() {}

func (x *ComplianceControl) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceControl) GetStandard() string {
	if x != nil {
		if x.xxx_hidden_Standard != nil {
			return *x.xxx_hidden_Standard
		}
		return ""
	}
	return ""
}

func (x *ComplianceControl) GetControl() string {
	if x != nil {
		if x.xxx_hidden_Control != nil {
			return *x.xxx_hidden_Control
		}
		return ""
	}
	return ""
}

func (x *ComplianceControl) SetStandard(v string) {
	x.xxx_hidden_Standard = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ComplianceControl) SetControl(v string) {
	x.xxx_hidden_Control = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ComplianceControl) HasStandard() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceControl) HasControl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceControl) ClearStandard() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Standard = nil
}

func (x *ComplianceControl) ClearControl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Control = nil
}

type ComplianceControl_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Standard *string
	Control  *string
}

func (b0 ComplianceControl_builder) Build() *ComplianceControl {
	m0 := &ComplianceControl{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Standard != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Standard = b.Standard
	}
	if b.Control != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Control = b.Control
	}
	return m0
}

type ComplianceBenchmark struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Version     *string                `protobuf:"bytes,2,opt,name=version"`
	xxx_hidden_Description *string                `protobuf:"bytes,3,opt,name=description"`
	xxx_hidden_Provider    *string                `protobuf:"bytes,4,opt,name=provider"`
	xxx_hidden_ShortName   *string                `protobuf:"bytes,5,opt,name=short_name,json=shortName"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceBenchmark) Reset() {
	*x = ComplianceBenchmark{}
	mi := &file_api_v2_compliance_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceBenchmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceBenchmark) ProtoMessage() {}

func (x *ComplianceBenchmark) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceBenchmark) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceBenchmark) GetVersion() string {
	if x != nil {
		if x.xxx_hidden_Version != nil {
			return *x.xxx_hidden_Version
		}
		return ""
	}
	return ""
}

func (x *ComplianceBenchmark) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *ComplianceBenchmark) GetProvider() string {
	if x != nil {
		if x.xxx_hidden_Provider != nil {
			return *x.xxx_hidden_Provider
		}
		return ""
	}
	return ""
}

func (x *ComplianceBenchmark) GetShortName() string {
	if x != nil {
		if x.xxx_hidden_ShortName != nil {
			return *x.xxx_hidden_ShortName
		}
		return ""
	}
	return ""
}

func (x *ComplianceBenchmark) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *ComplianceBenchmark) SetVersion(v string) {
	x.xxx_hidden_Version = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *ComplianceBenchmark) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *ComplianceBenchmark) SetProvider(v string) {
	x.xxx_hidden_Provider = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *ComplianceBenchmark) SetShortName(v string) {
	x.xxx_hidden_ShortName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *ComplianceBenchmark) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceBenchmark) HasVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceBenchmark) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceBenchmark) HasProvider() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceBenchmark) HasShortName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ComplianceBenchmark) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceBenchmark) ClearVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Version = nil
}

func (x *ComplianceBenchmark) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Description = nil
}

func (x *ComplianceBenchmark) ClearProvider() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Provider = nil
}

func (x *ComplianceBenchmark) ClearShortName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_ShortName = nil
}

type ComplianceBenchmark_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name        *string
	Version     *string
	Description *string
	Provider    *string
	// This is extracted from the annotation.
	// Example: from https://control.compliance.openshift.io/CIS-OCP we should have CIS-OCP
	ShortName *string
}

func (b0 ComplianceBenchmark_builder) Build() *ComplianceBenchmark {
	m0 := &ComplianceBenchmark{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Name = b.Name
	}
	if b.Version != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Version = b.Version
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Description = b.Description
	}
	if b.Provider != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Provider = b.Provider
	}
	if b.ShortName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_ShortName = b.ShortName
	}
	return m0
}

// ListComplianceProfileResults provides scan stats overview based on profile
type ListComplianceProfileResults struct {
	state                     protoimpl.MessageState               `protogen:"opaque.v1"`
	xxx_hidden_ProfileResults *[]*ComplianceCheckResultStatusCount `protobuf:"bytes,1,rep,name=profile_results,json=profileResults"`
	xxx_hidden_ProfileName    *string                              `protobuf:"bytes,2,opt,name=profile_name,json=profileName"`
	xxx_hidden_TotalCount     int32                                `protobuf:"varint,3,opt,name=total_count,json=totalCount"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ListComplianceProfileResults) Reset() {
	*x = ListComplianceProfileResults{}
	mi := &file_api_v2_compliance_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListComplianceProfileResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComplianceProfileResults) ProtoMessage() {}

func (x *ListComplianceProfileResults) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListComplianceProfileResults) GetProfileResults() []*ComplianceCheckResultStatusCount {
	if x != nil {
		if x.xxx_hidden_ProfileResults != nil {
			return *x.xxx_hidden_ProfileResults
		}
	}
	return nil
}

func (x *ListComplianceProfileResults) GetProfileName() string {
	if x != nil {
		if x.xxx_hidden_ProfileName != nil {
			return *x.xxx_hidden_ProfileName
		}
		return ""
	}
	return ""
}

func (x *ListComplianceProfileResults) GetTotalCount() int32 {
	if x != nil {
		return x.xxx_hidden_TotalCount
	}
	return 0
}

func (x *ListComplianceProfileResults) SetProfileResults(v []*ComplianceCheckResultStatusCount) {
	x.xxx_hidden_ProfileResults = &v
}

func (x *ListComplianceProfileResults) SetProfileName(v string) {
	x.xxx_hidden_ProfileName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ListComplianceProfileResults) SetTotalCount(v int32) {
	x.xxx_hidden_TotalCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ListComplianceProfileResults) HasProfileName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListComplianceProfileResults) HasTotalCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ListComplianceProfileResults) ClearProfileName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ProfileName = nil
}

func (x *ListComplianceProfileResults) ClearTotalCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_TotalCount = 0
}

type ListComplianceProfileResults_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ProfileResults []*ComplianceCheckResultStatusCount
	ProfileName    *string
	TotalCount     *int32
}

func (b0 ListComplianceProfileResults_builder) Build() *ListComplianceProfileResults {
	m0 := &ListComplianceProfileResults{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ProfileResults = &b.ProfileResults
	if b.ProfileName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_ProfileName = b.ProfileName
	}
	if b.TotalCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_TotalCount = *b.TotalCount
	}
	return m0
}

// ComplianceClusterOverallStats provides overall stats for cluster
type ComplianceClusterOverallStats struct {
	state                    protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_Cluster       *ComplianceScanCluster         `protobuf:"bytes,1,opt,name=cluster"`
	xxx_hidden_CheckStats    *[]*ComplianceCheckStatusCount `protobuf:"bytes,2,rep,name=check_stats,json=checkStats"`
	xxx_hidden_ClusterErrors []string                       `protobuf:"bytes,3,rep,name=cluster_errors,json=clusterErrors"`
	xxx_hidden_LastScanTime  *timestamppb.Timestamp         `protobuf:"bytes,4,opt,name=last_scan_time,json=lastScanTime"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ComplianceClusterOverallStats) Reset() {
	*x = ComplianceClusterOverallStats{}
	mi := &file_api_v2_compliance_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceClusterOverallStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceClusterOverallStats) ProtoMessage() {}

func (x *ComplianceClusterOverallStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceClusterOverallStats) GetCluster() *ComplianceScanCluster {
	if x != nil {
		return x.xxx_hidden_Cluster
	}
	return nil
}

func (x *ComplianceClusterOverallStats) GetCheckStats() []*ComplianceCheckStatusCount {
	if x != nil {
		if x.xxx_hidden_CheckStats != nil {
			return *x.xxx_hidden_CheckStats
		}
	}
	return nil
}

func (x *ComplianceClusterOverallStats) GetClusterErrors() []string {
	if x != nil {
		return x.xxx_hidden_ClusterErrors
	}
	return nil
}

func (x *ComplianceClusterOverallStats) GetLastScanTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastScanTime
	}
	return nil
}

func (x *ComplianceClusterOverallStats) SetCluster(v *ComplianceScanCluster) {
	x.xxx_hidden_Cluster = v
}

func (x *ComplianceClusterOverallStats) SetCheckStats(v []*ComplianceCheckStatusCount) {
	x.xxx_hidden_CheckStats = &v
}

func (x *ComplianceClusterOverallStats) SetClusterErrors(v []string) {
	x.xxx_hidden_ClusterErrors = v
}

func (x *ComplianceClusterOverallStats) SetLastScanTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastScanTime = v
}

func (x *ComplianceClusterOverallStats) HasCluster() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Cluster != nil
}

func (x *ComplianceClusterOverallStats) HasLastScanTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastScanTime != nil
}

func (x *ComplianceClusterOverallStats) ClearCluster() {
	x.xxx_hidden_Cluster = nil
}

func (x *ComplianceClusterOverallStats) ClearLastScanTime() {
	x.xxx_hidden_LastScanTime = nil
}

type ComplianceClusterOverallStats_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Cluster       *ComplianceScanCluster
	CheckStats    []*ComplianceCheckStatusCount
	ClusterErrors []string
	LastScanTime  *timestamppb.Timestamp
}

func (b0 ComplianceClusterOverallStats_builder) Build() *ComplianceClusterOverallStats {
	m0 := &ComplianceClusterOverallStats{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Cluster = b.Cluster
	x.xxx_hidden_CheckStats = &b.CheckStats
	x.xxx_hidden_ClusterErrors = b.ClusterErrors
	x.xxx_hidden_LastScanTime = b.LastScanTime
	return m0
}

// ListComplianceCheckScanStatsResponse provides stats per cluster
type ListComplianceClusterOverallStatsResponse struct {
	state                  protoimpl.MessageState            `protogen:"opaque.v1"`
	xxx_hidden_ScanStats   *[]*ComplianceClusterOverallStats `protobuf:"bytes,1,rep,name=scan_stats,json=scanStats"`
	xxx_hidden_TotalCount  int32                             `protobuf:"varint,2,opt,name=total_count,json=totalCount"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListComplianceClusterOverallStatsResponse) Reset() {
	*x = ListComplianceClusterOverallStatsResponse{}
	mi := &file_api_v2_compliance_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListComplianceClusterOverallStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComplianceClusterOverallStatsResponse) ProtoMessage() {}

func (x *ListComplianceClusterOverallStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ListComplianceClusterOverallStatsResponse) GetScanStats() []*ComplianceClusterOverallStats {
	if x != nil {
		if x.xxx_hidden_ScanStats != nil {
			return *x.xxx_hidden_ScanStats
		}
	}
	return nil
}

func (x *ListComplianceClusterOverallStatsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.xxx_hidden_TotalCount
	}
	return 0
}

func (x *ListComplianceClusterOverallStatsResponse) SetScanStats(v []*ComplianceClusterOverallStats) {
	x.xxx_hidden_ScanStats = &v
}

func (x *ListComplianceClusterOverallStatsResponse) SetTotalCount(v int32) {
	x.xxx_hidden_TotalCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ListComplianceClusterOverallStatsResponse) HasTotalCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ListComplianceClusterOverallStatsResponse) ClearTotalCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_TotalCount = 0
}

type ListComplianceClusterOverallStatsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScanStats  []*ComplianceClusterOverallStats
	TotalCount *int32
}

func (b0 ListComplianceClusterOverallStatsResponse_builder) Build() *ListComplianceClusterOverallStatsResponse {
	m0 := &ListComplianceClusterOverallStatsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ScanStats = &b.ScanStats
	if b.TotalCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_TotalCount = *b.TotalCount
	}
	return m0
}

type ComplianceProfileResultsRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ProfileName *string                `protobuf:"bytes,1,opt,name=profile_name,json=profileName"`
	xxx_hidden_Query       *RawQuery              `protobuf:"bytes,2,opt,name=query"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceProfileResultsRequest) Reset() {
	*x = ComplianceProfileResultsRequest{}
	mi := &file_api_v2_compliance_common_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceProfileResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceProfileResultsRequest) ProtoMessage() {}

func (x *ComplianceProfileResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceProfileResultsRequest) GetProfileName() string {
	if x != nil {
		if x.xxx_hidden_ProfileName != nil {
			return *x.xxx_hidden_ProfileName
		}
		return ""
	}
	return ""
}

func (x *ComplianceProfileResultsRequest) GetQuery() *RawQuery {
	if x != nil {
		return x.xxx_hidden_Query
	}
	return nil
}

func (x *ComplianceProfileResultsRequest) SetProfileName(v string) {
	x.xxx_hidden_ProfileName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ComplianceProfileResultsRequest) SetQuery(v *RawQuery) {
	x.xxx_hidden_Query = v
}

func (x *ComplianceProfileResultsRequest) HasProfileName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceProfileResultsRequest) HasQuery() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Query != nil
}

func (x *ComplianceProfileResultsRequest) ClearProfileName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ProfileName = nil
}

func (x *ComplianceProfileResultsRequest) ClearQuery() {
	x.xxx_hidden_Query = nil
}

type ComplianceProfileResultsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ProfileName *string
	Query       *RawQuery
}

func (b0 ComplianceProfileResultsRequest_builder) Build() *ComplianceProfileResultsRequest {
	m0 := &ComplianceProfileResultsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ProfileName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ProfileName = b.ProfileName
	}
	x.xxx_hidden_Query = b.Query
	return m0
}

type ComplianceProfileCheckRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ProfileName *string                `protobuf:"bytes,1,opt,name=profile_name,json=profileName"`
	xxx_hidden_CheckName   *string                `protobuf:"bytes,2,opt,name=check_name,json=checkName"`
	xxx_hidden_Query       *RawQuery              `protobuf:"bytes,3,opt,name=query"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceProfileCheckRequest) Reset() {
	*x = ComplianceProfileCheckRequest{}
	mi := &file_api_v2_compliance_common_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceProfileCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceProfileCheckRequest) ProtoMessage() {}

func (x *ComplianceProfileCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceProfileCheckRequest) GetProfileName() string {
	if x != nil {
		if x.xxx_hidden_ProfileName != nil {
			return *x.xxx_hidden_ProfileName
		}
		return ""
	}
	return ""
}

func (x *ComplianceProfileCheckRequest) GetCheckName() string {
	if x != nil {
		if x.xxx_hidden_CheckName != nil {
			return *x.xxx_hidden_CheckName
		}
		return ""
	}
	return ""
}

func (x *ComplianceProfileCheckRequest) GetQuery() *RawQuery {
	if x != nil {
		return x.xxx_hidden_Query
	}
	return nil
}

func (x *ComplianceProfileCheckRequest) SetProfileName(v string) {
	x.xxx_hidden_ProfileName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ComplianceProfileCheckRequest) SetCheckName(v string) {
	x.xxx_hidden_CheckName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *ComplianceProfileCheckRequest) SetQuery(v *RawQuery) {
	x.xxx_hidden_Query = v
}

func (x *ComplianceProfileCheckRequest) HasProfileName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceProfileCheckRequest) HasCheckName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceProfileCheckRequest) HasQuery() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Query != nil
}

func (x *ComplianceProfileCheckRequest) ClearProfileName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ProfileName = nil
}

func (x *ComplianceProfileCheckRequest) ClearCheckName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_CheckName = nil
}

func (x *ComplianceProfileCheckRequest) ClearQuery() {
	x.xxx_hidden_Query = nil
}

type ComplianceProfileCheckRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ProfileName *string
	CheckName   *string
	Query       *RawQuery
}

func (b0 ComplianceProfileCheckRequest_builder) Build() *ComplianceProfileCheckRequest {
	m0 := &ComplianceProfileCheckRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ProfileName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_ProfileName = b.ProfileName
	}
	if b.CheckName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_CheckName = b.CheckName
	}
	x.xxx_hidden_Query = b.Query
	return m0
}

// Next Tag: 8
type ComplianceProfileSummary struct {
	state                     protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Name           *string                 `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_ProductType    *string                 `protobuf:"bytes,2,opt,name=product_type,json=productType"`
	xxx_hidden_Description    *string                 `protobuf:"bytes,3,opt,name=description"`
	xxx_hidden_Title          *string                 `protobuf:"bytes,4,opt,name=title"`
	xxx_hidden_RuleCount      int32                   `protobuf:"varint,5,opt,name=rule_count,json=ruleCount"`
	xxx_hidden_ProfileVersion *string                 `protobuf:"bytes,6,opt,name=profile_version,json=profileVersion"`
	xxx_hidden_Standards      *[]*ComplianceBenchmark `protobuf:"bytes,7,rep,name=standards"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ComplianceProfileSummary) Reset() {
	*x = ComplianceProfileSummary{}
	mi := &file_api_v2_compliance_common_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceProfileSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceProfileSummary) ProtoMessage() {}

func (x *ComplianceProfileSummary) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceProfileSummary) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *ComplianceProfileSummary) GetProductType() string {
	if x != nil {
		if x.xxx_hidden_ProductType != nil {
			return *x.xxx_hidden_ProductType
		}
		return ""
	}
	return ""
}

func (x *ComplianceProfileSummary) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *ComplianceProfileSummary) GetTitle() string {
	if x != nil {
		if x.xxx_hidden_Title != nil {
			return *x.xxx_hidden_Title
		}
		return ""
	}
	return ""
}

func (x *ComplianceProfileSummary) GetRuleCount() int32 {
	if x != nil {
		return x.xxx_hidden_RuleCount
	}
	return 0
}

func (x *ComplianceProfileSummary) GetProfileVersion() string {
	if x != nil {
		if x.xxx_hidden_ProfileVersion != nil {
			return *x.xxx_hidden_ProfileVersion
		}
		return ""
	}
	return ""
}

func (x *ComplianceProfileSummary) GetStandards() []*ComplianceBenchmark {
	if x != nil {
		if x.xxx_hidden_Standards != nil {
			return *x.xxx_hidden_Standards
		}
	}
	return nil
}

func (x *ComplianceProfileSummary) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *ComplianceProfileSummary) SetProductType(v string) {
	x.xxx_hidden_ProductType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 7)
}

func (x *ComplianceProfileSummary) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 7)
}

func (x *ComplianceProfileSummary) SetTitle(v string) {
	x.xxx_hidden_Title = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 7)
}

func (x *ComplianceProfileSummary) SetRuleCount(v int32) {
	x.xxx_hidden_RuleCount = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *ComplianceProfileSummary) SetProfileVersion(v string) {
	x.xxx_hidden_ProfileVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *ComplianceProfileSummary) SetStandards(v []*ComplianceBenchmark) {
	x.xxx_hidden_Standards = &v
}

func (x *ComplianceProfileSummary) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceProfileSummary) HasProductType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceProfileSummary) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ComplianceProfileSummary) HasTitle() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ComplianceProfileSummary) HasRuleCount() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ComplianceProfileSummary) HasProfileVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ComplianceProfileSummary) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *ComplianceProfileSummary) ClearProductType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ProductType = nil
}

func (x *ComplianceProfileSummary) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Description = nil
}

func (x *ComplianceProfileSummary) ClearTitle() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Title = nil
}

func (x *ComplianceProfileSummary) ClearRuleCount() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_RuleCount = 0
}

func (x *ComplianceProfileSummary) ClearProfileVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_ProfileVersion = nil
}

type ComplianceProfileSummary_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name           *string
	ProductType    *string
	Description    *string
	Title          *string
	RuleCount      *int32
	ProfileVersion *string
	Standards      []*ComplianceBenchmark
}

func (b0 ComplianceProfileSummary_builder) Build() *ComplianceProfileSummary {
	m0 := &ComplianceProfileSummary{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_Name = b.Name
	}
	if b.ProductType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 7)
		x.xxx_hidden_ProductType = b.ProductType
	}
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 7)
		x.xxx_hidden_Description = b.Description
	}
	if b.Title != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 7)
		x.xxx_hidden_Title = b.Title
	}
	if b.RuleCount != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_RuleCount = *b.RuleCount
	}
	if b.ProfileVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_ProfileVersion = b.ProfileVersion
	}
	x.xxx_hidden_Standards = &b.Standards
	return m0
}

type ComplianceRule_Fix struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Platform    *string                `protobuf:"bytes,1,opt,name=platform"`
	xxx_hidden_Disruption  *string                `protobuf:"bytes,2,opt,name=disruption"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ComplianceRule_Fix) Reset() {
	*x = ComplianceRule_Fix{}
	mi := &file_api_v2_compliance_common_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceRule_Fix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceRule_Fix) ProtoMessage() {}

func (x *ComplianceRule_Fix) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ComplianceRule_Fix) GetPlatform() string {
	if x != nil {
		if x.xxx_hidden_Platform != nil {
			return *x.xxx_hidden_Platform
		}
		return ""
	}
	return ""
}

func (x *ComplianceRule_Fix) GetDisruption() string {
	if x != nil {
		if x.xxx_hidden_Disruption != nil {
			return *x.xxx_hidden_Disruption
		}
		return ""
	}
	return ""
}

func (x *ComplianceRule_Fix) SetPlatform(v string) {
	x.xxx_hidden_Platform = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ComplianceRule_Fix) SetDisruption(v string) {
	x.xxx_hidden_Disruption = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *ComplianceRule_Fix) HasPlatform() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ComplianceRule_Fix) HasDisruption() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ComplianceRule_Fix) ClearPlatform() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Platform = nil
}

func (x *ComplianceRule_Fix) ClearDisruption() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Disruption = nil
}

type ComplianceRule_Fix_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Platform   *string
	Disruption *string
}

func (b0 ComplianceRule_Fix_builder) Build() *ComplianceRule_Fix {
	m0 := &ComplianceRule_Fix{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Platform != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Platform = b.Platform
	}
	if b.Disruption != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Disruption = b.Disruption
	}
	return m0
}

var File_api_v2_compliance_common_proto protoreflect.FileDescriptor

const file_api_v2_compliance_common_proto_rawDesc = "" +
	"\n" +
	"\x1eapi/v2/compliance_common.proto\x12\x02v2\x1a\x19api/v2/search_query.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a!google/protobuf/go_features.proto\"\xe8\x03\n" +
	"\x0eComplianceRule\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\trule_type\x18\x03 \x01(\tR\bruleType\x12\x1a\n" +
	"\bseverity\x18\x04 \x01(\tR\bseverity\x12\x1a\n" +
	"\bstandard\x18\x05 \x01(\tR\bstandard\x12\x18\n" +
	"\acontrol\x18\x06 \x01(\tR\acontrol\x12\x14\n" +
	"\x05title\x18\a \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\b \x01(\tR\vdescription\x12\x1c\n" +
	"\trationale\x18\t \x01(\tR\trationale\x12,\n" +
	"\x05fixes\x18\n" +
	" \x03(\v2\x16.v2.ComplianceRule.FixR\x05fixes\x12\x0e\n" +
	"\x02id\x18\v \x01(\tR\x02id\x12\x17\n" +
	"\arule_id\x18\f \x01(\tR\x06ruleId\x12\x1f\n" +
	"\vparent_rule\x18\r \x01(\tR\n" +
	"parentRule\x12\"\n" +
	"\finstructions\x18\x0e \x01(\tR\finstructions\x12\x18\n" +
	"\awarning\x18\x0f \x01(\tR\awarning\x1aA\n" +
	"\x03Fix\x12\x1a\n" +
	"\bplatform\x18\x01 \x01(\tR\bplatform\x12\x1e\n" +
	"\n" +
	"disruption\x18\x02 \x01(\tR\n" +
	"disruptionJ\x04\b\x02\x10\x03\"Y\n" +
	"\x15ComplianceScanCluster\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12!\n" +
	"\fcluster_name\x18\x02 \x01(\tR\vclusterName\"e\n" +
	"\x1aComplianceCheckStatusCount\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x121\n" +
	"\x06status\x18\x02 \x01(\x0e2\x19.v2.ComplianceCheckStatusR\x06status\"\xf0\x01\n" +
	" ComplianceCheckResultStatusCount\x12\x1d\n" +
	"\n" +
	"check_name\x18\x01 \x01(\tR\tcheckName\x12\x1c\n" +
	"\trationale\x18\x02 \x01(\tR\trationale\x12\x1b\n" +
	"\trule_name\x18\x03 \x01(\tR\bruleName\x12?\n" +
	"\vcheck_stats\x18\x04 \x03(\v2\x1e.v2.ComplianceCheckStatusCountR\n" +
	"checkStats\x121\n" +
	"\bcontrols\x18\x05 \x03(\v2\x15.v2.ComplianceControlR\bcontrols\"I\n" +
	"\x11ComplianceControl\x12\x1a\n" +
	"\bstandard\x18\x01 \x01(\tR\bstandard\x12\x18\n" +
	"\acontrol\x18\x02 \x01(\tR\acontrol\"\xa0\x01\n" +
	"\x13ComplianceBenchmark\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1a\n" +
	"\bprovider\x18\x04 \x01(\tR\bprovider\x12\x1d\n" +
	"\n" +
	"short_name\x18\x05 \x01(\tR\tshortName\"\xb1\x01\n" +
	"\x1cListComplianceProfileResults\x12M\n" +
	"\x0fprofile_results\x18\x01 \x03(\v2$.v2.ComplianceCheckResultStatusCountR\x0eprofileResults\x12!\n" +
	"\fprofile_name\x18\x02 \x01(\tR\vprofileName\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\xfe\x01\n" +
	"\x1dComplianceClusterOverallStats\x123\n" +
	"\acluster\x18\x01 \x01(\v2\x19.v2.ComplianceScanClusterR\acluster\x12?\n" +
	"\vcheck_stats\x18\x02 \x03(\v2\x1e.v2.ComplianceCheckStatusCountR\n" +
	"checkStats\x12%\n" +
	"\x0ecluster_errors\x18\x03 \x03(\tR\rclusterErrors\x12@\n" +
	"\x0elast_scan_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\flastScanTime\"\x8e\x01\n" +
	")ListComplianceClusterOverallStatsResponse\x12@\n" +
	"\n" +
	"scan_stats\x18\x01 \x03(\v2!.v2.ComplianceClusterOverallStatsR\tscanStats\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"h\n" +
	"\x1fComplianceProfileResultsRequest\x12!\n" +
	"\fprofile_name\x18\x01 \x01(\tR\vprofileName\x12\"\n" +
	"\x05query\x18\x02 \x01(\v2\f.v2.RawQueryR\x05query\"\x85\x01\n" +
	"\x1dComplianceProfileCheckRequest\x12!\n" +
	"\fprofile_name\x18\x01 \x01(\tR\vprofileName\x12\x1d\n" +
	"\n" +
	"check_name\x18\x02 \x01(\tR\tcheckName\x12\"\n" +
	"\x05query\x18\x03 \x01(\v2\f.v2.RawQueryR\x05query\"\x88\x02\n" +
	"\x18ComplianceProfileSummary\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\fproduct_type\x18\x02 \x01(\tR\vproductType\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12\x1d\n" +
	"\n" +
	"rule_count\x18\x05 \x01(\x05R\truleCount\x12'\n" +
	"\x0fprofile_version\x18\x06 \x01(\tR\x0eprofileVersion\x125\n" +
	"\tstandards\x18\a \x03(\v2\x17.v2.ComplianceBenchmarkR\tstandards*\x8a\x01\n" +
	"\x15ComplianceCheckStatus\x12\x16\n" +
	"\x12UNSET_CHECK_STATUS\x10\x00\x12\b\n" +
	"\x04PASS\x10\x01\x12\b\n" +
	"\x04FAIL\x10\x02\x12\t\n" +
	"\x05ERROR\x10\x03\x12\b\n" +
	"\x04INFO\x10\x04\x12\n" +
	"\n" +
	"\x06MANUAL\x10\x05\x12\x12\n" +
	"\x0eNOT_APPLICABLE\x10\x06\x12\x10\n" +
	"\fINCONSISTENT\x10\aB/\n" +
	"\x18io.stackrox.proto.api.v2Z\v./api/v2;v2\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_api_v2_compliance_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v2_compliance_common_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_v2_compliance_common_proto_goTypes = []any{
	(ComplianceCheckStatus)(0),                        // 0: v2.ComplianceCheckStatus
	(*ComplianceRule)(nil),                            // 1: v2.ComplianceRule
	(*ComplianceScanCluster)(nil),                     // 2: v2.ComplianceScanCluster
	(*ComplianceCheckStatusCount)(nil),                // 3: v2.ComplianceCheckStatusCount
	(*ComplianceCheckResultStatusCount)(nil),          // 4: v2.ComplianceCheckResultStatusCount
	(*ComplianceControl)(nil),                         // 5: v2.ComplianceControl
	(*ComplianceBenchmark)(nil),                       // 6: v2.ComplianceBenchmark
	(*ListComplianceProfileResults)(nil),              // 7: v2.ListComplianceProfileResults
	(*ComplianceClusterOverallStats)(nil),             // 8: v2.ComplianceClusterOverallStats
	(*ListComplianceClusterOverallStatsResponse)(nil), // 9: v2.ListComplianceClusterOverallStatsResponse
	(*ComplianceProfileResultsRequest)(nil),           // 10: v2.ComplianceProfileResultsRequest
	(*ComplianceProfileCheckRequest)(nil),             // 11: v2.ComplianceProfileCheckRequest
	(*ComplianceProfileSummary)(nil),                  // 12: v2.ComplianceProfileSummary
	(*ComplianceRule_Fix)(nil),                        // 13: v2.ComplianceRule.Fix
	(*timestamppb.Timestamp)(nil),                     // 14: google.protobuf.Timestamp
	(*RawQuery)(nil),                                  // 15: v2.RawQuery
}
var file_api_v2_compliance_common_proto_depIdxs = []int32{
	13, // 0: v2.ComplianceRule.fixes:type_name -> v2.ComplianceRule.Fix
	0,  // 1: v2.ComplianceCheckStatusCount.status:type_name -> v2.ComplianceCheckStatus
	3,  // 2: v2.ComplianceCheckResultStatusCount.check_stats:type_name -> v2.ComplianceCheckStatusCount
	5,  // 3: v2.ComplianceCheckResultStatusCount.controls:type_name -> v2.ComplianceControl
	4,  // 4: v2.ListComplianceProfileResults.profile_results:type_name -> v2.ComplianceCheckResultStatusCount
	2,  // 5: v2.ComplianceClusterOverallStats.cluster:type_name -> v2.ComplianceScanCluster
	3,  // 6: v2.ComplianceClusterOverallStats.check_stats:type_name -> v2.ComplianceCheckStatusCount
	14, // 7: v2.ComplianceClusterOverallStats.last_scan_time:type_name -> google.protobuf.Timestamp
	8,  // 8: v2.ListComplianceClusterOverallStatsResponse.scan_stats:type_name -> v2.ComplianceClusterOverallStats
	15, // 9: v2.ComplianceProfileResultsRequest.query:type_name -> v2.RawQuery
	15, // 10: v2.ComplianceProfileCheckRequest.query:type_name -> v2.RawQuery
	6,  // 11: v2.ComplianceProfileSummary.standards:type_name -> v2.ComplianceBenchmark
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_v2_compliance_common_proto_init() }
func file_api_v2_compliance_common_proto_init() {
	if File_api_v2_compliance_common_proto != nil {
		return
	}
	file_api_v2_search_query_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v2_compliance_common_proto_rawDesc), len(file_api_v2_compliance_common_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v2_compliance_common_proto_goTypes,
		DependencyIndexes: file_api_v2_compliance_common_proto_depIdxs,
		EnumInfos:         file_api_v2_compliance_common_proto_enumTypes,
		MessageInfos:      file_api_v2_compliance_common_proto_msgTypes,
	}.Build()
	File_api_v2_compliance_common_proto = out.File
	file_api_v2_compliance_common_proto_goTypes = nil
	file_api_v2_compliance_common_proto_depIdxs = nil
}
