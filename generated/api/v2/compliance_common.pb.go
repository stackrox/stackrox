// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.3
// source: api/v2/compliance_common.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComplianceCheckStatus int32

const (
	ComplianceCheckStatus_UNSET_CHECK_STATUS ComplianceCheckStatus = 0
	ComplianceCheckStatus_PASS               ComplianceCheckStatus = 1
	ComplianceCheckStatus_FAIL               ComplianceCheckStatus = 2
	ComplianceCheckStatus_ERROR              ComplianceCheckStatus = 3
	ComplianceCheckStatus_INFO               ComplianceCheckStatus = 4
	ComplianceCheckStatus_MANUAL             ComplianceCheckStatus = 5
	ComplianceCheckStatus_NOT_APPLICABLE     ComplianceCheckStatus = 6
	ComplianceCheckStatus_INCONSISTENT       ComplianceCheckStatus = 7
)

// Enum value maps for ComplianceCheckStatus.
var (
	ComplianceCheckStatus_name = map[int32]string{
		0: "UNSET_CHECK_STATUS",
		1: "PASS",
		2: "FAIL",
		3: "ERROR",
		4: "INFO",
		5: "MANUAL",
		6: "NOT_APPLICABLE",
		7: "INCONSISTENT",
	}
	ComplianceCheckStatus_value = map[string]int32{
		"UNSET_CHECK_STATUS": 0,
		"PASS":               1,
		"FAIL":               2,
		"ERROR":              3,
		"INFO":               4,
		"MANUAL":             5,
		"NOT_APPLICABLE":     6,
		"INCONSISTENT":       7,
	}
)

func (x ComplianceCheckStatus) Enum() *ComplianceCheckStatus {
	p := new(ComplianceCheckStatus)
	*p = x
	return p
}

func (x ComplianceCheckStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComplianceCheckStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v2_compliance_common_proto_enumTypes[0].Descriptor()
}

func (ComplianceCheckStatus) Type() protoreflect.EnumType {
	return &file_api_v2_compliance_common_proto_enumTypes[0]
}

func (x ComplianceCheckStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComplianceCheckStatus.Descriptor instead.
func (ComplianceCheckStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_v2_compliance_common_proto_rawDescGZIP(), []int{0}
}

type ComplianceRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RuleType     string                `protobuf:"bytes,3,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`
	Severity     string                `protobuf:"bytes,4,opt,name=severity,proto3" json:"severity,omitempty"`
	Standard     string                `protobuf:"bytes,5,opt,name=standard,proto3" json:"standard,omitempty"`
	Control      string                `protobuf:"bytes,6,opt,name=control,proto3" json:"control,omitempty"`
	Title        string                `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	Description  string                `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Rationale    string                `protobuf:"bytes,9,opt,name=rationale,proto3" json:"rationale,omitempty"`
	Fixes        []*ComplianceRule_Fix `protobuf:"bytes,10,rep,name=fixes,proto3" json:"fixes,omitempty"`
	Id           string                `protobuf:"bytes,11,opt,name=id,proto3" json:"id,omitempty"`
	RuleId       string                `protobuf:"bytes,12,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	ParentRule   string                `protobuf:"bytes,13,opt,name=parent_rule,json=parentRule,proto3" json:"parent_rule,omitempty"`
	Instructions string                `protobuf:"bytes,14,opt,name=instructions,proto3" json:"instructions,omitempty"`
	Warning      string                `protobuf:"bytes,15,opt,name=warning,proto3" json:"warning,omitempty"`
}

func (x *ComplianceRule) Reset() {
	*x = ComplianceRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceRule) ProtoMessage() {}

func (x *ComplianceRule) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceRule.ProtoReflect.Descriptor instead.
func (*ComplianceRule) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_common_proto_rawDescGZIP(), []int{0}
}

func (x *ComplianceRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComplianceRule) GetRuleType() string {
	if x != nil {
		return x.RuleType
	}
	return ""
}

func (x *ComplianceRule) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *ComplianceRule) GetStandard() string {
	if x != nil {
		return x.Standard
	}
	return ""
}

func (x *ComplianceRule) GetControl() string {
	if x != nil {
		return x.Control
	}
	return ""
}

func (x *ComplianceRule) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ComplianceRule) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ComplianceRule) GetRationale() string {
	if x != nil {
		return x.Rationale
	}
	return ""
}

func (x *ComplianceRule) GetFixes() []*ComplianceRule_Fix {
	if x != nil {
		return x.Fixes
	}
	return nil
}

func (x *ComplianceRule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComplianceRule) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *ComplianceRule) GetParentRule() string {
	if x != nil {
		return x.ParentRule
	}
	return ""
}

func (x *ComplianceRule) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

func (x *ComplianceRule) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

type ComplianceScanCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId   string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	ClusterName string `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
}

func (x *ComplianceScanCluster) Reset() {
	*x = ComplianceScanCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceScanCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceScanCluster) ProtoMessage() {}

func (x *ComplianceScanCluster) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceScanCluster.ProtoReflect.Descriptor instead.
func (*ComplianceScanCluster) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_common_proto_rawDescGZIP(), []int{1}
}

func (x *ComplianceScanCluster) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ComplianceScanCluster) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

// Group the number of occurrences by status
type ComplianceCheckStatusCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count  int32                 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Status ComplianceCheckStatus `protobuf:"varint,2,opt,name=status,proto3,enum=v2.ComplianceCheckStatus" json:"status,omitempty"`
}

func (x *ComplianceCheckStatusCount) Reset() {
	*x = ComplianceCheckStatusCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceCheckStatusCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceCheckStatusCount) ProtoMessage() {}

func (x *ComplianceCheckStatusCount) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceCheckStatusCount.ProtoReflect.Descriptor instead.
func (*ComplianceCheckStatusCount) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_common_proto_rawDescGZIP(), []int{2}
}

func (x *ComplianceCheckStatusCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ComplianceCheckStatusCount) GetStatus() ComplianceCheckStatus {
	if x != nil {
		return x.Status
	}
	return ComplianceCheckStatus_UNSET_CHECK_STATUS
}

// Group the number of occurrences by status
type ComplianceCheckResultStatusCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckName  string                        `protobuf:"bytes,1,opt,name=check_name,json=checkName,proto3" json:"check_name,omitempty"`
	Rationale  string                        `protobuf:"bytes,2,opt,name=rationale,proto3" json:"rationale,omitempty"`
	RuleName   string                        `protobuf:"bytes,3,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	CheckStats []*ComplianceCheckStatusCount `protobuf:"bytes,4,rep,name=check_stats,json=checkStats,proto3" json:"check_stats,omitempty"`
	Controls   []*ComplianceControl          `protobuf:"bytes,5,rep,name=controls,proto3" json:"controls,omitempty"`
}

func (x *ComplianceCheckResultStatusCount) Reset() {
	*x = ComplianceCheckResultStatusCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceCheckResultStatusCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceCheckResultStatusCount) ProtoMessage() {}

func (x *ComplianceCheckResultStatusCount) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceCheckResultStatusCount.ProtoReflect.Descriptor instead.
func (*ComplianceCheckResultStatusCount) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_common_proto_rawDescGZIP(), []int{3}
}

func (x *ComplianceCheckResultStatusCount) GetCheckName() string {
	if x != nil {
		return x.CheckName
	}
	return ""
}

func (x *ComplianceCheckResultStatusCount) GetRationale() string {
	if x != nil {
		return x.Rationale
	}
	return ""
}

func (x *ComplianceCheckResultStatusCount) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *ComplianceCheckResultStatusCount) GetCheckStats() []*ComplianceCheckStatusCount {
	if x != nil {
		return x.CheckStats
	}
	return nil
}

func (x *ComplianceCheckResultStatusCount) GetControls() []*ComplianceControl {
	if x != nil {
		return x.Controls
	}
	return nil
}

type ComplianceControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Standard string `protobuf:"bytes,1,opt,name=standard,proto3" json:"standard,omitempty"`
	Control  string `protobuf:"bytes,2,opt,name=control,proto3" json:"control,omitempty"`
}

func (x *ComplianceControl) Reset() {
	*x = ComplianceControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceControl) ProtoMessage() {}

func (x *ComplianceControl) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceControl.ProtoReflect.Descriptor instead.
func (*ComplianceControl) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_common_proto_rawDescGZIP(), []int{4}
}

func (x *ComplianceControl) GetStandard() string {
	if x != nil {
		return x.Standard
	}
	return ""
}

func (x *ComplianceControl) GetControl() string {
	if x != nil {
		return x.Control
	}
	return ""
}

type ComplianceBenchmark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version     string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Provider    string `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	// This is extracted from the annotation.
	// Example: from https://control.compliance.openshift.io/CIS-OCP we should have CIS-OCP
	ShortName string `protobuf:"bytes,5,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
}

func (x *ComplianceBenchmark) Reset() {
	*x = ComplianceBenchmark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceBenchmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceBenchmark) ProtoMessage() {}

func (x *ComplianceBenchmark) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceBenchmark.ProtoReflect.Descriptor instead.
func (*ComplianceBenchmark) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_common_proto_rawDescGZIP(), []int{5}
}

func (x *ComplianceBenchmark) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComplianceBenchmark) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ComplianceBenchmark) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ComplianceBenchmark) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ComplianceBenchmark) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

// ListComplianceProfileResults provides scan stats overview based on profile
type ListComplianceProfileResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileResults []*ComplianceCheckResultStatusCount `protobuf:"bytes,1,rep,name=profile_results,json=profileResults,proto3" json:"profile_results,omitempty"`
	ProfileName    string                              `protobuf:"bytes,2,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	TotalCount     int32                               `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListComplianceProfileResults) Reset() {
	*x = ListComplianceProfileResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComplianceProfileResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComplianceProfileResults) ProtoMessage() {}

func (x *ListComplianceProfileResults) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComplianceProfileResults.ProtoReflect.Descriptor instead.
func (*ListComplianceProfileResults) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_common_proto_rawDescGZIP(), []int{6}
}

func (x *ListComplianceProfileResults) GetProfileResults() []*ComplianceCheckResultStatusCount {
	if x != nil {
		return x.ProfileResults
	}
	return nil
}

func (x *ListComplianceProfileResults) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *ListComplianceProfileResults) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// ComplianceClusterOverallStats provides overall stats for cluster
type ComplianceClusterOverallStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster       *ComplianceScanCluster        `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	CheckStats    []*ComplianceCheckStatusCount `protobuf:"bytes,2,rep,name=check_stats,json=checkStats,proto3" json:"check_stats,omitempty"`
	ClusterErrors []string                      `protobuf:"bytes,3,rep,name=cluster_errors,json=clusterErrors,proto3" json:"cluster_errors,omitempty"`
	LastScanTime  *timestamppb.Timestamp        `protobuf:"bytes,4,opt,name=last_scan_time,json=lastScanTime,proto3" json:"last_scan_time,omitempty"`
}

func (x *ComplianceClusterOverallStats) Reset() {
	*x = ComplianceClusterOverallStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceClusterOverallStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceClusterOverallStats) ProtoMessage() {}

func (x *ComplianceClusterOverallStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceClusterOverallStats.ProtoReflect.Descriptor instead.
func (*ComplianceClusterOverallStats) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_common_proto_rawDescGZIP(), []int{7}
}

func (x *ComplianceClusterOverallStats) GetCluster() *ComplianceScanCluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *ComplianceClusterOverallStats) GetCheckStats() []*ComplianceCheckStatusCount {
	if x != nil {
		return x.CheckStats
	}
	return nil
}

func (x *ComplianceClusterOverallStats) GetClusterErrors() []string {
	if x != nil {
		return x.ClusterErrors
	}
	return nil
}

func (x *ComplianceClusterOverallStats) GetLastScanTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastScanTime
	}
	return nil
}

// ListComplianceCheckScanStatsResponse provides stats per cluster
type ListComplianceClusterOverallStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScanStats  []*ComplianceClusterOverallStats `protobuf:"bytes,1,rep,name=scan_stats,json=scanStats,proto3" json:"scan_stats,omitempty"`
	TotalCount int32                            `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *ListComplianceClusterOverallStatsResponse) Reset() {
	*x = ListComplianceClusterOverallStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComplianceClusterOverallStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComplianceClusterOverallStatsResponse) ProtoMessage() {}

func (x *ListComplianceClusterOverallStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComplianceClusterOverallStatsResponse.ProtoReflect.Descriptor instead.
func (*ListComplianceClusterOverallStatsResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_common_proto_rawDescGZIP(), []int{8}
}

func (x *ListComplianceClusterOverallStatsResponse) GetScanStats() []*ComplianceClusterOverallStats {
	if x != nil {
		return x.ScanStats
	}
	return nil
}

func (x *ListComplianceClusterOverallStatsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ComplianceProfileResultsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileName string    `protobuf:"bytes,1,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	Query       *RawQuery `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ComplianceProfileResultsRequest) Reset() {
	*x = ComplianceProfileResultsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceProfileResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceProfileResultsRequest) ProtoMessage() {}

func (x *ComplianceProfileResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceProfileResultsRequest.ProtoReflect.Descriptor instead.
func (*ComplianceProfileResultsRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_common_proto_rawDescGZIP(), []int{9}
}

func (x *ComplianceProfileResultsRequest) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *ComplianceProfileResultsRequest) GetQuery() *RawQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

type ComplianceProfileCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileName string    `protobuf:"bytes,1,opt,name=profile_name,json=profileName,proto3" json:"profile_name,omitempty"`
	CheckName   string    `protobuf:"bytes,2,opt,name=check_name,json=checkName,proto3" json:"check_name,omitempty"`
	Query       *RawQuery `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ComplianceProfileCheckRequest) Reset() {
	*x = ComplianceProfileCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceProfileCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceProfileCheckRequest) ProtoMessage() {}

func (x *ComplianceProfileCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceProfileCheckRequest.ProtoReflect.Descriptor instead.
func (*ComplianceProfileCheckRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_common_proto_rawDescGZIP(), []int{10}
}

func (x *ComplianceProfileCheckRequest) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *ComplianceProfileCheckRequest) GetCheckName() string {
	if x != nil {
		return x.CheckName
	}
	return ""
}

func (x *ComplianceProfileCheckRequest) GetQuery() *RawQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

// Next Tag: 8
type ComplianceProfileSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ProductType    string                 `protobuf:"bytes,2,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Title          string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	RuleCount      int32                  `protobuf:"varint,5,opt,name=rule_count,json=ruleCount,proto3" json:"rule_count,omitempty"`
	ProfileVersion string                 `protobuf:"bytes,6,opt,name=profile_version,json=profileVersion,proto3" json:"profile_version,omitempty"`
	Standards      []*ComplianceBenchmark `protobuf:"bytes,7,rep,name=standards,proto3" json:"standards,omitempty"`
}

func (x *ComplianceProfileSummary) Reset() {
	*x = ComplianceProfileSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceProfileSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceProfileSummary) ProtoMessage() {}

func (x *ComplianceProfileSummary) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceProfileSummary.ProtoReflect.Descriptor instead.
func (*ComplianceProfileSummary) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_common_proto_rawDescGZIP(), []int{11}
}

func (x *ComplianceProfileSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComplianceProfileSummary) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *ComplianceProfileSummary) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ComplianceProfileSummary) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ComplianceProfileSummary) GetRuleCount() int32 {
	if x != nil {
		return x.RuleCount
	}
	return 0
}

func (x *ComplianceProfileSummary) GetProfileVersion() string {
	if x != nil {
		return x.ProfileVersion
	}
	return ""
}

func (x *ComplianceProfileSummary) GetStandards() []*ComplianceBenchmark {
	if x != nil {
		return x.Standards
	}
	return nil
}

type ComplianceRule_Fix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform   string `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	Disruption string `protobuf:"bytes,2,opt,name=disruption,proto3" json:"disruption,omitempty"`
}

func (x *ComplianceRule_Fix) Reset() {
	*x = ComplianceRule_Fix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_compliance_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplianceRule_Fix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceRule_Fix) ProtoMessage() {}

func (x *ComplianceRule_Fix) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_compliance_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceRule_Fix.ProtoReflect.Descriptor instead.
func (*ComplianceRule_Fix) Descriptor() ([]byte, []int) {
	return file_api_v2_compliance_common_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ComplianceRule_Fix) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ComplianceRule_Fix) GetDisruption() string {
	if x != nil {
		return x.Disruption
	}
	return ""
}

var File_api_v2_compliance_common_proto protoreflect.FileDescriptor

var file_api_v2_compliance_common_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x76, 0x32, 0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xe8, 0x03, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x05,
	0x66, 0x69, 0x78, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x2e,
	0x46, 0x69, 0x78, 0x52, 0x05, 0x66, 0x69, 0x78, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x75,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x1a, 0x41, 0x0a, 0x03, 0x46, 0x69, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x72, 0x75, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x72, 0x75,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x59, 0x0a, 0x15, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69,
	0x61, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xf0, 0x01,
	0x0a, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0b,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x31, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x73,
	0x22, 0x49, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22, 0xa0, 0x01, 0x0a, 0x13,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb1,
	0x01, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x4d, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xfe, 0x01, 0x0a, 0x1d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x12, 0x40, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x29, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x76, 0x65,
	0x72, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x0a, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x76, 0x65, 0x72,
	0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x68, 0x0a, 0x1f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x61, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x85,
	0x01, 0x0a, 0x1d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x77, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x88, 0x02, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x65, 0x6e,
	0x63, 0x68, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x09, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x73, 0x2a, 0x8a, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x55,
	0x4e, 0x53, 0x45, 0x54, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x41, 0x53, 0x53, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06,
	0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x54, 0x5f,
	0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c,
	0x49, 0x4e, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x07, 0x42, 0x27,
	0x0a, 0x18, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x72, 0x6f, 0x78, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x5a, 0x0b, 0x2e, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x32, 0x3b, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v2_compliance_common_proto_rawDescOnce sync.Once
	file_api_v2_compliance_common_proto_rawDescData = file_api_v2_compliance_common_proto_rawDesc
)

func file_api_v2_compliance_common_proto_rawDescGZIP() []byte {
	file_api_v2_compliance_common_proto_rawDescOnce.Do(func() {
		file_api_v2_compliance_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v2_compliance_common_proto_rawDescData)
	})
	return file_api_v2_compliance_common_proto_rawDescData
}

var file_api_v2_compliance_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v2_compliance_common_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_api_v2_compliance_common_proto_goTypes = []any{
	(ComplianceCheckStatus)(0),                        // 0: v2.ComplianceCheckStatus
	(*ComplianceRule)(nil),                            // 1: v2.ComplianceRule
	(*ComplianceScanCluster)(nil),                     // 2: v2.ComplianceScanCluster
	(*ComplianceCheckStatusCount)(nil),                // 3: v2.ComplianceCheckStatusCount
	(*ComplianceCheckResultStatusCount)(nil),          // 4: v2.ComplianceCheckResultStatusCount
	(*ComplianceControl)(nil),                         // 5: v2.ComplianceControl
	(*ComplianceBenchmark)(nil),                       // 6: v2.ComplianceBenchmark
	(*ListComplianceProfileResults)(nil),              // 7: v2.ListComplianceProfileResults
	(*ComplianceClusterOverallStats)(nil),             // 8: v2.ComplianceClusterOverallStats
	(*ListComplianceClusterOverallStatsResponse)(nil), // 9: v2.ListComplianceClusterOverallStatsResponse
	(*ComplianceProfileResultsRequest)(nil),           // 10: v2.ComplianceProfileResultsRequest
	(*ComplianceProfileCheckRequest)(nil),             // 11: v2.ComplianceProfileCheckRequest
	(*ComplianceProfileSummary)(nil),                  // 12: v2.ComplianceProfileSummary
	(*ComplianceRule_Fix)(nil),                        // 13: v2.ComplianceRule.Fix
	(*timestamppb.Timestamp)(nil),                     // 14: google.protobuf.Timestamp
	(*RawQuery)(nil),                                  // 15: v2.RawQuery
}
var file_api_v2_compliance_common_proto_depIdxs = []int32{
	13, // 0: v2.ComplianceRule.fixes:type_name -> v2.ComplianceRule.Fix
	0,  // 1: v2.ComplianceCheckStatusCount.status:type_name -> v2.ComplianceCheckStatus
	3,  // 2: v2.ComplianceCheckResultStatusCount.check_stats:type_name -> v2.ComplianceCheckStatusCount
	5,  // 3: v2.ComplianceCheckResultStatusCount.controls:type_name -> v2.ComplianceControl
	4,  // 4: v2.ListComplianceProfileResults.profile_results:type_name -> v2.ComplianceCheckResultStatusCount
	2,  // 5: v2.ComplianceClusterOverallStats.cluster:type_name -> v2.ComplianceScanCluster
	3,  // 6: v2.ComplianceClusterOverallStats.check_stats:type_name -> v2.ComplianceCheckStatusCount
	14, // 7: v2.ComplianceClusterOverallStats.last_scan_time:type_name -> google.protobuf.Timestamp
	8,  // 8: v2.ListComplianceClusterOverallStatsResponse.scan_stats:type_name -> v2.ComplianceClusterOverallStats
	15, // 9: v2.ComplianceProfileResultsRequest.query:type_name -> v2.RawQuery
	15, // 10: v2.ComplianceProfileCheckRequest.query:type_name -> v2.RawQuery
	6,  // 11: v2.ComplianceProfileSummary.standards:type_name -> v2.ComplianceBenchmark
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_v2_compliance_common_proto_init() }
func file_api_v2_compliance_common_proto_init() {
	if File_api_v2_compliance_common_proto != nil {
		return
	}
	file_api_v2_search_query_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v2_compliance_common_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ComplianceRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_common_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ComplianceScanCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_common_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ComplianceCheckStatusCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_common_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ComplianceCheckResultStatusCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_common_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ComplianceControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_common_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ComplianceBenchmark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_common_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListComplianceProfileResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_common_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ComplianceClusterOverallStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_common_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListComplianceClusterOverallStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_common_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ComplianceProfileResultsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_common_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ComplianceProfileCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_common_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ComplianceProfileSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_compliance_common_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ComplianceRule_Fix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v2_compliance_common_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v2_compliance_common_proto_goTypes,
		DependencyIndexes: file_api_v2_compliance_common_proto_depIdxs,
		EnumInfos:         file_api_v2_compliance_common_proto_enumTypes,
		MessageInfos:      file_api_v2_compliance_common_proto_msgTypes,
	}.Build()
	File_api_v2_compliance_common_proto = out.File
	file_api_v2_compliance_common_proto_rawDesc = nil
	file_api_v2_compliance_common_proto_goTypes = nil
	file_api_v2_compliance_common_proto_depIdxs = nil
}
