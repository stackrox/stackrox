// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/v2/common.proto

//go:build !protoopaque

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Schedule_IntervalType int32

const (
	Schedule_UNSET   Schedule_IntervalType = 0
	Schedule_WEEKLY  Schedule_IntervalType = 1
	Schedule_MONTHLY Schedule_IntervalType = 2
	Schedule_DAILY   Schedule_IntervalType = 3
)

// Enum value maps for Schedule_IntervalType.
var (
	Schedule_IntervalType_name = map[int32]string{
		0: "UNSET",
		1: "WEEKLY",
		2: "MONTHLY",
		3: "DAILY",
	}
	Schedule_IntervalType_value = map[string]int32{
		"UNSET":   0,
		"WEEKLY":  1,
		"MONTHLY": 2,
		"DAILY":   3,
	}
)

func (x Schedule_IntervalType) Enum() *Schedule_IntervalType {
	p := new(Schedule_IntervalType)
	*p = x
	return p
}

func (x Schedule_IntervalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Schedule_IntervalType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v2_common_proto_enumTypes[0].Descriptor()
}

func (Schedule_IntervalType) Type() protoreflect.EnumType {
	return &file_api_v2_common_proto_enumTypes[0]
}

func (x Schedule_IntervalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ResourceByID struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Id            *string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceByID) Reset() {
	*x = ResourceByID{}
	mi := &file_api_v2_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceByID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceByID) ProtoMessage() {}

func (x *ResourceByID) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ResourceByID) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ResourceByID) SetId(v string) {
	x.Id = &v
}

func (x *ResourceByID) HasId() bool {
	if x == nil {
		return false
	}
	return x.Id != nil
}

func (x *ResourceByID) ClearId() {
	x.Id = nil
}

type ResourceByID_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id *string
}

func (b0 ResourceByID_builder) Build() *ResourceByID {
	m0 := &ResourceByID{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	return m0
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_api_v2_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type Empty_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 Empty_builder) Build() *Empty {
	m0 := &Empty{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Schedule struct {
	state        protoimpl.MessageState `protogen:"hybrid.v1"`
	IntervalType *Schedule_IntervalType `protobuf:"varint,1,opt,name=interval_type,json=intervalType,enum=v2.Schedule_IntervalType" json:"interval_type,omitempty"`
	Hour         *int32                 `protobuf:"varint,2,opt,name=hour" json:"hour,omitempty"`
	Minute       *int32                 `protobuf:"varint,3,opt,name=minute" json:"minute,omitempty"`
	// Types that are valid to be assigned to Interval:
	//
	//	*Schedule_DaysOfWeek_
	//	*Schedule_DaysOfMonth_
	Interval      isSchedule_Interval `protobuf_oneof:"Interval"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	mi := &file_api_v2_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Schedule) GetIntervalType() Schedule_IntervalType {
	if x != nil && x.IntervalType != nil {
		return *x.IntervalType
	}
	return Schedule_UNSET
}

func (x *Schedule) GetHour() int32 {
	if x != nil && x.Hour != nil {
		return *x.Hour
	}
	return 0
}

func (x *Schedule) GetMinute() int32 {
	if x != nil && x.Minute != nil {
		return *x.Minute
	}
	return 0
}

func (x *Schedule) GetInterval() isSchedule_Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *Schedule) GetDaysOfWeek() *Schedule_DaysOfWeek {
	if x != nil {
		if x, ok := x.Interval.(*Schedule_DaysOfWeek_); ok {
			return x.DaysOfWeek
		}
	}
	return nil
}

func (x *Schedule) GetDaysOfMonth() *Schedule_DaysOfMonth {
	if x != nil {
		if x, ok := x.Interval.(*Schedule_DaysOfMonth_); ok {
			return x.DaysOfMonth
		}
	}
	return nil
}

func (x *Schedule) SetIntervalType(v Schedule_IntervalType) {
	x.IntervalType = &v
}

func (x *Schedule) SetHour(v int32) {
	x.Hour = &v
}

func (x *Schedule) SetMinute(v int32) {
	x.Minute = &v
}

func (x *Schedule) SetDaysOfWeek(v *Schedule_DaysOfWeek) {
	if v == nil {
		x.Interval = nil
		return
	}
	x.Interval = &Schedule_DaysOfWeek_{v}
}

func (x *Schedule) SetDaysOfMonth(v *Schedule_DaysOfMonth) {
	if v == nil {
		x.Interval = nil
		return
	}
	x.Interval = &Schedule_DaysOfMonth_{v}
}

func (x *Schedule) HasIntervalType() bool {
	if x == nil {
		return false
	}
	return x.IntervalType != nil
}

func (x *Schedule) HasHour() bool {
	if x == nil {
		return false
	}
	return x.Hour != nil
}

func (x *Schedule) HasMinute() bool {
	if x == nil {
		return false
	}
	return x.Minute != nil
}

func (x *Schedule) HasInterval() bool {
	if x == nil {
		return false
	}
	return x.Interval != nil
}

func (x *Schedule) HasDaysOfWeek() bool {
	if x == nil {
		return false
	}
	_, ok := x.Interval.(*Schedule_DaysOfWeek_)
	return ok
}

func (x *Schedule) HasDaysOfMonth() bool {
	if x == nil {
		return false
	}
	_, ok := x.Interval.(*Schedule_DaysOfMonth_)
	return ok
}

func (x *Schedule) ClearIntervalType() {
	x.IntervalType = nil
}

func (x *Schedule) ClearHour() {
	x.Hour = nil
}

func (x *Schedule) ClearMinute() {
	x.Minute = nil
}

func (x *Schedule) ClearInterval() {
	x.Interval = nil
}

func (x *Schedule) ClearDaysOfWeek() {
	if _, ok := x.Interval.(*Schedule_DaysOfWeek_); ok {
		x.Interval = nil
	}
}

func (x *Schedule) ClearDaysOfMonth() {
	if _, ok := x.Interval.(*Schedule_DaysOfMonth_); ok {
		x.Interval = nil
	}
}

const Schedule_Interval_not_set_case case_Schedule_Interval = 0
const Schedule_DaysOfWeek_case case_Schedule_Interval = 4
const Schedule_DaysOfMonth_case case_Schedule_Interval = 5

func (x *Schedule) WhichInterval() case_Schedule_Interval {
	if x == nil {
		return Schedule_Interval_not_set_case
	}
	switch x.Interval.(type) {
	case *Schedule_DaysOfWeek_:
		return Schedule_DaysOfWeek_case
	case *Schedule_DaysOfMonth_:
		return Schedule_DaysOfMonth_case
	default:
		return Schedule_Interval_not_set_case
	}
}

type Schedule_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	IntervalType *Schedule_IntervalType
	Hour         *int32
	Minute       *int32
	// Fields of oneof Interval:
	DaysOfWeek  *Schedule_DaysOfWeek
	DaysOfMonth *Schedule_DaysOfMonth
	// -- end of Interval
}

func (b0 Schedule_builder) Build() *Schedule {
	m0 := &Schedule{}
	b, x := &b0, m0
	_, _ = b, x
	x.IntervalType = b.IntervalType
	x.Hour = b.Hour
	x.Minute = b.Minute
	if b.DaysOfWeek != nil {
		x.Interval = &Schedule_DaysOfWeek_{b.DaysOfWeek}
	}
	if b.DaysOfMonth != nil {
		x.Interval = &Schedule_DaysOfMonth_{b.DaysOfMonth}
	}
	return m0
}

type case_Schedule_Interval protoreflect.FieldNumber

func (x case_Schedule_Interval) String() string {
	md := file_api_v2_common_proto_msgTypes[2].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isSchedule_Interval interface {
	isSchedule_Interval()
}

type Schedule_DaysOfWeek_ struct {
	DaysOfWeek *Schedule_DaysOfWeek `protobuf:"bytes,4,opt,name=days_of_week,json=daysOfWeek,oneof"`
}

type Schedule_DaysOfMonth_ struct {
	DaysOfMonth *Schedule_DaysOfMonth `protobuf:"bytes,5,opt,name=days_of_month,json=daysOfMonth,oneof"`
}

func (*Schedule_DaysOfWeek_) isSchedule_Interval() {}

func (*Schedule_DaysOfMonth_) isSchedule_Interval() {}

// Sunday = 0, Monday = 1, .... Saturday =  6
type Schedule_DaysOfWeek struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Days          []int32                `protobuf:"varint,1,rep,packed,name=days" json:"days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Schedule_DaysOfWeek) Reset() {
	*x = Schedule_DaysOfWeek{}
	mi := &file_api_v2_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schedule_DaysOfWeek) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule_DaysOfWeek) ProtoMessage() {}

func (x *Schedule_DaysOfWeek) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Schedule_DaysOfWeek) GetDays() []int32 {
	if x != nil {
		return x.Days
	}
	return nil
}

func (x *Schedule_DaysOfWeek) SetDays(v []int32) {
	x.Days = v
}

type Schedule_DaysOfWeek_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Days []int32
}

func (b0 Schedule_DaysOfWeek_builder) Build() *Schedule_DaysOfWeek {
	m0 := &Schedule_DaysOfWeek{}
	b, x := &b0, m0
	_, _ = b, x
	x.Days = b.Days
	return m0
}

// 1 for 1st, 2 for 2nd .... 31 for 31st
type Schedule_DaysOfMonth struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Days          []int32                `protobuf:"varint,1,rep,packed,name=days" json:"days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Schedule_DaysOfMonth) Reset() {
	*x = Schedule_DaysOfMonth{}
	mi := &file_api_v2_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schedule_DaysOfMonth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule_DaysOfMonth) ProtoMessage() {}

func (x *Schedule_DaysOfMonth) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Schedule_DaysOfMonth) GetDays() []int32 {
	if x != nil {
		return x.Days
	}
	return nil
}

func (x *Schedule_DaysOfMonth) SetDays(v []int32) {
	x.Days = v
}

type Schedule_DaysOfMonth_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Days []int32
}

func (b0 Schedule_DaysOfMonth_builder) Build() *Schedule_DaysOfMonth {
	m0 := &Schedule_DaysOfMonth{}
	b, x := &b0, m0
	_, _ = b, x
	x.Days = b.Days
	return m0
}

var File_api_v2_common_proto protoreflect.FileDescriptor

const file_api_v2_common_proto_rawDesc = "" +
	"\n" +
	"\x13api/v2/common.proto\x12\x02v2\x1a!google/protobuf/go_features.proto\"\x1e\n" +
	"\fResourceByID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\a\n" +
	"\x05Empty\"\x83\x03\n" +
	"\bSchedule\x12>\n" +
	"\rinterval_type\x18\x01 \x01(\x0e2\x19.v2.Schedule.IntervalTypeR\fintervalType\x12\x12\n" +
	"\x04hour\x18\x02 \x01(\x05R\x04hour\x12\x16\n" +
	"\x06minute\x18\x03 \x01(\x05R\x06minute\x12;\n" +
	"\fdays_of_week\x18\x04 \x01(\v2\x17.v2.Schedule.DaysOfWeekH\x00R\n" +
	"daysOfWeek\x12>\n" +
	"\rdays_of_month\x18\x05 \x01(\v2\x18.v2.Schedule.DaysOfMonthH\x00R\vdaysOfMonth\x1a \n" +
	"\n" +
	"DaysOfWeek\x12\x12\n" +
	"\x04days\x18\x01 \x03(\x05R\x04days\x1a!\n" +
	"\vDaysOfMonth\x12\x12\n" +
	"\x04days\x18\x01 \x03(\x05R\x04days\"=\n" +
	"\fIntervalType\x12\t\n" +
	"\x05UNSET\x10\x00\x12\n" +
	"\n" +
	"\x06WEEKLY\x10\x01\x12\v\n" +
	"\aMONTHLY\x10\x02\x12\t\n" +
	"\x05DAILY\x10\x03B\n" +
	"\n" +
	"\bIntervalB/\n" +
	"\x18io.stackrox.proto.api.v2Z\v./api/v2;v2\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_api_v2_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v2_common_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_v2_common_proto_goTypes = []any{
	(Schedule_IntervalType)(0),   // 0: v2.Schedule.IntervalType
	(*ResourceByID)(nil),         // 1: v2.ResourceByID
	(*Empty)(nil),                // 2: v2.Empty
	(*Schedule)(nil),             // 3: v2.Schedule
	(*Schedule_DaysOfWeek)(nil),  // 4: v2.Schedule.DaysOfWeek
	(*Schedule_DaysOfMonth)(nil), // 5: v2.Schedule.DaysOfMonth
}
var file_api_v2_common_proto_depIdxs = []int32{
	0, // 0: v2.Schedule.interval_type:type_name -> v2.Schedule.IntervalType
	4, // 1: v2.Schedule.days_of_week:type_name -> v2.Schedule.DaysOfWeek
	5, // 2: v2.Schedule.days_of_month:type_name -> v2.Schedule.DaysOfMonth
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_v2_common_proto_init() }
func file_api_v2_common_proto_init() {
	if File_api_v2_common_proto != nil {
		return
	}
	file_api_v2_common_proto_msgTypes[2].OneofWrappers = []any{
		(*Schedule_DaysOfWeek_)(nil),
		(*Schedule_DaysOfMonth_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v2_common_proto_rawDesc), len(file_api_v2_common_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v2_common_proto_goTypes,
		DependencyIndexes: file_api_v2_common_proto_depIdxs,
		EnumInfos:         file_api_v2_common_proto_enumTypes,
		MessageInfos:      file_api_v2_common_proto_msgTypes,
	}.Build()
	File_api_v2_common_proto = out.File
	file_api_v2_common_proto_goTypes = nil
	file_api_v2_common_proto_depIdxs = nil
}
