// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/v2/compliance_integration_service.proto

package v2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Represents the status of compliance operator
type COStatus int32

const (
	COStatus_HEALTHY   COStatus = 0
	COStatus_UNHEALTHY COStatus = 1
)

var COStatus_name = map[int32]string{
	0: "HEALTHY",
	1: "UNHEALTHY",
}

var COStatus_value = map[string]int32{
	"HEALTHY":   0,
	"UNHEALTHY": 1,
}

func (x COStatus) String() string {
	return proto.EnumName(COStatus_name, int32(x))
}

func (COStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_406ee33181fc48e0, []int{0}
}

type ClusterProviderType int32

const (
	ClusterProviderType_UNSPECIFIED ClusterProviderType = 0
	ClusterProviderType_AKS         ClusterProviderType = 1
	ClusterProviderType_ARO         ClusterProviderType = 2
	ClusterProviderType_EKS         ClusterProviderType = 3
	ClusterProviderType_GKE         ClusterProviderType = 4
	ClusterProviderType_OCP         ClusterProviderType = 5
	ClusterProviderType_OSD         ClusterProviderType = 6
	ClusterProviderType_ROSA        ClusterProviderType = 7
)

var ClusterProviderType_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "AKS",
	2: "ARO",
	3: "EKS",
	4: "GKE",
	5: "OCP",
	6: "OSD",
	7: "ROSA",
}

var ClusterProviderType_value = map[string]int32{
	"UNSPECIFIED": 0,
	"AKS":         1,
	"ARO":         2,
	"EKS":         3,
	"GKE":         4,
	"OCP":         5,
	"OSD":         6,
	"ROSA":        7,
}

func (x ClusterProviderType) String() string {
	return proto.EnumName(ClusterProviderType_name, int32(x))
}

func (ClusterProviderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_406ee33181fc48e0, []int{1}
}

type ClusterPlatformType int32

const (
	ClusterPlatformType_GENERIC_CLUSTER    ClusterPlatformType = 0
	ClusterPlatformType_KUBERNETES_CLUSTER ClusterPlatformType = 1
	ClusterPlatformType_OPENSHIFT_CLUSTER  ClusterPlatformType = 2
	ClusterPlatformType_OPENSHIFT4_CLUSTER ClusterPlatformType = 5
)

var ClusterPlatformType_name = map[int32]string{
	0: "GENERIC_CLUSTER",
	1: "KUBERNETES_CLUSTER",
	2: "OPENSHIFT_CLUSTER",
	5: "OPENSHIFT4_CLUSTER",
}

var ClusterPlatformType_value = map[string]int32{
	"GENERIC_CLUSTER":    0,
	"KUBERNETES_CLUSTER": 1,
	"OPENSHIFT_CLUSTER":  2,
	"OPENSHIFT4_CLUSTER": 5,
}

func (x ClusterPlatformType) String() string {
	return proto.EnumName(ClusterPlatformType_name, int32(x))
}

func (ClusterPlatformType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_406ee33181fc48e0, []int{2}
}

// Next Tag: 11
type ComplianceIntegration struct {
	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version     string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	ClusterId   string `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	ClusterName string `protobuf:"bytes,4,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	Namespace   string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Collection of errors that occurred while trying to obtain compliance operator health info.
	StatusErrors         []string            `protobuf:"bytes,6,rep,name=status_errors,json=statusErrors,proto3" json:"status_errors,omitempty"`
	OperatorInstalled    bool                `protobuf:"varint,7,opt,name=operator_installed,json=operatorInstalled,proto3" json:"operator_installed,omitempty"`
	Status               COStatus            `protobuf:"varint,8,opt,name=status,proto3,enum=v2.COStatus" json:"status,omitempty"`
	ClusterPlatformType  ClusterPlatformType `protobuf:"varint,9,opt,name=cluster_platform_type,json=clusterPlatformType,proto3,enum=v2.ClusterPlatformType" json:"cluster_platform_type,omitempty"`
	ClusterProviderType  ClusterProviderType `protobuf:"varint,10,opt,name=cluster_provider_type,json=clusterProviderType,proto3,enum=v2.ClusterProviderType" json:"cluster_provider_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ComplianceIntegration) Reset()         { *m = ComplianceIntegration{} }
func (m *ComplianceIntegration) String() string { return proto.CompactTextString(m) }
func (*ComplianceIntegration) ProtoMessage()    {}
func (*ComplianceIntegration) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ee33181fc48e0, []int{0}
}
func (m *ComplianceIntegration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ComplianceIntegration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ComplianceIntegration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ComplianceIntegration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComplianceIntegration.Merge(m, src)
}
func (m *ComplianceIntegration) XXX_Size() int {
	return m.Size()
}
func (m *ComplianceIntegration) XXX_DiscardUnknown() {
	xxx_messageInfo_ComplianceIntegration.DiscardUnknown(m)
}

var xxx_messageInfo_ComplianceIntegration proto.InternalMessageInfo

func (m *ComplianceIntegration) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ComplianceIntegration) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ComplianceIntegration) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *ComplianceIntegration) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *ComplianceIntegration) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ComplianceIntegration) GetStatusErrors() []string {
	if m != nil {
		return m.StatusErrors
	}
	return nil
}

func (m *ComplianceIntegration) GetOperatorInstalled() bool {
	if m != nil {
		return m.OperatorInstalled
	}
	return false
}

func (m *ComplianceIntegration) GetStatus() COStatus {
	if m != nil {
		return m.Status
	}
	return COStatus_HEALTHY
}

func (m *ComplianceIntegration) GetClusterPlatformType() ClusterPlatformType {
	if m != nil {
		return m.ClusterPlatformType
	}
	return ClusterPlatformType_GENERIC_CLUSTER
}

func (m *ComplianceIntegration) GetClusterProviderType() ClusterProviderType {
	if m != nil {
		return m.ClusterProviderType
	}
	return ClusterProviderType_UNSPECIFIED
}

func (m *ComplianceIntegration) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ComplianceIntegration) Clone() *ComplianceIntegration {
	if m == nil {
		return nil
	}
	cloned := new(ComplianceIntegration)
	*cloned = *m

	if m.StatusErrors != nil {
		cloned.StatusErrors = make([]string, len(m.StatusErrors))
		copy(cloned.StatusErrors, m.StatusErrors)
	}
	return cloned
}

type ComplianceIntegrationStatusRequest struct {
	ClusterId            string   `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComplianceIntegrationStatusRequest) Reset()         { *m = ComplianceIntegrationStatusRequest{} }
func (m *ComplianceIntegrationStatusRequest) String() string { return proto.CompactTextString(m) }
func (*ComplianceIntegrationStatusRequest) ProtoMessage()    {}
func (*ComplianceIntegrationStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ee33181fc48e0, []int{1}
}
func (m *ComplianceIntegrationStatusRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ComplianceIntegrationStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ComplianceIntegrationStatusRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ComplianceIntegrationStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComplianceIntegrationStatusRequest.Merge(m, src)
}
func (m *ComplianceIntegrationStatusRequest) XXX_Size() int {
	return m.Size()
}
func (m *ComplianceIntegrationStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ComplianceIntegrationStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ComplianceIntegrationStatusRequest proto.InternalMessageInfo

func (m *ComplianceIntegrationStatusRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *ComplianceIntegrationStatusRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ComplianceIntegrationStatusRequest) Clone() *ComplianceIntegrationStatusRequest {
	if m == nil {
		return nil
	}
	cloned := new(ComplianceIntegrationStatusRequest)
	*cloned = *m

	return cloned
}

type ListComplianceIntegrationsResponse struct {
	Integrations         []*ComplianceIntegration `protobuf:"bytes,1,rep,name=integrations,proto3" json:"integrations,omitempty"`
	TotalCount           int32                    `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ListComplianceIntegrationsResponse) Reset()         { *m = ListComplianceIntegrationsResponse{} }
func (m *ListComplianceIntegrationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListComplianceIntegrationsResponse) ProtoMessage()    {}
func (*ListComplianceIntegrationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_406ee33181fc48e0, []int{2}
}
func (m *ListComplianceIntegrationsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListComplianceIntegrationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListComplianceIntegrationsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListComplianceIntegrationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListComplianceIntegrationsResponse.Merge(m, src)
}
func (m *ListComplianceIntegrationsResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListComplianceIntegrationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListComplianceIntegrationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListComplianceIntegrationsResponse proto.InternalMessageInfo

func (m *ListComplianceIntegrationsResponse) GetIntegrations() []*ComplianceIntegration {
	if m != nil {
		return m.Integrations
	}
	return nil
}

func (m *ListComplianceIntegrationsResponse) GetTotalCount() int32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListComplianceIntegrationsResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ListComplianceIntegrationsResponse) Clone() *ListComplianceIntegrationsResponse {
	if m == nil {
		return nil
	}
	cloned := new(ListComplianceIntegrationsResponse)
	*cloned = *m

	if m.Integrations != nil {
		cloned.Integrations = make([]*ComplianceIntegration, len(m.Integrations))
		for idx, v := range m.Integrations {
			cloned.Integrations[idx] = v.Clone()
		}
	}
	return cloned
}

func init() {
	proto.RegisterEnum("v2.COStatus", COStatus_name, COStatus_value)
	proto.RegisterEnum("v2.ClusterProviderType", ClusterProviderType_name, ClusterProviderType_value)
	proto.RegisterEnum("v2.ClusterPlatformType", ClusterPlatformType_name, ClusterPlatformType_value)
	proto.RegisterType((*ComplianceIntegration)(nil), "v2.ComplianceIntegration")
	proto.RegisterType((*ComplianceIntegrationStatusRequest)(nil), "v2.ComplianceIntegrationStatusRequest")
	proto.RegisterType((*ListComplianceIntegrationsResponse)(nil), "v2.ListComplianceIntegrationsResponse")
}

func init() {
	proto.RegisterFile("api/v2/compliance_integration_service.proto", fileDescriptor_406ee33181fc48e0)
}

var fileDescriptor_406ee33181fc48e0 = []byte{
	// 698 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0xcf, 0x6e, 0xdb, 0x46,
	0x10, 0xc6, 0x45, 0x51, 0x7f, 0x47, 0xb2, 0x4d, 0xaf, 0xe1, 0x96, 0x56, 0x6d, 0x55, 0xa5, 0x0b,
	0x43, 0x70, 0x51, 0x09, 0x60, 0x0b, 0xf4, 0x50, 0xf4, 0x60, 0xd3, 0xb4, 0x2d, 0xc8, 0x90, 0x54,
	0x52, 0x02, 0xda, 0x5e, 0x88, 0x2d, 0xb5, 0x76, 0x88, 0x48, 0x5c, 0x7a, 0x77, 0x45, 0xc7, 0x87,
	0x5c, 0x82, 0xbc, 0x41, 0x0e, 0xc9, 0x8b, 0xe4, 0x1d, 0x72, 0x0c, 0x90, 0x17, 0x08, 0x9c, 0x3c,
	0x48, 0x40, 0x52, 0x92, 0x25, 0x5b, 0x41, 0x6e, 0xb3, 0xbf, 0x6f, 0x66, 0x76, 0xb9, 0xdf, 0x72,
	0xe0, 0x17, 0x1c, 0x78, 0xcd, 0x50, 0x6f, 0xba, 0x74, 0x1c, 0x8c, 0x3c, 0xec, 0xbb, 0xc4, 0xf1,
	0x7c, 0x41, 0xae, 0x18, 0x16, 0x1e, 0xf5, 0x1d, 0x4e, 0x58, 0xe8, 0xb9, 0xa4, 0x11, 0x30, 0x2a,
	0x28, 0x4a, 0x87, 0x7a, 0x65, 0x67, 0x5a, 0xc0, 0x09, 0x66, 0xee, 0x13, 0xe7, 0x7a, 0x42, 0xd8,
	0x6d, 0x22, 0x57, 0x76, 0xaf, 0x28, 0xbd, 0x1a, 0x91, 0x66, 0x94, 0x81, 0x7d, 0x9f, 0x8a, 0xb8,
	0x07, 0x4f, 0x54, 0xed, 0xad, 0x0c, 0xdb, 0xc6, 0x7c, 0x97, 0xd6, 0xfd, 0x26, 0x68, 0x1d, 0xd2,
	0xde, 0x50, 0x95, 0x6a, 0x52, 0xbd, 0x68, 0xa5, 0xbd, 0x21, 0x52, 0x21, 0x1f, 0x12, 0xc6, 0x3d,
	0xea, 0xab, 0xe9, 0x18, 0xce, 0x96, 0x68, 0x0f, 0xc0, 0x1d, 0x4d, 0xb8, 0x20, 0xcc, 0xf1, 0x86,
	0xaa, 0x1c, 0x8b, 0xc5, 0x29, 0x69, 0x0d, 0xd1, 0x4f, 0x50, 0x9e, 0xc9, 0x3e, 0x1e, 0x13, 0x35,
	0x13, 0x27, 0x94, 0xa6, 0xac, 0x83, 0xc7, 0x04, 0xed, 0x42, 0x31, 0x92, 0x78, 0x80, 0x5d, 0xa2,
	0x66, 0x93, 0x06, 0x73, 0x80, 0xf6, 0x61, 0x8d, 0x0b, 0x2c, 0x26, 0xdc, 0x21, 0x8c, 0x51, 0xc6,
	0xd5, 0x5c, 0x4d, 0xae, 0x17, 0xad, 0x72, 0x02, 0xcd, 0x98, 0xa1, 0x5f, 0x01, 0xd1, 0x80, 0x30,
	0x2c, 0x28, 0x73, 0x3c, 0x9f, 0x0b, 0x3c, 0x1a, 0x91, 0xa1, 0x9a, 0xaf, 0x49, 0xf5, 0x82, 0xb5,
	0x39, 0x53, 0x5a, 0x33, 0x01, 0xfd, 0x0c, 0xb9, 0xa4, 0x5c, 0x2d, 0xd4, 0xa4, 0xfa, 0xba, 0x5e,
	0x6e, 0x84, 0x7a, 0xc3, 0xe8, 0xda, 0x31, 0xb3, 0xa6, 0x1a, 0x6a, 0xc3, 0xf6, 0xec, 0xe8, 0xc1,
	0x08, 0x8b, 0x4b, 0xca, 0xc6, 0x8e, 0xb8, 0x0d, 0x88, 0x5a, 0x8c, 0x8b, 0xbe, 0x8f, 0x8b, 0x92,
	0x84, 0xde, 0x54, 0xef, 0xdf, 0x06, 0xc4, 0xda, 0x72, 0x1f, 0xc3, 0xa5, 0x66, 0x8c, 0x86, 0xde,
	0x90, 0xb0, 0xa4, 0x19, 0x3c, 0x6e, 0x36, 0xd5, 0x97, 0x9b, 0x2d, 0x40, 0xcd, 0x00, 0x6d, 0xa5,
	0x6d, 0xd3, 0x0f, 0x20, 0xd7, 0x13, 0xc2, 0xc5, 0x03, 0x67, 0xa4, 0x07, 0xce, 0x68, 0x2f, 0x25,
	0xd0, 0x2e, 0x3c, 0x2e, 0x56, 0x76, 0xe2, 0x16, 0xe1, 0x01, 0xf5, 0x39, 0x41, 0x7f, 0x41, 0x79,
	0xe1, 0xf5, 0x71, 0x55, 0xaa, 0xc9, 0xf5, 0x92, 0xbe, 0x13, 0x9f, 0x77, 0x55, 0xa5, 0xb5, 0x94,
	0x8e, 0x7e, 0x84, 0x92, 0xa0, 0x02, 0x8f, 0x1c, 0x97, 0x4e, 0x7c, 0x11, 0x3f, 0x9e, 0xac, 0x05,
	0x31, 0x32, 0x22, 0x72, 0x78, 0x00, 0x85, 0xd9, 0xcd, 0xa3, 0x12, 0xe4, 0xcf, 0xcd, 0xa3, 0x8b,
	0xfe, 0xf9, 0xbf, 0x4a, 0x0a, 0xad, 0x41, 0x71, 0xd0, 0x99, 0x2d, 0xa5, 0xc3, 0x4b, 0xd8, 0x5a,
	0x71, 0x3f, 0x68, 0x03, 0x4a, 0x83, 0x8e, 0xdd, 0x33, 0x8d, 0xd6, 0x69, 0xcb, 0x3c, 0x51, 0x52,
	0x28, 0x0f, 0xf2, 0x51, 0xdb, 0x56, 0xa4, 0x38, 0xb0, 0xba, 0x4a, 0x3a, 0x0a, 0xcc, 0xb6, 0xad,
	0xc8, 0x51, 0x70, 0xd6, 0x36, 0x95, 0x4c, 0x14, 0x74, 0x8d, 0x9e, 0x92, 0x8d, 0x03, 0xfb, 0x44,
	0xc9, 0xa1, 0x02, 0x64, 0xac, 0xae, 0x7d, 0xa4, 0xe4, 0x0f, 0x9f, 0xdf, 0xef, 0xb3, 0xe8, 0xdf,
	0x16, 0x6c, 0x9c, 0x99, 0x1d, 0xd3, 0x6a, 0x19, 0x8e, 0x71, 0x31, 0xb0, 0xfb, 0xa6, 0xa5, 0xa4,
	0xd0, 0x77, 0x80, 0xda, 0x83, 0x63, 0xd3, 0xea, 0x98, 0x7d, 0xd3, 0x9e, 0x73, 0x09, 0x6d, 0xc3,
	0x66, 0xb7, 0x67, 0x76, 0xec, 0xf3, 0xd6, 0x69, 0x7f, 0x8e, 0xd3, 0x51, 0xfa, 0x1c, 0xff, 0x3e,
	0xe7, 0x59, 0x2d, 0x53, 0x90, 0x15, 0x59, 0xcb, 0x14, 0x32, 0x4a, 0x46, 0x7f, 0x2d, 0xc1, 0xee,
	0x6a, 0x6f, 0x93, 0xdf, 0x1e, 0xdd, 0x40, 0xe5, 0xeb, 0xae, 0xa1, 0xf8, 0x25, 0x5b, 0xf8, 0xe6,
	0xef, 0x68, 0x06, 0x54, 0x0e, 0xa2, 0xd5, 0xb7, 0x3d, 0xd6, 0xf6, 0x5f, 0x7c, 0xf8, 0xfc, 0x2a,
	0xbd, 0x87, 0x7e, 0x58, 0x1e, 0x3b, 0xcd, 0x45, 0x27, 0x8f, 0xff, 0x78, 0x77, 0x57, 0x95, 0xde,
	0xdf, 0x55, 0xa5, 0x8f, 0x77, 0x55, 0xe9, 0xcd, 0xa7, 0x6a, 0x0a, 0x54, 0x8f, 0x36, 0xb8, 0xc0,
	0xee, 0x53, 0x46, 0x9f, 0x25, 0x13, 0xa5, 0x81, 0x03, 0xaf, 0x11, 0xea, 0xff, 0x95, 0x1a, 0xcd,
	0x64, 0x26, 0xfd, 0x19, 0xea, 0xff, 0x48, 0xff, 0xe7, 0x62, 0xf1, 0xb7, 0x2f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x58, 0x98, 0xa9, 0x6e, 0xda, 0x04, 0x00, 0x00,
}

func (m *ComplianceIntegration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ComplianceIntegration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ComplianceIntegration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ClusterProviderType != 0 {
		i = encodeVarintComplianceIntegrationService(dAtA, i, uint64(m.ClusterProviderType))
		i--
		dAtA[i] = 0x50
	}
	if m.ClusterPlatformType != 0 {
		i = encodeVarintComplianceIntegrationService(dAtA, i, uint64(m.ClusterPlatformType))
		i--
		dAtA[i] = 0x48
	}
	if m.Status != 0 {
		i = encodeVarintComplianceIntegrationService(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x40
	}
	if m.OperatorInstalled {
		i--
		if m.OperatorInstalled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if len(m.StatusErrors) > 0 {
		for iNdEx := len(m.StatusErrors) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.StatusErrors[iNdEx])
			copy(dAtA[i:], m.StatusErrors[iNdEx])
			i = encodeVarintComplianceIntegrationService(dAtA, i, uint64(len(m.StatusErrors[iNdEx])))
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintComplianceIntegrationService(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ClusterName) > 0 {
		i -= len(m.ClusterName)
		copy(dAtA[i:], m.ClusterName)
		i = encodeVarintComplianceIntegrationService(dAtA, i, uint64(len(m.ClusterName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ClusterId) > 0 {
		i -= len(m.ClusterId)
		copy(dAtA[i:], m.ClusterId)
		i = encodeVarintComplianceIntegrationService(dAtA, i, uint64(len(m.ClusterId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Version) > 0 {
		i -= len(m.Version)
		copy(dAtA[i:], m.Version)
		i = encodeVarintComplianceIntegrationService(dAtA, i, uint64(len(m.Version)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintComplianceIntegrationService(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ComplianceIntegrationStatusRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ComplianceIntegrationStatusRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ComplianceIntegrationStatusRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClusterId) > 0 {
		i -= len(m.ClusterId)
		copy(dAtA[i:], m.ClusterId)
		i = encodeVarintComplianceIntegrationService(dAtA, i, uint64(len(m.ClusterId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListComplianceIntegrationsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListComplianceIntegrationsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListComplianceIntegrationsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TotalCount != 0 {
		i = encodeVarintComplianceIntegrationService(dAtA, i, uint64(m.TotalCount))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Integrations) > 0 {
		for iNdEx := len(m.Integrations) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Integrations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintComplianceIntegrationService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintComplianceIntegrationService(dAtA []byte, offset int, v uint64) int {
	offset -= sovComplianceIntegrationService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ComplianceIntegration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovComplianceIntegrationService(uint64(l))
	}
	l = len(m.Version)
	if l > 0 {
		n += 1 + l + sovComplianceIntegrationService(uint64(l))
	}
	l = len(m.ClusterId)
	if l > 0 {
		n += 1 + l + sovComplianceIntegrationService(uint64(l))
	}
	l = len(m.ClusterName)
	if l > 0 {
		n += 1 + l + sovComplianceIntegrationService(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovComplianceIntegrationService(uint64(l))
	}
	if len(m.StatusErrors) > 0 {
		for _, s := range m.StatusErrors {
			l = len(s)
			n += 1 + l + sovComplianceIntegrationService(uint64(l))
		}
	}
	if m.OperatorInstalled {
		n += 2
	}
	if m.Status != 0 {
		n += 1 + sovComplianceIntegrationService(uint64(m.Status))
	}
	if m.ClusterPlatformType != 0 {
		n += 1 + sovComplianceIntegrationService(uint64(m.ClusterPlatformType))
	}
	if m.ClusterProviderType != 0 {
		n += 1 + sovComplianceIntegrationService(uint64(m.ClusterProviderType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ComplianceIntegrationStatusRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClusterId)
	if l > 0 {
		n += 1 + l + sovComplianceIntegrationService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListComplianceIntegrationsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Integrations) > 0 {
		for _, e := range m.Integrations {
			l = e.Size()
			n += 1 + l + sovComplianceIntegrationService(uint64(l))
		}
	}
	if m.TotalCount != 0 {
		n += 1 + sovComplianceIntegrationService(uint64(m.TotalCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovComplianceIntegrationService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozComplianceIntegrationService(x uint64) (n int) {
	return sovComplianceIntegrationService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ComplianceIntegration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowComplianceIntegrationService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ComplianceIntegration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ComplianceIntegration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceIntegrationService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceIntegrationService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Version = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceIntegrationService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceIntegrationService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceIntegrationService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusErrors", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceIntegrationService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StatusErrors = append(m.StatusErrors, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatorInstalled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceIntegrationService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.OperatorInstalled = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceIntegrationService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= COStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterPlatformType", wireType)
			}
			m.ClusterPlatformType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceIntegrationService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClusterPlatformType |= ClusterPlatformType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterProviderType", wireType)
			}
			m.ClusterProviderType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceIntegrationService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClusterProviderType |= ClusterProviderType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipComplianceIntegrationService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ComplianceIntegrationStatusRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowComplianceIntegrationService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ComplianceIntegrationStatusRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ComplianceIntegrationStatusRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceIntegrationService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipComplianceIntegrationService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListComplianceIntegrationsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowComplianceIntegrationService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListComplianceIntegrationsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListComplianceIntegrationsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Integrations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceIntegrationService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Integrations = append(m.Integrations, &ComplianceIntegration{})
			if err := m.Integrations[len(m.Integrations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalCount", wireType)
			}
			m.TotalCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceIntegrationService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipComplianceIntegrationService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthComplianceIntegrationService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipComplianceIntegrationService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowComplianceIntegrationService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowComplianceIntegrationService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowComplianceIntegrationService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthComplianceIntegrationService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupComplianceIntegrationService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthComplianceIntegrationService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthComplianceIntegrationService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowComplianceIntegrationService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupComplianceIntegrationService = fmt.Errorf("proto: unexpected end of group")
)
