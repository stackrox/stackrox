// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internalapi/sensor/signal_iservice.proto

package sensor

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/stackrox/rox/generated/api/v1"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A single message in the event stream between Collector and Sensor.
type SignalStreamMessage struct {
	// Types that are valid to be assigned to Msg:
	//	*SignalStreamMessage_CollectorRegisterRequest
	//	*SignalStreamMessage_Signal
	Msg                  isSignalStreamMessage_Msg `protobuf_oneof:"msg"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SignalStreamMessage) Reset()         { *m = SignalStreamMessage{} }
func (m *SignalStreamMessage) String() string { return proto.CompactTextString(m) }
func (*SignalStreamMessage) ProtoMessage()    {}
func (*SignalStreamMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d317c19f583202f, []int{0}
}
func (m *SignalStreamMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SignalStreamMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SignalStreamMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SignalStreamMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignalStreamMessage.Merge(m, src)
}
func (m *SignalStreamMessage) XXX_Size() int {
	return m.Size()
}
func (m *SignalStreamMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SignalStreamMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SignalStreamMessage proto.InternalMessageInfo

type isSignalStreamMessage_Msg interface {
	isSignalStreamMessage_Msg()
	MarshalTo([]byte) (int, error)
	Size() int
	Clone() isSignalStreamMessage_Msg
}

type SignalStreamMessage_CollectorRegisterRequest struct {
	CollectorRegisterRequest *CollectorRegisterRequest `protobuf:"bytes,1,opt,name=collector_register_request,json=collectorRegisterRequest,proto3,oneof" json:"collector_register_request,omitempty"`
}
type SignalStreamMessage_Signal struct {
	Signal *v1.Signal `protobuf:"bytes,2,opt,name=signal,proto3,oneof" json:"signal,omitempty"`
}

func (*SignalStreamMessage_CollectorRegisterRequest) isSignalStreamMessage_Msg() {}
func (m *SignalStreamMessage_CollectorRegisterRequest) Clone() isSignalStreamMessage_Msg {
	if m == nil {
		return nil
	}
	cloned := new(SignalStreamMessage_CollectorRegisterRequest)
	*cloned = *m

	cloned.CollectorRegisterRequest = m.CollectorRegisterRequest.Clone()
	return cloned
}
func (*SignalStreamMessage_Signal) isSignalStreamMessage_Msg() {}
func (m *SignalStreamMessage_Signal) Clone() isSignalStreamMessage_Msg {
	if m == nil {
		return nil
	}
	cloned := new(SignalStreamMessage_Signal)
	*cloned = *m

	cloned.Signal = m.Signal.Clone()
	return cloned
}

func (m *SignalStreamMessage) GetMsg() isSignalStreamMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *SignalStreamMessage) GetCollectorRegisterRequest() *CollectorRegisterRequest {
	if x, ok := m.GetMsg().(*SignalStreamMessage_CollectorRegisterRequest); ok {
		return x.CollectorRegisterRequest
	}
	return nil
}

func (m *SignalStreamMessage) GetSignal() *v1.Signal {
	if x, ok := m.GetMsg().(*SignalStreamMessage_Signal); ok {
		return x.Signal
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SignalStreamMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SignalStreamMessage_CollectorRegisterRequest)(nil),
		(*SignalStreamMessage_Signal)(nil),
	}
}

func (m *SignalStreamMessage) MessageClone() proto.Message {
	return m.Clone()
}
func (m *SignalStreamMessage) Clone() *SignalStreamMessage {
	if m == nil {
		return nil
	}
	cloned := new(SignalStreamMessage)
	*cloned = *m

	if m.Msg != nil {
		cloned.Msg = m.Msg.Clone()
	}
	return cloned
}

func init() {
	proto.RegisterType((*SignalStreamMessage)(nil), "sensor.SignalStreamMessage")
}

func init() {
	proto.RegisterFile("internalapi/sensor/signal_iservice.proto", fileDescriptor_2d317c19f583202f)
}

var fileDescriptor_2d317c19f583202f = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0xc8, 0xcc, 0x2b, 0x49,
	0x2d, 0xca, 0x4b, 0xcc, 0x49, 0x2c, 0xc8, 0xd4, 0x2f, 0x4e, 0xcd, 0x2b, 0xce, 0x2f, 0xd2, 0x2f,
	0xce, 0x4c, 0xcf, 0x4b, 0xcc, 0x89, 0xcf, 0x2c, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xc8, 0x4a, 0x09, 0x81, 0x54, 0x96, 0x19, 0xea, 0xa7,
	0xe6, 0x16, 0x94, 0x54, 0x42, 0xe4, 0xa4, 0x84, 0xa1, 0x62, 0x10, 0x9d, 0x50, 0x41, 0x25, 0x2c,
	0x46, 0x27, 0xe7, 0xe7, 0xe4, 0xa4, 0x26, 0x97, 0xe4, 0x17, 0x41, 0xd4, 0x28, 0x2d, 0x61, 0xe4,
	0x12, 0x0e, 0x06, 0x6b, 0x0a, 0x2e, 0x29, 0x4a, 0x4d, 0xcc, 0xf5, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c,
	0x4f, 0x15, 0x4a, 0xe0, 0x92, 0x82, 0x2b, 0x8d, 0x2f, 0x4a, 0x4d, 0xcf, 0x2c, 0x2e, 0x49, 0x05,
	0x31, 0x0a, 0x4b, 0x53, 0x8b, 0x4b, 0x24, 0x18, 0x15, 0x18, 0x35, 0xb8, 0x8d, 0x14, 0xf4, 0x20,
	0x86, 0xea, 0x39, 0xc3, 0x54, 0x06, 0x41, 0x15, 0x06, 0x41, 0xd4, 0x79, 0x30, 0x04, 0x49, 0x24,
	0xe3, 0x90, 0x13, 0x52, 0xe1, 0x62, 0x83, 0xb8, 0x56, 0x82, 0x09, 0x6c, 0x1a, 0x97, 0x5e, 0x99,
	0xa1, 0x1e, 0xc4, 0x29, 0x1e, 0x0c, 0x41, 0x50, 0x39, 0x27, 0x56, 0x2e, 0xe6, 0xdc, 0xe2, 0x74,
	0x23, 0x2f, 0x2e, 0x5e, 0xa8, 0x2b, 0x21, 0x41, 0x22, 0x64, 0xc9, 0xc5, 0x1d, 0x50, 0x5a, 0x9c,
	0x01, 0x11, 0x2c, 0x16, 0x92, 0x86, 0x39, 0x05, 0x8b, 0x5f, 0xa4, 0x38, 0x41, 0x26, 0xbb, 0x82,
	0x42, 0x4b, 0x83, 0xd1, 0x80, 0xd1, 0x49, 0xfa, 0xc4, 0x23, 0x39, 0xc6, 0x0b, 0x8f, 0xe4, 0x18,
	0x1f, 0x3c, 0x92, 0x63, 0x9c, 0xf1, 0x58, 0x8e, 0x21, 0x0a, 0x1a, 0xb2, 0x3f, 0x18, 0x19, 0x93,
	0xd8, 0xc0, 0xc1, 0x62, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x97, 0x23, 0x7a, 0x38, 0x97, 0x01,
	0x00, 0x00,
}

func (m *SignalStreamMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SignalStreamMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SignalStreamMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Msg != nil {
		{
			size := m.Msg.Size()
			i -= size
			if _, err := m.Msg.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *SignalStreamMessage_CollectorRegisterRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SignalStreamMessage_CollectorRegisterRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.CollectorRegisterRequest != nil {
		{
			size, err := m.CollectorRegisterRequest.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSignalIservice(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *SignalStreamMessage_Signal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SignalStreamMessage_Signal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Signal != nil {
		{
			size, err := m.Signal.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSignalIservice(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func encodeVarintSignalIservice(dAtA []byte, offset int, v uint64) int {
	offset -= sovSignalIservice(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SignalStreamMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Msg != nil {
		n += m.Msg.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SignalStreamMessage_CollectorRegisterRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CollectorRegisterRequest != nil {
		l = m.CollectorRegisterRequest.Size()
		n += 1 + l + sovSignalIservice(uint64(l))
	}
	return n
}
func (m *SignalStreamMessage_Signal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Signal != nil {
		l = m.Signal.Size()
		n += 1 + l + sovSignalIservice(uint64(l))
	}
	return n
}

func sovSignalIservice(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSignalIservice(x uint64) (n int) {
	return sovSignalIservice(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SignalStreamMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSignalIservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SignalStreamMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SignalStreamMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectorRegisterRequest", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSignalIservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSignalIservice
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSignalIservice
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &CollectorRegisterRequest{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Msg = &SignalStreamMessage_CollectorRegisterRequest{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signal", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSignalIservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSignalIservice
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSignalIservice
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &v1.Signal{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Msg = &SignalStreamMessage_Signal{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSignalIservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSignalIservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSignalIservice(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSignalIservice
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSignalIservice
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSignalIservice
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSignalIservice
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSignalIservice
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSignalIservice
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSignalIservice        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSignalIservice          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSignalIservice = fmt.Errorf("proto: unexpected end of group")
)
