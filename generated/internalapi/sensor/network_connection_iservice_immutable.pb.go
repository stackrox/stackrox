// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package sensor

import (
	"iter"
)

// ImmutableNetworkConnectionInfoMessage is an immutable interface for NetworkConnectionInfoMessage
type ImmutableNetworkConnectionInfoMessage interface {
	GetImmutableRegister() ImmutableCollectorRegisterRequest
	GetImmutableInfo() ImmutableNetworkConnectionInfo
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *NetworkConnectionInfoMessage
}

// GetImmutableRegister implements ImmutableNetworkConnectionInfoMessage
func (m *NetworkConnectionInfoMessage) GetImmutableRegister() ImmutableCollectorRegisterRequest {
	return m.GetRegister()
}

// GetImmutableInfo implements ImmutableNetworkConnectionInfoMessage
func (m *NetworkConnectionInfoMessage) GetImmutableInfo() ImmutableNetworkConnectionInfo {
	return m.GetInfo()
}

// Verify that NetworkConnectionInfoMessage implements ImmutableNetworkConnectionInfoMessage
var _ ImmutableNetworkConnectionInfoMessage = (*NetworkConnectionInfoMessage)(nil)

// ImmutableNetworkFlowsControlMessage is an immutable interface for NetworkFlowsControlMessage
type ImmutableNetworkFlowsControlMessage interface {
	GetImmutablePublicIpAddresses() ImmutableIPAddressList
	GetImmutableIpNetworks() ImmutableIPNetworkList
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *NetworkFlowsControlMessage
}

// GetImmutablePublicIpAddresses implements ImmutableNetworkFlowsControlMessage
func (m *NetworkFlowsControlMessage) GetImmutablePublicIpAddresses() ImmutableIPAddressList {
	return m.GetPublicIpAddresses()
}

// GetImmutableIpNetworks implements ImmutableNetworkFlowsControlMessage
func (m *NetworkFlowsControlMessage) GetImmutableIpNetworks() ImmutableIPNetworkList {
	return m.GetIpNetworks()
}

// Verify that NetworkFlowsControlMessage implements ImmutableNetworkFlowsControlMessage
var _ ImmutableNetworkFlowsControlMessage = (*NetworkFlowsControlMessage)(nil)

// ImmutableIPAddressList is an immutable interface for IPAddressList
type ImmutableIPAddressList interface {
	// A list of IPv4 addresses, encoded in correct byte order (i.e., 127.0.0.1 is encoded as 0x7f000001). On a
	// little-endian system, you must convert to big endian to interpret the value as a binary address.
	GetImmutableIpv4Addresses() iter.Seq[uint32]
	// A list of IPv6 addresses, as uint64 pairs. Each pair is ordered in network order (big endian, i.e., first high,
	// then low); each uint64 is encoded in the correct byte order and may need to be converted to big endian on little
	// endian System. E.g., the IPv6 address ::1 (local loopback) is encoded as a `0` uint64 followed by a `1` uint64.
	// This field must always have an even number of values; otherwise it should be discarded.
	GetImmutableIpv6Addresses() iter.Seq[uint64]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *IPAddressList
}

// GetImmutableIpv4Addresses implements ImmutableIPAddressList
func (m *IPAddressList) GetImmutableIpv4Addresses() iter.Seq[uint32] {
	return func(yield func(uint32) bool) {
		if m == nil || m.Ipv4Addresses == nil {
			return
		}
		for _, v := range m.Ipv4Addresses {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableIpv6Addresses implements ImmutableIPAddressList
func (m *IPAddressList) GetImmutableIpv6Addresses() iter.Seq[uint64] {
	return func(yield func(uint64) bool) {
		if m == nil || m.Ipv6Addresses == nil {
			return
		}
		for _, v := range m.Ipv6Addresses {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that IPAddressList implements ImmutableIPAddressList
var _ ImmutableIPAddressList = (*IPAddressList)(nil)

// ImmutableIPNetworkList is an immutable interface for IPNetworkList
type ImmutableIPNetworkList interface {
	// A list of IPv4 networks, as a sequence of bytes. First four bytes represent IP followed by the byte representing
	// the network prefix length. Each sequence encoded in correct byte order (i.e., 127.0.0.1/8 is encoded as 0x7f0000018).
	// On a little-endian system, you must convert to big endian to interpret the value as a binary address.
	// This field must always have an 5x number of values; otherwise it should be discarded.
	GetIpv4Networks() []byte
	// A list of IPv6 networks, as a sequence of bytes. First 16 bytes representing IP followed by the byte representing
	// the network prefix length. Each IP sequence is ordered in network order (big endian, i.e., first high, then low).
	// Each order is encoded in the correct byte order and may need to be converted to big endian on little endian System.
	// This field must always have an 17x number of values; otherwise it should be discarded.
	GetIpv6Networks() []byte
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *IPNetworkList
}

// Verify that IPNetworkList implements ImmutableIPNetworkList
var _ ImmutableIPNetworkList = (*IPNetworkList)(nil)
