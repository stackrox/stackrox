// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internalapi/sensor/compliance_nodescan_iservice.proto

package sensor

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FullNodeScanRequest struct {
	Node                 string        `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Msg                  *FullNodeScan `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FullNodeScanRequest) Reset()         { *m = FullNodeScanRequest{} }
func (m *FullNodeScanRequest) String() string { return proto.CompactTextString(m) }
func (*FullNodeScanRequest) ProtoMessage()    {}
func (*FullNodeScanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b5f6621e041d6f5, []int{0}
}
func (m *FullNodeScanRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FullNodeScanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FullNodeScanRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FullNodeScanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FullNodeScanRequest.Merge(m, src)
}
func (m *FullNodeScanRequest) XXX_Size() int {
	return m.Size()
}
func (m *FullNodeScanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FullNodeScanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FullNodeScanRequest proto.InternalMessageInfo

func (m *FullNodeScanRequest) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *FullNodeScanRequest) GetMsg() *FullNodeScan {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *FullNodeScanRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *FullNodeScanRequest) Clone() *FullNodeScanRequest {
	if m == nil {
		return nil
	}
	cloned := new(FullNodeScanRequest)
	*cloned = *m

	cloned.Msg = m.Msg.Clone()
	return cloned
}

type FullNodeScanResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FullNodeScanResponse) Reset()         { *m = FullNodeScanResponse{} }
func (m *FullNodeScanResponse) String() string { return proto.CompactTextString(m) }
func (*FullNodeScanResponse) ProtoMessage()    {}
func (*FullNodeScanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b5f6621e041d6f5, []int{1}
}
func (m *FullNodeScanResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FullNodeScanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FullNodeScanResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FullNodeScanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FullNodeScanResponse.Merge(m, src)
}
func (m *FullNodeScanResponse) XXX_Size() int {
	return m.Size()
}
func (m *FullNodeScanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FullNodeScanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FullNodeScanResponse proto.InternalMessageInfo

func (m *FullNodeScanResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *FullNodeScanResponse) Clone() *FullNodeScanResponse {
	if m == nil {
		return nil
	}
	cloned := new(FullNodeScanResponse)
	*cloned = *m

	return cloned
}

func init() {
	proto.RegisterType((*FullNodeScanRequest)(nil), "sensor.FullNodeScanRequest")
	proto.RegisterType((*FullNodeScanResponse)(nil), "sensor.FullNodeScanResponse")
}

func init() {
	proto.RegisterFile("internalapi/sensor/compliance_nodescan_iservice.proto", fileDescriptor_6b5f6621e041d6f5)
}

var fileDescriptor_6b5f6621e041d6f5 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0xcd, 0xcc, 0x2b, 0x49,
	0x2d, 0xca, 0x4b, 0xcc, 0x49, 0x2c, 0xc8, 0xd4, 0x2f, 0x4e, 0xcd, 0x2b, 0xce, 0x2f, 0xd2, 0x4f,
	0xce, 0xcf, 0x2d, 0xc8, 0xc9, 0x4c, 0xcc, 0x4b, 0x4e, 0x8d, 0xcf, 0xcb, 0x4f, 0x49, 0x2d, 0x4e,
	0x4e, 0xcc, 0x8b, 0xcf, 0x2c, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x62, 0x83, 0x28, 0x95, 0xd2, 0x21, 0x4e, 0x3b, 0x44, 0x97, 0x52, 0x20, 0x97, 0xb0,
	0x5b, 0x69, 0x4e, 0x8e, 0x5f, 0x7e, 0x4a, 0x6a, 0x70, 0x72, 0x62, 0x5e, 0x50, 0x6a, 0x61, 0x69,
	0x6a, 0x71, 0x89, 0x90, 0x10, 0x17, 0x0b, 0x48, 0xa1, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10,
	0x98, 0x2d, 0xa4, 0xc6, 0xc5, 0x9c, 0x5b, 0x9c, 0x2e, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x6d, 0x24,
	0xa2, 0x07, 0x31, 0x5a, 0x0f, 0x45, 0x37, 0x48, 0x81, 0x92, 0x18, 0x97, 0x08, 0xaa, 0x91, 0xc5,
	0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x46, 0x99, 0x5c, 0x92, 0xce, 0x70, 0x77, 0xc0, 0x64, 0x83, 0x21,
	0x7e, 0x10, 0xf2, 0xe1, 0xe2, 0x76, 0xce, 0xcf, 0xcd, 0x2d, 0xcd, 0xcb, 0x4c, 0x4e, 0x2c, 0x49,
	0x15, 0x92, 0xc6, 0x6a, 0x3c, 0xc4, 0x71, 0x52, 0x32, 0xd8, 0x25, 0x21, 0xd6, 0x68, 0x30, 0x1a,
	0x30, 0x3a, 0x49, 0x9c, 0x78, 0x24, 0xc7, 0x78, 0xe1, 0x91, 0x1c, 0xe3, 0x83, 0x47, 0x72, 0x8c,
	0x33, 0x1e, 0xcb, 0x31, 0x44, 0x41, 0x43, 0x27, 0x89, 0x0d, 0xec, 0x6d, 0x63, 0x40, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x45, 0x1d, 0x5c, 0xf4, 0x65, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ComplianceNodeScanServiceClient is the client API for ComplianceNodeScanService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConnInterface.NewStream.
type ComplianceNodeScanServiceClient interface {
	Communicate(ctx context.Context, opts ...grpc.CallOption) (ComplianceNodeScanService_CommunicateClient, error)
}

type complianceNodeScanServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewComplianceNodeScanServiceClient(cc grpc.ClientConnInterface) ComplianceNodeScanServiceClient {
	return &complianceNodeScanServiceClient{cc}
}

func (c *complianceNodeScanServiceClient) Communicate(ctx context.Context, opts ...grpc.CallOption) (ComplianceNodeScanService_CommunicateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ComplianceNodeScanService_serviceDesc.Streams[0], "/sensor.ComplianceNodeScanService/Communicate", opts...)
	if err != nil {
		return nil, err
	}
	x := &complianceNodeScanServiceCommunicateClient{stream}
	return x, nil
}

type ComplianceNodeScanService_CommunicateClient interface {
	Send(*FullNodeScanRequest) error
	Recv() (*FullNodeScanResponse, error)
	grpc.ClientStream
}

type complianceNodeScanServiceCommunicateClient struct {
	grpc.ClientStream
}

func (x *complianceNodeScanServiceCommunicateClient) Send(m *FullNodeScanRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *complianceNodeScanServiceCommunicateClient) Recv() (*FullNodeScanResponse, error) {
	m := new(FullNodeScanResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ComplianceNodeScanServiceServer is the server API for ComplianceNodeScanService service.
type ComplianceNodeScanServiceServer interface {
	Communicate(ComplianceNodeScanService_CommunicateServer) error
}

// UnimplementedComplianceNodeScanServiceServer can be embedded to have forward compatible implementations.
type UnimplementedComplianceNodeScanServiceServer struct {
}

func (*UnimplementedComplianceNodeScanServiceServer) Communicate(srv ComplianceNodeScanService_CommunicateServer) error {
	return status.Errorf(codes.Unimplemented, "method Communicate not implemented")
}

func RegisterComplianceNodeScanServiceServer(s *grpc.Server, srv ComplianceNodeScanServiceServer) {
	s.RegisterService(&_ComplianceNodeScanService_serviceDesc, srv)
}

func _ComplianceNodeScanService_Communicate_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ComplianceNodeScanServiceServer).Communicate(&complianceNodeScanServiceCommunicateServer{stream})
}

type ComplianceNodeScanService_CommunicateServer interface {
	Send(*FullNodeScanResponse) error
	Recv() (*FullNodeScanRequest, error)
	grpc.ServerStream
}

type complianceNodeScanServiceCommunicateServer struct {
	grpc.ServerStream
}

func (x *complianceNodeScanServiceCommunicateServer) Send(m *FullNodeScanResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *complianceNodeScanServiceCommunicateServer) Recv() (*FullNodeScanRequest, error) {
	m := new(FullNodeScanRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ComplianceNodeScanService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sensor.ComplianceNodeScanService",
	HandlerType: (*ComplianceNodeScanServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Communicate",
			Handler:       _ComplianceNodeScanService_Communicate_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "internalapi/sensor/compliance_nodescan_iservice.proto",
}

func (m *FullNodeScanRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FullNodeScanRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FullNodeScanRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Msg != nil {
		{
			size, err := m.Msg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintComplianceNodescanIservice(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Node) > 0 {
		i -= len(m.Node)
		copy(dAtA[i:], m.Node)
		i = encodeVarintComplianceNodescanIservice(dAtA, i, uint64(len(m.Node)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *FullNodeScanResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FullNodeScanResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FullNodeScanResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintComplianceNodescanIservice(dAtA []byte, offset int, v uint64) int {
	offset -= sovComplianceNodescanIservice(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *FullNodeScanRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Node)
	if l > 0 {
		n += 1 + l + sovComplianceNodescanIservice(uint64(l))
	}
	if m.Msg != nil {
		l = m.Msg.Size()
		n += 1 + l + sovComplianceNodescanIservice(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FullNodeScanResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovComplianceNodescanIservice(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozComplianceNodescanIservice(x uint64) (n int) {
	return sovComplianceNodescanIservice(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *FullNodeScanRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowComplianceNodescanIservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FullNodeScanRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FullNodeScanRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Node", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceNodescanIservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthComplianceNodescanIservice
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceNodescanIservice
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Node = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceNodescanIservice
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthComplianceNodescanIservice
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceNodescanIservice
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Msg == nil {
				m.Msg = &FullNodeScan{}
			}
			if err := m.Msg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipComplianceNodescanIservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthComplianceNodescanIservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FullNodeScanResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowComplianceNodescanIservice
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FullNodeScanResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FullNodeScanResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipComplianceNodescanIservice(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthComplianceNodescanIservice
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipComplianceNodescanIservice(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowComplianceNodescanIservice
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowComplianceNodescanIservice
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowComplianceNodescanIservice
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthComplianceNodescanIservice
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupComplianceNodescanIservice
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthComplianceNodescanIservice
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthComplianceNodescanIservice        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowComplianceNodescanIservice          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupComplianceNodescanIservice = fmt.Errorf("proto: unexpected end of group")
)
