// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: internalapi/sensor/collector.proto

//go:build !protoopaque

package sensor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExternalIpsEnabled int32

const (
	ExternalIpsEnabled_DISABLED ExternalIpsEnabled = 0
	ExternalIpsEnabled_ENABLED  ExternalIpsEnabled = 1
)

// Enum value maps for ExternalIpsEnabled.
var (
	ExternalIpsEnabled_name = map[int32]string{
		0: "DISABLED",
		1: "ENABLED",
	}
	ExternalIpsEnabled_value = map[string]int32{
		"DISABLED": 0,
		"ENABLED":  1,
	}
)

func (x ExternalIpsEnabled) Enum() *ExternalIpsEnabled {
	p := new(ExternalIpsEnabled)
	*p = x
	return p
}

func (x ExternalIpsEnabled) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExternalIpsEnabled) Descriptor() protoreflect.EnumDescriptor {
	return file_internalapi_sensor_collector_proto_enumTypes[0].Descriptor()
}

func (ExternalIpsEnabled) Type() protoreflect.EnumType {
	return &file_internalapi_sensor_collector_proto_enumTypes[0]
}

func (x ExternalIpsEnabled) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ExternalIpsDirection int32

const (
	ExternalIpsDirection_UNSPECIFIED ExternalIpsDirection = 0
	ExternalIpsDirection_BOTH        ExternalIpsDirection = 1
	ExternalIpsDirection_INGRESS     ExternalIpsDirection = 2
	ExternalIpsDirection_EGRESS      ExternalIpsDirection = 3
)

// Enum value maps for ExternalIpsDirection.
var (
	ExternalIpsDirection_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "BOTH",
		2: "INGRESS",
		3: "EGRESS",
	}
	ExternalIpsDirection_value = map[string]int32{
		"UNSPECIFIED": 0,
		"BOTH":        1,
		"INGRESS":     2,
		"EGRESS":      3,
	}
)

func (x ExternalIpsDirection) Enum() *ExternalIpsDirection {
	p := new(ExternalIpsDirection)
	*p = x
	return p
}

func (x ExternalIpsDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExternalIpsDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_internalapi_sensor_collector_proto_enumTypes[1].Descriptor()
}

func (ExternalIpsDirection) Type() protoreflect.EnumType {
	return &file_internalapi_sensor_collector_proto_enumTypes[1]
}

func (x ExternalIpsDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// A request message sent by collector to register with Sensor. Typically the first message in any streams.
type CollectorRegisterRequest struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// The hostname on which collector is running.
	Hostname *string `protobuf:"bytes,1,opt,name=hostname" json:"hostname,omitempty"`
	// A unique identifier for an instance of collector.
	InstanceId    *string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectorRegisterRequest) Reset() {
	*x = CollectorRegisterRequest{}
	mi := &file_internalapi_sensor_collector_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectorRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectorRegisterRequest) ProtoMessage() {}

func (x *CollectorRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_collector_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CollectorRegisterRequest) GetHostname() string {
	if x != nil && x.Hostname != nil {
		return *x.Hostname
	}
	return ""
}

func (x *CollectorRegisterRequest) GetInstanceId() string {
	if x != nil && x.InstanceId != nil {
		return *x.InstanceId
	}
	return ""
}

func (x *CollectorRegisterRequest) SetHostname(v string) {
	x.Hostname = &v
}

func (x *CollectorRegisterRequest) SetInstanceId(v string) {
	x.InstanceId = &v
}

func (x *CollectorRegisterRequest) HasHostname() bool {
	if x == nil {
		return false
	}
	return x.Hostname != nil
}

func (x *CollectorRegisterRequest) HasInstanceId() bool {
	if x == nil {
		return false
	}
	return x.InstanceId != nil
}

func (x *CollectorRegisterRequest) ClearHostname() {
	x.Hostname = nil
}

func (x *CollectorRegisterRequest) ClearInstanceId() {
	x.InstanceId = nil
}

type CollectorRegisterRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The hostname on which collector is running.
	Hostname *string
	// A unique identifier for an instance of collector.
	InstanceId *string
}

func (b0 CollectorRegisterRequest_builder) Build() *CollectorRegisterRequest {
	m0 := &CollectorRegisterRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.Hostname = b.Hostname
	x.InstanceId = b.InstanceId
	return m0
}

// CollectorConfig controls which type of data is reported by collector
// and how it is processed by collector. These configurations are used
// to fine-tune collector's performance on large scale clusters.
// At this time it only controls if external IPs are aggregated at the
// cluster level and the maximum number of open connections reported
// for each container per minute.
type CollectorConfig struct {
	state         protoimpl.MessageState      `protogen:"hybrid.v1"`
	Networking    *CollectorConfig_Networking `protobuf:"bytes,1,opt,name=networking" json:"networking,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectorConfig) Reset() {
	*x = CollectorConfig{}
	mi := &file_internalapi_sensor_collector_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectorConfig) ProtoMessage() {}

func (x *CollectorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_collector_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CollectorConfig) GetNetworking() *CollectorConfig_Networking {
	if x != nil {
		return x.Networking
	}
	return nil
}

func (x *CollectorConfig) SetNetworking(v *CollectorConfig_Networking) {
	x.Networking = v
}

func (x *CollectorConfig) HasNetworking() bool {
	if x == nil {
		return false
	}
	return x.Networking != nil
}

func (x *CollectorConfig) ClearNetworking() {
	x.Networking = nil
}

type CollectorConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Networking *CollectorConfig_Networking
}

func (b0 CollectorConfig_builder) Build() *CollectorConfig {
	m0 := &CollectorConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.Networking = b.Networking
	return m0
}

type ProcessSignal struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// A unique UUID for identifying the message
	// We have this here instead of at the top level
	// because we want to have each message to be
	// self contained.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// ID of container associated with this process
	ContainerId *string `protobuf:"bytes,2,opt,name=container_id,json=containerId" json:"container_id,omitempty"`
	// Process creation time
	CreationTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=creation_time,json=creationTime" json:"creation_time,omitempty"`
	// Process name
	Name *string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	// Process arguments
	Args *string `protobuf:"bytes,5,opt,name=args" json:"args,omitempty"`
	// Process executable file path
	ExecFilePath *string `protobuf:"bytes,6,opt,name=exec_file_path,json=execFilePath" json:"exec_file_path,omitempty"`
	// Host process ID
	Pid *uint32 `protobuf:"varint,7,opt,name=pid" json:"pid,omitempty"`
	// Real user ID
	Uid *uint32 `protobuf:"varint,8,opt,name=uid" json:"uid,omitempty"`
	// Real group ID
	Gid *uint32 `protobuf:"varint,9,opt,name=gid" json:"gid,omitempty"`
	// Signal origin
	Scraped *bool `protobuf:"varint,10,opt,name=scraped" json:"scraped,omitempty"`
	// Process LineageInfo
	LineageInfo []*ProcessSignal_LineageInfo `protobuf:"bytes,11,rep,name=lineage_info,json=lineageInfo" json:"lineage_info,omitempty"`
	// SFA fields
	// User ID used for login to the system
	LoginUid *uint32 `protobuf:"varint,12,opt,name=login_uid,json=loginUid" json:"login_uid,omitempty"`
	// string representation of the process uid
	Username *string `protobuf:"bytes,13,opt,name=username" json:"username,omitempty"`
	// whether the process is running on the root mount namespace
	InRootMountNs *bool `protobuf:"varint,14,opt,name=in_root_mount_ns,json=inRootMountNs" json:"in_root_mount_ns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessSignal) Reset() {
	*x = ProcessSignal{}
	mi := &file_internalapi_sensor_collector_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessSignal) ProtoMessage() {}

func (x *ProcessSignal) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_collector_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProcessSignal) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ProcessSignal) GetContainerId() string {
	if x != nil && x.ContainerId != nil {
		return *x.ContainerId
	}
	return ""
}

func (x *ProcessSignal) GetCreationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationTime
	}
	return nil
}

func (x *ProcessSignal) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProcessSignal) GetArgs() string {
	if x != nil && x.Args != nil {
		return *x.Args
	}
	return ""
}

func (x *ProcessSignal) GetExecFilePath() string {
	if x != nil && x.ExecFilePath != nil {
		return *x.ExecFilePath
	}
	return ""
}

func (x *ProcessSignal) GetPid() uint32 {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return 0
}

func (x *ProcessSignal) GetUid() uint32 {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return 0
}

func (x *ProcessSignal) GetGid() uint32 {
	if x != nil && x.Gid != nil {
		return *x.Gid
	}
	return 0
}

func (x *ProcessSignal) GetScraped() bool {
	if x != nil && x.Scraped != nil {
		return *x.Scraped
	}
	return false
}

func (x *ProcessSignal) GetLineageInfo() []*ProcessSignal_LineageInfo {
	if x != nil {
		return x.LineageInfo
	}
	return nil
}

func (x *ProcessSignal) GetLoginUid() uint32 {
	if x != nil && x.LoginUid != nil {
		return *x.LoginUid
	}
	return 0
}

func (x *ProcessSignal) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *ProcessSignal) GetInRootMountNs() bool {
	if x != nil && x.InRootMountNs != nil {
		return *x.InRootMountNs
	}
	return false
}

func (x *ProcessSignal) SetId(v string) {
	x.Id = &v
}

func (x *ProcessSignal) SetContainerId(v string) {
	x.ContainerId = &v
}

func (x *ProcessSignal) SetCreationTime(v *timestamppb.Timestamp) {
	x.CreationTime = v
}

func (x *ProcessSignal) SetName(v string) {
	x.Name = &v
}

func (x *ProcessSignal) SetArgs(v string) {
	x.Args = &v
}

func (x *ProcessSignal) SetExecFilePath(v string) {
	x.ExecFilePath = &v
}

func (x *ProcessSignal) SetPid(v uint32) {
	x.Pid = &v
}

func (x *ProcessSignal) SetUid(v uint32) {
	x.Uid = &v
}

func (x *ProcessSignal) SetGid(v uint32) {
	x.Gid = &v
}

func (x *ProcessSignal) SetScraped(v bool) {
	x.Scraped = &v
}

func (x *ProcessSignal) SetLineageInfo(v []*ProcessSignal_LineageInfo) {
	x.LineageInfo = v
}

func (x *ProcessSignal) SetLoginUid(v uint32) {
	x.LoginUid = &v
}

func (x *ProcessSignal) SetUsername(v string) {
	x.Username = &v
}

func (x *ProcessSignal) SetInRootMountNs(v bool) {
	x.InRootMountNs = &v
}

func (x *ProcessSignal) HasId() bool {
	if x == nil {
		return false
	}
	return x.Id != nil
}

func (x *ProcessSignal) HasContainerId() bool {
	if x == nil {
		return false
	}
	return x.ContainerId != nil
}

func (x *ProcessSignal) HasCreationTime() bool {
	if x == nil {
		return false
	}
	return x.CreationTime != nil
}

func (x *ProcessSignal) HasName() bool {
	if x == nil {
		return false
	}
	return x.Name != nil
}

func (x *ProcessSignal) HasArgs() bool {
	if x == nil {
		return false
	}
	return x.Args != nil
}

func (x *ProcessSignal) HasExecFilePath() bool {
	if x == nil {
		return false
	}
	return x.ExecFilePath != nil
}

func (x *ProcessSignal) HasPid() bool {
	if x == nil {
		return false
	}
	return x.Pid != nil
}

func (x *ProcessSignal) HasUid() bool {
	if x == nil {
		return false
	}
	return x.Uid != nil
}

func (x *ProcessSignal) HasGid() bool {
	if x == nil {
		return false
	}
	return x.Gid != nil
}

func (x *ProcessSignal) HasScraped() bool {
	if x == nil {
		return false
	}
	return x.Scraped != nil
}

func (x *ProcessSignal) HasLoginUid() bool {
	if x == nil {
		return false
	}
	return x.LoginUid != nil
}

func (x *ProcessSignal) HasUsername() bool {
	if x == nil {
		return false
	}
	return x.Username != nil
}

func (x *ProcessSignal) HasInRootMountNs() bool {
	if x == nil {
		return false
	}
	return x.InRootMountNs != nil
}

func (x *ProcessSignal) ClearId() {
	x.Id = nil
}

func (x *ProcessSignal) ClearContainerId() {
	x.ContainerId = nil
}

func (x *ProcessSignal) ClearCreationTime() {
	x.CreationTime = nil
}

func (x *ProcessSignal) ClearName() {
	x.Name = nil
}

func (x *ProcessSignal) ClearArgs() {
	x.Args = nil
}

func (x *ProcessSignal) ClearExecFilePath() {
	x.ExecFilePath = nil
}

func (x *ProcessSignal) ClearPid() {
	x.Pid = nil
}

func (x *ProcessSignal) ClearUid() {
	x.Uid = nil
}

func (x *ProcessSignal) ClearGid() {
	x.Gid = nil
}

func (x *ProcessSignal) ClearScraped() {
	x.Scraped = nil
}

func (x *ProcessSignal) ClearLoginUid() {
	x.LoginUid = nil
}

func (x *ProcessSignal) ClearUsername() {
	x.Username = nil
}

func (x *ProcessSignal) ClearInRootMountNs() {
	x.InRootMountNs = nil
}

type ProcessSignal_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// A unique UUID for identifying the message
	// We have this here instead of at the top level
	// because we want to have each message to be
	// self contained.
	Id *string
	// ID of container associated with this process
	ContainerId *string
	// Process creation time
	CreationTime *timestamppb.Timestamp
	// Process name
	Name *string
	// Process arguments
	Args *string
	// Process executable file path
	ExecFilePath *string
	// Host process ID
	Pid *uint32
	// Real user ID
	Uid *uint32
	// Real group ID
	Gid *uint32
	// Signal origin
	Scraped *bool
	// Process LineageInfo
	LineageInfo []*ProcessSignal_LineageInfo
	// SFA fields
	// User ID used for login to the system
	LoginUid *uint32
	// string representation of the process uid
	Username *string
	// whether the process is running on the root mount namespace
	InRootMountNs *bool
}

func (b0 ProcessSignal_builder) Build() *ProcessSignal {
	m0 := &ProcessSignal{}
	b, x := &b0, m0
	_, _ = b, x
	x.Id = b.Id
	x.ContainerId = b.ContainerId
	x.CreationTime = b.CreationTime
	x.Name = b.Name
	x.Args = b.Args
	x.ExecFilePath = b.ExecFilePath
	x.Pid = b.Pid
	x.Uid = b.Uid
	x.Gid = b.Gid
	x.Scraped = b.Scraped
	x.LineageInfo = b.LineageInfo
	x.LoginUid = b.LoginUid
	x.Username = b.Username
	x.InRootMountNs = b.InRootMountNs
	return m0
}

type CollectorConfig_ExternalIPs struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Enabled       *ExternalIpsEnabled    `protobuf:"varint,1,opt,name=enabled,enum=sensor.ExternalIpsEnabled" json:"enabled,omitempty"`
	Direction     *ExternalIpsDirection  `protobuf:"varint,2,opt,name=direction,enum=sensor.ExternalIpsDirection" json:"direction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectorConfig_ExternalIPs) Reset() {
	*x = CollectorConfig_ExternalIPs{}
	mi := &file_internalapi_sensor_collector_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectorConfig_ExternalIPs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectorConfig_ExternalIPs) ProtoMessage() {}

func (x *CollectorConfig_ExternalIPs) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_collector_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CollectorConfig_ExternalIPs) GetEnabled() ExternalIpsEnabled {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return ExternalIpsEnabled_DISABLED
}

func (x *CollectorConfig_ExternalIPs) GetDirection() ExternalIpsDirection {
	if x != nil && x.Direction != nil {
		return *x.Direction
	}
	return ExternalIpsDirection_UNSPECIFIED
}

func (x *CollectorConfig_ExternalIPs) SetEnabled(v ExternalIpsEnabled) {
	x.Enabled = &v
}

func (x *CollectorConfig_ExternalIPs) SetDirection(v ExternalIpsDirection) {
	x.Direction = &v
}

func (x *CollectorConfig_ExternalIPs) HasEnabled() bool {
	if x == nil {
		return false
	}
	return x.Enabled != nil
}

func (x *CollectorConfig_ExternalIPs) HasDirection() bool {
	if x == nil {
		return false
	}
	return x.Direction != nil
}

func (x *CollectorConfig_ExternalIPs) ClearEnabled() {
	x.Enabled = nil
}

func (x *CollectorConfig_ExternalIPs) ClearDirection() {
	x.Direction = nil
}

type CollectorConfig_ExternalIPs_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Enabled   *ExternalIpsEnabled
	Direction *ExternalIpsDirection
}

func (b0 CollectorConfig_ExternalIPs_builder) Build() *CollectorConfig_ExternalIPs {
	m0 := &CollectorConfig_ExternalIPs{}
	b, x := &b0, m0
	_, _ = b, x
	x.Enabled = b.Enabled
	x.Direction = b.Direction
	return m0
}

type CollectorConfig_Networking struct {
	state                   protoimpl.MessageState       `protogen:"hybrid.v1"`
	ExternalIps             *CollectorConfig_ExternalIPs `protobuf:"bytes,1,opt,name=external_ips,json=externalIps" json:"external_ips,omitempty"`
	MaxConnectionsPerMinute *int64                       `protobuf:"varint,2,opt,name=max_connections_per_minute,json=maxConnectionsPerMinute" json:"max_connections_per_minute,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CollectorConfig_Networking) Reset() {
	*x = CollectorConfig_Networking{}
	mi := &file_internalapi_sensor_collector_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectorConfig_Networking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectorConfig_Networking) ProtoMessage() {}

func (x *CollectorConfig_Networking) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_collector_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CollectorConfig_Networking) GetExternalIps() *CollectorConfig_ExternalIPs {
	if x != nil {
		return x.ExternalIps
	}
	return nil
}

func (x *CollectorConfig_Networking) GetMaxConnectionsPerMinute() int64 {
	if x != nil && x.MaxConnectionsPerMinute != nil {
		return *x.MaxConnectionsPerMinute
	}
	return 0
}

func (x *CollectorConfig_Networking) SetExternalIps(v *CollectorConfig_ExternalIPs) {
	x.ExternalIps = v
}

func (x *CollectorConfig_Networking) SetMaxConnectionsPerMinute(v int64) {
	x.MaxConnectionsPerMinute = &v
}

func (x *CollectorConfig_Networking) HasExternalIps() bool {
	if x == nil {
		return false
	}
	return x.ExternalIps != nil
}

func (x *CollectorConfig_Networking) HasMaxConnectionsPerMinute() bool {
	if x == nil {
		return false
	}
	return x.MaxConnectionsPerMinute != nil
}

func (x *CollectorConfig_Networking) ClearExternalIps() {
	x.ExternalIps = nil
}

func (x *CollectorConfig_Networking) ClearMaxConnectionsPerMinute() {
	x.MaxConnectionsPerMinute = nil
}

type CollectorConfig_Networking_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ExternalIps             *CollectorConfig_ExternalIPs
	MaxConnectionsPerMinute *int64
}

func (b0 CollectorConfig_Networking_builder) Build() *CollectorConfig_Networking {
	m0 := &CollectorConfig_Networking{}
	b, x := &b0, m0
	_, _ = b, x
	x.ExternalIps = b.ExternalIps
	x.MaxConnectionsPerMinute = b.MaxConnectionsPerMinute
	return m0
}

type ProcessSignal_LineageInfo struct {
	state              protoimpl.MessageState `protogen:"hybrid.v1"`
	ParentUid          *uint32                `protobuf:"varint,1,opt,name=parent_uid,json=parentUid" json:"parent_uid,omitempty"`
	ParentExecFilePath *string                `protobuf:"bytes,2,opt,name=parent_exec_file_path,json=parentExecFilePath" json:"parent_exec_file_path,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ProcessSignal_LineageInfo) Reset() {
	*x = ProcessSignal_LineageInfo{}
	mi := &file_internalapi_sensor_collector_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessSignal_LineageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessSignal_LineageInfo) ProtoMessage() {}

func (x *ProcessSignal_LineageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_collector_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ProcessSignal_LineageInfo) GetParentUid() uint32 {
	if x != nil && x.ParentUid != nil {
		return *x.ParentUid
	}
	return 0
}

func (x *ProcessSignal_LineageInfo) GetParentExecFilePath() string {
	if x != nil && x.ParentExecFilePath != nil {
		return *x.ParentExecFilePath
	}
	return ""
}

func (x *ProcessSignal_LineageInfo) SetParentUid(v uint32) {
	x.ParentUid = &v
}

func (x *ProcessSignal_LineageInfo) SetParentExecFilePath(v string) {
	x.ParentExecFilePath = &v
}

func (x *ProcessSignal_LineageInfo) HasParentUid() bool {
	if x == nil {
		return false
	}
	return x.ParentUid != nil
}

func (x *ProcessSignal_LineageInfo) HasParentExecFilePath() bool {
	if x == nil {
		return false
	}
	return x.ParentExecFilePath != nil
}

func (x *ProcessSignal_LineageInfo) ClearParentUid() {
	x.ParentUid = nil
}

func (x *ProcessSignal_LineageInfo) ClearParentExecFilePath() {
	x.ParentExecFilePath = nil
}

type ProcessSignal_LineageInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ParentUid          *uint32
	ParentExecFilePath *string
}

func (b0 ProcessSignal_LineageInfo_builder) Build() *ProcessSignal_LineageInfo {
	m0 := &ProcessSignal_LineageInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.ParentUid = b.ParentUid
	x.ParentExecFilePath = b.ParentExecFilePath
	return m0
}

var File_internalapi_sensor_collector_proto protoreflect.FileDescriptor

const file_internalapi_sensor_collector_proto_rawDesc = "" +
	"\n" +
	"\"internalapi/sensor/collector.proto\x12\x06sensor\x1a\x1fgoogle/protobuf/timestamp.proto\x1a!google/protobuf/go_features.proto\"W\n" +
	"\x18CollectorRegisterRequest\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x1f\n" +
	"\vinstance_id\x18\x02 \x01(\tR\n" +
	"instanceId\"\xea\x02\n" +
	"\x0fCollectorConfig\x12B\n" +
	"\n" +
	"networking\x18\x01 \x01(\v2\".sensor.CollectorConfig.NetworkingR\n" +
	"networking\x1a\x7f\n" +
	"\vExternalIPs\x124\n" +
	"\aenabled\x18\x01 \x01(\x0e2\x1a.sensor.ExternalIpsEnabledR\aenabled\x12:\n" +
	"\tdirection\x18\x02 \x01(\x0e2\x1c.sensor.ExternalIpsDirectionR\tdirection\x1a\x91\x01\n" +
	"\n" +
	"Networking\x12F\n" +
	"\fexternal_ips\x18\x01 \x01(\v2#.sensor.CollectorConfig.ExternalIPsR\vexternalIps\x12;\n" +
	"\x1amax_connections_per_minute\x18\x02 \x01(\x03R\x17maxConnectionsPerMinute\"\xaa\x04\n" +
	"\rProcessSignal\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fcontainer_id\x18\x02 \x01(\tR\vcontainerId\x12?\n" +
	"\rcreation_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\fcreationTime\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x12\n" +
	"\x04args\x18\x05 \x01(\tR\x04args\x12$\n" +
	"\x0eexec_file_path\x18\x06 \x01(\tR\fexecFilePath\x12\x10\n" +
	"\x03pid\x18\a \x01(\rR\x03pid\x12\x10\n" +
	"\x03uid\x18\b \x01(\rR\x03uid\x12\x10\n" +
	"\x03gid\x18\t \x01(\rR\x03gid\x12\x18\n" +
	"\ascraped\x18\n" +
	" \x01(\bR\ascraped\x12D\n" +
	"\flineage_info\x18\v \x03(\v2!.sensor.ProcessSignal.LineageInfoR\vlineageInfo\x12\x1b\n" +
	"\tlogin_uid\x18\f \x01(\rR\bloginUid\x12\x1a\n" +
	"\busername\x18\r \x01(\tR\busername\x12'\n" +
	"\x10in_root_mount_ns\x18\x0e \x01(\bR\rinRootMountNs\x1a_\n" +
	"\vLineageInfo\x12\x1d\n" +
	"\n" +
	"parent_uid\x18\x01 \x01(\rR\tparentUid\x121\n" +
	"\x15parent_exec_file_path\x18\x02 \x01(\tR\x12parentExecFilePath*/\n" +
	"\x12ExternalIpsEnabled\x12\f\n" +
	"\bDISABLED\x10\x00\x12\v\n" +
	"\aENABLED\x10\x01*J\n" +
	"\x14ExternalIpsDirection\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\b\n" +
	"\x04BOTH\x10\x01\x12\v\n" +
	"\aINGRESS\x10\x02\x12\n" +
	"\n" +
	"\x06EGRESS\x10\x03B(Z\x1b./internalapi/sensor;sensor\xf8\x01\x01\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_internalapi_sensor_collector_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_internalapi_sensor_collector_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_internalapi_sensor_collector_proto_goTypes = []any{
	(ExternalIpsEnabled)(0),             // 0: sensor.ExternalIpsEnabled
	(ExternalIpsDirection)(0),           // 1: sensor.ExternalIpsDirection
	(*CollectorRegisterRequest)(nil),    // 2: sensor.CollectorRegisterRequest
	(*CollectorConfig)(nil),             // 3: sensor.CollectorConfig
	(*ProcessSignal)(nil),               // 4: sensor.ProcessSignal
	(*CollectorConfig_ExternalIPs)(nil), // 5: sensor.CollectorConfig.ExternalIPs
	(*CollectorConfig_Networking)(nil),  // 6: sensor.CollectorConfig.Networking
	(*ProcessSignal_LineageInfo)(nil),   // 7: sensor.ProcessSignal.LineageInfo
	(*timestamppb.Timestamp)(nil),       // 8: google.protobuf.Timestamp
}
var file_internalapi_sensor_collector_proto_depIdxs = []int32{
	6, // 0: sensor.CollectorConfig.networking:type_name -> sensor.CollectorConfig.Networking
	8, // 1: sensor.ProcessSignal.creation_time:type_name -> google.protobuf.Timestamp
	7, // 2: sensor.ProcessSignal.lineage_info:type_name -> sensor.ProcessSignal.LineageInfo
	0, // 3: sensor.CollectorConfig.ExternalIPs.enabled:type_name -> sensor.ExternalIpsEnabled
	1, // 4: sensor.CollectorConfig.ExternalIPs.direction:type_name -> sensor.ExternalIpsDirection
	5, // 5: sensor.CollectorConfig.Networking.external_ips:type_name -> sensor.CollectorConfig.ExternalIPs
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_internalapi_sensor_collector_proto_init() }
func file_internalapi_sensor_collector_proto_init() {
	if File_internalapi_sensor_collector_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internalapi_sensor_collector_proto_rawDesc), len(file_internalapi_sensor_collector_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internalapi_sensor_collector_proto_goTypes,
		DependencyIndexes: file_internalapi_sensor_collector_proto_depIdxs,
		EnumInfos:         file_internalapi_sensor_collector_proto_enumTypes,
		MessageInfos:      file_internalapi_sensor_collector_proto_msgTypes,
	}.Build()
	File_internalapi_sensor_collector_proto = out.File
	file_internalapi_sensor_collector_proto_goTypes = nil
	file_internalapi_sensor_collector_proto_depIdxs = nil
}
