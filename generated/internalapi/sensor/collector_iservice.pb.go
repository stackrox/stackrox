// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: internalapi/sensor/collector_iservice.proto

//go:build !protoopaque

package sensor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgFromCollector struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Types that are valid to be assigned to Msg:
	//
	//	*MsgFromCollector_Register
	//	*MsgFromCollector_Info
	//	*MsgFromCollector_ProcessSignal
	Msg           isMsgFromCollector_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgFromCollector) Reset() {
	*x = MsgFromCollector{}
	mi := &file_internalapi_sensor_collector_iservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgFromCollector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFromCollector) ProtoMessage() {}

func (x *MsgFromCollector) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_collector_iservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MsgFromCollector) GetMsg() isMsgFromCollector_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *MsgFromCollector) GetRegister() *CollectorRegisterRequest {
	if x != nil {
		if x, ok := x.Msg.(*MsgFromCollector_Register); ok {
			return x.Register
		}
	}
	return nil
}

func (x *MsgFromCollector) GetInfo() *NetworkConnectionInfo {
	if x != nil {
		if x, ok := x.Msg.(*MsgFromCollector_Info); ok {
			return x.Info
		}
	}
	return nil
}

func (x *MsgFromCollector) GetProcessSignal() *ProcessSignal {
	if x != nil {
		if x, ok := x.Msg.(*MsgFromCollector_ProcessSignal); ok {
			return x.ProcessSignal
		}
	}
	return nil
}

func (x *MsgFromCollector) SetRegister(v *CollectorRegisterRequest) {
	if v == nil {
		x.Msg = nil
		return
	}
	x.Msg = &MsgFromCollector_Register{v}
}

func (x *MsgFromCollector) SetInfo(v *NetworkConnectionInfo) {
	if v == nil {
		x.Msg = nil
		return
	}
	x.Msg = &MsgFromCollector_Info{v}
}

func (x *MsgFromCollector) SetProcessSignal(v *ProcessSignal) {
	if v == nil {
		x.Msg = nil
		return
	}
	x.Msg = &MsgFromCollector_ProcessSignal{v}
}

func (x *MsgFromCollector) HasMsg() bool {
	if x == nil {
		return false
	}
	return x.Msg != nil
}

func (x *MsgFromCollector) HasRegister() bool {
	if x == nil {
		return false
	}
	_, ok := x.Msg.(*MsgFromCollector_Register)
	return ok
}

func (x *MsgFromCollector) HasInfo() bool {
	if x == nil {
		return false
	}
	_, ok := x.Msg.(*MsgFromCollector_Info)
	return ok
}

func (x *MsgFromCollector) HasProcessSignal() bool {
	if x == nil {
		return false
	}
	_, ok := x.Msg.(*MsgFromCollector_ProcessSignal)
	return ok
}

func (x *MsgFromCollector) ClearMsg() {
	x.Msg = nil
}

func (x *MsgFromCollector) ClearRegister() {
	if _, ok := x.Msg.(*MsgFromCollector_Register); ok {
		x.Msg = nil
	}
}

func (x *MsgFromCollector) ClearInfo() {
	if _, ok := x.Msg.(*MsgFromCollector_Info); ok {
		x.Msg = nil
	}
}

func (x *MsgFromCollector) ClearProcessSignal() {
	if _, ok := x.Msg.(*MsgFromCollector_ProcessSignal); ok {
		x.Msg = nil
	}
}

const MsgFromCollector_Msg_not_set_case case_MsgFromCollector_Msg = 0
const MsgFromCollector_Register_case case_MsgFromCollector_Msg = 1
const MsgFromCollector_Info_case case_MsgFromCollector_Msg = 2
const MsgFromCollector_ProcessSignal_case case_MsgFromCollector_Msg = 3

func (x *MsgFromCollector) WhichMsg() case_MsgFromCollector_Msg {
	if x == nil {
		return MsgFromCollector_Msg_not_set_case
	}
	switch x.Msg.(type) {
	case *MsgFromCollector_Register:
		return MsgFromCollector_Register_case
	case *MsgFromCollector_Info:
		return MsgFromCollector_Info_case
	case *MsgFromCollector_ProcessSignal:
		return MsgFromCollector_ProcessSignal_case
	default:
		return MsgFromCollector_Msg_not_set_case
	}
}

type MsgFromCollector_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof Msg:
	Register      *CollectorRegisterRequest
	Info          *NetworkConnectionInfo
	ProcessSignal *ProcessSignal
	// -- end of Msg
}

func (b0 MsgFromCollector_builder) Build() *MsgFromCollector {
	m0 := &MsgFromCollector{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Register != nil {
		x.Msg = &MsgFromCollector_Register{b.Register}
	}
	if b.Info != nil {
		x.Msg = &MsgFromCollector_Info{b.Info}
	}
	if b.ProcessSignal != nil {
		x.Msg = &MsgFromCollector_ProcessSignal{b.ProcessSignal}
	}
	return m0
}

type case_MsgFromCollector_Msg protoreflect.FieldNumber

func (x case_MsgFromCollector_Msg) String() string {
	md := file_internalapi_sensor_collector_iservice_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isMsgFromCollector_Msg interface {
	isMsgFromCollector_Msg()
}

type MsgFromCollector_Register struct {
	Register *CollectorRegisterRequest `protobuf:"bytes,1,opt,name=register,oneof"`
}

type MsgFromCollector_Info struct {
	Info *NetworkConnectionInfo `protobuf:"bytes,2,opt,name=info,oneof"`
}

type MsgFromCollector_ProcessSignal struct {
	ProcessSignal *ProcessSignal `protobuf:"bytes,3,opt,name=process_signal,json=processSignal,oneof"`
}

func (*MsgFromCollector_Register) isMsgFromCollector_Msg() {}

func (*MsgFromCollector_Info) isMsgFromCollector_Msg() {}

func (*MsgFromCollector_ProcessSignal) isMsgFromCollector_Msg() {}

type MsgToCollector struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Types that are valid to be assigned to Msg:
	//
	//	*MsgToCollector_PublicIpAddresses
	//	*MsgToCollector_IpNetworks
	Msg           isMsgToCollector_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgToCollector) Reset() {
	*x = MsgToCollector{}
	mi := &file_internalapi_sensor_collector_iservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgToCollector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToCollector) ProtoMessage() {}

func (x *MsgToCollector) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_collector_iservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MsgToCollector) GetMsg() isMsgToCollector_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *MsgToCollector) GetPublicIpAddresses() *IPAddressList {
	if x != nil {
		if x, ok := x.Msg.(*MsgToCollector_PublicIpAddresses); ok {
			return x.PublicIpAddresses
		}
	}
	return nil
}

func (x *MsgToCollector) GetIpNetworks() *IPNetworkList {
	if x != nil {
		if x, ok := x.Msg.(*MsgToCollector_IpNetworks); ok {
			return x.IpNetworks
		}
	}
	return nil
}

func (x *MsgToCollector) SetPublicIpAddresses(v *IPAddressList) {
	if v == nil {
		x.Msg = nil
		return
	}
	x.Msg = &MsgToCollector_PublicIpAddresses{v}
}

func (x *MsgToCollector) SetIpNetworks(v *IPNetworkList) {
	if v == nil {
		x.Msg = nil
		return
	}
	x.Msg = &MsgToCollector_IpNetworks{v}
}

func (x *MsgToCollector) HasMsg() bool {
	if x == nil {
		return false
	}
	return x.Msg != nil
}

func (x *MsgToCollector) HasPublicIpAddresses() bool {
	if x == nil {
		return false
	}
	_, ok := x.Msg.(*MsgToCollector_PublicIpAddresses)
	return ok
}

func (x *MsgToCollector) HasIpNetworks() bool {
	if x == nil {
		return false
	}
	_, ok := x.Msg.(*MsgToCollector_IpNetworks)
	return ok
}

func (x *MsgToCollector) ClearMsg() {
	x.Msg = nil
}

func (x *MsgToCollector) ClearPublicIpAddresses() {
	if _, ok := x.Msg.(*MsgToCollector_PublicIpAddresses); ok {
		x.Msg = nil
	}
}

func (x *MsgToCollector) ClearIpNetworks() {
	if _, ok := x.Msg.(*MsgToCollector_IpNetworks); ok {
		x.Msg = nil
	}
}

const MsgToCollector_Msg_not_set_case case_MsgToCollector_Msg = 0
const MsgToCollector_PublicIpAddresses_case case_MsgToCollector_Msg = 1
const MsgToCollector_IpNetworks_case case_MsgToCollector_Msg = 2

func (x *MsgToCollector) WhichMsg() case_MsgToCollector_Msg {
	if x == nil {
		return MsgToCollector_Msg_not_set_case
	}
	switch x.Msg.(type) {
	case *MsgToCollector_PublicIpAddresses:
		return MsgToCollector_PublicIpAddresses_case
	case *MsgToCollector_IpNetworks:
		return MsgToCollector_IpNetworks_case
	default:
		return MsgToCollector_Msg_not_set_case
	}
}

type MsgToCollector_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof Msg:
	PublicIpAddresses *IPAddressList
	IpNetworks        *IPNetworkList
	// -- end of Msg
}

func (b0 MsgToCollector_builder) Build() *MsgToCollector {
	m0 := &MsgToCollector{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PublicIpAddresses != nil {
		x.Msg = &MsgToCollector_PublicIpAddresses{b.PublicIpAddresses}
	}
	if b.IpNetworks != nil {
		x.Msg = &MsgToCollector_IpNetworks{b.IpNetworks}
	}
	return m0
}

type case_MsgToCollector_Msg protoreflect.FieldNumber

func (x case_MsgToCollector_Msg) String() string {
	md := file_internalapi_sensor_collector_iservice_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isMsgToCollector_Msg interface {
	isMsgToCollector_Msg()
}

type MsgToCollector_PublicIpAddresses struct {
	PublicIpAddresses *IPAddressList `protobuf:"bytes,1,opt,name=public_ip_addresses,json=publicIpAddresses,oneof"`
}

type MsgToCollector_IpNetworks struct {
	IpNetworks *IPNetworkList `protobuf:"bytes,2,opt,name=ip_networks,json=ipNetworks,oneof"`
}

func (*MsgToCollector_PublicIpAddresses) isMsgToCollector_Msg() {}

func (*MsgToCollector_IpNetworks) isMsgToCollector_Msg() {}

var File_internalapi_sensor_collector_iservice_proto protoreflect.FileDescriptor

const file_internalapi_sensor_collector_iservice_proto_rawDesc = "" +
	"\n" +
	"+internalapi/sensor/collector_iservice.proto\x12\x06sensor\x1a\"internalapi/sensor/collector.proto\x1a0internalapi/sensor/network_connection_info.proto\x1a4internalapi/sensor/network_connection_iservice.proto\x1a!google/protobuf/go_features.proto\"\xce\x01\n" +
	"\x10MsgFromCollector\x12>\n" +
	"\bregister\x18\x01 \x01(\v2 .sensor.CollectorRegisterRequestH\x00R\bregister\x123\n" +
	"\x04info\x18\x02 \x01(\v2\x1d.sensor.NetworkConnectionInfoH\x00R\x04info\x12>\n" +
	"\x0eprocess_signal\x18\x03 \x01(\v2\x15.sensor.ProcessSignalH\x00R\rprocessSignalB\x05\n" +
	"\x03msg\"\x9a\x01\n" +
	"\x0eMsgToCollector\x12G\n" +
	"\x13public_ip_addresses\x18\x01 \x01(\v2\x15.sensor.IPAddressListH\x00R\x11publicIpAddresses\x128\n" +
	"\vip_networks\x18\x02 \x01(\v2\x15.sensor.IPNetworkListH\x00R\n" +
	"ipNetworksB\x05\n" +
	"\x03msg2W\n" +
	"\x10CollectorService\x12C\n" +
	"\vCommunicate\x12\x18.sensor.MsgFromCollector\x1a\x16.sensor.MsgToCollector(\x010\x01B0Z\x1b./internalapi/sensor;sensor\xf8\x01\x01\x92\x03\r\xd2>\x02\x10\x02\b\x02\x10\x01 \x020\x01b\beditionsp\xe8\a"

var file_internalapi_sensor_collector_iservice_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_internalapi_sensor_collector_iservice_proto_goTypes = []any{
	(*MsgFromCollector)(nil),         // 0: sensor.MsgFromCollector
	(*MsgToCollector)(nil),           // 1: sensor.MsgToCollector
	(*CollectorRegisterRequest)(nil), // 2: sensor.CollectorRegisterRequest
	(*NetworkConnectionInfo)(nil),    // 3: sensor.NetworkConnectionInfo
	(*ProcessSignal)(nil),            // 4: sensor.ProcessSignal
	(*IPAddressList)(nil),            // 5: sensor.IPAddressList
	(*IPNetworkList)(nil),            // 6: sensor.IPNetworkList
}
var file_internalapi_sensor_collector_iservice_proto_depIdxs = []int32{
	2, // 0: sensor.MsgFromCollector.register:type_name -> sensor.CollectorRegisterRequest
	3, // 1: sensor.MsgFromCollector.info:type_name -> sensor.NetworkConnectionInfo
	4, // 2: sensor.MsgFromCollector.process_signal:type_name -> sensor.ProcessSignal
	5, // 3: sensor.MsgToCollector.public_ip_addresses:type_name -> sensor.IPAddressList
	6, // 4: sensor.MsgToCollector.ip_networks:type_name -> sensor.IPNetworkList
	0, // 5: sensor.CollectorService.Communicate:input_type -> sensor.MsgFromCollector
	1, // 6: sensor.CollectorService.Communicate:output_type -> sensor.MsgToCollector
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_internalapi_sensor_collector_iservice_proto_init() }
func file_internalapi_sensor_collector_iservice_proto_init() {
	if File_internalapi_sensor_collector_iservice_proto != nil {
		return
	}
	file_internalapi_sensor_collector_proto_init()
	file_internalapi_sensor_network_connection_info_proto_init()
	file_internalapi_sensor_network_connection_iservice_proto_init()
	file_internalapi_sensor_collector_iservice_proto_msgTypes[0].OneofWrappers = []any{
		(*MsgFromCollector_Register)(nil),
		(*MsgFromCollector_Info)(nil),
		(*MsgFromCollector_ProcessSignal)(nil),
	}
	file_internalapi_sensor_collector_iservice_proto_msgTypes[1].OneofWrappers = []any{
		(*MsgToCollector_PublicIpAddresses)(nil),
		(*MsgToCollector_IpNetworks)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internalapi_sensor_collector_iservice_proto_rawDesc), len(file_internalapi_sensor_collector_iservice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internalapi_sensor_collector_iservice_proto_goTypes,
		DependencyIndexes: file_internalapi_sensor_collector_iservice_proto_depIdxs,
		MessageInfos:      file_internalapi_sensor_collector_iservice_proto_msgTypes,
	}.Build()
	File_internalapi_sensor_collector_iservice_proto = out.File
	file_internalapi_sensor_collector_iservice_proto_goTypes = nil
	file_internalapi_sensor_collector_iservice_proto_depIdxs = nil
}
