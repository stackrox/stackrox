// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: internalapi/sensor/network_connection_info.proto

//go:build !protoopaque

package sensor

import (
	storage "github.com/stackrox/rox/generated/storage"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NetworkConnectionInfo struct {
	state protoimpl.MessageState `protogen:"hybrid.v1"`
	// Network connections that were added from the last time state was sent.
	UpdatedConnections []*NetworkConnection `protobuf:"bytes,1,rep,name=updated_connections,json=updatedConnections" json:"updated_connections,omitempty"`
	// Listening endpoints that were added from the last time state was sent.
	UpdatedEndpoints []*NetworkEndpoint `protobuf:"bytes,3,rep,name=updated_endpoints,json=updatedEndpoints" json:"updated_endpoints,omitempty"`
	// For active connections, the timestamp of the entire message serves as the latest timestamp
	// that connection was deemed active = the connection was not closed yet at that moment.
	// This is set by Collector and it is the time of creation of the message in Collector.
	Time          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=time" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkConnectionInfo) Reset() {
	*x = NetworkConnectionInfo{}
	mi := &file_internalapi_sensor_network_connection_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConnectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConnectionInfo) ProtoMessage() {}

func (x *NetworkConnectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_network_connection_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkConnectionInfo) GetUpdatedConnections() []*NetworkConnection {
	if x != nil {
		return x.UpdatedConnections
	}
	return nil
}

func (x *NetworkConnectionInfo) GetUpdatedEndpoints() []*NetworkEndpoint {
	if x != nil {
		return x.UpdatedEndpoints
	}
	return nil
}

func (x *NetworkConnectionInfo) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *NetworkConnectionInfo) SetUpdatedConnections(v []*NetworkConnection) {
	x.UpdatedConnections = v
}

func (x *NetworkConnectionInfo) SetUpdatedEndpoints(v []*NetworkEndpoint) {
	x.UpdatedEndpoints = v
}

func (x *NetworkConnectionInfo) SetTime(v *timestamppb.Timestamp) {
	x.Time = v
}

func (x *NetworkConnectionInfo) HasTime() bool {
	if x == nil {
		return false
	}
	return x.Time != nil
}

func (x *NetworkConnectionInfo) ClearTime() {
	x.Time = nil
}

type NetworkConnectionInfo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Network connections that were added from the last time state was sent.
	UpdatedConnections []*NetworkConnection
	// Listening endpoints that were added from the last time state was sent.
	UpdatedEndpoints []*NetworkEndpoint
	// For active connections, the timestamp of the entire message serves as the latest timestamp
	// that connection was deemed active = the connection was not closed yet at that moment.
	// This is set by Collector and it is the time of creation of the message in Collector.
	Time *timestamppb.Timestamp
}

func (b0 NetworkConnectionInfo_builder) Build() *NetworkConnectionInfo {
	m0 := &NetworkConnectionInfo{}
	b, x := &b0, m0
	_, _ = b, x
	x.UpdatedConnections = b.UpdatedConnections
	x.UpdatedEndpoints = b.UpdatedEndpoints
	x.Time = b.Time
	return m0
}

// NetworkConnection tracks connection information about client and server.
type NetworkConnection struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	SocketFamily  SocketFamily           `protobuf:"varint,1,opt,name=socket_family,json=socketFamily,enum=sensor.SocketFamily" json:"socket_family,omitempty"`
	LocalAddress  *NetworkAddress        `protobuf:"bytes,2,opt,name=local_address,json=localAddress" json:"local_address,omitempty"`
	RemoteAddress *NetworkAddress        `protobuf:"bytes,3,opt,name=remote_address,json=remoteAddress" json:"remote_address,omitempty"`
	Protocol      storage.L4Protocol     `protobuf:"varint,4,opt,name=protocol,enum=storage.L4Protocol" json:"protocol,omitempty"`
	Role          ClientServerRole       `protobuf:"varint,5,opt,name=role,enum=sensor.ClientServerRole" json:"role,omitempty"`
	ContainerId   string                 `protobuf:"bytes,6,opt,name=container_id,json=containerId" json:"container_id,omitempty"`
	// If this connection was closed, this gives the timestamp when it was closed. If this is unset, we treat it as an
	// open connection.
	CloseTimestamp *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=close_timestamp,json=closeTimestamp" json:"close_timestamp,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NetworkConnection) Reset() {
	*x = NetworkConnection{}
	mi := &file_internalapi_sensor_network_connection_info_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkConnection) ProtoMessage() {}

func (x *NetworkConnection) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_network_connection_info_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkConnection) GetSocketFamily() SocketFamily {
	if x != nil {
		return x.SocketFamily
	}
	return SocketFamily_SOCKET_FAMILY_UNKNOWN
}

func (x *NetworkConnection) GetLocalAddress() *NetworkAddress {
	if x != nil {
		return x.LocalAddress
	}
	return nil
}

func (x *NetworkConnection) GetRemoteAddress() *NetworkAddress {
	if x != nil {
		return x.RemoteAddress
	}
	return nil
}

func (x *NetworkConnection) GetProtocol() storage.L4Protocol {
	if x != nil {
		return x.Protocol
	}
	return storage.L4Protocol(0)
}

func (x *NetworkConnection) GetRole() ClientServerRole {
	if x != nil {
		return x.Role
	}
	return ClientServerRole_ROLE_UNKNOWN
}

func (x *NetworkConnection) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *NetworkConnection) GetCloseTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseTimestamp
	}
	return nil
}

func (x *NetworkConnection) SetSocketFamily(v SocketFamily) {
	x.SocketFamily = v
}

func (x *NetworkConnection) SetLocalAddress(v *NetworkAddress) {
	x.LocalAddress = v
}

func (x *NetworkConnection) SetRemoteAddress(v *NetworkAddress) {
	x.RemoteAddress = v
}

func (x *NetworkConnection) SetProtocol(v storage.L4Protocol) {
	x.Protocol = v
}

func (x *NetworkConnection) SetRole(v ClientServerRole) {
	x.Role = v
}

func (x *NetworkConnection) SetContainerId(v string) {
	x.ContainerId = v
}

func (x *NetworkConnection) SetCloseTimestamp(v *timestamppb.Timestamp) {
	x.CloseTimestamp = v
}

func (x *NetworkConnection) HasLocalAddress() bool {
	if x == nil {
		return false
	}
	return x.LocalAddress != nil
}

func (x *NetworkConnection) HasRemoteAddress() bool {
	if x == nil {
		return false
	}
	return x.RemoteAddress != nil
}

func (x *NetworkConnection) HasCloseTimestamp() bool {
	if x == nil {
		return false
	}
	return x.CloseTimestamp != nil
}

func (x *NetworkConnection) ClearLocalAddress() {
	x.LocalAddress = nil
}

func (x *NetworkConnection) ClearRemoteAddress() {
	x.RemoteAddress = nil
}

func (x *NetworkConnection) ClearCloseTimestamp() {
	x.CloseTimestamp = nil
}

type NetworkConnection_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SocketFamily  SocketFamily
	LocalAddress  *NetworkAddress
	RemoteAddress *NetworkAddress
	Protocol      storage.L4Protocol
	Role          ClientServerRole
	ContainerId   string
	// If this connection was closed, this gives the timestamp when it was closed. If this is unset, we treat it as an
	// open connection.
	CloseTimestamp *timestamppb.Timestamp
}

func (b0 NetworkConnection_builder) Build() *NetworkConnection {
	m0 := &NetworkConnection{}
	b, x := &b0, m0
	_, _ = b, x
	x.SocketFamily = b.SocketFamily
	x.LocalAddress = b.LocalAddress
	x.RemoteAddress = b.RemoteAddress
	x.Protocol = b.Protocol
	x.Role = b.Role
	x.ContainerId = b.ContainerId
	x.CloseTimestamp = b.CloseTimestamp
	return m0
}

type NetworkEndpoint struct {
	state        protoimpl.MessageState `protogen:"hybrid.v1"`
	SocketFamily SocketFamily           `protobuf:"varint,1,opt,name=socket_family,json=socketFamily,enum=sensor.SocketFamily" json:"socket_family,omitempty"`
	Protocol     storage.L4Protocol     `protobuf:"varint,2,opt,name=protocol,enum=storage.L4Protocol" json:"protocol,omitempty"`
	// The address_data part might be empty to indicate "all interfaces", or to simply save space.
	ListenAddress *NetworkAddress `protobuf:"bytes,3,opt,name=listen_address,json=listenAddress" json:"listen_address,omitempty"`
	ContainerId   string          `protobuf:"bytes,4,opt,name=container_id,json=containerId" json:"container_id,omitempty"`
	// If we're no longer listening on this endpoint, this gives the timestamp when the listen socket
	// was shutdown. If this is unset, we treat it as an actively listening endpoint.
	CloseTimestamp *timestamppb.Timestamp           `protobuf:"bytes,5,opt,name=close_timestamp,json=closeTimestamp" json:"close_timestamp,omitempty"`
	Originator     *storage.NetworkProcessUniqueKey `protobuf:"bytes,6,opt,name=originator" json:"originator,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NetworkEndpoint) Reset() {
	*x = NetworkEndpoint{}
	mi := &file_internalapi_sensor_network_connection_info_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkEndpoint) ProtoMessage() {}

func (x *NetworkEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_network_connection_info_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkEndpoint) GetSocketFamily() SocketFamily {
	if x != nil {
		return x.SocketFamily
	}
	return SocketFamily_SOCKET_FAMILY_UNKNOWN
}

func (x *NetworkEndpoint) GetProtocol() storage.L4Protocol {
	if x != nil {
		return x.Protocol
	}
	return storage.L4Protocol(0)
}

func (x *NetworkEndpoint) GetListenAddress() *NetworkAddress {
	if x != nil {
		return x.ListenAddress
	}
	return nil
}

func (x *NetworkEndpoint) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *NetworkEndpoint) GetCloseTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseTimestamp
	}
	return nil
}

func (x *NetworkEndpoint) GetOriginator() *storage.NetworkProcessUniqueKey {
	if x != nil {
		return x.Originator
	}
	return nil
}

func (x *NetworkEndpoint) SetSocketFamily(v SocketFamily) {
	x.SocketFamily = v
}

func (x *NetworkEndpoint) SetProtocol(v storage.L4Protocol) {
	x.Protocol = v
}

func (x *NetworkEndpoint) SetListenAddress(v *NetworkAddress) {
	x.ListenAddress = v
}

func (x *NetworkEndpoint) SetContainerId(v string) {
	x.ContainerId = v
}

func (x *NetworkEndpoint) SetCloseTimestamp(v *timestamppb.Timestamp) {
	x.CloseTimestamp = v
}

func (x *NetworkEndpoint) SetOriginator(v *storage.NetworkProcessUniqueKey) {
	x.Originator = v
}

func (x *NetworkEndpoint) HasListenAddress() bool {
	if x == nil {
		return false
	}
	return x.ListenAddress != nil
}

func (x *NetworkEndpoint) HasCloseTimestamp() bool {
	if x == nil {
		return false
	}
	return x.CloseTimestamp != nil
}

func (x *NetworkEndpoint) HasOriginator() bool {
	if x == nil {
		return false
	}
	return x.Originator != nil
}

func (x *NetworkEndpoint) ClearListenAddress() {
	x.ListenAddress = nil
}

func (x *NetworkEndpoint) ClearCloseTimestamp() {
	x.CloseTimestamp = nil
}

func (x *NetworkEndpoint) ClearOriginator() {
	x.Originator = nil
}

type NetworkEndpoint_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SocketFamily SocketFamily
	Protocol     storage.L4Protocol
	// The address_data part might be empty to indicate "all interfaces", or to simply save space.
	ListenAddress *NetworkAddress
	ContainerId   string
	// If we're no longer listening on this endpoint, this gives the timestamp when the listen socket
	// was shutdown. If this is unset, we treat it as an actively listening endpoint.
	CloseTimestamp *timestamppb.Timestamp
	Originator     *storage.NetworkProcessUniqueKey
}

func (b0 NetworkEndpoint_builder) Build() *NetworkEndpoint {
	m0 := &NetworkEndpoint{}
	b, x := &b0, m0
	_, _ = b, x
	x.SocketFamily = b.SocketFamily
	x.Protocol = b.Protocol
	x.ListenAddress = b.ListenAddress
	x.ContainerId = b.ContainerId
	x.CloseTimestamp = b.CloseTimestamp
	x.Originator = b.Originator
	return m0
}

type NetworkAddress struct {
	state       protoimpl.MessageState `protogen:"hybrid.v1"`
	AddressData []byte                 `protobuf:"bytes,1,opt,name=address_data,json=addressData" json:"address_data,omitempty"` // semantics determined by socket_family of the given connection
	Port        uint32                 `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`                                 // may be 0 if not applicable (e.g., icmp).
	// Represents an IPV4 or IPV6 network. First 4/16 bytes representing network address whereas following byte represents
	// the length of network prefix. If used, this field must have 5 or 17 bytes; otherwise it should be discarded.
	// `ip_network` and `address_data` usage should be mutually exclusive.
	IpNetwork     []byte `protobuf:"bytes,3,opt,name=ip_network,json=ipNetwork" json:"ip_network,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkAddress) Reset() {
	*x = NetworkAddress{}
	mi := &file_internalapi_sensor_network_connection_info_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkAddress) ProtoMessage() {}

func (x *NetworkAddress) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_network_connection_info_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkAddress) GetAddressData() []byte {
	if x != nil {
		return x.AddressData
	}
	return nil
}

func (x *NetworkAddress) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *NetworkAddress) GetIpNetwork() []byte {
	if x != nil {
		return x.IpNetwork
	}
	return nil
}

func (x *NetworkAddress) SetAddressData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.AddressData = v
}

func (x *NetworkAddress) SetPort(v uint32) {
	x.Port = v
}

func (x *NetworkAddress) SetIpNetwork(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.IpNetwork = v
}

type NetworkAddress_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AddressData []byte
	Port        uint32
	// Represents an IPV4 or IPV6 network. First 4/16 bytes representing network address whereas following byte represents
	// the length of network prefix. If used, this field must have 5 or 17 bytes; otherwise it should be discarded.
	// `ip_network` and `address_data` usage should be mutually exclusive.
	IpNetwork []byte
}

func (b0 NetworkAddress_builder) Build() *NetworkAddress {
	m0 := &NetworkAddress{}
	b, x := &b0, m0
	_, _ = b, x
	x.AddressData = b.AddressData
	x.Port = b.Port
	x.IpNetwork = b.IpNetwork
	return m0
}

var File_internalapi_sensor_network_connection_info_proto protoreflect.FileDescriptor

const file_internalapi_sensor_network_connection_info_proto_rawDesc = "" +
	"\n" +
	"0internalapi/sensor/network_connection_info.proto\x12\x06sensor\x1a\x1fgoogle/protobuf/timestamp.proto\x1a&internalapi/sensor/network_enums.proto\x1a\x1astorage/network_flow.proto\x1a\x1fstorage/process_indicator.proto\x1a!google/protobuf/go_features.proto\"\xe5\x01\n" +
	"\x15NetworkConnectionInfo\x12N\n" +
	"\x13updated_connections\x18\x01 \x03(\v2\x19.sensor.NetworkConnectionB\x02(\x01R\x12updatedConnections\x12H\n" +
	"\x11updated_endpoints\x18\x03 \x03(\v2\x17.sensor.NetworkEndpointB\x02(\x01R\x10updatedEndpoints\x122\n" +
	"\x04time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\x04time\"\x95\x03\n" +
	"\x11NetworkConnection\x129\n" +
	"\rsocket_family\x18\x01 \x01(\x0e2\x14.sensor.SocketFamilyR\fsocketFamily\x12;\n" +
	"\rlocal_address\x18\x02 \x01(\v2\x16.sensor.NetworkAddressR\flocalAddress\x12=\n" +
	"\x0eremote_address\x18\x03 \x01(\v2\x16.sensor.NetworkAddressR\rremoteAddress\x12/\n" +
	"\bprotocol\x18\x04 \x01(\x0e2\x13.storage.L4ProtocolR\bprotocol\x12,\n" +
	"\x04role\x18\x05 \x01(\x0e2\x18.sensor.ClientServerRoleR\x04role\x12!\n" +
	"\fcontainer_id\x18\x06 \x01(\tR\vcontainerId\x12G\n" +
	"\x0fclose_timestamp\x18\v \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\x0ecloseTimestamp\"\xee\x02\n" +
	"\x0fNetworkEndpoint\x129\n" +
	"\rsocket_family\x18\x01 \x01(\x0e2\x14.sensor.SocketFamilyR\fsocketFamily\x12/\n" +
	"\bprotocol\x18\x02 \x01(\x0e2\x13.storage.L4ProtocolR\bprotocol\x12=\n" +
	"\x0elisten_address\x18\x03 \x01(\v2\x16.sensor.NetworkAddressR\rlistenAddress\x12!\n" +
	"\fcontainer_id\x18\x04 \x01(\tR\vcontainerId\x12G\n" +
	"\x0fclose_timestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\x02(\x01R\x0ecloseTimestamp\x12D\n" +
	"\n" +
	"originator\x18\x06 \x01(\v2 .storage.NetworkProcessUniqueKeyB\x02(\x01R\n" +
	"originator\"f\n" +
	"\x0eNetworkAddress\x12!\n" +
	"\faddress_data\x18\x01 \x01(\fR\vaddressData\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x12\x1d\n" +
	"\n" +
	"ip_network\x18\x03 \x01(\fR\tipNetworkB0Z\x1b./internalapi/sensor;sensor\xf8\x01\x01\x92\x03\r\xd2>\x02\x10\x02\b\x02\x10\x01 \x020\x01b\beditionsp\xe8\a"

var file_internalapi_sensor_network_connection_info_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_internalapi_sensor_network_connection_info_proto_goTypes = []any{
	(*NetworkConnectionInfo)(nil),           // 0: sensor.NetworkConnectionInfo
	(*NetworkConnection)(nil),               // 1: sensor.NetworkConnection
	(*NetworkEndpoint)(nil),                 // 2: sensor.NetworkEndpoint
	(*NetworkAddress)(nil),                  // 3: sensor.NetworkAddress
	(*timestamppb.Timestamp)(nil),           // 4: google.protobuf.Timestamp
	(SocketFamily)(0),                       // 5: sensor.SocketFamily
	(storage.L4Protocol)(0),                 // 6: storage.L4Protocol
	(ClientServerRole)(0),                   // 7: sensor.ClientServerRole
	(*storage.NetworkProcessUniqueKey)(nil), // 8: storage.NetworkProcessUniqueKey
}
var file_internalapi_sensor_network_connection_info_proto_depIdxs = []int32{
	1,  // 0: sensor.NetworkConnectionInfo.updated_connections:type_name -> sensor.NetworkConnection
	2,  // 1: sensor.NetworkConnectionInfo.updated_endpoints:type_name -> sensor.NetworkEndpoint
	4,  // 2: sensor.NetworkConnectionInfo.time:type_name -> google.protobuf.Timestamp
	5,  // 3: sensor.NetworkConnection.socket_family:type_name -> sensor.SocketFamily
	3,  // 4: sensor.NetworkConnection.local_address:type_name -> sensor.NetworkAddress
	3,  // 5: sensor.NetworkConnection.remote_address:type_name -> sensor.NetworkAddress
	6,  // 6: sensor.NetworkConnection.protocol:type_name -> storage.L4Protocol
	7,  // 7: sensor.NetworkConnection.role:type_name -> sensor.ClientServerRole
	4,  // 8: sensor.NetworkConnection.close_timestamp:type_name -> google.protobuf.Timestamp
	5,  // 9: sensor.NetworkEndpoint.socket_family:type_name -> sensor.SocketFamily
	6,  // 10: sensor.NetworkEndpoint.protocol:type_name -> storage.L4Protocol
	3,  // 11: sensor.NetworkEndpoint.listen_address:type_name -> sensor.NetworkAddress
	4,  // 12: sensor.NetworkEndpoint.close_timestamp:type_name -> google.protobuf.Timestamp
	8,  // 13: sensor.NetworkEndpoint.originator:type_name -> storage.NetworkProcessUniqueKey
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_internalapi_sensor_network_connection_info_proto_init() }
func file_internalapi_sensor_network_connection_info_proto_init() {
	if File_internalapi_sensor_network_connection_info_proto != nil {
		return
	}
	file_internalapi_sensor_network_enums_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internalapi_sensor_network_connection_info_proto_rawDesc), len(file_internalapi_sensor_network_connection_info_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internalapi_sensor_network_connection_info_proto_goTypes,
		DependencyIndexes: file_internalapi_sensor_network_connection_info_proto_depIdxs,
		MessageInfos:      file_internalapi_sensor_network_connection_info_proto_msgTypes,
	}.Build()
	File_internalapi_sensor_network_connection_info_proto = out.File
	file_internalapi_sensor_network_connection_info_proto_goTypes = nil
	file_internalapi_sensor_network_connection_info_proto_depIdxs = nil
}
