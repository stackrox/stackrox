// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: internalapi/sensor/sfa.proto

package sensor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileActivityBase struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Path            string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	HostPath        string                 `protobuf:"bytes,2,opt,name=host_path,json=hostPath,proto3" json:"host_path,omitempty"`
	IsExternalMount bool                   `protobuf:"varint,3,opt,name=is_external_mount,json=isExternalMount,proto3" json:"is_external_mount,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FileActivityBase) Reset() {
	*x = FileActivityBase{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileActivityBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileActivityBase) ProtoMessage() {}

func (x *FileActivityBase) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileActivityBase.ProtoReflect.Descriptor instead.
func (*FileActivityBase) Descriptor() ([]byte, []int) {
	return file_internalapi_sensor_sfa_proto_rawDescGZIP(), []int{0}
}

func (x *FileActivityBase) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileActivityBase) GetHostPath() string {
	if x != nil {
		return x.HostPath
	}
	return ""
}

func (x *FileActivityBase) GetIsExternalMount() bool {
	if x != nil {
		return x.IsExternalMount
	}
	return false
}

type FileCreation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Activity      *FileActivityBase      `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileCreation) Reset() {
	*x = FileCreation{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileCreation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileCreation) ProtoMessage() {}

func (x *FileCreation) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileCreation.ProtoReflect.Descriptor instead.
func (*FileCreation) Descriptor() ([]byte, []int) {
	return file_internalapi_sensor_sfa_proto_rawDescGZIP(), []int{1}
}

func (x *FileCreation) GetActivity() *FileActivityBase {
	if x != nil {
		return x.Activity
	}
	return nil
}

type FileUnlink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Activity      *FileActivityBase      `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUnlink) Reset() {
	*x = FileUnlink{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUnlink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUnlink) ProtoMessage() {}

func (x *FileUnlink) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUnlink.ProtoReflect.Descriptor instead.
func (*FileUnlink) Descriptor() ([]byte, []int) {
	return file_internalapi_sensor_sfa_proto_rawDescGZIP(), []int{2}
}

func (x *FileUnlink) GetActivity() *FileActivityBase {
	if x != nil {
		return x.Activity
	}
	return nil
}

type FileRename struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Old           *FileActivityBase      `protobuf:"bytes,1,opt,name=old,proto3" json:"old,omitempty"`
	New           *FileActivityBase      `protobuf:"bytes,2,opt,name=new,proto3" json:"new,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileRename) Reset() {
	*x = FileRename{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileRename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRename) ProtoMessage() {}

func (x *FileRename) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRename.ProtoReflect.Descriptor instead.
func (*FileRename) Descriptor() ([]byte, []int) {
	return file_internalapi_sensor_sfa_proto_rawDescGZIP(), []int{3}
}

func (x *FileRename) GetOld() *FileActivityBase {
	if x != nil {
		return x.Old
	}
	return nil
}

func (x *FileRename) GetNew() *FileActivityBase {
	if x != nil {
		return x.New
	}
	return nil
}

type FilePermissionChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Activity      *FileActivityBase      `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"`
	Mode          uint32                 `protobuf:"varint,2,opt,name=mode,proto3" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilePermissionChange) Reset() {
	*x = FilePermissionChange{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilePermissionChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilePermissionChange) ProtoMessage() {}

func (x *FilePermissionChange) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilePermissionChange.ProtoReflect.Descriptor instead.
func (*FilePermissionChange) Descriptor() ([]byte, []int) {
	return file_internalapi_sensor_sfa_proto_rawDescGZIP(), []int{4}
}

func (x *FilePermissionChange) GetActivity() *FileActivityBase {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *FilePermissionChange) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type FileOwnershipChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Activity      *FileActivityBase      `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"`
	Uid           uint32                 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid           uint32                 `protobuf:"varint,3,opt,name=gid,proto3" json:"gid,omitempty"`
	Username      string                 `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Group         string                 `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileOwnershipChange) Reset() {
	*x = FileOwnershipChange{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileOwnershipChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileOwnershipChange) ProtoMessage() {}

func (x *FileOwnershipChange) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileOwnershipChange.ProtoReflect.Descriptor instead.
func (*FileOwnershipChange) Descriptor() ([]byte, []int) {
	return file_internalapi_sensor_sfa_proto_rawDescGZIP(), []int{5}
}

func (x *FileOwnershipChange) GetActivity() *FileActivityBase {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *FileOwnershipChange) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FileOwnershipChange) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *FileOwnershipChange) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FileOwnershipChange) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

type FileWrite struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Activity      *FileActivityBase      `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileWrite) Reset() {
	*x = FileWrite{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileWrite) ProtoMessage() {}

func (x *FileWrite) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileWrite.ProtoReflect.Descriptor instead.
func (*FileWrite) Descriptor() ([]byte, []int) {
	return file_internalapi_sensor_sfa_proto_rawDescGZIP(), []int{6}
}

func (x *FileWrite) GetActivity() *FileActivityBase {
	if x != nil {
		return x.Activity
	}
	return nil
}

type FileOpen struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Activity      *FileActivityBase      `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileOpen) Reset() {
	*x = FileOpen{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileOpen) ProtoMessage() {}

func (x *FileOpen) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileOpen.ProtoReflect.Descriptor instead.
func (*FileOpen) Descriptor() ([]byte, []int) {
	return file_internalapi_sensor_sfa_proto_rawDescGZIP(), []int{7}
}

func (x *FileOpen) GetActivity() *FileActivityBase {
	if x != nil {
		return x.Activity
	}
	return nil
}

type FileActivity struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Process   *ProcessSignal         `protobuf:"bytes,2,opt,name=process,proto3" json:"process,omitempty"`
	// Types that are valid to be assigned to File:
	//
	//	*FileActivity_Creation
	//	*FileActivity_Unlink
	//	*FileActivity_Rename
	//	*FileActivity_Permission
	//	*FileActivity_Ownership
	//	*FileActivity_Open
	//	*FileActivity_Write
	File          isFileActivity_File `protobuf_oneof:"file"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileActivity) Reset() {
	*x = FileActivity{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileActivity) ProtoMessage() {}

func (x *FileActivity) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileActivity.ProtoReflect.Descriptor instead.
func (*FileActivity) Descriptor() ([]byte, []int) {
	return file_internalapi_sensor_sfa_proto_rawDescGZIP(), []int{8}
}

func (x *FileActivity) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *FileActivity) GetProcess() *ProcessSignal {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *FileActivity) GetFile() isFileActivity_File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *FileActivity) GetCreation() *FileCreation {
	if x != nil {
		if x, ok := x.File.(*FileActivity_Creation); ok {
			return x.Creation
		}
	}
	return nil
}

func (x *FileActivity) GetUnlink() *FileUnlink {
	if x != nil {
		if x, ok := x.File.(*FileActivity_Unlink); ok {
			return x.Unlink
		}
	}
	return nil
}

func (x *FileActivity) GetRename() *FileRename {
	if x != nil {
		if x, ok := x.File.(*FileActivity_Rename); ok {
			return x.Rename
		}
	}
	return nil
}

func (x *FileActivity) GetPermission() *FilePermissionChange {
	if x != nil {
		if x, ok := x.File.(*FileActivity_Permission); ok {
			return x.Permission
		}
	}
	return nil
}

func (x *FileActivity) GetOwnership() *FileOwnershipChange {
	if x != nil {
		if x, ok := x.File.(*FileActivity_Ownership); ok {
			return x.Ownership
		}
	}
	return nil
}

func (x *FileActivity) GetOpen() *FileOpen {
	if x != nil {
		if x, ok := x.File.(*FileActivity_Open); ok {
			return x.Open
		}
	}
	return nil
}

func (x *FileActivity) GetWrite() *FileWrite {
	if x != nil {
		if x, ok := x.File.(*FileActivity_Write); ok {
			return x.Write
		}
	}
	return nil
}

type isFileActivity_File interface {
	isFileActivity_File()
}

type FileActivity_Creation struct {
	Creation *FileCreation `protobuf:"bytes,3,opt,name=creation,proto3,oneof"`
}

type FileActivity_Unlink struct {
	Unlink *FileUnlink `protobuf:"bytes,4,opt,name=unlink,proto3,oneof"`
}

type FileActivity_Rename struct {
	Rename *FileRename `protobuf:"bytes,5,opt,name=rename,proto3,oneof"`
}

type FileActivity_Permission struct {
	Permission *FilePermissionChange `protobuf:"bytes,6,opt,name=permission,proto3,oneof"`
}

type FileActivity_Ownership struct {
	Ownership *FileOwnershipChange `protobuf:"bytes,7,opt,name=ownership,proto3,oneof"`
}

type FileActivity_Open struct {
	Open *FileOpen `protobuf:"bytes,8,opt,name=open,proto3,oneof"`
}

type FileActivity_Write struct {
	Write *FileWrite `protobuf:"bytes,9,opt,name=write,proto3,oneof"`
}

func (*FileActivity_Creation) isFileActivity_File() {}

func (*FileActivity_Unlink) isFileActivity_File() {}

func (*FileActivity_Rename) isFileActivity_File() {}

func (*FileActivity_Permission) isFileActivity_File() {}

func (*FileActivity_Ownership) isFileActivity_File() {}

func (*FileActivity_Open) isFileActivity_File() {}

func (*FileActivity_Write) isFileActivity_File() {}

var File_internalapi_sensor_sfa_proto protoreflect.FileDescriptor

const file_internalapi_sensor_sfa_proto_rawDesc = "" +
	"\n" +
	"\x1cinternalapi/sensor/sfa.proto\x12\x06sensor\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\"internalapi/sensor/collector.proto\"o\n" +
	"\x10FileActivityBase\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1b\n" +
	"\thost_path\x18\x02 \x01(\tR\bhostPath\x12*\n" +
	"\x11is_external_mount\x18\x03 \x01(\bR\x0fisExternalMount\"D\n" +
	"\fFileCreation\x124\n" +
	"\bactivity\x18\x01 \x01(\v2\x18.sensor.FileActivityBaseR\bactivity\"B\n" +
	"\n" +
	"FileUnlink\x124\n" +
	"\bactivity\x18\x01 \x01(\v2\x18.sensor.FileActivityBaseR\bactivity\"d\n" +
	"\n" +
	"FileRename\x12*\n" +
	"\x03old\x18\x01 \x01(\v2\x18.sensor.FileActivityBaseR\x03old\x12*\n" +
	"\x03new\x18\x02 \x01(\v2\x18.sensor.FileActivityBaseR\x03new\"`\n" +
	"\x14FilePermissionChange\x124\n" +
	"\bactivity\x18\x01 \x01(\v2\x18.sensor.FileActivityBaseR\bactivity\x12\x12\n" +
	"\x04mode\x18\x02 \x01(\rR\x04mode\"\xa1\x01\n" +
	"\x13FileOwnershipChange\x124\n" +
	"\bactivity\x18\x01 \x01(\v2\x18.sensor.FileActivityBaseR\bactivity\x12\x10\n" +
	"\x03uid\x18\x02 \x01(\rR\x03uid\x12\x10\n" +
	"\x03gid\x18\x03 \x01(\rR\x03gid\x12\x1a\n" +
	"\busername\x18\x04 \x01(\tR\busername\x12\x14\n" +
	"\x05group\x18\x05 \x01(\tR\x05group\"A\n" +
	"\tFileWrite\x124\n" +
	"\bactivity\x18\x01 \x01(\v2\x18.sensor.FileActivityBaseR\bactivity\"@\n" +
	"\bFileOpen\x124\n" +
	"\bactivity\x18\x01 \x01(\v2\x18.sensor.FileActivityBaseR\bactivity\"\xe1\x03\n" +
	"\fFileActivity\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12/\n" +
	"\aprocess\x18\x02 \x01(\v2\x15.sensor.ProcessSignalR\aprocess\x122\n" +
	"\bcreation\x18\x03 \x01(\v2\x14.sensor.FileCreationH\x00R\bcreation\x12,\n" +
	"\x06unlink\x18\x04 \x01(\v2\x12.sensor.FileUnlinkH\x00R\x06unlink\x12,\n" +
	"\x06rename\x18\x05 \x01(\v2\x12.sensor.FileRenameH\x00R\x06rename\x12>\n" +
	"\n" +
	"permission\x18\x06 \x01(\v2\x1c.sensor.FilePermissionChangeH\x00R\n" +
	"permission\x12;\n" +
	"\townership\x18\a \x01(\v2\x1b.sensor.FileOwnershipChangeH\x00R\townership\x12&\n" +
	"\x04open\x18\b \x01(\v2\x10.sensor.FileOpenH\x00R\x04open\x12)\n" +
	"\x05write\x18\t \x01(\v2\x11.sensor.FileWriteH\x00R\x05writeB\x06\n" +
	"\x04fileB Z\x1b./internalapi/sensor;sensor\xf8\x01\x01b\x06proto3"

var (
	file_internalapi_sensor_sfa_proto_rawDescOnce sync.Once
	file_internalapi_sensor_sfa_proto_rawDescData []byte
)

func file_internalapi_sensor_sfa_proto_rawDescGZIP() []byte {
	file_internalapi_sensor_sfa_proto_rawDescOnce.Do(func() {
		file_internalapi_sensor_sfa_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internalapi_sensor_sfa_proto_rawDesc), len(file_internalapi_sensor_sfa_proto_rawDesc)))
	})
	return file_internalapi_sensor_sfa_proto_rawDescData
}

var file_internalapi_sensor_sfa_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_internalapi_sensor_sfa_proto_goTypes = []any{
	(*FileActivityBase)(nil),      // 0: sensor.FileActivityBase
	(*FileCreation)(nil),          // 1: sensor.FileCreation
	(*FileUnlink)(nil),            // 2: sensor.FileUnlink
	(*FileRename)(nil),            // 3: sensor.FileRename
	(*FilePermissionChange)(nil),  // 4: sensor.FilePermissionChange
	(*FileOwnershipChange)(nil),   // 5: sensor.FileOwnershipChange
	(*FileWrite)(nil),             // 6: sensor.FileWrite
	(*FileOpen)(nil),              // 7: sensor.FileOpen
	(*FileActivity)(nil),          // 8: sensor.FileActivity
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*ProcessSignal)(nil),         // 10: sensor.ProcessSignal
}
var file_internalapi_sensor_sfa_proto_depIdxs = []int32{
	0,  // 0: sensor.FileCreation.activity:type_name -> sensor.FileActivityBase
	0,  // 1: sensor.FileUnlink.activity:type_name -> sensor.FileActivityBase
	0,  // 2: sensor.FileRename.old:type_name -> sensor.FileActivityBase
	0,  // 3: sensor.FileRename.new:type_name -> sensor.FileActivityBase
	0,  // 4: sensor.FilePermissionChange.activity:type_name -> sensor.FileActivityBase
	0,  // 5: sensor.FileOwnershipChange.activity:type_name -> sensor.FileActivityBase
	0,  // 6: sensor.FileWrite.activity:type_name -> sensor.FileActivityBase
	0,  // 7: sensor.FileOpen.activity:type_name -> sensor.FileActivityBase
	9,  // 8: sensor.FileActivity.timestamp:type_name -> google.protobuf.Timestamp
	10, // 9: sensor.FileActivity.process:type_name -> sensor.ProcessSignal
	1,  // 10: sensor.FileActivity.creation:type_name -> sensor.FileCreation
	2,  // 11: sensor.FileActivity.unlink:type_name -> sensor.FileUnlink
	3,  // 12: sensor.FileActivity.rename:type_name -> sensor.FileRename
	4,  // 13: sensor.FileActivity.permission:type_name -> sensor.FilePermissionChange
	5,  // 14: sensor.FileActivity.ownership:type_name -> sensor.FileOwnershipChange
	7,  // 15: sensor.FileActivity.open:type_name -> sensor.FileOpen
	6,  // 16: sensor.FileActivity.write:type_name -> sensor.FileWrite
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_internalapi_sensor_sfa_proto_init() }
func file_internalapi_sensor_sfa_proto_init() {
	if File_internalapi_sensor_sfa_proto != nil {
		return
	}
	file_internalapi_sensor_collector_proto_init()
	file_internalapi_sensor_sfa_proto_msgTypes[8].OneofWrappers = []any{
		(*FileActivity_Creation)(nil),
		(*FileActivity_Unlink)(nil),
		(*FileActivity_Rename)(nil),
		(*FileActivity_Permission)(nil),
		(*FileActivity_Ownership)(nil),
		(*FileActivity_Open)(nil),
		(*FileActivity_Write)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internalapi_sensor_sfa_proto_rawDesc), len(file_internalapi_sensor_sfa_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internalapi_sensor_sfa_proto_goTypes,
		DependencyIndexes: file_internalapi_sensor_sfa_proto_depIdxs,
		MessageInfos:      file_internalapi_sensor_sfa_proto_msgTypes,
	}.Build()
	File_internalapi_sensor_sfa_proto = out.File
	file_internalapi_sensor_sfa_proto_goTypes = nil
	file_internalapi_sensor_sfa_proto_depIdxs = nil
}
