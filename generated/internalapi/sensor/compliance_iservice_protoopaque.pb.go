// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: internalapi/sensor/compliance_iservice.proto

//go:build protoopaque

package sensor

import (
	compliance "github.com/stackrox/rox/generated/internalapi/compliance"
	v4 "github.com/stackrox/rox/generated/internalapi/scanner/v4"
	storage "github.com/stackrox/rox/generated/storage"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgToCompliance_NodeInventoryACK_Action int32

const (
	MsgToCompliance_NodeInventoryACK_ACK  MsgToCompliance_NodeInventoryACK_Action = 0
	MsgToCompliance_NodeInventoryACK_NACK MsgToCompliance_NodeInventoryACK_Action = 1
)

// Enum value maps for MsgToCompliance_NodeInventoryACK_Action.
var (
	MsgToCompliance_NodeInventoryACK_Action_name = map[int32]string{
		0: "ACK",
		1: "NACK",
	}
	MsgToCompliance_NodeInventoryACK_Action_value = map[string]int32{
		"ACK":  0,
		"NACK": 1,
	}
)

func (x MsgToCompliance_NodeInventoryACK_Action) Enum() *MsgToCompliance_NodeInventoryACK_Action {
	p := new(MsgToCompliance_NodeInventoryACK_Action)
	*p = x
	return p
}

func (x MsgToCompliance_NodeInventoryACK_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgToCompliance_NodeInventoryACK_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_internalapi_sensor_compliance_iservice_proto_enumTypes[0].Descriptor()
}

func (MsgToCompliance_NodeInventoryACK_Action) Type() protoreflect.EnumType {
	return &file_internalapi_sensor_compliance_iservice_proto_enumTypes[0]
}

func (x MsgToCompliance_NodeInventoryACK_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type MsgToCompliance_NodeInventoryACK_MessageType int32

const (
	MsgToCompliance_NodeInventoryACK_NodeInventory MsgToCompliance_NodeInventoryACK_MessageType = 0
	MsgToCompliance_NodeInventoryACK_NodeIndexer   MsgToCompliance_NodeInventoryACK_MessageType = 1
)

// Enum value maps for MsgToCompliance_NodeInventoryACK_MessageType.
var (
	MsgToCompliance_NodeInventoryACK_MessageType_name = map[int32]string{
		0: "NodeInventory",
		1: "NodeIndexer",
	}
	MsgToCompliance_NodeInventoryACK_MessageType_value = map[string]int32{
		"NodeInventory": 0,
		"NodeIndexer":   1,
	}
)

func (x MsgToCompliance_NodeInventoryACK_MessageType) Enum() *MsgToCompliance_NodeInventoryACK_MessageType {
	p := new(MsgToCompliance_NodeInventoryACK_MessageType)
	*p = x
	return p
}

func (x MsgToCompliance_NodeInventoryACK_MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgToCompliance_NodeInventoryACK_MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_internalapi_sensor_compliance_iservice_proto_enumTypes[1].Descriptor()
}

func (MsgToCompliance_NodeInventoryACK_MessageType) Type() protoreflect.EnumType {
	return &file_internalapi_sensor_compliance_iservice_proto_enumTypes[1]
}

func (x MsgToCompliance_NodeInventoryACK_MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type GetScrapeConfigRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_NodeName    *string                `protobuf:"bytes,1,opt,name=node_name,json=nodeName"`
	xxx_hidden_ScrapeId    *string                `protobuf:"bytes,2,opt,name=scrape_id,json=scrapeId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetScrapeConfigRequest) Reset() {
	*x = GetScrapeConfigRequest{}
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScrapeConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScrapeConfigRequest) ProtoMessage() {}

func (x *GetScrapeConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *GetScrapeConfigRequest) GetNodeName() string {
	if x != nil {
		if x.xxx_hidden_NodeName != nil {
			return *x.xxx_hidden_NodeName
		}
		return ""
	}
	return ""
}

func (x *GetScrapeConfigRequest) GetScrapeId() string {
	if x != nil {
		if x.xxx_hidden_ScrapeId != nil {
			return *x.xxx_hidden_ScrapeId
		}
		return ""
	}
	return ""
}

func (x *GetScrapeConfigRequest) SetNodeName(v string) {
	x.xxx_hidden_NodeName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *GetScrapeConfigRequest) SetScrapeId(v string) {
	x.xxx_hidden_ScrapeId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *GetScrapeConfigRequest) HasNodeName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *GetScrapeConfigRequest) HasScrapeId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *GetScrapeConfigRequest) ClearNodeName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_NodeName = nil
}

func (x *GetScrapeConfigRequest) ClearScrapeId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ScrapeId = nil
}

type GetScrapeConfigRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	NodeName *string
	ScrapeId *string
}

func (b0 GetScrapeConfigRequest_builder) Build() *GetScrapeConfigRequest {
	m0 := &GetScrapeConfigRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.NodeName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_NodeName = b.NodeName
	}
	if b.ScrapeId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_ScrapeId = b.ScrapeId
	}
	return m0
}

type AuditEvents struct {
	state             protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_Events *[]*storage.KubernetesEvent `protobuf:"bytes,1,rep,name=events"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AuditEvents) Reset() {
	*x = AuditEvents{}
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditEvents) ProtoMessage() {}

func (x *AuditEvents) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AuditEvents) GetEvents() []*storage.KubernetesEvent {
	if x != nil {
		if x.xxx_hidden_Events != nil {
			return *x.xxx_hidden_Events
		}
	}
	return nil
}

func (x *AuditEvents) SetEvents(v []*storage.KubernetesEvent) {
	x.xxx_hidden_Events = &v
}

type AuditEvents_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// events are ordered with the most recent being the last element
	Events []*storage.KubernetesEvent
}

func (b0 AuditEvents_builder) Build() *AuditEvents {
	m0 := &AuditEvents{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Events = &b.Events
	return m0
}

type MsgFromCompliance struct {
	state                  protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_Node        *string                 `protobuf:"bytes,1,opt,name=node"`
	xxx_hidden_Msg         isMsgFromCompliance_Msg `protobuf_oneof:"msg"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MsgFromCompliance) Reset() {
	*x = MsgFromCompliance{}
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgFromCompliance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFromCompliance) ProtoMessage() {}

func (x *MsgFromCompliance) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MsgFromCompliance) GetNode() string {
	if x != nil {
		if x.xxx_hidden_Node != nil {
			return *x.xxx_hidden_Node
		}
		return ""
	}
	return ""
}

func (x *MsgFromCompliance) GetReturn() *compliance.ComplianceReturn {
	if x != nil {
		if x, ok := x.xxx_hidden_Msg.(*msgFromCompliance_Return); ok {
			return x.Return
		}
	}
	return nil
}

func (x *MsgFromCompliance) GetAuditEvents() *AuditEvents {
	if x != nil {
		if x, ok := x.xxx_hidden_Msg.(*msgFromCompliance_AuditEvents); ok {
			return x.AuditEvents
		}
	}
	return nil
}

func (x *MsgFromCompliance) GetNodeInventory() *storage.NodeInventory {
	if x != nil {
		if x, ok := x.xxx_hidden_Msg.(*msgFromCompliance_NodeInventory); ok {
			return x.NodeInventory
		}
	}
	return nil
}

func (x *MsgFromCompliance) GetIndexReport() *v4.IndexReport {
	if x != nil {
		if x, ok := x.xxx_hidden_Msg.(*msgFromCompliance_IndexReport); ok {
			return x.IndexReport
		}
	}
	return nil
}

func (x *MsgFromCompliance) SetNode(v string) {
	x.xxx_hidden_Node = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *MsgFromCompliance) SetReturn(v *compliance.ComplianceReturn) {
	if v == nil {
		x.xxx_hidden_Msg = nil
		return
	}
	x.xxx_hidden_Msg = &msgFromCompliance_Return{v}
}

func (x *MsgFromCompliance) SetAuditEvents(v *AuditEvents) {
	if v == nil {
		x.xxx_hidden_Msg = nil
		return
	}
	x.xxx_hidden_Msg = &msgFromCompliance_AuditEvents{v}
}

func (x *MsgFromCompliance) SetNodeInventory(v *storage.NodeInventory) {
	if v == nil {
		x.xxx_hidden_Msg = nil
		return
	}
	x.xxx_hidden_Msg = &msgFromCompliance_NodeInventory{v}
}

func (x *MsgFromCompliance) SetIndexReport(v *v4.IndexReport) {
	if v == nil {
		x.xxx_hidden_Msg = nil
		return
	}
	x.xxx_hidden_Msg = &msgFromCompliance_IndexReport{v}
}

func (x *MsgFromCompliance) HasNode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MsgFromCompliance) HasMsg() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Msg != nil
}

func (x *MsgFromCompliance) HasReturn() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Msg.(*msgFromCompliance_Return)
	return ok
}

func (x *MsgFromCompliance) HasAuditEvents() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Msg.(*msgFromCompliance_AuditEvents)
	return ok
}

func (x *MsgFromCompliance) HasNodeInventory() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Msg.(*msgFromCompliance_NodeInventory)
	return ok
}

func (x *MsgFromCompliance) HasIndexReport() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Msg.(*msgFromCompliance_IndexReport)
	return ok
}

func (x *MsgFromCompliance) ClearNode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Node = nil
}

func (x *MsgFromCompliance) ClearMsg() {
	x.xxx_hidden_Msg = nil
}

func (x *MsgFromCompliance) ClearReturn() {
	if _, ok := x.xxx_hidden_Msg.(*msgFromCompliance_Return); ok {
		x.xxx_hidden_Msg = nil
	}
}

func (x *MsgFromCompliance) ClearAuditEvents() {
	if _, ok := x.xxx_hidden_Msg.(*msgFromCompliance_AuditEvents); ok {
		x.xxx_hidden_Msg = nil
	}
}

func (x *MsgFromCompliance) ClearNodeInventory() {
	if _, ok := x.xxx_hidden_Msg.(*msgFromCompliance_NodeInventory); ok {
		x.xxx_hidden_Msg = nil
	}
}

func (x *MsgFromCompliance) ClearIndexReport() {
	if _, ok := x.xxx_hidden_Msg.(*msgFromCompliance_IndexReport); ok {
		x.xxx_hidden_Msg = nil
	}
}

const MsgFromCompliance_Msg_not_set_case case_MsgFromCompliance_Msg = 0
const MsgFromCompliance_Return_case case_MsgFromCompliance_Msg = 2
const MsgFromCompliance_AuditEvents_case case_MsgFromCompliance_Msg = 3
const MsgFromCompliance_NodeInventory_case case_MsgFromCompliance_Msg = 4
const MsgFromCompliance_IndexReport_case case_MsgFromCompliance_Msg = 5

func (x *MsgFromCompliance) WhichMsg() case_MsgFromCompliance_Msg {
	if x == nil {
		return MsgFromCompliance_Msg_not_set_case
	}
	switch x.xxx_hidden_Msg.(type) {
	case *msgFromCompliance_Return:
		return MsgFromCompliance_Return_case
	case *msgFromCompliance_AuditEvents:
		return MsgFromCompliance_AuditEvents_case
	case *msgFromCompliance_NodeInventory:
		return MsgFromCompliance_NodeInventory_case
	case *msgFromCompliance_IndexReport:
		return MsgFromCompliance_IndexReport_case
	default:
		return MsgFromCompliance_Msg_not_set_case
	}
}

type MsgFromCompliance_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Node *string
	// Fields of oneof xxx_hidden_Msg:
	Return        *compliance.ComplianceReturn
	AuditEvents   *AuditEvents
	NodeInventory *storage.NodeInventory
	IndexReport   *v4.IndexReport
	// -- end of xxx_hidden_Msg
}

func (b0 MsgFromCompliance_builder) Build() *MsgFromCompliance {
	m0 := &MsgFromCompliance{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Node != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Node = b.Node
	}
	if b.Return != nil {
		x.xxx_hidden_Msg = &msgFromCompliance_Return{b.Return}
	}
	if b.AuditEvents != nil {
		x.xxx_hidden_Msg = &msgFromCompliance_AuditEvents{b.AuditEvents}
	}
	if b.NodeInventory != nil {
		x.xxx_hidden_Msg = &msgFromCompliance_NodeInventory{b.NodeInventory}
	}
	if b.IndexReport != nil {
		x.xxx_hidden_Msg = &msgFromCompliance_IndexReport{b.IndexReport}
	}
	return m0
}

type case_MsgFromCompliance_Msg protoreflect.FieldNumber

func (x case_MsgFromCompliance_Msg) String() string {
	md := file_internalapi_sensor_compliance_iservice_proto_msgTypes[2].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isMsgFromCompliance_Msg interface {
	isMsgFromCompliance_Msg()
}

type msgFromCompliance_Return struct {
	Return *compliance.ComplianceReturn `protobuf:"bytes,2,opt,name=return,oneof"`
}

type msgFromCompliance_AuditEvents struct {
	AuditEvents *AuditEvents `protobuf:"bytes,3,opt,name=audit_events,json=auditEvents,oneof"`
}

type msgFromCompliance_NodeInventory struct {
	NodeInventory *storage.NodeInventory `protobuf:"bytes,4,opt,name=node_inventory,json=nodeInventory,oneof"`
}

type msgFromCompliance_IndexReport struct {
	IndexReport *v4.IndexReport `protobuf:"bytes,5,opt,name=index_report,json=indexReport,oneof"`
}

func (*msgFromCompliance_Return) isMsgFromCompliance_Msg() {}

func (*msgFromCompliance_AuditEvents) isMsgFromCompliance_Msg() {}

func (*msgFromCompliance_NodeInventory) isMsgFromCompliance_Msg() {}

func (*msgFromCompliance_IndexReport) isMsgFromCompliance_Msg() {}

type MsgToCompliance struct {
	state          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Msg isMsgToCompliance_Msg  `protobuf_oneof:"msg"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MsgToCompliance) Reset() {
	*x = MsgToCompliance{}
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgToCompliance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToCompliance) ProtoMessage() {}

func (x *MsgToCompliance) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MsgToCompliance) GetConfig() *MsgToCompliance_ScrapeConfig {
	if x != nil {
		if x, ok := x.xxx_hidden_Msg.(*msgToCompliance_Config); ok {
			return x.Config
		}
	}
	return nil
}

func (x *MsgToCompliance) GetTrigger() *MsgToCompliance_TriggerRun {
	if x != nil {
		if x, ok := x.xxx_hidden_Msg.(*msgToCompliance_Trigger); ok {
			return x.Trigger
		}
	}
	return nil
}

func (x *MsgToCompliance) GetAuditLogCollectionRequest() *MsgToCompliance_AuditLogCollectionRequest {
	if x != nil {
		if x, ok := x.xxx_hidden_Msg.(*msgToCompliance_AuditLogCollectionRequest_); ok {
			return x.AuditLogCollectionRequest
		}
	}
	return nil
}

func (x *MsgToCompliance) GetAck() *MsgToCompliance_NodeInventoryACK {
	if x != nil {
		if x, ok := x.xxx_hidden_Msg.(*msgToCompliance_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

func (x *MsgToCompliance) SetConfig(v *MsgToCompliance_ScrapeConfig) {
	if v == nil {
		x.xxx_hidden_Msg = nil
		return
	}
	x.xxx_hidden_Msg = &msgToCompliance_Config{v}
}

func (x *MsgToCompliance) SetTrigger(v *MsgToCompliance_TriggerRun) {
	if v == nil {
		x.xxx_hidden_Msg = nil
		return
	}
	x.xxx_hidden_Msg = &msgToCompliance_Trigger{v}
}

func (x *MsgToCompliance) SetAuditLogCollectionRequest(v *MsgToCompliance_AuditLogCollectionRequest) {
	if v == nil {
		x.xxx_hidden_Msg = nil
		return
	}
	x.xxx_hidden_Msg = &msgToCompliance_AuditLogCollectionRequest_{v}
}

func (x *MsgToCompliance) SetAck(v *MsgToCompliance_NodeInventoryACK) {
	if v == nil {
		x.xxx_hidden_Msg = nil
		return
	}
	x.xxx_hidden_Msg = &msgToCompliance_Ack{v}
}

func (x *MsgToCompliance) HasMsg() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Msg != nil
}

func (x *MsgToCompliance) HasConfig() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Msg.(*msgToCompliance_Config)
	return ok
}

func (x *MsgToCompliance) HasTrigger() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Msg.(*msgToCompliance_Trigger)
	return ok
}

func (x *MsgToCompliance) HasAuditLogCollectionRequest() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Msg.(*msgToCompliance_AuditLogCollectionRequest_)
	return ok
}

func (x *MsgToCompliance) HasAck() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Msg.(*msgToCompliance_Ack)
	return ok
}

func (x *MsgToCompliance) ClearMsg() {
	x.xxx_hidden_Msg = nil
}

func (x *MsgToCompliance) ClearConfig() {
	if _, ok := x.xxx_hidden_Msg.(*msgToCompliance_Config); ok {
		x.xxx_hidden_Msg = nil
	}
}

func (x *MsgToCompliance) ClearTrigger() {
	if _, ok := x.xxx_hidden_Msg.(*msgToCompliance_Trigger); ok {
		x.xxx_hidden_Msg = nil
	}
}

func (x *MsgToCompliance) ClearAuditLogCollectionRequest() {
	if _, ok := x.xxx_hidden_Msg.(*msgToCompliance_AuditLogCollectionRequest_); ok {
		x.xxx_hidden_Msg = nil
	}
}

func (x *MsgToCompliance) ClearAck() {
	if _, ok := x.xxx_hidden_Msg.(*msgToCompliance_Ack); ok {
		x.xxx_hidden_Msg = nil
	}
}

const MsgToCompliance_Msg_not_set_case case_MsgToCompliance_Msg = 0
const MsgToCompliance_Config_case case_MsgToCompliance_Msg = 1
const MsgToCompliance_Trigger_case case_MsgToCompliance_Msg = 2
const MsgToCompliance_AuditLogCollectionRequest_case case_MsgToCompliance_Msg = 3
const MsgToCompliance_Ack_case case_MsgToCompliance_Msg = 4

func (x *MsgToCompliance) WhichMsg() case_MsgToCompliance_Msg {
	if x == nil {
		return MsgToCompliance_Msg_not_set_case
	}
	switch x.xxx_hidden_Msg.(type) {
	case *msgToCompliance_Config:
		return MsgToCompliance_Config_case
	case *msgToCompliance_Trigger:
		return MsgToCompliance_Trigger_case
	case *msgToCompliance_AuditLogCollectionRequest_:
		return MsgToCompliance_AuditLogCollectionRequest_case
	case *msgToCompliance_Ack:
		return MsgToCompliance_Ack_case
	default:
		return MsgToCompliance_Msg_not_set_case
	}
}

type MsgToCompliance_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Msg:
	Config                    *MsgToCompliance_ScrapeConfig
	Trigger                   *MsgToCompliance_TriggerRun
	AuditLogCollectionRequest *MsgToCompliance_AuditLogCollectionRequest
	Ack                       *MsgToCompliance_NodeInventoryACK
	// -- end of xxx_hidden_Msg
}

func (b0 MsgToCompliance_builder) Build() *MsgToCompliance {
	m0 := &MsgToCompliance{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Config != nil {
		x.xxx_hidden_Msg = &msgToCompliance_Config{b.Config}
	}
	if b.Trigger != nil {
		x.xxx_hidden_Msg = &msgToCompliance_Trigger{b.Trigger}
	}
	if b.AuditLogCollectionRequest != nil {
		x.xxx_hidden_Msg = &msgToCompliance_AuditLogCollectionRequest_{b.AuditLogCollectionRequest}
	}
	if b.Ack != nil {
		x.xxx_hidden_Msg = &msgToCompliance_Ack{b.Ack}
	}
	return m0
}

type case_MsgToCompliance_Msg protoreflect.FieldNumber

func (x case_MsgToCompliance_Msg) String() string {
	md := file_internalapi_sensor_compliance_iservice_proto_msgTypes[3].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isMsgToCompliance_Msg interface {
	isMsgToCompliance_Msg()
}

type msgToCompliance_Config struct {
	Config *MsgToCompliance_ScrapeConfig `protobuf:"bytes,1,opt,name=config,oneof"`
}

type msgToCompliance_Trigger struct {
	Trigger *MsgToCompliance_TriggerRun `protobuf:"bytes,2,opt,name=trigger,oneof"`
}

type msgToCompliance_AuditLogCollectionRequest_ struct {
	AuditLogCollectionRequest *MsgToCompliance_AuditLogCollectionRequest `protobuf:"bytes,3,opt,name=audit_log_collection_request,json=auditLogCollectionRequest,oneof"`
}

type msgToCompliance_Ack struct {
	Ack *MsgToCompliance_NodeInventoryACK `protobuf:"bytes,4,opt,name=ack,oneof"`
}

func (*msgToCompliance_Config) isMsgToCompliance_Msg() {}

func (*msgToCompliance_Trigger) isMsgToCompliance_Msg() {}

func (*msgToCompliance_AuditLogCollectionRequest_) isMsgToCompliance_Msg() {}

func (*msgToCompliance_Ack) isMsgToCompliance_Msg() {}

type MsgToCompliance_ScrapeConfig struct {
	state                       protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_ContainerRuntime storage.ContainerRuntime `protobuf:"varint,1,opt,name=container_runtime,json=containerRuntime,enum=storage.ContainerRuntime"`
	xxx_hidden_IsMasterNode     bool                     `protobuf:"varint,2,opt,name=is_master_node,json=isMasterNode"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *MsgToCompliance_ScrapeConfig) Reset() {
	*x = MsgToCompliance_ScrapeConfig{}
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgToCompliance_ScrapeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToCompliance_ScrapeConfig) ProtoMessage() {}

func (x *MsgToCompliance_ScrapeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MsgToCompliance_ScrapeConfig) GetContainerRuntime() storage.ContainerRuntime {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_ContainerRuntime
		}
	}
	return storage.ContainerRuntime(0)
}

func (x *MsgToCompliance_ScrapeConfig) GetIsMasterNode() bool {
	if x != nil {
		return x.xxx_hidden_IsMasterNode
	}
	return false
}

func (x *MsgToCompliance_ScrapeConfig) SetContainerRuntime(v storage.ContainerRuntime) {
	x.xxx_hidden_ContainerRuntime = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *MsgToCompliance_ScrapeConfig) SetIsMasterNode(v bool) {
	x.xxx_hidden_IsMasterNode = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *MsgToCompliance_ScrapeConfig) HasContainerRuntime() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MsgToCompliance_ScrapeConfig) HasIsMasterNode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MsgToCompliance_ScrapeConfig) ClearContainerRuntime() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ContainerRuntime = storage.ContainerRuntime_UNKNOWN_CONTAINER_RUNTIME
}

func (x *MsgToCompliance_ScrapeConfig) ClearIsMasterNode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_IsMasterNode = false
}

type MsgToCompliance_ScrapeConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ContainerRuntime *storage.ContainerRuntime
	IsMasterNode     *bool
}

func (b0 MsgToCompliance_ScrapeConfig_builder) Build() *MsgToCompliance_ScrapeConfig {
	m0 := &MsgToCompliance_ScrapeConfig{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ContainerRuntime != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ContainerRuntime = *b.ContainerRuntime
	}
	if b.IsMasterNode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_IsMasterNode = *b.IsMasterNode
	}
	return m0
}

type MsgToCompliance_TriggerRun struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScrapeId    *string                `protobuf:"bytes,1,opt,name=scrape_id,json=scrapeId"`
	xxx_hidden_StandardIds []string               `protobuf:"bytes,2,rep,name=standard_ids,json=standardIds"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MsgToCompliance_TriggerRun) Reset() {
	*x = MsgToCompliance_TriggerRun{}
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgToCompliance_TriggerRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToCompliance_TriggerRun) ProtoMessage() {}

func (x *MsgToCompliance_TriggerRun) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MsgToCompliance_TriggerRun) GetScrapeId() string {
	if x != nil {
		if x.xxx_hidden_ScrapeId != nil {
			return *x.xxx_hidden_ScrapeId
		}
		return ""
	}
	return ""
}

func (x *MsgToCompliance_TriggerRun) GetStandardIds() []string {
	if x != nil {
		return x.xxx_hidden_StandardIds
	}
	return nil
}

func (x *MsgToCompliance_TriggerRun) SetScrapeId(v string) {
	x.xxx_hidden_ScrapeId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *MsgToCompliance_TriggerRun) SetStandardIds(v []string) {
	x.xxx_hidden_StandardIds = v
}

func (x *MsgToCompliance_TriggerRun) HasScrapeId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MsgToCompliance_TriggerRun) ClearScrapeId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScrapeId = nil
}

type MsgToCompliance_TriggerRun_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScrapeId    *string
	StandardIds []string
}

func (b0 MsgToCompliance_TriggerRun_builder) Build() *MsgToCompliance_TriggerRun {
	m0 := &MsgToCompliance_TriggerRun{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScrapeId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ScrapeId = b.ScrapeId
	}
	x.xxx_hidden_StandardIds = b.StandardIds
	return m0
}

type MsgToCompliance_AuditLogCollectionRequest struct {
	state          protoimpl.MessageState                          `protogen:"opaque.v1"`
	xxx_hidden_Req isMsgToCompliance_AuditLogCollectionRequest_Req `protobuf_oneof:"req"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MsgToCompliance_AuditLogCollectionRequest) Reset() {
	*x = MsgToCompliance_AuditLogCollectionRequest{}
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgToCompliance_AuditLogCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToCompliance_AuditLogCollectionRequest) ProtoMessage() {}

func (x *MsgToCompliance_AuditLogCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MsgToCompliance_AuditLogCollectionRequest) GetStartReq() *MsgToCompliance_AuditLogCollectionRequest_StartRequest {
	if x != nil {
		if x, ok := x.xxx_hidden_Req.(*msgToCompliance_AuditLogCollectionRequest_StartReq); ok {
			return x.StartReq
		}
	}
	return nil
}

func (x *MsgToCompliance_AuditLogCollectionRequest) GetStopReq() *MsgToCompliance_AuditLogCollectionRequest_StopRequest {
	if x != nil {
		if x, ok := x.xxx_hidden_Req.(*msgToCompliance_AuditLogCollectionRequest_StopReq); ok {
			return x.StopReq
		}
	}
	return nil
}

func (x *MsgToCompliance_AuditLogCollectionRequest) SetStartReq(v *MsgToCompliance_AuditLogCollectionRequest_StartRequest) {
	if v == nil {
		x.xxx_hidden_Req = nil
		return
	}
	x.xxx_hidden_Req = &msgToCompliance_AuditLogCollectionRequest_StartReq{v}
}

func (x *MsgToCompliance_AuditLogCollectionRequest) SetStopReq(v *MsgToCompliance_AuditLogCollectionRequest_StopRequest) {
	if v == nil {
		x.xxx_hidden_Req = nil
		return
	}
	x.xxx_hidden_Req = &msgToCompliance_AuditLogCollectionRequest_StopReq{v}
}

func (x *MsgToCompliance_AuditLogCollectionRequest) HasReq() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Req != nil
}

func (x *MsgToCompliance_AuditLogCollectionRequest) HasStartReq() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Req.(*msgToCompliance_AuditLogCollectionRequest_StartReq)
	return ok
}

func (x *MsgToCompliance_AuditLogCollectionRequest) HasStopReq() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Req.(*msgToCompliance_AuditLogCollectionRequest_StopReq)
	return ok
}

func (x *MsgToCompliance_AuditLogCollectionRequest) ClearReq() {
	x.xxx_hidden_Req = nil
}

func (x *MsgToCompliance_AuditLogCollectionRequest) ClearStartReq() {
	if _, ok := x.xxx_hidden_Req.(*msgToCompliance_AuditLogCollectionRequest_StartReq); ok {
		x.xxx_hidden_Req = nil
	}
}

func (x *MsgToCompliance_AuditLogCollectionRequest) ClearStopReq() {
	if _, ok := x.xxx_hidden_Req.(*msgToCompliance_AuditLogCollectionRequest_StopReq); ok {
		x.xxx_hidden_Req = nil
	}
}

const MsgToCompliance_AuditLogCollectionRequest_Req_not_set_case case_MsgToCompliance_AuditLogCollectionRequest_Req = 0
const MsgToCompliance_AuditLogCollectionRequest_StartReq_case case_MsgToCompliance_AuditLogCollectionRequest_Req = 1
const MsgToCompliance_AuditLogCollectionRequest_StopReq_case case_MsgToCompliance_AuditLogCollectionRequest_Req = 2

func (x *MsgToCompliance_AuditLogCollectionRequest) WhichReq() case_MsgToCompliance_AuditLogCollectionRequest_Req {
	if x == nil {
		return MsgToCompliance_AuditLogCollectionRequest_Req_not_set_case
	}
	switch x.xxx_hidden_Req.(type) {
	case *msgToCompliance_AuditLogCollectionRequest_StartReq:
		return MsgToCompliance_AuditLogCollectionRequest_StartReq_case
	case *msgToCompliance_AuditLogCollectionRequest_StopReq:
		return MsgToCompliance_AuditLogCollectionRequest_StopReq_case
	default:
		return MsgToCompliance_AuditLogCollectionRequest_Req_not_set_case
	}
}

type MsgToCompliance_AuditLogCollectionRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Req:
	StartReq *MsgToCompliance_AuditLogCollectionRequest_StartRequest
	StopReq  *MsgToCompliance_AuditLogCollectionRequest_StopRequest
	// -- end of xxx_hidden_Req
}

func (b0 MsgToCompliance_AuditLogCollectionRequest_builder) Build() *MsgToCompliance_AuditLogCollectionRequest {
	m0 := &MsgToCompliance_AuditLogCollectionRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.StartReq != nil {
		x.xxx_hidden_Req = &msgToCompliance_AuditLogCollectionRequest_StartReq{b.StartReq}
	}
	if b.StopReq != nil {
		x.xxx_hidden_Req = &msgToCompliance_AuditLogCollectionRequest_StopReq{b.StopReq}
	}
	return m0
}

type case_MsgToCompliance_AuditLogCollectionRequest_Req protoreflect.FieldNumber

func (x case_MsgToCompliance_AuditLogCollectionRequest_Req) String() string {
	md := file_internalapi_sensor_compliance_iservice_proto_msgTypes[6].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isMsgToCompliance_AuditLogCollectionRequest_Req interface {
	isMsgToCompliance_AuditLogCollectionRequest_Req()
}

type msgToCompliance_AuditLogCollectionRequest_StartReq struct {
	StartReq *MsgToCompliance_AuditLogCollectionRequest_StartRequest `protobuf:"bytes,1,opt,name=start_req,json=startReq,oneof"`
}

type msgToCompliance_AuditLogCollectionRequest_StopReq struct {
	StopReq *MsgToCompliance_AuditLogCollectionRequest_StopRequest `protobuf:"bytes,2,opt,name=stop_req,json=stopReq,oneof"`
}

func (*msgToCompliance_AuditLogCollectionRequest_StartReq) isMsgToCompliance_AuditLogCollectionRequest_Req() {
}

func (*msgToCompliance_AuditLogCollectionRequest_StopReq) isMsgToCompliance_AuditLogCollectionRequest_Req() {
}

type MsgToCompliance_NodeInventoryACK struct {
	state                  protoimpl.MessageState                       `protogen:"opaque.v1"`
	xxx_hidden_Action      MsgToCompliance_NodeInventoryACK_Action      `protobuf:"varint,1,opt,name=action,enum=sensor.MsgToCompliance_NodeInventoryACK_Action"`
	xxx_hidden_MessageType MsgToCompliance_NodeInventoryACK_MessageType `protobuf:"varint,2,opt,name=messageType,enum=sensor.MsgToCompliance_NodeInventoryACK_MessageType"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MsgToCompliance_NodeInventoryACK) Reset() {
	*x = MsgToCompliance_NodeInventoryACK{}
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgToCompliance_NodeInventoryACK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToCompliance_NodeInventoryACK) ProtoMessage() {}

func (x *MsgToCompliance_NodeInventoryACK) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MsgToCompliance_NodeInventoryACK) GetAction() MsgToCompliance_NodeInventoryACK_Action {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Action
		}
	}
	return MsgToCompliance_NodeInventoryACK_ACK
}

func (x *MsgToCompliance_NodeInventoryACK) GetMessageType() MsgToCompliance_NodeInventoryACK_MessageType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_MessageType
		}
	}
	return MsgToCompliance_NodeInventoryACK_NodeInventory
}

func (x *MsgToCompliance_NodeInventoryACK) SetAction(v MsgToCompliance_NodeInventoryACK_Action) {
	x.xxx_hidden_Action = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *MsgToCompliance_NodeInventoryACK) SetMessageType(v MsgToCompliance_NodeInventoryACK_MessageType) {
	x.xxx_hidden_MessageType = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *MsgToCompliance_NodeInventoryACK) HasAction() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MsgToCompliance_NodeInventoryACK) HasMessageType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *MsgToCompliance_NodeInventoryACK) ClearAction() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Action = MsgToCompliance_NodeInventoryACK_ACK
}

func (x *MsgToCompliance_NodeInventoryACK) ClearMessageType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_MessageType = MsgToCompliance_NodeInventoryACK_NodeInventory
}

type MsgToCompliance_NodeInventoryACK_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Action      *MsgToCompliance_NodeInventoryACK_Action
	MessageType *MsgToCompliance_NodeInventoryACK_MessageType
}

func (b0 MsgToCompliance_NodeInventoryACK_builder) Build() *MsgToCompliance_NodeInventoryACK {
	m0 := &MsgToCompliance_NodeInventoryACK{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Action != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Action = *b.Action
	}
	if b.MessageType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_MessageType = *b.MessageType
	}
	return m0
}

type MsgToCompliance_AuditLogCollectionRequest_StartRequest struct {
	state                        protoimpl.MessageState     `protogen:"opaque.v1"`
	xxx_hidden_ClusterId         *string                    `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_CollectStartState *storage.AuditLogFileState `protobuf:"bytes,2,opt,name=collect_start_state,json=collectStartState"`
	XXX_raceDetectHookData       protoimpl.RaceDetectHookData
	XXX_presence                 [1]uint32
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *MsgToCompliance_AuditLogCollectionRequest_StartRequest) Reset() {
	*x = MsgToCompliance_AuditLogCollectionRequest_StartRequest{}
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgToCompliance_AuditLogCollectionRequest_StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToCompliance_AuditLogCollectionRequest_StartRequest) ProtoMessage() {}

func (x *MsgToCompliance_AuditLogCollectionRequest_StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MsgToCompliance_AuditLogCollectionRequest_StartRequest) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *MsgToCompliance_AuditLogCollectionRequest_StartRequest) GetCollectStartState() *storage.AuditLogFileState {
	if x != nil {
		return x.xxx_hidden_CollectStartState
	}
	return nil
}

func (x *MsgToCompliance_AuditLogCollectionRequest_StartRequest) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *MsgToCompliance_AuditLogCollectionRequest_StartRequest) SetCollectStartState(v *storage.AuditLogFileState) {
	x.xxx_hidden_CollectStartState = v
}

func (x *MsgToCompliance_AuditLogCollectionRequest_StartRequest) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *MsgToCompliance_AuditLogCollectionRequest_StartRequest) HasCollectStartState() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_CollectStartState != nil
}

func (x *MsgToCompliance_AuditLogCollectionRequest_StartRequest) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ClusterId = nil
}

func (x *MsgToCompliance_AuditLogCollectionRequest_StartRequest) ClearCollectStartState() {
	x.xxx_hidden_CollectStartState = nil
}

type MsgToCompliance_AuditLogCollectionRequest_StartRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ClusterId         *string
	CollectStartState *storage.AuditLogFileState
}

func (b0 MsgToCompliance_AuditLogCollectionRequest_StartRequest_builder) Build() *MsgToCompliance_AuditLogCollectionRequest_StartRequest {
	m0 := &MsgToCompliance_AuditLogCollectionRequest_StartRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	x.xxx_hidden_CollectStartState = b.CollectStartState
	return m0
}

type MsgToCompliance_AuditLogCollectionRequest_StopRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgToCompliance_AuditLogCollectionRequest_StopRequest) Reset() {
	*x = MsgToCompliance_AuditLogCollectionRequest_StopRequest{}
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgToCompliance_AuditLogCollectionRequest_StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgToCompliance_AuditLogCollectionRequest_StopRequest) ProtoMessage() {}

func (x *MsgToCompliance_AuditLogCollectionRequest_StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_compliance_iservice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type MsgToCompliance_AuditLogCollectionRequest_StopRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 MsgToCompliance_AuditLogCollectionRequest_StopRequest_builder) Build() *MsgToCompliance_AuditLogCollectionRequest_StopRequest {
	m0 := &MsgToCompliance_AuditLogCollectionRequest_StopRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

var File_internalapi_sensor_compliance_iservice_proto protoreflect.FileDescriptor

const file_internalapi_sensor_compliance_iservice_proto_rawDesc = "" +
	"\n" +
	",internalapi/sensor/compliance_iservice.proto\x12\x06sensor\x1a,internalapi/compliance/compliance_data.proto\x1a)internalapi/scanner/v4/index_report.proto\x1a\x15storage/cluster.proto\x1a\x1fstorage/container_runtime.proto\x1a\x18storage/kube_event.proto\x1a\x12storage/node.proto\x1a!google/protobuf/go_features.proto\"R\n" +
	"\x16GetScrapeConfigRequest\x12\x1b\n" +
	"\tnode_name\x18\x01 \x01(\tR\bnodeName\x12\x1b\n" +
	"\tscrape_id\x18\x02 \x01(\tR\bscrapeId\"?\n" +
	"\vAuditEvents\x120\n" +
	"\x06events\x18\x01 \x03(\v2\x18.storage.KubernetesEventR\x06events\"\x9f\x02\n" +
	"\x11MsgFromCompliance\x12\x12\n" +
	"\x04node\x18\x01 \x01(\tR\x04node\x126\n" +
	"\x06return\x18\x02 \x01(\v2\x1c.compliance.ComplianceReturnH\x00R\x06return\x128\n" +
	"\faudit_events\x18\x03 \x01(\v2\x13.sensor.AuditEventsH\x00R\vauditEvents\x12?\n" +
	"\x0enode_inventory\x18\x04 \x01(\v2\x16.storage.NodeInventoryH\x00R\rnodeInventory\x12<\n" +
	"\findex_report\x18\x05 \x01(\v2\x17.scanner.v4.IndexReportH\x00R\vindexReportB\x05\n" +
	"\x03msg\"\x88\t\n" +
	"\x0fMsgToCompliance\x12>\n" +
	"\x06config\x18\x01 \x01(\v2$.sensor.MsgToCompliance.ScrapeConfigH\x00R\x06config\x12>\n" +
	"\atrigger\x18\x02 \x01(\v2\".sensor.MsgToCompliance.TriggerRunH\x00R\atrigger\x12t\n" +
	"\x1caudit_log_collection_request\x18\x03 \x01(\v21.sensor.MsgToCompliance.AuditLogCollectionRequestH\x00R\x19auditLogCollectionRequest\x12<\n" +
	"\x03ack\x18\x04 \x01(\v2(.sensor.MsgToCompliance.NodeInventoryACKH\x00R\x03ack\x1a|\n" +
	"\fScrapeConfig\x12F\n" +
	"\x11container_runtime\x18\x01 \x01(\x0e2\x19.storage.ContainerRuntimeR\x10containerRuntime\x12$\n" +
	"\x0eis_master_node\x18\x02 \x01(\bR\fisMasterNode\x1aL\n" +
	"\n" +
	"TriggerRun\x12\x1b\n" +
	"\tscrape_id\x18\x01 \x01(\tR\bscrapeId\x12!\n" +
	"\fstandard_ids\x18\x02 \x03(\tR\vstandardIds\x1a\xe7\x02\n" +
	"\x19AuditLogCollectionRequest\x12]\n" +
	"\tstart_req\x18\x01 \x01(\v2>.sensor.MsgToCompliance.AuditLogCollectionRequest.StartRequestH\x00R\bstartReq\x12Z\n" +
	"\bstop_req\x18\x02 \x01(\v2=.sensor.MsgToCompliance.AuditLogCollectionRequest.StopRequestH\x00R\astopReq\x1ay\n" +
	"\fStartRequest\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12J\n" +
	"\x13collect_start_state\x18\x02 \x01(\v2\x1a.storage.AuditLogFileStateR\x11collectStartState\x1a\r\n" +
	"\vStopRequestB\x05\n" +
	"\x03req\x1a\x83\x02\n" +
	"\x10NodeInventoryACK\x12G\n" +
	"\x06action\x18\x01 \x01(\x0e2/.sensor.MsgToCompliance.NodeInventoryACK.ActionR\x06action\x12V\n" +
	"\vmessageType\x18\x02 \x01(\x0e24.sensor.MsgToCompliance.NodeInventoryACK.MessageTypeR\vmessageType\"\x1b\n" +
	"\x06Action\x12\a\n" +
	"\x03ACK\x10\x00\x12\b\n" +
	"\x04NACK\x10\x01\"1\n" +
	"\vMessageType\x12\x11\n" +
	"\rNodeInventory\x10\x00\x12\x0f\n" +
	"\vNodeIndexer\x10\x01B\x05\n" +
	"\x03msg2Z\n" +
	"\x11ComplianceService\x12E\n" +
	"\vCommunicate\x12\x19.sensor.MsgFromCompliance\x1a\x17.sensor.MsgToCompliance(\x010\x01B%Z\x1b./internalapi/sensor;sensor\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_internalapi_sensor_compliance_iservice_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_internalapi_sensor_compliance_iservice_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_internalapi_sensor_compliance_iservice_proto_goTypes = []any{
	(MsgToCompliance_NodeInventoryACK_Action)(0),                   // 0: sensor.MsgToCompliance.NodeInventoryACK.Action
	(MsgToCompliance_NodeInventoryACK_MessageType)(0),              // 1: sensor.MsgToCompliance.NodeInventoryACK.MessageType
	(*GetScrapeConfigRequest)(nil),                                 // 2: sensor.GetScrapeConfigRequest
	(*AuditEvents)(nil),                                            // 3: sensor.AuditEvents
	(*MsgFromCompliance)(nil),                                      // 4: sensor.MsgFromCompliance
	(*MsgToCompliance)(nil),                                        // 5: sensor.MsgToCompliance
	(*MsgToCompliance_ScrapeConfig)(nil),                           // 6: sensor.MsgToCompliance.ScrapeConfig
	(*MsgToCompliance_TriggerRun)(nil),                             // 7: sensor.MsgToCompliance.TriggerRun
	(*MsgToCompliance_AuditLogCollectionRequest)(nil),              // 8: sensor.MsgToCompliance.AuditLogCollectionRequest
	(*MsgToCompliance_NodeInventoryACK)(nil),                       // 9: sensor.MsgToCompliance.NodeInventoryACK
	(*MsgToCompliance_AuditLogCollectionRequest_StartRequest)(nil), // 10: sensor.MsgToCompliance.AuditLogCollectionRequest.StartRequest
	(*MsgToCompliance_AuditLogCollectionRequest_StopRequest)(nil),  // 11: sensor.MsgToCompliance.AuditLogCollectionRequest.StopRequest
	(*storage.KubernetesEvent)(nil),                                // 12: storage.KubernetesEvent
	(*compliance.ComplianceReturn)(nil),                            // 13: compliance.ComplianceReturn
	(*storage.NodeInventory)(nil),                                  // 14: storage.NodeInventory
	(*v4.IndexReport)(nil),                                         // 15: scanner.v4.IndexReport
	(storage.ContainerRuntime)(0),                                  // 16: storage.ContainerRuntime
	(*storage.AuditLogFileState)(nil),                              // 17: storage.AuditLogFileState
}
var file_internalapi_sensor_compliance_iservice_proto_depIdxs = []int32{
	12, // 0: sensor.AuditEvents.events:type_name -> storage.KubernetesEvent
	13, // 1: sensor.MsgFromCompliance.return:type_name -> compliance.ComplianceReturn
	3,  // 2: sensor.MsgFromCompliance.audit_events:type_name -> sensor.AuditEvents
	14, // 3: sensor.MsgFromCompliance.node_inventory:type_name -> storage.NodeInventory
	15, // 4: sensor.MsgFromCompliance.index_report:type_name -> scanner.v4.IndexReport
	6,  // 5: sensor.MsgToCompliance.config:type_name -> sensor.MsgToCompliance.ScrapeConfig
	7,  // 6: sensor.MsgToCompliance.trigger:type_name -> sensor.MsgToCompliance.TriggerRun
	8,  // 7: sensor.MsgToCompliance.audit_log_collection_request:type_name -> sensor.MsgToCompliance.AuditLogCollectionRequest
	9,  // 8: sensor.MsgToCompliance.ack:type_name -> sensor.MsgToCompliance.NodeInventoryACK
	16, // 9: sensor.MsgToCompliance.ScrapeConfig.container_runtime:type_name -> storage.ContainerRuntime
	10, // 10: sensor.MsgToCompliance.AuditLogCollectionRequest.start_req:type_name -> sensor.MsgToCompliance.AuditLogCollectionRequest.StartRequest
	11, // 11: sensor.MsgToCompliance.AuditLogCollectionRequest.stop_req:type_name -> sensor.MsgToCompliance.AuditLogCollectionRequest.StopRequest
	0,  // 12: sensor.MsgToCompliance.NodeInventoryACK.action:type_name -> sensor.MsgToCompliance.NodeInventoryACK.Action
	1,  // 13: sensor.MsgToCompliance.NodeInventoryACK.messageType:type_name -> sensor.MsgToCompliance.NodeInventoryACK.MessageType
	17, // 14: sensor.MsgToCompliance.AuditLogCollectionRequest.StartRequest.collect_start_state:type_name -> storage.AuditLogFileState
	4,  // 15: sensor.ComplianceService.Communicate:input_type -> sensor.MsgFromCompliance
	5,  // 16: sensor.ComplianceService.Communicate:output_type -> sensor.MsgToCompliance
	16, // [16:17] is the sub-list for method output_type
	15, // [15:16] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_internalapi_sensor_compliance_iservice_proto_init() }
func file_internalapi_sensor_compliance_iservice_proto_init() {
	if File_internalapi_sensor_compliance_iservice_proto != nil {
		return
	}
	file_internalapi_sensor_compliance_iservice_proto_msgTypes[2].OneofWrappers = []any{
		(*msgFromCompliance_Return)(nil),
		(*msgFromCompliance_AuditEvents)(nil),
		(*msgFromCompliance_NodeInventory)(nil),
		(*msgFromCompliance_IndexReport)(nil),
	}
	file_internalapi_sensor_compliance_iservice_proto_msgTypes[3].OneofWrappers = []any{
		(*msgToCompliance_Config)(nil),
		(*msgToCompliance_Trigger)(nil),
		(*msgToCompliance_AuditLogCollectionRequest_)(nil),
		(*msgToCompliance_Ack)(nil),
	}
	file_internalapi_sensor_compliance_iservice_proto_msgTypes[6].OneofWrappers = []any{
		(*msgToCompliance_AuditLogCollectionRequest_StartReq)(nil),
		(*msgToCompliance_AuditLogCollectionRequest_StopReq)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internalapi_sensor_compliance_iservice_proto_rawDesc), len(file_internalapi_sensor_compliance_iservice_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internalapi_sensor_compliance_iservice_proto_goTypes,
		DependencyIndexes: file_internalapi_sensor_compliance_iservice_proto_depIdxs,
		EnumInfos:         file_internalapi_sensor_compliance_iservice_proto_enumTypes,
		MessageInfos:      file_internalapi_sensor_compliance_iservice_proto_msgTypes,
	}.Build()
	File_internalapi_sensor_compliance_iservice_proto = out.File
	file_internalapi_sensor_compliance_iservice_proto_goTypes = nil
	file_internalapi_sensor_compliance_iservice_proto_depIdxs = nil
}
