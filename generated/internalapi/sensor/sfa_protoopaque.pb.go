// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: internalapi/sensor/sfa.proto

//go:build protoopaque

package sensor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileActivityBase struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Path        *string                `protobuf:"bytes,1,opt,name=path"`
	xxx_hidden_HostPath    *string                `protobuf:"bytes,2,opt,name=host_path,json=hostPath"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *FileActivityBase) Reset() {
	*x = FileActivityBase{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileActivityBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileActivityBase) ProtoMessage() {}

func (x *FileActivityBase) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FileActivityBase) GetPath() string {
	if x != nil {
		if x.xxx_hidden_Path != nil {
			return *x.xxx_hidden_Path
		}
		return ""
	}
	return ""
}

func (x *FileActivityBase) GetHostPath() string {
	if x != nil {
		if x.xxx_hidden_HostPath != nil {
			return *x.xxx_hidden_HostPath
		}
		return ""
	}
	return ""
}

func (x *FileActivityBase) SetPath(v string) {
	x.xxx_hidden_Path = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *FileActivityBase) SetHostPath(v string) {
	x.xxx_hidden_HostPath = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *FileActivityBase) HasPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *FileActivityBase) HasHostPath() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FileActivityBase) ClearPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Path = nil
}

func (x *FileActivityBase) ClearHostPath() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_HostPath = nil
}

type FileActivityBase_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Path     *string
	HostPath *string
}

func (b0 FileActivityBase_builder) Build() *FileActivityBase {
	m0 := &FileActivityBase{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Path != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Path = b.Path
	}
	if b.HostPath != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_HostPath = b.HostPath
	}
	return m0
}

type FileCreation struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Activity *FileActivityBase      `protobuf:"bytes,1,opt,name=activity"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *FileCreation) Reset() {
	*x = FileCreation{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileCreation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileCreation) ProtoMessage() {}

func (x *FileCreation) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FileCreation) GetActivity() *FileActivityBase {
	if x != nil {
		return x.xxx_hidden_Activity
	}
	return nil
}

func (x *FileCreation) SetActivity(v *FileActivityBase) {
	x.xxx_hidden_Activity = v
}

func (x *FileCreation) HasActivity() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Activity != nil
}

func (x *FileCreation) ClearActivity() {
	x.xxx_hidden_Activity = nil
}

type FileCreation_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Activity *FileActivityBase
}

func (b0 FileCreation_builder) Build() *FileCreation {
	m0 := &FileCreation{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Activity = b.Activity
	return m0
}

type FileUnlink struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Activity *FileActivityBase      `protobuf:"bytes,1,opt,name=activity"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *FileUnlink) Reset() {
	*x = FileUnlink{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUnlink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUnlink) ProtoMessage() {}

func (x *FileUnlink) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FileUnlink) GetActivity() *FileActivityBase {
	if x != nil {
		return x.xxx_hidden_Activity
	}
	return nil
}

func (x *FileUnlink) SetActivity(v *FileActivityBase) {
	x.xxx_hidden_Activity = v
}

func (x *FileUnlink) HasActivity() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Activity != nil
}

func (x *FileUnlink) ClearActivity() {
	x.xxx_hidden_Activity = nil
}

type FileUnlink_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Activity *FileActivityBase
}

func (b0 FileUnlink_builder) Build() *FileUnlink {
	m0 := &FileUnlink{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Activity = b.Activity
	return m0
}

type FileRename struct {
	state          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Old *FileActivityBase      `protobuf:"bytes,1,opt,name=old"`
	xxx_hidden_New *FileActivityBase      `protobuf:"bytes,2,opt,name=new"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FileRename) Reset() {
	*x = FileRename{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileRename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRename) ProtoMessage() {}

func (x *FileRename) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FileRename) GetOld() *FileActivityBase {
	if x != nil {
		return x.xxx_hidden_Old
	}
	return nil
}

func (x *FileRename) GetNew() *FileActivityBase {
	if x != nil {
		return x.xxx_hidden_New
	}
	return nil
}

func (x *FileRename) SetOld(v *FileActivityBase) {
	x.xxx_hidden_Old = v
}

func (x *FileRename) SetNew(v *FileActivityBase) {
	x.xxx_hidden_New = v
}

func (x *FileRename) HasOld() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Old != nil
}

func (x *FileRename) HasNew() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_New != nil
}

func (x *FileRename) ClearOld() {
	x.xxx_hidden_Old = nil
}

func (x *FileRename) ClearNew() {
	x.xxx_hidden_New = nil
}

type FileRename_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Old *FileActivityBase
	New *FileActivityBase
}

func (b0 FileRename_builder) Build() *FileRename {
	m0 := &FileRename{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Old = b.Old
	x.xxx_hidden_New = b.New
	return m0
}

type FilePermissionChange struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Activity    *FileActivityBase      `protobuf:"bytes,1,opt,name=activity"`
	xxx_hidden_Mode        uint32                 `protobuf:"varint,2,opt,name=mode"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *FilePermissionChange) Reset() {
	*x = FilePermissionChange{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilePermissionChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilePermissionChange) ProtoMessage() {}

func (x *FilePermissionChange) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FilePermissionChange) GetActivity() *FileActivityBase {
	if x != nil {
		return x.xxx_hidden_Activity
	}
	return nil
}

func (x *FilePermissionChange) GetMode() uint32 {
	if x != nil {
		return x.xxx_hidden_Mode
	}
	return 0
}

func (x *FilePermissionChange) SetActivity(v *FileActivityBase) {
	x.xxx_hidden_Activity = v
}

func (x *FilePermissionChange) SetMode(v uint32) {
	x.xxx_hidden_Mode = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *FilePermissionChange) HasActivity() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Activity != nil
}

func (x *FilePermissionChange) HasMode() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FilePermissionChange) ClearActivity() {
	x.xxx_hidden_Activity = nil
}

func (x *FilePermissionChange) ClearMode() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Mode = 0
}

type FilePermissionChange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Activity *FileActivityBase
	Mode     *uint32
}

func (b0 FilePermissionChange_builder) Build() *FilePermissionChange {
	m0 := &FilePermissionChange{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Activity = b.Activity
	if b.Mode != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Mode = *b.Mode
	}
	return m0
}

type FileOwnershipChange struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Activity    *FileActivityBase      `protobuf:"bytes,1,opt,name=activity"`
	xxx_hidden_Uid         uint32                 `protobuf:"varint,2,opt,name=uid"`
	xxx_hidden_Gid         uint32                 `protobuf:"varint,3,opt,name=gid"`
	xxx_hidden_Username    *string                `protobuf:"bytes,4,opt,name=username"`
	xxx_hidden_Group       *string                `protobuf:"bytes,5,opt,name=group"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *FileOwnershipChange) Reset() {
	*x = FileOwnershipChange{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileOwnershipChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileOwnershipChange) ProtoMessage() {}

func (x *FileOwnershipChange) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FileOwnershipChange) GetActivity() *FileActivityBase {
	if x != nil {
		return x.xxx_hidden_Activity
	}
	return nil
}

func (x *FileOwnershipChange) GetUid() uint32 {
	if x != nil {
		return x.xxx_hidden_Uid
	}
	return 0
}

func (x *FileOwnershipChange) GetGid() uint32 {
	if x != nil {
		return x.xxx_hidden_Gid
	}
	return 0
}

func (x *FileOwnershipChange) GetUsername() string {
	if x != nil {
		if x.xxx_hidden_Username != nil {
			return *x.xxx_hidden_Username
		}
		return ""
	}
	return ""
}

func (x *FileOwnershipChange) GetGroup() string {
	if x != nil {
		if x.xxx_hidden_Group != nil {
			return *x.xxx_hidden_Group
		}
		return ""
	}
	return ""
}

func (x *FileOwnershipChange) SetActivity(v *FileActivityBase) {
	x.xxx_hidden_Activity = v
}

func (x *FileOwnershipChange) SetUid(v uint32) {
	x.xxx_hidden_Uid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *FileOwnershipChange) SetGid(v uint32) {
	x.xxx_hidden_Gid = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *FileOwnershipChange) SetUsername(v string) {
	x.xxx_hidden_Username = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *FileOwnershipChange) SetGroup(v string) {
	x.xxx_hidden_Group = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *FileOwnershipChange) HasActivity() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Activity != nil
}

func (x *FileOwnershipChange) HasUid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *FileOwnershipChange) HasGid() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *FileOwnershipChange) HasUsername() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *FileOwnershipChange) HasGroup() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *FileOwnershipChange) ClearActivity() {
	x.xxx_hidden_Activity = nil
}

func (x *FileOwnershipChange) ClearUid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Uid = 0
}

func (x *FileOwnershipChange) ClearGid() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Gid = 0
}

func (x *FileOwnershipChange) ClearUsername() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Username = nil
}

func (x *FileOwnershipChange) ClearGroup() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Group = nil
}

type FileOwnershipChange_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Activity *FileActivityBase
	Uid      *uint32
	Gid      *uint32
	Username *string
	Group    *string
}

func (b0 FileOwnershipChange_builder) Build() *FileOwnershipChange {
	m0 := &FileOwnershipChange{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Activity = b.Activity
	if b.Uid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Uid = *b.Uid
	}
	if b.Gid != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_Gid = *b.Gid
	}
	if b.Username != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Username = b.Username
	}
	if b.Group != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Group = b.Group
	}
	return m0
}

type FileWrite struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Activity *FileActivityBase      `protobuf:"bytes,1,opt,name=activity"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *FileWrite) Reset() {
	*x = FileWrite{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileWrite) ProtoMessage() {}

func (x *FileWrite) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FileWrite) GetActivity() *FileActivityBase {
	if x != nil {
		return x.xxx_hidden_Activity
	}
	return nil
}

func (x *FileWrite) SetActivity(v *FileActivityBase) {
	x.xxx_hidden_Activity = v
}

func (x *FileWrite) HasActivity() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Activity != nil
}

func (x *FileWrite) ClearActivity() {
	x.xxx_hidden_Activity = nil
}

type FileWrite_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Activity *FileActivityBase
}

func (b0 FileWrite_builder) Build() *FileWrite {
	m0 := &FileWrite{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Activity = b.Activity
	return m0
}

type FileOpen struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Activity *FileActivityBase      `protobuf:"bytes,1,opt,name=activity"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *FileOpen) Reset() {
	*x = FileOpen{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileOpen) ProtoMessage() {}

func (x *FileOpen) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FileOpen) GetActivity() *FileActivityBase {
	if x != nil {
		return x.xxx_hidden_Activity
	}
	return nil
}

func (x *FileOpen) SetActivity(v *FileActivityBase) {
	x.xxx_hidden_Activity = v
}

func (x *FileOpen) HasActivity() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Activity != nil
}

func (x *FileOpen) ClearActivity() {
	x.xxx_hidden_Activity = nil
}

type FileOpen_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Activity *FileActivityBase
}

func (b0 FileOpen_builder) Build() *FileOpen {
	m0 := &FileOpen{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Activity = b.Activity
	return m0
}

type FileActivity struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp"`
	xxx_hidden_Process   *ProcessSignal         `protobuf:"bytes,2,opt,name=process"`
	xxx_hidden_File      isFileActivity_File    `protobuf_oneof:"file"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *FileActivity) Reset() {
	*x = FileActivity{}
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileActivity) ProtoMessage() {}

func (x *FileActivity) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_sfa_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *FileActivity) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *FileActivity) GetProcess() *ProcessSignal {
	if x != nil {
		return x.xxx_hidden_Process
	}
	return nil
}

func (x *FileActivity) GetCreation() *FileCreation {
	if x != nil {
		if x, ok := x.xxx_hidden_File.(*fileActivity_Creation); ok {
			return x.Creation
		}
	}
	return nil
}

func (x *FileActivity) GetUnlink() *FileUnlink {
	if x != nil {
		if x, ok := x.xxx_hidden_File.(*fileActivity_Unlink); ok {
			return x.Unlink
		}
	}
	return nil
}

func (x *FileActivity) GetRename() *FileRename {
	if x != nil {
		if x, ok := x.xxx_hidden_File.(*fileActivity_Rename); ok {
			return x.Rename
		}
	}
	return nil
}

func (x *FileActivity) GetPermission() *FilePermissionChange {
	if x != nil {
		if x, ok := x.xxx_hidden_File.(*fileActivity_Permission); ok {
			return x.Permission
		}
	}
	return nil
}

func (x *FileActivity) GetOwnership() *FileOwnershipChange {
	if x != nil {
		if x, ok := x.xxx_hidden_File.(*fileActivity_Ownership); ok {
			return x.Ownership
		}
	}
	return nil
}

func (x *FileActivity) GetOpen() *FileOpen {
	if x != nil {
		if x, ok := x.xxx_hidden_File.(*fileActivity_Open); ok {
			return x.Open
		}
	}
	return nil
}

func (x *FileActivity) GetWrite() *FileWrite {
	if x != nil {
		if x, ok := x.xxx_hidden_File.(*fileActivity_Write); ok {
			return x.Write
		}
	}
	return nil
}

func (x *FileActivity) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *FileActivity) SetProcess(v *ProcessSignal) {
	x.xxx_hidden_Process = v
}

func (x *FileActivity) SetCreation(v *FileCreation) {
	if v == nil {
		x.xxx_hidden_File = nil
		return
	}
	x.xxx_hidden_File = &fileActivity_Creation{v}
}

func (x *FileActivity) SetUnlink(v *FileUnlink) {
	if v == nil {
		x.xxx_hidden_File = nil
		return
	}
	x.xxx_hidden_File = &fileActivity_Unlink{v}
}

func (x *FileActivity) SetRename(v *FileRename) {
	if v == nil {
		x.xxx_hidden_File = nil
		return
	}
	x.xxx_hidden_File = &fileActivity_Rename{v}
}

func (x *FileActivity) SetPermission(v *FilePermissionChange) {
	if v == nil {
		x.xxx_hidden_File = nil
		return
	}
	x.xxx_hidden_File = &fileActivity_Permission{v}
}

func (x *FileActivity) SetOwnership(v *FileOwnershipChange) {
	if v == nil {
		x.xxx_hidden_File = nil
		return
	}
	x.xxx_hidden_File = &fileActivity_Ownership{v}
}

func (x *FileActivity) SetOpen(v *FileOpen) {
	if v == nil {
		x.xxx_hidden_File = nil
		return
	}
	x.xxx_hidden_File = &fileActivity_Open{v}
}

func (x *FileActivity) SetWrite(v *FileWrite) {
	if v == nil {
		x.xxx_hidden_File = nil
		return
	}
	x.xxx_hidden_File = &fileActivity_Write{v}
}

func (x *FileActivity) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *FileActivity) HasProcess() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Process != nil
}

func (x *FileActivity) HasFile() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_File != nil
}

func (x *FileActivity) HasCreation() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_File.(*fileActivity_Creation)
	return ok
}

func (x *FileActivity) HasUnlink() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_File.(*fileActivity_Unlink)
	return ok
}

func (x *FileActivity) HasRename() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_File.(*fileActivity_Rename)
	return ok
}

func (x *FileActivity) HasPermission() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_File.(*fileActivity_Permission)
	return ok
}

func (x *FileActivity) HasOwnership() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_File.(*fileActivity_Ownership)
	return ok
}

func (x *FileActivity) HasOpen() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_File.(*fileActivity_Open)
	return ok
}

func (x *FileActivity) HasWrite() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_File.(*fileActivity_Write)
	return ok
}

func (x *FileActivity) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *FileActivity) ClearProcess() {
	x.xxx_hidden_Process = nil
}

func (x *FileActivity) ClearFile() {
	x.xxx_hidden_File = nil
}

func (x *FileActivity) ClearCreation() {
	if _, ok := x.xxx_hidden_File.(*fileActivity_Creation); ok {
		x.xxx_hidden_File = nil
	}
}

func (x *FileActivity) ClearUnlink() {
	if _, ok := x.xxx_hidden_File.(*fileActivity_Unlink); ok {
		x.xxx_hidden_File = nil
	}
}

func (x *FileActivity) ClearRename() {
	if _, ok := x.xxx_hidden_File.(*fileActivity_Rename); ok {
		x.xxx_hidden_File = nil
	}
}

func (x *FileActivity) ClearPermission() {
	if _, ok := x.xxx_hidden_File.(*fileActivity_Permission); ok {
		x.xxx_hidden_File = nil
	}
}

func (x *FileActivity) ClearOwnership() {
	if _, ok := x.xxx_hidden_File.(*fileActivity_Ownership); ok {
		x.xxx_hidden_File = nil
	}
}

func (x *FileActivity) ClearOpen() {
	if _, ok := x.xxx_hidden_File.(*fileActivity_Open); ok {
		x.xxx_hidden_File = nil
	}
}

func (x *FileActivity) ClearWrite() {
	if _, ok := x.xxx_hidden_File.(*fileActivity_Write); ok {
		x.xxx_hidden_File = nil
	}
}

const FileActivity_File_not_set_case case_FileActivity_File = 0
const FileActivity_Creation_case case_FileActivity_File = 3
const FileActivity_Unlink_case case_FileActivity_File = 4
const FileActivity_Rename_case case_FileActivity_File = 5
const FileActivity_Permission_case case_FileActivity_File = 6
const FileActivity_Ownership_case case_FileActivity_File = 7
const FileActivity_Open_case case_FileActivity_File = 8
const FileActivity_Write_case case_FileActivity_File = 9

func (x *FileActivity) WhichFile() case_FileActivity_File {
	if x == nil {
		return FileActivity_File_not_set_case
	}
	switch x.xxx_hidden_File.(type) {
	case *fileActivity_Creation:
		return FileActivity_Creation_case
	case *fileActivity_Unlink:
		return FileActivity_Unlink_case
	case *fileActivity_Rename:
		return FileActivity_Rename_case
	case *fileActivity_Permission:
		return FileActivity_Permission_case
	case *fileActivity_Ownership:
		return FileActivity_Ownership_case
	case *fileActivity_Open:
		return FileActivity_Open_case
	case *fileActivity_Write:
		return FileActivity_Write_case
	default:
		return FileActivity_File_not_set_case
	}
}

type FileActivity_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Timestamp *timestamppb.Timestamp
	Process   *ProcessSignal
	// Fields of oneof xxx_hidden_File:
	Creation   *FileCreation
	Unlink     *FileUnlink
	Rename     *FileRename
	Permission *FilePermissionChange
	Ownership  *FileOwnershipChange
	Open       *FileOpen
	Write      *FileWrite
	// -- end of xxx_hidden_File
}

func (b0 FileActivity_builder) Build() *FileActivity {
	m0 := &FileActivity{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Timestamp = b.Timestamp
	x.xxx_hidden_Process = b.Process
	if b.Creation != nil {
		x.xxx_hidden_File = &fileActivity_Creation{b.Creation}
	}
	if b.Unlink != nil {
		x.xxx_hidden_File = &fileActivity_Unlink{b.Unlink}
	}
	if b.Rename != nil {
		x.xxx_hidden_File = &fileActivity_Rename{b.Rename}
	}
	if b.Permission != nil {
		x.xxx_hidden_File = &fileActivity_Permission{b.Permission}
	}
	if b.Ownership != nil {
		x.xxx_hidden_File = &fileActivity_Ownership{b.Ownership}
	}
	if b.Open != nil {
		x.xxx_hidden_File = &fileActivity_Open{b.Open}
	}
	if b.Write != nil {
		x.xxx_hidden_File = &fileActivity_Write{b.Write}
	}
	return m0
}

type case_FileActivity_File protoreflect.FieldNumber

func (x case_FileActivity_File) String() string {
	md := file_internalapi_sensor_sfa_proto_msgTypes[8].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isFileActivity_File interface {
	isFileActivity_File()
}

type fileActivity_Creation struct {
	Creation *FileCreation `protobuf:"bytes,3,opt,name=creation,oneof"`
}

type fileActivity_Unlink struct {
	Unlink *FileUnlink `protobuf:"bytes,4,opt,name=unlink,oneof"`
}

type fileActivity_Rename struct {
	Rename *FileRename `protobuf:"bytes,5,opt,name=rename,oneof"`
}

type fileActivity_Permission struct {
	Permission *FilePermissionChange `protobuf:"bytes,6,opt,name=permission,oneof"`
}

type fileActivity_Ownership struct {
	Ownership *FileOwnershipChange `protobuf:"bytes,7,opt,name=ownership,oneof"`
}

type fileActivity_Open struct {
	Open *FileOpen `protobuf:"bytes,8,opt,name=open,oneof"`
}

type fileActivity_Write struct {
	Write *FileWrite `protobuf:"bytes,9,opt,name=write,oneof"`
}

func (*fileActivity_Creation) isFileActivity_File() {}

func (*fileActivity_Unlink) isFileActivity_File() {}

func (*fileActivity_Rename) isFileActivity_File() {}

func (*fileActivity_Permission) isFileActivity_File() {}

func (*fileActivity_Ownership) isFileActivity_File() {}

func (*fileActivity_Open) isFileActivity_File() {}

func (*fileActivity_Write) isFileActivity_File() {}

var File_internalapi_sensor_sfa_proto protoreflect.FileDescriptor

const file_internalapi_sensor_sfa_proto_rawDesc = "" +
	"\n" +
	"\x1cinternalapi/sensor/sfa.proto\x12\x06sensor\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\"internalapi/sensor/collector.proto\x1a!google/protobuf/go_features.proto\"C\n" +
	"\x10FileActivityBase\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1b\n" +
	"\thost_path\x18\x02 \x01(\tR\bhostPath\"D\n" +
	"\fFileCreation\x124\n" +
	"\bactivity\x18\x01 \x01(\v2\x18.sensor.FileActivityBaseR\bactivity\"B\n" +
	"\n" +
	"FileUnlink\x124\n" +
	"\bactivity\x18\x01 \x01(\v2\x18.sensor.FileActivityBaseR\bactivity\"d\n" +
	"\n" +
	"FileRename\x12*\n" +
	"\x03old\x18\x01 \x01(\v2\x18.sensor.FileActivityBaseR\x03old\x12*\n" +
	"\x03new\x18\x02 \x01(\v2\x18.sensor.FileActivityBaseR\x03new\"`\n" +
	"\x14FilePermissionChange\x124\n" +
	"\bactivity\x18\x01 \x01(\v2\x18.sensor.FileActivityBaseR\bactivity\x12\x12\n" +
	"\x04mode\x18\x02 \x01(\rR\x04mode\"\xa1\x01\n" +
	"\x13FileOwnershipChange\x124\n" +
	"\bactivity\x18\x01 \x01(\v2\x18.sensor.FileActivityBaseR\bactivity\x12\x10\n" +
	"\x03uid\x18\x02 \x01(\rR\x03uid\x12\x10\n" +
	"\x03gid\x18\x03 \x01(\rR\x03gid\x12\x1a\n" +
	"\busername\x18\x04 \x01(\tR\busername\x12\x14\n" +
	"\x05group\x18\x05 \x01(\tR\x05group\"A\n" +
	"\tFileWrite\x124\n" +
	"\bactivity\x18\x01 \x01(\v2\x18.sensor.FileActivityBaseR\bactivity\"@\n" +
	"\bFileOpen\x124\n" +
	"\bactivity\x18\x01 \x01(\v2\x18.sensor.FileActivityBaseR\bactivity\"\xe1\x03\n" +
	"\fFileActivity\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12/\n" +
	"\aprocess\x18\x02 \x01(\v2\x15.sensor.ProcessSignalR\aprocess\x122\n" +
	"\bcreation\x18\x03 \x01(\v2\x14.sensor.FileCreationH\x00R\bcreation\x12,\n" +
	"\x06unlink\x18\x04 \x01(\v2\x12.sensor.FileUnlinkH\x00R\x06unlink\x12,\n" +
	"\x06rename\x18\x05 \x01(\v2\x12.sensor.FileRenameH\x00R\x06rename\x12>\n" +
	"\n" +
	"permission\x18\x06 \x01(\v2\x1c.sensor.FilePermissionChangeH\x00R\n" +
	"permission\x12;\n" +
	"\townership\x18\a \x01(\v2\x1b.sensor.FileOwnershipChangeH\x00R\townership\x12&\n" +
	"\x04open\x18\b \x01(\v2\x10.sensor.FileOpenH\x00R\x04open\x12)\n" +
	"\x05write\x18\t \x01(\v2\x11.sensor.FileWriteH\x00R\x05writeB\x06\n" +
	"\x04fileB(Z\x1b./internalapi/sensor;sensor\xf8\x01\x01\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_internalapi_sensor_sfa_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_internalapi_sensor_sfa_proto_goTypes = []any{
	(*FileActivityBase)(nil),      // 0: sensor.FileActivityBase
	(*FileCreation)(nil),          // 1: sensor.FileCreation
	(*FileUnlink)(nil),            // 2: sensor.FileUnlink
	(*FileRename)(nil),            // 3: sensor.FileRename
	(*FilePermissionChange)(nil),  // 4: sensor.FilePermissionChange
	(*FileOwnershipChange)(nil),   // 5: sensor.FileOwnershipChange
	(*FileWrite)(nil),             // 6: sensor.FileWrite
	(*FileOpen)(nil),              // 7: sensor.FileOpen
	(*FileActivity)(nil),          // 8: sensor.FileActivity
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*ProcessSignal)(nil),         // 10: sensor.ProcessSignal
}
var file_internalapi_sensor_sfa_proto_depIdxs = []int32{
	0,  // 0: sensor.FileCreation.activity:type_name -> sensor.FileActivityBase
	0,  // 1: sensor.FileUnlink.activity:type_name -> sensor.FileActivityBase
	0,  // 2: sensor.FileRename.old:type_name -> sensor.FileActivityBase
	0,  // 3: sensor.FileRename.new:type_name -> sensor.FileActivityBase
	0,  // 4: sensor.FilePermissionChange.activity:type_name -> sensor.FileActivityBase
	0,  // 5: sensor.FileOwnershipChange.activity:type_name -> sensor.FileActivityBase
	0,  // 6: sensor.FileWrite.activity:type_name -> sensor.FileActivityBase
	0,  // 7: sensor.FileOpen.activity:type_name -> sensor.FileActivityBase
	9,  // 8: sensor.FileActivity.timestamp:type_name -> google.protobuf.Timestamp
	10, // 9: sensor.FileActivity.process:type_name -> sensor.ProcessSignal
	1,  // 10: sensor.FileActivity.creation:type_name -> sensor.FileCreation
	2,  // 11: sensor.FileActivity.unlink:type_name -> sensor.FileUnlink
	3,  // 12: sensor.FileActivity.rename:type_name -> sensor.FileRename
	4,  // 13: sensor.FileActivity.permission:type_name -> sensor.FilePermissionChange
	5,  // 14: sensor.FileActivity.ownership:type_name -> sensor.FileOwnershipChange
	7,  // 15: sensor.FileActivity.open:type_name -> sensor.FileOpen
	6,  // 16: sensor.FileActivity.write:type_name -> sensor.FileWrite
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_internalapi_sensor_sfa_proto_init() }
func file_internalapi_sensor_sfa_proto_init() {
	if File_internalapi_sensor_sfa_proto != nil {
		return
	}
	file_internalapi_sensor_collector_proto_init()
	file_internalapi_sensor_sfa_proto_msgTypes[8].OneofWrappers = []any{
		(*fileActivity_Creation)(nil),
		(*fileActivity_Unlink)(nil),
		(*fileActivity_Rename)(nil),
		(*fileActivity_Permission)(nil),
		(*fileActivity_Ownership)(nil),
		(*fileActivity_Open)(nil),
		(*fileActivity_Write)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internalapi_sensor_sfa_proto_rawDesc), len(file_internalapi_sensor_sfa_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internalapi_sensor_sfa_proto_goTypes,
		DependencyIndexes: file_internalapi_sensor_sfa_proto_depIdxs,
		MessageInfos:      file_internalapi_sensor_sfa_proto_msgTypes,
	}.Build()
	File_internalapi_sensor_sfa_proto = out.File
	file_internalapi_sensor_sfa_proto_goTypes = nil
	file_internalapi_sensor_sfa_proto_depIdxs = nil
}
