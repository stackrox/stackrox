// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package central

import (
	storage "github.com/stackrox/rox/generated/storage"
)

import (
	"iter"
	"time"
)

// ImmutableNetworkFlowUpdate is an immutable interface for NetworkFlowUpdate
type ImmutableNetworkFlowUpdate interface {
	// Network flows that were added or removed from the last time state was sent to Central.
	GetImmutableUpdated() iter.Seq[*storage.NetworkFlow]
	GetImmutableUpdatedEndpoints() iter.Seq[*storage.NetworkEndpoint]
	GetImmutableTime() time.Time
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *NetworkFlowUpdate
}

// GetImmutableUpdated implements ImmutableNetworkFlowUpdate
func (m *NetworkFlowUpdate) GetImmutableUpdated() iter.Seq[*storage.NetworkFlow] {
	return func(yield func(*storage.NetworkFlow) bool) {
		if m == nil || m.Updated == nil {
			return
		}
		for _, v := range m.Updated {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableUpdatedEndpoints implements ImmutableNetworkFlowUpdate
func (m *NetworkFlowUpdate) GetImmutableUpdatedEndpoints() iter.Seq[*storage.NetworkEndpoint] {
	return func(yield func(*storage.NetworkEndpoint) bool) {
		if m == nil || m.UpdatedEndpoints == nil {
			return
		}
		for _, v := range m.UpdatedEndpoints {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableTime implements ImmutableNetworkFlowUpdate
func (m *NetworkFlowUpdate) GetImmutableTime() time.Time {
	if m == nil || m.Time == nil {
		return time.Time{}
	}
	return m.Time.AsTime()
}

// Verify that NetworkFlowUpdate implements ImmutableNetworkFlowUpdate
var _ ImmutableNetworkFlowUpdate = (*NetworkFlowUpdate)(nil)

// ImmutablePushNetworkEntitiesRequest is an immutable interface for PushNetworkEntitiesRequest
type ImmutablePushNetworkEntitiesRequest interface {
	GetImmutableEntities() iter.Seq[*storage.NetworkEntityInfo]
	GetSeqID() int64
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *PushNetworkEntitiesRequest
}

// GetImmutableEntities implements ImmutablePushNetworkEntitiesRequest
func (m *PushNetworkEntitiesRequest) GetImmutableEntities() iter.Seq[*storage.NetworkEntityInfo] {
	return func(yield func(*storage.NetworkEntityInfo) bool) {
		if m == nil || m.Entities == nil {
			return
		}
		for _, v := range m.Entities {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that PushNetworkEntitiesRequest implements ImmutablePushNetworkEntitiesRequest
var _ ImmutablePushNetworkEntitiesRequest = (*PushNetworkEntitiesRequest)(nil)
