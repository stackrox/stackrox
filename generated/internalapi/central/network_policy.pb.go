// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internalapi/central/network_policy.proto

package central

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	storage "github.com/stackrox/rox/generated/storage"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendNetworkPolicyYamlRequest struct {
	ClusterId            string                             `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	NotifierIds          []string                           `protobuf:"bytes,2,rep,name=notifier_ids,json=notifierIds,proto3" json:"notifier_ids,omitempty"`
	Modification         *storage.NetworkPolicyModification `protobuf:"bytes,3,opt,name=modification,proto3" json:"modification,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *SendNetworkPolicyYamlRequest) Reset()         { *m = SendNetworkPolicyYamlRequest{} }
func (m *SendNetworkPolicyYamlRequest) String() string { return proto.CompactTextString(m) }
func (*SendNetworkPolicyYamlRequest) ProtoMessage()    {}
func (*SendNetworkPolicyYamlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fedb5077705bfdb3, []int{0}
}
func (m *SendNetworkPolicyYamlRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SendNetworkPolicyYamlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SendNetworkPolicyYamlRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SendNetworkPolicyYamlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendNetworkPolicyYamlRequest.Merge(m, src)
}
func (m *SendNetworkPolicyYamlRequest) XXX_Size() int {
	return m.Size()
}
func (m *SendNetworkPolicyYamlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendNetworkPolicyYamlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendNetworkPolicyYamlRequest proto.InternalMessageInfo

func (m *SendNetworkPolicyYamlRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *SendNetworkPolicyYamlRequest) GetNotifierIds() []string {
	if m != nil {
		return m.NotifierIds
	}
	return nil
}

func (m *SendNetworkPolicyYamlRequest) GetModification() *storage.NetworkPolicyModification {
	if m != nil {
		return m.Modification
	}
	return nil
}

func (m *SendNetworkPolicyYamlRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *SendNetworkPolicyYamlRequest) Clone() *SendNetworkPolicyYamlRequest {
	if m == nil {
		return nil
	}
	cloned := new(SendNetworkPolicyYamlRequest)
	*cloned = *m

	if m.NotifierIds != nil {
		cloned.NotifierIds = make([]string, len(m.NotifierIds))
		copy(cloned.NotifierIds, m.NotifierIds)
	}
	cloned.Modification = m.Modification.Clone()
	return cloned
}

func init() {
	proto.RegisterType((*SendNetworkPolicyYamlRequest)(nil), "central.SendNetworkPolicyYamlRequest")
}

func init() {
	proto.RegisterFile("internalapi/central/network_policy.proto", fileDescriptor_fedb5077705bfdb3)
}

var fileDescriptor_fedb5077705bfdb3 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0xc8, 0xcc, 0x2b, 0x49,
	0x2d, 0xca, 0x4b, 0xcc, 0x49, 0x2c, 0xc8, 0xd4, 0x4f, 0x4e, 0xcd, 0x2b, 0x29, 0x4a, 0xcc, 0xd1,
	0xcf, 0x4b, 0x2d, 0x29, 0xcf, 0x2f, 0xca, 0x8e, 0x2f, 0xc8, 0xcf, 0xc9, 0x4c, 0xae, 0xd4, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0xca, 0x4a, 0xc9, 0x14, 0x97, 0xe4, 0x17, 0x25, 0xa6,
	0xa7, 0x62, 0x55, 0xa6, 0xb4, 0x82, 0x91, 0x4b, 0x26, 0x38, 0x35, 0x2f, 0xc5, 0x0f, 0x22, 0x19,
	0x00, 0x96, 0x8b, 0x4c, 0xcc, 0xcd, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe5,
	0xe2, 0x4a, 0xce, 0x29, 0x2d, 0x2e, 0x49, 0x2d, 0x8a, 0xcf, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4,
	0xe0, 0x0c, 0xe2, 0x84, 0x8a, 0x78, 0xa6, 0x08, 0x29, 0x72, 0xf1, 0xe4, 0xe5, 0x97, 0x64, 0xa6,
	0x65, 0x82, 0xe5, 0x8b, 0x25, 0x98, 0x14, 0x98, 0x35, 0x38, 0x83, 0xb8, 0x61, 0x62, 0x9e, 0x29,
	0xc5, 0x42, 0x6e, 0x5c, 0x3c, 0xb9, 0xf9, 0x29, 0x99, 0x69, 0x99, 0xc9, 0x89, 0x25, 0x99, 0xf9,
	0x79, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x4a, 0x7a, 0x50, 0x77, 0xe9, 0xa1, 0x58, 0xed,
	0x8b, 0xa4, 0x32, 0x08, 0x45, 0x9f, 0x93, 0xe4, 0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31,
	0x3e, 0x78, 0x24, 0xc7, 0x38, 0xe3, 0xb1, 0x1c, 0x43, 0x14, 0xcc, 0x8f, 0x49, 0x6c, 0x60, 0xcf,
	0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x17, 0xb9, 0x55, 0x4c, 0x1f, 0x01, 0x00, 0x00,
}

func (m *SendNetworkPolicyYamlRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SendNetworkPolicyYamlRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SendNetworkPolicyYamlRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Modification != nil {
		{
			size, err := m.Modification.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintNetworkPolicy(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NotifierIds) > 0 {
		for iNdEx := len(m.NotifierIds) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.NotifierIds[iNdEx])
			copy(dAtA[i:], m.NotifierIds[iNdEx])
			i = encodeVarintNetworkPolicy(dAtA, i, uint64(len(m.NotifierIds[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.ClusterId) > 0 {
		i -= len(m.ClusterId)
		copy(dAtA[i:], m.ClusterId)
		i = encodeVarintNetworkPolicy(dAtA, i, uint64(len(m.ClusterId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintNetworkPolicy(dAtA []byte, offset int, v uint64) int {
	offset -= sovNetworkPolicy(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SendNetworkPolicyYamlRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClusterId)
	if l > 0 {
		n += 1 + l + sovNetworkPolicy(uint64(l))
	}
	if len(m.NotifierIds) > 0 {
		for _, s := range m.NotifierIds {
			l = len(s)
			n += 1 + l + sovNetworkPolicy(uint64(l))
		}
	}
	if m.Modification != nil {
		l = m.Modification.Size()
		n += 1 + l + sovNetworkPolicy(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovNetworkPolicy(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozNetworkPolicy(x uint64) (n int) {
	return sovNetworkPolicy(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SendNetworkPolicyYamlRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNetworkPolicy
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SendNetworkPolicyYamlRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SendNetworkPolicyYamlRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNetworkPolicy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNetworkPolicy
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNetworkPolicy
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifierIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNetworkPolicy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNetworkPolicy
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNetworkPolicy
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NotifierIds = append(m.NotifierIds, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Modification", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNetworkPolicy
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthNetworkPolicy
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthNetworkPolicy
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Modification == nil {
				m.Modification = &storage.NetworkPolicyModification{}
			}
			if err := m.Modification.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNetworkPolicy(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthNetworkPolicy
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipNetworkPolicy(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowNetworkPolicy
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowNetworkPolicy
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowNetworkPolicy
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthNetworkPolicy
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupNetworkPolicy
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthNetworkPolicy
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthNetworkPolicy        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowNetworkPolicy          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupNetworkPolicy = fmt.Errorf("proto: unexpected end of group")
)
