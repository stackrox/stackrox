// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: internalapi/central/hello.proto

//go:build protoopaque

package central

import (
	storage "github.com/stackrox/rox/generated/storage"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SensorHello_SensorState int32

const (
	SensorHello_UNKNOWN   SensorHello_SensorState = 0
	SensorHello_STARTUP   SensorHello_SensorState = 1
	SensorHello_RECONNECT SensorHello_SensorState = 2
)

// Enum value maps for SensorHello_SensorState.
var (
	SensorHello_SensorState_name = map[int32]string{
		0: "UNKNOWN",
		1: "STARTUP",
		2: "RECONNECT",
	}
	SensorHello_SensorState_value = map[string]int32{
		"UNKNOWN":   0,
		"STARTUP":   1,
		"RECONNECT": 2,
	}
)

func (x SensorHello_SensorState) Enum() *SensorHello_SensorState {
	p := new(SensorHello_SensorState)
	*p = x
	return p
}

func (x SensorHello_SensorState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SensorHello_SensorState) Descriptor() protoreflect.EnumDescriptor {
	return file_internalapi_central_hello_proto_enumTypes[0].Descriptor()
}

func (SensorHello_SensorState) Type() protoreflect.EnumType {
	return &file_internalapi_central_hello_proto_enumTypes[0]
}

func (x SensorHello_SensorState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type HelmManagedConfigInit struct {
	state                    protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_ClusterConfig *storage.CompleteClusterConfig `protobuf:"bytes,1,opt,name=cluster_config,json=clusterConfig"`
	xxx_hidden_ClusterName   *string                        `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName"`
	xxx_hidden_ClusterId     *string                        `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_ManagedBy     storage.ManagerType            `protobuf:"varint,5,opt,name=managed_by,json=managedBy,enum=storage.ManagerType"`
	XXX_raceDetectHookData   protoimpl.RaceDetectHookData
	XXX_presence             [1]uint32
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *HelmManagedConfigInit) Reset() {
	*x = HelmManagedConfigInit{}
	mi := &file_internalapi_central_hello_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelmManagedConfigInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmManagedConfigInit) ProtoMessage() {}

func (x *HelmManagedConfigInit) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_hello_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *HelmManagedConfigInit) GetClusterConfig() *storage.CompleteClusterConfig {
	if x != nil {
		return x.xxx_hidden_ClusterConfig
	}
	return nil
}

func (x *HelmManagedConfigInit) GetClusterName() string {
	if x != nil {
		if x.xxx_hidden_ClusterName != nil {
			return *x.xxx_hidden_ClusterName
		}
		return ""
	}
	return ""
}

func (x *HelmManagedConfigInit) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *HelmManagedConfigInit) GetManagedBy() storage.ManagerType {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_ManagedBy
		}
	}
	return storage.ManagerType(0)
}

func (x *HelmManagedConfigInit) SetClusterConfig(v *storage.CompleteClusterConfig) {
	x.xxx_hidden_ClusterConfig = v
}

func (x *HelmManagedConfigInit) SetClusterName(v string) {
	x.xxx_hidden_ClusterName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *HelmManagedConfigInit) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *HelmManagedConfigInit) SetManagedBy(v storage.ManagerType) {
	x.xxx_hidden_ManagedBy = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *HelmManagedConfigInit) HasClusterConfig() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ClusterConfig != nil
}

func (x *HelmManagedConfigInit) HasClusterName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *HelmManagedConfigInit) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *HelmManagedConfigInit) HasManagedBy() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *HelmManagedConfigInit) ClearClusterConfig() {
	x.xxx_hidden_ClusterConfig = nil
}

func (x *HelmManagedConfigInit) ClearClusterName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ClusterName = nil
}

func (x *HelmManagedConfigInit) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ClusterId = nil
}

func (x *HelmManagedConfigInit) ClearManagedBy() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_ManagedBy = storage.ManagerType_MANAGER_TYPE_UNKNOWN
}

type HelmManagedConfigInit_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ClusterConfig *storage.CompleteClusterConfig
	ClusterName   *string
	ClusterId     *string
	ManagedBy     *storage.ManagerType
}

func (b0 HelmManagedConfigInit_builder) Build() *HelmManagedConfigInit {
	m0 := &HelmManagedConfigInit{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ClusterConfig = b.ClusterConfig
	if b.ClusterName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ClusterName = b.ClusterName
	}
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	if b.ManagedBy != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_ManagedBy = *b.ManagedBy
	}
	return m0
}

type SensorHello struct {
	state                               protoimpl.MessageState                  `protogen:"opaque.v1"`
	xxx_hidden_SensorVersion            *string                                 `protobuf:"bytes,1,opt,name=sensor_version,json=sensorVersion"`
	xxx_hidden_Capabilities             []string                                `protobuf:"bytes,2,rep,name=capabilities"`
	xxx_hidden_DeploymentIdentification *storage.SensorDeploymentIdentification `protobuf:"bytes,5,opt,name=deployment_identification,json=deploymentIdentification"`
	xxx_hidden_HelmManagedConfigInit    *HelmManagedConfigInit                  `protobuf:"bytes,3,opt,name=helm_managed_config_init,json=helmManagedConfigInit"`
	xxx_hidden_PolicyVersion            *string                                 `protobuf:"bytes,4,opt,name=policy_version,json=policyVersion"`
	xxx_hidden_SensorState              SensorHello_SensorState                 `protobuf:"varint,6,opt,name=sensor_state,json=sensorState,enum=central.SensorHello_SensorState"`
	xxx_hidden_RequestDeduperState      bool                                    `protobuf:"varint,7,opt,name=request_deduper_state,json=requestDeduperState"`
	XXX_raceDetectHookData              protoimpl.RaceDetectHookData
	XXX_presence                        [1]uint32
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *SensorHello) Reset() {
	*x = SensorHello{}
	mi := &file_internalapi_central_hello_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorHello) ProtoMessage() {}

func (x *SensorHello) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_hello_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SensorHello) GetSensorVersion() string {
	if x != nil {
		if x.xxx_hidden_SensorVersion != nil {
			return *x.xxx_hidden_SensorVersion
		}
		return ""
	}
	return ""
}

func (x *SensorHello) GetCapabilities() []string {
	if x != nil {
		return x.xxx_hidden_Capabilities
	}
	return nil
}

func (x *SensorHello) GetDeploymentIdentification() *storage.SensorDeploymentIdentification {
	if x != nil {
		return x.xxx_hidden_DeploymentIdentification
	}
	return nil
}

func (x *SensorHello) GetHelmManagedConfigInit() *HelmManagedConfigInit {
	if x != nil {
		return x.xxx_hidden_HelmManagedConfigInit
	}
	return nil
}

func (x *SensorHello) GetPolicyVersion() string {
	if x != nil {
		if x.xxx_hidden_PolicyVersion != nil {
			return *x.xxx_hidden_PolicyVersion
		}
		return ""
	}
	return ""
}

func (x *SensorHello) GetSensorState() SensorHello_SensorState {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 5) {
			return x.xxx_hidden_SensorState
		}
	}
	return SensorHello_UNKNOWN
}

func (x *SensorHello) GetRequestDeduperState() bool {
	if x != nil {
		return x.xxx_hidden_RequestDeduperState
	}
	return false
}

func (x *SensorHello) SetSensorVersion(v string) {
	x.xxx_hidden_SensorVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 7)
}

func (x *SensorHello) SetCapabilities(v []string) {
	x.xxx_hidden_Capabilities = v
}

func (x *SensorHello) SetDeploymentIdentification(v *storage.SensorDeploymentIdentification) {
	x.xxx_hidden_DeploymentIdentification = v
}

func (x *SensorHello) SetHelmManagedConfigInit(v *HelmManagedConfigInit) {
	x.xxx_hidden_HelmManagedConfigInit = v
}

func (x *SensorHello) SetPolicyVersion(v string) {
	x.xxx_hidden_PolicyVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 7)
}

func (x *SensorHello) SetSensorState(v SensorHello_SensorState) {
	x.xxx_hidden_SensorState = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 7)
}

func (x *SensorHello) SetRequestDeduperState(v bool) {
	x.xxx_hidden_RequestDeduperState = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 7)
}

func (x *SensorHello) HasSensorVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SensorHello) HasDeploymentIdentification() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DeploymentIdentification != nil
}

func (x *SensorHello) HasHelmManagedConfigInit() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_HelmManagedConfigInit != nil
}

func (x *SensorHello) HasPolicyVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *SensorHello) HasSensorState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *SensorHello) HasRequestDeduperState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *SensorHello) ClearSensorVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SensorVersion = nil
}

func (x *SensorHello) ClearDeploymentIdentification() {
	x.xxx_hidden_DeploymentIdentification = nil
}

func (x *SensorHello) ClearHelmManagedConfigInit() {
	x.xxx_hidden_HelmManagedConfigInit = nil
}

func (x *SensorHello) ClearPolicyVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_PolicyVersion = nil
}

func (x *SensorHello) ClearSensorState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_SensorState = SensorHello_UNKNOWN
}

func (x *SensorHello) ClearRequestDeduperState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_RequestDeduperState = false
}

type SensorHello_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SensorVersion            *string
	Capabilities             []string
	DeploymentIdentification *storage.SensorDeploymentIdentification
	HelmManagedConfigInit    *HelmManagedConfigInit
	// Policy version sensor understands. If unset, central will try to guess it.
	PolicyVersion *string
	// sensor_state defines in what state sensor is (e.g. it's starting up or it's reconnecting)
	SensorState *SensorHello_SensorState
	// request_deduper_state is a request to central to communicate its deduper state.
	RequestDeduperState *bool
}

func (b0 SensorHello_builder) Build() *SensorHello {
	m0 := &SensorHello{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SensorVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 7)
		x.xxx_hidden_SensorVersion = b.SensorVersion
	}
	x.xxx_hidden_Capabilities = b.Capabilities
	x.xxx_hidden_DeploymentIdentification = b.DeploymentIdentification
	x.xxx_hidden_HelmManagedConfigInit = b.HelmManagedConfigInit
	if b.PolicyVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 7)
		x.xxx_hidden_PolicyVersion = b.PolicyVersion
	}
	if b.SensorState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 7)
		x.xxx_hidden_SensorState = *b.SensorState
	}
	if b.RequestDeduperState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 7)
		x.xxx_hidden_RequestDeduperState = *b.RequestDeduperState
	}
	return m0
}

type CentralHello struct {
	state                       protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ClusterId        *string                `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId"`
	xxx_hidden_CertBundle       map[string]string      `protobuf:"bytes,2,rep,name=cert_bundle,json=certBundle" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_ManagedCentral   bool                   `protobuf:"varint,3,opt,name=managed_central,json=managedCentral"`
	xxx_hidden_CentralId        *string                `protobuf:"bytes,4,opt,name=central_id,json=centralId"`
	xxx_hidden_Capabilities     []string               `protobuf:"bytes,5,rep,name=capabilities"`
	xxx_hidden_SendDeduperState bool                   `protobuf:"varint,6,opt,name=send_deduper_state,json=sendDeduperState"`
	XXX_raceDetectHookData      protoimpl.RaceDetectHookData
	XXX_presence                [1]uint32
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *CentralHello) Reset() {
	*x = CentralHello{}
	mi := &file_internalapi_central_hello_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CentralHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CentralHello) ProtoMessage() {}

func (x *CentralHello) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_hello_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CentralHello) GetClusterId() string {
	if x != nil {
		if x.xxx_hidden_ClusterId != nil {
			return *x.xxx_hidden_ClusterId
		}
		return ""
	}
	return ""
}

func (x *CentralHello) GetCertBundle() map[string]string {
	if x != nil {
		return x.xxx_hidden_CertBundle
	}
	return nil
}

func (x *CentralHello) GetManagedCentral() bool {
	if x != nil {
		return x.xxx_hidden_ManagedCentral
	}
	return false
}

func (x *CentralHello) GetCentralId() string {
	if x != nil {
		if x.xxx_hidden_CentralId != nil {
			return *x.xxx_hidden_CentralId
		}
		return ""
	}
	return ""
}

func (x *CentralHello) GetCapabilities() []string {
	if x != nil {
		return x.xxx_hidden_Capabilities
	}
	return nil
}

func (x *CentralHello) GetSendDeduperState() bool {
	if x != nil {
		return x.xxx_hidden_SendDeduperState
	}
	return false
}

func (x *CentralHello) SetClusterId(v string) {
	x.xxx_hidden_ClusterId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *CentralHello) SetCertBundle(v map[string]string) {
	x.xxx_hidden_CertBundle = v
}

func (x *CentralHello) SetManagedCentral(v bool) {
	x.xxx_hidden_ManagedCentral = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *CentralHello) SetCentralId(v string) {
	x.xxx_hidden_CentralId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *CentralHello) SetCapabilities(v []string) {
	x.xxx_hidden_Capabilities = v
}

func (x *CentralHello) SetSendDeduperState(v bool) {
	x.xxx_hidden_SendDeduperState = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *CentralHello) HasClusterId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *CentralHello) HasManagedCentral() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *CentralHello) HasCentralId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *CentralHello) HasSendDeduperState() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *CentralHello) ClearClusterId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ClusterId = nil
}

func (x *CentralHello) ClearManagedCentral() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_ManagedCentral = false
}

func (x *CentralHello) ClearCentralId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_CentralId = nil
}

func (x *CentralHello) ClearSendDeduperState() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_SendDeduperState = false
}

type CentralHello_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ClusterId        *string
	CertBundle       map[string]string
	ManagedCentral   *bool
	CentralId        *string
	Capabilities     []string
	SendDeduperState *bool
}

func (b0 CentralHello_builder) Build() *CentralHello {
	m0 := &CentralHello{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ClusterId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_ClusterId = b.ClusterId
	}
	x.xxx_hidden_CertBundle = b.CertBundle
	if b.ManagedCentral != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_ManagedCentral = *b.ManagedCentral
	}
	if b.CentralId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_CentralId = b.CentralId
	}
	x.xxx_hidden_Capabilities = b.Capabilities
	if b.SendDeduperState != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_SendDeduperState = *b.SendDeduperState
	}
	return m0
}

var File_internalapi_central_hello_proto protoreflect.FileDescriptor

const file_internalapi_central_hello_proto_rawDesc = "" +
	"\n" +
	"\x1finternalapi/central/hello.proto\x12\acentral\x1a\x15storage/cluster.proto\x1a!google/protobuf/go_features.proto\"\xdb\x01\n" +
	"\x15HelmManagedConfigInit\x12E\n" +
	"\x0ecluster_config\x18\x01 \x01(\v2\x1e.storage.CompleteClusterConfigR\rclusterConfig\x12!\n" +
	"\fcluster_name\x18\x02 \x01(\tR\vclusterName\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\x123\n" +
	"\n" +
	"managed_by\x18\x05 \x01(\x0e2\x14.storage.ManagerTypeR\tmanagedByJ\x04\b\x04\x10\x05\"\xef\x03\n" +
	"\vSensorHello\x12%\n" +
	"\x0esensor_version\x18\x01 \x01(\tR\rsensorVersion\x12\"\n" +
	"\fcapabilities\x18\x02 \x03(\tR\fcapabilities\x12d\n" +
	"\x19deployment_identification\x18\x05 \x01(\v2'.storage.SensorDeploymentIdentificationR\x18deploymentIdentification\x12W\n" +
	"\x18helm_managed_config_init\x18\x03 \x01(\v2\x1e.central.HelmManagedConfigInitR\x15helmManagedConfigInit\x12%\n" +
	"\x0epolicy_version\x18\x04 \x01(\tR\rpolicyVersion\x12C\n" +
	"\fsensor_state\x18\x06 \x01(\x0e2 .central.SensorHello.SensorStateR\vsensorState\x122\n" +
	"\x15request_deduper_state\x18\a \x01(\bR\x13requestDeduperState\"6\n" +
	"\vSensorState\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSTARTUP\x10\x01\x12\r\n" +
	"\tRECONNECT\x10\x02\"\xce\x02\n" +
	"\fCentralHello\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12F\n" +
	"\vcert_bundle\x18\x02 \x03(\v2%.central.CentralHello.CertBundleEntryR\n" +
	"certBundle\x12'\n" +
	"\x0fmanaged_central\x18\x03 \x01(\bR\x0emanagedCentral\x12\x1d\n" +
	"\n" +
	"central_id\x18\x04 \x01(\tR\tcentralId\x12\"\n" +
	"\fcapabilities\x18\x05 \x03(\tR\fcapabilities\x12,\n" +
	"\x12send_deduper_state\x18\x06 \x01(\bR\x10sendDeduperState\x1a=\n" +
	"\x0fCertBundleEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B'Z\x1d./internalapi/central;central\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_internalapi_central_hello_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_internalapi_central_hello_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_internalapi_central_hello_proto_goTypes = []any{
	(SensorHello_SensorState)(0),                   // 0: central.SensorHello.SensorState
	(*HelmManagedConfigInit)(nil),                  // 1: central.HelmManagedConfigInit
	(*SensorHello)(nil),                            // 2: central.SensorHello
	(*CentralHello)(nil),                           // 3: central.CentralHello
	nil,                                            // 4: central.CentralHello.CertBundleEntry
	(*storage.CompleteClusterConfig)(nil),          // 5: storage.CompleteClusterConfig
	(storage.ManagerType)(0),                       // 6: storage.ManagerType
	(*storage.SensorDeploymentIdentification)(nil), // 7: storage.SensorDeploymentIdentification
}
var file_internalapi_central_hello_proto_depIdxs = []int32{
	5, // 0: central.HelmManagedConfigInit.cluster_config:type_name -> storage.CompleteClusterConfig
	6, // 1: central.HelmManagedConfigInit.managed_by:type_name -> storage.ManagerType
	7, // 2: central.SensorHello.deployment_identification:type_name -> storage.SensorDeploymentIdentification
	1, // 3: central.SensorHello.helm_managed_config_init:type_name -> central.HelmManagedConfigInit
	0, // 4: central.SensorHello.sensor_state:type_name -> central.SensorHello.SensorState
	4, // 5: central.CentralHello.cert_bundle:type_name -> central.CentralHello.CertBundleEntry
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_internalapi_central_hello_proto_init() }
func file_internalapi_central_hello_proto_init() {
	if File_internalapi_central_hello_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internalapi_central_hello_proto_rawDesc), len(file_internalapi_central_hello_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internalapi_central_hello_proto_goTypes,
		DependencyIndexes: file_internalapi_central_hello_proto_depIdxs,
		EnumInfos:         file_internalapi_central_hello_proto_enumTypes,
		MessageInfos:      file_internalapi_central_hello_proto_msgTypes,
	}.Build()
	File_internalapi_central_hello_proto = out.File
	file_internalapi_central_hello_proto_goTypes = nil
	file_internalapi_central_hello_proto_depIdxs = nil
}
