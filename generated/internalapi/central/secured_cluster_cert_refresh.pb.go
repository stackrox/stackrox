// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: internalapi/central/secured_cluster_cert_refresh.proto

//go:build !protoopaque

package central

import (
	storage "github.com/stackrox/rox/generated/storage"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SecuredClusterCertsIssueError struct {
	state         protoimpl.MessageState `protogen:"hybrid.v1"`
	Message       *string                `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecuredClusterCertsIssueError) Reset() {
	*x = SecuredClusterCertsIssueError{}
	mi := &file_internalapi_central_secured_cluster_cert_refresh_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecuredClusterCertsIssueError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecuredClusterCertsIssueError) ProtoMessage() {}

func (x *SecuredClusterCertsIssueError) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_secured_cluster_cert_refresh_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SecuredClusterCertsIssueError) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *SecuredClusterCertsIssueError) SetMessage(v string) {
	x.Message = &v
}

func (x *SecuredClusterCertsIssueError) HasMessage() bool {
	if x == nil {
		return false
	}
	return x.Message != nil
}

func (x *SecuredClusterCertsIssueError) ClearMessage() {
	x.Message = nil
}

type SecuredClusterCertsIssueError_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Message *string
}

func (b0 SecuredClusterCertsIssueError_builder) Build() *SecuredClusterCertsIssueError {
	m0 := &SecuredClusterCertsIssueError{}
	b, x := &b0, m0
	_, _ = b, x
	x.Message = b.Message
	return m0
}

type IssueSecuredClusterCertsRequest struct {
	state     protoimpl.MessageState `protogen:"hybrid.v1"`
	RequestId *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	// Optional: hex-encoded SHA-512_256 fingerprint of the Sensor's currently trusted CA
	CaFingerprint *string `protobuf:"bytes,2,opt,name=ca_fingerprint,json=caFingerprint" json:"ca_fingerprint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssueSecuredClusterCertsRequest) Reset() {
	*x = IssueSecuredClusterCertsRequest{}
	mi := &file_internalapi_central_secured_cluster_cert_refresh_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueSecuredClusterCertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueSecuredClusterCertsRequest) ProtoMessage() {}

func (x *IssueSecuredClusterCertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_secured_cluster_cert_refresh_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IssueSecuredClusterCertsRequest) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *IssueSecuredClusterCertsRequest) GetCaFingerprint() string {
	if x != nil && x.CaFingerprint != nil {
		return *x.CaFingerprint
	}
	return ""
}

func (x *IssueSecuredClusterCertsRequest) SetRequestId(v string) {
	x.RequestId = &v
}

func (x *IssueSecuredClusterCertsRequest) SetCaFingerprint(v string) {
	x.CaFingerprint = &v
}

func (x *IssueSecuredClusterCertsRequest) HasRequestId() bool {
	if x == nil {
		return false
	}
	return x.RequestId != nil
}

func (x *IssueSecuredClusterCertsRequest) HasCaFingerprint() bool {
	if x == nil {
		return false
	}
	return x.CaFingerprint != nil
}

func (x *IssueSecuredClusterCertsRequest) ClearRequestId() {
	x.RequestId = nil
}

func (x *IssueSecuredClusterCertsRequest) ClearCaFingerprint() {
	x.CaFingerprint = nil
}

type IssueSecuredClusterCertsRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestId *string
	// Optional: hex-encoded SHA-512_256 fingerprint of the Sensor's currently trusted CA
	CaFingerprint *string
}

func (b0 IssueSecuredClusterCertsRequest_builder) Build() *IssueSecuredClusterCertsRequest {
	m0 := &IssueSecuredClusterCertsRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.RequestId = b.RequestId
	x.CaFingerprint = b.CaFingerprint
	return m0
}

type IssueSecuredClusterCertsResponse struct {
	state     protoimpl.MessageState `protogen:"hybrid.v1"`
	RequestId *string                `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	// Types that are valid to be assigned to Response:
	//
	//	*IssueSecuredClusterCertsResponse_Certificates
	//	*IssueSecuredClusterCertsResponse_Error
	Response      isIssueSecuredClusterCertsResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssueSecuredClusterCertsResponse) Reset() {
	*x = IssueSecuredClusterCertsResponse{}
	mi := &file_internalapi_central_secured_cluster_cert_refresh_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueSecuredClusterCertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueSecuredClusterCertsResponse) ProtoMessage() {}

func (x *IssueSecuredClusterCertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_secured_cluster_cert_refresh_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *IssueSecuredClusterCertsResponse) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *IssueSecuredClusterCertsResponse) GetResponse() isIssueSecuredClusterCertsResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *IssueSecuredClusterCertsResponse) GetCertificates() *storage.TypedServiceCertificateSet {
	if x != nil {
		if x, ok := x.Response.(*IssueSecuredClusterCertsResponse_Certificates); ok {
			return x.Certificates
		}
	}
	return nil
}

func (x *IssueSecuredClusterCertsResponse) GetError() *SecuredClusterCertsIssueError {
	if x != nil {
		if x, ok := x.Response.(*IssueSecuredClusterCertsResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *IssueSecuredClusterCertsResponse) SetRequestId(v string) {
	x.RequestId = &v
}

func (x *IssueSecuredClusterCertsResponse) SetCertificates(v *storage.TypedServiceCertificateSet) {
	if v == nil {
		x.Response = nil
		return
	}
	x.Response = &IssueSecuredClusterCertsResponse_Certificates{v}
}

func (x *IssueSecuredClusterCertsResponse) SetError(v *SecuredClusterCertsIssueError) {
	if v == nil {
		x.Response = nil
		return
	}
	x.Response = &IssueSecuredClusterCertsResponse_Error{v}
}

func (x *IssueSecuredClusterCertsResponse) HasRequestId() bool {
	if x == nil {
		return false
	}
	return x.RequestId != nil
}

func (x *IssueSecuredClusterCertsResponse) HasResponse() bool {
	if x == nil {
		return false
	}
	return x.Response != nil
}

func (x *IssueSecuredClusterCertsResponse) HasCertificates() bool {
	if x == nil {
		return false
	}
	_, ok := x.Response.(*IssueSecuredClusterCertsResponse_Certificates)
	return ok
}

func (x *IssueSecuredClusterCertsResponse) HasError() bool {
	if x == nil {
		return false
	}
	_, ok := x.Response.(*IssueSecuredClusterCertsResponse_Error)
	return ok
}

func (x *IssueSecuredClusterCertsResponse) ClearRequestId() {
	x.RequestId = nil
}

func (x *IssueSecuredClusterCertsResponse) ClearResponse() {
	x.Response = nil
}

func (x *IssueSecuredClusterCertsResponse) ClearCertificates() {
	if _, ok := x.Response.(*IssueSecuredClusterCertsResponse_Certificates); ok {
		x.Response = nil
	}
}

func (x *IssueSecuredClusterCertsResponse) ClearError() {
	if _, ok := x.Response.(*IssueSecuredClusterCertsResponse_Error); ok {
		x.Response = nil
	}
}

const IssueSecuredClusterCertsResponse_Response_not_set_case case_IssueSecuredClusterCertsResponse_Response = 0
const IssueSecuredClusterCertsResponse_Certificates_case case_IssueSecuredClusterCertsResponse_Response = 2
const IssueSecuredClusterCertsResponse_Error_case case_IssueSecuredClusterCertsResponse_Response = 3

func (x *IssueSecuredClusterCertsResponse) WhichResponse() case_IssueSecuredClusterCertsResponse_Response {
	if x == nil {
		return IssueSecuredClusterCertsResponse_Response_not_set_case
	}
	switch x.Response.(type) {
	case *IssueSecuredClusterCertsResponse_Certificates:
		return IssueSecuredClusterCertsResponse_Certificates_case
	case *IssueSecuredClusterCertsResponse_Error:
		return IssueSecuredClusterCertsResponse_Error_case
	default:
		return IssueSecuredClusterCertsResponse_Response_not_set_case
	}
}

type IssueSecuredClusterCertsResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RequestId *string
	// Fields of oneof Response:
	Certificates *storage.TypedServiceCertificateSet
	Error        *SecuredClusterCertsIssueError
	// -- end of Response
}

func (b0 IssueSecuredClusterCertsResponse_builder) Build() *IssueSecuredClusterCertsResponse {
	m0 := &IssueSecuredClusterCertsResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.RequestId = b.RequestId
	if b.Certificates != nil {
		x.Response = &IssueSecuredClusterCertsResponse_Certificates{b.Certificates}
	}
	if b.Error != nil {
		x.Response = &IssueSecuredClusterCertsResponse_Error{b.Error}
	}
	return m0
}

type case_IssueSecuredClusterCertsResponse_Response protoreflect.FieldNumber

func (x case_IssueSecuredClusterCertsResponse_Response) String() string {
	md := file_internalapi_central_secured_cluster_cert_refresh_proto_msgTypes[2].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isIssueSecuredClusterCertsResponse_Response interface {
	isIssueSecuredClusterCertsResponse_Response()
}

type IssueSecuredClusterCertsResponse_Certificates struct {
	Certificates *storage.TypedServiceCertificateSet `protobuf:"bytes,2,opt,name=certificates,oneof"`
}

type IssueSecuredClusterCertsResponse_Error struct {
	Error *SecuredClusterCertsIssueError `protobuf:"bytes,3,opt,name=error,oneof"`
}

func (*IssueSecuredClusterCertsResponse_Certificates) isIssueSecuredClusterCertsResponse_Response() {}

func (*IssueSecuredClusterCertsResponse_Error) isIssueSecuredClusterCertsResponse_Response() {}

var File_internalapi_central_secured_cluster_cert_refresh_proto protoreflect.FileDescriptor

const file_internalapi_central_secured_cluster_cert_refresh_proto_rawDesc = "" +
	"\n" +
	"6internalapi/central/secured_cluster_cert_refresh.proto\x12\acentral\x1a\x1estorage/service_identity.proto\x1a!google/protobuf/go_features.proto\"9\n" +
	"\x1dSecuredClusterCertsIssueError\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"g\n" +
	"\x1fIssueSecuredClusterCertsRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12%\n" +
	"\x0eca_fingerprint\x18\x02 \x01(\tR\rcaFingerprint\"\xd8\x01\n" +
	" IssueSecuredClusterCertsResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12I\n" +
	"\fcertificates\x18\x02 \x01(\v2#.storage.TypedServiceCertificateSetH\x00R\fcertificates\x12>\n" +
	"\x05error\x18\x03 \x01(\v2&.central.SecuredClusterCertsIssueErrorH\x00R\x05errorB\n" +
	"\n" +
	"\bresponseB'Z\x1d./internalapi/central;central\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_internalapi_central_secured_cluster_cert_refresh_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_internalapi_central_secured_cluster_cert_refresh_proto_goTypes = []any{
	(*SecuredClusterCertsIssueError)(nil),      // 0: central.SecuredClusterCertsIssueError
	(*IssueSecuredClusterCertsRequest)(nil),    // 1: central.IssueSecuredClusterCertsRequest
	(*IssueSecuredClusterCertsResponse)(nil),   // 2: central.IssueSecuredClusterCertsResponse
	(*storage.TypedServiceCertificateSet)(nil), // 3: storage.TypedServiceCertificateSet
}
var file_internalapi_central_secured_cluster_cert_refresh_proto_depIdxs = []int32{
	3, // 0: central.IssueSecuredClusterCertsResponse.certificates:type_name -> storage.TypedServiceCertificateSet
	0, // 1: central.IssueSecuredClusterCertsResponse.error:type_name -> central.SecuredClusterCertsIssueError
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_internalapi_central_secured_cluster_cert_refresh_proto_init() }
func file_internalapi_central_secured_cluster_cert_refresh_proto_init() {
	if File_internalapi_central_secured_cluster_cert_refresh_proto != nil {
		return
	}
	file_internalapi_central_secured_cluster_cert_refresh_proto_msgTypes[2].OneofWrappers = []any{
		(*IssueSecuredClusterCertsResponse_Certificates)(nil),
		(*IssueSecuredClusterCertsResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internalapi_central_secured_cluster_cert_refresh_proto_rawDesc), len(file_internalapi_central_secured_cluster_cert_refresh_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internalapi_central_secured_cluster_cert_refresh_proto_goTypes,
		DependencyIndexes: file_internalapi_central_secured_cluster_cert_refresh_proto_depIdxs,
		MessageInfos:      file_internalapi_central_secured_cluster_cert_refresh_proto_msgTypes,
	}.Build()
	File_internalapi_central_secured_cluster_cert_refresh_proto = out.File
	file_internalapi_central_secured_cluster_cert_refresh_proto_goTypes = nil
	file_internalapi_central_secured_cluster_cert_refresh_proto_depIdxs = nil
}
