// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: internalapi/central/sensor_events.proto

package central

import (
	compliance "github.com/stackrox/rox/generated/internalapi/compliance"
	v4 "github.com/stackrox/rox/generated/internalapi/scanner/v4"
	v1 "github.com/stackrox/rox/generated/internalapi/virtualmachine/v1"
	storage "github.com/stackrox/rox/generated/storage"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResourceAction int32

const (
	ResourceAction_UNSET_ACTION_RESOURCE ResourceAction = 0
	ResourceAction_CREATE_RESOURCE       ResourceAction = 1
	ResourceAction_REMOVE_RESOURCE       ResourceAction = 2
	ResourceAction_UPDATE_RESOURCE       ResourceAction = 3
	ResourceAction_SYNC_RESOURCE         ResourceAction = 4
)

// Enum value maps for ResourceAction.
var (
	ResourceAction_name = map[int32]string{
		0: "UNSET_ACTION_RESOURCE",
		1: "CREATE_RESOURCE",
		2: "REMOVE_RESOURCE",
		3: "UPDATE_RESOURCE",
		4: "SYNC_RESOURCE",
	}
	ResourceAction_value = map[string]int32{
		"UNSET_ACTION_RESOURCE": 0,
		"CREATE_RESOURCE":       1,
		"REMOVE_RESOURCE":       2,
		"UPDATE_RESOURCE":       3,
		"SYNC_RESOURCE":         4,
	}
)

func (x ResourceAction) Enum() *ResourceAction {
	p := new(ResourceAction)
	*p = x
	return p
}

func (x ResourceAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceAction) Descriptor() protoreflect.EnumDescriptor {
	return file_internalapi_central_sensor_events_proto_enumTypes[0].Descriptor()
}

func (ResourceAction) Type() protoreflect.EnumType {
	return &file_internalapi_central_sensor_events_proto_enumTypes[0]
}

func (x ResourceAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type AlertResults_Source int32

const (
	AlertResults_DEPLOYMENT_EVENT AlertResults_Source = 0
	AlertResults_AUDIT_EVENT      AlertResults_Source = 1
)

// Enum value maps for AlertResults_Source.
var (
	AlertResults_Source_name = map[int32]string{
		0: "DEPLOYMENT_EVENT",
		1: "AUDIT_EVENT",
	}
	AlertResults_Source_value = map[string]int32{
		"DEPLOYMENT_EVENT": 0,
		"AUDIT_EVENT":      1,
	}
)

func (x AlertResults_Source) Enum() *AlertResults_Source {
	p := new(AlertResults_Source)
	*p = x
	return p
}

func (x AlertResults_Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertResults_Source) Descriptor() protoreflect.EnumDescriptor {
	return file_internalapi_central_sensor_events_proto_enumTypes[1].Descriptor()
}

func (AlertResults_Source) Type() protoreflect.EnumType {
	return &file_internalapi_central_sensor_events_proto_enumTypes[1]
}

func (x AlertResults_Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ReprocessDeploymentRisk struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DeploymentId *string                `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ReprocessDeploymentRisk) Reset() {
	*x = ReprocessDeploymentRisk{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReprocessDeploymentRisk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReprocessDeploymentRisk) ProtoMessage() {}

func (x *ReprocessDeploymentRisk) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReprocessDeploymentRisk) GetDeploymentId() string {
	if x != nil {
		if x.xxx_hidden_DeploymentId != nil {
			return *x.xxx_hidden_DeploymentId
		}
		return ""
	}
	return ""
}

func (x *ReprocessDeploymentRisk) SetDeploymentId(v string) {
	x.xxx_hidden_DeploymentId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ReprocessDeploymentRisk) HasDeploymentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ReprocessDeploymentRisk) ClearDeploymentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DeploymentId = nil
}

type ReprocessDeploymentRisk_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DeploymentId *string
}

func (b0 ReprocessDeploymentRisk_builder) Build() *ReprocessDeploymentRisk {
	m0 := &ReprocessDeploymentRisk{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DeploymentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_DeploymentId = b.DeploymentId
	}
	return m0
}

type AlertResults struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DeploymentId *string                `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId"`
	xxx_hidden_Alerts       *[]*storage.Alert      `protobuf:"bytes,2,rep,name=alerts"`
	xxx_hidden_Stage        storage.LifecycleStage `protobuf:"varint,3,opt,name=stage,enum=storage.LifecycleStage"`
	xxx_hidden_Source       AlertResults_Source    `protobuf:"varint,4,opt,name=source,enum=central.AlertResults_Source"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AlertResults) Reset() {
	*x = AlertResults{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlertResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertResults) ProtoMessage() {}

func (x *AlertResults) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AlertResults) GetDeploymentId() string {
	if x != nil {
		if x.xxx_hidden_DeploymentId != nil {
			return *x.xxx_hidden_DeploymentId
		}
		return ""
	}
	return ""
}

func (x *AlertResults) GetAlerts() []*storage.Alert {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_Alerts) {
				protoimpl.X.UnmarshalField(x, 2)
			}
			var rv *[]*storage.Alert
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Alerts), protoimpl.Pointer(&rv))
			return *rv
		}
	}
	return nil
}

func (x *AlertResults) GetStage() storage.LifecycleStage {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_Stage
		}
	}
	return storage.LifecycleStage(0)
}

func (x *AlertResults) GetSource() AlertResults_Source {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_Source
		}
	}
	return AlertResults_DEPLOYMENT_EVENT
}

func (x *AlertResults) SetDeploymentId(v string) {
	x.xxx_hidden_DeploymentId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *AlertResults) SetAlerts(v []*storage.Alert) {
	var sv *[]*storage.Alert
	protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Alerts), protoimpl.Pointer(&sv))
	if sv == nil {
		sv = &[]*storage.Alert{}
		protoimpl.X.AtomicInitializePointer(protoimpl.Pointer(&x.xxx_hidden_Alerts), protoimpl.Pointer(&sv))
	}
	*sv = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *AlertResults) SetStage(v storage.LifecycleStage) {
	x.xxx_hidden_Stage = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *AlertResults) SetSource(v AlertResults_Source) {
	x.xxx_hidden_Source = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *AlertResults) HasDeploymentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AlertResults) HasStage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AlertResults) HasSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AlertResults) ClearDeploymentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DeploymentId = nil
}

func (x *AlertResults) ClearStage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Stage = storage.LifecycleStage_DEPLOY
}

func (x *AlertResults) ClearSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Source = AlertResults_DEPLOYMENT_EVENT
}

type AlertResults_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Only relevant if source == DEPLOYMENT.
	DeploymentId *string
	Alerts       []*storage.Alert
	Stage        *storage.LifecycleStage
	Source       *AlertResults_Source
}

func (b0 AlertResults_builder) Build() *AlertResults {
	m0 := &AlertResults{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DeploymentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_DeploymentId = b.DeploymentId
	}
	if b.Alerts != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Alerts = &b.Alerts
	}
	if b.Stage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Stage = *b.Stage
	}
	if b.Source != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Source = *b.Source
	}
	return m0
}

type Timing struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Dispatcher  *string                `protobuf:"bytes,1,opt,name=dispatcher"`
	xxx_hidden_Resource    *string                `protobuf:"bytes,2,opt,name=resource"`
	xxx_hidden_Nanos       int64                  `protobuf:"varint,3,opt,name=nanos"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Timing) Reset() {
	*x = Timing{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timing) ProtoMessage() {}

func (x *Timing) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Timing) GetDispatcher() string {
	if x != nil {
		if x.xxx_hidden_Dispatcher != nil {
			return *x.xxx_hidden_Dispatcher
		}
		return ""
	}
	return ""
}

func (x *Timing) GetResource() string {
	if x != nil {
		if x.xxx_hidden_Resource != nil {
			return *x.xxx_hidden_Resource
		}
		return ""
	}
	return ""
}

func (x *Timing) GetNanos() int64 {
	if x != nil {
		return x.xxx_hidden_Nanos
	}
	return 0
}

func (x *Timing) SetDispatcher(v string) {
	x.xxx_hidden_Dispatcher = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *Timing) SetResource(v string) {
	x.xxx_hidden_Resource = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *Timing) SetNanos(v int64) {
	x.xxx_hidden_Nanos = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *Timing) HasDispatcher() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Timing) HasResource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Timing) HasNanos() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *Timing) ClearDispatcher() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Dispatcher = nil
}

func (x *Timing) ClearResource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Resource = nil
}

func (x *Timing) ClearNanos() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Nanos = 0
}

type Timing_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Dispatcher *string
	Resource   *string
	Nanos      *int64
}

func (b0 Timing_builder) Build() *Timing {
	m0 := &Timing{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Dispatcher != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Dispatcher = b.Dispatcher
	}
	if b.Resource != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Resource = b.Resource
	}
	if b.Nanos != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_Nanos = *b.Nanos
	}
	return m0
}

// Next tag: 37.
type SensorEvent struct {
	state                      protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_Id              *string                       `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Action          ResourceAction                `protobuf:"varint,2,opt,name=action,enum=central.ResourceAction"`
	xxx_hidden_Timing          *Timing                       `protobuf:"bytes,3,opt,name=timing"`
	xxx_hidden_SensorHashOneof isSensorEvent_SensorHashOneof `protobuf_oneof:"sensor_hash_oneof"`
	xxx_hidden_Resource        isSensorEvent_Resource        `protobuf_oneof:"resource"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SensorEvent) Reset() {
	*x = SensorEvent{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorEvent) ProtoMessage() {}

func (x *SensorEvent) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SensorEvent) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *SensorEvent) GetAction() ResourceAction {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Action
		}
	}
	return ResourceAction_UNSET_ACTION_RESOURCE
}

func (x *SensorEvent) GetTiming() *Timing {
	if x != nil {
		return x.xxx_hidden_Timing
	}
	return nil
}

func (x *SensorEvent) GetSensorHash() uint64 {
	if x != nil {
		if x, ok := x.xxx_hidden_SensorHashOneof.(*sensorEvent_SensorHash); ok {
			return x.SensorHash
		}
	}
	return 0
}

func (x *SensorEvent) GetNetworkPolicy() *storage.NetworkPolicy {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_NetworkPolicy); ok {
			return x.NetworkPolicy
		}
	}
	return nil
}

func (x *SensorEvent) GetDeployment() *storage.Deployment {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_Deployment); ok {
			return x.Deployment
		}
	}
	return nil
}

func (x *SensorEvent) GetPod() *storage.Pod {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_Pod); ok {
			return x.Pod
		}
	}
	return nil
}

func (x *SensorEvent) GetNamespace() *storage.NamespaceMetadata {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_Namespace); ok {
			return x.Namespace
		}
	}
	return nil
}

func (x *SensorEvent) GetSecret() *storage.Secret {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_Secret); ok {
			return x.Secret
		}
	}
	return nil
}

func (x *SensorEvent) GetNode() *storage.Node {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_Node); ok {
			return x.Node
		}
	}
	return nil
}

func (x *SensorEvent) GetNodeInventory() *storage.NodeInventory {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_NodeInventory); ok {
			return x.NodeInventory
		}
	}
	return nil
}

func (x *SensorEvent) GetIndexReport() *v4.IndexReport {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_IndexReport); ok {
			return x.IndexReport
		}
	}
	return nil
}

func (x *SensorEvent) GetServiceAccount() *storage.ServiceAccount {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ServiceAccount); ok {
			return x.ServiceAccount
		}
	}
	return nil
}

func (x *SensorEvent) GetRole() *storage.K8SRole {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_Role); ok {
			return x.Role
		}
	}
	return nil
}

func (x *SensorEvent) GetBinding() *storage.K8SRoleBinding {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_Binding); ok {
			return x.Binding
		}
	}
	return nil
}

func (x *SensorEvent) GetProcessIndicator() *storage.ProcessIndicator {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ProcessIndicator); ok {
			return x.ProcessIndicator
		}
	}
	return nil
}

func (x *SensorEvent) GetProviderMetadata() *storage.ProviderMetadata {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ProviderMetadata); ok {
			return x.ProviderMetadata
		}
	}
	return nil
}

func (x *SensorEvent) GetSynced() *SensorEvent_ResourcesSynced {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_Synced); ok {
			return x.Synced
		}
	}
	return nil
}

func (x *SensorEvent) GetOrchestratorMetadata() *storage.OrchestratorMetadata {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_OrchestratorMetadata); ok {
			return x.OrchestratorMetadata
		}
	}
	return nil
}

func (x *SensorEvent) GetImageIntegration() *storage.ImageIntegration {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ImageIntegration); ok {
			return x.ImageIntegration
		}
	}
	return nil
}

func (x *SensorEvent) GetReprocessDeployment() *ReprocessDeploymentRisk {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ReprocessDeployment); ok {
			return x.ReprocessDeployment
		}
	}
	return nil
}

func (x *SensorEvent) GetAlertResults() *AlertResults {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_AlertResults); ok {
			return x.AlertResults
		}
	}
	return nil
}

func (x *SensorEvent) GetComplianceOperatorResult() *storage.ComplianceOperatorCheckResult {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorResult); ok {
			return x.ComplianceOperatorResult
		}
	}
	return nil
}

func (x *SensorEvent) GetComplianceOperatorProfile() *storage.ComplianceOperatorProfile {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorProfile); ok {
			return x.ComplianceOperatorProfile
		}
	}
	return nil
}

func (x *SensorEvent) GetComplianceOperatorRule() *storage.ComplianceOperatorRule {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorRule); ok {
			return x.ComplianceOperatorRule
		}
	}
	return nil
}

func (x *SensorEvent) GetComplianceOperatorScanSettingBinding() *storage.ComplianceOperatorScanSettingBinding {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorScanSettingBinding); ok {
			return x.ComplianceOperatorScanSettingBinding
		}
	}
	return nil
}

func (x *SensorEvent) GetComplianceOperatorScan() *storage.ComplianceOperatorScan {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorScan); ok {
			return x.ComplianceOperatorScan
		}
	}
	return nil
}

func (x *SensorEvent) GetVirtualMachineIndexReport() *v1.IndexReportEvent {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_VirtualMachineIndexReport); ok {
			return x.VirtualMachineIndexReport
		}
	}
	return nil
}

func (x *SensorEvent) GetVirtualMachine() *v1.VirtualMachine {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_VirtualMachine); ok {
			return x.VirtualMachine
		}
	}
	return nil
}

func (x *SensorEvent) GetComplianceOperatorResultV2() *ComplianceOperatorCheckResultV2 {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorResultV2); ok {
			return x.ComplianceOperatorResultV2
		}
	}
	return nil
}

func (x *SensorEvent) GetComplianceOperatorProfileV2() *ComplianceOperatorProfileV2 {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorProfileV2); ok {
			return x.ComplianceOperatorProfileV2
		}
	}
	return nil
}

func (x *SensorEvent) GetComplianceOperatorRuleV2() *ComplianceOperatorRuleV2 {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorRuleV2); ok {
			return x.ComplianceOperatorRuleV2
		}
	}
	return nil
}

func (x *SensorEvent) GetComplianceOperatorScanV2() *ComplianceOperatorScanV2 {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorScanV2); ok {
			return x.ComplianceOperatorScanV2
		}
	}
	return nil
}

func (x *SensorEvent) GetComplianceOperatorScanSettingBindingV2() *ComplianceOperatorScanSettingBindingV2 {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorScanSettingBindingV2); ok {
			return x.ComplianceOperatorScanSettingBindingV2
		}
	}
	return nil
}

func (x *SensorEvent) GetComplianceOperatorSuiteV2() *ComplianceOperatorSuiteV2 {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorSuiteV2); ok {
			return x.ComplianceOperatorSuiteV2
		}
	}
	return nil
}

func (x *SensorEvent) GetComplianceOperatorRemediationV2() *ComplianceOperatorRemediationV2 {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorRemediationV2); ok {
			return x.ComplianceOperatorRemediationV2
		}
	}
	return nil
}

func (x *SensorEvent) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *SensorEvent) SetAction(v ResourceAction) {
	x.xxx_hidden_Action = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *SensorEvent) SetTiming(v *Timing) {
	x.xxx_hidden_Timing = v
}

func (x *SensorEvent) SetSensorHash(v uint64) {
	x.xxx_hidden_SensorHashOneof = &sensorEvent_SensorHash{v}
}

func (x *SensorEvent) SetNetworkPolicy(v *storage.NetworkPolicy) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_NetworkPolicy{v}
}

func (x *SensorEvent) SetDeployment(v *storage.Deployment) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_Deployment{v}
}

func (x *SensorEvent) SetPod(v *storage.Pod) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_Pod{v}
}

func (x *SensorEvent) SetNamespace(v *storage.NamespaceMetadata) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_Namespace{v}
}

func (x *SensorEvent) SetSecret(v *storage.Secret) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_Secret{v}
}

func (x *SensorEvent) SetNode(v *storage.Node) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_Node{v}
}

func (x *SensorEvent) SetNodeInventory(v *storage.NodeInventory) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_NodeInventory{v}
}

func (x *SensorEvent) SetIndexReport(v *v4.IndexReport) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_IndexReport{v}
}

func (x *SensorEvent) SetServiceAccount(v *storage.ServiceAccount) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ServiceAccount{v}
}

func (x *SensorEvent) SetRole(v *storage.K8SRole) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_Role{v}
}

func (x *SensorEvent) SetBinding(v *storage.K8SRoleBinding) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_Binding{v}
}

func (x *SensorEvent) SetProcessIndicator(v *storage.ProcessIndicator) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ProcessIndicator{v}
}

func (x *SensorEvent) SetProviderMetadata(v *storage.ProviderMetadata) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ProviderMetadata{v}
}

func (x *SensorEvent) SetSynced(v *SensorEvent_ResourcesSynced) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_Synced{v}
}

func (x *SensorEvent) SetOrchestratorMetadata(v *storage.OrchestratorMetadata) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_OrchestratorMetadata{v}
}

func (x *SensorEvent) SetImageIntegration(v *storage.ImageIntegration) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ImageIntegration{v}
}

func (x *SensorEvent) SetReprocessDeployment(v *ReprocessDeploymentRisk) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ReprocessDeployment{v}
}

func (x *SensorEvent) SetAlertResults(v *AlertResults) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_AlertResults{v}
}

func (x *SensorEvent) SetComplianceOperatorResult(v *storage.ComplianceOperatorCheckResult) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorResult{v}
}

func (x *SensorEvent) SetComplianceOperatorProfile(v *storage.ComplianceOperatorProfile) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorProfile{v}
}

func (x *SensorEvent) SetComplianceOperatorRule(v *storage.ComplianceOperatorRule) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorRule{v}
}

func (x *SensorEvent) SetComplianceOperatorScanSettingBinding(v *storage.ComplianceOperatorScanSettingBinding) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorScanSettingBinding{v}
}

func (x *SensorEvent) SetComplianceOperatorScan(v *storage.ComplianceOperatorScan) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorScan{v}
}

func (x *SensorEvent) SetVirtualMachineIndexReport(v *v1.IndexReportEvent) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_VirtualMachineIndexReport{v}
}

func (x *SensorEvent) SetVirtualMachine(v *v1.VirtualMachine) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_VirtualMachine{v}
}

func (x *SensorEvent) SetComplianceOperatorResultV2(v *ComplianceOperatorCheckResultV2) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorResultV2{v}
}

func (x *SensorEvent) SetComplianceOperatorProfileV2(v *ComplianceOperatorProfileV2) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorProfileV2{v}
}

func (x *SensorEvent) SetComplianceOperatorRuleV2(v *ComplianceOperatorRuleV2) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorRuleV2{v}
}

func (x *SensorEvent) SetComplianceOperatorScanV2(v *ComplianceOperatorScanV2) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorScanV2{v}
}

func (x *SensorEvent) SetComplianceOperatorScanSettingBindingV2(v *ComplianceOperatorScanSettingBindingV2) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorScanSettingBindingV2{v}
}

func (x *SensorEvent) SetComplianceOperatorSuiteV2(v *ComplianceOperatorSuiteV2) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorSuiteV2{v}
}

func (x *SensorEvent) SetComplianceOperatorRemediationV2(v *ComplianceOperatorRemediationV2) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorRemediationV2{v}
}

func (x *SensorEvent) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SensorEvent) HasAction() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *SensorEvent) HasTiming() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timing != nil
}

func (x *SensorEvent) HasSensorHashOneof() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_SensorHashOneof != nil
}

func (x *SensorEvent) HasSensorHash() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_SensorHashOneof.(*sensorEvent_SensorHash)
	return ok
}

func (x *SensorEvent) HasResource() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Resource != nil
}

func (x *SensorEvent) HasNetworkPolicy() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_NetworkPolicy)
	return ok
}

func (x *SensorEvent) HasDeployment() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_Deployment)
	return ok
}

func (x *SensorEvent) HasPod() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_Pod)
	return ok
}

func (x *SensorEvent) HasNamespace() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_Namespace)
	return ok
}

func (x *SensorEvent) HasSecret() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_Secret)
	return ok
}

func (x *SensorEvent) HasNode() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_Node)
	return ok
}

func (x *SensorEvent) HasNodeInventory() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_NodeInventory)
	return ok
}

func (x *SensorEvent) HasIndexReport() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_IndexReport)
	return ok
}

func (x *SensorEvent) HasServiceAccount() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ServiceAccount)
	return ok
}

func (x *SensorEvent) HasRole() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_Role)
	return ok
}

func (x *SensorEvent) HasBinding() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_Binding)
	return ok
}

func (x *SensorEvent) HasProcessIndicator() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ProcessIndicator)
	return ok
}

func (x *SensorEvent) HasProviderMetadata() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ProviderMetadata)
	return ok
}

func (x *SensorEvent) HasSynced() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_Synced)
	return ok
}

func (x *SensorEvent) HasOrchestratorMetadata() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_OrchestratorMetadata)
	return ok
}

func (x *SensorEvent) HasImageIntegration() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ImageIntegration)
	return ok
}

func (x *SensorEvent) HasReprocessDeployment() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ReprocessDeployment)
	return ok
}

func (x *SensorEvent) HasAlertResults() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_AlertResults)
	return ok
}

func (x *SensorEvent) HasComplianceOperatorResult() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorResult)
	return ok
}

func (x *SensorEvent) HasComplianceOperatorProfile() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorProfile)
	return ok
}

func (x *SensorEvent) HasComplianceOperatorRule() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorRule)
	return ok
}

func (x *SensorEvent) HasComplianceOperatorScanSettingBinding() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorScanSettingBinding)
	return ok
}

func (x *SensorEvent) HasComplianceOperatorScan() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorScan)
	return ok
}

func (x *SensorEvent) HasVirtualMachineIndexReport() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_VirtualMachineIndexReport)
	return ok
}

func (x *SensorEvent) HasVirtualMachine() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_VirtualMachine)
	return ok
}

func (x *SensorEvent) HasComplianceOperatorResultV2() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorResultV2)
	return ok
}

func (x *SensorEvent) HasComplianceOperatorProfileV2() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorProfileV2)
	return ok
}

func (x *SensorEvent) HasComplianceOperatorRuleV2() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorRuleV2)
	return ok
}

func (x *SensorEvent) HasComplianceOperatorScanV2() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorScanV2)
	return ok
}

func (x *SensorEvent) HasComplianceOperatorScanSettingBindingV2() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorScanSettingBindingV2)
	return ok
}

func (x *SensorEvent) HasComplianceOperatorSuiteV2() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorSuiteV2)
	return ok
}

func (x *SensorEvent) HasComplianceOperatorRemediationV2() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorRemediationV2)
	return ok
}

func (x *SensorEvent) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *SensorEvent) ClearAction() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Action = ResourceAction_UNSET_ACTION_RESOURCE
}

func (x *SensorEvent) ClearTiming() {
	x.xxx_hidden_Timing = nil
}

func (x *SensorEvent) ClearSensorHashOneof() {
	x.xxx_hidden_SensorHashOneof = nil
}

func (x *SensorEvent) ClearSensorHash() {
	if _, ok := x.xxx_hidden_SensorHashOneof.(*sensorEvent_SensorHash); ok {
		x.xxx_hidden_SensorHashOneof = nil
	}
}

func (x *SensorEvent) ClearResource() {
	x.xxx_hidden_Resource = nil
}

func (x *SensorEvent) ClearNetworkPolicy() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_NetworkPolicy); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearDeployment() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_Deployment); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearPod() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_Pod); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearNamespace() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_Namespace); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearSecret() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_Secret); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearNode() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_Node); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearNodeInventory() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_NodeInventory); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearIndexReport() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_IndexReport); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearServiceAccount() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ServiceAccount); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearRole() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_Role); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearBinding() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_Binding); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearProcessIndicator() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ProcessIndicator); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearProviderMetadata() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ProviderMetadata); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearSynced() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_Synced); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearOrchestratorMetadata() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_OrchestratorMetadata); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearImageIntegration() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ImageIntegration); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearReprocessDeployment() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ReprocessDeployment); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearAlertResults() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_AlertResults); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearComplianceOperatorResult() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorResult); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearComplianceOperatorProfile() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorProfile); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearComplianceOperatorRule() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorRule); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearComplianceOperatorScanSettingBinding() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorScanSettingBinding); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearComplianceOperatorScan() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorScan); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearVirtualMachineIndexReport() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_VirtualMachineIndexReport); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearVirtualMachine() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_VirtualMachine); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearComplianceOperatorResultV2() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorResultV2); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearComplianceOperatorProfileV2() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorProfileV2); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearComplianceOperatorRuleV2() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorRuleV2); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearComplianceOperatorScanV2() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorScanV2); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearComplianceOperatorScanSettingBindingV2() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorScanSettingBindingV2); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearComplianceOperatorSuiteV2() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorSuiteV2); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEvent) ClearComplianceOperatorRemediationV2() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEvent_ComplianceOperatorRemediationV2); ok {
		x.xxx_hidden_Resource = nil
	}
}

const SensorEvent_SensorHashOneof_not_set_case case_SensorEvent_SensorHashOneof = 0
const SensorEvent_SensorHash_case case_SensorEvent_SensorHashOneof = 26

func (x *SensorEvent) WhichSensorHashOneof() case_SensorEvent_SensorHashOneof {
	if x == nil {
		return SensorEvent_SensorHashOneof_not_set_case
	}
	switch x.xxx_hidden_SensorHashOneof.(type) {
	case *sensorEvent_SensorHash:
		return SensorEvent_SensorHash_case
	default:
		return SensorEvent_SensorHashOneof_not_set_case
	}
}

const SensorEvent_Resource_not_set_case case_SensorEvent_Resource = 0
const SensorEvent_NetworkPolicy_case case_SensorEvent_Resource = 4
const SensorEvent_Deployment_case case_SensorEvent_Resource = 5
const SensorEvent_Pod_case case_SensorEvent_Resource = 19
const SensorEvent_Namespace_case case_SensorEvent_Resource = 6
const SensorEvent_Secret_case case_SensorEvent_Resource = 7
const SensorEvent_Node_case case_SensorEvent_Resource = 9
const SensorEvent_NodeInventory_case case_SensorEvent_Resource = 25
const SensorEvent_IndexReport_case case_SensorEvent_Resource = 34
const SensorEvent_ServiceAccount_case case_SensorEvent_Resource = 14
const SensorEvent_Role_case case_SensorEvent_Resource = 15
const SensorEvent_Binding_case case_SensorEvent_Resource = 16
const SensorEvent_ProcessIndicator_case case_SensorEvent_Resource = 8
const SensorEvent_ProviderMetadata_case case_SensorEvent_Resource = 10
const SensorEvent_Synced_case case_SensorEvent_Resource = 11
const SensorEvent_OrchestratorMetadata_case case_SensorEvent_Resource = 12
const SensorEvent_ImageIntegration_case case_SensorEvent_Resource = 13
const SensorEvent_ReprocessDeployment_case case_SensorEvent_Resource = 17
const SensorEvent_AlertResults_case case_SensorEvent_Resource = 18
const SensorEvent_ComplianceOperatorResult_case case_SensorEvent_Resource = 20
const SensorEvent_ComplianceOperatorProfile_case case_SensorEvent_Resource = 21
const SensorEvent_ComplianceOperatorRule_case case_SensorEvent_Resource = 22
const SensorEvent_ComplianceOperatorScanSettingBinding_case case_SensorEvent_Resource = 23
const SensorEvent_ComplianceOperatorScan_case case_SensorEvent_Resource = 24
const SensorEvent_VirtualMachineIndexReport_case case_SensorEvent_Resource = 35
const SensorEvent_VirtualMachine_case case_SensorEvent_Resource = 36
const SensorEvent_ComplianceOperatorResultV2_case case_SensorEvent_Resource = 27
const SensorEvent_ComplianceOperatorProfileV2_case case_SensorEvent_Resource = 28
const SensorEvent_ComplianceOperatorRuleV2_case case_SensorEvent_Resource = 29
const SensorEvent_ComplianceOperatorScanV2_case case_SensorEvent_Resource = 30
const SensorEvent_ComplianceOperatorScanSettingBindingV2_case case_SensorEvent_Resource = 31
const SensorEvent_ComplianceOperatorSuiteV2_case case_SensorEvent_Resource = 32
const SensorEvent_ComplianceOperatorRemediationV2_case case_SensorEvent_Resource = 33

func (x *SensorEvent) WhichResource() case_SensorEvent_Resource {
	if x == nil {
		return SensorEvent_Resource_not_set_case
	}
	switch x.xxx_hidden_Resource.(type) {
	case *sensorEvent_NetworkPolicy:
		return SensorEvent_NetworkPolicy_case
	case *sensorEvent_Deployment:
		return SensorEvent_Deployment_case
	case *sensorEvent_Pod:
		return SensorEvent_Pod_case
	case *sensorEvent_Namespace:
		return SensorEvent_Namespace_case
	case *sensorEvent_Secret:
		return SensorEvent_Secret_case
	case *sensorEvent_Node:
		return SensorEvent_Node_case
	case *sensorEvent_NodeInventory:
		return SensorEvent_NodeInventory_case
	case *sensorEvent_IndexReport:
		return SensorEvent_IndexReport_case
	case *sensorEvent_ServiceAccount:
		return SensorEvent_ServiceAccount_case
	case *sensorEvent_Role:
		return SensorEvent_Role_case
	case *sensorEvent_Binding:
		return SensorEvent_Binding_case
	case *sensorEvent_ProcessIndicator:
		return SensorEvent_ProcessIndicator_case
	case *sensorEvent_ProviderMetadata:
		return SensorEvent_ProviderMetadata_case
	case *sensorEvent_Synced:
		return SensorEvent_Synced_case
	case *sensorEvent_OrchestratorMetadata:
		return SensorEvent_OrchestratorMetadata_case
	case *sensorEvent_ImageIntegration:
		return SensorEvent_ImageIntegration_case
	case *sensorEvent_ReprocessDeployment:
		return SensorEvent_ReprocessDeployment_case
	case *sensorEvent_AlertResults:
		return SensorEvent_AlertResults_case
	case *sensorEvent_ComplianceOperatorResult:
		return SensorEvent_ComplianceOperatorResult_case
	case *sensorEvent_ComplianceOperatorProfile:
		return SensorEvent_ComplianceOperatorProfile_case
	case *sensorEvent_ComplianceOperatorRule:
		return SensorEvent_ComplianceOperatorRule_case
	case *sensorEvent_ComplianceOperatorScanSettingBinding:
		return SensorEvent_ComplianceOperatorScanSettingBinding_case
	case *sensorEvent_ComplianceOperatorScan:
		return SensorEvent_ComplianceOperatorScan_case
	case *sensorEvent_VirtualMachineIndexReport:
		return SensorEvent_VirtualMachineIndexReport_case
	case *sensorEvent_VirtualMachine:
		return SensorEvent_VirtualMachine_case
	case *sensorEvent_ComplianceOperatorResultV2:
		return SensorEvent_ComplianceOperatorResultV2_case
	case *sensorEvent_ComplianceOperatorProfileV2:
		return SensorEvent_ComplianceOperatorProfileV2_case
	case *sensorEvent_ComplianceOperatorRuleV2:
		return SensorEvent_ComplianceOperatorRuleV2_case
	case *sensorEvent_ComplianceOperatorScanV2:
		return SensorEvent_ComplianceOperatorScanV2_case
	case *sensorEvent_ComplianceOperatorScanSettingBindingV2:
		return SensorEvent_ComplianceOperatorScanSettingBindingV2_case
	case *sensorEvent_ComplianceOperatorSuiteV2:
		return SensorEvent_ComplianceOperatorSuiteV2_case
	case *sensorEvent_ComplianceOperatorRemediationV2:
		return SensorEvent_ComplianceOperatorRemediationV2_case
	default:
		return SensorEvent_Resource_not_set_case
	}
}

type SensorEvent_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// These fields may be duplicated in the individual events, but avoid the need to branch all the time
	Id     *string
	Action *ResourceAction
	Timing *Timing
	// Fields of oneof xxx_hidden_SensorHashOneof:
	SensorHash *uint64
	// -- end of xxx_hidden_SensorHashOneof
	// Fields of oneof xxx_hidden_Resource:
	NetworkPolicy                        *storage.NetworkPolicy
	Deployment                           *storage.Deployment
	Pod                                  *storage.Pod
	Namespace                            *storage.NamespaceMetadata
	Secret                               *storage.Secret
	Node                                 *storage.Node
	NodeInventory                        *storage.NodeInventory
	IndexReport                          *v4.IndexReport
	ServiceAccount                       *storage.ServiceAccount
	Role                                 *storage.K8SRole
	Binding                              *storage.K8SRoleBinding
	ProcessIndicator                     *storage.ProcessIndicator
	ProviderMetadata                     *storage.ProviderMetadata
	Synced                               *SensorEvent_ResourcesSynced
	OrchestratorMetadata                 *storage.OrchestratorMetadata
	ImageIntegration                     *storage.ImageIntegration
	ReprocessDeployment                  *ReprocessDeploymentRisk
	AlertResults                         *AlertResults
	ComplianceOperatorResult             *storage.ComplianceOperatorCheckResult
	ComplianceOperatorProfile            *storage.ComplianceOperatorProfile
	ComplianceOperatorRule               *storage.ComplianceOperatorRule
	ComplianceOperatorScanSettingBinding *storage.ComplianceOperatorScanSettingBinding
	ComplianceOperatorScan               *storage.ComplianceOperatorScan
	VirtualMachineIndexReport            *v1.IndexReportEvent
	VirtualMachine                       *v1.VirtualMachine
	// V2 Compliance
	ComplianceOperatorResultV2             *ComplianceOperatorCheckResultV2
	ComplianceOperatorProfileV2            *ComplianceOperatorProfileV2
	ComplianceOperatorRuleV2               *ComplianceOperatorRuleV2
	ComplianceOperatorScanV2               *ComplianceOperatorScanV2
	ComplianceOperatorScanSettingBindingV2 *ComplianceOperatorScanSettingBindingV2
	ComplianceOperatorSuiteV2              *ComplianceOperatorSuiteV2
	ComplianceOperatorRemediationV2        *ComplianceOperatorRemediationV2
	// -- end of xxx_hidden_Resource
}

func (b0 SensorEvent_builder) Build() *SensorEvent {
	m0 := &SensorEvent{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_Id = b.Id
	}
	if b.Action != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_Action = *b.Action
	}
	x.xxx_hidden_Timing = b.Timing
	if b.SensorHash != nil {
		x.xxx_hidden_SensorHashOneof = &sensorEvent_SensorHash{*b.SensorHash}
	}
	if b.NetworkPolicy != nil {
		x.xxx_hidden_Resource = &sensorEvent_NetworkPolicy{b.NetworkPolicy}
	}
	if b.Deployment != nil {
		x.xxx_hidden_Resource = &sensorEvent_Deployment{b.Deployment}
	}
	if b.Pod != nil {
		x.xxx_hidden_Resource = &sensorEvent_Pod{b.Pod}
	}
	if b.Namespace != nil {
		x.xxx_hidden_Resource = &sensorEvent_Namespace{b.Namespace}
	}
	if b.Secret != nil {
		x.xxx_hidden_Resource = &sensorEvent_Secret{b.Secret}
	}
	if b.Node != nil {
		x.xxx_hidden_Resource = &sensorEvent_Node{b.Node}
	}
	if b.NodeInventory != nil {
		x.xxx_hidden_Resource = &sensorEvent_NodeInventory{b.NodeInventory}
	}
	if b.IndexReport != nil {
		x.xxx_hidden_Resource = &sensorEvent_IndexReport{b.IndexReport}
	}
	if b.ServiceAccount != nil {
		x.xxx_hidden_Resource = &sensorEvent_ServiceAccount{b.ServiceAccount}
	}
	if b.Role != nil {
		x.xxx_hidden_Resource = &sensorEvent_Role{b.Role}
	}
	if b.Binding != nil {
		x.xxx_hidden_Resource = &sensorEvent_Binding{b.Binding}
	}
	if b.ProcessIndicator != nil {
		x.xxx_hidden_Resource = &sensorEvent_ProcessIndicator{b.ProcessIndicator}
	}
	if b.ProviderMetadata != nil {
		x.xxx_hidden_Resource = &sensorEvent_ProviderMetadata{b.ProviderMetadata}
	}
	if b.Synced != nil {
		x.xxx_hidden_Resource = &sensorEvent_Synced{b.Synced}
	}
	if b.OrchestratorMetadata != nil {
		x.xxx_hidden_Resource = &sensorEvent_OrchestratorMetadata{b.OrchestratorMetadata}
	}
	if b.ImageIntegration != nil {
		x.xxx_hidden_Resource = &sensorEvent_ImageIntegration{b.ImageIntegration}
	}
	if b.ReprocessDeployment != nil {
		x.xxx_hidden_Resource = &sensorEvent_ReprocessDeployment{b.ReprocessDeployment}
	}
	if b.AlertResults != nil {
		x.xxx_hidden_Resource = &sensorEvent_AlertResults{b.AlertResults}
	}
	if b.ComplianceOperatorResult != nil {
		x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorResult{b.ComplianceOperatorResult}
	}
	if b.ComplianceOperatorProfile != nil {
		x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorProfile{b.ComplianceOperatorProfile}
	}
	if b.ComplianceOperatorRule != nil {
		x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorRule{b.ComplianceOperatorRule}
	}
	if b.ComplianceOperatorScanSettingBinding != nil {
		x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorScanSettingBinding{b.ComplianceOperatorScanSettingBinding}
	}
	if b.ComplianceOperatorScan != nil {
		x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorScan{b.ComplianceOperatorScan}
	}
	if b.VirtualMachineIndexReport != nil {
		x.xxx_hidden_Resource = &sensorEvent_VirtualMachineIndexReport{b.VirtualMachineIndexReport}
	}
	if b.VirtualMachine != nil {
		x.xxx_hidden_Resource = &sensorEvent_VirtualMachine{b.VirtualMachine}
	}
	if b.ComplianceOperatorResultV2 != nil {
		x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorResultV2{b.ComplianceOperatorResultV2}
	}
	if b.ComplianceOperatorProfileV2 != nil {
		x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorProfileV2{b.ComplianceOperatorProfileV2}
	}
	if b.ComplianceOperatorRuleV2 != nil {
		x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorRuleV2{b.ComplianceOperatorRuleV2}
	}
	if b.ComplianceOperatorScanV2 != nil {
		x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorScanV2{b.ComplianceOperatorScanV2}
	}
	if b.ComplianceOperatorScanSettingBindingV2 != nil {
		x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorScanSettingBindingV2{b.ComplianceOperatorScanSettingBindingV2}
	}
	if b.ComplianceOperatorSuiteV2 != nil {
		x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorSuiteV2{b.ComplianceOperatorSuiteV2}
	}
	if b.ComplianceOperatorRemediationV2 != nil {
		x.xxx_hidden_Resource = &sensorEvent_ComplianceOperatorRemediationV2{b.ComplianceOperatorRemediationV2}
	}
	return m0
}

type case_SensorEvent_SensorHashOneof protoreflect.FieldNumber

func (x case_SensorEvent_SensorHashOneof) String() string {
	md := file_internalapi_central_sensor_events_proto_msgTypes[3].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type case_SensorEvent_Resource protoreflect.FieldNumber

func (x case_SensorEvent_Resource) String() string {
	md := file_internalapi_central_sensor_events_proto_msgTypes[3].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isSensorEvent_SensorHashOneof interface {
	isSensorEvent_SensorHashOneof()
}

type sensorEvent_SensorHash struct {
	SensorHash uint64 `protobuf:"varint,26,opt,name=sensor_hash,json=sensorHash,oneof"`
}

func (*sensorEvent_SensorHash) isSensorEvent_SensorHashOneof() {}

type isSensorEvent_Resource interface {
	isSensorEvent_Resource()
}

type sensorEvent_NetworkPolicy struct {
	NetworkPolicy *storage.NetworkPolicy `protobuf:"bytes,4,opt,name=network_policy,json=networkPolicy,oneof"`
}

type sensorEvent_Deployment struct {
	Deployment *storage.Deployment `protobuf:"bytes,5,opt,name=deployment,oneof"`
}

type sensorEvent_Pod struct {
	Pod *storage.Pod `protobuf:"bytes,19,opt,name=pod,oneof"`
}

type sensorEvent_Namespace struct {
	Namespace *storage.NamespaceMetadata `protobuf:"bytes,6,opt,name=namespace,oneof"`
}

type sensorEvent_Secret struct {
	Secret *storage.Secret `protobuf:"bytes,7,opt,name=secret,oneof"`
}

type sensorEvent_Node struct {
	Node *storage.Node `protobuf:"bytes,9,opt,name=node,oneof"`
}

type sensorEvent_NodeInventory struct {
	NodeInventory *storage.NodeInventory `protobuf:"bytes,25,opt,name=node_inventory,json=nodeInventory,oneof"`
}

type sensorEvent_IndexReport struct {
	IndexReport *v4.IndexReport `protobuf:"bytes,34,opt,name=index_report,json=indexReport,oneof"`
}

type sensorEvent_ServiceAccount struct {
	ServiceAccount *storage.ServiceAccount `protobuf:"bytes,14,opt,name=service_account,json=serviceAccount,oneof"`
}

type sensorEvent_Role struct {
	Role *storage.K8SRole `protobuf:"bytes,15,opt,name=role,oneof"`
}

type sensorEvent_Binding struct {
	Binding *storage.K8SRoleBinding `protobuf:"bytes,16,opt,name=binding,oneof"`
}

type sensorEvent_ProcessIndicator struct {
	ProcessIndicator *storage.ProcessIndicator `protobuf:"bytes,8,opt,name=process_indicator,json=processIndicator,oneof"`
}

type sensorEvent_ProviderMetadata struct {
	ProviderMetadata *storage.ProviderMetadata `protobuf:"bytes,10,opt,name=provider_metadata,json=providerMetadata,oneof"`
}

type sensorEvent_Synced struct {
	Synced *SensorEvent_ResourcesSynced `protobuf:"bytes,11,opt,name=synced,oneof"`
}

type sensorEvent_OrchestratorMetadata struct {
	OrchestratorMetadata *storage.OrchestratorMetadata `protobuf:"bytes,12,opt,name=orchestrator_metadata,json=orchestratorMetadata,oneof"`
}

type sensorEvent_ImageIntegration struct {
	ImageIntegration *storage.ImageIntegration `protobuf:"bytes,13,opt,name=image_integration,json=imageIntegration,oneof"`
}

type sensorEvent_ReprocessDeployment struct {
	ReprocessDeployment *ReprocessDeploymentRisk `protobuf:"bytes,17,opt,name=reprocess_deployment,json=reprocessDeployment,oneof"`
}

type sensorEvent_AlertResults struct {
	AlertResults *AlertResults `protobuf:"bytes,18,opt,name=alert_results,json=alertResults,oneof"`
}

type sensorEvent_ComplianceOperatorResult struct {
	ComplianceOperatorResult *storage.ComplianceOperatorCheckResult `protobuf:"bytes,20,opt,name=compliance_operator_result,json=complianceOperatorResult,oneof"`
}

type sensorEvent_ComplianceOperatorProfile struct {
	ComplianceOperatorProfile *storage.ComplianceOperatorProfile `protobuf:"bytes,21,opt,name=compliance_operator_profile,json=complianceOperatorProfile,oneof"`
}

type sensorEvent_ComplianceOperatorRule struct {
	ComplianceOperatorRule *storage.ComplianceOperatorRule `protobuf:"bytes,22,opt,name=compliance_operator_rule,json=complianceOperatorRule,oneof"`
}

type sensorEvent_ComplianceOperatorScanSettingBinding struct {
	ComplianceOperatorScanSettingBinding *storage.ComplianceOperatorScanSettingBinding `protobuf:"bytes,23,opt,name=compliance_operator_scan_setting_binding,json=complianceOperatorScanSettingBinding,oneof"`
}

type sensorEvent_ComplianceOperatorScan struct {
	ComplianceOperatorScan *storage.ComplianceOperatorScan `protobuf:"bytes,24,opt,name=compliance_operator_scan,json=complianceOperatorScan,oneof"`
}

type sensorEvent_VirtualMachineIndexReport struct {
	VirtualMachineIndexReport *v1.IndexReportEvent `protobuf:"bytes,35,opt,name=virtual_machine_index_report,json=virtualMachineIndexReport,oneof"`
}

type sensorEvent_VirtualMachine struct {
	VirtualMachine *v1.VirtualMachine `protobuf:"bytes,36,opt,name=virtual_machine,json=virtualMachine,oneof"`
}

type sensorEvent_ComplianceOperatorResultV2 struct {
	// V2 Compliance
	ComplianceOperatorResultV2 *ComplianceOperatorCheckResultV2 `protobuf:"bytes,27,opt,name=compliance_operator_result_v2,json=complianceOperatorResultV2,oneof"`
}

type sensorEvent_ComplianceOperatorProfileV2 struct {
	ComplianceOperatorProfileV2 *ComplianceOperatorProfileV2 `protobuf:"bytes,28,opt,name=compliance_operator_profile_v2,json=complianceOperatorProfileV2,oneof"`
}

type sensorEvent_ComplianceOperatorRuleV2 struct {
	ComplianceOperatorRuleV2 *ComplianceOperatorRuleV2 `protobuf:"bytes,29,opt,name=compliance_operator_rule_v2,json=complianceOperatorRuleV2,oneof"`
}

type sensorEvent_ComplianceOperatorScanV2 struct {
	ComplianceOperatorScanV2 *ComplianceOperatorScanV2 `protobuf:"bytes,30,opt,name=compliance_operator_scan_v2,json=complianceOperatorScanV2,oneof"`
}

type sensorEvent_ComplianceOperatorScanSettingBindingV2 struct {
	ComplianceOperatorScanSettingBindingV2 *ComplianceOperatorScanSettingBindingV2 `protobuf:"bytes,31,opt,name=compliance_operator_scan_setting_binding_v2,json=complianceOperatorScanSettingBindingV2,oneof"`
}

type sensorEvent_ComplianceOperatorSuiteV2 struct {
	ComplianceOperatorSuiteV2 *ComplianceOperatorSuiteV2 `protobuf:"bytes,32,opt,name=compliance_operator_suite_v2,json=complianceOperatorSuiteV2,oneof"`
}

type sensorEvent_ComplianceOperatorRemediationV2 struct {
	ComplianceOperatorRemediationV2 *ComplianceOperatorRemediationV2 `protobuf:"bytes,33,opt,name=compliance_operator_remediation_v2,json=complianceOperatorRemediationV2,oneof"`
}

func (*sensorEvent_NetworkPolicy) isSensorEvent_Resource() {}

func (*sensorEvent_Deployment) isSensorEvent_Resource() {}

func (*sensorEvent_Pod) isSensorEvent_Resource() {}

func (*sensorEvent_Namespace) isSensorEvent_Resource() {}

func (*sensorEvent_Secret) isSensorEvent_Resource() {}

func (*sensorEvent_Node) isSensorEvent_Resource() {}

func (*sensorEvent_NodeInventory) isSensorEvent_Resource() {}

func (*sensorEvent_IndexReport) isSensorEvent_Resource() {}

func (*sensorEvent_ServiceAccount) isSensorEvent_Resource() {}

func (*sensorEvent_Role) isSensorEvent_Resource() {}

func (*sensorEvent_Binding) isSensorEvent_Resource() {}

func (*sensorEvent_ProcessIndicator) isSensorEvent_Resource() {}

func (*sensorEvent_ProviderMetadata) isSensorEvent_Resource() {}

func (*sensorEvent_Synced) isSensorEvent_Resource() {}

func (*sensorEvent_OrchestratorMetadata) isSensorEvent_Resource() {}

func (*sensorEvent_ImageIntegration) isSensorEvent_Resource() {}

func (*sensorEvent_ReprocessDeployment) isSensorEvent_Resource() {}

func (*sensorEvent_AlertResults) isSensorEvent_Resource() {}

func (*sensorEvent_ComplianceOperatorResult) isSensorEvent_Resource() {}

func (*sensorEvent_ComplianceOperatorProfile) isSensorEvent_Resource() {}

func (*sensorEvent_ComplianceOperatorRule) isSensorEvent_Resource() {}

func (*sensorEvent_ComplianceOperatorScanSettingBinding) isSensorEvent_Resource() {}

func (*sensorEvent_ComplianceOperatorScan) isSensorEvent_Resource() {}

func (*sensorEvent_VirtualMachineIndexReport) isSensorEvent_Resource() {}

func (*sensorEvent_VirtualMachine) isSensorEvent_Resource() {}

func (*sensorEvent_ComplianceOperatorResultV2) isSensorEvent_Resource() {}

func (*sensorEvent_ComplianceOperatorProfileV2) isSensorEvent_Resource() {}

func (*sensorEvent_ComplianceOperatorRuleV2) isSensorEvent_Resource() {}

func (*sensorEvent_ComplianceOperatorScanV2) isSensorEvent_Resource() {}

func (*sensorEvent_ComplianceOperatorScanSettingBindingV2) isSensorEvent_Resource() {}

func (*sensorEvent_ComplianceOperatorSuiteV2) isSensorEvent_Resource() {}

func (*sensorEvent_ComplianceOperatorRemediationV2) isSensorEvent_Resource() {}

type SensorEnforcement struct {
	state                  protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_Enforcement storage.EnforcementAction    `protobuf:"varint,1,opt,name=enforcement,enum=storage.EnforcementAction"`
	xxx_hidden_Resource    isSensorEnforcement_Resource `protobuf_oneof:"resource"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SensorEnforcement) Reset() {
	*x = SensorEnforcement{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorEnforcement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorEnforcement) ProtoMessage() {}

func (x *SensorEnforcement) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SensorEnforcement) GetEnforcement() storage.EnforcementAction {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_Enforcement
		}
	}
	return storage.EnforcementAction(0)
}

func (x *SensorEnforcement) GetDeployment() *DeploymentEnforcement {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEnforcement_Deployment); ok {
			return x.Deployment
		}
	}
	return nil
}

func (x *SensorEnforcement) GetContainerInstance() *ContainerInstanceEnforcement {
	if x != nil {
		if x, ok := x.xxx_hidden_Resource.(*sensorEnforcement_ContainerInstance); ok {
			return x.ContainerInstance
		}
	}
	return nil
}

func (x *SensorEnforcement) SetEnforcement(v storage.EnforcementAction) {
	x.xxx_hidden_Enforcement = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *SensorEnforcement) SetDeployment(v *DeploymentEnforcement) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEnforcement_Deployment{v}
}

func (x *SensorEnforcement) SetContainerInstance(v *ContainerInstanceEnforcement) {
	if v == nil {
		x.xxx_hidden_Resource = nil
		return
	}
	x.xxx_hidden_Resource = &sensorEnforcement_ContainerInstance{v}
}

func (x *SensorEnforcement) HasEnforcement() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *SensorEnforcement) HasResource() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Resource != nil
}

func (x *SensorEnforcement) HasDeployment() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEnforcement_Deployment)
	return ok
}

func (x *SensorEnforcement) HasContainerInstance() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Resource.(*sensorEnforcement_ContainerInstance)
	return ok
}

func (x *SensorEnforcement) ClearEnforcement() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Enforcement = storage.EnforcementAction_UNSET_ENFORCEMENT
}

func (x *SensorEnforcement) ClearResource() {
	x.xxx_hidden_Resource = nil
}

func (x *SensorEnforcement) ClearDeployment() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEnforcement_Deployment); ok {
		x.xxx_hidden_Resource = nil
	}
}

func (x *SensorEnforcement) ClearContainerInstance() {
	if _, ok := x.xxx_hidden_Resource.(*sensorEnforcement_ContainerInstance); ok {
		x.xxx_hidden_Resource = nil
	}
}

const SensorEnforcement_Resource_not_set_case case_SensorEnforcement_Resource = 0
const SensorEnforcement_Deployment_case case_SensorEnforcement_Resource = 2
const SensorEnforcement_ContainerInstance_case case_SensorEnforcement_Resource = 3

func (x *SensorEnforcement) WhichResource() case_SensorEnforcement_Resource {
	if x == nil {
		return SensorEnforcement_Resource_not_set_case
	}
	switch x.xxx_hidden_Resource.(type) {
	case *sensorEnforcement_Deployment:
		return SensorEnforcement_Deployment_case
	case *sensorEnforcement_ContainerInstance:
		return SensorEnforcement_ContainerInstance_case
	default:
		return SensorEnforcement_Resource_not_set_case
	}
}

type SensorEnforcement_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Enforcement *storage.EnforcementAction
	// Fields of oneof xxx_hidden_Resource:
	Deployment        *DeploymentEnforcement
	ContainerInstance *ContainerInstanceEnforcement
	// -- end of xxx_hidden_Resource
}

func (b0 SensorEnforcement_builder) Build() *SensorEnforcement {
	m0 := &SensorEnforcement{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Enforcement != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Enforcement = *b.Enforcement
	}
	if b.Deployment != nil {
		x.xxx_hidden_Resource = &sensorEnforcement_Deployment{b.Deployment}
	}
	if b.ContainerInstance != nil {
		x.xxx_hidden_Resource = &sensorEnforcement_ContainerInstance{b.ContainerInstance}
	}
	return m0
}

type case_SensorEnforcement_Resource protoreflect.FieldNumber

func (x case_SensorEnforcement_Resource) String() string {
	md := file_internalapi_central_sensor_events_proto_msgTypes[4].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isSensorEnforcement_Resource interface {
	isSensorEnforcement_Resource()
}

type sensorEnforcement_Deployment struct {
	Deployment *DeploymentEnforcement `protobuf:"bytes,2,opt,name=deployment,oneof"`
}

type sensorEnforcement_ContainerInstance struct {
	ContainerInstance *ContainerInstanceEnforcement `protobuf:"bytes,3,opt,name=container_instance,json=containerInstance,oneof"`
}

func (*sensorEnforcement_Deployment) isSensorEnforcement_Resource() {}

func (*sensorEnforcement_ContainerInstance) isSensorEnforcement_Resource() {}

type DeploymentEnforcement struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_DeploymentId   *string                `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId"`
	xxx_hidden_DeploymentName *string                `protobuf:"bytes,2,opt,name=deployment_name,json=deploymentName"`
	xxx_hidden_DeploymentType *string                `protobuf:"bytes,3,opt,name=deployment_type,json=deploymentType"`
	xxx_hidden_Namespace      *string                `protobuf:"bytes,4,opt,name=namespace"`
	xxx_hidden_AlertId        *string                `protobuf:"bytes,5,opt,name=alert_id,json=alertId"`
	xxx_hidden_PolicyName     *string                `protobuf:"bytes,6,opt,name=policy_name,json=policyName"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *DeploymentEnforcement) Reset() {
	*x = DeploymentEnforcement{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeploymentEnforcement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentEnforcement) ProtoMessage() {}

func (x *DeploymentEnforcement) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *DeploymentEnforcement) GetDeploymentId() string {
	if x != nil {
		if x.xxx_hidden_DeploymentId != nil {
			return *x.xxx_hidden_DeploymentId
		}
		return ""
	}
	return ""
}

func (x *DeploymentEnforcement) GetDeploymentName() string {
	if x != nil {
		if x.xxx_hidden_DeploymentName != nil {
			return *x.xxx_hidden_DeploymentName
		}
		return ""
	}
	return ""
}

func (x *DeploymentEnforcement) GetDeploymentType() string {
	if x != nil {
		if x.xxx_hidden_DeploymentType != nil {
			return *x.xxx_hidden_DeploymentType
		}
		return ""
	}
	return ""
}

func (x *DeploymentEnforcement) GetNamespace() string {
	if x != nil {
		if x.xxx_hidden_Namespace != nil {
			return *x.xxx_hidden_Namespace
		}
		return ""
	}
	return ""
}

func (x *DeploymentEnforcement) GetAlertId() string {
	if x != nil {
		if x.xxx_hidden_AlertId != nil {
			return *x.xxx_hidden_AlertId
		}
		return ""
	}
	return ""
}

func (x *DeploymentEnforcement) GetPolicyName() string {
	if x != nil {
		if x.xxx_hidden_PolicyName != nil {
			return *x.xxx_hidden_PolicyName
		}
		return ""
	}
	return ""
}

func (x *DeploymentEnforcement) SetDeploymentId(v string) {
	x.xxx_hidden_DeploymentId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 6)
}

func (x *DeploymentEnforcement) SetDeploymentName(v string) {
	x.xxx_hidden_DeploymentName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 6)
}

func (x *DeploymentEnforcement) SetDeploymentType(v string) {
	x.xxx_hidden_DeploymentType = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 6)
}

func (x *DeploymentEnforcement) SetNamespace(v string) {
	x.xxx_hidden_Namespace = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 6)
}

func (x *DeploymentEnforcement) SetAlertId(v string) {
	x.xxx_hidden_AlertId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 6)
}

func (x *DeploymentEnforcement) SetPolicyName(v string) {
	x.xxx_hidden_PolicyName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 6)
}

func (x *DeploymentEnforcement) HasDeploymentId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *DeploymentEnforcement) HasDeploymentName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *DeploymentEnforcement) HasDeploymentType() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *DeploymentEnforcement) HasNamespace() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *DeploymentEnforcement) HasAlertId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *DeploymentEnforcement) HasPolicyName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *DeploymentEnforcement) ClearDeploymentId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DeploymentId = nil
}

func (x *DeploymentEnforcement) ClearDeploymentName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_DeploymentName = nil
}

func (x *DeploymentEnforcement) ClearDeploymentType() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_DeploymentType = nil
}

func (x *DeploymentEnforcement) ClearNamespace() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Namespace = nil
}

func (x *DeploymentEnforcement) ClearAlertId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_AlertId = nil
}

func (x *DeploymentEnforcement) ClearPolicyName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_PolicyName = nil
}

type DeploymentEnforcement_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DeploymentId   *string
	DeploymentName *string
	DeploymentType *string
	Namespace      *string
	AlertId        *string
	PolicyName     *string
}

func (b0 DeploymentEnforcement_builder) Build() *DeploymentEnforcement {
	m0 := &DeploymentEnforcement{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DeploymentId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 6)
		x.xxx_hidden_DeploymentId = b.DeploymentId
	}
	if b.DeploymentName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 6)
		x.xxx_hidden_DeploymentName = b.DeploymentName
	}
	if b.DeploymentType != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 6)
		x.xxx_hidden_DeploymentType = b.DeploymentType
	}
	if b.Namespace != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 6)
		x.xxx_hidden_Namespace = b.Namespace
	}
	if b.AlertId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 6)
		x.xxx_hidden_AlertId = b.AlertId
	}
	if b.PolicyName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 6)
		x.xxx_hidden_PolicyName = b.PolicyName
	}
	return m0
}

type ContainerInstanceEnforcement struct {
	state                            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_PodId                 *string                `protobuf:"bytes,2,opt,name=pod_id,json=podId"`
	xxx_hidden_DeploymentEnforcement *DeploymentEnforcement `protobuf:"bytes,3,opt,name=deployment_enforcement,json=deploymentEnforcement"`
	XXX_raceDetectHookData           protoimpl.RaceDetectHookData
	XXX_presence                     [1]uint32
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *ContainerInstanceEnforcement) Reset() {
	*x = ContainerInstanceEnforcement{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerInstanceEnforcement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerInstanceEnforcement) ProtoMessage() {}

func (x *ContainerInstanceEnforcement) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ContainerInstanceEnforcement) GetPodId() string {
	if x != nil {
		if x.xxx_hidden_PodId != nil {
			return *x.xxx_hidden_PodId
		}
		return ""
	}
	return ""
}

func (x *ContainerInstanceEnforcement) GetDeploymentEnforcement() *DeploymentEnforcement {
	if x != nil {
		return x.xxx_hidden_DeploymentEnforcement
	}
	return nil
}

func (x *ContainerInstanceEnforcement) SetPodId(v string) {
	x.xxx_hidden_PodId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ContainerInstanceEnforcement) SetDeploymentEnforcement(v *DeploymentEnforcement) {
	x.xxx_hidden_DeploymentEnforcement = v
}

func (x *ContainerInstanceEnforcement) HasPodId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ContainerInstanceEnforcement) HasDeploymentEnforcement() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DeploymentEnforcement != nil
}

func (x *ContainerInstanceEnforcement) ClearPodId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_PodId = nil
}

func (x *ContainerInstanceEnforcement) ClearDeploymentEnforcement() {
	x.xxx_hidden_DeploymentEnforcement = nil
}

type ContainerInstanceEnforcement_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	PodId                 *string
	DeploymentEnforcement *DeploymentEnforcement
}

func (b0 ContainerInstanceEnforcement_builder) Build() *ContainerInstanceEnforcement {
	m0 := &ContainerInstanceEnforcement{}
	b, x := &b0, m0
	_, _ = b, x
	if b.PodId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_PodId = b.PodId
	}
	x.xxx_hidden_DeploymentEnforcement = b.DeploymentEnforcement
	return m0
}

type ScrapeCommand struct {
	state                  protoimpl.MessageState  `protogen:"opaque.v1"`
	xxx_hidden_ScrapeId    *string                 `protobuf:"bytes,1,opt,name=scrape_id,json=scrapeId"`
	xxx_hidden_Command     isScrapeCommand_Command `protobuf_oneof:"command"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ScrapeCommand) Reset() {
	*x = ScrapeCommand{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScrapeCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScrapeCommand) ProtoMessage() {}

func (x *ScrapeCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ScrapeCommand) GetScrapeId() string {
	if x != nil {
		if x.xxx_hidden_ScrapeId != nil {
			return *x.xxx_hidden_ScrapeId
		}
		return ""
	}
	return ""
}

func (x *ScrapeCommand) GetStartScrape() *StartScrape {
	if x != nil {
		if x, ok := x.xxx_hidden_Command.(*scrapeCommand_StartScrape); ok {
			return x.StartScrape
		}
	}
	return nil
}

func (x *ScrapeCommand) GetKillScrape() *KillScrape {
	if x != nil {
		if x, ok := x.xxx_hidden_Command.(*scrapeCommand_KillScrape); ok {
			return x.KillScrape
		}
	}
	return nil
}

func (x *ScrapeCommand) SetScrapeId(v string) {
	x.xxx_hidden_ScrapeId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ScrapeCommand) SetStartScrape(v *StartScrape) {
	if v == nil {
		x.xxx_hidden_Command = nil
		return
	}
	x.xxx_hidden_Command = &scrapeCommand_StartScrape{v}
}

func (x *ScrapeCommand) SetKillScrape(v *KillScrape) {
	if v == nil {
		x.xxx_hidden_Command = nil
		return
	}
	x.xxx_hidden_Command = &scrapeCommand_KillScrape{v}
}

func (x *ScrapeCommand) HasScrapeId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ScrapeCommand) HasCommand() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Command != nil
}

func (x *ScrapeCommand) HasStartScrape() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Command.(*scrapeCommand_StartScrape)
	return ok
}

func (x *ScrapeCommand) HasKillScrape() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Command.(*scrapeCommand_KillScrape)
	return ok
}

func (x *ScrapeCommand) ClearScrapeId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScrapeId = nil
}

func (x *ScrapeCommand) ClearCommand() {
	x.xxx_hidden_Command = nil
}

func (x *ScrapeCommand) ClearStartScrape() {
	if _, ok := x.xxx_hidden_Command.(*scrapeCommand_StartScrape); ok {
		x.xxx_hidden_Command = nil
	}
}

func (x *ScrapeCommand) ClearKillScrape() {
	if _, ok := x.xxx_hidden_Command.(*scrapeCommand_KillScrape); ok {
		x.xxx_hidden_Command = nil
	}
}

const ScrapeCommand_Command_not_set_case case_ScrapeCommand_Command = 0
const ScrapeCommand_StartScrape_case case_ScrapeCommand_Command = 2
const ScrapeCommand_KillScrape_case case_ScrapeCommand_Command = 3

func (x *ScrapeCommand) WhichCommand() case_ScrapeCommand_Command {
	if x == nil {
		return ScrapeCommand_Command_not_set_case
	}
	switch x.xxx_hidden_Command.(type) {
	case *scrapeCommand_StartScrape:
		return ScrapeCommand_StartScrape_case
	case *scrapeCommand_KillScrape:
		return ScrapeCommand_KillScrape_case
	default:
		return ScrapeCommand_Command_not_set_case
	}
}

type ScrapeCommand_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScrapeId *string
	// Fields of oneof xxx_hidden_Command:
	StartScrape *StartScrape
	KillScrape  *KillScrape
	// -- end of xxx_hidden_Command
}

func (b0 ScrapeCommand_builder) Build() *ScrapeCommand {
	m0 := &ScrapeCommand{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScrapeId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ScrapeId = b.ScrapeId
	}
	if b.StartScrape != nil {
		x.xxx_hidden_Command = &scrapeCommand_StartScrape{b.StartScrape}
	}
	if b.KillScrape != nil {
		x.xxx_hidden_Command = &scrapeCommand_KillScrape{b.KillScrape}
	}
	return m0
}

type case_ScrapeCommand_Command protoreflect.FieldNumber

func (x case_ScrapeCommand_Command) String() string {
	md := file_internalapi_central_sensor_events_proto_msgTypes[7].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isScrapeCommand_Command interface {
	isScrapeCommand_Command()
}

type scrapeCommand_StartScrape struct {
	StartScrape *StartScrape `protobuf:"bytes,2,opt,name=start_scrape,json=startScrape,oneof"`
}

type scrapeCommand_KillScrape struct {
	KillScrape *KillScrape `protobuf:"bytes,3,opt,name=kill_scrape,json=killScrape,oneof"`
}

func (*scrapeCommand_StartScrape) isScrapeCommand_Command() {}

func (*scrapeCommand_KillScrape) isScrapeCommand_Command() {}

type StartScrape struct {
	state                protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Hostnames []string               `protobuf:"bytes,1,rep,name=hostnames"`
	xxx_hidden_Standards []string               `protobuf:"bytes,2,rep,name=standards"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *StartScrape) Reset() {
	*x = StartScrape{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartScrape) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartScrape) ProtoMessage() {}

func (x *StartScrape) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StartScrape) GetHostnames() []string {
	if x != nil {
		return x.xxx_hidden_Hostnames
	}
	return nil
}

func (x *StartScrape) GetStandards() []string {
	if x != nil {
		return x.xxx_hidden_Standards
	}
	return nil
}

func (x *StartScrape) SetHostnames(v []string) {
	x.xxx_hidden_Hostnames = v
}

func (x *StartScrape) SetStandards(v []string) {
	x.xxx_hidden_Standards = v
}

type StartScrape_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Dictates the hosts we expect results from.
	Hostnames []string
	// Dictates which standards the compliance pods should run.
	Standards []string
}

func (b0 StartScrape_builder) Build() *StartScrape {
	m0 := &StartScrape{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Hostnames = b.Hostnames
	x.xxx_hidden_Standards = b.Standards
	return m0
}

type KillScrape struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillScrape) Reset() {
	*x = KillScrape{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillScrape) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillScrape) ProtoMessage() {}

func (x *KillScrape) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type KillScrape_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 KillScrape_builder) Build() *KillScrape {
	m0 := &KillScrape{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type ScrapeUpdate struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ScrapeId *string                `protobuf:"bytes,1,opt,name=scrape_id,json=scrapeId"`
	xxx_hidden_Update   isScrapeUpdate_Update  `protobuf_oneof:"update"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ScrapeUpdate) Reset() {
	*x = ScrapeUpdate{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScrapeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScrapeUpdate) ProtoMessage() {}

func (x *ScrapeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ScrapeUpdate) GetScrapeId() string {
	if x != nil {
		if x.xxx_hidden_ScrapeId != nil {
			return *x.xxx_hidden_ScrapeId
		}
		return ""
	}
	return ""
}

func (x *ScrapeUpdate) GetComplianceReturn() *compliance.ComplianceReturn {
	if x != nil {
		if x, ok := x.xxx_hidden_Update.(*scrapeUpdate_ComplianceReturn); ok {
			return x.ComplianceReturn
		}
	}
	return nil
}

func (x *ScrapeUpdate) GetScrapeStarted() *ScrapeStarted {
	if x != nil {
		if x, ok := x.xxx_hidden_Update.(*scrapeUpdate_ScrapeStarted); ok {
			return x.ScrapeStarted
		}
	}
	return nil
}

func (x *ScrapeUpdate) GetScrapeKilled() *ScrapeKilled {
	if x != nil {
		if x, ok := x.xxx_hidden_Update.(*scrapeUpdate_ScrapeKilled); ok {
			return x.ScrapeKilled
		}
	}
	return nil
}

func (x *ScrapeUpdate) SetScrapeId(v string) {
	x.xxx_hidden_ScrapeId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *ScrapeUpdate) SetComplianceReturn(v *compliance.ComplianceReturn) {
	if v == nil {
		x.xxx_hidden_Update = nil
		return
	}
	x.xxx_hidden_Update = &scrapeUpdate_ComplianceReturn{v}
}

func (x *ScrapeUpdate) SetScrapeStarted(v *ScrapeStarted) {
	if v == nil {
		x.xxx_hidden_Update = nil
		return
	}
	x.xxx_hidden_Update = &scrapeUpdate_ScrapeStarted{v}
}

func (x *ScrapeUpdate) SetScrapeKilled(v *ScrapeKilled) {
	if v == nil {
		x.xxx_hidden_Update = nil
		return
	}
	x.xxx_hidden_Update = &scrapeUpdate_ScrapeKilled{v}
}

func (x *ScrapeUpdate) HasScrapeId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ScrapeUpdate) HasUpdate() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Update != nil
}

func (x *ScrapeUpdate) HasComplianceReturn() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Update.(*scrapeUpdate_ComplianceReturn)
	return ok
}

func (x *ScrapeUpdate) HasScrapeStarted() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Update.(*scrapeUpdate_ScrapeStarted)
	return ok
}

func (x *ScrapeUpdate) HasScrapeKilled() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Update.(*scrapeUpdate_ScrapeKilled)
	return ok
}

func (x *ScrapeUpdate) ClearScrapeId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ScrapeId = nil
}

func (x *ScrapeUpdate) ClearUpdate() {
	x.xxx_hidden_Update = nil
}

func (x *ScrapeUpdate) ClearComplianceReturn() {
	if _, ok := x.xxx_hidden_Update.(*scrapeUpdate_ComplianceReturn); ok {
		x.xxx_hidden_Update = nil
	}
}

func (x *ScrapeUpdate) ClearScrapeStarted() {
	if _, ok := x.xxx_hidden_Update.(*scrapeUpdate_ScrapeStarted); ok {
		x.xxx_hidden_Update = nil
	}
}

func (x *ScrapeUpdate) ClearScrapeKilled() {
	if _, ok := x.xxx_hidden_Update.(*scrapeUpdate_ScrapeKilled); ok {
		x.xxx_hidden_Update = nil
	}
}

const ScrapeUpdate_Update_not_set_case case_ScrapeUpdate_Update = 0
const ScrapeUpdate_ComplianceReturn_case case_ScrapeUpdate_Update = 2
const ScrapeUpdate_ScrapeStarted_case case_ScrapeUpdate_Update = 3
const ScrapeUpdate_ScrapeKilled_case case_ScrapeUpdate_Update = 4

func (x *ScrapeUpdate) WhichUpdate() case_ScrapeUpdate_Update {
	if x == nil {
		return ScrapeUpdate_Update_not_set_case
	}
	switch x.xxx_hidden_Update.(type) {
	case *scrapeUpdate_ComplianceReturn:
		return ScrapeUpdate_ComplianceReturn_case
	case *scrapeUpdate_ScrapeStarted:
		return ScrapeUpdate_ScrapeStarted_case
	case *scrapeUpdate_ScrapeKilled:
		return ScrapeUpdate_ScrapeKilled_case
	default:
		return ScrapeUpdate_Update_not_set_case
	}
}

type ScrapeUpdate_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ScrapeId *string
	// Fields of oneof xxx_hidden_Update:
	ComplianceReturn *compliance.ComplianceReturn
	ScrapeStarted    *ScrapeStarted
	ScrapeKilled     *ScrapeKilled
	// -- end of xxx_hidden_Update
}

func (b0 ScrapeUpdate_builder) Build() *ScrapeUpdate {
	m0 := &ScrapeUpdate{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ScrapeId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ScrapeId = b.ScrapeId
	}
	if b.ComplianceReturn != nil {
		x.xxx_hidden_Update = &scrapeUpdate_ComplianceReturn{b.ComplianceReturn}
	}
	if b.ScrapeStarted != nil {
		x.xxx_hidden_Update = &scrapeUpdate_ScrapeStarted{b.ScrapeStarted}
	}
	if b.ScrapeKilled != nil {
		x.xxx_hidden_Update = &scrapeUpdate_ScrapeKilled{b.ScrapeKilled}
	}
	return m0
}

type case_ScrapeUpdate_Update protoreflect.FieldNumber

func (x case_ScrapeUpdate_Update) String() string {
	md := file_internalapi_central_sensor_events_proto_msgTypes[10].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isScrapeUpdate_Update interface {
	isScrapeUpdate_Update()
}

type scrapeUpdate_ComplianceReturn struct {
	ComplianceReturn *compliance.ComplianceReturn `protobuf:"bytes,2,opt,name=compliance_return,json=complianceReturn,oneof"`
}

type scrapeUpdate_ScrapeStarted struct {
	ScrapeStarted *ScrapeStarted `protobuf:"bytes,3,opt,name=scrape_started,json=scrapeStarted,oneof"`
}

type scrapeUpdate_ScrapeKilled struct {
	ScrapeKilled *ScrapeKilled `protobuf:"bytes,4,opt,name=scrape_killed,json=scrapeKilled,oneof"`
}

func (*scrapeUpdate_ComplianceReturn) isScrapeUpdate_Update() {}

func (*scrapeUpdate_ScrapeStarted) isScrapeUpdate_Update() {}

func (*scrapeUpdate_ScrapeKilled) isScrapeUpdate_Update() {}

type ScrapeStarted struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ErrorMessage *string                `protobuf:"bytes,1,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ScrapeStarted) Reset() {
	*x = ScrapeStarted{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScrapeStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScrapeStarted) ProtoMessage() {}

func (x *ScrapeStarted) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ScrapeStarted) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *ScrapeStarted) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ScrapeStarted) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ScrapeStarted) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ErrorMessage = nil
}

type ScrapeStarted_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ErrorMessage *string
}

func (b0 ScrapeStarted_builder) Build() *ScrapeStarted {
	m0 := &ScrapeStarted{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	return m0
}

type ScrapeKilled struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ErrorMessage *string                `protobuf:"bytes,1,opt,name=error_message,json=errorMessage"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ScrapeKilled) Reset() {
	*x = ScrapeKilled{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScrapeKilled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScrapeKilled) ProtoMessage() {}

func (x *ScrapeKilled) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ScrapeKilled) GetErrorMessage() string {
	if x != nil {
		if x.xxx_hidden_ErrorMessage != nil {
			return *x.xxx_hidden_ErrorMessage
		}
		return ""
	}
	return ""
}

func (x *ScrapeKilled) SetErrorMessage(v string) {
	x.xxx_hidden_ErrorMessage = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *ScrapeKilled) HasErrorMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ScrapeKilled) ClearErrorMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ErrorMessage = nil
}

type ScrapeKilled_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ErrorMessage *string
}

func (b0 ScrapeKilled_builder) Build() *ScrapeKilled {
	m0 := &ScrapeKilled{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ErrorMessage != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_ErrorMessage = b.ErrorMessage
	}
	return m0
}

type NetworkPoliciesCommand struct {
	state                  protoimpl.MessageState          `protogen:"opaque.v1"`
	xxx_hidden_SeqId       int64                           `protobuf:"varint,1,opt,name=seq_id,json=seqId"`
	xxx_hidden_Payload     *NetworkPoliciesCommand_Payload `protobuf:"bytes,2,opt,name=payload"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkPoliciesCommand) Reset() {
	*x = NetworkPoliciesCommand{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPoliciesCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPoliciesCommand) ProtoMessage() {}

func (x *NetworkPoliciesCommand) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPoliciesCommand) GetSeqId() int64 {
	if x != nil {
		return x.xxx_hidden_SeqId
	}
	return 0
}

func (x *NetworkPoliciesCommand) GetPayload() *NetworkPoliciesCommand_Payload {
	if x != nil {
		return x.xxx_hidden_Payload
	}
	return nil
}

func (x *NetworkPoliciesCommand) SetSeqId(v int64) {
	x.xxx_hidden_SeqId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *NetworkPoliciesCommand) SetPayload(v *NetworkPoliciesCommand_Payload) {
	x.xxx_hidden_Payload = v
}

func (x *NetworkPoliciesCommand) HasSeqId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkPoliciesCommand) HasPayload() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Payload != nil
}

func (x *NetworkPoliciesCommand) ClearSeqId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SeqId = 0
}

func (x *NetworkPoliciesCommand) ClearPayload() {
	x.xxx_hidden_Payload = nil
}

type NetworkPoliciesCommand_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SeqId   *int64
	Payload *NetworkPoliciesCommand_Payload
}

func (b0 NetworkPoliciesCommand_builder) Build() *NetworkPoliciesCommand {
	m0 := &NetworkPoliciesCommand{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SeqId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_SeqId = *b.SeqId
	}
	x.xxx_hidden_Payload = b.Payload
	return m0
}

type NetworkPoliciesResponse struct {
	state                  protoimpl.MessageState           `protogen:"opaque.v1"`
	xxx_hidden_SeqId       int64                            `protobuf:"varint,1,opt,name=seq_id,json=seqId"`
	xxx_hidden_Payload     *NetworkPoliciesResponse_Payload `protobuf:"bytes,2,opt,name=payload"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkPoliciesResponse) Reset() {
	*x = NetworkPoliciesResponse{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPoliciesResponse) ProtoMessage() {}

func (x *NetworkPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPoliciesResponse) GetSeqId() int64 {
	if x != nil {
		return x.xxx_hidden_SeqId
	}
	return 0
}

func (x *NetworkPoliciesResponse) GetPayload() *NetworkPoliciesResponse_Payload {
	if x != nil {
		return x.xxx_hidden_Payload
	}
	return nil
}

func (x *NetworkPoliciesResponse) SetSeqId(v int64) {
	x.xxx_hidden_SeqId = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *NetworkPoliciesResponse) SetPayload(v *NetworkPoliciesResponse_Payload) {
	x.xxx_hidden_Payload = v
}

func (x *NetworkPoliciesResponse) HasSeqId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkPoliciesResponse) HasPayload() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Payload != nil
}

func (x *NetworkPoliciesResponse) ClearSeqId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SeqId = 0
}

func (x *NetworkPoliciesResponse) ClearPayload() {
	x.xxx_hidden_Payload = nil
}

type NetworkPoliciesResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SeqId   *int64
	Payload *NetworkPoliciesResponse_Payload
}

func (b0 NetworkPoliciesResponse_builder) Build() *NetworkPoliciesResponse {
	m0 := &NetworkPoliciesResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SeqId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_SeqId = *b.SeqId
	}
	x.xxx_hidden_Payload = b.Payload
	return m0
}

type SensorEvent_ResourcesSynced struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_UnchangedIds []string               `protobuf:"bytes,1,rep,name=unchanged_ids,json=unchangedIds"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SensorEvent_ResourcesSynced) Reset() {
	*x = SensorEvent_ResourcesSynced{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SensorEvent_ResourcesSynced) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorEvent_ResourcesSynced) ProtoMessage() {}

func (x *SensorEvent_ResourcesSynced) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SensorEvent_ResourcesSynced) GetUnchangedIds() []string {
	if x != nil {
		return x.xxx_hidden_UnchangedIds
	}
	return nil
}

func (x *SensorEvent_ResourcesSynced) SetUnchangedIds(v []string) {
	x.xxx_hidden_UnchangedIds = v
}

type SensorEvent_ResourcesSynced_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	UnchangedIds []string
}

func (b0 SensorEvent_ResourcesSynced_builder) Build() *SensorEvent_ResourcesSynced {
	m0 := &SensorEvent_ResourcesSynced{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_UnchangedIds = b.UnchangedIds
	return m0
}

type NetworkPoliciesCommand_Apply struct {
	state                   protoimpl.MessageState             `protogen:"opaque.v1"`
	xxx_hidden_ApplyId      *string                            `protobuf:"bytes,1,opt,name=apply_id,json=applyId"`
	xxx_hidden_Modification *storage.NetworkPolicyModification `protobuf:"bytes,2,opt,name=modification"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkPoliciesCommand_Apply) Reset() {
	*x = NetworkPoliciesCommand_Apply{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPoliciesCommand_Apply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPoliciesCommand_Apply) ProtoMessage() {}

func (x *NetworkPoliciesCommand_Apply) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPoliciesCommand_Apply) GetApplyId() string {
	if x != nil {
		if x.xxx_hidden_ApplyId != nil {
			return *x.xxx_hidden_ApplyId
		}
		return ""
	}
	return ""
}

func (x *NetworkPoliciesCommand_Apply) GetModification() *storage.NetworkPolicyModification {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_Modification) {
				protoimpl.X.UnmarshalField(x, 2)
			}
			var rv *storage.NetworkPolicyModification
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_Modification), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *NetworkPoliciesCommand_Apply) SetApplyId(v string) {
	x.xxx_hidden_ApplyId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *NetworkPoliciesCommand_Apply) SetModification(v *storage.NetworkPolicyModification) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_Modification, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
	}
}

func (x *NetworkPoliciesCommand_Apply) HasApplyId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkPoliciesCommand_Apply) HasModification() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NetworkPoliciesCommand_Apply) ClearApplyId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ApplyId = nil
}

func (x *NetworkPoliciesCommand_Apply) ClearModification() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_Modification, (*storage.NetworkPolicyModification)(nil))
}

type NetworkPoliciesCommand_Apply_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ApplyId      *string
	Modification *storage.NetworkPolicyModification
}

func (b0 NetworkPoliciesCommand_Apply_builder) Build() *NetworkPoliciesCommand_Apply {
	m0 := &NetworkPoliciesCommand_Apply{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ApplyId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ApplyId = b.ApplyId
	}
	if b.Modification != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Modification = b.Modification
	}
	return m0
}

type NetworkPoliciesCommand_Payload struct {
	state          protoimpl.MessageState               `protogen:"opaque.v1"`
	xxx_hidden_Cmd isNetworkPoliciesCommand_Payload_Cmd `protobuf_oneof:"cmd"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NetworkPoliciesCommand_Payload) Reset() {
	*x = NetworkPoliciesCommand_Payload{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPoliciesCommand_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPoliciesCommand_Payload) ProtoMessage() {}

func (x *NetworkPoliciesCommand_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPoliciesCommand_Payload) GetApply() *NetworkPoliciesCommand_Apply {
	if x != nil {
		if x, ok := x.xxx_hidden_Cmd.(*networkPoliciesCommand_Payload_Apply); ok {
			return x.Apply
		}
	}
	return nil
}

func (x *NetworkPoliciesCommand_Payload) SetApply(v *NetworkPoliciesCommand_Apply) {
	if v == nil {
		x.xxx_hidden_Cmd = nil
		return
	}
	x.xxx_hidden_Cmd = &networkPoliciesCommand_Payload_Apply{v}
}

func (x *NetworkPoliciesCommand_Payload) HasCmd() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Cmd != nil
}

func (x *NetworkPoliciesCommand_Payload) HasApply() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Cmd.(*networkPoliciesCommand_Payload_Apply)
	return ok
}

func (x *NetworkPoliciesCommand_Payload) ClearCmd() {
	x.xxx_hidden_Cmd = nil
}

func (x *NetworkPoliciesCommand_Payload) ClearApply() {
	if _, ok := x.xxx_hidden_Cmd.(*networkPoliciesCommand_Payload_Apply); ok {
		x.xxx_hidden_Cmd = nil
	}
}

const NetworkPoliciesCommand_Payload_Cmd_not_set_case case_NetworkPoliciesCommand_Payload_Cmd = 0
const NetworkPoliciesCommand_Payload_Apply_case case_NetworkPoliciesCommand_Payload_Cmd = 1

func (x *NetworkPoliciesCommand_Payload) WhichCmd() case_NetworkPoliciesCommand_Payload_Cmd {
	if x == nil {
		return NetworkPoliciesCommand_Payload_Cmd_not_set_case
	}
	switch x.xxx_hidden_Cmd.(type) {
	case *networkPoliciesCommand_Payload_Apply:
		return NetworkPoliciesCommand_Payload_Apply_case
	default:
		return NetworkPoliciesCommand_Payload_Cmd_not_set_case
	}
}

type NetworkPoliciesCommand_Payload_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Cmd:
	Apply *NetworkPoliciesCommand_Apply
	// -- end of xxx_hidden_Cmd
}

func (b0 NetworkPoliciesCommand_Payload_builder) Build() *NetworkPoliciesCommand_Payload {
	m0 := &NetworkPoliciesCommand_Payload{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Apply != nil {
		x.xxx_hidden_Cmd = &networkPoliciesCommand_Payload_Apply{b.Apply}
	}
	return m0
}

type case_NetworkPoliciesCommand_Payload_Cmd protoreflect.FieldNumber

func (x case_NetworkPoliciesCommand_Payload_Cmd) String() string {
	md := file_internalapi_central_sensor_events_proto_msgTypes[17].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isNetworkPoliciesCommand_Payload_Cmd interface {
	isNetworkPoliciesCommand_Payload_Cmd()
}

type networkPoliciesCommand_Payload_Apply struct {
	Apply *NetworkPoliciesCommand_Apply `protobuf:"bytes,1,opt,name=apply,oneof"`
}

func (*networkPoliciesCommand_Payload_Apply) isNetworkPoliciesCommand_Payload_Cmd() {}

type NetworkPoliciesResponse_Apply struct {
	state                       protoimpl.MessageState             `protogen:"opaque.v1"`
	xxx_hidden_ApplyId          *string                            `protobuf:"bytes,1,opt,name=apply_id,json=applyId"`
	xxx_hidden_UndoModification *storage.NetworkPolicyModification `protobuf:"bytes,2,opt,name=undo_modification,json=undoModification"`
	// Deprecated: Do not use. This will be deleted in the near future.
	XXX_lazyUnmarshalInfo  protoimpl.LazyUnmarshalInfo
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkPoliciesResponse_Apply) Reset() {
	*x = NetworkPoliciesResponse_Apply{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPoliciesResponse_Apply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPoliciesResponse_Apply) ProtoMessage() {}

func (x *NetworkPoliciesResponse_Apply) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPoliciesResponse_Apply) GetApplyId() string {
	if x != nil {
		if x.xxx_hidden_ApplyId != nil {
			return *x.xxx_hidden_ApplyId
		}
		return ""
	}
	return ""
}

func (x *NetworkPoliciesResponse_Apply) GetUndoModification() *storage.NetworkPolicyModification {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			if protoimpl.X.AtomicCheckPointerIsNil(&x.xxx_hidden_UndoModification) {
				protoimpl.X.UnmarshalField(x, 2)
			}
			var rv *storage.NetworkPolicyModification
			protoimpl.X.AtomicLoadPointer(protoimpl.Pointer(&x.xxx_hidden_UndoModification), protoimpl.Pointer(&rv))
			return rv
		}
	}
	return nil
}

func (x *NetworkPoliciesResponse_Apply) SetApplyId(v string) {
	x.xxx_hidden_ApplyId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *NetworkPoliciesResponse_Apply) SetUndoModification(v *storage.NetworkPolicyModification) {
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_UndoModification, v)
	if v == nil {
		protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	} else {
		protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
	}
}

func (x *NetworkPoliciesResponse_Apply) HasApplyId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkPoliciesResponse_Apply) HasUndoModification() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *NetworkPoliciesResponse_Apply) ClearApplyId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ApplyId = nil
}

func (x *NetworkPoliciesResponse_Apply) ClearUndoModification() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	protoimpl.X.AtomicSetPointer(&x.xxx_hidden_UndoModification, (*storage.NetworkPolicyModification)(nil))
}

type NetworkPoliciesResponse_Apply_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ApplyId          *string
	UndoModification *storage.NetworkPolicyModification
}

func (b0 NetworkPoliciesResponse_Apply_builder) Build() *NetworkPoliciesResponse_Apply {
	m0 := &NetworkPoliciesResponse_Apply{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ApplyId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ApplyId = b.ApplyId
	}
	if b.UndoModification != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_UndoModification = b.UndoModification
	}
	return m0
}

type NetworkPoliciesResponse_Error struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Message     *string                `protobuf:"bytes,1,opt,name=message"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkPoliciesResponse_Error) Reset() {
	*x = NetworkPoliciesResponse_Error{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPoliciesResponse_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPoliciesResponse_Error) ProtoMessage() {}

func (x *NetworkPoliciesResponse_Error) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPoliciesResponse_Error) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *NetworkPoliciesResponse_Error) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *NetworkPoliciesResponse_Error) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *NetworkPoliciesResponse_Error) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Message = nil
}

type NetworkPoliciesResponse_Error_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Message *string
}

func (b0 NetworkPoliciesResponse_Error_builder) Build() *NetworkPoliciesResponse_Error {
	m0 := &NetworkPoliciesResponse_Error{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_Message = b.Message
	}
	return m0
}

type NetworkPoliciesResponse_Payload struct {
	state          protoimpl.MessageState                `protogen:"opaque.v1"`
	xxx_hidden_Cmd isNetworkPoliciesResponse_Payload_Cmd `protobuf_oneof:"cmd"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NetworkPoliciesResponse_Payload) Reset() {
	*x = NetworkPoliciesResponse_Payload{}
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkPoliciesResponse_Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkPoliciesResponse_Payload) ProtoMessage() {}

func (x *NetworkPoliciesResponse_Payload) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_central_sensor_events_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *NetworkPoliciesResponse_Payload) GetError() *NetworkPoliciesResponse_Error {
	if x != nil {
		if x, ok := x.xxx_hidden_Cmd.(*networkPoliciesResponse_Payload_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *NetworkPoliciesResponse_Payload) GetApply() *NetworkPoliciesResponse_Apply {
	if x != nil {
		if x, ok := x.xxx_hidden_Cmd.(*networkPoliciesResponse_Payload_Apply); ok {
			return x.Apply
		}
	}
	return nil
}

func (x *NetworkPoliciesResponse_Payload) SetError(v *NetworkPoliciesResponse_Error) {
	if v == nil {
		x.xxx_hidden_Cmd = nil
		return
	}
	x.xxx_hidden_Cmd = &networkPoliciesResponse_Payload_Error{v}
}

func (x *NetworkPoliciesResponse_Payload) SetApply(v *NetworkPoliciesResponse_Apply) {
	if v == nil {
		x.xxx_hidden_Cmd = nil
		return
	}
	x.xxx_hidden_Cmd = &networkPoliciesResponse_Payload_Apply{v}
}

func (x *NetworkPoliciesResponse_Payload) HasCmd() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Cmd != nil
}

func (x *NetworkPoliciesResponse_Payload) HasError() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Cmd.(*networkPoliciesResponse_Payload_Error)
	return ok
}

func (x *NetworkPoliciesResponse_Payload) HasApply() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Cmd.(*networkPoliciesResponse_Payload_Apply)
	return ok
}

func (x *NetworkPoliciesResponse_Payload) ClearCmd() {
	x.xxx_hidden_Cmd = nil
}

func (x *NetworkPoliciesResponse_Payload) ClearError() {
	if _, ok := x.xxx_hidden_Cmd.(*networkPoliciesResponse_Payload_Error); ok {
		x.xxx_hidden_Cmd = nil
	}
}

func (x *NetworkPoliciesResponse_Payload) ClearApply() {
	if _, ok := x.xxx_hidden_Cmd.(*networkPoliciesResponse_Payload_Apply); ok {
		x.xxx_hidden_Cmd = nil
	}
}

const NetworkPoliciesResponse_Payload_Cmd_not_set_case case_NetworkPoliciesResponse_Payload_Cmd = 0
const NetworkPoliciesResponse_Payload_Error_case case_NetworkPoliciesResponse_Payload_Cmd = 1
const NetworkPoliciesResponse_Payload_Apply_case case_NetworkPoliciesResponse_Payload_Cmd = 2

func (x *NetworkPoliciesResponse_Payload) WhichCmd() case_NetworkPoliciesResponse_Payload_Cmd {
	if x == nil {
		return NetworkPoliciesResponse_Payload_Cmd_not_set_case
	}
	switch x.xxx_hidden_Cmd.(type) {
	case *networkPoliciesResponse_Payload_Error:
		return NetworkPoliciesResponse_Payload_Error_case
	case *networkPoliciesResponse_Payload_Apply:
		return NetworkPoliciesResponse_Payload_Apply_case
	default:
		return NetworkPoliciesResponse_Payload_Cmd_not_set_case
	}
}

type NetworkPoliciesResponse_Payload_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_Cmd:
	Error *NetworkPoliciesResponse_Error
	Apply *NetworkPoliciesResponse_Apply
	// -- end of xxx_hidden_Cmd
}

func (b0 NetworkPoliciesResponse_Payload_builder) Build() *NetworkPoliciesResponse_Payload {
	m0 := &NetworkPoliciesResponse_Payload{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Error != nil {
		x.xxx_hidden_Cmd = &networkPoliciesResponse_Payload_Error{b.Error}
	}
	if b.Apply != nil {
		x.xxx_hidden_Cmd = &networkPoliciesResponse_Payload_Apply{b.Apply}
	}
	return m0
}

type case_NetworkPoliciesResponse_Payload_Cmd protoreflect.FieldNumber

func (x case_NetworkPoliciesResponse_Payload_Cmd) String() string {
	md := file_internalapi_central_sensor_events_proto_msgTypes[20].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isNetworkPoliciesResponse_Payload_Cmd interface {
	isNetworkPoliciesResponse_Payload_Cmd()
}

type networkPoliciesResponse_Payload_Error struct {
	Error *NetworkPoliciesResponse_Error `protobuf:"bytes,1,opt,name=error,oneof"`
}

type networkPoliciesResponse_Payload_Apply struct {
	Apply *NetworkPoliciesResponse_Apply `protobuf:"bytes,2,opt,name=apply,oneof"`
}

func (*networkPoliciesResponse_Payload_Error) isNetworkPoliciesResponse_Payload_Cmd() {}

func (*networkPoliciesResponse_Payload_Apply) isNetworkPoliciesResponse_Payload_Cmd() {}

var File_internalapi_central_sensor_events_proto protoreflect.FileDescriptor

const file_internalapi_central_sensor_events_proto_rawDesc = "" +
	"\n" +
	"'internalapi/central/sensor_events.proto\x12\acentral\x1a-internalapi/central/compliance_operator.proto\x1a,internalapi/compliance/compliance_data.proto\x1a)internalapi/scanner/v4/index_report.proto\x1a0internalapi/virtualmachine/v1/index_report.proto\x1a3internalapi/virtualmachine/v1/virtual_machine.proto\x1a\x13storage/alert.proto\x1a\x15storage/cluster.proto\x1a!storage/compliance_operator.proto\x1a\x18storage/deployment.proto\x1a\x1fstorage/image_integration.proto\x1a storage/namespace_metadata.proto\x1a\x1cstorage/network_policy.proto\x1a\x12storage/node.proto\x1a\x14storage/policy.proto\x1a\x1fstorage/process_indicator.proto\x1a\x12storage/rbac.proto\x1a\x14storage/secret.proto\x1a\x1dstorage/service_account.proto\x1a!google/protobuf/go_features.proto\">\n" +
	"\x17ReprocessDeploymentRisk\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\"\xf5\x01\n" +
	"\fAlertResults\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\x12*\n" +
	"\x06alerts\x18\x02 \x03(\v2\x0e.storage.AlertB\x02(\x01R\x06alerts\x12-\n" +
	"\x05stage\x18\x03 \x01(\x0e2\x17.storage.LifecycleStageR\x05stage\x124\n" +
	"\x06source\x18\x04 \x01(\x0e2\x1c.central.AlertResults.SourceR\x06source\"/\n" +
	"\x06Source\x12\x14\n" +
	"\x10DEPLOYMENT_EVENT\x10\x00\x12\x0f\n" +
	"\vAUDIT_EVENT\x10\x01\"Z\n" +
	"\x06Timing\x12\x1e\n" +
	"\n" +
	"dispatcher\x18\x01 \x01(\tR\n" +
	"dispatcher\x12\x1a\n" +
	"\bresource\x18\x02 \x01(\tR\bresource\x12\x14\n" +
	"\x05nanos\x18\x03 \x01(\x03R\x05nanos\"\xf7\x16\n" +
	"\vSensorEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12/\n" +
	"\x06action\x18\x02 \x01(\x0e2\x17.central.ResourceActionR\x06action\x12'\n" +
	"\x06timing\x18\x03 \x01(\v2\x0f.central.TimingR\x06timing\x12!\n" +
	"\vsensor_hash\x18\x1a \x01(\x04H\x00R\n" +
	"sensorHash\x12C\n" +
	"\x0enetwork_policy\x18\x04 \x01(\v2\x16.storage.NetworkPolicyB\x02(\x01H\x01R\rnetworkPolicy\x129\n" +
	"\n" +
	"deployment\x18\x05 \x01(\v2\x13.storage.DeploymentB\x02(\x01H\x01R\n" +
	"deployment\x12$\n" +
	"\x03pod\x18\x13 \x01(\v2\f.storage.PodB\x02(\x01H\x01R\x03pod\x12>\n" +
	"\tnamespace\x18\x06 \x01(\v2\x1a.storage.NamespaceMetadataB\x02(\x01H\x01R\tnamespace\x12-\n" +
	"\x06secret\x18\a \x01(\v2\x0f.storage.SecretB\x02(\x01H\x01R\x06secret\x12'\n" +
	"\x04node\x18\t \x01(\v2\r.storage.NodeB\x02(\x01H\x01R\x04node\x12C\n" +
	"\x0enode_inventory\x18\x19 \x01(\v2\x16.storage.NodeInventoryB\x02(\x01H\x01R\rnodeInventory\x12@\n" +
	"\findex_report\x18\" \x01(\v2\x17.scanner.v4.IndexReportB\x02(\x01H\x01R\vindexReport\x12F\n" +
	"\x0fservice_account\x18\x0e \x01(\v2\x17.storage.ServiceAccountB\x02(\x01H\x01R\x0eserviceAccount\x12*\n" +
	"\x04role\x18\x0f \x01(\v2\x10.storage.K8sRoleB\x02(\x01H\x01R\x04role\x127\n" +
	"\abinding\x18\x10 \x01(\v2\x17.storage.K8sRoleBindingB\x02(\x01H\x01R\abinding\x12L\n" +
	"\x11process_indicator\x18\b \x01(\v2\x19.storage.ProcessIndicatorB\x02(\x01H\x01R\x10processIndicator\x12L\n" +
	"\x11provider_metadata\x18\n" +
	" \x01(\v2\x19.storage.ProviderMetadataB\x02(\x01H\x01R\x10providerMetadata\x12>\n" +
	"\x06synced\x18\v \x01(\v2$.central.SensorEvent.ResourcesSyncedH\x01R\x06synced\x12X\n" +
	"\x15orchestrator_metadata\x18\f \x01(\v2\x1d.storage.OrchestratorMetadataB\x02(\x01H\x01R\x14orchestratorMetadata\x12L\n" +
	"\x11image_integration\x18\r \x01(\v2\x19.storage.ImageIntegrationB\x02(\x01H\x01R\x10imageIntegration\x12U\n" +
	"\x14reprocess_deployment\x18\x11 \x01(\v2 .central.ReprocessDeploymentRiskH\x01R\x13reprocessDeployment\x12<\n" +
	"\ralert_results\x18\x12 \x01(\v2\x15.central.AlertResultsH\x01R\falertResults\x12j\n" +
	"\x1acompliance_operator_result\x18\x14 \x01(\v2&.storage.ComplianceOperatorCheckResultB\x02(\x01H\x01R\x18complianceOperatorResult\x12h\n" +
	"\x1bcompliance_operator_profile\x18\x15 \x01(\v2\".storage.ComplianceOperatorProfileB\x02(\x01H\x01R\x19complianceOperatorProfile\x12_\n" +
	"\x18compliance_operator_rule\x18\x16 \x01(\v2\x1f.storage.ComplianceOperatorRuleB\x02(\x01H\x01R\x16complianceOperatorRule\x12\x8b\x01\n" +
	"(compliance_operator_scan_setting_binding\x18\x17 \x01(\v2-.storage.ComplianceOperatorScanSettingBindingB\x02(\x01H\x01R$complianceOperatorScanSettingBinding\x12_\n" +
	"\x18compliance_operator_scan\x18\x18 \x01(\v2\x1f.storage.ComplianceOperatorScanB\x02(\x01H\x01R\x16complianceOperatorScan\x12j\n" +
	"\x1cvirtual_machine_index_report\x18# \x01(\v2#.virtualmachine.v1.IndexReportEventB\x02(\x01H\x01R\x19virtualMachineIndexReport\x12P\n" +
	"\x0fvirtual_machine\x18$ \x01(\v2!.virtualmachine.v1.VirtualMachineB\x02(\x01H\x01R\x0evirtualMachine\x12m\n" +
	"\x1dcompliance_operator_result_v2\x18\x1b \x01(\v2(.central.ComplianceOperatorCheckResultV2H\x01R\x1acomplianceOperatorResultV2\x12k\n" +
	"\x1ecompliance_operator_profile_v2\x18\x1c \x01(\v2$.central.ComplianceOperatorProfileV2H\x01R\x1bcomplianceOperatorProfileV2\x12b\n" +
	"\x1bcompliance_operator_rule_v2\x18\x1d \x01(\v2!.central.ComplianceOperatorRuleV2H\x01R\x18complianceOperatorRuleV2\x12b\n" +
	"\x1bcompliance_operator_scan_v2\x18\x1e \x01(\v2!.central.ComplianceOperatorScanV2H\x01R\x18complianceOperatorScanV2\x12\x8e\x01\n" +
	"+compliance_operator_scan_setting_binding_v2\x18\x1f \x01(\v2/.central.ComplianceOperatorScanSettingBindingV2H\x01R&complianceOperatorScanSettingBindingV2\x12e\n" +
	"\x1ccompliance_operator_suite_v2\x18  \x01(\v2\".central.ComplianceOperatorSuiteV2H\x01R\x19complianceOperatorSuiteV2\x12w\n" +
	"\"compliance_operator_remediation_v2\x18! \x01(\v2(.central.ComplianceOperatorRemediationV2H\x01R\x1fcomplianceOperatorRemediationV2\x1a6\n" +
	"\x0fResourcesSynced\x12#\n" +
	"\runchanged_ids\x18\x01 \x03(\tR\funchangedIdsB\x13\n" +
	"\x11sensor_hash_oneofB\n" +
	"\n" +
	"\bresource\"\xf7\x01\n" +
	"\x11SensorEnforcement\x12<\n" +
	"\venforcement\x18\x01 \x01(\x0e2\x1a.storage.EnforcementActionR\venforcement\x12@\n" +
	"\n" +
	"deployment\x18\x02 \x01(\v2\x1e.central.DeploymentEnforcementH\x00R\n" +
	"deployment\x12V\n" +
	"\x12container_instance\x18\x03 \x01(\v2%.central.ContainerInstanceEnforcementH\x00R\x11containerInstanceB\n" +
	"\n" +
	"\bresource\"\xe8\x01\n" +
	"\x15DeploymentEnforcement\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\x12'\n" +
	"\x0fdeployment_name\x18\x02 \x01(\tR\x0edeploymentName\x12'\n" +
	"\x0fdeployment_type\x18\x03 \x01(\tR\x0edeploymentType\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12\x19\n" +
	"\balert_id\x18\x05 \x01(\tR\aalertId\x12\x1f\n" +
	"\vpolicy_name\x18\x06 \x01(\tR\n" +
	"policyName\"\x8c\x01\n" +
	"\x1cContainerInstanceEnforcement\x12\x15\n" +
	"\x06pod_id\x18\x02 \x01(\tR\x05podId\x12U\n" +
	"\x16deployment_enforcement\x18\x03 \x01(\v2\x1e.central.DeploymentEnforcementR\x15deploymentEnforcement\"\xaa\x01\n" +
	"\rScrapeCommand\x12\x1b\n" +
	"\tscrape_id\x18\x01 \x01(\tR\bscrapeId\x129\n" +
	"\fstart_scrape\x18\x02 \x01(\v2\x14.central.StartScrapeH\x00R\vstartScrape\x126\n" +
	"\vkill_scrape\x18\x03 \x01(\v2\x13.central.KillScrapeH\x00R\n" +
	"killScrapeB\t\n" +
	"\acommand\"I\n" +
	"\vStartScrape\x12\x1c\n" +
	"\thostnames\x18\x01 \x03(\tR\thostnames\x12\x1c\n" +
	"\tstandards\x18\x02 \x03(\tR\tstandards\"\f\n" +
	"\n" +
	"KillScrape\"\x85\x02\n" +
	"\fScrapeUpdate\x12\x1b\n" +
	"\tscrape_id\x18\x01 \x01(\tR\bscrapeId\x12O\n" +
	"\x11compliance_return\x18\x02 \x01(\v2\x1c.compliance.ComplianceReturnB\x02(\x01H\x00R\x10complianceReturn\x12?\n" +
	"\x0escrape_started\x18\x03 \x01(\v2\x16.central.ScrapeStartedH\x00R\rscrapeStarted\x12<\n" +
	"\rscrape_killed\x18\x04 \x01(\v2\x15.central.ScrapeKilledH\x00R\fscrapeKilledB\b\n" +
	"\x06update\"4\n" +
	"\rScrapeStarted\x12#\n" +
	"\rerror_message\x18\x01 \x01(\tR\ferrorMessage\"3\n" +
	"\fScrapeKilled\x12#\n" +
	"\rerror_message\x18\x01 \x01(\tR\ferrorMessage\"\xb3\x02\n" +
	"\x16NetworkPoliciesCommand\x12\x15\n" +
	"\x06seq_id\x18\x01 \x01(\x03R\x05seqId\x12A\n" +
	"\apayload\x18\x02 \x01(\v2'.central.NetworkPoliciesCommand.PayloadR\apayload\x1an\n" +
	"\x05Apply\x12\x19\n" +
	"\bapply_id\x18\x01 \x01(\tR\aapplyId\x12J\n" +
	"\fmodification\x18\x02 \x01(\v2\".storage.NetworkPolicyModificationB\x02(\x01R\fmodification\x1aO\n" +
	"\aPayload\x12=\n" +
	"\x05apply\x18\x01 \x01(\v2%.central.NetworkPoliciesCommand.ApplyH\x00R\x05applyB\x05\n" +
	"\x03cmd\"\xa3\x03\n" +
	"\x17NetworkPoliciesResponse\x12\x15\n" +
	"\x06seq_id\x18\x01 \x01(\x03R\x05seqId\x12B\n" +
	"\apayload\x18\x02 \x01(\v2(.central.NetworkPoliciesResponse.PayloadR\apayload\x1aw\n" +
	"\x05Apply\x12\x19\n" +
	"\bapply_id\x18\x01 \x01(\tR\aapplyId\x12S\n" +
	"\x11undo_modification\x18\x02 \x01(\v2\".storage.NetworkPolicyModificationB\x02(\x01R\x10undoModification\x1a!\n" +
	"\x05Error\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x1a\x90\x01\n" +
	"\aPayload\x12>\n" +
	"\x05error\x18\x01 \x01(\v2&.central.NetworkPoliciesResponse.ErrorH\x00R\x05error\x12>\n" +
	"\x05apply\x18\x02 \x01(\v2&.central.NetworkPoliciesResponse.ApplyH\x00R\x05applyB\x05\n" +
	"\x03cmd*}\n" +
	"\x0eResourceAction\x12\x19\n" +
	"\x15UNSET_ACTION_RESOURCE\x10\x00\x12\x13\n" +
	"\x0fCREATE_RESOURCE\x10\x01\x12\x13\n" +
	"\x0fREMOVE_RESOURCE\x10\x02\x12\x13\n" +
	"\x0fUPDATE_RESOURCE\x10\x03\x12\x11\n" +
	"\rSYNC_RESOURCE\x10\x04B'Z\x1d./internalapi/central;central\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_internalapi_central_sensor_events_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_internalapi_central_sensor_events_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_internalapi_central_sensor_events_proto_goTypes = []any{
	(ResourceAction)(0),                                  // 0: central.ResourceAction
	(AlertResults_Source)(0),                             // 1: central.AlertResults.Source
	(*ReprocessDeploymentRisk)(nil),                      // 2: central.ReprocessDeploymentRisk
	(*AlertResults)(nil),                                 // 3: central.AlertResults
	(*Timing)(nil),                                       // 4: central.Timing
	(*SensorEvent)(nil),                                  // 5: central.SensorEvent
	(*SensorEnforcement)(nil),                            // 6: central.SensorEnforcement
	(*DeploymentEnforcement)(nil),                        // 7: central.DeploymentEnforcement
	(*ContainerInstanceEnforcement)(nil),                 // 8: central.ContainerInstanceEnforcement
	(*ScrapeCommand)(nil),                                // 9: central.ScrapeCommand
	(*StartScrape)(nil),                                  // 10: central.StartScrape
	(*KillScrape)(nil),                                   // 11: central.KillScrape
	(*ScrapeUpdate)(nil),                                 // 12: central.ScrapeUpdate
	(*ScrapeStarted)(nil),                                // 13: central.ScrapeStarted
	(*ScrapeKilled)(nil),                                 // 14: central.ScrapeKilled
	(*NetworkPoliciesCommand)(nil),                       // 15: central.NetworkPoliciesCommand
	(*NetworkPoliciesResponse)(nil),                      // 16: central.NetworkPoliciesResponse
	(*SensorEvent_ResourcesSynced)(nil),                  // 17: central.SensorEvent.ResourcesSynced
	(*NetworkPoliciesCommand_Apply)(nil),                 // 18: central.NetworkPoliciesCommand.Apply
	(*NetworkPoliciesCommand_Payload)(nil),               // 19: central.NetworkPoliciesCommand.Payload
	(*NetworkPoliciesResponse_Apply)(nil),                // 20: central.NetworkPoliciesResponse.Apply
	(*NetworkPoliciesResponse_Error)(nil),                // 21: central.NetworkPoliciesResponse.Error
	(*NetworkPoliciesResponse_Payload)(nil),              // 22: central.NetworkPoliciesResponse.Payload
	(*storage.Alert)(nil),                                // 23: storage.Alert
	(storage.LifecycleStage)(0),                          // 24: storage.LifecycleStage
	(*storage.NetworkPolicy)(nil),                        // 25: storage.NetworkPolicy
	(*storage.Deployment)(nil),                           // 26: storage.Deployment
	(*storage.Pod)(nil),                                  // 27: storage.Pod
	(*storage.NamespaceMetadata)(nil),                    // 28: storage.NamespaceMetadata
	(*storage.Secret)(nil),                               // 29: storage.Secret
	(*storage.Node)(nil),                                 // 30: storage.Node
	(*storage.NodeInventory)(nil),                        // 31: storage.NodeInventory
	(*v4.IndexReport)(nil),                               // 32: scanner.v4.IndexReport
	(*storage.ServiceAccount)(nil),                       // 33: storage.ServiceAccount
	(*storage.K8SRole)(nil),                              // 34: storage.K8sRole
	(*storage.K8SRoleBinding)(nil),                       // 35: storage.K8sRoleBinding
	(*storage.ProcessIndicator)(nil),                     // 36: storage.ProcessIndicator
	(*storage.ProviderMetadata)(nil),                     // 37: storage.ProviderMetadata
	(*storage.OrchestratorMetadata)(nil),                 // 38: storage.OrchestratorMetadata
	(*storage.ImageIntegration)(nil),                     // 39: storage.ImageIntegration
	(*storage.ComplianceOperatorCheckResult)(nil),        // 40: storage.ComplianceOperatorCheckResult
	(*storage.ComplianceOperatorProfile)(nil),            // 41: storage.ComplianceOperatorProfile
	(*storage.ComplianceOperatorRule)(nil),               // 42: storage.ComplianceOperatorRule
	(*storage.ComplianceOperatorScanSettingBinding)(nil), // 43: storage.ComplianceOperatorScanSettingBinding
	(*storage.ComplianceOperatorScan)(nil),               // 44: storage.ComplianceOperatorScan
	(*v1.IndexReportEvent)(nil),                          // 45: virtualmachine.v1.IndexReportEvent
	(*v1.VirtualMachine)(nil),                            // 46: virtualmachine.v1.VirtualMachine
	(*ComplianceOperatorCheckResultV2)(nil),              // 47: central.ComplianceOperatorCheckResultV2
	(*ComplianceOperatorProfileV2)(nil),                  // 48: central.ComplianceOperatorProfileV2
	(*ComplianceOperatorRuleV2)(nil),                     // 49: central.ComplianceOperatorRuleV2
	(*ComplianceOperatorScanV2)(nil),                     // 50: central.ComplianceOperatorScanV2
	(*ComplianceOperatorScanSettingBindingV2)(nil),       // 51: central.ComplianceOperatorScanSettingBindingV2
	(*ComplianceOperatorSuiteV2)(nil),                    // 52: central.ComplianceOperatorSuiteV2
	(*ComplianceOperatorRemediationV2)(nil),              // 53: central.ComplianceOperatorRemediationV2
	(storage.EnforcementAction)(0),                       // 54: storage.EnforcementAction
	(*compliance.ComplianceReturn)(nil),                  // 55: compliance.ComplianceReturn
	(*storage.NetworkPolicyModification)(nil),            // 56: storage.NetworkPolicyModification
}
var file_internalapi_central_sensor_events_proto_depIdxs = []int32{
	23, // 0: central.AlertResults.alerts:type_name -> storage.Alert
	24, // 1: central.AlertResults.stage:type_name -> storage.LifecycleStage
	1,  // 2: central.AlertResults.source:type_name -> central.AlertResults.Source
	0,  // 3: central.SensorEvent.action:type_name -> central.ResourceAction
	4,  // 4: central.SensorEvent.timing:type_name -> central.Timing
	25, // 5: central.SensorEvent.network_policy:type_name -> storage.NetworkPolicy
	26, // 6: central.SensorEvent.deployment:type_name -> storage.Deployment
	27, // 7: central.SensorEvent.pod:type_name -> storage.Pod
	28, // 8: central.SensorEvent.namespace:type_name -> storage.NamespaceMetadata
	29, // 9: central.SensorEvent.secret:type_name -> storage.Secret
	30, // 10: central.SensorEvent.node:type_name -> storage.Node
	31, // 11: central.SensorEvent.node_inventory:type_name -> storage.NodeInventory
	32, // 12: central.SensorEvent.index_report:type_name -> scanner.v4.IndexReport
	33, // 13: central.SensorEvent.service_account:type_name -> storage.ServiceAccount
	34, // 14: central.SensorEvent.role:type_name -> storage.K8sRole
	35, // 15: central.SensorEvent.binding:type_name -> storage.K8sRoleBinding
	36, // 16: central.SensorEvent.process_indicator:type_name -> storage.ProcessIndicator
	37, // 17: central.SensorEvent.provider_metadata:type_name -> storage.ProviderMetadata
	17, // 18: central.SensorEvent.synced:type_name -> central.SensorEvent.ResourcesSynced
	38, // 19: central.SensorEvent.orchestrator_metadata:type_name -> storage.OrchestratorMetadata
	39, // 20: central.SensorEvent.image_integration:type_name -> storage.ImageIntegration
	2,  // 21: central.SensorEvent.reprocess_deployment:type_name -> central.ReprocessDeploymentRisk
	3,  // 22: central.SensorEvent.alert_results:type_name -> central.AlertResults
	40, // 23: central.SensorEvent.compliance_operator_result:type_name -> storage.ComplianceOperatorCheckResult
	41, // 24: central.SensorEvent.compliance_operator_profile:type_name -> storage.ComplianceOperatorProfile
	42, // 25: central.SensorEvent.compliance_operator_rule:type_name -> storage.ComplianceOperatorRule
	43, // 26: central.SensorEvent.compliance_operator_scan_setting_binding:type_name -> storage.ComplianceOperatorScanSettingBinding
	44, // 27: central.SensorEvent.compliance_operator_scan:type_name -> storage.ComplianceOperatorScan
	45, // 28: central.SensorEvent.virtual_machine_index_report:type_name -> virtualmachine.v1.IndexReportEvent
	46, // 29: central.SensorEvent.virtual_machine:type_name -> virtualmachine.v1.VirtualMachine
	47, // 30: central.SensorEvent.compliance_operator_result_v2:type_name -> central.ComplianceOperatorCheckResultV2
	48, // 31: central.SensorEvent.compliance_operator_profile_v2:type_name -> central.ComplianceOperatorProfileV2
	49, // 32: central.SensorEvent.compliance_operator_rule_v2:type_name -> central.ComplianceOperatorRuleV2
	50, // 33: central.SensorEvent.compliance_operator_scan_v2:type_name -> central.ComplianceOperatorScanV2
	51, // 34: central.SensorEvent.compliance_operator_scan_setting_binding_v2:type_name -> central.ComplianceOperatorScanSettingBindingV2
	52, // 35: central.SensorEvent.compliance_operator_suite_v2:type_name -> central.ComplianceOperatorSuiteV2
	53, // 36: central.SensorEvent.compliance_operator_remediation_v2:type_name -> central.ComplianceOperatorRemediationV2
	54, // 37: central.SensorEnforcement.enforcement:type_name -> storage.EnforcementAction
	7,  // 38: central.SensorEnforcement.deployment:type_name -> central.DeploymentEnforcement
	8,  // 39: central.SensorEnforcement.container_instance:type_name -> central.ContainerInstanceEnforcement
	7,  // 40: central.ContainerInstanceEnforcement.deployment_enforcement:type_name -> central.DeploymentEnforcement
	10, // 41: central.ScrapeCommand.start_scrape:type_name -> central.StartScrape
	11, // 42: central.ScrapeCommand.kill_scrape:type_name -> central.KillScrape
	55, // 43: central.ScrapeUpdate.compliance_return:type_name -> compliance.ComplianceReturn
	13, // 44: central.ScrapeUpdate.scrape_started:type_name -> central.ScrapeStarted
	14, // 45: central.ScrapeUpdate.scrape_killed:type_name -> central.ScrapeKilled
	19, // 46: central.NetworkPoliciesCommand.payload:type_name -> central.NetworkPoliciesCommand.Payload
	22, // 47: central.NetworkPoliciesResponse.payload:type_name -> central.NetworkPoliciesResponse.Payload
	56, // 48: central.NetworkPoliciesCommand.Apply.modification:type_name -> storage.NetworkPolicyModification
	18, // 49: central.NetworkPoliciesCommand.Payload.apply:type_name -> central.NetworkPoliciesCommand.Apply
	56, // 50: central.NetworkPoliciesResponse.Apply.undo_modification:type_name -> storage.NetworkPolicyModification
	21, // 51: central.NetworkPoliciesResponse.Payload.error:type_name -> central.NetworkPoliciesResponse.Error
	20, // 52: central.NetworkPoliciesResponse.Payload.apply:type_name -> central.NetworkPoliciesResponse.Apply
	53, // [53:53] is the sub-list for method output_type
	53, // [53:53] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_internalapi_central_sensor_events_proto_init() }
func file_internalapi_central_sensor_events_proto_init() {
	if File_internalapi_central_sensor_events_proto != nil {
		return
	}
	file_internalapi_central_compliance_operator_proto_init()
	file_internalapi_central_sensor_events_proto_msgTypes[3].OneofWrappers = []any{
		(*sensorEvent_SensorHash)(nil),
		(*sensorEvent_NetworkPolicy)(nil),
		(*sensorEvent_Deployment)(nil),
		(*sensorEvent_Pod)(nil),
		(*sensorEvent_Namespace)(nil),
		(*sensorEvent_Secret)(nil),
		(*sensorEvent_Node)(nil),
		(*sensorEvent_NodeInventory)(nil),
		(*sensorEvent_IndexReport)(nil),
		(*sensorEvent_ServiceAccount)(nil),
		(*sensorEvent_Role)(nil),
		(*sensorEvent_Binding)(nil),
		(*sensorEvent_ProcessIndicator)(nil),
		(*sensorEvent_ProviderMetadata)(nil),
		(*sensorEvent_Synced)(nil),
		(*sensorEvent_OrchestratorMetadata)(nil),
		(*sensorEvent_ImageIntegration)(nil),
		(*sensorEvent_ReprocessDeployment)(nil),
		(*sensorEvent_AlertResults)(nil),
		(*sensorEvent_ComplianceOperatorResult)(nil),
		(*sensorEvent_ComplianceOperatorProfile)(nil),
		(*sensorEvent_ComplianceOperatorRule)(nil),
		(*sensorEvent_ComplianceOperatorScanSettingBinding)(nil),
		(*sensorEvent_ComplianceOperatorScan)(nil),
		(*sensorEvent_VirtualMachineIndexReport)(nil),
		(*sensorEvent_VirtualMachine)(nil),
		(*sensorEvent_ComplianceOperatorResultV2)(nil),
		(*sensorEvent_ComplianceOperatorProfileV2)(nil),
		(*sensorEvent_ComplianceOperatorRuleV2)(nil),
		(*sensorEvent_ComplianceOperatorScanV2)(nil),
		(*sensorEvent_ComplianceOperatorScanSettingBindingV2)(nil),
		(*sensorEvent_ComplianceOperatorSuiteV2)(nil),
		(*sensorEvent_ComplianceOperatorRemediationV2)(nil),
	}
	file_internalapi_central_sensor_events_proto_msgTypes[4].OneofWrappers = []any{
		(*sensorEnforcement_Deployment)(nil),
		(*sensorEnforcement_ContainerInstance)(nil),
	}
	file_internalapi_central_sensor_events_proto_msgTypes[7].OneofWrappers = []any{
		(*scrapeCommand_StartScrape)(nil),
		(*scrapeCommand_KillScrape)(nil),
	}
	file_internalapi_central_sensor_events_proto_msgTypes[10].OneofWrappers = []any{
		(*scrapeUpdate_ComplianceReturn)(nil),
		(*scrapeUpdate_ScrapeStarted)(nil),
		(*scrapeUpdate_ScrapeKilled)(nil),
	}
	file_internalapi_central_sensor_events_proto_msgTypes[17].OneofWrappers = []any{
		(*networkPoliciesCommand_Payload_Apply)(nil),
	}
	file_internalapi_central_sensor_events_proto_msgTypes[20].OneofWrappers = []any{
		(*networkPoliciesResponse_Payload_Error)(nil),
		(*networkPoliciesResponse_Payload_Apply)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internalapi_central_sensor_events_proto_rawDesc), len(file_internalapi_central_sensor_events_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internalapi_central_sensor_events_proto_goTypes,
		DependencyIndexes: file_internalapi_central_sensor_events_proto_depIdxs,
		EnumInfos:         file_internalapi_central_sensor_events_proto_enumTypes,
		MessageInfos:      file_internalapi_central_sensor_events_proto_msgTypes,
	}.Build()
	File_internalapi_central_sensor_events_proto = out.File
	file_internalapi_central_sensor_events_proto_goTypes = nil
	file_internalapi_central_sensor_events_proto_depIdxs = nil
}
