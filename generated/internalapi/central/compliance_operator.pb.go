// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internalapi/central/compliance_operator.proto

package central

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ComplianceOperatorInfo has basic info and status about the compliance operator.
type ComplianceOperatorInfo struct {
	Version   string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The following fields are made optional/nullable because there can be errors when trying to obtain them.
	//
	// Types that are valid to be assigned to TotalDesiredPodsOpt:
	//	*ComplianceOperatorInfo_TotalDesiredPods
	TotalDesiredPodsOpt isComplianceOperatorInfo_TotalDesiredPodsOpt `protobuf_oneof:"total_desired_pods_opt"`
	// Types that are valid to be assigned to TotalReadyPodsOpt:
	//	*ComplianceOperatorInfo_TotalReadyPods
	TotalReadyPodsOpt isComplianceOperatorInfo_TotalReadyPodsOpt `protobuf_oneof:"total_ready_pods_opt"`
	// Collection of errors that occurred while trying to obtain collector health info.
	StatusErrors         []string `protobuf:"bytes,5,rep,name=status_errors,json=statusErrors,proto3" json:"status_errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComplianceOperatorInfo) Reset()         { *m = ComplianceOperatorInfo{} }
func (m *ComplianceOperatorInfo) String() string { return proto.CompactTextString(m) }
func (*ComplianceOperatorInfo) ProtoMessage()    {}
func (*ComplianceOperatorInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b16c1ba535ff8dc9, []int{0}
}
func (m *ComplianceOperatorInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ComplianceOperatorInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ComplianceOperatorInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ComplianceOperatorInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComplianceOperatorInfo.Merge(m, src)
}
func (m *ComplianceOperatorInfo) XXX_Size() int {
	return m.Size()
}
func (m *ComplianceOperatorInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ComplianceOperatorInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ComplianceOperatorInfo proto.InternalMessageInfo

type isComplianceOperatorInfo_TotalDesiredPodsOpt interface {
	isComplianceOperatorInfo_TotalDesiredPodsOpt()
	MarshalTo([]byte) (int, error)
	Size() int
	Clone() isComplianceOperatorInfo_TotalDesiredPodsOpt
}
type isComplianceOperatorInfo_TotalReadyPodsOpt interface {
	isComplianceOperatorInfo_TotalReadyPodsOpt()
	MarshalTo([]byte) (int, error)
	Size() int
	Clone() isComplianceOperatorInfo_TotalReadyPodsOpt
}

type ComplianceOperatorInfo_TotalDesiredPods struct {
	TotalDesiredPods int32 `protobuf:"varint,3,opt,name=total_desired_pods,json=totalDesiredPods,proto3,oneof" json:"total_desired_pods,omitempty"`
}
type ComplianceOperatorInfo_TotalReadyPods struct {
	TotalReadyPods int32 `protobuf:"varint,4,opt,name=total_ready_pods,json=totalReadyPods,proto3,oneof" json:"total_ready_pods,omitempty"`
}

func (*ComplianceOperatorInfo_TotalDesiredPods) isComplianceOperatorInfo_TotalDesiredPodsOpt() {}
func (m *ComplianceOperatorInfo_TotalDesiredPods) Clone() isComplianceOperatorInfo_TotalDesiredPodsOpt {
	if m == nil {
		return nil
	}
	cloned := new(ComplianceOperatorInfo_TotalDesiredPods)
	*cloned = *m

	return cloned
}
func (*ComplianceOperatorInfo_TotalReadyPods) isComplianceOperatorInfo_TotalReadyPodsOpt() {}
func (m *ComplianceOperatorInfo_TotalReadyPods) Clone() isComplianceOperatorInfo_TotalReadyPodsOpt {
	if m == nil {
		return nil
	}
	cloned := new(ComplianceOperatorInfo_TotalReadyPods)
	*cloned = *m

	return cloned
}

func (m *ComplianceOperatorInfo) GetTotalDesiredPodsOpt() isComplianceOperatorInfo_TotalDesiredPodsOpt {
	if m != nil {
		return m.TotalDesiredPodsOpt
	}
	return nil
}
func (m *ComplianceOperatorInfo) GetTotalReadyPodsOpt() isComplianceOperatorInfo_TotalReadyPodsOpt {
	if m != nil {
		return m.TotalReadyPodsOpt
	}
	return nil
}

func (m *ComplianceOperatorInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ComplianceOperatorInfo) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *ComplianceOperatorInfo) GetTotalDesiredPods() int32 {
	if x, ok := m.GetTotalDesiredPodsOpt().(*ComplianceOperatorInfo_TotalDesiredPods); ok {
		return x.TotalDesiredPods
	}
	return 0
}

func (m *ComplianceOperatorInfo) GetTotalReadyPods() int32 {
	if x, ok := m.GetTotalReadyPodsOpt().(*ComplianceOperatorInfo_TotalReadyPods); ok {
		return x.TotalReadyPods
	}
	return 0
}

func (m *ComplianceOperatorInfo) GetStatusErrors() []string {
	if m != nil {
		return m.StatusErrors
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ComplianceOperatorInfo) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ComplianceOperatorInfo_TotalDesiredPods)(nil),
		(*ComplianceOperatorInfo_TotalReadyPods)(nil),
	}
}

func (m *ComplianceOperatorInfo) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ComplianceOperatorInfo) Clone() *ComplianceOperatorInfo {
	if m == nil {
		return nil
	}
	cloned := new(ComplianceOperatorInfo)
	*cloned = *m

	if m.TotalDesiredPodsOpt != nil {
		cloned.TotalDesiredPodsOpt = m.TotalDesiredPodsOpt.Clone()
	}
	if m.TotalReadyPodsOpt != nil {
		cloned.TotalReadyPodsOpt = m.TotalReadyPodsOpt.Clone()
	}
	if m.StatusErrors != nil {
		cloned.StatusErrors = make([]string, len(m.StatusErrors))
		copy(cloned.StatusErrors, m.StatusErrors)
	}
	return cloned
}

func init() {
	proto.RegisterType((*ComplianceOperatorInfo)(nil), "central.ComplianceOperatorInfo")
}

func init() {
	proto.RegisterFile("internalapi/central/compliance_operator.proto", fileDescriptor_b16c1ba535ff8dc9)
}

var fileDescriptor_b16c1ba535ff8dc9 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4a, 0x33, 0x31,
	0x14, 0x46, 0x9b, 0xf6, 0xef, 0x5f, 0x26, 0xa8, 0x48, 0x90, 0x21, 0x82, 0x0c, 0x83, 0x6e, 0x06,
	0xc1, 0x76, 0xe1, 0x1b, 0x54, 0x05, 0x5d, 0x29, 0xb3, 0x74, 0x13, 0xae, 0x33, 0x57, 0x08, 0x4c,
	0x73, 0xc3, 0x4d, 0x14, 0x5c, 0xfb, 0x12, 0x3e, 0x92, 0x4b, 0x1f, 0x41, 0xc6, 0x17, 0x11, 0x33,
	0xad, 0x82, 0x2e, 0x73, 0xce, 0x81, 0x5c, 0x3e, 0x79, 0x62, 0x5d, 0x44, 0x76, 0xd0, 0x81, 0xb7,
	0x8b, 0x06, 0x5d, 0x64, 0xe8, 0x16, 0x0d, 0xad, 0x7c, 0x67, 0xc1, 0x35, 0x68, 0xc8, 0x23, 0x43,
	0x24, 0x9e, 0x7b, 0xa6, 0x48, 0x6a, 0xb6, 0x4e, 0x0e, 0x9f, 0xc7, 0x32, 0x3f, 0xfb, 0xce, 0xae,
	0xd7, 0xd5, 0x95, 0xbb, 0x27, 0xa5, 0xe5, 0xec, 0x11, 0x39, 0x58, 0x72, 0x5a, 0x94, 0xa2, 0xca,
	0xea, 0xcd, 0x53, 0x1d, 0xc8, 0xcc, 0xc1, 0x0a, 0x83, 0x87, 0x06, 0xf5, 0x38, 0xb9, 0x1f, 0xa0,
	0xe6, 0x52, 0x45, 0x8a, 0xd0, 0x99, 0x16, 0x83, 0x65, 0x6c, 0x8d, 0xa7, 0x36, 0xe8, 0x49, 0x29,
	0xaa, 0xe9, 0xe5, 0xa8, 0xde, 0x4d, 0xee, 0x7c, 0x50, 0x37, 0xd4, 0x06, 0x75, 0x2c, 0x07, 0x66,
	0x18, 0xa1, 0x7d, 0x1a, 0xea, 0x7f, 0xa9, 0x16, 0xf5, 0x4e, 0x32, 0xf5, 0x97, 0x48, 0xed, 0x91,
	0xdc, 0x0e, 0x11, 0xe2, 0x43, 0x30, 0xc8, 0x4c, 0x1c, 0xf4, 0xb4, 0x9c, 0x54, 0x59, 0xbd, 0x35,
	0xc0, 0x8b, 0xc4, 0x96, 0x5a, 0xe6, 0x7f, 0x0f, 0x30, 0xe4, 0xe3, 0x32, 0x97, 0x7b, 0xbf, 0xbf,
	0x4a, 0x7c, 0xff, 0xb5, 0x2f, 0xc4, 0x5b, 0x5f, 0x88, 0xf7, 0xbe, 0x10, 0x2f, 0x1f, 0xc5, 0xe8,
	0x76, 0x33, 0xd0, 0xdd, 0xff, 0x34, 0xd8, 0xe9, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x61, 0x38,
	0x4a, 0x6c, 0x61, 0x01, 0x00, 0x00,
}

func (m *ComplianceOperatorInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ComplianceOperatorInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ComplianceOperatorInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.StatusErrors) > 0 {
		for iNdEx := len(m.StatusErrors) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.StatusErrors[iNdEx])
			copy(dAtA[i:], m.StatusErrors[iNdEx])
			i = encodeVarintComplianceOperator(dAtA, i, uint64(len(m.StatusErrors[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.TotalReadyPodsOpt != nil {
		{
			size := m.TotalReadyPodsOpt.Size()
			i -= size
			if _, err := m.TotalReadyPodsOpt.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.TotalDesiredPodsOpt != nil {
		{
			size := m.TotalDesiredPodsOpt.Size()
			i -= size
			if _, err := m.TotalDesiredPodsOpt.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if len(m.Namespace) > 0 {
		i -= len(m.Namespace)
		copy(dAtA[i:], m.Namespace)
		i = encodeVarintComplianceOperator(dAtA, i, uint64(len(m.Namespace)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Version) > 0 {
		i -= len(m.Version)
		copy(dAtA[i:], m.Version)
		i = encodeVarintComplianceOperator(dAtA, i, uint64(len(m.Version)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ComplianceOperatorInfo_TotalDesiredPods) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ComplianceOperatorInfo_TotalDesiredPods) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i = encodeVarintComplianceOperator(dAtA, i, uint64(m.TotalDesiredPods))
	i--
	dAtA[i] = 0x18
	return len(dAtA) - i, nil
}
func (m *ComplianceOperatorInfo_TotalReadyPods) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ComplianceOperatorInfo_TotalReadyPods) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i = encodeVarintComplianceOperator(dAtA, i, uint64(m.TotalReadyPods))
	i--
	dAtA[i] = 0x20
	return len(dAtA) - i, nil
}
func encodeVarintComplianceOperator(dAtA []byte, offset int, v uint64) int {
	offset -= sovComplianceOperator(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ComplianceOperatorInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Version)
	if l > 0 {
		n += 1 + l + sovComplianceOperator(uint64(l))
	}
	l = len(m.Namespace)
	if l > 0 {
		n += 1 + l + sovComplianceOperator(uint64(l))
	}
	if m.TotalDesiredPodsOpt != nil {
		n += m.TotalDesiredPodsOpt.Size()
	}
	if m.TotalReadyPodsOpt != nil {
		n += m.TotalReadyPodsOpt.Size()
	}
	if len(m.StatusErrors) > 0 {
		for _, s := range m.StatusErrors {
			l = len(s)
			n += 1 + l + sovComplianceOperator(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ComplianceOperatorInfo_TotalDesiredPods) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovComplianceOperator(uint64(m.TotalDesiredPods))
	return n
}
func (m *ComplianceOperatorInfo_TotalReadyPods) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovComplianceOperator(uint64(m.TotalReadyPods))
	return n
}

func sovComplianceOperator(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozComplianceOperator(x uint64) (n int) {
	return sovComplianceOperator(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ComplianceOperatorInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowComplianceOperator
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ComplianceOperatorInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ComplianceOperatorInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceOperator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthComplianceOperator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceOperator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Version = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceOperator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthComplianceOperator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceOperator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Namespace = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalDesiredPods", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceOperator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TotalDesiredPodsOpt = &ComplianceOperatorInfo_TotalDesiredPods{v}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalReadyPods", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceOperator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TotalReadyPodsOpt = &ComplianceOperatorInfo_TotalReadyPods{v}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusErrors", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowComplianceOperator
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthComplianceOperator
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthComplianceOperator
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StatusErrors = append(m.StatusErrors, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipComplianceOperator(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthComplianceOperator
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipComplianceOperator(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowComplianceOperator
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowComplianceOperator
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowComplianceOperator
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthComplianceOperator
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupComplianceOperator
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthComplianceOperator
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthComplianceOperator        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowComplianceOperator          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupComplianceOperator = fmt.Errorf("proto: unexpected end of group")
)
