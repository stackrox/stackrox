// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internalapi/central/development_service.proto

// This is an internal service which contains tools intended to be used only for testing.
// It will NOT be available in Central in production builds.

package central

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type URLHasValidCertResponse_URLResult int32

const (
	URLHasValidCertResponse_UNSET                                        URLHasValidCertResponse_URLResult = 0
	URLHasValidCertResponse_CERT_SIGNED_BY_UNKNOWN_AUTHORITY             URLHasValidCertResponse_URLResult = 1
	URLHasValidCertResponse_CERT_SIGNING_AUTHORITY_VALID_BUT_OTHER_ERROR URLHasValidCertResponse_URLResult = 2
	URLHasValidCertResponse_OTHER_GET_ERROR                              URLHasValidCertResponse_URLResult = 3
	URLHasValidCertResponse_REQUEST_SUCCEEDED                            URLHasValidCertResponse_URLResult = 4
)

var URLHasValidCertResponse_URLResult_name = map[int32]string{
	0: "UNSET",
	1: "CERT_SIGNED_BY_UNKNOWN_AUTHORITY",
	2: "CERT_SIGNING_AUTHORITY_VALID_BUT_OTHER_ERROR",
	3: "OTHER_GET_ERROR",
	4: "REQUEST_SUCCEEDED",
}

var URLHasValidCertResponse_URLResult_value = map[string]int32{
	"UNSET":                            0,
	"CERT_SIGNED_BY_UNKNOWN_AUTHORITY": 1,
	"CERT_SIGNING_AUTHORITY_VALID_BUT_OTHER_ERROR": 2,
	"OTHER_GET_ERROR":   3,
	"REQUEST_SUCCEEDED": 4,
}

func (x URLHasValidCertResponse_URLResult) String() string {
	return proto.EnumName(URLHasValidCertResponse_URLResult_name, int32(x))
}

func (URLHasValidCertResponse_URLResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dd1e3814a9597ac5, []int{1, 0}
}

type URLHasValidCertRequest struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URLHasValidCertRequest) Reset()         { *m = URLHasValidCertRequest{} }
func (m *URLHasValidCertRequest) String() string { return proto.CompactTextString(m) }
func (*URLHasValidCertRequest) ProtoMessage()    {}
func (*URLHasValidCertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd1e3814a9597ac5, []int{0}
}
func (m *URLHasValidCertRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *URLHasValidCertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_URLHasValidCertRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *URLHasValidCertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLHasValidCertRequest.Merge(m, src)
}
func (m *URLHasValidCertRequest) XXX_Size() int {
	return m.Size()
}
func (m *URLHasValidCertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_URLHasValidCertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_URLHasValidCertRequest proto.InternalMessageInfo

func (m *URLHasValidCertRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *URLHasValidCertRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *URLHasValidCertRequest) Clone() *URLHasValidCertRequest {
	if m == nil {
		return nil
	}
	cloned := new(URLHasValidCertRequest)
	*cloned = *m

	return cloned
}

type URLHasValidCertResponse struct {
	Result               URLHasValidCertResponse_URLResult `protobuf:"varint,1,opt,name=result,proto3,enum=central.URLHasValidCertResponse_URLResult" json:"result,omitempty"`
	Details              string                            `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *URLHasValidCertResponse) Reset()         { *m = URLHasValidCertResponse{} }
func (m *URLHasValidCertResponse) String() string { return proto.CompactTextString(m) }
func (*URLHasValidCertResponse) ProtoMessage()    {}
func (*URLHasValidCertResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd1e3814a9597ac5, []int{1}
}
func (m *URLHasValidCertResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *URLHasValidCertResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_URLHasValidCertResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *URLHasValidCertResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLHasValidCertResponse.Merge(m, src)
}
func (m *URLHasValidCertResponse) XXX_Size() int {
	return m.Size()
}
func (m *URLHasValidCertResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_URLHasValidCertResponse.DiscardUnknown(m)
}

var xxx_messageInfo_URLHasValidCertResponse proto.InternalMessageInfo

func (m *URLHasValidCertResponse) GetResult() URLHasValidCertResponse_URLResult {
	if m != nil {
		return m.Result
	}
	return URLHasValidCertResponse_UNSET
}

func (m *URLHasValidCertResponse) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *URLHasValidCertResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *URLHasValidCertResponse) Clone() *URLHasValidCertResponse {
	if m == nil {
		return nil
	}
	cloned := new(URLHasValidCertResponse)
	*cloned = *m

	return cloned
}

type RandomDataRequest struct {
	Size_                int32    `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RandomDataRequest) Reset()         { *m = RandomDataRequest{} }
func (m *RandomDataRequest) String() string { return proto.CompactTextString(m) }
func (*RandomDataRequest) ProtoMessage()    {}
func (*RandomDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd1e3814a9597ac5, []int{2}
}
func (m *RandomDataRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RandomDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RandomDataRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RandomDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RandomDataRequest.Merge(m, src)
}
func (m *RandomDataRequest) XXX_Size() int {
	return m.Size()
}
func (m *RandomDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RandomDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RandomDataRequest proto.InternalMessageInfo

func (m *RandomDataRequest) GetSize_() int32 {
	if m != nil {
		return m.Size_
	}
	return 0
}

func (m *RandomDataRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *RandomDataRequest) Clone() *RandomDataRequest {
	if m == nil {
		return nil
	}
	cloned := new(RandomDataRequest)
	*cloned = *m

	return cloned
}

type RandomDataResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RandomDataResponse) Reset()         { *m = RandomDataResponse{} }
func (m *RandomDataResponse) String() string { return proto.CompactTextString(m) }
func (*RandomDataResponse) ProtoMessage()    {}
func (*RandomDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd1e3814a9597ac5, []int{3}
}
func (m *RandomDataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RandomDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RandomDataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RandomDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RandomDataResponse.Merge(m, src)
}
func (m *RandomDataResponse) XXX_Size() int {
	return m.Size()
}
func (m *RandomDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RandomDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RandomDataResponse proto.InternalMessageInfo

func (m *RandomDataResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RandomDataResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *RandomDataResponse) Clone() *RandomDataResponse {
	if m == nil {
		return nil
	}
	cloned := new(RandomDataResponse)
	*cloned = *m

	if m.Data != nil {
		cloned.Data = make([]byte, len(m.Data))
		copy(cloned.Data, m.Data)
	}
	return cloned
}

type EnvVarsResponse struct {
	EnvVars              []string `protobuf:"bytes,1,rep,name=env_vars,json=envVars,proto3" json:"env_vars,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnvVarsResponse) Reset()         { *m = EnvVarsResponse{} }
func (m *EnvVarsResponse) String() string { return proto.CompactTextString(m) }
func (*EnvVarsResponse) ProtoMessage()    {}
func (*EnvVarsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd1e3814a9597ac5, []int{4}
}
func (m *EnvVarsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EnvVarsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EnvVarsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EnvVarsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnvVarsResponse.Merge(m, src)
}
func (m *EnvVarsResponse) XXX_Size() int {
	return m.Size()
}
func (m *EnvVarsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EnvVarsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EnvVarsResponse proto.InternalMessageInfo

func (m *EnvVarsResponse) GetEnvVars() []string {
	if m != nil {
		return m.EnvVars
	}
	return nil
}

func (m *EnvVarsResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *EnvVarsResponse) Clone() *EnvVarsResponse {
	if m == nil {
		return nil
	}
	cloned := new(EnvVarsResponse)
	*cloned = *m

	if m.EnvVars != nil {
		cloned.EnvVars = make([]string, len(m.EnvVars))
		copy(cloned.EnvVars, m.EnvVars)
	}
	return cloned
}

type ReconciliationStatsByClusterResponse struct {
	Stats                []*ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                              `json:"-"`
	XXX_unrecognized     []byte                                                                `json:"-"`
	XXX_sizecache        int32                                                                 `json:"-"`
}

func (m *ReconciliationStatsByClusterResponse) Reset()         { *m = ReconciliationStatsByClusterResponse{} }
func (m *ReconciliationStatsByClusterResponse) String() string { return proto.CompactTextString(m) }
func (*ReconciliationStatsByClusterResponse) ProtoMessage()    {}
func (*ReconciliationStatsByClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd1e3814a9597ac5, []int{5}
}
func (m *ReconciliationStatsByClusterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReconciliationStatsByClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReconciliationStatsByClusterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReconciliationStatsByClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReconciliationStatsByClusterResponse.Merge(m, src)
}
func (m *ReconciliationStatsByClusterResponse) XXX_Size() int {
	return m.Size()
}
func (m *ReconciliationStatsByClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReconciliationStatsByClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReconciliationStatsByClusterResponse proto.InternalMessageInfo

func (m *ReconciliationStatsByClusterResponse) GetStats() []*ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *ReconciliationStatsByClusterResponse) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ReconciliationStatsByClusterResponse) Clone() *ReconciliationStatsByClusterResponse {
	if m == nil {
		return nil
	}
	cloned := new(ReconciliationStatsByClusterResponse)
	*cloned = *m

	if m.Stats != nil {
		cloned.Stats = make([]*ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster, len(m.Stats))
		for idx, v := range m.Stats {
			cloned.Stats[idx] = v.Clone()
		}
	}
	return cloned
}

type ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster struct {
	ClusterId            string           `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	ReconciliationDone   bool             `protobuf:"varint,2,opt,name=reconciliation_done,json=reconciliationDone,proto3" json:"reconciliation_done,omitempty"`
	DeletedObjectsByType map[string]int32 `protobuf:"bytes,3,rep,name=deleted_objects_by_type,json=deletedObjectsByType,proto3" json:"deleted_objects_by_type,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) Reset() {
	*m = ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster{}
}
func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) String() string {
	return proto.CompactTextString(m)
}
func (*ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) ProtoMessage() {}
func (*ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd1e3814a9597ac5, []int{5, 0}
}
func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster.Merge(m, src)
}
func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) XXX_Size() int {
	return m.Size()
}
func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster.DiscardUnknown(m)
}

var xxx_messageInfo_ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster proto.InternalMessageInfo

func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) GetReconciliationDone() bool {
	if m != nil {
		return m.ReconciliationDone
	}
	return false
}

func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) GetDeletedObjectsByType() map[string]int32 {
	if m != nil {
		return m.DeletedObjectsByType
	}
	return nil
}

func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) Clone() *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster {
	if m == nil {
		return nil
	}
	cloned := new(ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster)
	*cloned = *m

	if m.DeletedObjectsByType != nil {
		cloned.DeletedObjectsByType = make(map[string]int32, len(m.DeletedObjectsByType))
		for k, v := range m.DeletedObjectsByType {
			cloned.DeletedObjectsByType[k] = v
		}
	}
	return cloned
}

type ReplicateImageRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Times                int32    `protobuf:"varint,2,opt,name=times,proto3" json:"times,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicateImageRequest) Reset()         { *m = ReplicateImageRequest{} }
func (m *ReplicateImageRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicateImageRequest) ProtoMessage()    {}
func (*ReplicateImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd1e3814a9597ac5, []int{6}
}
func (m *ReplicateImageRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReplicateImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReplicateImageRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReplicateImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicateImageRequest.Merge(m, src)
}
func (m *ReplicateImageRequest) XXX_Size() int {
	return m.Size()
}
func (m *ReplicateImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicateImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicateImageRequest proto.InternalMessageInfo

func (m *ReplicateImageRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReplicateImageRequest) GetTimes() int32 {
	if m != nil {
		return m.Times
	}
	return 0
}

func (m *ReplicateImageRequest) MessageClone() proto.Message {
	return m.Clone()
}
func (m *ReplicateImageRequest) Clone() *ReplicateImageRequest {
	if m == nil {
		return nil
	}
	cloned := new(ReplicateImageRequest)
	*cloned = *m

	return cloned
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_dd1e3814a9597ac5, []int{7}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return m.Size()
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func (m *Empty) MessageClone() proto.Message {
	return m.Clone()
}
func (m *Empty) Clone() *Empty {
	if m == nil {
		return nil
	}
	cloned := new(Empty)
	*cloned = *m

	return cloned
}

func init() {
	proto.RegisterEnum("central.URLHasValidCertResponse_URLResult", URLHasValidCertResponse_URLResult_name, URLHasValidCertResponse_URLResult_value)
	proto.RegisterType((*URLHasValidCertRequest)(nil), "central.URLHasValidCertRequest")
	proto.RegisterType((*URLHasValidCertResponse)(nil), "central.URLHasValidCertResponse")
	proto.RegisterType((*RandomDataRequest)(nil), "central.RandomDataRequest")
	proto.RegisterType((*RandomDataResponse)(nil), "central.RandomDataResponse")
	proto.RegisterType((*EnvVarsResponse)(nil), "central.EnvVarsResponse")
	proto.RegisterType((*ReconciliationStatsByClusterResponse)(nil), "central.ReconciliationStatsByClusterResponse")
	proto.RegisterType((*ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster)(nil), "central.ReconciliationStatsByClusterResponse.ReconciliationStatsForCluster")
	proto.RegisterMapType((map[string]int32)(nil), "central.ReconciliationStatsByClusterResponse.ReconciliationStatsForCluster.DeletedObjectsByTypeEntry")
	proto.RegisterType((*ReplicateImageRequest)(nil), "central.ReplicateImageRequest")
	proto.RegisterType((*Empty)(nil), "central.Empty")
}

func init() {
	proto.RegisterFile("internalapi/central/development_service.proto", fileDescriptor_dd1e3814a9597ac5)
}

var fileDescriptor_dd1e3814a9597ac5 = []byte{
	// 834 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0x4f, 0x6f, 0xe3, 0x44,
	0x14, 0xaf, 0x93, 0x66, 0xbb, 0x7d, 0xa0, 0x36, 0x3b, 0xbb, 0x4b, 0x53, 0xd3, 0x66, 0x23, 0xab,
	0x0b, 0xab, 0xd2, 0x8d, 0xa1, 0x5c, 0xd0, 0x22, 0x0e, 0x9b, 0xc4, 0xb4, 0xd1, 0xae, 0x12, 0x31,
	0x71, 0x0a, 0xcb, 0xc5, 0x9a, 0xda, 0x8f, 0x62, 0xea, 0xd8, 0x61, 0x66, 0x62, 0xad, 0x39, 0x72,
	0xe5, 0x08, 0x07, 0x84, 0xf8, 0x40, 0x88, 0x13, 0x12, 0x07, 0xae, 0xa8, 0xcb, 0x07, 0x41, 0x1e,
	0xdb, 0x49, 0xd3, 0xa4, 0x05, 0x24, 0x4e, 0x9e, 0x99, 0xf7, 0xfb, 0x33, 0xf3, 0x3c, 0xef, 0x0d,
	0x3c, 0xf6, 0x43, 0x89, 0x3c, 0x64, 0x01, 0x1b, 0xfb, 0xa6, 0x8b, 0xa1, 0xe4, 0x2c, 0x30, 0x3d,
	0x8c, 0x31, 0x88, 0xc6, 0x23, 0x0c, 0xa5, 0x23, 0x90, 0xc7, 0xbe, 0x8b, 0xcd, 0x31, 0x8f, 0x64,
	0x44, 0xd6, 0x72, 0x88, 0xbe, 0x73, 0x16, 0x45, 0x67, 0x01, 0x9a, 0x29, 0x8d, 0x85, 0x61, 0x24,
	0x99, 0xf4, 0xa3, 0x50, 0x64, 0x30, 0x63, 0x1f, 0xde, 0x18, 0xd2, 0xe7, 0xc7, 0x4c, 0x9c, 0xb0,
	0xc0, 0xf7, 0xda, 0xc8, 0x25, 0xc5, 0xaf, 0x27, 0x28, 0x24, 0xa9, 0x42, 0x79, 0xc2, 0x83, 0x9a,
	0xd6, 0xd0, 0x1e, 0xad, 0xd3, 0x74, 0x68, 0xfc, 0x50, 0x82, 0xad, 0x05, 0xb0, 0x18, 0x47, 0xa1,
	0x40, 0xd2, 0x82, 0x5b, 0x1c, 0xc5, 0x24, 0x90, 0x8a, 0xb0, 0x71, 0xb8, 0xdf, 0xcc, 0xfd, 0x9b,
	0xd7, 0x30, 0xd2, 0x75, 0xaa, 0x18, 0x34, 0x67, 0x92, 0x1a, 0xac, 0x79, 0x28, 0x99, 0x1f, 0x88,
	0x5a, 0x49, 0xb9, 0x16, 0x53, 0xe3, 0x27, 0x0d, 0xd6, 0xa7, 0x78, 0xb2, 0x0e, 0x95, 0x61, 0x6f,
	0x60, 0xd9, 0xd5, 0x15, 0xb2, 0x07, 0x8d, 0xb6, 0x45, 0x6d, 0x67, 0xd0, 0x3d, 0xea, 0x59, 0x1d,
	0xa7, 0xf5, 0xc2, 0x19, 0xf6, 0x9e, 0xf5, 0xfa, 0x9f, 0xf6, 0x9c, 0xa7, 0x43, 0xfb, 0xb8, 0x4f,
	0xbb, 0xf6, 0x8b, 0xaa, 0x46, 0xde, 0x85, 0x83, 0x29, 0xaa, 0xdb, 0x3b, 0x9a, 0xc5, 0x9c, 0x93,
	0xa7, 0xcf, 0xbb, 0x1d, 0xa7, 0x35, 0xb4, 0x9d, 0xbe, 0x7d, 0x6c, 0x51, 0xc7, 0xa2, 0xb4, 0x4f,
	0xab, 0x25, 0x72, 0x17, 0x36, 0xb3, 0x85, 0x23, 0xcb, 0xce, 0x17, 0xcb, 0xe4, 0x3e, 0xdc, 0xa1,
	0xd6, 0x27, 0x43, 0x6b, 0x60, 0x3b, 0x83, 0x61, 0xbb, 0x6d, 0x59, 0x1d, 0xab, 0x53, 0x5d, 0x35,
	0xde, 0x86, 0x3b, 0x94, 0x85, 0x5e, 0x34, 0xea, 0x30, 0xc9, 0x8a, 0xec, 0x11, 0x58, 0x15, 0xfe,
	0x37, 0xa8, 0xb2, 0x51, 0xa1, 0x6a, 0x6c, 0x3c, 0x02, 0x72, 0x19, 0x98, 0x67, 0x8e, 0xc0, 0xaa,
	0xc7, 0x24, 0x53, 0xc8, 0xd7, 0xa9, 0x1a, 0x1b, 0x07, 0xb0, 0x69, 0x85, 0xf1, 0x09, 0xe3, 0x62,
	0x0a, 0xdb, 0x86, 0xdb, 0x18, 0xc6, 0x4e, 0xcc, 0xb8, 0xa8, 0x69, 0x8d, 0x72, 0x9a, 0x1d, 0xcc,
	0x20, 0xc6, 0xab, 0x32, 0xec, 0x51, 0x74, 0xa3, 0xd0, 0xf5, 0x03, 0x5f, 0xfd, 0xdd, 0x81, 0x64,
	0x52, 0xb4, 0x92, 0x76, 0x30, 0x11, 0x12, 0xf9, 0x54, 0x83, 0x41, 0x45, 0xa4, 0x11, 0x25, 0xf0,
	0xda, 0xe1, 0xb3, 0xe9, 0x3f, 0xfa, 0x37, 0xec, 0x65, 0xa0, 0x8f, 0x23, 0x5e, 0xa0, 0x32, 0x65,
	0xfd, 0x8f, 0x12, 0xec, 0xde, 0x08, 0x24, 0xbb, 0x00, 0x6e, 0x36, 0x74, 0x7c, 0x2f, 0xbf, 0x5e,
	0xeb, 0xf9, 0x4a, 0xd7, 0x23, 0x26, 0xdc, 0xe5, 0x73, 0x7c, 0xc7, 0x8b, 0x42, 0x54, 0x17, 0xe2,
	0x36, 0x25, 0xf3, 0xa1, 0x4e, 0x14, 0x22, 0xf9, 0x59, 0x83, 0x2d, 0x0f, 0x03, 0x94, 0xe8, 0x39,
	0xd1, 0xe9, 0x57, 0xe8, 0x4a, 0xe1, 0x9c, 0x26, 0x8e, 0x4c, 0xc6, 0x58, 0x2b, 0xab, 0x73, 0xe2,
	0xff, 0x78, 0xce, 0x66, 0x27, 0xb3, 0xea, 0x67, 0x4e, 0xad, 0xc4, 0x4e, 0xc6, 0x68, 0x85, 0x92,
	0x27, 0xf4, 0x9e, 0xb7, 0x24, 0xa4, 0x1f, 0xc1, 0xf6, 0xb5, 0x94, 0xb4, 0xc6, 0xce, 0x31, 0x29,
	0x6a, 0xec, 0x1c, 0x13, 0x72, 0x0f, 0x2a, 0x31, 0x0b, 0x26, 0xd9, 0x81, 0x2b, 0x34, 0x9b, 0x3c,
	0x29, 0x7d, 0xa0, 0x19, 0x1f, 0xc1, 0x7d, 0x8a, 0xe3, 0xc0, 0x77, 0x99, 0xc4, 0xee, 0x88, 0x9d,
	0x61, 0x71, 0xd5, 0x36, 0xa0, 0x34, 0x4d, 0x64, 0xc9, 0xf7, 0x52, 0x09, 0xe9, 0x8f, 0x50, 0x14,
	0x12, 0x6a, 0x62, 0xac, 0x41, 0xc5, 0x1a, 0x8d, 0x65, 0x72, 0xf8, 0xeb, 0x2a, 0x90, 0xce, 0xac,
	0x6d, 0x0c, 0xb2, 0xae, 0x41, 0x46, 0xb0, 0x31, 0x2f, 0x4f, 0xea, 0x97, 0xd2, 0xb6, 0xc4, 0x57,
	0xdf, 0x98, 0xc6, 0x95, 0xb0, 0xf1, 0xce, 0xb7, 0xbf, 0xff, 0xf5, 0x7d, 0xe9, 0xa1, 0xd1, 0x30,
	0xe3, 0xf7, 0xcc, 0xa2, 0x59, 0xa5, 0x1d, 0xca, 0xf4, 0x53, 0x9a, 0xc9, 0x0b, 0x95, 0x27, 0xda,
	0x3e, 0x79, 0x09, 0x9b, 0x57, 0x1a, 0x03, 0x79, 0x70, 0x7d, 0xcb, 0xc8, 0x0c, 0x1b, 0xff, 0xd4,
	0x53, 0x0c, 0x43, 0x6d, 0x61, 0x87, 0xe8, 0x0b, 0x5b, 0x70, 0x91, 0x4b, 0xf7, 0x4b, 0x74, 0xcf,
	0xc9, 0x17, 0x00, 0xb3, 0x2a, 0x24, 0xfa, 0xec, 0x90, 0x57, 0x6b, 0x58, 0x7f, 0x73, 0x69, 0x2c,
	0xb7, 0x7a, 0xa0, 0xac, 0xb6, 0xc9, 0xd6, 0x82, 0x15, 0x57, 0x60, 0x32, 0x84, 0xb5, 0xbc, 0x86,
	0xc9, 0x95, 0x4c, 0xe9, 0xb5, 0xd9, 0x7c, 0xbe, 0xca, 0x8d, 0x86, 0x52, 0xd5, 0x49, 0x6d, 0x41,
	0x15, 0xc3, 0x38, 0xad, 0x7d, 0xf2, 0x9d, 0x06, 0x3b, 0x37, 0x5d, 0xe3, 0x05, 0xb3, 0xc7, 0xff,
	0xe9, 0xf6, 0x1b, 0x07, 0x6a, 0x07, 0x6f, 0x91, 0xbd, 0xc5, 0x73, 0xcd, 0xd1, 0x55, 0xb9, 0xb7,
	0x4e, 0x7e, 0xb9, 0xa8, 0x6b, 0xbf, 0x5d, 0xd4, 0xb5, 0x3f, 0x2f, 0xea, 0xda, 0x8f, 0xaf, 0xea,
	0x2b, 0xf0, 0xd0, 0x8f, 0x9a, 0x42, 0x32, 0xf7, 0x9c, 0x47, 0x2f, 0xb3, 0x37, 0xa6, 0x79, 0xe9,
	0xe1, 0x2a, 0xf6, 0xf2, 0xf9, 0x6e, 0xd3, 0x5c, 0xf2, 0x9e, 0x7d, 0x98, 0x7f, 0x3f, 0x5b, 0x39,
	0xbd, 0xa5, 0xb8, 0xef, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xa9, 0xb8, 0x43, 0x9b, 0xf7, 0x06,
	0x00, 0x00,
}

func (m *URLHasValidCertRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *URLHasValidCertRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *URLHasValidCertRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintDevelopmentService(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *URLHasValidCertResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *URLHasValidCertResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *URLHasValidCertResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Details) > 0 {
		i -= len(m.Details)
		copy(dAtA[i:], m.Details)
		i = encodeVarintDevelopmentService(dAtA, i, uint64(len(m.Details)))
		i--
		dAtA[i] = 0x12
	}
	if m.Result != 0 {
		i = encodeVarintDevelopmentService(dAtA, i, uint64(m.Result))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RandomDataRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RandomDataRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RandomDataRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Size_ != 0 {
		i = encodeVarintDevelopmentService(dAtA, i, uint64(m.Size_))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RandomDataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RandomDataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RandomDataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintDevelopmentService(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EnvVarsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EnvVarsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EnvVarsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.EnvVars) > 0 {
		for iNdEx := len(m.EnvVars) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.EnvVars[iNdEx])
			copy(dAtA[i:], m.EnvVars[iNdEx])
			i = encodeVarintDevelopmentService(dAtA, i, uint64(len(m.EnvVars[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ReconciliationStatsByClusterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReconciliationStatsByClusterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReconciliationStatsByClusterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Stats) > 0 {
		for iNdEx := len(m.Stats) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Stats[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDevelopmentService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DeletedObjectsByType) > 0 {
		for k := range m.DeletedObjectsByType {
			v := m.DeletedObjectsByType[k]
			baseI := i
			i = encodeVarintDevelopmentService(dAtA, i, uint64(v))
			i--
			dAtA[i] = 0x10
			i -= len(k)
			copy(dAtA[i:], k)
			i = encodeVarintDevelopmentService(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = encodeVarintDevelopmentService(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.ReconciliationDone {
		i--
		if m.ReconciliationDone {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.ClusterId) > 0 {
		i -= len(m.ClusterId)
		copy(dAtA[i:], m.ClusterId)
		i = encodeVarintDevelopmentService(dAtA, i, uint64(len(m.ClusterId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ReplicateImageRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReplicateImageRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReplicateImageRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Times != 0 {
		i = encodeVarintDevelopmentService(dAtA, i, uint64(m.Times))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintDevelopmentService(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Empty) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Empty) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Empty) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintDevelopmentService(dAtA []byte, offset int, v uint64) int {
	offset -= sovDevelopmentService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *URLHasValidCertRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovDevelopmentService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *URLHasValidCertResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Result != 0 {
		n += 1 + sovDevelopmentService(uint64(m.Result))
	}
	l = len(m.Details)
	if l > 0 {
		n += 1 + l + sovDevelopmentService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RandomDataRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Size_ != 0 {
		n += 1 + sovDevelopmentService(uint64(m.Size_))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RandomDataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovDevelopmentService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EnvVarsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.EnvVars) > 0 {
		for _, s := range m.EnvVars {
			l = len(s)
			n += 1 + l + sovDevelopmentService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReconciliationStatsByClusterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Stats) > 0 {
		for _, e := range m.Stats {
			l = e.Size()
			n += 1 + l + sovDevelopmentService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClusterId)
	if l > 0 {
		n += 1 + l + sovDevelopmentService(uint64(l))
	}
	if m.ReconciliationDone {
		n += 2
	}
	if len(m.DeletedObjectsByType) > 0 {
		for k, v := range m.DeletedObjectsByType {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovDevelopmentService(uint64(len(k))) + 1 + sovDevelopmentService(uint64(v))
			n += mapEntrySize + 1 + sovDevelopmentService(uint64(mapEntrySize))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ReplicateImageRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovDevelopmentService(uint64(l))
	}
	if m.Times != 0 {
		n += 1 + sovDevelopmentService(uint64(m.Times))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Empty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovDevelopmentService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDevelopmentService(x uint64) (n int) {
	return sovDevelopmentService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *URLHasValidCertRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDevelopmentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: URLHasValidCertRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: URLHasValidCertRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDevelopmentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDevelopmentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *URLHasValidCertResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDevelopmentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: URLHasValidCertResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: URLHasValidCertResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result", wireType)
			}
			m.Result = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDevelopmentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Result |= URLHasValidCertResponse_URLResult(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Details", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDevelopmentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Details = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDevelopmentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RandomDataRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDevelopmentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RandomDataRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RandomDataRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size_", wireType)
			}
			m.Size_ = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDevelopmentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Size_ |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDevelopmentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RandomDataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDevelopmentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RandomDataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RandomDataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDevelopmentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDevelopmentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EnvVarsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDevelopmentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EnvVarsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EnvVarsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnvVars", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDevelopmentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EnvVars = append(m.EnvVars, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDevelopmentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReconciliationStatsByClusterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDevelopmentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReconciliationStatsByClusterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReconciliationStatsByClusterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stats", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDevelopmentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Stats = append(m.Stats, &ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster{})
			if err := m.Stats[len(m.Stats)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDevelopmentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReconciliationStatsByClusterResponse_ReconciliationStatsForCluster) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDevelopmentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReconciliationStatsForCluster: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReconciliationStatsForCluster: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDevelopmentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReconciliationDone", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDevelopmentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReconciliationDone = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletedObjectsByType", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDevelopmentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeletedObjectsByType == nil {
				m.DeletedObjectsByType = make(map[string]int32)
			}
			var mapkey string
			var mapvalue int32
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDevelopmentService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDevelopmentService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthDevelopmentService
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthDevelopmentService
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDevelopmentService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvalue |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipDevelopmentService(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthDevelopmentService
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.DeletedObjectsByType[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDevelopmentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ReplicateImageRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDevelopmentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReplicateImageRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReplicateImageRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDevelopmentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Times", wireType)
			}
			m.Times = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDevelopmentService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Times |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipDevelopmentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Empty) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDevelopmentService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Empty: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Empty: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipDevelopmentService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDevelopmentService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDevelopmentService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDevelopmentService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDevelopmentService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDevelopmentService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDevelopmentService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDevelopmentService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDevelopmentService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDevelopmentService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDevelopmentService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDevelopmentService = fmt.Errorf("proto: unexpected end of group")
)
