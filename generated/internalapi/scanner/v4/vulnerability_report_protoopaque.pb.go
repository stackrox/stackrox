// This contains protobuf types in pair with ClairCore's types, with
// minimal differences. See https://github.com/quay/claircore for comments
// on the fields.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: internalapi/scanner/v4/vulnerability_report.proto

//go:build protoopaque

package v4

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VulnerabilityReport_Note int32

const (
	VulnerabilityReport_NOTE_UNSPECIFIED    VulnerabilityReport_Note = 0
	VulnerabilityReport_NOTE_OS_UNKNOWN     VulnerabilityReport_Note = 1
	VulnerabilityReport_NOTE_OS_UNSUPPORTED VulnerabilityReport_Note = 2
)

// Enum value maps for VulnerabilityReport_Note.
var (
	VulnerabilityReport_Note_name = map[int32]string{
		0: "NOTE_UNSPECIFIED",
		1: "NOTE_OS_UNKNOWN",
		2: "NOTE_OS_UNSUPPORTED",
	}
	VulnerabilityReport_Note_value = map[string]int32{
		"NOTE_UNSPECIFIED":    0,
		"NOTE_OS_UNKNOWN":     1,
		"NOTE_OS_UNSUPPORTED": 2,
	}
)

func (x VulnerabilityReport_Note) Enum() *VulnerabilityReport_Note {
	p := new(VulnerabilityReport_Note)
	*p = x
	return p
}

func (x VulnerabilityReport_Note) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VulnerabilityReport_Note) Descriptor() protoreflect.EnumDescriptor {
	return file_internalapi_scanner_v4_vulnerability_report_proto_enumTypes[0].Descriptor()
}

func (VulnerabilityReport_Note) Type() protoreflect.EnumType {
	return &file_internalapi_scanner_v4_vulnerability_report_proto_enumTypes[0]
}

func (x VulnerabilityReport_Note) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type VulnerabilityReport_Vulnerability_Severity int32

const (
	VulnerabilityReport_Vulnerability_SEVERITY_UNSPECIFIED VulnerabilityReport_Vulnerability_Severity = 0
	VulnerabilityReport_Vulnerability_SEVERITY_LOW         VulnerabilityReport_Vulnerability_Severity = 1
	VulnerabilityReport_Vulnerability_SEVERITY_MODERATE    VulnerabilityReport_Vulnerability_Severity = 2
	VulnerabilityReport_Vulnerability_SEVERITY_IMPORTANT   VulnerabilityReport_Vulnerability_Severity = 3
	VulnerabilityReport_Vulnerability_SEVERITY_CRITICAL    VulnerabilityReport_Vulnerability_Severity = 4
)

// Enum value maps for VulnerabilityReport_Vulnerability_Severity.
var (
	VulnerabilityReport_Vulnerability_Severity_name = map[int32]string{
		0: "SEVERITY_UNSPECIFIED",
		1: "SEVERITY_LOW",
		2: "SEVERITY_MODERATE",
		3: "SEVERITY_IMPORTANT",
		4: "SEVERITY_CRITICAL",
	}
	VulnerabilityReport_Vulnerability_Severity_value = map[string]int32{
		"SEVERITY_UNSPECIFIED": 0,
		"SEVERITY_LOW":         1,
		"SEVERITY_MODERATE":    2,
		"SEVERITY_IMPORTANT":   3,
		"SEVERITY_CRITICAL":    4,
	}
)

func (x VulnerabilityReport_Vulnerability_Severity) Enum() *VulnerabilityReport_Vulnerability_Severity {
	p := new(VulnerabilityReport_Vulnerability_Severity)
	*p = x
	return p
}

func (x VulnerabilityReport_Vulnerability_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VulnerabilityReport_Vulnerability_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_internalapi_scanner_v4_vulnerability_report_proto_enumTypes[1].Descriptor()
}

func (VulnerabilityReport_Vulnerability_Severity) Type() protoreflect.EnumType {
	return &file_internalapi_scanner_v4_vulnerability_report_proto_enumTypes[1]
}

func (x VulnerabilityReport_Vulnerability_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type VulnerabilityReport_Vulnerability_CVSS_Source int32

const (
	VulnerabilityReport_Vulnerability_CVSS_SOURCE_UNKNOWN VulnerabilityReport_Vulnerability_CVSS_Source = 0
	VulnerabilityReport_Vulnerability_CVSS_SOURCE_RED_HAT VulnerabilityReport_Vulnerability_CVSS_Source = 1
	VulnerabilityReport_Vulnerability_CVSS_SOURCE_OSV     VulnerabilityReport_Vulnerability_CVSS_Source = 2
	VulnerabilityReport_Vulnerability_CVSS_SOURCE_NVD     VulnerabilityReport_Vulnerability_CVSS_Source = 3
)

// Enum value maps for VulnerabilityReport_Vulnerability_CVSS_Source.
var (
	VulnerabilityReport_Vulnerability_CVSS_Source_name = map[int32]string{
		0: "SOURCE_UNKNOWN",
		1: "SOURCE_RED_HAT",
		2: "SOURCE_OSV",
		3: "SOURCE_NVD",
	}
	VulnerabilityReport_Vulnerability_CVSS_Source_value = map[string]int32{
		"SOURCE_UNKNOWN": 0,
		"SOURCE_RED_HAT": 1,
		"SOURCE_OSV":     2,
		"SOURCE_NVD":     3,
	}
)

func (x VulnerabilityReport_Vulnerability_CVSS_Source) Enum() *VulnerabilityReport_Vulnerability_CVSS_Source {
	p := new(VulnerabilityReport_Vulnerability_CVSS_Source)
	*p = x
	return p
}

func (x VulnerabilityReport_Vulnerability_CVSS_Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VulnerabilityReport_Vulnerability_CVSS_Source) Descriptor() protoreflect.EnumDescriptor {
	return file_internalapi_scanner_v4_vulnerability_report_proto_enumTypes[2].Descriptor()
}

func (VulnerabilityReport_Vulnerability_CVSS_Source) Type() protoreflect.EnumType {
	return &file_internalapi_scanner_v4_vulnerability_report_proto_enumTypes[2]
}

func (x VulnerabilityReport_Vulnerability_CVSS_Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Next tag: 16
type VulnerabilityReport struct {
	state                             protoimpl.MessageState                        `protogen:"opaque.v1"`
	xxx_hidden_HashId                 *string                                       `protobuf:"bytes,1,opt,name=hash_id,json=hashId"`
	xxx_hidden_Vulnerabilities        map[string]*VulnerabilityReport_Vulnerability `protobuf:"bytes,2,rep,name=vulnerabilities" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_PackageVulnerabilities map[string]*StringList                        `protobuf:"bytes,3,rep,name=package_vulnerabilities,json=packageVulnerabilities" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Contents               *Contents                                     `protobuf:"bytes,4,opt,name=contents"`
	xxx_hidden_Notes                  []VulnerabilityReport_Note                    `protobuf:"varint,5,rep,packed,name=notes,enum=scanner.v4.VulnerabilityReport_Note"`
	XXX_raceDetectHookData            protoimpl.RaceDetectHookData
	XXX_presence                      [1]uint32
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *VulnerabilityReport) Reset() {
	*x = VulnerabilityReport{}
	mi := &file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VulnerabilityReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityReport) ProtoMessage() {}

func (x *VulnerabilityReport) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VulnerabilityReport) GetHashId() string {
	if x != nil {
		if x.xxx_hidden_HashId != nil {
			return *x.xxx_hidden_HashId
		}
		return ""
	}
	return ""
}

func (x *VulnerabilityReport) GetVulnerabilities() map[string]*VulnerabilityReport_Vulnerability {
	if x != nil {
		return x.xxx_hidden_Vulnerabilities
	}
	return nil
}

func (x *VulnerabilityReport) GetPackageVulnerabilities() map[string]*StringList {
	if x != nil {
		return x.xxx_hidden_PackageVulnerabilities
	}
	return nil
}

func (x *VulnerabilityReport) GetContents() *Contents {
	if x != nil {
		return x.xxx_hidden_Contents
	}
	return nil
}

func (x *VulnerabilityReport) GetNotes() []VulnerabilityReport_Note {
	if x != nil {
		return x.xxx_hidden_Notes
	}
	return nil
}

func (x *VulnerabilityReport) SetHashId(v string) {
	x.xxx_hidden_HashId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *VulnerabilityReport) SetVulnerabilities(v map[string]*VulnerabilityReport_Vulnerability) {
	x.xxx_hidden_Vulnerabilities = v
}

func (x *VulnerabilityReport) SetPackageVulnerabilities(v map[string]*StringList) {
	x.xxx_hidden_PackageVulnerabilities = v
}

func (x *VulnerabilityReport) SetContents(v *Contents) {
	x.xxx_hidden_Contents = v
}

func (x *VulnerabilityReport) SetNotes(v []VulnerabilityReport_Note) {
	x.xxx_hidden_Notes = v
}

func (x *VulnerabilityReport) HasHashId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VulnerabilityReport) HasContents() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Contents != nil
}

func (x *VulnerabilityReport) ClearHashId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_HashId = nil
}

func (x *VulnerabilityReport) ClearContents() {
	x.xxx_hidden_Contents = nil
}

type VulnerabilityReport_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	HashId                 *string
	Vulnerabilities        map[string]*VulnerabilityReport_Vulnerability
	PackageVulnerabilities map[string]*StringList
	Contents               *Contents
	Notes                  []VulnerabilityReport_Note
}

func (b0 VulnerabilityReport_builder) Build() *VulnerabilityReport {
	m0 := &VulnerabilityReport{}
	b, x := &b0, m0
	_, _ = b, x
	if b.HashId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_HashId = b.HashId
	}
	x.xxx_hidden_Vulnerabilities = b.Vulnerabilities
	x.xxx_hidden_PackageVulnerabilities = b.PackageVulnerabilities
	x.xxx_hidden_Contents = b.Contents
	x.xxx_hidden_Notes = b.Notes
	return m0
}

type StringList struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Values []string               `protobuf:"bytes,1,rep,name=values"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StringList) Reset() {
	*x = StringList{}
	mi := &file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringList) ProtoMessage() {}

func (x *StringList) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *StringList) GetValues() []string {
	if x != nil {
		return x.xxx_hidden_Values
	}
	return nil
}

func (x *StringList) SetValues(v []string) {
	x.xxx_hidden_Values = v
}

type StringList_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Values []string
}

func (b0 StringList_builder) Build() *StringList {
	m0 := &StringList{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Values = b.Values
	return m0
}

type VulnerabilityReport_Advisory struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Link        *string                `protobuf:"bytes,2,opt,name=link"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VulnerabilityReport_Advisory) Reset() {
	*x = VulnerabilityReport_Advisory{}
	mi := &file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VulnerabilityReport_Advisory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityReport_Advisory) ProtoMessage() {}

func (x *VulnerabilityReport_Advisory) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VulnerabilityReport_Advisory) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *VulnerabilityReport_Advisory) GetLink() string {
	if x != nil {
		if x.xxx_hidden_Link != nil {
			return *x.xxx_hidden_Link
		}
		return ""
	}
	return ""
}

func (x *VulnerabilityReport_Advisory) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *VulnerabilityReport_Advisory) SetLink(v string) {
	x.xxx_hidden_Link = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *VulnerabilityReport_Advisory) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VulnerabilityReport_Advisory) HasLink() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VulnerabilityReport_Advisory) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

func (x *VulnerabilityReport_Advisory) ClearLink() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Link = nil
}

type VulnerabilityReport_Advisory_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name *string
	Link *string
}

func (b0 VulnerabilityReport_Advisory_builder) Build() *VulnerabilityReport_Advisory {
	m0 := &VulnerabilityReport_Advisory{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	if b.Link != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Link = b.Link
	}
	return m0
}

type VulnerabilityReport_Vulnerability struct {
	state                         protoimpl.MessageState                     `protogen:"opaque.v1"`
	xxx_hidden_Id                 *string                                    `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Name               *string                                    `protobuf:"bytes,2,opt,name=name"`
	xxx_hidden_Advisory           *VulnerabilityReport_Advisory              `protobuf:"bytes,15,opt,name=advisory"`
	xxx_hidden_Description        *string                                    `protobuf:"bytes,3,opt,name=description"`
	xxx_hidden_Issued             *timestamppb.Timestamp                     `protobuf:"bytes,4,opt,name=issued"`
	xxx_hidden_Link               *string                                    `protobuf:"bytes,5,opt,name=link"`
	xxx_hidden_Severity           *string                                    `protobuf:"bytes,6,opt,name=severity"`
	xxx_hidden_NormalizedSeverity VulnerabilityReport_Vulnerability_Severity `protobuf:"varint,7,opt,name=normalized_severity,json=normalizedSeverity,enum=scanner.v4.VulnerabilityReport_Vulnerability_Severity"`
	xxx_hidden_PackageId          *string                                    `protobuf:"bytes,8,opt,name=package_id,json=packageId"`
	xxx_hidden_DistributionId     *string                                    `protobuf:"bytes,9,opt,name=distribution_id,json=distributionId"`
	xxx_hidden_RepositoryId       *string                                    `protobuf:"bytes,10,opt,name=repository_id,json=repositoryId"`
	xxx_hidden_FixedInVersion     *string                                    `protobuf:"bytes,11,opt,name=fixed_in_version,json=fixedInVersion"`
	xxx_hidden_Cvss               *VulnerabilityReport_Vulnerability_CVSS    `protobuf:"bytes,12,opt,name=cvss"`
	xxx_hidden_CvssMetrics        *[]*VulnerabilityReport_Vulnerability_CVSS `protobuf:"bytes,13,rep,name=cvss_metrics,json=cvssMetrics"`
	xxx_hidden_EpssMetrics        *VulnerabilityReport_Vulnerability_EPSS    `protobuf:"bytes,14,opt,name=epss_metrics,json=epssMetrics"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *VulnerabilityReport_Vulnerability) Reset() {
	*x = VulnerabilityReport_Vulnerability{}
	mi := &file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VulnerabilityReport_Vulnerability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityReport_Vulnerability) ProtoMessage() {}

func (x *VulnerabilityReport_Vulnerability) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VulnerabilityReport_Vulnerability) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *VulnerabilityReport_Vulnerability) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *VulnerabilityReport_Vulnerability) GetAdvisory() *VulnerabilityReport_Advisory {
	if x != nil {
		return x.xxx_hidden_Advisory
	}
	return nil
}

func (x *VulnerabilityReport_Vulnerability) GetDescription() string {
	if x != nil {
		if x.xxx_hidden_Description != nil {
			return *x.xxx_hidden_Description
		}
		return ""
	}
	return ""
}

func (x *VulnerabilityReport_Vulnerability) GetIssued() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Issued
	}
	return nil
}

// Deprecated: Marked as deprecated in internalapi/scanner/v4/vulnerability_report.proto.
func (x *VulnerabilityReport_Vulnerability) GetLink() string {
	if x != nil {
		if x.xxx_hidden_Link != nil {
			return *x.xxx_hidden_Link
		}
		return ""
	}
	return ""
}

func (x *VulnerabilityReport_Vulnerability) GetSeverity() string {
	if x != nil {
		if x.xxx_hidden_Severity != nil {
			return *x.xxx_hidden_Severity
		}
		return ""
	}
	return ""
}

func (x *VulnerabilityReport_Vulnerability) GetNormalizedSeverity() VulnerabilityReport_Vulnerability_Severity {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 7) {
			return x.xxx_hidden_NormalizedSeverity
		}
	}
	return VulnerabilityReport_Vulnerability_SEVERITY_UNSPECIFIED
}

func (x *VulnerabilityReport_Vulnerability) GetPackageId() string {
	if x != nil {
		if x.xxx_hidden_PackageId != nil {
			return *x.xxx_hidden_PackageId
		}
		return ""
	}
	return ""
}

func (x *VulnerabilityReport_Vulnerability) GetDistributionId() string {
	if x != nil {
		if x.xxx_hidden_DistributionId != nil {
			return *x.xxx_hidden_DistributionId
		}
		return ""
	}
	return ""
}

func (x *VulnerabilityReport_Vulnerability) GetRepositoryId() string {
	if x != nil {
		if x.xxx_hidden_RepositoryId != nil {
			return *x.xxx_hidden_RepositoryId
		}
		return ""
	}
	return ""
}

func (x *VulnerabilityReport_Vulnerability) GetFixedInVersion() string {
	if x != nil {
		if x.xxx_hidden_FixedInVersion != nil {
			return *x.xxx_hidden_FixedInVersion
		}
		return ""
	}
	return ""
}

// Deprecated: Marked as deprecated in internalapi/scanner/v4/vulnerability_report.proto.
func (x *VulnerabilityReport_Vulnerability) GetCvss() *VulnerabilityReport_Vulnerability_CVSS {
	if x != nil {
		return x.xxx_hidden_Cvss
	}
	return nil
}

func (x *VulnerabilityReport_Vulnerability) GetCvssMetrics() []*VulnerabilityReport_Vulnerability_CVSS {
	if x != nil {
		if x.xxx_hidden_CvssMetrics != nil {
			return *x.xxx_hidden_CvssMetrics
		}
	}
	return nil
}

func (x *VulnerabilityReport_Vulnerability) GetEpssMetrics() *VulnerabilityReport_Vulnerability_EPSS {
	if x != nil {
		return x.xxx_hidden_EpssMetrics
	}
	return nil
}

func (x *VulnerabilityReport_Vulnerability) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 15)
}

func (x *VulnerabilityReport_Vulnerability) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 15)
}

func (x *VulnerabilityReport_Vulnerability) SetAdvisory(v *VulnerabilityReport_Advisory) {
	x.xxx_hidden_Advisory = v
}

func (x *VulnerabilityReport_Vulnerability) SetDescription(v string) {
	x.xxx_hidden_Description = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 15)
}

func (x *VulnerabilityReport_Vulnerability) SetIssued(v *timestamppb.Timestamp) {
	x.xxx_hidden_Issued = v
}

// Deprecated: Marked as deprecated in internalapi/scanner/v4/vulnerability_report.proto.
func (x *VulnerabilityReport_Vulnerability) SetLink(v string) {
	x.xxx_hidden_Link = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 15)
}

func (x *VulnerabilityReport_Vulnerability) SetSeverity(v string) {
	x.xxx_hidden_Severity = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 15)
}

func (x *VulnerabilityReport_Vulnerability) SetNormalizedSeverity(v VulnerabilityReport_Vulnerability_Severity) {
	x.xxx_hidden_NormalizedSeverity = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 15)
}

func (x *VulnerabilityReport_Vulnerability) SetPackageId(v string) {
	x.xxx_hidden_PackageId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 15)
}

func (x *VulnerabilityReport_Vulnerability) SetDistributionId(v string) {
	x.xxx_hidden_DistributionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 15)
}

func (x *VulnerabilityReport_Vulnerability) SetRepositoryId(v string) {
	x.xxx_hidden_RepositoryId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 15)
}

func (x *VulnerabilityReport_Vulnerability) SetFixedInVersion(v string) {
	x.xxx_hidden_FixedInVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 15)
}

// Deprecated: Marked as deprecated in internalapi/scanner/v4/vulnerability_report.proto.
func (x *VulnerabilityReport_Vulnerability) SetCvss(v *VulnerabilityReport_Vulnerability_CVSS) {
	x.xxx_hidden_Cvss = v
}

func (x *VulnerabilityReport_Vulnerability) SetCvssMetrics(v []*VulnerabilityReport_Vulnerability_CVSS) {
	x.xxx_hidden_CvssMetrics = &v
}

func (x *VulnerabilityReport_Vulnerability) SetEpssMetrics(v *VulnerabilityReport_Vulnerability_EPSS) {
	x.xxx_hidden_EpssMetrics = v
}

func (x *VulnerabilityReport_Vulnerability) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VulnerabilityReport_Vulnerability) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VulnerabilityReport_Vulnerability) HasAdvisory() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Advisory != nil
}

func (x *VulnerabilityReport_Vulnerability) HasDescription() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *VulnerabilityReport_Vulnerability) HasIssued() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Issued != nil
}

// Deprecated: Marked as deprecated in internalapi/scanner/v4/vulnerability_report.proto.
func (x *VulnerabilityReport_Vulnerability) HasLink() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *VulnerabilityReport_Vulnerability) HasSeverity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *VulnerabilityReport_Vulnerability) HasNormalizedSeverity() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *VulnerabilityReport_Vulnerability) HasPackageId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *VulnerabilityReport_Vulnerability) HasDistributionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *VulnerabilityReport_Vulnerability) HasRepositoryId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *VulnerabilityReport_Vulnerability) HasFixedInVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

// Deprecated: Marked as deprecated in internalapi/scanner/v4/vulnerability_report.proto.
func (x *VulnerabilityReport_Vulnerability) HasCvss() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Cvss != nil
}

func (x *VulnerabilityReport_Vulnerability) HasEpssMetrics() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_EpssMetrics != nil
}

func (x *VulnerabilityReport_Vulnerability) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *VulnerabilityReport_Vulnerability) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Name = nil
}

func (x *VulnerabilityReport_Vulnerability) ClearAdvisory() {
	x.xxx_hidden_Advisory = nil
}

func (x *VulnerabilityReport_Vulnerability) ClearDescription() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Description = nil
}

func (x *VulnerabilityReport_Vulnerability) ClearIssued() {
	x.xxx_hidden_Issued = nil
}

// Deprecated: Marked as deprecated in internalapi/scanner/v4/vulnerability_report.proto.
func (x *VulnerabilityReport_Vulnerability) ClearLink() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Link = nil
}

func (x *VulnerabilityReport_Vulnerability) ClearSeverity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Severity = nil
}

func (x *VulnerabilityReport_Vulnerability) ClearNormalizedSeverity() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_NormalizedSeverity = VulnerabilityReport_Vulnerability_SEVERITY_UNSPECIFIED
}

func (x *VulnerabilityReport_Vulnerability) ClearPackageId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_PackageId = nil
}

func (x *VulnerabilityReport_Vulnerability) ClearDistributionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_DistributionId = nil
}

func (x *VulnerabilityReport_Vulnerability) ClearRepositoryId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_RepositoryId = nil
}

func (x *VulnerabilityReport_Vulnerability) ClearFixedInVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_FixedInVersion = nil
}

// Deprecated: Marked as deprecated in internalapi/scanner/v4/vulnerability_report.proto.
func (x *VulnerabilityReport_Vulnerability) ClearCvss() {
	x.xxx_hidden_Cvss = nil
}

func (x *VulnerabilityReport_Vulnerability) ClearEpssMetrics() {
	x.xxx_hidden_EpssMetrics = nil
}

type VulnerabilityReport_Vulnerability_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id          *string
	Name        *string
	Advisory    *VulnerabilityReport_Advisory
	Description *string
	Issued      *timestamppb.Timestamp
	// Deprecated: Marked as deprecated in internalapi/scanner/v4/vulnerability_report.proto.
	Link               *string
	Severity           *string
	NormalizedSeverity *VulnerabilityReport_Vulnerability_Severity
	PackageId          *string
	DistributionId     *string
	RepositoryId       *string
	FixedInVersion     *string
	// Deprecated: Marked as deprecated in internalapi/scanner/v4/vulnerability_report.proto.
	Cvss        *VulnerabilityReport_Vulnerability_CVSS
	CvssMetrics []*VulnerabilityReport_Vulnerability_CVSS
	EpssMetrics *VulnerabilityReport_Vulnerability_EPSS
}

func (b0 VulnerabilityReport_Vulnerability_builder) Build() *VulnerabilityReport_Vulnerability {
	m0 := &VulnerabilityReport_Vulnerability{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 15)
		x.xxx_hidden_Id = b.Id
	}
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 15)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Advisory = b.Advisory
	if b.Description != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 15)
		x.xxx_hidden_Description = b.Description
	}
	x.xxx_hidden_Issued = b.Issued
	if b.Link != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 15)
		x.xxx_hidden_Link = b.Link
	}
	if b.Severity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 15)
		x.xxx_hidden_Severity = b.Severity
	}
	if b.NormalizedSeverity != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 15)
		x.xxx_hidden_NormalizedSeverity = *b.NormalizedSeverity
	}
	if b.PackageId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 15)
		x.xxx_hidden_PackageId = b.PackageId
	}
	if b.DistributionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 15)
		x.xxx_hidden_DistributionId = b.DistributionId
	}
	if b.RepositoryId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 15)
		x.xxx_hidden_RepositoryId = b.RepositoryId
	}
	if b.FixedInVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 15)
		x.xxx_hidden_FixedInVersion = b.FixedInVersion
	}
	x.xxx_hidden_Cvss = b.Cvss
	x.xxx_hidden_CvssMetrics = &b.CvssMetrics
	x.xxx_hidden_EpssMetrics = b.EpssMetrics
	return m0
}

type VulnerabilityReport_Vulnerability_CVSS struct {
	state                  protoimpl.MessageState                        `protogen:"opaque.v1"`
	xxx_hidden_V2          *VulnerabilityReport_Vulnerability_CVSS_V2    `protobuf:"bytes,1,opt,name=v2"`
	xxx_hidden_V3          *VulnerabilityReport_Vulnerability_CVSS_V3    `protobuf:"bytes,2,opt,name=v3"`
	xxx_hidden_Source      VulnerabilityReport_Vulnerability_CVSS_Source `protobuf:"varint,3,opt,name=source,enum=scanner.v4.VulnerabilityReport_Vulnerability_CVSS_Source"`
	xxx_hidden_Url         *string                                       `protobuf:"bytes,4,opt,name=url"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VulnerabilityReport_Vulnerability_CVSS) Reset() {
	*x = VulnerabilityReport_Vulnerability_CVSS{}
	mi := &file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VulnerabilityReport_Vulnerability_CVSS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityReport_Vulnerability_CVSS) ProtoMessage() {}

func (x *VulnerabilityReport_Vulnerability_CVSS) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VulnerabilityReport_Vulnerability_CVSS) GetV2() *VulnerabilityReport_Vulnerability_CVSS_V2 {
	if x != nil {
		return x.xxx_hidden_V2
	}
	return nil
}

func (x *VulnerabilityReport_Vulnerability_CVSS) GetV3() *VulnerabilityReport_Vulnerability_CVSS_V3 {
	if x != nil {
		return x.xxx_hidden_V3
	}
	return nil
}

func (x *VulnerabilityReport_Vulnerability_CVSS) GetSource() VulnerabilityReport_Vulnerability_CVSS_Source {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_Source
		}
	}
	return VulnerabilityReport_Vulnerability_CVSS_SOURCE_UNKNOWN
}

func (x *VulnerabilityReport_Vulnerability_CVSS) GetUrl() string {
	if x != nil {
		if x.xxx_hidden_Url != nil {
			return *x.xxx_hidden_Url
		}
		return ""
	}
	return ""
}

func (x *VulnerabilityReport_Vulnerability_CVSS) SetV2(v *VulnerabilityReport_Vulnerability_CVSS_V2) {
	x.xxx_hidden_V2 = v
}

func (x *VulnerabilityReport_Vulnerability_CVSS) SetV3(v *VulnerabilityReport_Vulnerability_CVSS_V3) {
	x.xxx_hidden_V3 = v
}

func (x *VulnerabilityReport_Vulnerability_CVSS) SetSource(v VulnerabilityReport_Vulnerability_CVSS_Source) {
	x.xxx_hidden_Source = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *VulnerabilityReport_Vulnerability_CVSS) SetUrl(v string) {
	x.xxx_hidden_Url = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *VulnerabilityReport_Vulnerability_CVSS) HasV2() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_V2 != nil
}

func (x *VulnerabilityReport_Vulnerability_CVSS) HasV3() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_V3 != nil
}

func (x *VulnerabilityReport_Vulnerability_CVSS) HasSource() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VulnerabilityReport_Vulnerability_CVSS) HasUrl() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *VulnerabilityReport_Vulnerability_CVSS) ClearV2() {
	x.xxx_hidden_V2 = nil
}

func (x *VulnerabilityReport_Vulnerability_CVSS) ClearV3() {
	x.xxx_hidden_V3 = nil
}

func (x *VulnerabilityReport_Vulnerability_CVSS) ClearSource() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Source = VulnerabilityReport_Vulnerability_CVSS_SOURCE_UNKNOWN
}

func (x *VulnerabilityReport_Vulnerability_CVSS) ClearUrl() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Url = nil
}

type VulnerabilityReport_Vulnerability_CVSS_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	V2     *VulnerabilityReport_Vulnerability_CVSS_V2
	V3     *VulnerabilityReport_Vulnerability_CVSS_V3
	Source *VulnerabilityReport_Vulnerability_CVSS_Source
	Url    *string
}

func (b0 VulnerabilityReport_Vulnerability_CVSS_builder) Build() *VulnerabilityReport_Vulnerability_CVSS {
	m0 := &VulnerabilityReport_Vulnerability_CVSS{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_V2 = b.V2
	x.xxx_hidden_V3 = b.V3
	if b.Source != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Source = *b.Source
	}
	if b.Url != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Url = b.Url
	}
	return m0
}

type VulnerabilityReport_Vulnerability_EPSS struct {
	state                   protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Date         *string                `protobuf:"bytes,1,opt,name=date"`
	xxx_hidden_ModelVersion *string                `protobuf:"bytes,2,opt,name=model_version,json=modelVersion"`
	xxx_hidden_Probability  float32                `protobuf:"fixed32,3,opt,name=probability"`
	xxx_hidden_Percentile   float32                `protobuf:"fixed32,4,opt,name=percentile"`
	XXX_raceDetectHookData  protoimpl.RaceDetectHookData
	XXX_presence            [1]uint32
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *VulnerabilityReport_Vulnerability_EPSS) Reset() {
	*x = VulnerabilityReport_Vulnerability_EPSS{}
	mi := &file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VulnerabilityReport_Vulnerability_EPSS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityReport_Vulnerability_EPSS) ProtoMessage() {}

func (x *VulnerabilityReport_Vulnerability_EPSS) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VulnerabilityReport_Vulnerability_EPSS) GetDate() string {
	if x != nil {
		if x.xxx_hidden_Date != nil {
			return *x.xxx_hidden_Date
		}
		return ""
	}
	return ""
}

func (x *VulnerabilityReport_Vulnerability_EPSS) GetModelVersion() string {
	if x != nil {
		if x.xxx_hidden_ModelVersion != nil {
			return *x.xxx_hidden_ModelVersion
		}
		return ""
	}
	return ""
}

func (x *VulnerabilityReport_Vulnerability_EPSS) GetProbability() float32 {
	if x != nil {
		return x.xxx_hidden_Probability
	}
	return 0
}

func (x *VulnerabilityReport_Vulnerability_EPSS) GetPercentile() float32 {
	if x != nil {
		return x.xxx_hidden_Percentile
	}
	return 0
}

func (x *VulnerabilityReport_Vulnerability_EPSS) SetDate(v string) {
	x.xxx_hidden_Date = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *VulnerabilityReport_Vulnerability_EPSS) SetModelVersion(v string) {
	x.xxx_hidden_ModelVersion = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *VulnerabilityReport_Vulnerability_EPSS) SetProbability(v float32) {
	x.xxx_hidden_Probability = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *VulnerabilityReport_Vulnerability_EPSS) SetPercentile(v float32) {
	x.xxx_hidden_Percentile = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *VulnerabilityReport_Vulnerability_EPSS) HasDate() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VulnerabilityReport_Vulnerability_EPSS) HasModelVersion() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VulnerabilityReport_Vulnerability_EPSS) HasProbability() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *VulnerabilityReport_Vulnerability_EPSS) HasPercentile() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *VulnerabilityReport_Vulnerability_EPSS) ClearDate() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Date = nil
}

func (x *VulnerabilityReport_Vulnerability_EPSS) ClearModelVersion() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_ModelVersion = nil
}

func (x *VulnerabilityReport_Vulnerability_EPSS) ClearProbability() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Probability = 0
}

func (x *VulnerabilityReport_Vulnerability_EPSS) ClearPercentile() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Percentile = 0
}

type VulnerabilityReport_Vulnerability_EPSS_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Date         *string
	ModelVersion *string
	Probability  *float32
	Percentile   *float32
}

func (b0 VulnerabilityReport_Vulnerability_EPSS_builder) Build() *VulnerabilityReport_Vulnerability_EPSS {
	m0 := &VulnerabilityReport_Vulnerability_EPSS{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Date != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Date = b.Date
	}
	if b.ModelVersion != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_ModelVersion = b.ModelVersion
	}
	if b.Probability != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Probability = *b.Probability
	}
	if b.Percentile != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Percentile = *b.Percentile
	}
	return m0
}

type VulnerabilityReport_Vulnerability_CVSS_V2 struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_BaseScore   float32                `protobuf:"fixed32,1,opt,name=base_score,json=baseScore"`
	xxx_hidden_Vector      *string                `protobuf:"bytes,2,opt,name=vector"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V2) Reset() {
	*x = VulnerabilityReport_Vulnerability_CVSS_V2{}
	mi := &file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityReport_Vulnerability_CVSS_V2) ProtoMessage() {}

func (x *VulnerabilityReport_Vulnerability_CVSS_V2) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V2) GetBaseScore() float32 {
	if x != nil {
		return x.xxx_hidden_BaseScore
	}
	return 0
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V2) GetVector() string {
	if x != nil {
		if x.xxx_hidden_Vector != nil {
			return *x.xxx_hidden_Vector
		}
		return ""
	}
	return ""
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V2) SetBaseScore(v float32) {
	x.xxx_hidden_BaseScore = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V2) SetVector(v string) {
	x.xxx_hidden_Vector = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V2) HasBaseScore() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V2) HasVector() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V2) ClearBaseScore() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_BaseScore = 0
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V2) ClearVector() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Vector = nil
}

type VulnerabilityReport_Vulnerability_CVSS_V2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	BaseScore *float32
	Vector    *string
}

func (b0 VulnerabilityReport_Vulnerability_CVSS_V2_builder) Build() *VulnerabilityReport_Vulnerability_CVSS_V2 {
	m0 := &VulnerabilityReport_Vulnerability_CVSS_V2{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BaseScore != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_BaseScore = *b.BaseScore
	}
	if b.Vector != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Vector = b.Vector
	}
	return m0
}

type VulnerabilityReport_Vulnerability_CVSS_V3 struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_BaseScore   float32                `protobuf:"fixed32,1,opt,name=base_score,json=baseScore"`
	xxx_hidden_Vector      *string                `protobuf:"bytes,2,opt,name=vector"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V3) Reset() {
	*x = VulnerabilityReport_Vulnerability_CVSS_V3{}
	mi := &file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnerabilityReport_Vulnerability_CVSS_V3) ProtoMessage() {}

func (x *VulnerabilityReport_Vulnerability_CVSS_V3) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V3) GetBaseScore() float32 {
	if x != nil {
		return x.xxx_hidden_BaseScore
	}
	return 0
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V3) GetVector() string {
	if x != nil {
		if x.xxx_hidden_Vector != nil {
			return *x.xxx_hidden_Vector
		}
		return ""
	}
	return ""
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V3) SetBaseScore(v float32) {
	x.xxx_hidden_BaseScore = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V3) SetVector(v string) {
	x.xxx_hidden_Vector = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V3) HasBaseScore() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V3) HasVector() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V3) ClearBaseScore() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_BaseScore = 0
}

func (x *VulnerabilityReport_Vulnerability_CVSS_V3) ClearVector() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Vector = nil
}

type VulnerabilityReport_Vulnerability_CVSS_V3_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	BaseScore *float32
	Vector    *string
}

func (b0 VulnerabilityReport_Vulnerability_CVSS_V3_builder) Build() *VulnerabilityReport_Vulnerability_CVSS_V3 {
	m0 := &VulnerabilityReport_Vulnerability_CVSS_V3{}
	b, x := &b0, m0
	_, _ = b, x
	if b.BaseScore != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_BaseScore = *b.BaseScore
	}
	if b.Vector != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Vector = b.Vector
	}
	return m0
}

var File_internalapi_scanner_v4_vulnerability_report_proto protoreflect.FileDescriptor

const file_internalapi_scanner_v4_vulnerability_report_proto_rawDesc = "" +
	"\n" +
	"1internalapi/scanner/v4/vulnerability_report.proto\x12\n" +
	"scanner.v4\x1a\x1fgoogle/protobuf/timestamp.proto\x1a#internalapi/scanner/v4/common.proto\x1a!google/protobuf/go_features.proto\"\x92\x11\n" +
	"\x13VulnerabilityReport\x12\x17\n" +
	"\ahash_id\x18\x01 \x01(\tR\x06hashId\x12^\n" +
	"\x0fvulnerabilities\x18\x02 \x03(\v24.scanner.v4.VulnerabilityReport.VulnerabilitiesEntryR\x0fvulnerabilities\x12t\n" +
	"\x17package_vulnerabilities\x18\x03 \x03(\v2;.scanner.v4.VulnerabilityReport.PackageVulnerabilitiesEntryR\x16packageVulnerabilities\x120\n" +
	"\bcontents\x18\x04 \x01(\v2\x14.scanner.v4.ContentsR\bcontents\x12:\n" +
	"\x05notes\x18\x05 \x03(\x0e2$.scanner.v4.VulnerabilityReport.NoteR\x05notes\x1a2\n" +
	"\bAdvisory\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04link\x18\x02 \x01(\tR\x04link\x1a\xc7\v\n" +
	"\rVulnerability\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12D\n" +
	"\badvisory\x18\x0f \x01(\v2(.scanner.v4.VulnerabilityReport.AdvisoryR\badvisory\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x122\n" +
	"\x06issued\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x06issued\x12\x16\n" +
	"\x04link\x18\x05 \x01(\tB\x02\x18\x01R\x04link\x12\x1a\n" +
	"\bseverity\x18\x06 \x01(\tR\bseverity\x12g\n" +
	"\x13normalized_severity\x18\a \x01(\x0e26.scanner.v4.VulnerabilityReport.Vulnerability.SeverityR\x12normalizedSeverity\x12\x1d\n" +
	"\n" +
	"package_id\x18\b \x01(\tR\tpackageId\x12'\n" +
	"\x0fdistribution_id\x18\t \x01(\tR\x0edistributionId\x12#\n" +
	"\rrepository_id\x18\n" +
	" \x01(\tR\frepositoryId\x12(\n" +
	"\x10fixed_in_version\x18\v \x01(\tR\x0efixedInVersion\x12J\n" +
	"\x04cvss\x18\f \x01(\v22.scanner.v4.VulnerabilityReport.Vulnerability.CVSSB\x02\x18\x01R\x04cvss\x12U\n" +
	"\fcvss_metrics\x18\r \x03(\v22.scanner.v4.VulnerabilityReport.Vulnerability.CVSSR\vcvssMetrics\x12U\n" +
	"\fepss_metrics\x18\x0e \x01(\v22.scanner.v4.VulnerabilityReport.Vulnerability.EPSSR\vepssMetrics\x1a\xc5\x03\n" +
	"\x04CVSS\x12E\n" +
	"\x02v2\x18\x01 \x01(\v25.scanner.v4.VulnerabilityReport.Vulnerability.CVSS.V2R\x02v2\x12E\n" +
	"\x02v3\x18\x02 \x01(\v25.scanner.v4.VulnerabilityReport.Vulnerability.CVSS.V3R\x02v3\x12Q\n" +
	"\x06source\x18\x03 \x01(\x0e29.scanner.v4.VulnerabilityReport.Vulnerability.CVSS.SourceR\x06source\x12\x10\n" +
	"\x03url\x18\x04 \x01(\tR\x03url\x1a;\n" +
	"\x02V2\x12\x1d\n" +
	"\n" +
	"base_score\x18\x01 \x01(\x02R\tbaseScore\x12\x16\n" +
	"\x06vector\x18\x02 \x01(\tR\x06vector\x1a;\n" +
	"\x02V3\x12\x1d\n" +
	"\n" +
	"base_score\x18\x01 \x01(\x02R\tbaseScore\x12\x16\n" +
	"\x06vector\x18\x02 \x01(\tR\x06vector\"P\n" +
	"\x06Source\x12\x12\n" +
	"\x0eSOURCE_UNKNOWN\x10\x00\x12\x12\n" +
	"\x0eSOURCE_RED_HAT\x10\x01\x12\x0e\n" +
	"\n" +
	"SOURCE_OSV\x10\x02\x12\x0e\n" +
	"\n" +
	"SOURCE_NVD\x10\x03\x1a\x81\x01\n" +
	"\x04EPSS\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\x12#\n" +
	"\rmodel_version\x18\x02 \x01(\tR\fmodelVersion\x12 \n" +
	"\vprobability\x18\x03 \x01(\x02R\vprobability\x12\x1e\n" +
	"\n" +
	"percentile\x18\x04 \x01(\x02R\n" +
	"percentile\"|\n" +
	"\bSeverity\x12\x18\n" +
	"\x14SEVERITY_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fSEVERITY_LOW\x10\x01\x12\x15\n" +
	"\x11SEVERITY_MODERATE\x10\x02\x12\x16\n" +
	"\x12SEVERITY_IMPORTANT\x10\x03\x12\x15\n" +
	"\x11SEVERITY_CRITICAL\x10\x04\x1aq\n" +
	"\x14VulnerabilitiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12C\n" +
	"\x05value\x18\x02 \x01(\v2-.scanner.v4.VulnerabilityReport.VulnerabilityR\x05value:\x028\x01\x1aa\n" +
	"\x1bPackageVulnerabilitiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.scanner.v4.StringListR\x05value:\x028\x01\"J\n" +
	"\x04Note\x12\x14\n" +
	"\x10NOTE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fNOTE_OS_UNKNOWN\x10\x01\x12\x17\n" +
	"\x13NOTE_OS_UNSUPPORTED\x10\x02\"$\n" +
	"\n" +
	"StringList\x12\x16\n" +
	"\x06values\x18\x01 \x03(\tR\x06valuesB%Z\x1b./internalapi/scanner/v4;v4\x92\x03\x05\xd2>\x02\x10\x02b\beditionsp\xe8\a"

var file_internalapi_scanner_v4_vulnerability_report_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_internalapi_scanner_v4_vulnerability_report_proto_goTypes = []any{
	(VulnerabilityReport_Note)(0),                      // 0: scanner.v4.VulnerabilityReport.Note
	(VulnerabilityReport_Vulnerability_Severity)(0),    // 1: scanner.v4.VulnerabilityReport.Vulnerability.Severity
	(VulnerabilityReport_Vulnerability_CVSS_Source)(0), // 2: scanner.v4.VulnerabilityReport.Vulnerability.CVSS.Source
	(*VulnerabilityReport)(nil),                        // 3: scanner.v4.VulnerabilityReport
	(*StringList)(nil),                                 // 4: scanner.v4.StringList
	(*VulnerabilityReport_Advisory)(nil),               // 5: scanner.v4.VulnerabilityReport.Advisory
	(*VulnerabilityReport_Vulnerability)(nil),          // 6: scanner.v4.VulnerabilityReport.Vulnerability
	nil, // 7: scanner.v4.VulnerabilityReport.VulnerabilitiesEntry
	nil, // 8: scanner.v4.VulnerabilityReport.PackageVulnerabilitiesEntry
	(*VulnerabilityReport_Vulnerability_CVSS)(nil),    // 9: scanner.v4.VulnerabilityReport.Vulnerability.CVSS
	(*VulnerabilityReport_Vulnerability_EPSS)(nil),    // 10: scanner.v4.VulnerabilityReport.Vulnerability.EPSS
	(*VulnerabilityReport_Vulnerability_CVSS_V2)(nil), // 11: scanner.v4.VulnerabilityReport.Vulnerability.CVSS.V2
	(*VulnerabilityReport_Vulnerability_CVSS_V3)(nil), // 12: scanner.v4.VulnerabilityReport.Vulnerability.CVSS.V3
	(*Contents)(nil),              // 13: scanner.v4.Contents
	(*timestamppb.Timestamp)(nil), // 14: google.protobuf.Timestamp
}
var file_internalapi_scanner_v4_vulnerability_report_proto_depIdxs = []int32{
	7,  // 0: scanner.v4.VulnerabilityReport.vulnerabilities:type_name -> scanner.v4.VulnerabilityReport.VulnerabilitiesEntry
	8,  // 1: scanner.v4.VulnerabilityReport.package_vulnerabilities:type_name -> scanner.v4.VulnerabilityReport.PackageVulnerabilitiesEntry
	13, // 2: scanner.v4.VulnerabilityReport.contents:type_name -> scanner.v4.Contents
	0,  // 3: scanner.v4.VulnerabilityReport.notes:type_name -> scanner.v4.VulnerabilityReport.Note
	5,  // 4: scanner.v4.VulnerabilityReport.Vulnerability.advisory:type_name -> scanner.v4.VulnerabilityReport.Advisory
	14, // 5: scanner.v4.VulnerabilityReport.Vulnerability.issued:type_name -> google.protobuf.Timestamp
	1,  // 6: scanner.v4.VulnerabilityReport.Vulnerability.normalized_severity:type_name -> scanner.v4.VulnerabilityReport.Vulnerability.Severity
	9,  // 7: scanner.v4.VulnerabilityReport.Vulnerability.cvss:type_name -> scanner.v4.VulnerabilityReport.Vulnerability.CVSS
	9,  // 8: scanner.v4.VulnerabilityReport.Vulnerability.cvss_metrics:type_name -> scanner.v4.VulnerabilityReport.Vulnerability.CVSS
	10, // 9: scanner.v4.VulnerabilityReport.Vulnerability.epss_metrics:type_name -> scanner.v4.VulnerabilityReport.Vulnerability.EPSS
	6,  // 10: scanner.v4.VulnerabilityReport.VulnerabilitiesEntry.value:type_name -> scanner.v4.VulnerabilityReport.Vulnerability
	4,  // 11: scanner.v4.VulnerabilityReport.PackageVulnerabilitiesEntry.value:type_name -> scanner.v4.StringList
	11, // 12: scanner.v4.VulnerabilityReport.Vulnerability.CVSS.v2:type_name -> scanner.v4.VulnerabilityReport.Vulnerability.CVSS.V2
	12, // 13: scanner.v4.VulnerabilityReport.Vulnerability.CVSS.v3:type_name -> scanner.v4.VulnerabilityReport.Vulnerability.CVSS.V3
	2,  // 14: scanner.v4.VulnerabilityReport.Vulnerability.CVSS.source:type_name -> scanner.v4.VulnerabilityReport.Vulnerability.CVSS.Source
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_internalapi_scanner_v4_vulnerability_report_proto_init() }
func file_internalapi_scanner_v4_vulnerability_report_proto_init() {
	if File_internalapi_scanner_v4_vulnerability_report_proto != nil {
		return
	}
	file_internalapi_scanner_v4_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internalapi_scanner_v4_vulnerability_report_proto_rawDesc), len(file_internalapi_scanner_v4_vulnerability_report_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internalapi_scanner_v4_vulnerability_report_proto_goTypes,
		DependencyIndexes: file_internalapi_scanner_v4_vulnerability_report_proto_depIdxs,
		EnumInfos:         file_internalapi_scanner_v4_vulnerability_report_proto_enumTypes,
		MessageInfos:      file_internalapi_scanner_v4_vulnerability_report_proto_msgTypes,
	}.Build()
	File_internalapi_scanner_v4_vulnerability_report_proto = out.File
	file_internalapi_scanner_v4_vulnerability_report_proto_goTypes = nil
	file_internalapi_scanner_v4_vulnerability_report_proto_depIdxs = nil
}
