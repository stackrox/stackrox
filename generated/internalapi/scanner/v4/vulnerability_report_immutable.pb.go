// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package v4

import (
	"iter"
	"time"
)

// ImmutableVulnerabilityReport is an immutable interface for VulnerabilityReport
type ImmutableVulnerabilityReport interface {
	GetHashId() string
	GetImmutableVulnerabilities() iter.Seq2[string, ImmutableVulnerabilityReport_Vulnerability]
	GetImmutablePackageVulnerabilities() iter.Seq2[string, ImmutableStringList]
	GetImmutableContents() ImmutableContents
	GetImmutableNotes() iter.Seq[VulnerabilityReport_Note]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *VulnerabilityReport
}

// GetImmutableVulnerabilities implements ImmutableVulnerabilityReport
func (m *VulnerabilityReport) GetImmutableVulnerabilities() iter.Seq2[string, ImmutableVulnerabilityReport_Vulnerability] {
	return func(yield func(string, ImmutableVulnerabilityReport_Vulnerability) bool) {
		if m == nil || m.Vulnerabilities == nil {
			return
		}
		for k, v := range m.Vulnerabilities {
			if !yield(k, v) {
				return
			}
		}
	}
}

// GetImmutablePackageVulnerabilities implements ImmutableVulnerabilityReport
func (m *VulnerabilityReport) GetImmutablePackageVulnerabilities() iter.Seq2[string, ImmutableStringList] {
	return func(yield func(string, ImmutableStringList) bool) {
		if m == nil || m.PackageVulnerabilities == nil {
			return
		}
		for k, v := range m.PackageVulnerabilities {
			if !yield(k, v) {
				return
			}
		}
	}
}

// GetImmutableContents implements ImmutableVulnerabilityReport
func (m *VulnerabilityReport) GetImmutableContents() ImmutableContents {
	return m.GetContents()
}

// GetImmutableNotes implements ImmutableVulnerabilityReport
func (m *VulnerabilityReport) GetImmutableNotes() iter.Seq[VulnerabilityReport_Note] {
	return func(yield func(VulnerabilityReport_Note) bool) {
		if m == nil || m.Notes == nil {
			return
		}
		for _, v := range m.Notes {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that VulnerabilityReport implements ImmutableVulnerabilityReport
var _ ImmutableVulnerabilityReport = (*VulnerabilityReport)(nil)

// ImmutableVulnerabilityReport_Advisory is an immutable interface for VulnerabilityReport_Advisory
type ImmutableVulnerabilityReport_Advisory interface {
	GetName() string
	GetLink() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *VulnerabilityReport_Advisory
}

// Verify that VulnerabilityReport_Advisory implements ImmutableVulnerabilityReport_Advisory
var _ ImmutableVulnerabilityReport_Advisory = (*VulnerabilityReport_Advisory)(nil)

// ImmutableVulnerabilityReport_Vulnerability is an immutable interface for VulnerabilityReport_Vulnerability
type ImmutableVulnerabilityReport_Vulnerability interface {
	GetId() string
	GetName() string
	GetImmutableAdvisory() ImmutableVulnerabilityReport_Advisory
	GetDescription() string
	GetImmutableIssued() time.Time
	GetLink() string
	GetSeverity() string
	GetNormalizedSeverity() VulnerabilityReport_Vulnerability_Severity
	GetPackageId() string
	GetDistributionId() string
	GetRepositoryId() string
	GetFixedInVersion() string
	GetImmutableCvss() ImmutableVulnerabilityReport_Vulnerability_CVSS
	GetImmutableCvssMetrics() iter.Seq[ImmutableVulnerabilityReport_Vulnerability_CVSS]
	GetImmutableEpssMetrics() ImmutableVulnerabilityReport_Vulnerability_EPSS
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *VulnerabilityReport_Vulnerability
}

// GetImmutableAdvisory implements ImmutableVulnerabilityReport_Vulnerability
func (m *VulnerabilityReport_Vulnerability) GetImmutableAdvisory() ImmutableVulnerabilityReport_Advisory {
	return m.GetAdvisory()
}

// GetImmutableIssued implements ImmutableVulnerabilityReport_Vulnerability
func (m *VulnerabilityReport_Vulnerability) GetImmutableIssued() time.Time {
	if m == nil || m.Issued == nil {
		return time.Time{}
	}
	return m.Issued.AsTime()
}

// GetImmutableCvss implements ImmutableVulnerabilityReport_Vulnerability
func (m *VulnerabilityReport_Vulnerability) GetImmutableCvss() ImmutableVulnerabilityReport_Vulnerability_CVSS {
	return m.GetCvss()
}

// GetImmutableCvssMetrics implements ImmutableVulnerabilityReport_Vulnerability
func (m *VulnerabilityReport_Vulnerability) GetImmutableCvssMetrics() iter.Seq[ImmutableVulnerabilityReport_Vulnerability_CVSS] {
	return func(yield func(ImmutableVulnerabilityReport_Vulnerability_CVSS) bool) {
		if m == nil || m.CvssMetrics == nil {
			return
		}
		for _, v := range m.CvssMetrics {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableEpssMetrics implements ImmutableVulnerabilityReport_Vulnerability
func (m *VulnerabilityReport_Vulnerability) GetImmutableEpssMetrics() ImmutableVulnerabilityReport_Vulnerability_EPSS {
	return m.GetEpssMetrics()
}

// Verify that VulnerabilityReport_Vulnerability implements ImmutableVulnerabilityReport_Vulnerability
var _ ImmutableVulnerabilityReport_Vulnerability = (*VulnerabilityReport_Vulnerability)(nil)

// ImmutableVulnerabilityReport_Vulnerability_CVSS is an immutable interface for VulnerabilityReport_Vulnerability_CVSS
type ImmutableVulnerabilityReport_Vulnerability_CVSS interface {
	GetImmutableV2() ImmutableVulnerabilityReport_Vulnerability_CVSS_V2
	GetImmutableV3() ImmutableVulnerabilityReport_Vulnerability_CVSS_V3
	GetSource() VulnerabilityReport_Vulnerability_CVSS_Source
	GetUrl() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *VulnerabilityReport_Vulnerability_CVSS
}

// GetImmutableV2 implements ImmutableVulnerabilityReport_Vulnerability_CVSS
func (m *VulnerabilityReport_Vulnerability_CVSS) GetImmutableV2() ImmutableVulnerabilityReport_Vulnerability_CVSS_V2 {
	return m.GetV2()
}

// GetImmutableV3 implements ImmutableVulnerabilityReport_Vulnerability_CVSS
func (m *VulnerabilityReport_Vulnerability_CVSS) GetImmutableV3() ImmutableVulnerabilityReport_Vulnerability_CVSS_V3 {
	return m.GetV3()
}

// Verify that VulnerabilityReport_Vulnerability_CVSS implements ImmutableVulnerabilityReport_Vulnerability_CVSS
var _ ImmutableVulnerabilityReport_Vulnerability_CVSS = (*VulnerabilityReport_Vulnerability_CVSS)(nil)

// ImmutableVulnerabilityReport_Vulnerability_CVSS_V2 is an immutable interface for VulnerabilityReport_Vulnerability_CVSS_V2
type ImmutableVulnerabilityReport_Vulnerability_CVSS_V2 interface {
	GetBaseScore() float32
	GetVector() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *VulnerabilityReport_Vulnerability_CVSS_V2
}

// Verify that VulnerabilityReport_Vulnerability_CVSS_V2 implements ImmutableVulnerabilityReport_Vulnerability_CVSS_V2
var _ ImmutableVulnerabilityReport_Vulnerability_CVSS_V2 = (*VulnerabilityReport_Vulnerability_CVSS_V2)(nil)

// ImmutableVulnerabilityReport_Vulnerability_CVSS_V3 is an immutable interface for VulnerabilityReport_Vulnerability_CVSS_V3
type ImmutableVulnerabilityReport_Vulnerability_CVSS_V3 interface {
	GetBaseScore() float32
	GetVector() string
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *VulnerabilityReport_Vulnerability_CVSS_V3
}

// Verify that VulnerabilityReport_Vulnerability_CVSS_V3 implements ImmutableVulnerabilityReport_Vulnerability_CVSS_V3
var _ ImmutableVulnerabilityReport_Vulnerability_CVSS_V3 = (*VulnerabilityReport_Vulnerability_CVSS_V3)(nil)

// ImmutableVulnerabilityReport_Vulnerability_EPSS is an immutable interface for VulnerabilityReport_Vulnerability_EPSS
type ImmutableVulnerabilityReport_Vulnerability_EPSS interface {
	GetDate() string
	GetModelVersion() string
	GetProbability() float32
	GetPercentile() float32
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *VulnerabilityReport_Vulnerability_EPSS
}

// Verify that VulnerabilityReport_Vulnerability_EPSS implements ImmutableVulnerabilityReport_Vulnerability_EPSS
var _ ImmutableVulnerabilityReport_Vulnerability_EPSS = (*VulnerabilityReport_Vulnerability_EPSS)(nil)

// ImmutableStringList is an immutable interface for StringList
type ImmutableStringList interface {
	GetImmutableValues() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *StringList
}

// GetImmutableValues implements ImmutableStringList
func (m *StringList) GetImmutableValues() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.Values == nil {
			return
		}
		for _, v := range m.Values {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that StringList implements ImmutableStringList
var _ ImmutableStringList = (*StringList)(nil)
