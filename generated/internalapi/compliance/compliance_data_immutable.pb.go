// Code generated by protoc-gen-go-immutable. DO NOT EDIT.

package compliance

import (
	storage "github.com/stackrox/rox/generated/storage"
)

import (
	"iter"
	"time"
)

// ImmutableGZIPDataChunk is an immutable interface for GZIPDataChunk
type ImmutableGZIPDataChunk interface {
	GetGzip() []byte
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *GZIPDataChunk
}

// Verify that GZIPDataChunk implements ImmutableGZIPDataChunk
var _ ImmutableGZIPDataChunk = (*GZIPDataChunk)(nil)

// ImmutableFile is an immutable interface for File
type ImmutableFile interface {
	GetPath() string
	GetUser() uint32
	GetUserName() string
	GetGroup() uint32
	GetGroupName() string
	GetPermissions() uint32
	GetContent() []byte
	GetIsDir() bool
	GetImmutableChildren() iter.Seq[ImmutableFile]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *File
}

// GetImmutableChildren implements ImmutableFile
func (m *File) GetImmutableChildren() iter.Seq[ImmutableFile] {
	return func(yield func(ImmutableFile) bool) {
		if m == nil || m.Children == nil {
			return
		}
		for _, v := range m.Children {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that File implements ImmutableFile
var _ ImmutableFile = (*File)(nil)

// ImmutableCommandLine is an immutable interface for CommandLine
type ImmutableCommandLine interface {
	GetProcess() string
	GetImmutableArgs() iter.Seq[ImmutableCommandLine_Args]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *CommandLine
}

// GetImmutableArgs implements ImmutableCommandLine
func (m *CommandLine) GetImmutableArgs() iter.Seq[ImmutableCommandLine_Args] {
	return func(yield func(ImmutableCommandLine_Args) bool) {
		if m == nil || m.Args == nil {
			return
		}
		for _, v := range m.Args {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that CommandLine implements ImmutableCommandLine
var _ ImmutableCommandLine = (*CommandLine)(nil)

// ImmutableCommandLine_Args is an immutable interface for CommandLine_Args
type ImmutableCommandLine_Args interface {
	GetKey() string
	GetImmutableValues() iter.Seq[string]
	GetImmutableFile() ImmutableFile
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *CommandLine_Args
}

// GetImmutableValues implements ImmutableCommandLine_Args
func (m *CommandLine_Args) GetImmutableValues() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.Values == nil {
			return
		}
		for _, v := range m.Values {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableFile implements ImmutableCommandLine_Args
func (m *CommandLine_Args) GetImmutableFile() ImmutableFile {
	return m.GetFile()
}

// Verify that CommandLine_Args implements ImmutableCommandLine_Args
var _ ImmutableCommandLine_Args = (*CommandLine_Args)(nil)

// ImmutableInsecureRegistriesConfig is an immutable interface for InsecureRegistriesConfig
type ImmutableInsecureRegistriesConfig interface {
	GetImmutableInsecureRegistries() iter.Seq[string]
	GetImmutableInsecureCidrs() iter.Seq[string]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *InsecureRegistriesConfig
}

// GetImmutableInsecureRegistries implements ImmutableInsecureRegistriesConfig
func (m *InsecureRegistriesConfig) GetImmutableInsecureRegistries() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.InsecureRegistries == nil {
			return
		}
		for _, v := range m.InsecureRegistries {
			if !yield(v) {
				return
			}
		}
	}
}

// GetImmutableInsecureCidrs implements ImmutableInsecureRegistriesConfig
func (m *InsecureRegistriesConfig) GetImmutableInsecureCidrs() iter.Seq[string] {
	return func(yield func(string) bool) {
		if m == nil || m.InsecureCidrs == nil {
			return
		}
		for _, v := range m.InsecureCidrs {
			if !yield(v) {
				return
			}
		}
	}
}

// Verify that InsecureRegistriesConfig implements ImmutableInsecureRegistriesConfig
var _ ImmutableInsecureRegistriesConfig = (*InsecureRegistriesConfig)(nil)

// ImmutableContainerRuntimeInfo is an immutable interface for ContainerRuntimeInfo
type ImmutableContainerRuntimeInfo interface {
	GetImmutableInsecureRegistries() ImmutableInsecureRegistriesConfig
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ContainerRuntimeInfo
}

// GetImmutableInsecureRegistries implements ImmutableContainerRuntimeInfo
func (m *ContainerRuntimeInfo) GetImmutableInsecureRegistries() ImmutableInsecureRegistriesConfig {
	return m.GetInsecureRegistries()
}

// Verify that ContainerRuntimeInfo implements ImmutableContainerRuntimeInfo
var _ ImmutableContainerRuntimeInfo = (*ContainerRuntimeInfo)(nil)

// ImmutableComplianceStandardResult is an immutable interface for ComplianceStandardResult
type ImmutableComplianceStandardResult interface {
	GetImmutableNodeCheckResults() iter.Seq2[string, *storage.ComplianceResultValue]
	GetImmutableClusterCheckResults() iter.Seq2[string, *storage.ComplianceResultValue]
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ComplianceStandardResult
}

// GetImmutableNodeCheckResults implements ImmutableComplianceStandardResult
func (m *ComplianceStandardResult) GetImmutableNodeCheckResults() iter.Seq2[string, *storage.ComplianceResultValue] {
	return func(yield func(string, *storage.ComplianceResultValue) bool) {
		if m == nil || m.NodeCheckResults == nil {
			return
		}
		for k, v := range m.NodeCheckResults {
			if !yield(k, v) {
				return
			}
		}
	}
}

// GetImmutableClusterCheckResults implements ImmutableComplianceStandardResult
func (m *ComplianceStandardResult) GetImmutableClusterCheckResults() iter.Seq2[string, *storage.ComplianceResultValue] {
	return func(yield func(string, *storage.ComplianceResultValue) bool) {
		if m == nil || m.ClusterCheckResults == nil {
			return
		}
		for k, v := range m.ClusterCheckResults {
			if !yield(k, v) {
				return
			}
		}
	}
}

// Verify that ComplianceStandardResult implements ImmutableComplianceStandardResult
var _ ImmutableComplianceStandardResult = (*ComplianceStandardResult)(nil)

// ImmutableComplianceReturn is an immutable interface for ComplianceReturn
type ImmutableComplianceReturn interface {
	GetNodeName() string
	GetScrapeId() string
	GetImmutableDockerData() ImmutableGZIPDataChunk
	GetImmutableCommandLines() iter.Seq2[string, ImmutableCommandLine]
	GetImmutableFiles() iter.Seq2[string, ImmutableFile]
	GetImmutableSystemdFiles() iter.Seq2[string, ImmutableFile]
	GetImmutableContainerRuntimeInfo() ImmutableContainerRuntimeInfo
	GetImmutableTime() time.Time
	GetImmutableEvidence() ImmutableGZIPDataChunk
	// VT proto functions
	SizeVT() int
	MarshalVT() ([]byte, error)
	CloneVT() *ComplianceReturn
}

// GetImmutableDockerData implements ImmutableComplianceReturn
func (m *ComplianceReturn) GetImmutableDockerData() ImmutableGZIPDataChunk {
	return m.GetDockerData()
}

// GetImmutableCommandLines implements ImmutableComplianceReturn
func (m *ComplianceReturn) GetImmutableCommandLines() iter.Seq2[string, ImmutableCommandLine] {
	return func(yield func(string, ImmutableCommandLine) bool) {
		if m == nil || m.CommandLines == nil {
			return
		}
		for k, v := range m.CommandLines {
			if !yield(k, v) {
				return
			}
		}
	}
}

// GetImmutableFiles implements ImmutableComplianceReturn
func (m *ComplianceReturn) GetImmutableFiles() iter.Seq2[string, ImmutableFile] {
	return func(yield func(string, ImmutableFile) bool) {
		if m == nil || m.Files == nil {
			return
		}
		for k, v := range m.Files {
			if !yield(k, v) {
				return
			}
		}
	}
}

// GetImmutableSystemdFiles implements ImmutableComplianceReturn
func (m *ComplianceReturn) GetImmutableSystemdFiles() iter.Seq2[string, ImmutableFile] {
	return func(yield func(string, ImmutableFile) bool) {
		if m == nil || m.SystemdFiles == nil {
			return
		}
		for k, v := range m.SystemdFiles {
			if !yield(k, v) {
				return
			}
		}
	}
}

// GetImmutableContainerRuntimeInfo implements ImmutableComplianceReturn
func (m *ComplianceReturn) GetImmutableContainerRuntimeInfo() ImmutableContainerRuntimeInfo {
	return m.GetContainerRuntimeInfo()
}

// GetImmutableTime implements ImmutableComplianceReturn
func (m *ComplianceReturn) GetImmutableTime() time.Time {
	if m == nil || m.Time == nil {
		return time.Time{}
	}
	return m.Time.AsTime()
}

// GetImmutableEvidence implements ImmutableComplianceReturn
func (m *ComplianceReturn) GetImmutableEvidence() ImmutableGZIPDataChunk {
	return m.GetEvidence()
}

// Verify that ComplianceReturn implements ImmutableComplianceReturn
var _ ImmutableComplianceReturn = (*ComplianceReturn)(nil)
