name: Job Preamble
description: Common steps for most jobs
inputs:
  gcloud-version:
    description: 'expected gcloud/sdk version'
    required: false
    default: 363.0.0
  gcp-account:
    description: 'Account to be used to upload tests data'
    required: true
runs:
  using: composite
  steps:
    - name: Auth gcloud
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ inputs.gcp-account }}'
        export_environment_variables: true
        create_credentials_file: true
        cleanup_credentials: true

    - name: Test gcp auth
      continue-on-error: true
      shell: bash
      run: |
        echo "GOOGLE_APPLICATION_CREDENTIALS:${GOOGLE_APPLICATION_CREDENTIALS}"
        if [[ "$(gcloud config get-value core/project 2>/dev/null)" == "acs-san-stackroxci" ]]; then
          echo "Current project is already set to acs-san-stackroxci. Assuming configuration already applied."
        fi

    - name: Check gcloud CLI version
      id: gcloud-version-check
      continue-on-error: true
      shell: bash
      run: |
        version=$(gcloud info --format="value(basic.version)")
        target_gcloud_version="${{ inputs.gcloud-version }}"
        if sort -bcV <<< "${target_gcloud_version}"$'\n'"${version}"; then
          echo "gcloud/google-sdk version ${version} is newer than the expected version ${target_gcloud_version}."
        else
          echo -e "> [!WARNING]\n> gcloud/google-sdk version ${version} is older than the expected version ${target_gcloud_version}." \
            >> $GITHUB_STEP_SUMMARY
          exit 1
        fi

    # auth prepares the environment to auth. setup-gcloud authenticates gcloud
    - name: Install gcloud CLI
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        skip_install: ${{ steps.gcloud-version-check.outcome != 'failure' }}
        version: ${{ steps.gcloud-version-check.outcome != 'failure' && 'latest' || '>= ${{ inputs.gcloud-version }}' }}
        # does not check installed gcloud version. checks toolcache for previously installed and cached

    - name: Shim gsutil as gcloud storage
      shell: bash
      continue-on-error: true
      run: |
        tee -a ~/.boto <<EOF
        [GSUtil]
        use_gcloud_storage=True
        EOF
        gsutil version -l

    - name: Recover docker image cache space
      run: |
        df --si /
        printf 'Docker prune: '
        docker system prune --force --all
        df --si /
      shell: bash

    - name: Remove unused gha runner tools if found
      shell: bash
      run: |
        set +e
        set -x
        cleanup=(
          /usr/share/dotnet
          /usr/local/lib/android
          /opt/ghc
          /opt/hostedtoolcache/CodeQL
          /opt/hostedtoolcache/Ruby
        )
        for d in "${cleanup[@]}"; do
          if [[ -d "/mnt${d}" ]]; then
            rm -rf "/mnt${d}"
          elif [[ -d "$d" ]]; then
            rm -rf "$d" \
              || sudo rm -rf "$d"
          fi
        done
        df --si /

    - name: Ignore dubious repository ownership
      run: |
        # Prevent fatal error "detected dubious ownership in repository" from recent git.
        git config --global --add safe.directory "$(pwd)"
      shell: bash

    - name: Record job info
      uses: gacts/run-and-post-run@d803f6920adc9a47eeac4cb6c93dbc2e2890c684 # v1.4.0
      env:
        GCP_SERVICE_ACCOUNT_STACKROX_CI: ${{ inputs.gcp-account }}
      if: "${{ env.GCP_SERVICE_ACCOUNT_STACKROX_CI != '' }}"
      with:
        shell: bash
        run: >
          source scripts/ci/lib.sh;
          create_job_record "${{ github.job }}" "gha";
        post: >
          source scripts/ci/lib.sh;
          update_job_record outcome "${{ job.status }}" stopped_at "CURRENT_TIMESTAMP()";
          df --si /;
