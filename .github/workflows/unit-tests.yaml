name: Unit Tests
on:
  push:
    tags:
    - '*'
    branches:
    - master
    - release-*
  pull_request:
    types:
    - opened
    - reopened
    - synchronize
jobs:
  go:
    strategy:
      fail-fast: false
      matrix:
        gotags: [ 'GOTAGS=""', 'GOTAGS=release' ]
    runs-on: ubuntu-latest
    outputs:
      new-jiras: ${{ steps.junit2jira.outputs.new-jiras }}
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.4.9
      volumes:  # job-preamble deletes unused host runner files under /mnt
        - /usr:/mnt/usr
        - /opt:/mnt/opt
    steps:
    - run: df -h

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: ./.github/actions/job-preamble
      with:
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}

    - run: df -h

    - name: Cache Go dependencies
      uses: ./.github/actions/cache-go-dependencies

    - run: df -h

    - name: Go Unit Tests
      run: ${{ matrix.gotags }} make go-unit-tests

    - uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: go-unit-tests

    - run: df -h

    - name: Generate junit report
      if: always()
      run: make generate-junit-reports

    - run: df -h

    - name: Publish Test Report
      uses: test-summary/action@v2
      if: always()
      with:
        paths: 'junit-reports/report.xml'

    - run: df -h

    - name: Go Integration Unit Tests
      run: ${{ matrix.gotags }} make integration-unit-tests

    - run: df -h

    - name: Go Operator Integration Tests
      run: ${{ matrix.gotags }} make -C operator/ test-integration

    - run: df -h

    - name: Generate junit report
      if: always()
      run: make generate-junit-reports

    - run: df -h

    - name: Publish Test Report
      uses: test-summary/action@v2
      if: always()
      with:
        paths: 'junit-reports/report.xml'

    - run: df -h

    - name: Report test failures to Jira
      if: (!cancelled())
      id: junit2jira
      uses: ./.github/actions/junit2jira
      with:
        create-jiras: ${{ github.event_name == 'push' }}
        jira-token: ${{ secrets.JIRA_TOKEN }}
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}
        directory: 'junit-reports'

  go-postgres:
    strategy:
      fail-fast: false
      matrix:
        gotags: [ 'GOTAGS=""', 'GOTAGS=release' ]
        pg: [ '13', '15' ]
    runs-on: ubuntu-latest
    outputs:
      new-jiras: ${{ steps.junit2jira.outputs.new-jiras }}
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.4.9
      volumes:  # job-preamble deletes unused host runner files under /mnt
        - /usr:/mnt/usr
        - /opt:/mnt/opt
    steps:
    - run: df -h

    - name: Set Postgres version
      run: |
        echo "/usr/pgsql-${{ matrix.pg }}/bin" >> "${GITHUB_PATH}"

    - run: df -h

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: ./.github/actions/job-preamble
      with:
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}

    - run: df -h

    - name: Run Postgres
      run: |
        su postgres -c 'initdb -D /tmp/data'
        su postgres -c 'pg_ctl -D /tmp/data start'

    - run: df -h

    - name: Cache Go dependencies
      uses: ./.github/actions/cache-go-dependencies

    - run: df -h

    - name: Is Postgres ready
      run: pg_isready -h 127.0.0.1

    - run: df -h

    - name: Go Unit Tests
      run: ${{ matrix.gotags }} make go-postgres-unit-tests

    - uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: go-unit-tests

    - run: df -h

    - name: Generate junit report
      if: always()
      run: make generate-junit-reports

    - run: df -h

    - name: Publish Test Report
      uses: test-summary/action@v2
      if: always()
      with:
        paths: 'junit-reports/report.xml'

    - run: df -h

    - name: Report junit failures in jira
      if: (!cancelled())
      id: junit2jira
      uses: ./.github/actions/junit2jira
      with:
        create-jiras: ${{ github.event_name == 'push' }}
        jira-token: ${{ secrets.JIRA_TOKEN }}
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}
        directory: 'junit-reports'

  go-bench:
    runs-on: ubuntu-latest
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.4.9
      volumes:  # job-preamble deletes unused host runner files under /mnt
        - /usr:/mnt/usr
        - /opt:/mnt/opt
    steps:
    - run: df -h

    - name: Set Postgres version
      run: |
        echo "/usr/pgsql-15/bin" >> "${GITHUB_PATH}"

    - run: df -h

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: ./.github/actions/job-preamble
      with:
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}

    - run: df -h

    - name: Run Postgres
      run: |
        su postgres -c 'initdb -D /tmp/data'
        su postgres -c 'pg_ctl -D /tmp/data start'

    - run: df -h

    - name: Cache Go dependencies
      uses: ./.github/actions/cache-go-dependencies

    - run: df -h

    - name: Is Postgres ready
      run: pg_isready -h 127.0.0.1

    - run: df -h

    - name: Go Bench Tests
      run: make go-postgres-bench-tests

    - run: df -h

    - name: Generate junit report
      if: always()
      run: make generate-junit-reports

    - run: df -h

    - name: Publish Test Report
      uses: test-summary/action@v2
      if: always()
      with:
        paths: 'junit-reports/report.xml'

    # Do not create junit report for bench tests:
    # https://github.com/jstemmer/go-junit-report/issues/174

  ui:
    runs-on: ubuntu-latest
    outputs:
      new-jiras: ${{ steps.junit2jira.outputs.new-jiras }}
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.4.9
      volumes:  # job-preamble deletes unused host runner files under /mnt
        - /usr:/mnt/usr
        - /opt:/mnt/opt
    steps:
    - run: df -h

    - name: Checkout
      uses: actions/checkout@v4

    - uses: ./.github/actions/job-preamble
      with:
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}

    - run: df -h

    - name: Cache UI dependencies
      uses: ./.github/actions/cache-ui-dependencies

    - run: df -h

    - name: UI Unit Tests
      run: make ui-test

    - run: df -h

    - name: Publish Test Report
      uses: test-summary/action@v2
      if: always()
      with:
        paths: 'ui/apps/platform/test-results/reports/*.xml'

    - run: df -h

    - name: Report junit failures in jira
      if: (!cancelled())
      id: junit2jira
      uses: ./.github/actions/junit2jira
      with:
        create-jiras: ${{ github.event_name == 'push' }}
        jira-token: ${{ secrets.JIRA_TOKEN }}
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}
        directory: 'ui/apps/platform/test-results/reports'

  ui-component:
    runs-on: ubuntu-latest
    outputs:
      new-jiras: ${{ steps.junit2jira.outputs.new-jiras }}
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-ui-test-0.4.9
      volumes:  # job-preamble deletes unused host runner files under /mnt
      - /usr:/mnt/usr
      - /opt:/mnt/opt
    steps:
    - run: df -h

    - name: Checkout
      uses: actions/checkout@v4

    - uses: ./.github/actions/job-preamble
      with:
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}

    - run: df -h

    - name: Cache UI dependencies
      uses: ./.github/actions/cache-ui-dependencies

    - run: df -h

    - name: UI Component Tests
      run: make ui-component-tests

    - run: df -h

    - name: Upload Cypress test result artifacts
      uses: ./.github/actions/upload-artifact-with-retry
      if: always()
      with:
        name: Cypress test results
        path: ui/apps/platform/cypress/test-results/

    - run: df -h

    - name: Publish Test Report
      uses: test-summary/action@v2
      if: always()
      with:
        paths: 'ui/apps/platform/cypress/test-results/reports/**/*.xml'

    - run: df -h

    - name: Report junit failures in jira
      if: (!cancelled())
      id: junit2jira
      uses: ./.github/actions/junit2jira
      with:
        create-jiras: ${{ github.event_name == 'push' }}
        jira-token: ${{ secrets.JIRA_TOKEN }}
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}
        directory: 'ui/apps/platform/cypress/test-results/reports'

  local-roxctl-tests:
    runs-on: ubuntu-latest
    outputs:
      new-jiras: ${{ steps.junit2jira.outputs.new-jiras }}
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.4.9
      volumes:  # job-preamble deletes unused host runner files under /mnt
        - /usr:/mnt/usr
        - /opt:/mnt/opt
    steps:
    - run: df -h

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}

    - uses: ./.github/actions/job-preamble
      with:
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}

    - run: df -h

    - name: Cache Go dependencies
      uses: ./.github/actions/cache-go-dependencies

    - uses: ./.github/actions/handle-tagged-build

    - run: df -h

    - name: Local roxctl tests
      run: ./scripts/ci/jobs/local-roxctl-tests.sh

    - run: df -h

    - name: Publish Test Report
      uses: test-summary/action@v2
      if: always()
      with:
        paths: 'roxctl-test-output/*.xml'

    - run: df -h

    - name: Report junit failures in jira
      if: (!cancelled())
      id: junit2jira
      uses: ./.github/actions/junit2jira
      with:
        create-jiras: ${{ github.event_name == 'push' }}
        jira-token: ${{ secrets.JIRA_TOKEN }}
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}
        directory: 'roxctl-test-output'

  shell-unit-tests:
    runs-on: ubuntu-latest
    outputs:
      new-jiras: ${{ steps.junit2jira.outputs.new-jiras }}
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.4.9
      volumes:  # job-preamble deletes unused host runner files under /mnt
        - /usr:/mnt/usr
        - /opt:/mnt/opt
    steps:
    - run: df -h

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}

    - uses: ./.github/actions/job-preamble
      with:
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}

    - run: df -h

    - name: Shell Unit Tests
      run: make shell-unit-tests

    - run: df -h

    - name: Publish Test Report
      uses: test-summary/action@v2
      if: always()
      with:
        paths: 'shell-test-output/*.xml'

    - run: df -h

    - name: Report junit failures in jira
      if: (!cancelled())
      id: junit2jira
      uses: ./.github/actions/junit2jira
      with:
        create-jiras: ${{ github.event_name == 'push' }}
        jira-token: ${{ secrets.JIRA_TOKEN }}
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}
        directory: 'shell-test-output'

  openshift-ci-unit-tests:
    runs-on: ubuntu-latest
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.4.9
      volumes:  # job-preamble deletes unused host runner files under /mnt
        - /usr:/mnt/usr
        - /opt:/mnt/opt
    steps:
      - run: df -h

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: ./.github/actions/job-preamble
        with:
          gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}

      - run: df -h

      - name: OpenShift CI Wrapper Unit Tests
        run: make -C .openshift-ci test

  sensor-integration-tests:
    env:
      KUBECONFIG: "/tmp/kubeconfig"
    runs-on: ubuntu-latest
    outputs:
      new-jiras: ${{ steps.junit2jira.outputs.new-jiras }}
    steps:
    - run: df -h

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: ./.github/actions/job-preamble
      with:
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}

    - run: df -h

    - name: Cache Go dependencies
      uses: ./.github/actions/cache-go-dependencies

    - run: df -h

    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1
      with:
        kubeconfig: "${{ env.KUBECONFIG }}"

    - run: df -h

    - name: Run sensor integration tests
      run: make sensor-integration-test

    - run: df -h

    - name: Generate junit report
      if: always()
      run: make generate-junit-reports

    - run: df -h

    - name: Publish Test Report
      uses: test-summary/action@v2
      if: always()
      with:
        paths: 'junit-reports/report.xml'

    - run: df -h

    - name: Report junit failures in jira
      if: (!cancelled())
      id: junit2jira
      uses: ./.github/actions/junit2jira
      with:
        create-jiras: ${{ github.event_name == 'push' }}
        jira-token: ${{ secrets.JIRA_TOKEN }}
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}
        directory: 'junit-reports'

  slack-on-unit-tests-failure:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SLACK_CI_INTEGRATION_TESTING_WEBHOOK: ${{ secrets.SLACK_CI_INTEGRATION_TESTING_WEBHOOK }}
      TEST_FAILURES_NOTIFY_WEBHOOK: ${{ secrets.TEST_FAILURES_NOTIFY_WEBHOOK }}
    if: |
      failure() && (
          github.event_name == 'push' ||
          contains(github.event.pull_request.labels.*.name, 'ci-test-github-action-slack-messages')
      )
    name: Post failure message to Slack
    runs-on: ubuntu-latest
    needs:
      - go
      - go-bench
      - go-postgres
      - local-roxctl-tests
      - openshift-ci-unit-tests
      - sensor-integration-tests
      - shell-unit-tests
      - ui
      - ui-component
    permissions:
      actions: read
    steps:
    - run: df -h

    - name: Checkout
      uses: actions/checkout@v4

    - run: df -h

    - name: Slack message
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
        mention_author: ${{ needs.go.outputs.new-jiras || needs.go-postgres.outputs.new-jiras || needs.local-roxctl-tests.outputs.new-jiras || needs.ui.outputs.new-jiras || needs.go.outputs.new-jiras || needs.shell-unit-tests.outputs.new-jiras || needs.sensor-integration-tests.outputs.new-jiras }}
      run: |
        source scripts/ci/lib.sh
        slack_workflow_failure
