name: Build
on:
  pull_request:
    types:
    - opened
    - synchronize
    - labeled

env:
  ROX_PRODUCT_BRANDING: RHACS_BRANDING

jobs:

  pre-build-ui:
    if: |
      (github.event.action == 'labeled' && github.event.label.name == 'turbo-build') ||
      (github.event.action != 'labeled' && contains(github.event.pull_request.labels.*.name, 'turbo-build'))

    runs-on: ubuntu-latest
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.3.49
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: ./.github/actions/create-concatenated-ui-monorepo-lock

      - uses: ./.github/actions/cache-ui-dependencies

      - name: Fetch UI deps
        run: make -C ui deps

      - name: Build UI
        run: make -C ui build

      - uses: actions/upload-artifact@v3
        with: 
          name: ui-build
          path: |
            ui/build
            ui/monorepo.lock

  pre-build-cli:
    if: |
      (github.event.action == 'labeled' && github.event.label.name == 'turbo-build') ||
      (github.event.action != 'labeled' && contains(github.event.pull_request.labels.*.name, 'turbo-build'))
    runs-on: ubuntu-latest
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.3.49
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache Go dependencies
        uses: ./.github/actions/cache-go-dependencies

      - name: Build CLI
        run: make cli

      - name: Bundle build to preserve permissions
        run: tar -cvzf cli-build.tgz bin

      - uses: actions/upload-artifact@v3
        with: 
          name: cli-build
          path: cli-build.tgz

  pre-build-go-binaries:
    if: |
      (github.event.action == 'labeled' && github.event.label.name == 'turbo-build') ||
      (github.event.action != 'labeled' && contains(github.event.pull_request.labels.*.name, 'turbo-build'))
    runs-on: ubuntu-latest
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.3.49
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache Go dependencies
        uses: ./.github/actions/cache-go-dependencies

      - name: PR labels
        uses: joerick/pr-labels-action@v1.0.6

      - name: Setup Go build environment
        run: |
          if [[ -n "$GITHUB_PR_LABEL_CI_RELEASE_BUILD" ]]; then
            cci-export GOTAGS release
          fi
          echo "GOTAGS: ${GOTAGS:-}"

      - name: Build Go Binaries
        run: make build-prep main-build-nodeps

      - name: Bundle the build to preserve permissions
        run: tar -cvzf go-binaries-build.tgz bin/linux_amd64

      - uses: actions/upload-artifact@v3
        with: 
          name: go-binaries-build
          path: go-binaries-build.tgz

  pre-build-docs:
    if: |
      (github.event.action == 'labeled' && github.event.label.name == 'turbo-build') ||
      (github.event.action != 'labeled' && contains(github.event.pull_request.labels.*.name, 'turbo-build'))
    runs-on: ubuntu-latest
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.3.49
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache Go dependencies
        uses: ./.github/actions/cache-go-dependencies

      - name: Resolve mods for protos
        run: go mod tidy

      - name: Generate the swagger docs
        run: |
          make swagger-docs
          # Workarround to handle https://github.com/actions/cache/issues/753
          rm -rf .proto

      - uses: actions/upload-artifact@v3
        with:
          name: docs-build
          path: |
            image/docs

  build-and-push-main:
    if: |
      (github.event.action == 'labeled' && github.event.label.name == 'turbo-build') ||
      (github.event.action != 'labeled' && contains(github.event.pull_request.labels.*.name, 'turbo-build'))
    runs-on: ubuntu-latest
    needs: 
      - pre-build-ui
      - pre-build-cli
      - pre-build-go-binaries
      - pre-build-docs
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.3.49
      env:
        QUAY_RHACS_ENG_RO_USERNAME: ${{ secrets.QUAY_RHACS_ENG_RO_USERNAME }}
        QUAY_RHACS_ENG_RO_PASSWORD: ${{ secrets.QUAY_RHACS_ENG_RO_PASSWORD }}
        QUAY_RHACS_ENG_RW_USERNAME: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
        QUAY_RHACS_ENG_RW_PASSWORD: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}
        QUAY_STACKROX_IO_RW_USERNAME: ${{ secrets.QUAY_STACKROX_IO_RW_USERNAME }}
        QUAY_STACKROX_IO_RW_PASSWORD: ${{ secrets.QUAY_STACKROX_IO_RW_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Checkout submodules
        run: |
            git submodule update --init

      - uses: actions/download-artifact@v3
        with:
          name: ui-build
          path: ui

      - uses: actions/download-artifact@v3
        with:
          name: cli-build

      - name: Unpack cli build
        run: |
          tar xvzf cli-build.tgz

      - uses: actions/download-artifact@v3
        with:
          name: go-binaries-build

      - name: Unpack Go binaries build
        run: |
          tar xvzf go-binaries-build.tgz

      - uses: actions/download-artifact@v3
        with:
          name: docs-build
          path: image/docs

      # needed to restore node_modules for ossls-nostice
      - uses: ./.github/actions/cache-ui-dependencies

      - name: Generate OSS notice
        run: make ossls-notice

      # needed for docs ensure_image.sh initial pull with RHACS_BRANDING
      - name: Docker login
        run: |
            docker login -u "${QUAY_RHACS_ENG_RO_USERNAME}" --password-stdin quay.io <<<"${QUAY_RHACS_ENG_RO_PASSWORD}"

      - name: Build main images
        run: make docker-build-main-image

      - name: Check debugger presence in the main image
        run: make check-debugger

      - name: Build roxctl image
        run: make docker-build-roxctl-image

      - name: Push images
        run: |
            source ./scripts/ci/lib.sh
            push_main_image_set "${GITHUB_HEAD_REF}" "${{ env.ROX_PRODUCT_BRANDING }}"

      - name: Push matching collector and scanner images
        run: |
            source ./scripts/ci/lib.sh
            push_matching_collector_scanner_images "${{ env.ROX_PRODUCT_BRANDING }}"

      - name: Comment on the PR
        env:
          GITHUB_TOKEN: "${{ secrets.ROBOT_ROX_GITHUB_TOKEN }}"
        run: |
            source ./scripts/ci/lib.sh
            add_build_comment_to_pr

  build-and-push-operator:
    if: |
      (github.event.action == 'labeled' && github.event.label.name == 'turbo-build') ||
      (github.event.action != 'labeled' && contains(github.event.pull_request.labels.*.name, 'turbo-build'))
    runs-on: ubuntu-latest
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.3.49
      env:
        QUAY_RHACS_ENG_RW_USERNAME: ${{ secrets.QUAY_RHACS_ENG_RW_USERNAME }}
        QUAY_RHACS_ENG_RW_PASSWORD: ${{ secrets.QUAY_RHACS_ENG_RW_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache Go dependencies
        uses: ./.github/actions/cache-go-dependencies

      - name: Resolve mods for protos
        run: go mod tidy

      - name: PR labels
        uses: joerick/pr-labels-action@v1.0.6

      - name: Setup Go build environment
        run: |
          if [[ -n "$GITHUB_PR_LABEL_CI_RELEASE_BUILD" ]]; then
            cci-export GOTAGS release
          fi
          echo "GOTAGS: ${GOTAGS:-}"

      - name: Docker login
        run: |
            docker login -u "${QUAY_RHACS_ENG_RW_USERNAME}" --password-stdin quay.io <<<"${QUAY_RHACS_ENG_RW_PASSWORD}"

      - name: Build Operator Bundle image
        run: |
          make -C operator/ bundle bundle-build

      - name: Build Operator image
        run: make -C operator/ build docker-build

      - name: Check that Operator image is runnable
        run: docker run --rm quay.io/rhacs-eng/stackrox-operator:$(make --quiet -C operator tag) --help

      - name: Push images
        run: |
          make -C operator/ docker-push docker-push-bundle | cat

      # Index image can only be built once bundle was pushed
      - name: Build index
        run: |
          make -C operator/ index-build

      - name: Push index image
        run: |
          make -C operator/ docker-push-index | cat
