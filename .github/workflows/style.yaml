name: Style
on:
  push:
    tags:
    - '*'
    branches:
    - master
    - release-*
  pull_request:
    types:
    - opened
    - reopened
    - synchronize
env:
  ROX_PRODUCT_BRANDING: RHACS_BRANDING

jobs:
  check-generated-files:
    env:
      ARTIFACT_DIR: junit-reports/
    runs-on: ubuntu-latest
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.4.8
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}

    - uses: ./.github/actions/job-preamble
      with:
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}

    - name: Create artifacts dir
      run: mkdir -p "$ARTIFACT_DIR"

    - name: Cache Go dependencies
      uses: ./.github/actions/cache-go-dependencies

    - name: Check Generated
      run: scripts/ci/jobs/check-generated.sh

  misc-checks:
    env:
      ARTIFACT_DIR: junit-reports/
    runs-on: ubuntu-latest
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.4.8
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}

    - uses: ./.github/actions/job-preamble
      with:
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}

    - name: Create artifacts dir
      run: mkdir -p "$ARTIFACT_DIR"

    - name: Ensure no trailing whitespaces
      if: github.event_name == 'pull_request'
      # Markdown files aren't checked for trailing whitespaces because it's a valid linebreak there.
      run: git diff --check "${{ github.event.pull_request.base.sha }}"...HEAD ':(exclude)*.md'

    - name: Check PR fixes
      run: scripts/ci/jobs/check-pr-fixes.sh

    - name: Check TODOs
      run: scripts/ci/jobs/check-todos.sh

    - name: Check Policies
      run: scripts/ci/jobs/policy-checks.sh

    - name: Check Konflux setup
      run: scripts/ci/jobs/check-konflux-setup.sh

    - name: Check build & test image versions
      run: scripts/ci/jobs/check-image-version.sh

  style-check:
    runs-on: ubuntu-latest
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.4.8
      volumes:
      - /usr:/mnt/usr
      - /opt:/mnt/opt
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: ./.github/actions/job-preamble
        with:
          gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}

      - name: Cache Go dependencies
        uses: ./.github/actions/cache-go-dependencies

      - name: Cache UI dependencies
        uses: ./.github/actions/cache-ui-dependencies

      - name: Cache QA Test dependencies
        uses: ./.github/actions/cache-gradle-dependencies

      - name: Fetch UI deps
        run: make -C ui deps

      - name: make style-slim
        run: make style-slim

  golangci-lint:
    timeout-minutes: 240
    runs-on: ubuntu-latest
    container:
      image: quay.io/stackrox-io/apollo-ci:stackrox-test-0.4.8
      volumes:
        - /usr:/mnt/usr
        - /opt:/mnt/opt
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}

    - uses: ./.github/actions/job-preamble
      with:
        gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}

    - name: Cache Go dependencies
      uses: ./.github/actions/cache-go-dependencies

    - name: Check Cache golangci-lint
      run: make golangci-lint-cache-status

    - name: Cache golangci-lint
      uses: actions/cache@v4
      with:
        path: /github/home/.cache/golangci-lint
        key: go-lint-v2-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          go-lint-v2-${{ hashFiles('**/go.sum') }}
          go-lint-v2-

    - name: Check cache golangci-lint
      run: make golangci-lint-cache-status

    - name: Check Go version is in sync in .golangci.yml and go.mod
      run: |
        [ "$(awk '/^go /{print $2}' go.mod | cut -d. -f 1-2)" = "$(yq e .run.go .golangci.yml)" ]

    - name: make golangci-lint
      run: make golangci-lint

    - name: Check Cache golangci-lint
      run: make golangci-lint-cache-status

  check-collector-and-scanner-images-exist:
    # This job ensures that COLLECTOR_VERSION or SCANNER_VERSION files cannot be updated to a version for which the
    # image was not successfully built on Konflux (suffix "-fast"). It also verifies that GHA-built image is there (no
    # suffix) so that the failure also happens in this job.
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ["collector", "scanner", "scanner-slim", "scanner-db", "scanner-db-slim"]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get image tag from COLLECTOR|SCANNER_VERSION file
        id: image-tag
        run: |
          if [[ "${{ matrix.image }}" == "collector" ]]; then
            makefile_target="collector-tag"
          else
            makefile_target="scanner-tag"
          fi
          echo "image-tag=$(make --quiet --no-print-directory "${makefile_target}")" >> "${GITHUB_OUTPUT}"

      - name: Check GHA-built image exists
        uses: stackrox/actions/release/wait-for-image@v1
        with:
          token: ${{ secrets.QUAY_RHACS_ENG_BEARER_TOKEN }}
          image: rhacs-eng/${{ matrix.image }}:${{ steps.image-tag.outputs.image-tag }}
          limit: 300

      - name: Check Konflux-built image exists
        uses: stackrox/actions/release/wait-for-image@v1
        with:
          token: ${{ secrets.QUAY_RHACS_ENG_BEARER_TOKEN }}
          image: rhacs-eng/${{ matrix.image }}:${{ steps.image-tag.outputs.image-tag }}-fast
          limit: 300

  slack-on-style-failure:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SLACK_CI_INTEGRATION_TESTING_WEBHOOK: ${{ secrets.SLACK_CI_INTEGRATION_TESTING_WEBHOOK }}
      TEST_FAILURES_NOTIFY_WEBHOOK: ${{ secrets.TEST_FAILURES_NOTIFY_WEBHOOK }}
    if: |
      failure() && (
          github.event_name == 'push' ||
          contains(github.event.pull_request.labels.*.name, 'ci-test-github-action-slack-messages')
      )
    name: Post failure message to Slack
    runs-on: ubuntu-latest
    needs:
      - check-generated-files
      - misc-checks
      - style-check
      - golangci-lint
      - check-collector-and-scanner-images-exist
    permissions:
      actions: read
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Slack message
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: |
        source scripts/ci/lib.sh
        slack_workflow_failure
