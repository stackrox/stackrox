name: E2E tests
on:
  pull_request:
  workflow_dispatch:
    inputs:
      commit:
        description: 'Commit SHA of tests'
        required: true
        type: string
      tested_commit:
        description: 'Commit SHA to test'
        required: true
        type: string
  workflow_call:
env:
  ROX_PRODUCT_BRANDING: stackrox

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    env:
      INFRA_TOKEN: ${{ secrets.INFRA_TOKEN }}
      POD_SECURITY_POLICIES: "false"
      ROX_VULN_MGMT_UNIFIED_CVE_DEFERRAL: "true"
      ROX_PROCESSES_LISTENING_ON_PORT: "false"
      REGISTRY_USERNAME: ${{ secrets.QUAY_RHACS_ENG_RO_USERNAME }}
      REGISTRY_PASSWORD: ${{ secrets.QUAY_RHACS_ENG_RO_PASSWORD }}
      GOOGLE_CREDENTIALS_GCR_SCANNER_V2: ${{ secrets.GOOGLE_CREDENTIALS_GCR_SCANNER_V2 }}
      QUAY_RHACS_ENG_RO_PASSWORD: ${{ secrets.QUAY_RHACS_ENG_RO_PASSWORD }}
      QUAY_RHACS_ENG_RO_USERNAME: ${{ secrets.QUAY_RHACS_ENG_RO_USERNAME }}
      QUAY_RHACS_ENG_BEARER_TOKEN: ${{ secrets.QUAY_RHACS_ENG_BEARER_TOKEN }}
      MAIN_IMAGE_TAG: ${{ inputs.tested_commit || github.event.pull_request.base.sha }}
      TAG: ${{ inputs.tested_commit || github.event.pull_request.base.sha }}
      GATHER_QA_TEST_DEBUG_LOGS: "false"
      QA_TEST_DEBUG_LOGS: ""
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 #${{ github.event.pull_request.commits + 100 }}
          # TODO: clone both test and tested as repo's?
          fetch-tags: false
          show-progress: false
          ref: ${{ inputs.commit || github.event.pull_request.head.sha }}

      - run: |
          # example: 4.9.x-457-g9867327a52
          MAIN_IMAGE_TAG=$(git describe --tags --abbrev=10 --long --exclude '*-nightly-*' "${MAIN_IMAGE_TAG}")
          echo "MAIN_IMAGE_TAG=${MAIN_IMAGE_TAG}" >> "$GITHUB_ENV"
          echo "TAG=${MAIN_IMAGE_TAG}" >> "$GITHUB_ENV"

      - uses: ./.github/actions/job-preamble
        with:
          gcp-account: ${{ secrets.GCP_SERVICE_ACCOUNT_STACKROX_CI }}

      - run: |
          curl --retry 5 --retry-all-errors -L -o /tmp/openshift-client-linux.tar.gz \
            https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable/openshift-client-linux.tar.gz
          tar -C /tmp -xzf /tmp/openshift-client-linux.tar.gz
          install --mode 755 /tmp/oc /usr/local/bin/
          install --mode 755 /tmp/kubectl /usr/local/bin/

      - continue-on-error: true
        run: |
          echo "SHARED_DIR=${SHARED_DIR}" | tee -a "$GITHUB_ENV"
          echo "REMOVE_EXISTING_STACKROX_RESOURCES=false" | tee -a "$GITHUB_ENV"
          export JOB_NAME="${JOB_NAME:-ocp-4-19-qa-e2e-tests}"
          echo "JOB_NAME=${JOB_NAME}" | tee -a "$GITHUB_ENV"
          echo "JOB_NAME_SAFE=qa-e2e-tests" | tee -a "$GITHUB_ENV"
          echo "CI=true" | tee -a "$GITHUB_ENV"
          echo "GRADLE_USER_HOME=${HOME}" | tee -a "$GITHUB_ENV"
          echo "CI_JOB_NAME=${JOB_NAME}" | tee -a "$GITHUB_ENV"
          ARTIFACT_DIR="${ARTIFACT_DIR:-${SHARED_DIR}/tmp/}"
          mkdir -p "$ARTIFACT_DIR"
          echo "ARTIFACT_DIR=${ARTIFACT_DIR}" | tee -a "$GITHUB_ENV"

          source scripts/ci/lib.sh
          test_on_infra

          echo "KUBECONFIG=${KUBECONFIG:-${SHARED_DIR}/kubeconfig}" | tee -a "$GITHUB_ENV"

      - run: |
          set +e
          set -x
          if [[ -e "${KUBECONFIG:-}" ]]; then
            if [[ -z "${ROX_ADMIN_PASSWORD:+set}" ]]; then
              password="${ROX_ADMIN_PASSWORD:-$(oc -n stackrox get secret admin-pass -o json | jq -r '.data.password' | base64 -d)}"
              password="${password:-$(oc -n stackrox get secret central-htpasswd -o go-template='{{index .data "password" | base64decode}}')}"
              echo "ROX_USERNAME=admin" | tee -a "$GITHUB_ENV"
              echo "ROX_ADMIN_PASSWORD=${password}" >> "$GITHUB_ENV"
            fi
            if [[ -z "${API_HOSTNAME:-}" ]]; then
              echo "ROX_ADMIN_PASSWORD=${password}" >> "$GITHUB_ENV"
              API_HOSTNAME=$(kubectl -n stackrox get route central -o jsonpath='{.status.ingress[0].host}')
              API_HOSTNAME=${API_HOSTNAME:-$(kubectl -n stackrox get service central-loadbalancer -o jsonpath='{.status.loadBalancer.ingress[0].ip}')}
              API_HOSTNAME=${API_HOSTNAME:-localhost}
              echo "API_HOSTNAME=${API_HOSTNAME}" | tee -a "$GITHUB_ENV"
              API_PORT=${API_PORT:-$(kubectl -n stackrox get route central -o jsonpath='{.spec.port.targetPort}')}
              API_PORT=${API_PORT:-$(kubectl -n stackrox get service central-loadbalancer -o jsonpath='{.status.loadBalancer.ingress[0].port}')}
              API_PORT=${API_PORT//https/443}
              if [[ "$API_HOSTNAME" == 'localhost' ]]; then
                kubectl -n stackrox port-forward svc/central 8000:443 &
                API_PORT=8000
              fi
              echo "API_HOSTNAME=${API_HOSTNAME}" | tee -a "$GITHUB_ENV"
              echo "API_PORT=${API_PORT}" | tee -a "$GITHUB_ENV"
            fi
          fi

      - run: go get github.com/stackrox/scanner

      - run: |
          set -x
          echo "MAIN_IMAGE_TAG:${MAIN_IMAGE_TAG:-}"
          echo "TAG:${TAG:-}"
          export MAIN_IMAGE_TAG
          export TAG
          git describe --tags --abbrev=10 --dirty --long --exclude '*-nightly-*' || true
          export PYTHONPATH="${PYTHONPATH:-}:.openshift-ci"
          cat "$GITHUB_ENV" || true
          echo "GATHER_QA_TEST_DEBUG_LOGS:${GATHER_QA_TEST_DEBUG_LOGS:-}"
          export GATHER_QA_TEST_DEBUG_LOGS
          echo "QA_TEST_DEBUG_LOGS:${QA_TEST_DEBUG_LOGS:-}"
          export QA_TEST_DEBUG_LOGS
          echo "$API_HOSTNAME"
          echo "$API_PORT"
          export CLUSTER='OPENSHIFT'
          scripts/ci/jobs/ocp_qa_e2e_tests.py \
            echo end  #|| bash -x .openshift-ci/dispatch.sh "$JOB_NAME"
