#!/bin/real-bash
# shellcheck shell=bash

# cci-export is a function which can be used to export environment variables in a way that is persistent
# across CircleCI steps.
cci-export() {
  if [ "$#" -ne 2 ]; then
    echo >&2 "Usage: $0 KEY VALUE"
    return 1
  fi

  key="$1"
  value="$2"

  export "${key}=${value}"

  if [[ "$CIRCLECI" == "true" ]]; then
    if [[ -z "${BASH_ENV}" ]]; then
      echo >&2 "Env var BASH_ENV not properly set"
      return 1
    fi

    # Use export with default value: 'export FOO="${FOO:-bar}"', so that variables set in the environment are not overwritten by `$BASH_ENV`
    key_part="export ${key}"
    # shellcheck disable=SC2016 # we must produce literal ${} symbols
    value_part="$(printf '"${%q:-"%q"}"\n' "$key" "$value")"

    # Remove all export-lines for the same exported variable, to 'forget' about past cci-export calls,
    # otherwise the first call to cci-export would define a default value for the variable, so that
    # second and subsequent calls to cci-export would have no effect.
    if [[ -f "$BASH_ENV" ]]; then
      filtered_envfile="$(mktemp -t "bash.env-XXXX")"
      grep --invert-match --fixed-strings "${key_part}=" "$BASH_ENV" > "${filtered_envfile}" && mv "${filtered_envfile}" "$BASH_ENV"
    fi
    echo "${key_part}=${value_part}" >> "$BASH_ENV"
  fi
}

export -f cci-export

exec /bin/real-bash "$@"
