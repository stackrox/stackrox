run:
  timeout: 5m
  skip-dirs:
  - pkg/complianceoperator/api
  build-tags:
  - sql_integration

issues:
  exclude-use-default: false

  exclude-rules:
    - path: "(central|compliance|integration-tests|local|migrator|operator|pkg|sensor|tests|tools|scale)/"
      linters:
      - wrapcheck
    - path: _test\.go
      linters:
      - wrapcheck
    - linters:
        - revive
      text: "should have a package comment, unless it's in another file for this package"
    - linters:
        - revive
      text: "should not use dot imports"
    - linters:
        - revive
      text: "returns unexported type .* which can be annoying to use"
    - linters:
        - revive
      text: "error strings should not be capitalized or end with punctuation or a newline"
    - linters:
        - revive
      text: "should omit type int from declaration"
    - linters:
        - revive
      text: "don't use leading k in Go names"


linters-settings:
  gosec:
    includes:
    - G601
  revive:
    min-confidence: 0
  govet:
    enable-all: true
    disable:
      - shadow
      - fieldalignment
    settings:
      printf: # analyzer name, run `go tool vet help` to see all analyzers
        funcs: # run `go tool vet help printf` to see available settings for `printf` analyzer
          - Print
          - Printf
          - Println
          - Debug
          - Debugf
          - Info
          - Infof
          - Warn
          - Warnf
          - Error
          - Errorf
          - github.com/stackrox/rox/migrator/log.WritetoStderr
          - github.com/stackrox/rox/migrator/log.WritetoStderrf     -
  gocritic:
    enabled-checks:
      - commentFormatting
  nolintlint:
    allow-leading-space: false # require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: true # require nolint directives to be specific about which linter is being skipped
  wrapcheck:
    ignoreSigRegexps:
    - utils\.Should
    - errox\.New.*
    - retry\.MakeRetryable
    - policy\.NewErr.*

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - asciicheck
    # - bodyclose
    # - deadcode
    # - depguard
    # - dogsled
    # - dupl
    # - errcheck
    # - funlen
    # - gochecknoglobals
    # - gochecknoinits
    # - gocognit
    # - goconst
    - exportloopref
    - gocritic
    # - gocyclo
    # - godot
    # - godox
    # - goerr113
    - gofmt
    - goimports
    - revive # replaces golint
    # - gomnd
    # - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    # - interfacer
    # - lll
    # - maligned
    # - misspell
    # - nakedret TODO: add in follow-up
    # - nestif
    - nolintlint
    # - prealloc
    - rowserrcheck
    # - scopelint
    # - staticcheck
    # - structcheck
    # - stylecheck
    # - testpackage
    # - typecheck
    # - unconvert TODO: add in follow-up
    # - unparam TODO: add in follow-up
    # - unused
    # - varcheck
    # - whitespace
    - wrapcheck
    # - wsl
