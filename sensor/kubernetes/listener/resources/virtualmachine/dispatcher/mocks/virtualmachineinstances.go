// Code generated by MockGen. DO NOT EDIT.
// Source: virtualmachineinstances.go
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/virtualmachineinstances.go -source virtualmachineinstances.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	virtualmachine "github.com/stackrox/rox/sensor/common/virtualmachine"
	gomock "go.uber.org/mock/gomock"
)

// MockvirtualMachineStore is a mock of virtualMachineStore interface.
type MockvirtualMachineStore struct {
	ctrl     *gomock.Controller
	recorder *MockvirtualMachineStoreMockRecorder
	isgomock struct{}
}

// MockvirtualMachineStoreMockRecorder is the mock recorder for MockvirtualMachineStore.
type MockvirtualMachineStoreMockRecorder struct {
	mock *MockvirtualMachineStore
}

// NewMockvirtualMachineStore creates a new mock instance.
func NewMockvirtualMachineStore(ctrl *gomock.Controller) *MockvirtualMachineStore {
	mock := &MockvirtualMachineStore{ctrl: ctrl}
	mock.recorder = &MockvirtualMachineStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockvirtualMachineStore) EXPECT() *MockvirtualMachineStoreMockRecorder {
	return m.recorder
}

// AddOrUpdate mocks base method.
func (m *MockvirtualMachineStore) AddOrUpdate(vm *virtualmachine.Info) *virtualmachine.Info {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddOrUpdate", vm)
	ret0, _ := ret[0].(*virtualmachine.Info)
	return ret0
}

// AddOrUpdate indicates an expected call of AddOrUpdate.
func (mr *MockvirtualMachineStoreMockRecorder) AddOrUpdate(vm any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddOrUpdate", reflect.TypeOf((*MockvirtualMachineStore)(nil).AddOrUpdate), vm)
}

// ClearState mocks base method.
func (m *MockvirtualMachineStore) ClearState(id virtualmachine.VMID) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ClearState", id)
}

// ClearState indicates an expected call of ClearState.
func (mr *MockvirtualMachineStoreMockRecorder) ClearState(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClearState", reflect.TypeOf((*MockvirtualMachineStore)(nil).ClearState), id)
}

// Get mocks base method.
func (m *MockvirtualMachineStore) Get(id virtualmachine.VMID) *virtualmachine.Info {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", id)
	ret0, _ := ret[0].(*virtualmachine.Info)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockvirtualMachineStoreMockRecorder) Get(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockvirtualMachineStore)(nil).Get), id)
}

// Has mocks base method.
func (m *MockvirtualMachineStore) Has(id virtualmachine.VMID) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Has", id)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Has indicates an expected call of Has.
func (mr *MockvirtualMachineStoreMockRecorder) Has(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Has", reflect.TypeOf((*MockvirtualMachineStore)(nil).Has), id)
}

// Remove mocks base method.
func (m *MockvirtualMachineStore) Remove(id virtualmachine.VMID) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Remove", id)
}

// Remove indicates an expected call of Remove.
func (mr *MockvirtualMachineStoreMockRecorder) Remove(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockvirtualMachineStore)(nil).Remove), id)
}

// UpdateStateOrCreate mocks base method.
func (m *MockvirtualMachineStore) UpdateStateOrCreate(vm *virtualmachine.Info) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateStateOrCreate", vm)
}

// UpdateStateOrCreate indicates an expected call of UpdateStateOrCreate.
func (mr *MockvirtualMachineStoreMockRecorder) UpdateStateOrCreate(vm any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateStateOrCreate", reflect.TypeOf((*MockvirtualMachineStore)(nil).UpdateStateOrCreate), vm)
}
