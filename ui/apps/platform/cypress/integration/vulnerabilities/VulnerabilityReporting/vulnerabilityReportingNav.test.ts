import withAuth from '../../../helpers/basicAuth';

const reportingBasePath = '/main/vulnerabilities/reports';

const reportsFixture = 'vulnerabilities/vulnerabilityReporting/vulnerabilityReports.json';

describe('Vulnerability Reporting Navigation', () => {
    withAuth();

    beforeEach(() => {
        cy.intercept(
            {
                method: 'GET',
                pathname: '/v2/reports/configurations',
            },
            { fixture: reportsFixture }
        ).as('reports');

        cy.visit(reportingBasePath);
        cy.wait('@reports');
    });

    it('navigates to the index page', () => {
        cy.url().should('include', reportingBasePath);
        cy.get('h1').should('contain', 'Vulnerability reporting');
    });

    it('navigates to the create page', () => {
        cy.contains('button', 'Create report').click();
        cy.url().should('include', `${reportingBasePath}?action=create`);
        cy.get('h1').should('contain', 'Create report');
    });

    it('navigates to the details page', () => {
        cy.get('@reports')
            .its('response')
            .then((response) => {
                const firstReport = response.body.reportConfigs[0];
                cy.intercept('GET', `/v2/reports/configurations/${firstReport.id}`, firstReport).as(
                    'reportDetails'
                );

                cy.contains('a', firstReport.name).click();
                cy.wait('@reportDetails');

                cy.url().should('include', `${reportingBasePath}/${firstReport.id}`);
                cy.get('h1').should('contain', firstReport.name);
            });
    });

    it('navigates to the edit page', () => {
        cy.get('@reports')
            .its('response')
            .then((response) => {
                const firstReport = response.body.reportConfigs[0];
                cy.intercept('GET', `/v2/reports/configurations/${firstReport.id}`, firstReport).as(
                    'reportDetails'
                );

                cy.get('table .pf-v5-c-menu-toggle').first().click();
                cy.contains('button', 'Edit report').click();

                cy.wait('@reportDetails');
                cy.url().should('include', `${reportingBasePath}/${firstReport.id}?action=edit`);
                cy.get('h1').should('contain', 'Edit report');

                cy.get('.pf-v5-c-breadcrumb__link').click();
                cy.contains('a', firstReport.name).click();

                cy.contains('button', 'Actions').click();
                cy.contains('button', 'Edit report').click();

                cy.url().should('include', `${reportingBasePath}/${firstReport.id}?action=edit`);
                cy.get('h1').should('contain', 'Edit report');
            });
    });

    it('navigates to the clone page', () => {
        cy.get('@reports')
            .its('response')
            .then((response) => {
                const firstReport = response.body.reportConfigs[0];
                cy.intercept('GET', `/v2/reports/configurations/${firstReport.id}`, firstReport).as(
                    'reportDetails'
                );

                cy.get('table .pf-v5-c-menu-toggle').first().click();
                cy.contains('button', 'Clone report').click();

                cy.wait('@reportDetails');
                cy.url().should('include', `${reportingBasePath}/${firstReport.id}?action=clone`);
                cy.get('h1').should('contain', 'Clone report');

                cy.get('.pf-v5-c-breadcrumb__link').click();
                cy.contains('a', firstReport.name).click();

                cy.contains('button', 'Actions').click();
                cy.contains('button', 'Clone report').click();

                cy.url().should('include', `${reportingBasePath}/${firstReport.id}?action=clone`);
                cy.get('h1').should('contain', 'Clone report');
            });
    });
});
