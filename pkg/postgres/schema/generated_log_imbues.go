// Code generated by generate-schema tool. DO NOT EDIT.

package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedLogImbueSearchFields contains pre-computed search fields for log_imbues
	generatedLogImbueSearchFields = map[search.FieldLabel]*search.Field{

		"Log": {
			FieldPath: "Timestamp",
			Type:      v1.SearchDataType_SEARCH_DATETIME,
			Store:     false,
			Hidden:    false,
		},
	}

	// generatedLogImbueSchema is the pre-computed schema for log_imbues table
	generatedLogImbueSchema = &walker.Schema{
		Table:    "log_imbues",
		Type:     "*storage.LogImbue",
		TypeName: "LogImbue",
		Fields: []walker.Field{

			{
				Name:       "state",
				ColumnName: "state",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.MessageState",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "Id",
				ColumnName: "id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},

			{
				Name:       "Log",
				ColumnName: "log",
				Type:       "[]byte",
				SQLType:    "bytea",
				DataType:   postgres.Bytes,
			},

			{
				Name:       "unknownFields",
				ColumnName: "unknown_fields",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.UnknownFields",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "sizeCache",
				ColumnName: "size_cache",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.SizeCache",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},
		},

		ScopingResource: resources.Administration,
	}
)

// GetLogImbueSchema returns the generated schema for log_imbues
func GetLogImbueSchema() *walker.Schema {
	// Set up search options if not already done
	if generatedLogImbueSchema.OptionsMap == nil {
		generatedLogImbueSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_SEARCH_UNSET, generatedLogImbueSearchFields))
	}
	return generatedLogImbueSchema
}
