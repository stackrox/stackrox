// Code generated by generate-schema tool. DO NOT EDIT.

package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedReportConfigurationSearchFields contains pre-computed search fields for report_configurations
	generatedReportConfigurationSearchFields = map[search.FieldLabel]*search.Field{

		"Report": {
			FieldPath: "Name",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_REPORT_CONFIGURATIONS,
		},

		"Embedded": {
			FieldPath: "ScopeId",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_REPORT_CONFIGURATIONS,
		},
	}

	// generatedReportConfigurationSchema is the pre-computed schema for report_configurations table
	generatedReportConfigurationSchema = &walker.Schema{
		Table:    "report_configurations",
		Type:     "*storage.ReportConfiguration",
		TypeName: "ReportConfiguration",
		Fields: []walker.Field{

			{
				Name:       "state",
				ColumnName: "state",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.MessageState",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "Id",
				ColumnName: "id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},

			{
				Name:       "Name",
				ColumnName: "name",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Report",
				},
			},

			{
				Name:       "Description",
				ColumnName: "description",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},

			{
				Name:       "Type",
				ColumnName: "type",
				Type:       "github.com/stackrox/rox/generated/storage.ReportConfiguration_ReportType",
				SQLType:    "integer",
				DataType:   postgres.Integer,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Report",
				},
			},

			{
				Name:       "Filter",
				ColumnName: "filter",
				Type:       "github.com/stackrox/rox/generated/storage.isReportConfiguration_Filter",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "ScopeId",
				ColumnName: "scope_id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Embedded",
				},
			},

			{
				Name:       "NotifierConfig",
				ColumnName: "notifier_config",
				Type:       "github.com/stackrox/rox/generated/storage.isReportConfiguration_NotifierConfig",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "Notifiers",
				ColumnName: "notifiers",
				Type:       "[]github.com/stackrox/rox/generated/storage.NotifierConfiguration",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "Version",
				ColumnName: "version",
				Type:       "int32",
				SQLType:    "integer",
				DataType:   postgres.Integer,
			},

			{
				Name:       "unknownFields",
				ColumnName: "unknown_fields",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.UnknownFields",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "sizeCache",
				ColumnName: "size_cache",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.SizeCache",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},
		},

		ScopingResource: resources.WorkflowAdministration,
	}
)

// GetReportConfigurationSchema returns the generated schema for report_configurations
func GetReportConfigurationSchema() *walker.Schema {
	// Set up search options if not already done
	if generatedReportConfigurationSchema.OptionsMap == nil {
		generatedReportConfigurationSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_REPORT_CONFIGURATIONS, generatedReportConfigurationSearchFields))
	}
	return generatedReportConfigurationSchema
}
