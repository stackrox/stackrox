// Code generated by pg-bindings generator. DO NOT EDIT.
package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedComplianceOperatorRuleV2SearchFields contains pre-computed search fields for compliance_operator_rule_v2
	generatedComplianceOperatorRuleV2SearchFields = map[search.FieldLabel]*search.Field{}

	// generatedComplianceOperatorRuleV2Schema is the pre-computed schema for compliance_operator_rule_v2 table
	generatedComplianceOperatorRuleV2Schema = &walker.Schema{
		Table:    "compliance_operator_rule_v2",
		Type:     "storage.ComplianceOperatorRuleV2",
		TypeName: "ComplianceOperatorRuleV2",
		Fields: []walker.Field{
			{
				Name:       "Id",
				ColumnName: "Id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "Name",
				ColumnName: "Name",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "RuleType",
				ColumnName: "RuleType",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "Severity",
				ColumnName: "Severity",
				Type:       "storage.RuleSeverity",
				SQLType:    "integer",
				DataType:   postgres.String,
			},
			{
				Name:       "ClusterId",
				ColumnName: "ClusterId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "RuleRefId",
				ColumnName: "RuleRefId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
				DataType:   postgres.String,
			},
		},
	}
)

// GetComplianceOperatorRuleV2Schema returns the generated schema for compliance_operator_rule_v2
func GetComplianceOperatorRuleV2Schema() *walker.Schema {
	// Set up search options if not already done
	if generatedComplianceOperatorRuleV2Schema.OptionsMap == nil {
		generatedComplianceOperatorRuleV2Schema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_COMPLIANCE_RULES, generatedComplianceOperatorRuleV2SearchFields))
	}
	return generatedComplianceOperatorRuleV2Schema
}
