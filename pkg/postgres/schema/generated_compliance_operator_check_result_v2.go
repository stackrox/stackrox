// Code generated by pg-bindings generator. DO NOT EDIT.
package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedComplianceOperatorCheckResultV2SearchFields contains pre-computed search fields for compliance_operator_check_result_v2
	generatedComplianceOperatorCheckResultV2SearchFields = map[search.FieldLabel]*search.Field{}

	// generatedComplianceOperatorCheckResultV2Schema is the pre-computed schema for compliance_operator_check_result_v2 table
	generatedComplianceOperatorCheckResultV2Schema = &walker.Schema{
		Table:    "compliance_operator_check_result_v2",
		Type:     "storage.ComplianceOperatorCheckResultV2",
		TypeName: "ComplianceOperatorCheckResultV2",
		Fields: []walker.Field{
			{
				Name:       "Id",
				ColumnName: "Id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "CheckId",
				ColumnName: "CheckId",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "CheckName",
				ColumnName: "CheckName",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "ClusterId",
				ColumnName: "ClusterId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "Status",
				ColumnName: "Status",
				Type:       "storage.ComplianceOperatorCheckResultV2_CheckStatus",
				SQLType:    "integer",
				DataType:   postgres.String,
			},
			{
				Name:       "Severity",
				ColumnName: "Severity",
				Type:       "storage.RuleSeverity",
				SQLType:    "integer",
				DataType:   postgres.String,
			},
			{
				Name:       "CreatedTime",
				ColumnName: "CreatedTime",
				Type:       "*timestamppb.Timestamp",
				SQLType:    "timestamp",
				DataType:   postgres.String,
			},
			{
				Name:       "ScanConfigName",
				ColumnName: "ScanConfigName",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "Rationale",
				ColumnName: "Rationale",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "ScanRefId",
				ColumnName: "ScanRefId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "RuleRefId",
				ColumnName: "RuleRefId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "LastStartedTime",
				ColumnName: "LastStartedTime",
				Type:       "*timestamppb.Timestamp",
				SQLType:    "timestamp",
				DataType:   postgres.String,
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
				DataType:   postgres.String,
			},
		},
	}
)

// GetComplianceOperatorCheckResultV2Schema returns the generated schema for compliance_operator_check_result_v2
func GetComplianceOperatorCheckResultV2Schema() *walker.Schema {
	// Set up search options if not already done
	if generatedComplianceOperatorCheckResultV2Schema.OptionsMap == nil {
		generatedComplianceOperatorCheckResultV2Schema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_COMPLIANCE_CHECK_RESULTS, generatedComplianceOperatorCheckResultV2SearchFields))
	}
	return generatedComplianceOperatorCheckResultV2Schema
}
