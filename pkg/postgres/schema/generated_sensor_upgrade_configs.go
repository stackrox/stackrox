// Code generated by generate-schema tool. DO NOT EDIT.

package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedSensorUpgradeConfigSearchFields contains pre-computed search fields for sensor_upgrade_configs
	generatedSensorUpgradeConfigSearchFields = map[search.FieldLabel]*search.Field{}

	// generatedSensorUpgradeConfigSchema is the pre-computed schema for sensor_upgrade_configs table
	generatedSensorUpgradeConfigSchema = &walker.Schema{
		Table:    "sensor_upgrade_configs",
		Type:     "*storage.SensorUpgradeConfig",
		TypeName: "SensorUpgradeConfig",
		Fields: []walker.Field{

			{
				Name:       "state",
				ColumnName: "state",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.MessageState",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "EnableAutoUpgrade",
				ColumnName: "enable_auto_upgrade",
				Type:       "bool",
				SQLType:    "bool",
				DataType:   postgres.Bool,
			},

			{
				Name:       "unknownFields",
				ColumnName: "unknown_fields",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.UnknownFields",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "sizeCache",
				ColumnName: "size_cache",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.SizeCache",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},
		},

		ScopingResource: resources.Administration,
	}
)

// GetSensorUpgradeConfigSchema returns the generated schema for sensor_upgrade_configs
func GetSensorUpgradeConfigSchema() *walker.Schema {
	// Set up search options if not already done
	if generatedSensorUpgradeConfigSchema.OptionsMap == nil {
		generatedSensorUpgradeConfigSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_SEARCH_UNSET, generatedSensorUpgradeConfigSearchFields))
	}
	return generatedSensorUpgradeConfigSchema
}
