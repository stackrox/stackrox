// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
)

var (
	// CreateTableNotificationSchedulesStmt holds the create statement for table `notification_schedules`.
	CreateTableNotificationSchedulesStmt = &postgres.CreateStmts{
		GormModel: (*NotificationSchedules)(nil),
		Children:  []*postgres.CreateStmts{},
		PostStmts: []string{
			"ALTER TABLE notification_schedules REPLICA IDENTITY FULL",
		},
	}

	// NotificationSchedulesSchema is the go schema for table `notification_schedules`.
	NotificationSchedulesSchema = func() *walker.Schema {
		schema := GetSchemaForTable("notification_schedules")
		if schema != nil {
			return schema
		}
		schema = GetNotificationScheduleSchema()
		schema.ScopingResource = resources.Notifications
		RegisterTable(schema, CreateTableNotificationSchedulesStmt)
		return schema
	}()
)

const (
	// NotificationSchedulesTableName specifies the name of the table in postgres.
	NotificationSchedulesTableName = "notification_schedules"
)

// NotificationSchedules holds the Gorm model for Postgres table `notification_schedules`.
type NotificationSchedules struct {
	Serialized []byte `gorm:"column:serialized;type:bytea"`
}
