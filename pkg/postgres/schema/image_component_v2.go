// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"fmt"
	"reflect"

	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/features"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
	"github.com/stackrox/rox/pkg/search/postgres/mapping"
)

var (
	// CreateTableImageComponentV2Stmt holds the create statement for table `image_component_v2`.
	CreateTableImageComponentV2Stmt = &postgres.CreateStmts{
		GormModel: (*ImageComponentV2)(nil),
		Children:  []*postgres.CreateStmts{},
	}

	// ImageComponentV2Schema is the go schema for table `image_component_v2`.
	ImageComponentV2Schema = func() *walker.Schema {
		schema := GetSchemaForTable("image_component_v2")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.ImageComponentV2)(nil)), "image_component_v2")
		referencedSchemas := map[string]*walker.Schema{
			"storage.Image": ImagesSchema,
		}

		schema.ResolveReferences(func(messageTypeName string) *walker.Schema {
			return referencedSchemas[fmt.Sprintf("storage.%s", messageTypeName)]
		})
		schema.SetOptionsMap(search.Walk(v1.SearchCategory_IMAGE_COMPONENTS_V2, "imagecomponentv2", (*storage.ImageComponentV2)(nil)))
		schema.SetSearchScope([]v1.SearchCategory{
			v1.SearchCategory_IMAGE_VULNERABILITIES_V2,
			v1.SearchCategory_IMAGE_COMPONENTS_V2,
			v1.SearchCategory_IMAGES,
			v1.SearchCategory_DEPLOYMENTS,
			v1.SearchCategory_NAMESPACES,
			v1.SearchCategory_CLUSTERS,
		}...)
		schema.ScopingResource = resources.Image
		RegisterTable(schema, CreateTableImageComponentV2Stmt, features.FlattenCVEData.Enabled)
		mapping.RegisterCategoryToTable(v1.SearchCategory_IMAGE_COMPONENTS_V2, schema)
		return schema
	}()
)

const (
	// ImageComponentV2TableName specifies the name of the table in postgres.
	ImageComponentV2TableName = "image_component_v2"
)

// ImageComponentV2 holds the Gorm model for Postgres table `image_component_v2`.
type ImageComponentV2 struct {
	ID              string             `gorm:"column:id;type:varchar;primaryKey"`
	Name            string             `gorm:"column:name;type:varchar"`
	Version         string             `gorm:"column:version;type:varchar"`
	Priority        int64              `gorm:"column:priority;type:bigint"`
	Source          storage.SourceType `gorm:"column:source;type:integer"`
	RiskScore       float32            `gorm:"column:riskscore;type:numeric"`
	TopCvss         float32            `gorm:"column:topcvss;type:numeric"`
	OperatingSystem string             `gorm:"column:operatingsystem;type:varchar"`
	ImageID         string             `gorm:"column:imageid;type:varchar;index:imagecomponentv2_imageid,type:btree"`
	Location        string             `gorm:"column:location;type:varchar"`
	Serialized      []byte             `gorm:"column:serialized;type:bytea"`
	ImagesRef       Images             `gorm:"foreignKey:imageid;references:id;belongsTo;constraint:OnDelete:CASCADE"`
}
