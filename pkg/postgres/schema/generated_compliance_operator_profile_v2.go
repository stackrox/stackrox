// Code generated by pg-bindings generator. DO NOT EDIT.
package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedComplianceOperatorProfileV2SearchFields contains pre-computed search fields for compliance_operator_profile_v2
	generatedComplianceOperatorProfileV2SearchFields = map[search.FieldLabel]*search.Field{}

	// generatedComplianceOperatorProfileV2Schema is the pre-computed schema for compliance_operator_profile_v2 table
	generatedComplianceOperatorProfileV2Schema = &walker.Schema{
		Table:    "compliance_operator_profile_v2",
		Type:     "storage.ComplianceOperatorProfileV2",
		TypeName: "ComplianceOperatorProfileV2",
		Fields: []walker.Field{
			{
				Name:       "Id",
				ColumnName: "Id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "ProfileId",
				ColumnName: "ProfileId",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "Name",
				ColumnName: "Name",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "ProfileVersion",
				ColumnName: "ProfileVersion",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "ProductType",
				ColumnName: "ProductType",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "Standard",
				ColumnName: "Standard",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "ClusterId",
				ColumnName: "ClusterId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "ProfileRefId",
				ColumnName: "ProfileRefId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
				DataType:   postgres.String,
			},
		},
	}
)

// GetComplianceOperatorProfileV2Schema returns the generated schema for compliance_operator_profile_v2
func GetComplianceOperatorProfileV2Schema() *walker.Schema {
	// Set up search options if not already done
	if generatedComplianceOperatorProfileV2Schema.OptionsMap == nil {
		generatedComplianceOperatorProfileV2Schema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_COMPLIANCE_PROFILES, generatedComplianceOperatorProfileV2SearchFields))
	}
	return generatedComplianceOperatorProfileV2Schema
}
