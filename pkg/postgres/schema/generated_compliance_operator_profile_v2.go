// Code generated by generate-schema tool. DO NOT EDIT.

package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedComplianceOperatorProfileV2SearchFields contains pre-computed search fields for compliance_operator_profile_v2
	generatedComplianceOperatorProfileV2SearchFields = map[search.FieldLabel]*search.Field{

		"Compliance": {
			FieldPath: "ProfileId",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_COMPLIANCE_PROFILES,
		},

		"Cluster": {
			FieldPath: "ClusterId",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_COMPLIANCE_PROFILES,
		},

		"Profile": {
			FieldPath: "ProfileRefId",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_COMPLIANCE_PROFILES,
		},
	}

	// generatedComplianceOperatorProfileV2Schema is the pre-computed schema for compliance_operator_profile_v2 table
	generatedComplianceOperatorProfileV2Schema = &walker.Schema{
		Table:    "compliance_operator_profile_v2",
		Type:     "*storage.ComplianceOperatorProfileV2",
		TypeName: "ComplianceOperatorProfileV2",
		Fields: []walker.Field{

			{
				Name:       "state",
				ColumnName: "state",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.MessageState",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "Id",
				ColumnName: "id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},

			{
				Name:       "ProfileId",
				ColumnName: "profile_id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Compliance",
				},
			},

			{
				Name:       "Name",
				ColumnName: "name",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Compliance",
				},
			},

			{
				Name:       "ProfileVersion",
				ColumnName: "profile_version",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Compliance",
				},
			},

			{
				Name:       "ProductType",
				ColumnName: "product_type",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Compliance",
				},
			},

			{
				Name:       "Standard",
				ColumnName: "standard",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Compliance",
				},
			},

			{
				Name:       "Labels",
				ColumnName: "labels",
				Type:       "map[string]string",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "Annotations",
				ColumnName: "annotations",
				Type:       "map[string]string",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "Description",
				ColumnName: "description",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},

			{
				Name:       "Rules",
				ColumnName: "rules",
				Type:       "[]github.com/stackrox/rox/generated/storage.ComplianceOperatorProfileV2_Rule",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "Product",
				ColumnName: "product",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},

			{
				Name:       "Title",
				ColumnName: "title",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},

			{
				Name:       "Values",
				ColumnName: "values",
				Type:       "[]string",
				SQLType:    "text[]",
				DataType:   postgres.StringArray,
			},

			{
				Name:       "ClusterId",
				ColumnName: "cluster_id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Cluster",
				},
			},

			{
				Name:       "ProfileRefId",
				ColumnName: "profile_ref_id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Profile",
				},
			},

			{
				Name:       "unknownFields",
				ColumnName: "unknown_fields",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.UnknownFields",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "sizeCache",
				ColumnName: "size_cache",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.SizeCache",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},
		},

		ScopingResource: resources.Compliance,
	}
)

// GetComplianceOperatorProfileV2Schema returns the generated schema for compliance_operator_profile_v2
func GetComplianceOperatorProfileV2Schema() *walker.Schema {
	// Set up search options if not already done
	if generatedComplianceOperatorProfileV2Schema.OptionsMap == nil {
		generatedComplianceOperatorProfileV2Schema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_COMPLIANCE_PROFILES, generatedComplianceOperatorProfileV2SearchFields))
	}
	return generatedComplianceOperatorProfileV2Schema
}
