// Code generated by generate-schema tool. DO NOT EDIT.

package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedNotificationScheduleSearchFields contains pre-computed search fields for notification_schedules
	generatedNotificationScheduleSearchFields = map[search.FieldLabel]*search.Field{}

	// generatedNotificationScheduleSchema is the pre-computed schema for notification_schedules table
	generatedNotificationScheduleSchema = &walker.Schema{
		Table:    "notification_schedules",
		Type:     "*storage.NotificationSchedule",
		TypeName: "NotificationSchedule",
		Fields: []walker.Field{

			{
				Name:       "state",
				ColumnName: "state",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.MessageState",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "unknownFields",
				ColumnName: "unknown_fields",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.UnknownFields",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "sizeCache",
				ColumnName: "size_cache",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.SizeCache",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},
		},

		ScopingResource: resources.Notifications,
	}
)

// GetNotificationScheduleSchema returns the generated schema for notification_schedules
func GetNotificationScheduleSchema() *walker.Schema {
	// Set up search options if not already done
	if generatedNotificationScheduleSchema.OptionsMap == nil {
		generatedNotificationScheduleSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_SEARCH_UNSET, generatedNotificationScheduleSearchFields))
	}
	return generatedNotificationScheduleSchema
}
