// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"fmt"
	"reflect"
	"time"

	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/features"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
	"github.com/stackrox/rox/pkg/search/postgres/mapping"
)

var (
	// CreateTableComplianceOperatorReportSnapshotV2Stmt holds the create statement for table `compliance_operator_report_snapshot_v2`.
	CreateTableComplianceOperatorReportSnapshotV2Stmt = &postgres.CreateStmts{
		GormModel: (*ComplianceOperatorReportSnapshotV2)(nil),
		Children: []*postgres.CreateStmts{
			&postgres.CreateStmts{
				GormModel: (*ComplianceOperatorReportSnapshotV2Scans)(nil),
				Children:  []*postgres.CreateStmts{},
			},
		},
	}

	// ComplianceOperatorReportSnapshotV2Schema is the go schema for table `compliance_operator_report_snapshot_v2`.
	ComplianceOperatorReportSnapshotV2Schema = func() *walker.Schema {
		schema := GetSchemaForTable("compliance_operator_report_snapshot_v2")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.ComplianceOperatorReportSnapshotV2)(nil)), "compliance_operator_report_snapshot_v2")
		referencedSchemas := map[string]*walker.Schema{
			"storage.ComplianceOperatorScanConfigurationV2": ComplianceOperatorScanConfigurationV2Schema,
			"storage.ComplianceOperatorScanV2":              ComplianceOperatorScanV2Schema,
		}

		schema.ResolveReferences(func(messageTypeName string) *walker.Schema {
			return referencedSchemas[fmt.Sprintf("storage.%s", messageTypeName)]
		})
		schema.SetOptionsMap(search.Walk(v1.SearchCategory_COMPLIANCE_REPORT_SNAPSHOT, "complianceoperatorreportsnapshotv2", (*storage.ComplianceOperatorReportSnapshotV2)(nil)))
		schema.ScopingResource = resources.Compliance
		RegisterTable(schema, CreateTableComplianceOperatorReportSnapshotV2Stmt, features.ComplianceEnhancements.Enabled)
		mapping.RegisterCategoryToTable(v1.SearchCategory_COMPLIANCE_REPORT_SNAPSHOT, schema)
		return schema
	}()
)

const (
	// ComplianceOperatorReportSnapshotV2TableName specifies the name of the table in postgres.
	ComplianceOperatorReportSnapshotV2TableName = "compliance_operator_report_snapshot_v2"
	// ComplianceOperatorReportSnapshotV2ScansTableName specifies the name of the table in postgres.
	ComplianceOperatorReportSnapshotV2ScansTableName = "compliance_operator_report_snapshot_v2_scans"
)

// ComplianceOperatorReportSnapshotV2 holds the Gorm model for Postgres table `compliance_operator_report_snapshot_v2`.
type ComplianceOperatorReportSnapshotV2 struct {
	ReportID                                 string                                                    `gorm:"column:reportid;type:uuid;primaryKey"`
	ScanConfigurationID                      string                                                    `gorm:"column:scanconfigurationid;type:varchar"`
	Name                                     string                                                    `gorm:"column:name;type:varchar"`
	ReportStatusRunState                     storage.ComplianceOperatorReportStatus_RunState           `gorm:"column:reportstatus_runstate;type:integer"`
	ReportStatusStartedAt                    *time.Time                                                `gorm:"column:reportstatus_startedat;type:timestamp"`
	ReportStatusCompletedAt                  *time.Time                                                `gorm:"column:reportstatus_completedat;type:timestamp"`
	ReportStatusReportRequestType            storage.ComplianceOperatorReportStatus_RunMethod          `gorm:"column:reportstatus_reportrequesttype;type:integer"`
	ReportStatusReportNotificationMethod     storage.ComplianceOperatorReportStatus_NotificationMethod `gorm:"column:reportstatus_reportnotificationmethod;type:integer"`
	UserID                                   string                                                    `gorm:"column:user_id;type:varchar"`
	UserName                                 string                                                    `gorm:"column:user_name;type:varchar"`
	Serialized                               []byte                                                    `gorm:"column:serialized;type:bytea"`
	ComplianceOperatorScanConfigurationV2Ref ComplianceOperatorScanConfigurationV2                     `gorm:"foreignKey:scanconfigurationid;references:id;belongsTo;constraint:OnDelete:CASCADE"`
}

// ComplianceOperatorReportSnapshotV2Scans holds the Gorm model for Postgres table `compliance_operator_report_snapshot_v2_scans`.
type ComplianceOperatorReportSnapshotV2Scans struct {
	ComplianceOperatorReportSnapshotV2ReportID string                             `gorm:"column:compliance_operator_report_snapshot_v2_reportid;type:uuid;primaryKey"`
	Idx                                        int                                `gorm:"column:idx;type:integer;primaryKey;index:complianceoperatorreportsnapshotv2scans_idx,type:btree"`
	ScanRefID                                  string                             `gorm:"column:scanrefid;type:varchar"`
	LastStartedTime                            *time.Time                         `gorm:"column:laststartedtime;type:timestamp"`
	ComplianceOperatorReportSnapshotV2Ref      ComplianceOperatorReportSnapshotV2 `gorm:"foreignKey:compliance_operator_report_snapshot_v2_reportid;references:reportid;belongsTo;constraint:OnDelete:CASCADE"`
}
