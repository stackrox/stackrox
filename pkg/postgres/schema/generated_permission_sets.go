// Code generated by generate-schema tool. DO NOT EDIT.

package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedPermissionSetSearchFields contains pre-computed search fields for permission_sets
	generatedPermissionSetSearchFields = map[search.FieldLabel]*search.Field{}

	// generatedPermissionSetSchema is the pre-computed schema for permission_sets table
	generatedPermissionSetSchema = &walker.Schema{
		Table:    "permission_sets",
		Type:     "*storage.PermissionSet",
		TypeName: "PermissionSet",
		Fields: []walker.Field{

			{
				Name:       "state",
				ColumnName: "state",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.MessageState",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "Id",
				ColumnName: "id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},

			{
				Name:       "Name",
				ColumnName: "name",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},

			{
				Name:       "Description",
				ColumnName: "description",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},

			{
				Name:       "ResourceToAccess",
				ColumnName: "resource_to_access",
				Type:       "map[string]github.com/stackrox/rox/generated/storage.Access",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "unknownFields",
				ColumnName: "unknown_fields",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.UnknownFields",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "sizeCache",
				ColumnName: "size_cache",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.SizeCache",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},
		},

		ScopingResource: resources.Access,
	}
)

// GetPermissionSetSchema returns the generated schema for permission_sets
func GetPermissionSetSchema() *walker.Schema {
	// Set up search options if not already done
	if generatedPermissionSetSchema.OptionsMap == nil {
		generatedPermissionSetSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_SEARCH_UNSET, generatedPermissionSetSearchFields))
	}
	return generatedPermissionSetSchema
}
