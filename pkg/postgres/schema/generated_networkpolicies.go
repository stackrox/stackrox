// Code generated by pg-bindings generator. DO NOT EDIT.
package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedNetworkPolicySearchFields contains pre-computed search fields for networkpolicies
	generatedNetworkPolicySearchFields = map[search.FieldLabel]*search.Field{}

	// generatedNetworkPolicySchema is the pre-computed schema for networkpolicies table
	generatedNetworkPolicySchema = &walker.Schema{
		Table:    "networkpolicies",
		Type:     "storage.NetworkPolicy",
		TypeName: "NetworkPolicy",
		Fields: []walker.Field{
			{
				Name:       "Id",
				ColumnName: "Id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "ClusterId",
				ColumnName: "ClusterId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "Namespace",
				ColumnName: "Namespace",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
				DataType:   postgres.String,
			},
		},
	}
)

// GetNetworkPolicySchema returns the generated schema for networkpolicies
func GetNetworkPolicySchema() *walker.Schema {
	// Set up search options if not already done
	if generatedNetworkPolicySchema.OptionsMap == nil {
		generatedNetworkPolicySchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_NETWORK_POLICIES, generatedNetworkPolicySearchFields))
	}
	return generatedNetworkPolicySchema
}
