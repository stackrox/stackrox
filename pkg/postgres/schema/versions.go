// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"reflect"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
)

var (
	// CreateTableVersionsStmt holds the create statement for table `versions`.
	CreateTableVersionsStmt = &postgres.CreateStmts{
		GormModel: (*Versions)(nil),
		Children:  []*postgres.CreateStmts{},
	}

	// VersionsSchema is the go schema for table `versions`.
	VersionsSchema = func() *walker.Schema {
		schema := GetSchemaForTable("versions")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.Version)(nil)), "versions")
		RegisterTable(schema, CreateTableVersionsStmt)
		return schema
	}()
)

const (
	VersionsTableName = "versions"
)

// Versions holds the Gorm model for Postgres table `versions`.
type Versions struct {
	Serialized []byte `gorm:"column:serialized;type:bytea"`
}
