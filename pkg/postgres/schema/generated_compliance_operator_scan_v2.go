// Code generated by pg-bindings generator. DO NOT EDIT.
package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedComplianceOperatorScanV2SearchFields contains pre-computed search fields for compliance_operator_scan_v2
	generatedComplianceOperatorScanV2SearchFields = map[search.FieldLabel]*search.Field{}

	// generatedComplianceOperatorScanV2Schema is the pre-computed schema for compliance_operator_scan_v2 table
	generatedComplianceOperatorScanV2Schema = &walker.Schema{
		Table:    "compliance_operator_scan_v2",
		Type:     "storage.ComplianceOperatorScanV2",
		TypeName: "ComplianceOperatorScanV2",
		Fields: []walker.Field{
			{
				Name:       "Id",
				ColumnName: "Id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "ScanConfigName",
				ColumnName: "ScanConfigName",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "ClusterId",
				ColumnName: "ClusterId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "ProfileRefId",
				ColumnName: "Profile_ProfileRefId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "Result",
				ColumnName: "Status_Result",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "LastExecutedTime",
				ColumnName: "LastExecutedTime",
				Type:       "*timestamppb.Timestamp",
				SQLType:    "timestamp",
				DataType:   postgres.String,
			},
			{
				Name:       "ScanName",
				ColumnName: "ScanName",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "ScanRefId",
				ColumnName: "ScanRefId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "LastStartedTime",
				ColumnName: "LastStartedTime",
				Type:       "*timestamppb.Timestamp",
				SQLType:    "timestamp",
				DataType:   postgres.String,
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
				DataType:   postgres.String,
			},
		},
	}
)

// GetComplianceOperatorScanV2Schema returns the generated schema for compliance_operator_scan_v2
func GetComplianceOperatorScanV2Schema() *walker.Schema {
	// Set up search options if not already done
	if generatedComplianceOperatorScanV2Schema.OptionsMap == nil {
		generatedComplianceOperatorScanV2Schema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_COMPLIANCE_SCAN, generatedComplianceOperatorScanV2SearchFields))
	}
	return generatedComplianceOperatorScanV2Schema
}
