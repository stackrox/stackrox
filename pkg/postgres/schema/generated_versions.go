// Code generated by generate-schema tool. DO NOT EDIT.

package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedVersionSearchFields contains pre-computed search fields for versions
	generatedVersionSearchFields = map[search.FieldLabel]*search.Field{

		"Current": {
			FieldPath: "SeqNum",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
		},

		"Version": {
			FieldPath: "Version",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
		},

		"Last": {
			FieldPath: "LastPersisted",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
		},

		"Minimum": {
			FieldPath: "MinSeqNum",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
		},
	}

	// generatedVersionSchema is the pre-computed schema for versions table
	generatedVersionSchema = &walker.Schema{
		Table:    "versions",
		Type:     "*storage.Version",
		TypeName: "Version",
		Fields: []walker.Field{

			{
				Name:       "state",
				ColumnName: "state",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.MessageState",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "SeqNum",
				ColumnName: "seq_num",
				Type:       "int32",
				SQLType:    "integer",
				DataType:   postgres.Integer,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Current",
				},
			},

			{
				Name:       "Version",
				ColumnName: "version",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Version",
				},
			},

			{
				Name:       "MinSeqNum",
				ColumnName: "min_seq_num",
				Type:       "int32",
				SQLType:    "integer",
				DataType:   postgres.Integer,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Minimum",
				},
			},

			{
				Name:       "unknownFields",
				ColumnName: "unknown_fields",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.UnknownFields",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "sizeCache",
				ColumnName: "size_cache",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.SizeCache",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},
		},

		ScopingResource: resources.Version,
	}
)

// GetVersionSchema returns the generated schema for versions
func GetVersionSchema() *walker.Schema {
	// Set up search options if not already done
	if generatedVersionSchema.OptionsMap == nil {
		generatedVersionSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_SEARCH_UNSET, generatedVersionSearchFields))
	}
	return generatedVersionSchema
}
