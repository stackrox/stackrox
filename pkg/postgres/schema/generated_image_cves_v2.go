// Code generated by generate-schema tool. DO NOT EDIT.

package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedImageCVEV2SearchFields contains pre-computed search fields for image_cves_v2
	generatedImageCVEV2SearchFields = map[search.FieldLabel]*search.Field{

		"CVE": {
			FieldPath: "Id",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_IMAGE_VULNERABILITIES_V2,
		},

		"CVSS": {
			FieldPath: "Cvss",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     true,
			Hidden:    false,
			Category:  v1.SearchCategory_IMAGE_VULNERABILITIES_V2,
		},

		"Severity": {
			FieldPath: "Severity",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_IMAGE_VULNERABILITIES_V2,
		},

		"Impact": {
			FieldPath: "ImpactScore",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_IMAGE_VULNERABILITIES_V2,
		},

		"NVD": {
			FieldPath: "Nvdcvss",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_IMAGE_VULNERABILITIES_V2,
		},

		"First": {
			FieldPath: "FirstImageOccurrence",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_IMAGE_VULNERABILITIES_V2,
		},

		"Vulnerability": {
			FieldPath: "State",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_IMAGE_VULNERABILITIES_V2,
		},

		"Fixable": {
			FieldPath: "IsFixable",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     true,
			Hidden:    false,
			Category:  v1.SearchCategory_IMAGE_VULNERABILITIES_V2,
		},
	}

	// generatedImageCVEV2Schema is the pre-computed schema for image_cves_v2 table
	generatedImageCVEV2Schema = &walker.Schema{
		Table:    "image_cves_v2",
		Type:     "*storage.ImageCVEV2",
		TypeName: "ImageCVEV2",
		Fields: []walker.Field{

			{
				Name:       "state",
				ColumnName: "state",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.MessageState",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "Id",
				ColumnName: "id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "CVE",
				},
			},

			{
				Name:       "ImageId",
				ColumnName: "image_id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Options: walker.PostgresOptions{
					Index: []*walker.PostgresIndexOptions{
						{IndexType: "btree"},
					},
				},
			},

			{
				Name:       "Cvss",
				ColumnName: "cvss",
				Type:       "float32",
				SQLType:    "numeric",
				DataType:   postgres.Numeric,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "CVSS,store",
				},
			},

			{
				Name:       "Severity",
				ColumnName: "severity",
				Type:       "github.com/stackrox/rox/generated/storage.VulnerabilitySeverity",
				SQLType:    "integer",
				DataType:   postgres.Integer,

				Options: walker.PostgresOptions{
					Index: []*walker.PostgresIndexOptions{
						{IndexType: "btree"},
					},
				},

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Severity",
				},
			},

			{
				Name:       "ImpactScore",
				ColumnName: "impact_score",
				Type:       "float32",
				SQLType:    "numeric",
				DataType:   postgres.Numeric,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Impact",
				},
			},

			{
				Name:       "Nvdcvss",
				ColumnName: "nvdcvss",
				Type:       "float32",
				SQLType:    "numeric",
				DataType:   postgres.Numeric,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "NVD",
				},
			},

			{
				Name:       "NvdScoreVersion",
				ColumnName: "nvd_score_version",
				Type:       "github.com/stackrox/rox/generated/storage.CvssScoreVersion",
				SQLType:    "integer",
				DataType:   postgres.Integer,
			},

			{
				Name:       "State",
				ColumnName: "state",
				Type:       "github.com/stackrox/rox/generated/storage.VulnerabilityState",
				SQLType:    "integer",
				DataType:   postgres.Integer,

				Options: walker.PostgresOptions{
					Index: []*walker.PostgresIndexOptions{
						{IndexType: "btree"},
					},
				},

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Vulnerability",
				},
			},

			{
				Name:       "IsFixable",
				ColumnName: "is_fixable",
				Type:       "bool",
				SQLType:    "bool",
				DataType:   postgres.Bool,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Fixable,store",
				},
			},

			{
				Name:       "HasFixedBy",
				ColumnName: "has_fixed_by",
				Type:       "github.com/stackrox/rox/generated/storage.isImageCVEV2_HasFixedBy",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "ComponentId",
				ColumnName: "component_id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Options: walker.PostgresOptions{
					Index: []*walker.PostgresIndexOptions{
						{IndexType: "btree"},
					},
				},
			},

			{
				Name:       "ImageIdV2",
				ColumnName: "image_id_v2",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Options: walker.PostgresOptions{
					Index: []*walker.PostgresIndexOptions{
						{IndexType: "btree"},
					},
				},
			},

			{
				Name:       "unknownFields",
				ColumnName: "unknown_fields",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.UnknownFields",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "sizeCache",
				ColumnName: "size_cache",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.SizeCache",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},
		},

		ScopingResource: resources.Image,
	}
)

// GetImageCVEV2Schema returns the generated schema for image_cves_v2
func GetImageCVEV2Schema() *walker.Schema {
	// Set up search options if not already done
	if generatedImageCVEV2Schema.OptionsMap == nil {
		generatedImageCVEV2Schema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_IMAGE_VULNERABILITIES_V2, generatedImageCVEV2SearchFields))
	}
	return generatedImageCVEV2Schema
}
