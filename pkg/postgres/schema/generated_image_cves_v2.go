// Code generated by pg-bindings generator. DO NOT EDIT.
package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedImageCVEV2SearchFields contains pre-computed search fields for image_cves_v2
	generatedImageCVEV2SearchFields = map[search.FieldLabel]*search.Field{}

	// generatedImageCVEV2Schema is the pre-computed schema for image_cves_v2 table
	generatedImageCVEV2Schema = &walker.Schema{
		Table:    "image_cves_v2",
		Type:     "storage.ImageCVEV2",
		TypeName: "ImageCVEV2",
		Fields: []walker.Field{
			{
				Name:       "Id",
				ColumnName: "Id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "ImageId",
				ColumnName: "ImageId",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "Cve",
				ColumnName: "CveBaseInfo_Cve",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "PublishedOn",
				ColumnName: "CveBaseInfo_PublishedOn",
				Type:       "*timestamppb.Timestamp",
				SQLType:    "timestamp",
				DataType:   postgres.String,
			},
			{
				Name:       "CreatedAt",
				ColumnName: "CveBaseInfo_CreatedAt",
				Type:       "*timestamppb.Timestamp",
				SQLType:    "timestamp",
				DataType:   postgres.String,
			},
			{
				Name:       "EpssProbability",
				ColumnName: "CveBaseInfo_Epss_EpssProbability",
				Type:       "float32",
				SQLType:    "numeric",
				DataType:   postgres.String,
			},
			{
				Name:       "Cvss",
				ColumnName: "Cvss",
				Type:       "float32",
				SQLType:    "numeric",
				DataType:   postgres.String,
			},
			{
				Name:       "Severity",
				ColumnName: "Severity",
				Type:       "storage.VulnerabilitySeverity",
				SQLType:    "integer",
				DataType:   postgres.String,
			},
			{
				Name:       "ImpactScore",
				ColumnName: "ImpactScore",
				Type:       "float32",
				SQLType:    "numeric",
				DataType:   postgres.String,
			},
			{
				Name:       "Nvdcvss",
				ColumnName: "Nvdcvss",
				Type:       "float32",
				SQLType:    "numeric",
				DataType:   postgres.String,
			},
			{
				Name:       "FirstImageOccurrence",
				ColumnName: "FirstImageOccurrence",
				Type:       "*timestamppb.Timestamp",
				SQLType:    "timestamp",
				DataType:   postgres.String,
			},
			{
				Name:       "State",
				ColumnName: "State",
				Type:       "storage.VulnerabilityState",
				SQLType:    "integer",
				DataType:   postgres.String,
			},
			{
				Name:       "IsFixable",
				ColumnName: "IsFixable",
				Type:       "bool",
				SQLType:    "bool",
				DataType:   postgres.String,
			},
			{
				Name:       "FixedBy",
				ColumnName: "FixedBy",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "ComponentId",
				ColumnName: "ComponentId",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "Name",
				ColumnName: "Advisory_Name",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "Link",
				ColumnName: "Advisory_Link",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "ImageIdV2",
				ColumnName: "ImageIdV2",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
				DataType:   postgres.String,
			},
		},
	}
)

// GetImageCVEV2Schema returns the generated schema for image_cves_v2
func GetImageCVEV2Schema() *walker.Schema {
	// Set up search options if not already done
	if generatedImageCVEV2Schema.OptionsMap == nil {
		generatedImageCVEV2Schema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_IMAGE_VULNERABILITIES_V2, generatedImageCVEV2SearchFields))
	}
	return generatedImageCVEV2Schema
}
