// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"fmt"
	"reflect"
	"time"

	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/features"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
	"github.com/stackrox/rox/pkg/search/postgres/mapping"
)

var (
	// CreateTableComplianceOperatorClusterScanConfigStatusesStmt holds the create statement for table `compliance_operator_cluster_scan_config_statuses`.
	CreateTableComplianceOperatorClusterScanConfigStatusesStmt = &postgres.CreateStmts{
		GormModel: (*ComplianceOperatorClusterScanConfigStatuses)(nil),
		Children:  []*postgres.CreateStmts{},
	}

	// ComplianceOperatorClusterScanConfigStatusesSchema is the go schema for table `compliance_operator_cluster_scan_config_statuses`.
	ComplianceOperatorClusterScanConfigStatusesSchema = func() *walker.Schema {
		schema := GetSchemaForTable("compliance_operator_cluster_scan_config_statuses")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.ComplianceOperatorClusterScanConfigStatus)(nil)), "compliance_operator_cluster_scan_config_statuses")
		referencedSchemas := map[string]*walker.Schema{
			"storage.Cluster": ClustersSchema,
			"storage.ComplianceOperatorScanConfigurationV2": ComplianceOperatorScanConfigurationV2Schema,
		}

		schema.ResolveReferences(func(messageTypeName string) *walker.Schema {
			return referencedSchemas[fmt.Sprintf("storage.%s", messageTypeName)]
		})
		schema.SetOptionsMap(search.Walk(v1.SearchCategory_COMPLIANCE_SCAN_CONFIG_STATUS, "complianceoperatorclusterscanconfigstatus", (*storage.ComplianceOperatorClusterScanConfigStatus)(nil)))
		schema.ScopingResource = resources.ComplianceOperator
		RegisterTable(schema, CreateTableComplianceOperatorClusterScanConfigStatusesStmt, features.ComplianceEnhancements.Enabled)
		mapping.RegisterCategoryToTable(v1.SearchCategory_COMPLIANCE_SCAN_CONFIG_STATUS, schema)
		return schema
	}()
)

const (
	// ComplianceOperatorClusterScanConfigStatusesTableName specifies the name of the table in postgres.
	ComplianceOperatorClusterScanConfigStatusesTableName = "compliance_operator_cluster_scan_config_statuses"
)

// ComplianceOperatorClusterScanConfigStatuses holds the Gorm model for Postgres table `compliance_operator_cluster_scan_config_statuses`.
type ComplianceOperatorClusterScanConfigStatuses struct {
	ClusterID       string     `gorm:"column:clusterid;type:uuid;primaryKey"`
	ScanID          string     `gorm:"column:scanid;type:varchar"`
	LastUpdatedTime *time.Time `gorm:"column:lastupdatedtime;type:timestamp"`
	Serialized      []byte     `gorm:"column:serialized;type:bytea"`
}
