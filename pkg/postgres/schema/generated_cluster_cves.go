// Code generated by generate-schema tool. DO NOT EDIT.

package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedClusterCVESearchFields contains pre-computed search fields for cluster_cves
	generatedClusterCVESearchFields = map[search.FieldLabel]*search.Field{

		"CVE": {
			FieldPath: "Id",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_CLUSTER_VULNERABILITIES,
		},

		"CVSS": {
			FieldPath: "Cvss",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     true,
			Hidden:    false,
			Category:  v1.SearchCategory_CLUSTER_VULNERABILITIES,
		},

		"Severity": {
			FieldPath: "Severity",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_CLUSTER_VULNERABILITIES,
		},

		"Impact": {
			FieldPath: "ImpactScore",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_CLUSTER_VULNERABILITIES,
		},
	}

	// generatedClusterCVESchema is the pre-computed schema for cluster_cves table
	generatedClusterCVESchema = &walker.Schema{
		Table:    "cluster_cves",
		Type:     "*storage.ClusterCVE",
		TypeName: "ClusterCVE",
		Fields: []walker.Field{

			{
				Name:       "state",
				ColumnName: "state",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.MessageState",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "Id",
				ColumnName: "id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "CVE",
				},
			},

			{
				Name:       "Cvss",
				ColumnName: "cvss",
				Type:       "float32",
				SQLType:    "numeric",
				DataType:   postgres.Numeric,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "CVSS,store",
				},
			},

			{
				Name:       "Severity",
				ColumnName: "severity",
				Type:       "github.com/stackrox/rox/generated/storage.VulnerabilitySeverity",
				SQLType:    "integer",
				DataType:   postgres.Integer,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Severity",
				},
			},

			{
				Name:       "ImpactScore",
				ColumnName: "impact_score",
				Type:       "float32",
				SQLType:    "numeric",
				DataType:   postgres.Numeric,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Impact",
				},
			},

			{
				Name:       "Snoozed",
				ColumnName: "snoozed",
				Type:       "bool",
				SQLType:    "bool",
				DataType:   postgres.Bool,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "CVE",
				},
			},

			{
				Name:       "Type",
				ColumnName: "type",
				Type:       "github.com/stackrox/rox/generated/storage.CVE_CVEType",
				SQLType:    "integer",
				DataType:   postgres.Integer,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "CVE",
				},
			},

			{
				Name:       "unknownFields",
				ColumnName: "unknown_fields",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.UnknownFields",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "sizeCache",
				ColumnName: "size_cache",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.SizeCache",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},
		},

		ScopingResource: resources.Cluster,
	}
)

// GetClusterCVESchema returns the generated schema for cluster_cves
func GetClusterCVESchema() *walker.Schema {
	// Set up search options if not already done
	if generatedClusterCVESchema.OptionsMap == nil {
		generatedClusterCVESchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_CLUSTER_VULNERABILITIES, generatedClusterCVESearchFields))
	}
	return generatedClusterCVESchema
}
