// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/schema/internal"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
)

var (
	// CreateTableComplianceOperatorScanSettingBindingsStmt holds the create statement for table `compliance_operator_scan_setting_bindings`.
	CreateTableComplianceOperatorScanSettingBindingsStmt = &postgres.CreateStmts{
		GormModel: (*ComplianceOperatorScanSettingBindings)(nil),
		Children:  []*postgres.CreateStmts{},
	}

	// ComplianceOperatorScanSettingBindingsSchema is the go schema for table `compliance_operator_scan_setting_bindings`.
	ComplianceOperatorScanSettingBindingsSchema = func() *walker.Schema {
		schema := GetSchemaForTable("compliance_operator_scan_setting_bindings")
		if schema != nil {
			return schema
		}
		schema = internal.GetComplianceOperatorScanSettingBindingSchema()
		schema.ScopingResource = resources.ComplianceOperator
		RegisterTable(schema, CreateTableComplianceOperatorScanSettingBindingsStmt)
		return schema
	}()
)

const (
	// ComplianceOperatorScanSettingBindingsTableName specifies the name of the table in postgres.
	ComplianceOperatorScanSettingBindingsTableName = "compliance_operator_scan_setting_bindings"
)

// ComplianceOperatorScanSettingBindings holds the Gorm model for Postgres table `compliance_operator_scan_setting_bindings`.
type ComplianceOperatorScanSettingBindings struct {
	ID         string `gorm:"column:id;type:varchar;primaryKey"`
	Serialized []byte `gorm:"column:serialized;type:bytea"`
}
