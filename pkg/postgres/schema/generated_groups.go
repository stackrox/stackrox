// Code generated by generate-schema tool. DO NOT EDIT.

package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedGroupSearchFields contains pre-computed search fields for groups
	generatedGroupSearchFields = map[search.FieldLabel]*search.Field{

		"Role": {
			FieldPath: "RoleName",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    true,
		},
	}

	// generatedGroupSchema is the pre-computed schema for groups table
	generatedGroupSchema = &walker.Schema{
		Table:    "groups",
		Type:     "*storage.Group",
		TypeName: "Group",
		Fields: []walker.Field{

			{
				Name:       "state",
				ColumnName: "state",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.MessageState",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "RoleName",
				ColumnName: "role_name",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Options: walker.PostgresOptions{
					Index: []*walker.PostgresIndexOptions{
						{IndexType: "groups_unique_indicator;category"},
					},
				},

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Role,hidden",
				},
			},

			{
				Name:       "unknownFields",
				ColumnName: "unknown_fields",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.UnknownFields",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "sizeCache",
				ColumnName: "size_cache",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.SizeCache",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},
		},

		ScopingResource: resources.Access,
	}
)

// GetGroupSchema returns the generated schema for groups
func GetGroupSchema() *walker.Schema {
	// Set up search options if not already done
	if generatedGroupSchema.OptionsMap == nil {
		generatedGroupSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_SEARCH_UNSET, generatedGroupSearchFields))
	}
	return generatedGroupSchema
}
