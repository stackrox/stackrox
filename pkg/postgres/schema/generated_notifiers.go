// Code generated by generate-schema tool. DO NOT EDIT.

package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedNotifierSearchFields contains pre-computed search fields for notifiers
	generatedNotifierSearchFields = map[search.FieldLabel]*search.Field{}

	// generatedNotifierSchema is the pre-computed schema for notifiers table
	generatedNotifierSchema = &walker.Schema{
		Table:    "notifiers",
		Type:     "*storage.Notifier",
		TypeName: "Notifier",
		Fields: []walker.Field{

			{
				Name:       "state",
				ColumnName: "state",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.MessageState",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "Id",
				ColumnName: "id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},

			{
				Name:       "Name",
				ColumnName: "name",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},

			{
				Name:       "Type",
				ColumnName: "type",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},

			{
				Name:       "UiEndpoint",
				ColumnName: "ui_endpoint",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},

			{
				Name:       "LabelKey",
				ColumnName: "label_key",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},

			{
				Name:       "LabelDefault",
				ColumnName: "label_default",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},

			{
				Name:       "Config",
				ColumnName: "config",
				Type:       "github.com/stackrox/rox/generated/storage.isNotifier_Config",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "NotifierSecret",
				ColumnName: "notifier_secret",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},

			{
				Name:       "unknownFields",
				ColumnName: "unknown_fields",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.UnknownFields",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "sizeCache",
				ColumnName: "size_cache",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.SizeCache",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},
		},

		ScopingResource: resources.Integration,
	}
)

// GetNotifierSchema returns the generated schema for notifiers
func GetNotifierSchema() *walker.Schema {
	// Set up search options if not already done
	if generatedNotifierSchema.OptionsMap == nil {
		generatedNotifierSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_SEARCH_UNSET, generatedNotifierSearchFields))
	}
	return generatedNotifierSchema
}
