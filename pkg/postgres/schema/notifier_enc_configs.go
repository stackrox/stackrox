// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"reflect"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
)

var (
	// CreateTableNotifierEncConfigsStmt holds the create statement for table `notifier_enc_configs`.
	CreateTableNotifierEncConfigsStmt = &postgres.CreateStmts{
		GormModel: (*NotifierEncConfigs)(nil),
		Children:  []*postgres.CreateStmts{},
	}

	// NotifierEncConfigsSchema is the go schema for table `notifier_enc_configs`.
	NotifierEncConfigsSchema = func() *walker.Schema {
		schema := GetSchemaForTable("notifier_enc_configs")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.NotifierEncConfig)(nil)), "notifier_enc_configs")
		schema.ScopingResource = resources.InstallationInfo
		RegisterTable(schema, CreateTableNotifierEncConfigsStmt)
		return schema
	}()
)

const (
	// NotifierEncConfigsTableName specifies the name of the table in postgres.
	NotifierEncConfigsTableName = "notifier_enc_configs"
)

// NotifierEncConfigs holds the Gorm model for Postgres table `notifier_enc_configs`.
type NotifierEncConfigs struct {
	Serialized []byte `gorm:"column:serialized;type:bytea"`
}
