// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
)

var (
	// CreateTableNetworkpoliciesundodeploymentsStmt holds the create statement for table `networkpoliciesundodeployments`.
	CreateTableNetworkpoliciesundodeploymentsStmt = &postgres.CreateStmts{
		GormModel: (*Networkpoliciesundodeployments)(nil),
		Children:  []*postgres.CreateStmts{},
	}

	// NetworkpoliciesundodeploymentsSchema is the go schema for table `networkpoliciesundodeployments`.
	NetworkpoliciesundodeploymentsSchema = func() *walker.Schema {
		schema := GetSchemaForTable("networkpoliciesundodeployments")
		if schema != nil {
			return schema
		}
		schema = GetNetworkPolicyApplicationUndoDeploymentRecordSchema()
		schema.ScopingResource = resources.NetworkPolicy
		RegisterTable(schema, CreateTableNetworkpoliciesundodeploymentsStmt)
		return schema
	}()
)

const (
	// NetworkpoliciesundodeploymentsTableName specifies the name of the table in postgres.
	NetworkpoliciesundodeploymentsTableName = "networkpoliciesundodeployments"
)

// Networkpoliciesundodeployments holds the Gorm model for Postgres table `networkpoliciesundodeployments`.
type Networkpoliciesundodeployments struct {
	DeploymentID string `gorm:"column:deploymentid;type:uuid;primaryKey"`
	Serialized   []byte `gorm:"column:serialized;type:bytea"`
}
