// Code generated by pg-bindings generator. DO NOT EDIT.
package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedDeploymentSearchFields contains pre-computed search fields for deployments
	generatedDeploymentSearchFields = map[search.FieldLabel]*search.Field{}

	// generatedDeploymentSchema is the pre-computed schema for deployments table
	generatedDeploymentSchema = &walker.Schema{
		Table:    "deployments",
		Type:     "storage.Deployment",
		TypeName: "Deployment",
		Fields: []walker.Field{
			{
				Name:       "Id",
				ColumnName: "Id",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "Name",
				ColumnName: "Name",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "Type",
				ColumnName: "Type",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "Namespace",
				ColumnName: "Namespace",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "NamespaceId",
				ColumnName: "NamespaceId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "OrchestratorComponent",
				ColumnName: "OrchestratorComponent",
				Type:       "bool",
				SQLType:    "bool",
				DataType:   postgres.String,
			},
			{
				Name:       "Labels",
				ColumnName: "Labels",
				Type:       "map[string]string",
				SQLType:    "jsonb",
				DataType:   postgres.String,
			},
			{
				Name:       "PodLabels",
				ColumnName: "PodLabels",
				Type:       "map[string]string",
				SQLType:    "jsonb",
				DataType:   postgres.String,
			},
			{
				Name:       "Created",
				ColumnName: "Created",
				Type:       "*timestamppb.Timestamp",
				SQLType:    "timestamp",
				DataType:   postgres.String,
			},
			{
				Name:       "ClusterId",
				ColumnName: "ClusterId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "ClusterName",
				ColumnName: "ClusterName",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "Annotations",
				ColumnName: "Annotations",
				Type:       "map[string]string",
				SQLType:    "jsonb",
				DataType:   postgres.String,
			},
			{
				Name:       "Priority",
				ColumnName: "Priority",
				Type:       "int64",
				SQLType:    "bigint",
				DataType:   postgres.String,
			},
			{
				Name:       "ImagePullSecrets",
				ColumnName: "ImagePullSecrets",
				Type:       "[]string",
				SQLType:    "text[]",
				DataType:   postgres.String,
			},
			{
				Name:       "ServiceAccount",
				ColumnName: "ServiceAccount",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "ServiceAccountPermissionLevel",
				ColumnName: "ServiceAccountPermissionLevel",
				Type:       "storage.PermissionLevel",
				SQLType:    "integer",
				DataType:   postgres.String,
			},
			{
				Name:       "RiskScore",
				ColumnName: "RiskScore",
				Type:       "float32",
				SQLType:    "numeric",
				DataType:   postgres.String,
			},
			{
				Name:       "PlatformComponent",
				ColumnName: "PlatformComponent",
				Type:       "bool",
				SQLType:    "bool",
				DataType:   postgres.String,
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
				DataType:   postgres.String,
			},
		},
	}
)

// GetDeploymentSchema returns the generated schema for deployments
func GetDeploymentSchema() *walker.Schema {
	// Set up search options if not already done
	if generatedDeploymentSchema.OptionsMap == nil {
		generatedDeploymentSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_DEPLOYMENTS, generatedDeploymentSearchFields))
	}
	return generatedDeploymentSchema
}
