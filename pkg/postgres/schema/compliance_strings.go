// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
)

var (
	// CreateTableComplianceStringsStmt holds the create statement for table `compliance_strings`.
	CreateTableComplianceStringsStmt = &postgres.CreateStmts{
		GormModel: (*ComplianceStrings)(nil),
		Children:  []*postgres.CreateStmts{},
	}

	// ComplianceStringsSchema is the go schema for table `compliance_strings`.
	ComplianceStringsSchema = func() *walker.Schema {
		schema := GetSchemaForTable("compliance_strings")
		if schema != nil {
			return schema
		}
		schema = GetComplianceStringsSchema()
		schema.ScopingResource = resources.Compliance
		RegisterTable(schema, CreateTableComplianceStringsStmt)
		return schema
	}()
)

const (
	// ComplianceStringsTableName specifies the name of the table in postgres.
	ComplianceStringsTableName = "compliance_strings"
)

// ComplianceStrings holds the Gorm model for Postgres table `compliance_strings`.
type ComplianceStrings struct {
	ID         string `gorm:"column:id;type:varchar;primaryKey"`
	Serialized []byte `gorm:"column:serialized;type:bytea"`
}
