// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"reflect"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
)

var (
	// CreateTableComplianceOperatorProfilesStmt holds the create statement for table `compliance_operator_profiles`.
	CreateTableComplianceOperatorProfilesStmt = &postgres.CreateStmts{
		GormModel: (*ComplianceOperatorProfiles)(nil),
		Children:  []*postgres.CreateStmts{},
	}

	// ComplianceOperatorProfilesSchema is the go schema for table `compliance_operator_profiles`.
	ComplianceOperatorProfilesSchema = func() *walker.Schema {
		schema := GetSchemaForTable("compliance_operator_profiles")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.ComplianceOperatorProfile)(nil)), "compliance_operator_profiles")
		RegisterTable(schema, CreateTableComplianceOperatorProfilesStmt)
		return schema
	}()
)

const (
	// ComplianceOperatorProfilesTableName specifies the name of the table in postgres.
	ComplianceOperatorProfilesTableName = "compliance_operator_profiles"
)

// ComplianceOperatorProfiles holds the Gorm model for Postgres table `compliance_operator_profiles`.
type ComplianceOperatorProfiles struct {
	ID         string `gorm:"column:id;type:varchar;primaryKey"`
	Serialized []byte `gorm:"column:serialized;type:bytea"`
}
