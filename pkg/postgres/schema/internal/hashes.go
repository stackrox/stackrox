// Code generated by pg-bindings generator. DO NOT EDIT.
package internal

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// HashSearchFields contains pre-computed search fields for hashes
	HashSearchFields = map[search.FieldLabel]*search.Field{}

	// HashSchema is the pre-computed schema for hashes table
	HashSchema = &walker.Schema{
		Table:    "hashes",
		Type:     "*storage.Hash",
		TypeName: "Hash",
		Fields: []walker.Field{
			{
				Name:       "ClusterId",
				ColumnName: "ClusterId",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
			},
		},
	}
)

// GetHashSchema returns the generated schema for hashes
func GetHashSchema() *walker.Schema {
	// Set up search options if not already done
	if HashSchema.OptionsMap == nil {
		HashSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_SEARCH_UNSET, HashSearchFields))
	}
	return HashSchema
}
