// Code generated by pg-bindings generator. DO NOT EDIT.
package convert

import (
	"testing"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres/schema"
	"github.com/stackrox/rox/pkg/testutils"
	"github.com/stretchr/testify/assert"
)

func convertIntegrationHealthFromProto(obj *storage.IntegrationHealth) (*schema.IntegrationHealths, error) {
	serialized, err := obj.Marshal()
	if err != nil {
		return nil, err
	}
	model := &schema.IntegrationHealths{
		Id:         obj.GetId(),
		Serialized: serialized,
	}
	return model, nil
}
func convertIntegrationHealthToProto(m *schema.IntegrationHealths) (*storage.IntegrationHealth, error) {
	var msg storage.IntegrationHealth
	if err := msg.Unmarshal(m.Serialized); err != nil {
		return nil, err
	}
	return &msg, nil
}

func TestIntegrationHealthConversion(t *testing.T) {
	obj := &storage.IntegrationHealth{}
	assert.NoError(t, testutils.FullInit(obj, testutils.UniqueInitializer(), testutils.JSONFieldsFilter))
	m, err := convertIntegrationHealthFromProto(obj)
	assert.NoError(t, err)
	conv, err := convertIntegrationHealthToProto(m)
	assert.NoError(t, err)
	assert.Equal(t, obj, conv)
}
