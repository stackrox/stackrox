// Code generated by pg-bindings generator. DO NOT EDIT.
package convert

import (
	"testing"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres/schema"
	"github.com/stackrox/rox/pkg/testutils"
	"github.com/stretchr/testify/assert"
)

func convertTestG3GrandChild1FromProto(obj *storage.TestG3GrandChild1) (*schema.TestG3GrandChild1, error) {
	serialized, err := obj.Marshal()
	if err != nil {
		return nil, err
	}
	model := &schema.TestG3GrandChild1{
		Id:         obj.GetId(),
		Val:        obj.GetVal(),
		Serialized: serialized,
	}
	return model, nil
}
func convertTestG3GrandChild1ToProto(m *schema.TestG3GrandChild1) (*storage.TestG3GrandChild1, error) {
	var msg storage.TestG3GrandChild1
	if err := msg.Unmarshal(m.Serialized); err != nil {
		return nil, err
	}
	return &msg, nil
}

func TestTestG3GrandChild1Conversion(t *testing.T) {
	obj := &storage.TestG3GrandChild1{}
	assert.NoError(t, testutils.FullInit(obj, testutils.UniqueInitializer(), testutils.JSONFieldsFilter))
	m, err := convertTestG3GrandChild1FromProto(obj)
	assert.NoError(t, err)
	conv, err := convertTestG3GrandChild1ToProto(m)
	assert.NoError(t, err)
	assert.Equal(t, obj, conv)
}
