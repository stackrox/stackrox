// Code generated by pg-bindings generator. DO NOT EDIT.
package convert

import (
	"testing"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres/schema"
	"github.com/stackrox/rox/pkg/testutils"
	"github.com/stretchr/testify/assert"
)

func convertComplianceDomainFromProto(obj *storage.ComplianceDomain) (*schema.ComplianceDomains, error) {
	serialized, err := obj.Marshal()
	if err != nil {
		return nil, err
	}
	model := &schema.ComplianceDomains{
		Id:            obj.GetId(),
		ClusterId:     obj.GetCluster().GetId(),
		ClusterName:   obj.GetCluster().GetName(),
		ClusterLabels: obj.GetCluster().GetLabels(),
		Serialized:    serialized,
	}
	return model, nil
}
func convertComplianceDomainToProto(m *schema.ComplianceDomains) (*storage.ComplianceDomain, error) {
	var msg storage.ComplianceDomain
	if err := msg.Unmarshal(m.Serialized); err != nil {
		return nil, err
	}
	return &msg, nil
}

func TestComplianceDomainConversion(t *testing.T) {
	obj := &storage.ComplianceDomain{}
	assert.NoError(t, testutils.FullInit(obj, testutils.UniqueInitializer(), testutils.JSONFieldsFilter))
	m, err := convertComplianceDomainFromProto(obj)
	assert.NoError(t, err)
	conv, err := convertComplianceDomainToProto(m)
	assert.NoError(t, err)
	assert.Equal(t, obj, conv)
}
