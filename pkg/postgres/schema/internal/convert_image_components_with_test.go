// Code generated by pg-bindings generator. DO NOT EDIT.
package convert

import (
	"testing"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres/schema"
	"github.com/stackrox/rox/pkg/testutils"
	"github.com/stretchr/testify/assert"
)

func convertImageComponentFromProto(obj *storage.ImageComponent) (*schema.ImageComponents, error) {
	serialized, err := obj.Marshal()
	if err != nil {
		return nil, err
	}
	model := &schema.ImageComponents{
		Id:              obj.GetId(),
		Name:            obj.GetName(),
		Version:         obj.GetVersion(),
		Priority:        obj.GetPriority(),
		Source:          obj.GetSource(),
		RiskScore:       obj.GetRiskScore(),
		TopCvss:         obj.GetTopCvss(),
		OperatingSystem: obj.GetOperatingSystem(),
		Serialized:      serialized,
	}
	return model, nil
}
func convertImageComponentToProto(m *schema.ImageComponents) (*storage.ImageComponent, error) {
	var msg storage.ImageComponent
	if err := msg.Unmarshal(m.Serialized); err != nil {
		return nil, err
	}
	return &msg, nil
}

func TestImageComponentConversion(t *testing.T) {
	obj := &storage.ImageComponent{}
	assert.NoError(t, testutils.FullInit(obj, testutils.UniqueInitializer(), testutils.JSONFieldsFilter))
	m, err := convertImageComponentFromProto(obj)
	assert.NoError(t, err)
	conv, err := convertImageComponentToProto(m)
	assert.NoError(t, err)
	assert.Equal(t, obj, conv)
}
