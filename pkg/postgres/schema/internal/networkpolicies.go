// Code generated by pg-bindings generator. DO NOT EDIT.
package internal

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// NetworkPolicySearchFields contains pre-computed search fields for networkpolicies
	NetworkPolicySearchFields = map[search.FieldLabel]*search.Field{}

	// NetworkPolicySchema is the pre-computed schema for networkpolicies table
	NetworkPolicySchema = &walker.Schema{
		Table:    "networkpolicies",
		Type:     "*storage.NetworkPolicy",
		TypeName: "NetworkPolicy",
		Fields: []walker.Field{
			{
				Name:       "Id",
				ColumnName: "Id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "ClusterId",
				ColumnName: "ClusterId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "Namespace",
				ColumnName: "Namespace",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
			},
		},
	}
)

// GetNetworkPolicySchema returns the generated schema for networkpolicies
func GetNetworkPolicySchema() *walker.Schema {
	// Set up search options if not already done
	if NetworkPolicySchema.OptionsMap == nil {
		NetworkPolicySchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_NETWORK_POLICIES, NetworkPolicySearchFields))
	}
	// Set Schema back-reference on all fields
	for i := range NetworkPolicySchema.Fields {
		NetworkPolicySchema.Fields[i].Schema = NetworkPolicySchema
	}
	// Set Schema back-reference on all child schema fields
	var setChildSchemaReferences func(*walker.Schema)
	setChildSchemaReferences = func(schema *walker.Schema) {
		for _, child := range schema.Children {
			for i := range child.Fields {
				child.Fields[i].Schema = child
			}
			setChildSchemaReferences(child)
		}
	}
	setChildSchemaReferences(NetworkPolicySchema)
	return NetworkPolicySchema
}
