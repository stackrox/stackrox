// Code generated by pg-bindings generator. DO NOT EDIT.
package internal

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// AdministrationEventSearchFields contains pre-computed search fields for administration_events
	AdministrationEventSearchFields = map[search.FieldLabel]*search.Field{}

	// AdministrationEventSchema is the pre-computed schema for administration_events table
	AdministrationEventSchema = &walker.Schema{
		Table:    "administration_events",
		Type:     "*storage.AdministrationEvent",
		TypeName: "AdministrationEvent",
		Fields: []walker.Field{
			{
				Name:       "Id",
				ColumnName: "Id",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "Type",
				ColumnName: "Type",
				Type:       "storage.AdministrationEventType",
				SQLType:    "integer",
				DataType:   postgres.Enum,
			},
			{
				Name:       "Level",
				ColumnName: "Level",
				Type:       "storage.AdministrationEventLevel",
				SQLType:    "integer",
				DataType:   postgres.Enum,
			},
			{
				Name:       "Domain",
				ColumnName: "Domain",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "Type",
				ColumnName: "Resource_Type",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "NumOccurrences",
				ColumnName: "NumOccurrences",
				Type:       "int64",
				SQLType:    "bigint",
				DataType:   postgres.BigInteger,
			},
			{
				Name:       "LastOccurredAt",
				ColumnName: "LastOccurredAt",
				Type:       "*timestamppb.Timestamp",
				SQLType:    "timestamp",
				DataType:   postgres.DateTime,
			},
			{
				Name:       "CreatedAt",
				ColumnName: "CreatedAt",
				Type:       "*timestamppb.Timestamp",
				SQLType:    "timestamp",
				DataType:   postgres.DateTime,
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
			},
		},
	}
)

// GetAdministrationEventSchema returns the generated schema for administration_events
func GetAdministrationEventSchema() *walker.Schema {
	// Set up search options if not already done
	if AdministrationEventSchema.OptionsMap == nil {
		AdministrationEventSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_ADMINISTRATION_EVENTS, AdministrationEventSearchFields))
	}
	return AdministrationEventSchema
}
