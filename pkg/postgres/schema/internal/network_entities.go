// Code generated by pg-bindings generator. DO NOT EDIT.
package internal

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// NetworkEntitySearchFields contains pre-computed search fields for network_entities
	NetworkEntitySearchFields = map[search.FieldLabel]*search.Field{}

	// NetworkEntitySchema is the pre-computed schema for network_entities table
	NetworkEntitySchema = &walker.Schema{
		Table:    "network_entities",
		Type:     "*storage.NetworkEntity",
		TypeName: "NetworkEntity",
		Fields: []walker.Field{
			{
				Name:       "Id",
				ColumnName: "Info_Id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "Cidr",
				ColumnName: "Info_ExternalSource_Cidr",
				Type:       "string",
				SQLType:    "cidr",
				DataType:   postgres.String,
			},
			{
				Name:       "Default",
				ColumnName: "Info_ExternalSource_Default",
				Type:       "bool",
				SQLType:    "bool",
				DataType:   postgres.Bool,
			},
			{
				Name:       "Discovered",
				ColumnName: "Info_ExternalSource_Discovered",
				Type:       "bool",
				SQLType:    "bool",
				DataType:   postgres.Bool,
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
			},
		},
	}
)

// GetNetworkEntitySchema returns the generated schema for network_entities
func GetNetworkEntitySchema() *walker.Schema {
	// Set up search options if not already done
	if NetworkEntitySchema.OptionsMap == nil {
		NetworkEntitySchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_NETWORK_ENTITY, NetworkEntitySearchFields))
	}
	return NetworkEntitySchema
}
