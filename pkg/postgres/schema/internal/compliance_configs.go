// Code generated by pg-bindings generator. DO NOT EDIT.
package internal

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// ComplianceConfigSearchFields contains pre-computed search fields for compliance_configs
	ComplianceConfigSearchFields = map[search.FieldLabel]*search.Field{}

	// ComplianceConfigSchema is the pre-computed schema for compliance_configs table
	ComplianceConfigSchema = &walker.Schema{
		Table:    "compliance_configs",
		Type:     "*storage.ComplianceConfig",
		TypeName: "ComplianceConfig",
		Fields: []walker.Field{
			{
				Name:       "StandardId",
				ColumnName: "StandardId",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
			},
		},
	}
)

// GetComplianceConfigSchema returns the generated schema for compliance_configs
func GetComplianceConfigSchema() *walker.Schema {
	// Set up search options if not already done
	if ComplianceConfigSchema.OptionsMap == nil {
		ComplianceConfigSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_SEARCH_UNSET, ComplianceConfigSearchFields))
	}
	return ComplianceConfigSchema
}
