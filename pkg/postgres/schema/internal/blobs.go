// Code generated by pg-bindings generator. DO NOT EDIT.
package internal

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// BlobSearchFields contains pre-computed search fields for blobs
	BlobSearchFields = map[search.FieldLabel]*search.Field{}

	// BlobSchema is the pre-computed schema for blobs table
	BlobSchema = &walker.Schema{
		Table:    "blobs",
		Type:     "*storage.Blob",
		TypeName: "Blob",
		Fields: []walker.Field{
			{
				Name:       "Name",
				ColumnName: "Name",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "Length",
				ColumnName: "Length",
				Type:       "int64",
				SQLType:    "bigint",
				DataType:   postgres.BigInteger,
			},
			{
				Name:       "ModifiedTime",
				ColumnName: "ModifiedTime",
				Type:       "*timestamppb.Timestamp",
				SQLType:    "timestamp",
				DataType:   postgres.DateTime,
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
			},
		},
	}
)

// GetBlobSchema returns the generated schema for blobs
func GetBlobSchema() *walker.Schema {
	// Set up search options if not already done
	if BlobSchema.OptionsMap == nil {
		BlobSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_BLOB, BlobSearchFields))
	}
	return BlobSchema
}
