// Code generated by pg-bindings generator. DO NOT EDIT.
package internal

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// NetworkBaselineSearchFields contains pre-computed search fields for network_baselines
	NetworkBaselineSearchFields = map[search.FieldLabel]*search.Field{}

	// NetworkBaselineSchema is the pre-computed schema for network_baselines table
	NetworkBaselineSchema = &walker.Schema{
		Table:    "network_baselines",
		Type:     "*storage.NetworkBaseline",
		TypeName: "NetworkBaseline",
		Fields: []walker.Field{
			{
				Name:       "DeploymentId",
				ColumnName: "DeploymentId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "ClusterId",
				ColumnName: "ClusterId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "Namespace",
				ColumnName: "Namespace",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
			},
		},
	}
)

// GetNetworkBaselineSchema returns the generated schema for network_baselines
func GetNetworkBaselineSchema() *walker.Schema {
	// Set up search options if not already done
	if NetworkBaselineSchema.OptionsMap == nil {
		NetworkBaselineSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_NETWORK_BASELINE, NetworkBaselineSearchFields))
	}
	return NetworkBaselineSchema
}
