// Code generated by pg-bindings generator. DO NOT EDIT.

package convert

import (
	"testing"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres/pgutils"
	"github.com/stackrox/rox/pkg/postgres/schema"
	"github.com/stackrox/rox/pkg/testutils"
	"github.com/stretchr/testify/assert"
)

func convertComplianceRunMetadataFromProto(obj *storage.ComplianceRunMetadata) (*schema.ComplianceRunMetadata, error) {
	serialized, err := obj.Marshal()
	if err != nil {
		return nil, err
	}
	model := &schema.ComplianceRunMetadata{
		RunId:           obj.GetRunId(),
		StandardId:      obj.GetStandardId(),
		ClusterId:       obj.GetClusterId(),
		FinishTimestamp: pgutils.NilOrTime(obj.GetFinishTimestamp()),
		Serialized:      serialized,
	}
	return model, nil
}

func convertComplianceRunMetadataToProto(m *schema.ComplianceRunMetadata) (*storage.ComplianceRunMetadata, error) {
	var msg storage.ComplianceRunMetadata
	if err := msg.Unmarshal(m.Serialized); err != nil {
		return nil, err
	}
	return &msg, nil
}

func TestComplianceRunMetadataConversion(t *testing.T) {
	obj := &storage.ComplianceRunMetadata{}
	assert.NoError(t, testutils.FullInit(obj, testutils.UniqueInitializer(), testutils.JSONFieldsFilter))
	m, err := convertComplianceRunMetadataFromProto(obj)
	assert.NoError(t, err)
	conv, err := convertComplianceRunMetadataToProto(m)
	assert.NoError(t, err)
	assert.Equal(t, obj, conv)
}
