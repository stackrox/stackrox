// Code generated by pg-bindings generator. DO NOT EDIT.

package convert

import (
	"testing"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres/schema"
	"github.com/stackrox/rox/pkg/testutils"
	"github.com/stretchr/testify/assert"
)

func convertActiveComponentFromProto(obj *storage.ActiveComponent) (*schema.ActiveComponents, error) {
	serialized, err := obj.Marshal()
	if err != nil {
		return nil, err
	}
	model := &schema.ActiveComponents{
		Id:           obj.GetId(),
		DeploymentId: obj.GetDeploymentId(),
		ComponentId:  obj.GetComponentId(),
		Serialized:   serialized,
	}
	return model, nil
}

func convertActiveComponentToProto(m *schema.ActiveComponents) (*storage.ActiveComponent, error) {
	var msg storage.ActiveComponent
	if err := msg.Unmarshal(m.Serialized); err != nil {
		return nil, err
	}
	return &msg, nil
}

func TestActiveComponentConversion(t *testing.T) {
	obj := &storage.ActiveComponent{}
	assert.NoError(t, testutils.FullInit(obj, testutils.UniqueInitializer(), testutils.JSONFieldsFilter))
	m, err := convertActiveComponentFromProto(obj)
	assert.NoError(t, err)
	conv, err := convertActiveComponentToProto(m)
	assert.NoError(t, err)
	assert.Equal(t, obj, conv)
}
func convertActiveComponent_ActiveContextFromProto(obj *storage.ActiveComponent_ActiveContext, active_components_Id string) (*schema.ActiveComponentsActiveContextsSlices, error) {
	serialized, err := obj.Marshal()
	if err != nil {
		return nil, err
	}
	model := &schema.ActiveComponentsActiveContextsSlices{
		ActiveComponentsId: active_components_Id,
		Idx:                idx,
		ContainerName:      obj.GetContainerName(),
		ImageId:            obj.GetImageId(),
	}
	return model, nil
}

func convertActiveComponent_ActiveContextToProto(m *schema.ActiveComponentsActiveContextsSlices) (*storage.ActiveComponent_ActiveContext, error) {
	var msg storage.ActiveComponent_ActiveContext
	if err := msg.Unmarshal(m.Serialized); err != nil {
		return nil, err
	}
	return &msg, nil
}

func TestActiveComponent_ActiveContextConversion(t *testing.T) {
	obj := &storage.ActiveComponent_ActiveContext{}
	assert.NoError(t, testutils.FullInit(obj, testutils.UniqueInitializer(), testutils.JSONFieldsFilter))
	m, err := convertActiveComponent_ActiveContextFromProto(obj)
	assert.NoError(t, err)
	conv, err := convertActiveComponent_ActiveContextToProto(m)
	assert.NoError(t, err)
	assert.Equal(t, obj, conv)
}
