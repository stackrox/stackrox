// Code generated by pg-bindings generator. DO NOT EDIT.

package convert

import (
	"testing"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres/schema"
	"github.com/stackrox/rox/pkg/testutils"
	"github.com/stretchr/testify/assert"
)

func convertNetworkPolicyFromProto(obj *storage.NetworkPolicy) (*schema.Networkpolicies, error) {
	serialized, err := obj.Marshal()
	if err != nil {
		return nil, err
	}
	model := &schema.Networkpolicies{
		Id:         obj.GetId(),
		ClusterId:  obj.GetClusterId(),
		Namespace:  obj.GetNamespace(),
		Serialized: serialized,
	}
	return model, nil
}

func convertNetworkPolicyToProto(m *schema.Networkpolicies) (*storage.NetworkPolicy, error) {
	var msg storage.NetworkPolicy
	if err := msg.Unmarshal(m.Serialized); err != nil {
		return nil, err
	}
	return &msg, nil
}

func TestNetworkPolicyConversion(t *testing.T) {
	obj := &storage.NetworkPolicy{}
	assert.NoError(t, testutils.FullInit(obj, testutils.UniqueInitializer(), testutils.JSONFieldsFilter))
	m, err := convertNetworkPolicyFromProto(obj)
	assert.NoError(t, err)
	conv, err := convertNetworkPolicyToProto(m)
	assert.NoError(t, err)
	assert.Equal(t, obj, conv)
}
