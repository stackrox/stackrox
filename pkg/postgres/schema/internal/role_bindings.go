// Code generated by pg-bindings generator. DO NOT EDIT.
package internal

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// K8SRoleBindingSearchFields contains pre-computed search fields for role_bindings
	K8SRoleBindingSearchFields = map[search.FieldLabel]*search.Field{
		search.FieldLabel("Cluster"): {
			FieldPath: ".cluster_name",
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_ROLEBINDINGS,
		},
		search.FieldLabel("Cluster ID"): {
			FieldPath: ".cluster_id",
			Store:     true,
			Hidden:    true,
			Category:  v1.SearchCategory_ROLEBINDINGS,
		},
		search.FieldLabel("Cluster Role"): {
			FieldPath: ".cluster_role",
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_ROLEBINDINGS,
		},
		search.FieldLabel("Namespace"): {
			FieldPath: ".namespace",
			Store:     true,
			Hidden:    false,
			Category:  v1.SearchCategory_ROLEBINDINGS,
		},
		search.FieldLabel("Role Binding"): {
			FieldPath: ".name",
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_ROLEBINDINGS,
		},
		search.FieldLabel("Role Binding Annotation"): {
			FieldPath: ".annotations",
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_ROLEBINDINGS,
		},
		search.FieldLabel("Role Binding ID"): {
			FieldPath: ".id",
			Store:     false,
			Hidden:    true,
			Category:  v1.SearchCategory_ROLEBINDINGS,
		},
		search.FieldLabel("Role Binding Label"): {
			FieldPath: ".labels",
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_ROLEBINDINGS,
		},
		search.FieldLabel("Role ID"): {
			FieldPath: ".role_id",
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_ROLEBINDINGS,
		},
		search.FieldLabel("Subject"): {
			FieldPath: ".subjects.name",
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_ROLEBINDINGS,
		},
		search.FieldLabel("Subject Kind"): {
			FieldPath: ".subjects.kind",
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_ROLEBINDINGS,
		},
	}

	// K8SRoleBindingSchema is the pre-computed schema for role_bindings table
	K8SRoleBindingSchema = &walker.Schema{
		Table:    "role_bindings",
		Type:     "*storage.K8SRoleBinding",
		TypeName: "K8SRoleBinding",
		Fields: []walker.Field{
			{
				Name:       "Id",
				ColumnName: "Id",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "Name",
				ColumnName: "Name",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "Namespace",
				ColumnName: "Namespace",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "ClusterId",
				ColumnName: "ClusterId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "ClusterName",
				ColumnName: "ClusterName",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "ClusterRole",
				ColumnName: "ClusterRole",
				Type:       "bool",
				SQLType:    "bool",
				DataType:   postgres.Bool,
			},
			{
				Name:       "Labels",
				ColumnName: "Labels",
				Type:       "map[string]string",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},
			{
				Name:       "Annotations",
				ColumnName: "Annotations",
				Type:       "map[string]string",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},
			{
				Name:       "RoleId",
				ColumnName: "RoleId",
				Type:       "string",
				SQLType:    "uuid",
				DataType:   postgres.String,
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
			},
		},
	}
)

// GetK8SRoleBindingSchema returns the generated schema for role_bindings
func GetK8SRoleBindingSchema() *walker.Schema {
	// Set up search options if not already done
	if K8SRoleBindingSchema.OptionsMap == nil {
		K8SRoleBindingSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_ROLEBINDINGS, K8SRoleBindingSearchFields))
	}
	return K8SRoleBindingSchema
}
