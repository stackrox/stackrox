// Code generated by pg-bindings generator. DO NOT EDIT.

package convert

import (
	"testing"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres/schema"
	"github.com/stackrox/rox/pkg/testutils"
	"github.com/stretchr/testify/assert"
)

func convertProcessIndicatorFromProto(obj *storage.ProcessIndicator) (*schema.ProcessIndicators, error) {
	serialized, err := obj.Marshal()
	if err != nil {
		return nil, err
	}
	model := &schema.ProcessIndicators{
		Id:                 obj.GetId(),
		DeploymentId:       obj.GetDeploymentId(),
		ContainerName:      obj.GetContainerName(),
		PodId:              obj.GetPodId(),
		PodUid:             obj.GetPodUid(),
		SignalContainerId:  obj.GetSignal().GetContainerId(),
		SignalName:         obj.GetSignal().GetName(),
		SignalArgs:         obj.GetSignal().GetArgs(),
		SignalExecFilePath: obj.GetSignal().GetExecFilePath(),
		SignalUid:          obj.GetSignal().GetUid(),
		ClusterId:          obj.GetClusterId(),
		Namespace:          obj.GetNamespace(),
		Serialized:         serialized,
	}
	return model, nil
}

func convertProcessIndicatorToProto(m *schema.ProcessIndicators) (*storage.ProcessIndicator, error) {
	var msg storage.ProcessIndicator
	if err := msg.Unmarshal(m.Serialized); err != nil {
		return nil, err
	}
	return &msg, nil
}

func TestProcessIndicatorConversion(t *testing.T) {
	obj := &storage.ProcessIndicator{}
	assert.NoError(t, testutils.FullInit(obj, testutils.UniqueInitializer(), testutils.JSONFieldsFilter))
	m, err := convertProcessIndicatorFromProto(obj)
	assert.NoError(t, err)
	conv, err := convertProcessIndicatorToProto(m)
	assert.NoError(t, err)
	assert.Equal(t, obj, conv)
}
