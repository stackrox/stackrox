// Code generated by pg-bindings generator. DO NOT EDIT.
package internal

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// AuthProviderSearchFields contains pre-computed search fields for auth_providers
	AuthProviderSearchFields = map[search.FieldLabel]*search.Field{}

	// AuthProviderSchema is the pre-computed schema for auth_providers table
	AuthProviderSchema = &walker.Schema{
		Table:    "auth_providers",
		Type:     "*storage.AuthProvider",
		TypeName: "AuthProvider",
		Fields: []walker.Field{
			{
				Name:       "Id",
				ColumnName: "Id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "Name",
				ColumnName: "Name",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
			},
		},
	}
)

// GetAuthProviderSchema returns the generated schema for auth_providers
func GetAuthProviderSchema() *walker.Schema {
	// Set up search options if not already done
	if AuthProviderSchema.OptionsMap == nil {
		AuthProviderSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_AUTH_PROVIDERS, AuthProviderSearchFields))
	}
	return AuthProviderSchema
}
