// Code generated by pg-bindings generator. DO NOT EDIT.
package convert

import (
	"testing"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres/pgutils"
	"github.com/stackrox/rox/pkg/postgres/schema"
	"github.com/stackrox/rox/pkg/testutils"
	"github.com/stretchr/testify/assert"
)

func convertClusterHealthStatusFromProto(obj *storage.ClusterHealthStatus) (*schema.ClusterHealthStatuses, error) {
	serialized, err := obj.Marshal()
	if err != nil {
		return nil, err
	}
	model := &schema.ClusterHealthStatuses{
		Id:                           obj.GetId(),
		SensorHealthStatus:           obj.GetSensorHealthStatus(),
		CollectorHealthStatus:        obj.GetCollectorHealthStatus(),
		OverallHealthStatus:          obj.GetOverallHealthStatus(),
		AdmissionControlHealthStatus: obj.GetAdmissionControlHealthStatus(),
		ScannerHealthStatus:          obj.GetScannerHealthStatus(),
		LastContact:                  pgutils.NilOrTime(obj.GetLastContact()),
		Serialized:                   serialized,
	}
	return model, nil
}
func convertClusterHealthStatusToProto(m *schema.ClusterHealthStatuses) (*storage.ClusterHealthStatus, error) {
	var msg storage.ClusterHealthStatus
	if err := msg.Unmarshal(m.Serialized); err != nil {
		return nil, err
	}
	return &msg, nil
}

func TestClusterHealthStatusConversion(t *testing.T) {
	obj := &storage.ClusterHealthStatus{}
	assert.NoError(t, testutils.FullInit(obj, testutils.UniqueInitializer(), testutils.JSONFieldsFilter))
	m, err := convertClusterHealthStatusFromProto(obj)
	assert.NoError(t, err)
	conv, err := convertClusterHealthStatusToProto(m)
	assert.NoError(t, err)
	assert.Equal(t, obj, conv)
}
