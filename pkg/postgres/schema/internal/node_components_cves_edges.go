// Code generated by pg-bindings generator. DO NOT EDIT.
package internal

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// NodeComponentCVEEdgeSearchFields contains pre-computed search fields for node_components_cves_edges
	NodeComponentCVEEdgeSearchFields = map[search.FieldLabel]*search.Field{}

	// NodeComponentCVEEdgeSchema is the pre-computed schema for node_components_cves_edges table
	NodeComponentCVEEdgeSchema = &walker.Schema{
		Table:    "node_components_cves_edges",
		Type:     "*storage.NodeComponentCVEEdge",
		TypeName: "NodeComponentCVEEdge",
		Fields: []walker.Field{
			{
				Name:       "Id",
				ColumnName: "Id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},
			},
			{
				Name:       "IsFixable",
				ColumnName: "IsFixable",
				Type:       "bool",
				SQLType:    "bool",
				DataType:   postgres.Bool,
			},
			{
				Name:       "FixedBy",
				ColumnName: "FixedBy",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "NodeComponentId",
				ColumnName: "NodeComponentId",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "NodeCveId",
				ColumnName: "NodeCveId",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},
			{
				Name:       "serialized",
				ColumnName: "serialized",
				Type:       "[]byte",
				SQLType:    "bytea",
			},
		},
	}
)

// GetNodeComponentCVEEdgeSchema returns the generated schema for node_components_cves_edges
func GetNodeComponentCVEEdgeSchema() *walker.Schema {
	// Set up search options if not already done
	if NodeComponentCVEEdgeSchema.OptionsMap == nil {
		NodeComponentCVEEdgeSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_NODE_COMPONENT_CVE_EDGE, NodeComponentCVEEdgeSearchFields))
	}
	return NodeComponentCVEEdgeSchema
}
