// Code generated by generate-schema tool. DO NOT EDIT.

package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedTestParent1SearchFields contains pre-computed search fields for test_parent1
	generatedTestParent1SearchFields = map[search.FieldLabel]*search.Field{

		"Test": {
			FieldPath: "Id",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_SEARCH_UNSET,
		},
	}

	// generatedTestParent1Schema is the pre-computed schema for test_parent1 table
	generatedTestParent1Schema = &walker.Schema{
		Table:    "test_parent1",
		Type:     "*storage.TestParent1",
		TypeName: "TestParent1",
		Fields: []walker.Field{

			{
				Name:       "state",
				ColumnName: "state",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.MessageState",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "Id",
				ColumnName: "id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Test",
				},
			},

			{
				Name:       "ParentId",
				ColumnName: "parent_id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},

			{
				Name:       "Children",
				ColumnName: "children",
				Type:       "[]github.com/stackrox/rox/generated/storage.TestParent1_Child1Ref",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "Val",
				ColumnName: "val",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Test",
				},
			},

			{
				Name:       "StringSlice",
				ColumnName: "string_slice",
				Type:       "[]string",
				SQLType:    "text[]",
				DataType:   postgres.StringArray,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Test",
				},
			},

			{
				Name:       "unknownFields",
				ColumnName: "unknown_fields",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.UnknownFields",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "sizeCache",
				ColumnName: "size_cache",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.SizeCache",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},
		},

		ScopingResource: resources.Namespace,
	}
)

// GetTestParent1Schema returns the generated schema for test_parent1
func GetTestParent1Schema() *walker.Schema {
	// Set up search options if not already done
	if generatedTestParent1Schema.OptionsMap == nil {
		generatedTestParent1Schema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_SEARCH_UNSET, generatedTestParent1SearchFields))
	}
	return generatedTestParent1Schema
}
