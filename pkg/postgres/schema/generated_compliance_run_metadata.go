// Code generated by generate-schema tool. DO NOT EDIT.

package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedComplianceRunMetadataSearchFields contains pre-computed search fields for compliance_run_metadata
	generatedComplianceRunMetadataSearchFields = map[search.FieldLabel]*search.Field{

		"Compliance": {
			FieldPath: "RunId",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_COMPLIANCE_METADATA,
		},

		"Standard": {
			FieldPath: "StandardId",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_COMPLIANCE_METADATA,
		},

		"Cluster": {
			FieldPath: "ClusterId",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_COMPLIANCE_METADATA,
		},
	}

	// generatedComplianceRunMetadataSchema is the pre-computed schema for compliance_run_metadata table
	generatedComplianceRunMetadataSchema = &walker.Schema{
		Table:    "compliance_run_metadata",
		Type:     "*storage.ComplianceRunMetadata",
		TypeName: "ComplianceRunMetadata",
		Fields: []walker.Field{

			{
				Name:       "state",
				ColumnName: "state",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.MessageState",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "RunId",
				ColumnName: "run_id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Compliance",
				},
			},

			{
				Name:       "StandardId",
				ColumnName: "standard_id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Standard",
				},
			},

			{
				Name:       "ClusterId",
				ColumnName: "cluster_id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Cluster",
				},
			},

			{
				Name:       "Success",
				ColumnName: "success",
				Type:       "bool",
				SQLType:    "bool",
				DataType:   postgres.Bool,
			},

			{
				Name:       "ErrorMessage",
				ColumnName: "error_message",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},

			{
				Name:       "DomainId",
				ColumnName: "domain_id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,
			},

			{
				Name:       "unknownFields",
				ColumnName: "unknown_fields",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.UnknownFields",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "sizeCache",
				ColumnName: "size_cache",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.SizeCache",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},
		},

		ScopingResource: resources.Compliance,
	}
)

// GetComplianceRunMetadataSchema returns the generated schema for compliance_run_metadata
func GetComplianceRunMetadataSchema() *walker.Schema {
	// Set up search options if not already done
	if generatedComplianceRunMetadataSchema.OptionsMap == nil {
		generatedComplianceRunMetadataSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_COMPLIANCE_METADATA, generatedComplianceRunMetadataSearchFields))
	}
	return generatedComplianceRunMetadataSchema
}
