// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/schema/internal"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search/postgres/mapping"
)

var (
	// CreateTableNetworkBaselinesStmt holds the create statement for table `network_baselines`.
	CreateTableNetworkBaselinesStmt = &postgres.CreateStmts{
		GormModel: (*NetworkBaselines)(nil),
		Children:  []*postgres.CreateStmts{},
	}

	// NetworkBaselinesSchema is the go schema for table `network_baselines`.
	NetworkBaselinesSchema = func() *walker.Schema {
		schema := GetSchemaForTable("network_baselines")
		if schema != nil {
			return schema
		}
		schema = internal.GetNetworkBaselineSchema()
		schema.ScopingResource = resources.DeploymentExtension
		RegisterTable(schema, CreateTableNetworkBaselinesStmt)
		mapping.RegisterCategoryToTable(v1.SearchCategory_NETWORK_BASELINE, schema)
		return schema
	}()
)

const (
	// NetworkBaselinesTableName specifies the name of the table in postgres.
	NetworkBaselinesTableName = "network_baselines"
)

// NetworkBaselines holds the Gorm model for Postgres table `network_baselines`.
type NetworkBaselines struct {
	DeploymentID string `gorm:"column:deploymentid;type:uuid;primaryKey"`
	ClusterID    string `gorm:"column:clusterid;type:uuid;index:networkbaselines_sac_filter,type:btree"`
	Namespace    string `gorm:"column:namespace;type:varchar;index:networkbaselines_sac_filter,type:btree"`
	Serialized   []byte `gorm:"column:serialized;type:bytea"`
}
