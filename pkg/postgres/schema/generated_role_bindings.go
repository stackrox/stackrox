// Code generated by generate-schema tool. DO NOT EDIT.

package schema

import (
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// generatedK8SRoleBindingSearchFields contains pre-computed search fields for role_bindings
	generatedK8SRoleBindingSearchFields = map[search.FieldLabel]*search.Field{

		"Role": {
			FieldPath: "Id",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_ROLEBINDINGS,
		},

		"Namespace": {
			FieldPath: "Namespace",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     true,
			Hidden:    false,
			Category:  v1.SearchCategory_ROLEBINDINGS,
		},

		"Cluster": {
			FieldPath: "ClusterId",
			Type:      v1.SearchDataType_SEARCH_STRING,
			Store:     false,
			Hidden:    false,
			Category:  v1.SearchCategory_ROLEBINDINGS,
		},
	}

	// generatedK8SRoleBindingSchema is the pre-computed schema for role_bindings table
	generatedK8SRoleBindingSchema = &walker.Schema{
		Table:    "role_bindings",
		Type:     "*storage.K8SRoleBinding",
		TypeName: "K8SRoleBinding",
		Fields: []walker.Field{

			{
				Name:       "state",
				ColumnName: "state",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.MessageState",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "Id",
				ColumnName: "id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Options: walker.PostgresOptions{
					PrimaryKey: true,
				},

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Role",
				},
			},

			{
				Name:       "Name",
				ColumnName: "name",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Role",
				},
			},

			{
				Name:       "Namespace",
				ColumnName: "namespace",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Namespace,store",
				},
			},

			{
				Name:       "ClusterId",
				ColumnName: "cluster_id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Cluster",
				},
			},

			{
				Name:       "ClusterName",
				ColumnName: "cluster_name",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Cluster",
				},
			},

			{
				Name:       "ClusterRole",
				ColumnName: "cluster_role",
				Type:       "bool",
				SQLType:    "bool",
				DataType:   postgres.Bool,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Cluster",
				},
			},

			{
				Name:       "Labels",
				ColumnName: "labels",
				Type:       "map[string]string",
				SQLType:    "jsonb",
				DataType:   postgres.Map,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Role",
				},
			},

			{
				Name:       "Annotations",
				ColumnName: "annotations",
				Type:       "map[string]string",
				SQLType:    "jsonb",
				DataType:   postgres.Map,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Role",
				},
			},

			{
				Name:       "Subjects",
				ColumnName: "subjects",
				Type:       "[]github.com/stackrox/rox/generated/storage.Subject",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "RoleId",
				ColumnName: "role_id",
				Type:       "string",
				SQLType:    "varchar",
				DataType:   postgres.String,

				Search: walker.SearchField{
					Enabled:   true,
					FieldName: "Role",
				},
			},

			{
				Name:       "unknownFields",
				ColumnName: "unknown_fields",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.UnknownFields",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},

			{
				Name:       "sizeCache",
				ColumnName: "size_cache",
				Type:       "google.golang.org/protobuf/runtime/protoimpl.SizeCache",
				SQLType:    "jsonb",
				DataType:   postgres.Map,
			},
		},

		ScopingResource: resources.K8sRoleBinding,
	}
)

// GetK8SRoleBindingSchema returns the generated schema for role_bindings
func GetK8SRoleBindingSchema() *walker.Schema {
	// Set up search options if not already done
	if generatedK8SRoleBindingSchema.OptionsMap == nil {
		generatedK8SRoleBindingSchema.SetOptionsMap(search.OptionsMapFromMap(v1.SearchCategory_ROLEBINDINGS, generatedK8SRoleBindingSearchFields))
	}
	return generatedK8SRoleBindingSchema
}
