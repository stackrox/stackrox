// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"fmt"
	"reflect"

	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/sac/resources"
	"github.com/stackrox/rox/pkg/search"
	"github.com/stackrox/rox/pkg/search/postgres/mapping"
)

var (
	// CreateTableImageComponentCveEdgesV2Stmt holds the create statement for table `image_component_cve_edges_v2`.
	CreateTableImageComponentCveEdgesV2Stmt = &postgres.CreateStmts{
		GormModel: (*ImageComponentCveEdgesV2)(nil),
		Children:  []*postgres.CreateStmts{},
	}

	// ImageComponentCveEdgesV2Schema is the go schema for table `image_component_cve_edges_v2`.
	ImageComponentCveEdgesV2Schema = func() *walker.Schema {
		schema := GetSchemaForTable("image_component_cve_edges_v2")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.ComponentCVEEdgeV2)(nil)), "image_component_cve_edges_v2")
		referencedSchemas := map[string]*walker.Schema{
			"storage.ImageComponentV2": ImageComponentV2Schema,
			"storage.ImageCVEV2":       ImageCvesV2Schema,
		}

		schema.ResolveReferences(func(messageTypeName string) *walker.Schema {
			return referencedSchemas[fmt.Sprintf("storage.%s", messageTypeName)]
		})
		schema.SetOptionsMap(search.Walk(v1.SearchCategory_COMPONENT_VULN_EDGE_V2, "componentcveedgev2", (*storage.ComponentCVEEdgeV2)(nil)))
		schema.SetSearchScope([]v1.SearchCategory{
			v1.SearchCategory_IMAGE_VULNERABILITIES_V2,
			v1.SearchCategory_COMPONENT_VULN_EDGE_V2,
			v1.SearchCategory_IMAGE_COMPONENTS_V2,
			v1.SearchCategory_IMAGES,
			v1.SearchCategory_DEPLOYMENTS,
			v1.SearchCategory_NAMESPACES,
			v1.SearchCategory_CLUSTERS,
		}...)
		schema.ScopingResource = resources.Image
		RegisterTable(schema, CreateTableImageComponentCveEdgesV2Stmt)
		mapping.RegisterCategoryToTable(v1.SearchCategory_COMPONENT_VULN_EDGE_V2, schema)
		return schema
	}()
)

const (
	// ImageComponentCveEdgesV2TableName specifies the name of the table in postgres.
	ImageComponentCveEdgesV2TableName = "image_component_cve_edges_v2"
)

// ImageComponentCveEdgesV2 holds the Gorm model for Postgres table `image_component_cve_edges_v2`.
type ImageComponentCveEdgesV2 struct {
	ID                  string           `gorm:"column:id;type:varchar;primaryKey"`
	IsFixable           bool             `gorm:"column:isfixable;type:bool"`
	FixedBy             string           `gorm:"column:fixedby;type:varchar"`
	ImageComponentID    string           `gorm:"column:imagecomponentid;type:varchar;index:imagecomponentcveedgesv2_imagecomponentid,type:hash"`
	ImageCveID          string           `gorm:"column:imagecveid;type:varchar;index:imagecomponentcveedgesv2_imagecveid,type:hash"`
	Serialized          []byte           `gorm:"column:serialized;type:bytea"`
	ImageComponentV2Ref ImageComponentV2 `gorm:"foreignKey:imagecomponentid;references:id;belongsTo;constraint:OnDelete:CASCADE"`
}
