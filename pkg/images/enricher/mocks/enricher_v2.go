// Code generated by MockGen. DO NOT EDIT.
// Source: enricher_v2.go
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/enricher_v2.go -source enricher_v2.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	storage "github.com/stackrox/rox/generated/storage"
	enricher "github.com/stackrox/rox/pkg/images/enricher"
	types "github.com/stackrox/rox/pkg/scanners/types"
	scannerV1 "github.com/stackrox/scanner/generated/scanner/api/v1"
	gomock "go.uber.org/mock/gomock"
)

// MockImageEnricherV2 is a mock of ImageEnricherV2 interface.
type MockImageEnricherV2 struct {
	ctrl     *gomock.Controller
	recorder *MockImageEnricherV2MockRecorder
	isgomock struct{}
}

// MockImageEnricherV2MockRecorder is the mock recorder for MockImageEnricherV2.
type MockImageEnricherV2MockRecorder struct {
	mock *MockImageEnricherV2
}

// NewMockImageEnricherV2 creates a new mock instance.
func NewMockImageEnricherV2(ctrl *gomock.Controller) *MockImageEnricherV2 {
	mock := &MockImageEnricherV2{ctrl: ctrl}
	mock.recorder = &MockImageEnricherV2MockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageEnricherV2) EXPECT() *MockImageEnricherV2MockRecorder {
	return m.recorder
}

// EnrichImage mocks base method.
func (m *MockImageEnricherV2) EnrichImage(ctx context.Context, enrichCtx enricher.EnrichmentContext, image *storage.ImageV2) (enricher.EnrichmentResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnrichImage", ctx, enrichCtx, image)
	ret0, _ := ret[0].(enricher.EnrichmentResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EnrichImage indicates an expected call of EnrichImage.
func (mr *MockImageEnricherV2MockRecorder) EnrichImage(ctx, enrichCtx, image any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnrichImage", reflect.TypeOf((*MockImageEnricherV2)(nil).EnrichImage), ctx, enrichCtx, image)
}

// EnrichWithSignatureVerificationData mocks base method.
func (m *MockImageEnricherV2) EnrichWithSignatureVerificationData(ctx context.Context, image *storage.ImageV2) (enricher.EnrichmentResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnrichWithSignatureVerificationData", ctx, image)
	ret0, _ := ret[0].(enricher.EnrichmentResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EnrichWithSignatureVerificationData indicates an expected call of EnrichWithSignatureVerificationData.
func (mr *MockImageEnricherV2MockRecorder) EnrichWithSignatureVerificationData(ctx, image any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnrichWithSignatureVerificationData", reflect.TypeOf((*MockImageEnricherV2)(nil).EnrichWithSignatureVerificationData), ctx, image)
}

// EnrichWithVulnerabilities mocks base method.
func (m *MockImageEnricherV2) EnrichWithVulnerabilities(image *storage.ImageV2, components *types.ScanComponents, notes []scannerV1.Note) (enricher.EnrichmentResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnrichWithVulnerabilities", image, components, notes)
	ret0, _ := ret[0].(enricher.EnrichmentResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EnrichWithVulnerabilities indicates an expected call of EnrichWithVulnerabilities.
func (mr *MockImageEnricherV2MockRecorder) EnrichWithVulnerabilities(image, components, notes any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnrichWithVulnerabilities", reflect.TypeOf((*MockImageEnricherV2)(nil).EnrichWithVulnerabilities), image, components, notes)
}
