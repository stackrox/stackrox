// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/stackrox/rox/pkg/notifiers (interfaces: MetadataGetter)
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/metadata_getter.go github.com/stackrox/rox/pkg/notifiers MetadataGetter
//
// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	storage "github.com/stackrox/rox/generated/storage"
	gomock "go.uber.org/mock/gomock"
)

// MockMetadataGetter is a mock of MetadataGetter interface.
type MockMetadataGetter struct {
	ctrl     *gomock.Controller
	recorder *MockMetadataGetterMockRecorder
}

// MockMetadataGetterMockRecorder is the mock recorder for MockMetadataGetter.
type MockMetadataGetterMockRecorder struct {
	mock *MockMetadataGetter
}

// NewMockMetadataGetter creates a new mock instance.
func NewMockMetadataGetter(ctrl *gomock.Controller) *MockMetadataGetter {
	mock := &MockMetadataGetter{ctrl: ctrl}
	mock.recorder = &MockMetadataGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetadataGetter) EXPECT() *MockMetadataGetterMockRecorder {
	return m.recorder
}

// GetAnnotationValue mocks base method.
func (m *MockMetadataGetter) GetAnnotationValue(arg0 context.Context, arg1 *storage.Alert, arg2, arg3 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAnnotationValue", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAnnotationValue indicates an expected call of GetAnnotationValue.
func (mr *MockMetadataGetterMockRecorder) GetAnnotationValue(arg0, arg1, arg2, arg3 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAnnotationValue", reflect.TypeOf((*MockMetadataGetter)(nil).GetAnnotationValue), arg0, arg1, arg2, arg3)
}

// GetNamespaceLabels mocks base method.
func (m *MockMetadataGetter) GetNamespaceLabels(arg0 context.Context, arg1 *storage.Alert) map[string]string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNamespaceLabels", arg0, arg1)
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

// GetNamespaceLabels indicates an expected call of GetNamespaceLabels.
func (mr *MockMetadataGetterMockRecorder) GetNamespaceLabels(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNamespaceLabels", reflect.TypeOf((*MockMetadataGetter)(nil).GetNamespaceLabels), arg0, arg1)
}
