// Code generated by "stringer -type=Resource"; DO NOT EDIT.

package metrics

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Alert-0]
	_ = x[Deployment-1]
	_ = x[ProcessIndicator-2]
	_ = x[Image-3]
	_ = x[Secret-4]
	_ = x[Namespace-5]
	_ = x[NetworkPolicy-6]
	_ = x[Node-7]
	_ = x[NodeInventory-8]
	_ = x[ProviderMetadata-9]
	_ = x[ComplianceReturn-10]
	_ = x[ImageIntegration-11]
	_ = x[ServiceAccount-12]
	_ = x[PermissionSet-13]
	_ = x[Role-14]
	_ = x[RoleBinding-15]
	_ = x[DeploymentReprocess-16]
	_ = x[Pod-17]
	_ = x[ComplianceOperatorCheckResult-18]
	_ = x[ComplianceOperatorProfile-19]
	_ = x[ComplianceOperatorScanSettingBinding-20]
	_ = x[ComplianceOperatorRule-21]
	_ = x[ComplianceOperatorScan-22]
}

const _Resource_name = "AlertDeploymentProcessIndicatorImageSecretNamespaceNetworkPolicyNodeNodeInventoryProviderMetadataComplianceReturnImageIntegrationServiceAccountPermissionSetRoleRoleBindingDeploymentReprocessPodComplianceOperatorCheckResultComplianceOperatorProfileComplianceOperatorScanSettingBindingComplianceOperatorRuleComplianceOperatorScan"

var _Resource_index = [...]uint16{0, 5, 15, 31, 36, 42, 51, 64, 68, 81, 97, 113, 129, 143, 156, 160, 171, 190, 193, 222, 247, 283, 305, 327}

func (i Resource) String() string {
	if i < 0 || i >= Resource(len(_Resource_index)-1) {
		return "Resource(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Resource_name[_Resource_index[i]:_Resource_index[i+1]]
}
