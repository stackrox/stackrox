// Code generated by "stringer -type=Op"; DO NOT EDIT.

package metrics

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Add-0]
	_ = x[AddMany-1]
	_ = x[Count-2]
	_ = x[Dedupe-3]
	_ = x[Exists-4]
	_ = x[Get-5]
	_ = x[GetAll-6]
	_ = x[GetMany-7]
	_ = x[GetFlowsForDeployment-8]
	_ = x[GetByQuery-9]
	_ = x[GetGrouped-10]
	_ = x[GetProcessListeningOnPort-11]
	_ = x[List-12]
	_ = x[Prune-13]
	_ = x[Reset-14]
	_ = x[Rename-15]
	_ = x[Remove-16]
	_ = x[RemoveMany-17]
	_ = x[RemoveFlowsByDeployment-18]
	_ = x[Search-19]
	_ = x[Sync-20]
	_ = x[Update-21]
	_ = x[UpdateMany-22]
	_ = x[Upsert-23]
	_ = x[UpsertAll-24]
	_ = x[Walk-25]
	_ = x[WalkByQuery-26]
}

const _Op_name = "AddAddManyCountDedupeExistsGetGetAllGetManyGetFlowsForDeploymentGetByQueryGetGroupedGetProcessListeningOnPortListPruneResetRenameRemoveRemoveManyRemoveFlowsByDeploymentSearchSyncUpdateUpdateManyUpsertUpsertAllWalkWalkByQuery"

var _Op_index = [...]uint8{0, 3, 10, 15, 21, 27, 30, 36, 43, 64, 74, 84, 109, 113, 118, 123, 129, 135, 145, 168, 174, 178, 184, 194, 200, 209, 213, 224}

func (i Op) String() string {
	if i < 0 || i >= Op(len(_Op_index)-1) {
		return "Op(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Op_name[_Op_index[i]:_Op_index[i+1]]
}
