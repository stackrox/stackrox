values:
  central:
    persistence:
      none: true
  imagePullSecrets:
    allowNone: true
tests:
- name: "with default settings"
  expect:
    .deployments.central.spec.template.spec.tolerations | assertThat(. == null)

- name: "with empty string settings"
  values:
    central:
      tolerations: ""
    scanner:
      tolerations: ""
      dbTolerations: ""
  expect: |
    .deployments.central.spec.template.spec.tolerations | assertThat(. == null)

- name: "with empty dict settings"
  values:
    central:
      tolerations: {}
    scanner:
      tolerations: {}
      dbTolerations: {}
  expect: |
    .deployments.central.spec.template.spec.tolerations | assertThat(length == 0)
    .deployments.scanner.spec.template.spec.tolerations | assertThat(length == 0)
    .deployments["scanner-db"].spec.template.spec.tolerations | assertThat(length == 0)

- name: "with populated settings via dictionary"
  values:
    central:
      tolerations:
      - key: "node-role.kubernetes.io/infra"
        operator: "Exists"
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
    scanner:
      tolerations:
      - key: "node-role.kubernetes.io/infra"
        operator: "Exists"
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
      dbTolerations:
      - key: "node-role.kubernetes.io/infra"
        operator: "Exists"
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
  expect: |
    .deployments.central.spec.template.spec.tolerations | assertThat(length == 2)
    .deployments.scanner.spec.template.spec.tolerations | assertThat(length == 2)
    .deployments["scanner-db"].spec.template.spec.tolerations | assertThat(length == 2)
