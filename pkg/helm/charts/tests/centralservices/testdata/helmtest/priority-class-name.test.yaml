values:
  central:
    persistence:
      none: true
  imagePullSecrets:
    allowNone: true
tests:
- name: "with default settings"
  expect: |
    .deployments.central.spec.template.spec.priorityClassName | assertThat(. == null)
    .deployments["central-db"].spec.template.spec.priorityClassName | assertThat(. == null)
    .deployments.scanner.spec.template.spec.priorityClassName | assertThat(. == null)
    .deployments["scanner-db"].spec.template.spec.priorityClassName | assertThat(. == null)

- name: "with empty string settings"
  values:
    central:
      priorityClassName: ""
      db:
        priorityClassName: ""
    scanner:
      priorityClassName: ""
      dbPriorityClassName: ""
  expect: |
    .deployments.central.spec.template.spec.priorityClassName | assertThat(. == null)
    .deployments["central-db"].spec.template.spec.priorityClassName | assertThat(. == null)
    .deployments.scanner.spec.template.spec.priorityClassName | assertThat(. == null)
    .deployments["scanner-db"].spec.template.spec.priorityClassName | assertThat(. == null)

- name: "with populated settings"
  values:
    central:
      priorityClassName: "central"
      db:
        priorityClassName: "central-db"
    scanner:
      priorityClassName: "scanner"
      dbPriorityClassName: "scanner-db"
  expect: |
    .deployments.central.spec.template.spec.priorityClassName | assertThat(. == "central")
    .deployments["central-db"].spec.template.spec.priorityClassName | assertThat(. == "central-db")
    .deployments.scanner.spec.template.spec.priorityClassName | assertThat(. == "scanner")
    .deployments["scanner-db"].spec.template.spec.priorityClassName | assertThat(. == "scanner-db")
