server:
  visibleSchemas:
  - openshift-4.1.0
  availableSchemas:
  - openshift-4.1.0
tests:
- name: "scanner with default settings in slim mode"
  set:
    scanner.disable: false
  expect: |
    container(.deployments["scanner-slim"]; "scanner").image | contains("slim")
    container(.deployments["scanner-slim-db"]; "db").image | contains("slim")
    .deployments["scanner"] | assertThat(. == null)
    .deployments["scanner-db"] | assertThat(. == null)
    .secrets["scanner-slim-tls"] | assertThat(. == null)
    .secrets["scanner-slim-db-tls"] | assertThat(. == null)
    .securitycontextconstraints | keys | sort | assertThat(. == ["stackrox-admission-control", "stackrox-collector", "stackrox-scanner-slim", "stackrox-sensor"])
  tests:
  - name: "on openshift 4"
  - name: "on openshift 3"
    set:
      env.openshift: 3


- name: "scanner is disabled should not be installed by default"
  expect: |
    .deployments["scanner-slim"] | assertThat(. == null)
    .deployments["scanner-db-slim"] | assertThat(. == null)

- name: "scanner is enabled on non-openshift cluster should fail"
  set:
    env.openshift: false
    scanner.disable: false
  expectError: true
  expect: |
    .error | assertThat(contains("Local scanner was enabled but is only supported on OpenShift."))

- name: "scanner can override image config"
  set:
    scanner.disable: false
  expect: |
    container(.deployments["scanner-slim"]; "scanner") | assertThat(.image == "custom.io/custom-scanner:1.2.3")
    container(.deployments["scanner-slim-db"]; "db") | assertThat(.image == "custom.io/custom-scanner-db:1.2.3")
  tests:
  - name: "with fullref"
    values:
      image:
        scanner:
          fullRef: "custom.io/custom-scanner:1.2.3"
        scannerDb:
          fullRef: "custom.io/custom-scanner-db:1.2.3"
  - name: "with separate parts"
    values:
      image:
        scanner:
          tag: 1.2.3
          registry: custom.io
          name: custom-scanner
        scannerDb:
          tag: 1.2.3
          registry: custom.io
          name: custom-scanner-db

- name: "scanner accepts connections from sensor when scanner slim is enabled"
  set:
    scanner.disable: false
    scanner.mode: "slim"
  expect: |
    .networkpolicys["scanner-slim"].spec.ingress | assertThat(length == 2)
    .networkpolicys["scanner-slim"].spec.ingress[1] | .from[0].podSelector.matchLabels.app | assertThat(. == "sensor")
