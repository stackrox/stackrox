values:
  imagePullSecrets:
    allowNone: true
  monitoring:
    openshift:
      enabled: false
server:
  availableSchemas:
  - openshift-4.1.0
tests:
- name: "OpenShift resources should be created"
  expect: |
    .securitycontextconstraints["stackrox-sensor"] != null
    .securitycontextconstraints["stackrox-collector"] != null
    .securitycontextconstraints["stackrox-admission-control"] != null
    envVars(.deployments.sensor; "sensor")["ROX_OPENSHIFT_API"] == "true"
  tests:
  - name: "on an OpenShift server"
    server:
      visibleSchemas:
      - openshift-4.1.0
    expect: |
      .notes | assertThat(contains("we have inferred that you are deploying into an OpenShift 4"))

  - name: "on an OpenShift 3 server"
    server:
      visibleSchemas:
        - openshift-3.11.0
    capabilities:
      kubeVersion:
        version: "v1.11.0"
    expect: |
      .notes | assertThat(contains("we have inferred that you are deploying into an OpenShift 3"))

  - name: "with env.openshift=true without openshift schemas for helm template commands"
    capabilities:
      kubeVersion:
        version: "v1.18.0"
    set:
      env.openshift: true
    expect: |
      .notes | assertThat(contains("we have inferred that you are deploying into an OpenShift 3"))

  - name: "with env.openshift=true and kubernetes 1.11 should deploy to openshift 3"
    capabilities:
      kubeVersion:
        version: "v1.11.0"
    set:
      env.openshift: true
    expect: |
      .notes | assertThat(contains("we have inferred that you are deploying into an OpenShift 3"))

- name: "OpenShift resources should not be created"
  expect: |
    .securitycontextconstraints == null
    envVars(.deployments.sensor; "sensor")["ROX_OPENSHIFT_API"] != "true"
  tests:
  - name: "on a non-OpenShift server"
  - name: "with env.openshift=false"
    server:
      visibleSchemas:
      - openshift-4.1.0
    set:
      env.openshift: false
