defs: |
  def collector:
    container(.daemonsets.collector; "collector");

  def collectorImageFromConfig:
    .secrets["helm-cluster-config"].stringData["config.yaml"] | fromyaml | .clusterConfig.staticConfig.collectorImage;
values:
  imagePullSecrets:
    allowNone: true

expect: |
  # The image in the config should at least be a prefix (sans tag) of the sensor image
  collectorImageFromConfig as $imgFromConfig
    | collector | .image | assertThat(startswith($imgFromConfig))
  # Whenever the image in the config contains a tag, there shold be a warning informing the user about the upgrade
  # impact.
  .notes as $notes
    | collectorImageFromConfig | assumeThat(contains(":"))
      | $notes | assertThat(contains("WARNING: You have specified an explicit collector image"))

tests:
- name: "test image settings"
  tests:
  - name: "custom registry for collector image"
    set:
      image.collector.registry: "collector-registry.example.com"
    expect: |
      collector | .image | assertThat(startswith("collector-registry.example.com/collector:"))
      collectorImageFromConfig | assertThat(. == "collector-registry.example.com/collector")

  - name: "custom name for collector image"
    set:
      image.collector.registry: "collector-registry.example.com"
      image.collector.name: "my-collector"
    expect: |
      collector | .image | assertThat(startswith("collector-registry.example.com/my-collector:"))
      collectorImageFromConfig | assertThat(. == "collector-registry.example.com/my-collector")
  - name: "custom tag for collector image"
    set:
      image.collector.registry: "collector-registry.example.com"
      image.collector.tag: "my-tag"
    expect: |
      collector | .image | assertThat(. == "collector-registry.example.com/collector:my-tag")
      collectorImageFromConfig | assertThat(. == "collector-registry.example.com/collector:my-tag")
  - name: "custom full reference"
    set:
      image.collector.registry: "collector-registry.example.com"
      image.collector.tag: "my-tag"
      image.collector.fullRef: "completely-unrelated.example.com/some-image:some-tag"
    expect: |
      collector | .image | assertThat(. == "completely-unrelated.example.com/some-image:some-tag")
      collectorImageFromConfig | assertThat(. == "completely-unrelated.example.com/some-image:some-tag")
- name: "test image pull policy settings"
  tests:
  - name: "default settings"
    expect: |
      collector | assertThat(.imagePullPolicy == "IfNotPresent")
  - name: "global setting"
    set:
      image.collector.pullPolicy: Never
    tests:
    - name: "with no override"
      expect: |
        collector | assertThat(.imagePullPolicy == "Never")
    - name: "with collector override"
      set:
        collector.imagePullPolicy: Always
      expect: |
        collector | assertThat(.imagePullPolicy == "Always")
