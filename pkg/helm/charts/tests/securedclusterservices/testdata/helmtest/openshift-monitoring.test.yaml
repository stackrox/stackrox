server:
  availableSchemas:
  - openshift-4.1.0
  - com.coreos
tests:
- name: "When enabled (legacy)"
  set:
    enableOpenShiftMonitoring: true
    env.openshift: 4
  tests: &enabled-test
  - name: "resources are created for prometheus-operator"
    expect: |
      .roles["secured-cluster-prometheus-k8s"] | assertThat(. != null)
      .rolebindings["secured-cluster-prometheus-k8s"] | assertThat(. != null)
      .servicemonitors["sensor-monitor"] | assertThat(. != null)
      .podmonitors["collector-monitor"] | assertThat(. != null)

  - name: "monitoring is exposed"
  - name: "enableOpenShiftMonitoring overrides exposeMonitoring"
    set:
      exposeMonitoring: false
  - name: "enableOpenShiftMonitoring overrides x.exposeMonitoring"
    set:
      sensor.exposeMonitoring: false
      collector.exposeMonitoring: false
      admissionControl.exposeMonitoring: false
    expect: |
      verifyMonitoringExposed(.services.sensor)
      verifyMonitoringContainerPortExposed(container(.deployments.sensor; "sensor"))
      .networkpolicys["sensor-monitoring"] | assertThat(. != null)
      verifyMonitoringContainerPortExposed(container(.daemonsets.collector; "collector"))
      .networkpolicys["collector-monitoring"] | assertThat(. != null)
      .networkpolicys["admission-control-monitoring"] | assertThat(. != null)

  - name: "a note for the namespace label is added"
    expect:
      .notes | assertThat(contains("To have openshift-monitoring include metrics from the"))

- name: "When enabled"
  set:
    monitoring.openshift.enabled: true
    env.openshift: 4
  tests: *enabled-test

- name: "When disabled"
  set:
    env.openshift: 4
  tests:
    - name: "resources are not created when disabled (by default)"
    - name: "resources are not created when explicitly disabled"
      set:
        monitoring.openshift.enabled: false
      expect: |
        .roles["secured-cluster-prometheus-k8s"] | assertThat(. == null)
        .rolebindings["secured-cluster-prometheus-k8s"] | assertThat(. == null)
        .servicemonitors["sensor-monitor"] | assertThat(. == null)
        .podmonitors["collector-monitor"] | assertThat(. == null)

- name: "An error is thrown when enableOpenShiftMonitoring is true in an env that does not support it"
  expectError: true
  set:
    monitoring.openshift.enabled: true
  tests:
  - name: "cannot be enabled due to default env not being openshift"
  - name: "on an explicit non-OpenShift environment"
    set:
      env.openshift: false
  - name: "on an explicit OpenShift 3 environment"
    set:
      env.openshift: 3
  - name: "on an auto-detected OpenShift 3 environment"
    server:
      visibleSchemas:
      - openshift-3.11.0
    capabilities:
      kubeVersion:
        version: "v1.11.0"
    expect: |
      .error | assertThat(contains("monitoring.openshift.enabled") and contains("but the chart is not being deployed in an OpenShift 4 cluster"))
