server:
  availableSchemas:
  - openshift-4.1.0
tests:
- name: "OpenShift3 clusters do not support admission control sideEffects"
  server:
    availableSchemas:
      - openshift-3.11.0
  set:
    env.openshift: 3
    admissionControl:
      listenOnEvents: true
      listenOnCreates: true
      listenOnUpdates: true
  expectError: true

- name: "OpenShift4 clusters support admission control sideEffects"
  set:
    env.openshift: 4
  values:
    admissionControl:
      listenOnEvents: true
      listenOnCreates: true
      listenOnUpdates: true
  expect: |
    [.objects[] | select(.kind == "ValidatingWebhookConfiguration" and .metadata.name == "stackrox").webhooks[] |
      select(.sideEffects == "NoneOnDryRun")] | assertThat(length == 2)

- name: "Create admissionregistration.k8s.io/v1"
  expect: |
    .validatingwebhookconfigurations[].apiVersion | assertThat(. == "admissionregistration.k8s.io/v1")
    .validatingwebhookconfigurations[].webhooks[].admissionReviewVersions | assertThat(sort == ["v1", "v1beta1"])
  values:
    admissionControl:
      listenOnCreates: true
      listenOnEvents: true
  tests:
    - name: "on Kubernetes"
      server:
        availableSchemas:
          - kubernetes-1.20.2
    - name: "on OpenShift 4"
      server:
        availableSchemas:
          - openshift-4.1.0

- name: "Create admissionregistration.k8s.io/v1beta1 on OpenShift 3.11"
  server:
    availableSchemas:
      - openshift-3.11.0
  set:
    env.openshift: 3
  values:
    admissionControl:
      listenOnCreates: true
  expect: |
    .validatingwebhookconfigurations[].apiVersion | assertThat(. == "admissionregistration.k8s.io/v1beta1")
    .validatingwebhookconfigurations[].webhooks[] | assertThat(.admissionReviewVersions == null)

- name: "Webhook timeout pads AdmissionController timeout by 2 seconds"
  tests:
    - name: "default AdmissionController timeout is 20s + 2s padding"
      expect: |
        .validatingwebhookconfigurations[].webhooks[].timeoutSeconds | assertThat(. == 20 + 2)
    - name: "override sets value correctly"
      values:
        admissionControl:
          dynamic:
            timeout: 10
      expect: |
        .validatingwebhookconfigurations[].webhooks[].timeoutSeconds | assertThat(. == 10 + 2)
