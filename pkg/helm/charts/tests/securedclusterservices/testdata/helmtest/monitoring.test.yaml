values:
  imagePullSecrets:
    allowNone: true
  scannerV4:
    disable: false
  system:
    enableNetworkPolicies: true
tests:
- name: monitoring should not be exposed by default
  expect: |
    verifyMonitoringExposed(.services.sensor) | assertThat(not)
    verifyMonitoringContainerPortExposed(container(.deployments.sensor; "sensor")) | assertThat(not)
    .networkpolicys["sensor-monitoring"] | assertThat(. == null)
    verifyMonitoringContainerPortExposed(container(.daemonsets.collector; "collector")) | assertThat(not)
    .networkpolicys["collector-monitoring"] | assertThat(. == null)
    .networkpolicys["admission-control-monitoring"] | assertThat(. == null)
    verifyMonitoringExposed(.services["scanner-v4-indexer"]) | assertThat(not)
    verifyMonitoringContainerPortExposed(container(.deployments["scanner-v4-indexer"]; "indexer")) | assertThat(not)
    .networkpolicys["scanner-v4-indexer-monitoring"] | assertThat(. == null)

- name: monitoring should be exposed when enabled
  set:
    exposeMonitoring: true
    system.enableNetworkPolicies: true
  expect: |
    verifyMonitoringExposed(.services.sensor)
    verifyMonitoringContainerPortExposed(container(.deployments.sensor; "sensor"))
    .networkpolicys["sensor-monitoring"] | assertThat(. != null)
    verifyMonitoringContainerPortExposed(container(.daemonsets.collector; "collector"))
    .networkpolicys["collector-monitoring"] | assertThat(. != null)
    .networkpolicys["admission-control-monitoring"] | assertThat(. != null)
    verifyMonitoringExposed(.services["scanner-v4-indexer"])
    verifyMonitoringContainerPortExposed(container(.deployments["scanner-v4-indexer"]; "indexer"))
    .networkpolicys["scanner-v4-indexer-monitoring"] | assertThat(. != null)

- name: network policies should not be created when disabled
  set:
    exposeMonitoring: true
    system.enableNetworkPolicies: false
  expect: |
    .networkpolicys["sensor-monitoring"] | assertThat(. == null)
    .networkpolicys["collector-monitoring"] | assertThat(. == null)
    .networkpolicys["admission-control-monitoring"] | assertThat(. == null)
    .networkpolicys["scanner-v4-indexer-monitoring"] | assertThat(. == null)

- name: monitoring should be overridable on a per-component basis (sensor)
  set:
    exposeMonitoring: true
    sensor.exposeMonitoring: false
  expect: |
    verifyMonitoringExposed(.services.sensor) | assertThat(not)
    verifyMonitoringContainerPortExposed(container(.deployments.sensor; "sensor")) | assertThat(not)
    .networkpolicys["sensor-monitoring"] | assertThat(. == null)
    verifyMonitoringContainerPortExposed(container(.daemonsets.collector; "collector"))
    .networkpolicys["collector-monitoring"] | assertThat(. != null)
    .networkpolicys["admission-control-monitoring"] | assertThat(. != null)
    verifyMonitoringContainerPortExposed(container(.deployments["scanner-v4-indexer"]; "indexer"))
    .networkpolicys["scanner-v4-indexer-monitoring"] | assertThat(. != null)

- name: monitoring should be overridable on a per-component basis (collector)
  set:
    exposeMonitoring: true
    collector.exposeMonitoring: false
  expect: |
    verifyMonitoringExposed(.services.sensor)
    verifyMonitoringContainerPortExposed(container(.deployments.sensor; "sensor"))
    .networkpolicys["sensor-monitoring"] | assertThat(. != null)
    verifyMonitoringContainerPortExposed(container(.daemonsets.collector; "collector")) | assertThat(not)
    .networkpolicys["collector-monitoring"] | assertThat(. == null)
    .networkpolicys["admission-control-monitoring"] | assertThat(. != null)
    verifyMonitoringContainerPortExposed(container(.deployments["scanner-v4-indexer"]; "indexer"))
    .networkpolicys["scanner-v4-indexer-monitoring"] | assertThat(. != null)

- name: monitoring should be overridable on a per-component basis (admission control)
  set:
    exposeMonitoring: true
    admissionControl.exposeMonitoring: false
  expect: |
    verifyMonitoringExposed(.services.sensor)
    verifyMonitoringContainerPortExposed(container(.deployments.sensor; "sensor"))
    .networkpolicys["sensor-monitoring"] | assertThat(. != null)
    verifyMonitoringContainerPortExposed(container(.daemonsets.collector; "collector"))
    .networkpolicys["collector-monitoring"] | assertThat(. != null)
    .networkpolicys["admission-control-monitoring"] | assertThat(. == null)
    verifyMonitoringContainerPortExposed(container(.deployments["scanner-v4-indexer"]; "indexer"))
    .networkpolicys["scanner-v4-indexer-monitoring"] | assertThat(. != null)

- name: monitoring should be overridable on a per-component basis (scanner v4)
  set:
    exposeMonitoring: true
    scannerV4.indexer.metricsPort: 9090
    scannerV4.exposeMonitoring: false
  expect: |
    verifyMonitoringExposed(.services.sensor)
    verifyMonitoringContainerPortExposed(container(.deployments.sensor; "sensor"))
    .networkpolicys["sensor-monitoring"] | assertThat(. != null)
    verifyMonitoringContainerPortExposed(container(.daemonsets.collector; "collector"))
    .networkpolicys["collector-monitoring"] | assertThat(. != null)
    .networkpolicys["admission-control-monitoring"] | assertThat(. != null)
    verifyMonitoringContainerPortExposed(container(.deployments["scanner-v4-indexer"]; "indexer")) | assertThat(not)
    .networkpolicys["scanner-v4-indexer-monitoring"] | assertThat(. == null)
