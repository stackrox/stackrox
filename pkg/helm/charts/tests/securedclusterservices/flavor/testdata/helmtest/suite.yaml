defs: |
  def container(obj; name):
    obj.spec.template.spec.containers[] | select(.name == name);

  def mainImageContainers:
    [(container(.deployments.sensor; "sensor")),
     (container(.daemonsets.collector; "compliance")),
     (container(.deployments["admission-control"]; "admission-control"))][];

  def assertMainIs(name):
    mainImageContainers | assertThat(.image == name);

  def assertCollectorIs(name):
    container(.daemonsets.collector; "collector") | assertThat(.image == name);

  def assertScannerIs(name):
    container(.deployments.scanner; "scanner") | assertThat(.image == name);

  def assertScannerDBIs(name):
    container(.deployments["scanner-db"]; "db") | assertThat(.image == name);
server:
  visibleSchemas:
  - kubernetes-1.20.2
  objects:
    # Apparently, for the `lookup` function in the Helm chart to be able to list the objects of a certain kind
    # at least one such object needs to exist. Therefore, we create a StorageClass here solely
    # for enabling lookups in the charts under test.
    - apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        name: some-sc
        annotations:
          storageclass.kubernetes.io/is-default-class: false
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        namespace: stackrox
        name: just-some-dummy-pvc
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: "314159Mi"
values:
  clusterName: "testcluster"
  imagePullSecrets:
    allowNone: true
  createSecrets: false
  ca:
    cert: "DUMMY CA CERTIFICATE"
  monitoring:
    openshift:
      enabled: false
