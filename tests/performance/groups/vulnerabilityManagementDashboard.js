import { group } from 'k6';
import http from 'k6/http';

export function vulnerabilityManagementDashboard(host, headers, tags) {
    group('vulnerability management dashboard', function () {
        http.post(
            `${host}/api/graphql?opname=cvesCount`,
            '{"operationName":"cvesCount","variables":{"query":"Fixable:true"},"query":"query cvesCount($query: String) {\\n  imageVulnerabilityCount\\n  fixableImageVulnerabilityCount: imageVulnerabilityCount(query: $query)\\n  nodeVulnerabilityCount\\n  fixableNodeVulnerabilityCount: nodeVulnerabilityCount(query: $query)\\n  clusterVulnerabilityCount\\n  fixableClusterVulnerabilityCount: clusterVulnerabilityCount(query: $query)\\n}\\n"}',
            { headers, tags }
        );

        http.post(
            `${host}/api/graphql?opname=policiesCount`,
            '{"operationName":"policiesCount","variables":{"query":"Category:Vulnerability Management"},"query":"query policiesCount($query: String) {\\n  policies(query: $query) {\\n    id\\n    alertCount\\n    __typename\\n  }\\n}\\n"}',
            { headers, tags }
        );

        http.post(
            `${host}/api/graphql?opname=getNodes`,
            '{"operationName":"getNodes","variables":{"query":""},"query":"query getNodes($query: String) {\\n  nodeCount(query: $query)\\n}\\n"}',
            { headers, tags }
        );

        http.post(
            `${host}/api/graphql?opname=getImages`,
            '{"operationName":"getImages","variables":{"query":""},"query":"query getImages($query: String) {\\n  imageCount(query: $query)\\n}\\n"}',
            { headers, tags }
        );

        http.post(
            `${host}/api/graphql?opname=topRiskyDeployments`,
            '{"operationName":"topRiskyDeployments","variables":{"query":"","vulnQuery":"","entityPagination":{"offset":0,"limit":25,"sortOption":{"field":"Deployment Risk Priority","reversed":false}},"vulnPagination":{"offset":0,"limit":50,"sortOption":{"field":"CVSS","reversed":true}}},"query":"query topRiskyDeployments($query: String, $vulnQuery: String, $entityPagination: Pagination, $vulnPagination: Pagination) {\\n  results: deployments(query: $query, pagination: $entityPagination) {\\n    id\\n    name\\n    clusterName\\n    namespaceName: namespace\\n    priority\\n    plottedVulns: plottedImageVulnerabilities(query: $vulnQuery) {\\n      basicVulnCounter: basicImageVulnerabilityCounter {\\n        all {\\n          total\\n          fixable\\n          __typename\\n        }\\n        __typename\\n      }\\n      vulns: imageVulnerabilities(pagination: $vulnPagination) {\\n        ...vulnFields\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment vulnFields on ImageVulnerability {\\n  id\\n  cve\\n  cvss\\n  severity\\n  __typename\\n}\\n"}',
            { headers, tags }
        );

        http.post(
            `${host}/api/graphql?opname=topRiskiestImageVulns`,
            '{"operationName":"topRiskiestImageVulns","variables":{"query":"","pagination":{"offset":0,"limit":8,"sortOption":{"field":"Image Risk Priority","reversed":false}}},"query":"query topRiskiestImageVulns($query: String, $pagination: Pagination) {\\n  results: images(query: $query, pagination: $pagination) {\\n    id\\n    name {\\n      fullName\\n      __typename\\n    }\\n    vulnCounter: imageVulnerabilityCounter {\\n      all {\\n        total\\n        fixable\\n        __typename\\n      }\\n      low {\\n        total\\n        fixable\\n        __typename\\n      }\\n      moderate {\\n        total\\n        fixable\\n        __typename\\n      }\\n      important {\\n        total\\n        fixable\\n        __typename\\n      }\\n      critical {\\n        total\\n        fixable\\n        __typename\\n      }\\n      __typename\\n    }\\n    priority\\n    scan {\\n      scanTime\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n"}',
            { headers, tags }
        );

        http.post(
            `${host}/api/graphql?opname=frequentlyViolatedPolicies`,
            '{"operationName":"frequentlyViolatedPolicies","variables":{"query":"+\\n            Category:Vulnerability Management"},"query":"query frequentlyViolatedPolicies($query: String) {\\n  results: policies(query: $query) {\\n    id\\n    name\\n    enforcementActions\\n    severity\\n    alertCount\\n    categories\\n    description\\n    latestViolation\\n    __typename\\n  }\\n}\\n"}',
            { headers, tags }
        );

        http.post(
            `${host}/api/graphql?opname=recentlyDetectedImageVulnerabilities`,
            '{"operationName":"recentlyDetectedImageVulnerabilities","variables":{"query":"CVE Type:IMAGE_CVE","scopeQuery":"","pagination":{"offset":0,"limit":8,"sortOption":{"field":"CVE Created Time","reversed":true}}},"query":"query recentlyDetectedImageVulnerabilities($query: String, $scopeQuery: String, $pagination: Pagination) {\\n  results: imageVulnerabilities(query: $query, pagination: $pagination) {\\n    id\\n    cve\\n    cvss\\n    scoreVersion\\n    deploymentCount\\n    imageCount\\n    isFixable(query: $scopeQuery)\\n    envImpact\\n    createdAt\\n    summary\\n    __typename\\n  }\\n}\\n"}',
            { headers, tags }
        );

        http.post(
            `${host}/api/graphql?opname=mostCommonImageVulnerabilities`,
            '{"operationName":"mostCommonImageVulnerabilities","variables":{"query":"","vulnPagination":{"offset":0,"limit":15,"sortOption":{"field":"Deployment Count","reversed":true}}},"query":"query mostCommonImageVulnerabilities($query: String, $vulnPagination: Pagination) {\\n  results: imageVulnerabilities(query: $query, pagination: $vulnPagination) {\\n    id\\n    cve\\n    cvss\\n    scoreVersion\\n    isFixable\\n    deploymentCount\\n    summary\\n    imageCount\\n    lastScanned\\n    __typename\\n  }\\n}\\n"}',
            { headers, tags }
        );

        http.post(
            `${host}/api/graphql?opname=deploymentsWithMostSeverePolicyViolations`,
            '{"operationName":"deploymentsWithMostSeverePolicyViolations","variables":{"query":"Category:Vulnerability Management","pagination":{"offset":0,"limit":8}},"query":"query deploymentsWithMostSeverePolicyViolations($query: String, $pagination: Pagination) {\\n  results: deploymentsWithMostSevereViolations(\\n    query: $query\\n    pagination: $pagination\\n  ) {\\n    id\\n    name\\n    clusterName\\n    namespaceName: namespace\\n    failingPolicySeverityCounts {\\n      critical\\n      high\\n      medium\\n      low\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n"}',
            { headers, tags }
        );

        http.post(
            `${host}/api/graphql?opname=clustersWithMostClusterVulnerabilities`,
            '{"operationName":"clustersWithMostClusterVulnerabilities","variables":{},"query":"query clustersWithMostClusterVulnerabilities {\\n  results: clusters {\\n    id\\n    name\\n    isGKECluster\\n    isOpenShiftCluster\\n    clusterVulnerabilityCount\\n    clusterVulnerabilities {\\n      cve\\n      isFixable\\n      vulnerabilityType\\n      vulnerabilityTypes\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n"}',
            { headers, tags }
        );

        http.post(
            `${host}/api/graphql?opname=topRiskyNamespaces`,
            '{"operationName":"topRiskyNamespaces","variables":{"query":"","vulnQuery":"","entityPagination":{"offset":0,"limit":25,"sortOption":{"field":"Namespace Risk Priority","reversed":false}},"vulnPagination":{"offset":0,"limit":50,"sortOption":{"field":"CVSS","reversed":true}}},"query":"query topRiskyNamespaces($query: String, $vulnQuery: String, $entityPagination: Pagination, $vulnPagination: Pagination) {\\n  results: namespaces(query: $query, pagination: $entityPagination) {\\n    metadata {\\n      clusterName\\n      name\\n      id\\n      priority\\n      __typename\\n    }\\n    plottedVulns: plottedImageVulnerabilities(query: $vulnQuery) {\\n      basicVulnCounter: basicImageVulnerabilityCounter {\\n        all {\\n          total\\n          fixable\\n          __typename\\n        }\\n        __typename\\n      }\\n      vulns: imageVulnerabilities(pagination: $vulnPagination) {\\n        ...vulnFields\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment vulnFields on ImageVulnerability {\\n  id\\n  cve\\n  cvss\\n  severity\\n  __typename\\n}\\n"}',
            { headers, tags }
        );

        http.post(
            `${host}/api/graphql?opname=topRiskyImages`,
            '{"operationName":"topRiskyImages","variables":{"query":"","vulnQuery":"","entityPagination":{"offset":0,"limit":25,"sortOption":{"field":"Image Risk Priority","reversed":false}},"vulnPagination":{"offset":0,"limit":50,"sortOption":{"field":"CVSS","reversed":true}}},"query":"query topRiskyImages($query: String, $vulnQuery: String, $entityPagination: Pagination, $vulnPagination: Pagination) {\\n  results: images(query: $query, pagination: $entityPagination) {\\n    id\\n    name {\\n      fullName\\n      __typename\\n    }\\n    priority\\n    plottedVulns: plottedImageVulnerabilities(query: $vulnQuery) {\\n      basicVulnCounter: basicImageVulnerabilityCounter {\\n        all {\\n          total\\n          fixable\\n          __typename\\n        }\\n        __typename\\n      }\\n      vulns: imageVulnerabilities(pagination: $vulnPagination) {\\n        ...vulnFields\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment vulnFields on ImageVulnerability {\\n  id\\n  cve\\n  cvss\\n  severity\\n  __typename\\n}\\n"}',
            { headers, tags }
        );

        http.post(
            `${host}/api/graphql?opname=topRiskyNodes`,
            '{"operationName":"topRiskyNodes","variables":{"query":"","vulnQuery":"","entityPagination":{"offset":0,"limit":25,"sortOption":{"field":"Node Risk Priority","reversed":false}},"vulnPagination":{"offset":0,"limit":50,"sortOption":{"field":"CVSS","reversed":true}}},"query":"query topRiskyNodes($query: String, $vulnQuery: String, $entityPagination: Pagination, $vulnPagination: Pagination) {\\n  results: nodes(query: $query, pagination: $entityPagination) {\\n    id\\n    name\\n    clusterName\\n    priority\\n    plottedVulns: plottedNodeVulnerabilities(query: $vulnQuery) {\\n      basicVulnCounter: basicNodeVulnerabilityCounter {\\n        all {\\n          total\\n          fixable\\n          __typename\\n        }\\n        __typename\\n      }\\n      vulns: nodeVulnerabilities(pagination: $vulnPagination) {\\n        ...vulnFields\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment vulnFields on NodeVulnerability {\\n  id\\n  cve\\n  cvss\\n  severity\\n  __typename\\n}\\n"}',
            { headers, tags }
        );
    });
}
