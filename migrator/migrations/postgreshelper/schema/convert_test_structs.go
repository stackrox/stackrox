// Code generated by pg-bindings generator. DO NOT EDIT.
package schema

import (
	"github.com/lib/pq"
	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres/pgutils"
	"github.com/stackrox/rox/pkg/protocompat"
)

// ConvertTestStructFromProto converts a `*storage.TestStruct` to Gorm model
func ConvertTestStructFromProto(obj *storage.TestStruct) (*TestStructs, error) {
	serialized, err := obj.MarshalVT()
	if err != nil {
		return nil, err
	}
	model := &TestStructs{
		Key1:              obj.GetKey1(),
		Key2:              obj.GetKey2(),
		StringSlice:       pq.Array(obj.GetStringSlice()).(*pq.StringArray),
		Bool:              obj.GetBool(),
		Uint64:            obj.GetUint64(),
		Int64:             obj.GetInt64(),
		Float:             obj.GetFloat(),
		Labels:            obj.GetLabels(),
		Timestamp:         protocompat.NilOrTime(obj.GetTimestamp()),
		Enum:              obj.GetEnum(),
		Enums:             pq.Array(pgutils.ConvertEnumSliceToIntArray(obj.GetEnums())).(*pq.Int32Array),
		String:            obj.GetString_(),
		Int32Slice:        pq.Array(obj.GetInt32Slice()).(*pq.Int32Array),
		OneofnestedNested: obj.GetOneofnested().GetNested(),
		Serialized:        serialized,
	}
	return model, nil
}

// ConvertTestStruct_NestedFromProto converts a `*storage.TestStruct_Nested` to Gorm model
func ConvertTestStruct_NestedFromProto(obj *storage.TestStruct_Nested, idx int, testStructKey1 string) (*TestStructsNesteds, error) {
	model := &TestStructsNesteds{
		TestStructsKey1: testStructKey1,
		Idx:             idx,
		Nested:          obj.GetNested(),
		IsNested:        obj.GetIsNested(),
		Int64:           obj.GetInt64(),
		Nested2Nested2:  obj.GetNested2().GetNested2(),
		Nested2IsNested: obj.GetNested2().GetIsNested(),
		Nested2Int64:    obj.GetNested2().GetInt64(),
	}
	return model, nil
}

// ConvertTestStructToProto converts Gorm model `TestStructs` to its protobuf type object
func ConvertTestStructToProto(m *TestStructs) (*storage.TestStruct, error) {
	var msg storage.TestStruct
	if err := msg.UnmarshalVTUnsafe(m.Serialized); err != nil {
		return nil, err
	}
	return &msg, nil
}
