// Code generated by pg-bindings generator. DO NOT EDIT.
package schema

import (
	"github.com/lib/pq"
	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres/pgutils"
	"github.com/stackrox/rox/pkg/protocompat"
)

// ConvertAlertFromProto converts a `*storage.Alert` to Gorm model
func ConvertAlertFromProto(obj *storage.Alert) (*Alerts, error) {
	serialized, err := obj.MarshalVT()
	if err != nil {
		return nil, err
	}
	model := &Alerts{
		ID:                       obj.GetId(),
		PolicyID:                 obj.GetPolicy().GetId(),
		PolicyName:               obj.GetPolicy().GetName(),
		PolicyDescription:        obj.GetPolicy().GetDescription(),
		PolicyDisabled:           obj.GetPolicy().GetDisabled(),
		PolicyCategories:         pq.Array(obj.GetPolicy().GetCategories()).(*pq.StringArray),
		PolicySeverity:           obj.GetPolicy().GetSeverity(),
		PolicyEnforcementActions: pq.Array(pgutils.ConvertEnumSliceToIntArray(obj.GetPolicy().GetEnforcementActions())).(*pq.Int32Array),
		PolicyLastUpdated:        protocompat.NilOrTime(obj.GetPolicy().GetLastUpdated()),
		PolicySORTName:           obj.GetPolicy().GetSORTName(),
		PolicySORTLifecycleStage: obj.GetPolicy().GetSORTLifecycleStage(),
		PolicySORTEnforcement:    obj.GetPolicy().GetSORTEnforcement(),
		LifecycleStage:           obj.GetLifecycleStage(),
		ClusterID:                obj.GetClusterId(),
		ClusterName:              obj.GetClusterName(),
		Namespace:                obj.GetNamespace(),
		NamespaceID:              obj.GetNamespaceId(),
		DeploymentID:             obj.GetDeployment().GetId(),
		DeploymentName:           obj.GetDeployment().GetName(),
		DeploymentInactive:       obj.GetDeployment().GetInactive(),
		ImageID:                  obj.GetImage().GetId(),
		ImageNameRegistry:        obj.GetImage().GetName().GetRegistry(),
		ImageNameRemote:          obj.GetImage().GetName().GetRemote(),
		ImageNameTag:             obj.GetImage().GetName().GetTag(),
		ImageNameFullName:        obj.GetImage().GetName().GetFullName(),
		ImageIDV2:                obj.GetImage().GetIdV2(),
		ResourceResourceType:     obj.GetResource().GetResourceType(),
		ResourceName:             obj.GetResource().GetName(),
		EnforcementAction:        obj.GetEnforcement().GetAction(),
		Time:                     protocompat.NilOrTime(obj.GetTime()),
		State:                    obj.GetState(),
		PlatformComponent:        obj.GetPlatformComponent(),
		EntityType:               obj.GetEntityType(),
		Serialized:               serialized,
	}
	return model, nil
}

// ConvertAlertToProto converts Gorm model `Alerts` to its protobuf type object
func ConvertAlertToProto(m *Alerts) (*storage.Alert, error) {
	var msg storage.Alert
	if err := msg.UnmarshalVTUnsafe(m.Serialized); err != nil {
		return nil, err
	}
	return &msg, nil
}
