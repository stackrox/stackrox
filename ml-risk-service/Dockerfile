# Multi-stage Dockerfile for ML Risk Service
FROM python:3.11-slim AS builder

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies needed for building
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libc6-dev \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Production stage
FROM python:3.11-slim AS production

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app/src

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libgomp1 \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && groupadd -r mlrisk \
    && useradd -r -g mlrisk -s /bin/false mlrisk

# Copy Python packages from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Create app directory structure
WORKDIR /app
RUN mkdir -p /app/models /app/training /app/reports /app/logs \
    && chown -R mlrisk:mlrisk /app

# Copy application code
COPY src/ /app/src/
COPY training/ /app/training/
COPY proto/ /app/proto/

# Copy expanded configuration (generated by Makefile) and remove original
COPY src/config/feature_config.expanded.yaml /app/config/feature_config.yaml
RUN rm -f /app/src/config/feature_config.yaml

# Copy scripts
COPY scripts/entrypoint.sh /app/entrypoint.sh
COPY scripts/healthcheck.sh /app/healthcheck.sh

# Set script permissions
RUN chmod +x /app/entrypoint.sh /app/healthcheck.sh && \
    chown mlrisk:mlrisk /app/entrypoint.sh /app/healthcheck.sh

# Switch to non-root user
USER mlrisk

# Expose ports
EXPOSE 8080 8081 8090

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD /app/healthcheck.sh

# Default entrypoint
ENTRYPOINT ["/app/entrypoint.sh"]

# Labels
LABEL maintainer="StackRox ML Team" \
      description="ML Risk Ranking Service for StackRox" \
      version="1.0.0"