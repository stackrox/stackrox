// Code generated by MockGen. DO NOT EDIT.
// Source: types.go
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/types.go -source types.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	imagecomponentflat "github.com/stackrox/rox/central/views/imagecomponentflat"
	v1 "github.com/stackrox/rox/generated/api/v1"
	gomock "go.uber.org/mock/gomock"
)

// MockComponentFlat is a mock of ComponentFlat interface.
type MockComponentFlat struct {
	ctrl     *gomock.Controller
	recorder *MockComponentFlatMockRecorder
	isgomock struct{}
}

// MockComponentFlatMockRecorder is the mock recorder for MockComponentFlat.
type MockComponentFlatMockRecorder struct {
	mock *MockComponentFlat
}

// NewMockComponentFlat creates a new mock instance.
func NewMockComponentFlat(ctrl *gomock.Controller) *MockComponentFlat {
	mock := &MockComponentFlat{ctrl: ctrl}
	mock.recorder = &MockComponentFlatMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockComponentFlat) EXPECT() *MockComponentFlatMockRecorder {
	return m.recorder
}

// GetComponent mocks base method.
func (m *MockComponentFlat) GetComponent() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetComponent")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetComponent indicates an expected call of GetComponent.
func (mr *MockComponentFlatMockRecorder) GetComponent() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetComponent", reflect.TypeOf((*MockComponentFlat)(nil).GetComponent))
}

// GetComponentIDs mocks base method.
func (m *MockComponentFlat) GetComponentIDs() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetComponentIDs")
	ret0, _ := ret[0].([]string)
	return ret0
}

// GetComponentIDs indicates an expected call of GetComponentIDs.
func (mr *MockComponentFlatMockRecorder) GetComponentIDs() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetComponentIDs", reflect.TypeOf((*MockComponentFlat)(nil).GetComponentIDs))
}

// GetOperatingSystem mocks base method.
func (m *MockComponentFlat) GetOperatingSystem() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOperatingSystem")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetOperatingSystem indicates an expected call of GetOperatingSystem.
func (mr *MockComponentFlatMockRecorder) GetOperatingSystem() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOperatingSystem", reflect.TypeOf((*MockComponentFlat)(nil).GetOperatingSystem))
}

// GetRiskScore mocks base method.
func (m *MockComponentFlat) GetRiskScore() float32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRiskScore")
	ret0, _ := ret[0].(float32)
	return ret0
}

// GetRiskScore indicates an expected call of GetRiskScore.
func (mr *MockComponentFlatMockRecorder) GetRiskScore() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRiskScore", reflect.TypeOf((*MockComponentFlat)(nil).GetRiskScore))
}

// GetTopCVSS mocks base method.
func (m *MockComponentFlat) GetTopCVSS() float32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTopCVSS")
	ret0, _ := ret[0].(float32)
	return ret0
}

// GetTopCVSS indicates an expected call of GetTopCVSS.
func (mr *MockComponentFlatMockRecorder) GetTopCVSS() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTopCVSS", reflect.TypeOf((*MockComponentFlat)(nil).GetTopCVSS))
}

// GetVersion mocks base method.
func (m *MockComponentFlat) GetVersion() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVersion")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetVersion indicates an expected call of GetVersion.
func (mr *MockComponentFlatMockRecorder) GetVersion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVersion", reflect.TypeOf((*MockComponentFlat)(nil).GetVersion))
}

// MockComponentFlatView is a mock of ComponentFlatView interface.
type MockComponentFlatView struct {
	ctrl     *gomock.Controller
	recorder *MockComponentFlatViewMockRecorder
	isgomock struct{}
}

// MockComponentFlatViewMockRecorder is the mock recorder for MockComponentFlatView.
type MockComponentFlatViewMockRecorder struct {
	mock *MockComponentFlatView
}

// NewMockComponentFlatView creates a new mock instance.
func NewMockComponentFlatView(ctrl *gomock.Controller) *MockComponentFlatView {
	mock := &MockComponentFlatView{ctrl: ctrl}
	mock.recorder = &MockComponentFlatViewMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockComponentFlatView) EXPECT() *MockComponentFlatViewMockRecorder {
	return m.recorder
}

// Count mocks base method.
func (m *MockComponentFlatView) Count(ctx context.Context, q *v1.Query) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Count", ctx, q)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Count indicates an expected call of Count.
func (mr *MockComponentFlatViewMockRecorder) Count(ctx, q any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Count", reflect.TypeOf((*MockComponentFlatView)(nil).Count), ctx, q)
}

// Get mocks base method.
func (m *MockComponentFlatView) Get(ctx context.Context, q *v1.Query) ([]imagecomponentflat.ComponentFlat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, q)
	ret0, _ := ret[0].([]imagecomponentflat.ComponentFlat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockComponentFlatViewMockRecorder) Get(ctx, q any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockComponentFlatView)(nil).Get), ctx, q)
}
