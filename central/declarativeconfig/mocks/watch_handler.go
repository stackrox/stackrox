// Code generated by MockGen. DO NOT EDIT.
// Source: watch_handler.go
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/watch_handler.go -source watch_handler.go
//
// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockdeclarativeConfigContentUpdater is a mock of declarativeConfigContentUpdater interface.
type MockdeclarativeConfigContentUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockdeclarativeConfigContentUpdaterMockRecorder
}

// MockdeclarativeConfigContentUpdaterMockRecorder is the mock recorder for MockdeclarativeConfigContentUpdater.
type MockdeclarativeConfigContentUpdaterMockRecorder struct {
	mock *MockdeclarativeConfigContentUpdater
}

// NewMockdeclarativeConfigContentUpdater creates a new mock instance.
func NewMockdeclarativeConfigContentUpdater(ctrl *gomock.Controller) *MockdeclarativeConfigContentUpdater {
	mock := &MockdeclarativeConfigContentUpdater{ctrl: ctrl}
	mock.recorder = &MockdeclarativeConfigContentUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockdeclarativeConfigContentUpdater) EXPECT() *MockdeclarativeConfigContentUpdaterMockRecorder {
	return m.recorder
}

// UpdateDeclarativeConfigContents mocks base method.
func (m *MockdeclarativeConfigContentUpdater) UpdateDeclarativeConfigContents(id string, fileContents [][]byte) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateDeclarativeConfigContents", id, fileContents)
}

// UpdateDeclarativeConfigContents indicates an expected call of UpdateDeclarativeConfigContents.
func (mr *MockdeclarativeConfigContentUpdaterMockRecorder) UpdateDeclarativeConfigContents(id, fileContents any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDeclarativeConfigContents", reflect.TypeOf((*MockdeclarativeConfigContentUpdater)(nil).UpdateDeclarativeConfigContents), id, fileContents)
}
