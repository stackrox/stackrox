package datastore

import (
	"context"
	"testing"

	mockIIStore "github.com/stackrox/rox/central/imageintegration/store/mocks"
	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/env"
	"github.com/stackrox/rox/pkg/features"
	"go.uber.org/mock/gomock"
)

func TestDeleteAutogeneratedRegistries(t *testing.T) {
	ctx := context.Background()

	iis := []*storage.ImageIntegration{
		{Id: "NoAutogen-NoSource", Autogenerated: false, Source: nil},
		{Id: "NoAutogen-Source", Autogenerated: false, Source: &storage.ImageIntegration_Source{}},
		{Id: "Autogen-NoSource", Autogenerated: true, Source: nil},
		{Id: "Autogen-Source", Autogenerated: true, Source: &storage.ImageIntegration_Source{}},
	}

	t.Run("autogen disabled - sourced autogen disabled", func(t *testing.T) {
		t.Setenv(env.AutogeneratedRegistriesDisabled.EnvVar(), "true")
		t.Setenv(features.SourcedAutogeneratedIntegrations.EnvVar(), "false")

		ctrl := gomock.NewController(t)
		s := mockIIStore.NewMockStore(ctrl)
		s.EXPECT().Delete(ctx, "Autogen-NoSource")
		s.EXPECT().Delete(ctx, "Autogen-Source")

		deleteAutogeneratedRegistries(ctx, s, iis)
	})

	t.Run("autogen disabled - sourced autogen enabled", func(t *testing.T) {
		t.Setenv(env.AutogeneratedRegistriesDisabled.EnvVar(), "true")
		t.Setenv(features.SourcedAutogeneratedIntegrations.EnvVar(), "true")

		ctrl := gomock.NewController(t)
		s := mockIIStore.NewMockStore(ctrl)
		s.EXPECT().Delete(ctx, "Autogen-NoSource")
		s.EXPECT().Delete(ctx, "Autogen-Source")

		deleteAutogeneratedRegistries(ctx, s, iis)
	})

	t.Run("autogen enabled - sourced autogen disabled", func(t *testing.T) {
		t.Setenv(env.AutogeneratedRegistriesDisabled.EnvVar(), "false")
		t.Setenv(features.SourcedAutogeneratedIntegrations.EnvVar(), "false")

		ctrl := gomock.NewController(t)
		s := mockIIStore.NewMockStore(ctrl)
		s.EXPECT().Delete(ctx, "Autogen-Source")

		deleteAutogeneratedRegistries(ctx, s, iis)
	})

	t.Run("autogen enabled - sourced autogen enabled", func(t *testing.T) {
		t.Setenv(env.AutogeneratedRegistriesDisabled.EnvVar(), "false")
		t.Setenv(features.SourcedAutogeneratedIntegrations.EnvVar(), "true")

		ctrl := gomock.NewController(t)
		s := mockIIStore.NewMockStore(ctrl)

		deleteAutogeneratedRegistries(ctx, s, iis)
	})
}
