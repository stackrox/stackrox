// Code generated by MockGen. DO NOT EDIT.
// Source: enricher.go
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/enricher.go -source enricher.go
//
// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	storage "github.com/stackrox/rox/generated/storage"
	enricher "github.com/stackrox/rox/pkg/images/enricher"
	gomock "go.uber.org/mock/gomock"
)

// MockEnricher is a mock of Enricher interface.
type MockEnricher struct {
	ctrl     *gomock.Controller
	recorder *MockEnricherMockRecorder
}

// MockEnricherMockRecorder is the mock recorder for MockEnricher.
type MockEnricherMockRecorder struct {
	mock *MockEnricher
}

// NewMockEnricher creates a new mock instance.
func NewMockEnricher(ctrl *gomock.Controller) *MockEnricher {
	mock := &MockEnricher{ctrl: ctrl}
	mock.recorder = &MockEnricherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnricher) EXPECT() *MockEnricherMockRecorder {
	return m.recorder
}

// EnrichDeployment mocks base method.
func (m *MockEnricher) EnrichDeployment(ctx context.Context, enrichCtx enricher.EnrichmentContext, deployment *storage.Deployment) ([]*storage.Image, []int, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnrichDeployment", ctx, enrichCtx, deployment)
	ret0, _ := ret[0].([]*storage.Image)
	ret1, _ := ret[1].([]int)
	ret2, _ := ret[2].(bool)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// EnrichDeployment indicates an expected call of EnrichDeployment.
func (mr *MockEnricherMockRecorder) EnrichDeployment(ctx, enrichCtx, deployment any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnrichDeployment", reflect.TypeOf((*MockEnricher)(nil).EnrichDeployment), ctx, enrichCtx, deployment)
}
