// Code generated by MockGen. DO NOT EDIT.
// Source: updater.go
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/updater.go -source updater.go
//
// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	storage "github.com/stackrox/rox/generated/storage"
	gomock "go.uber.org/mock/gomock"
)

// MockUpdater is a mock of Updater interface.
type MockUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockUpdaterMockRecorder
}

// MockUpdaterMockRecorder is the mock recorder for MockUpdater.
type MockUpdaterMockRecorder struct {
	mock *MockUpdater
}

// NewMockUpdater creates a new mock instance.
func NewMockUpdater(ctrl *gomock.Controller) *MockUpdater {
	mock := &MockUpdater{ctrl: ctrl}
	mock.recorder = &MockUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUpdater) EXPECT() *MockUpdaterMockRecorder {
	return m.recorder
}

// PopulateExecutableCache mocks base method.
func (m *MockUpdater) PopulateExecutableCache(ctx context.Context, image *storage.Image) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PopulateExecutableCache", ctx, image)
	ret0, _ := ret[0].(error)
	return ret0
}

// PopulateExecutableCache indicates an expected call of PopulateExecutableCache.
func (mr *MockUpdaterMockRecorder) PopulateExecutableCache(ctx, image any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PopulateExecutableCache", reflect.TypeOf((*MockUpdater)(nil).PopulateExecutableCache), ctx, image)
}

// Update mocks base method.
func (m *MockUpdater) Update() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Update")
}

// Update indicates an expected call of Update.
func (mr *MockUpdaterMockRecorder) Update() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockUpdater)(nil).Update))
}
