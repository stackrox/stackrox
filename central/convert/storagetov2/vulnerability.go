package storagetov2

import (
	"github.com/pkg/errors"
	v2 "github.com/stackrox/rox/generated/api/v2"
	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/utils"
)

func convertVulnerabilityState(state storage.VulnerabilityState) v2.VulnerabilityState {
	switch state {
	case storage.VulnerabilityState_OBSERVED:
		return v2.VulnerabilityState_OBSERVED
	case storage.VulnerabilityState_DEFERRED:
		return v2.VulnerabilityState_DEFERRED
	case storage.VulnerabilityState_FALSE_POSITIVE:
		return v2.VulnerabilityState_FALSE_POSITIVE
	default:
		utils.Should(errors.Errorf("unhandled vulnerability state encountered %s", state))
		return v2.VulnerabilityState_OBSERVED
	}
}
