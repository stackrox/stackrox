// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUsageSource is a mock of UsageSource interface.
type MockUsageSource struct {
	ctrl     *gomock.Controller
	recorder *MockUsageSourceMockRecorder
}

// MockUsageSourceMockRecorder is the mock recorder for MockUsageSource.
type MockUsageSourceMockRecorder struct {
	mock *MockUsageSource
}

// NewMockUsageSource creates a new mock instance.
func NewMockUsageSource(ctrl *gomock.Controller) *MockUsageSource {
	mock := &MockUsageSource{ctrl: ctrl}
	mock.recorder = &MockUsageSourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsageSource) EXPECT() *MockUsageSourceMockRecorder {
	return m.recorder
}

// GetCpuCapacity mocks base method.
func (m *MockUsageSource) GetCpuCapacity() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCpuCapacity")
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetCpuCapacity indicates an expected call of GetCpuCapacity.
func (mr *MockUsageSourceMockRecorder) GetCpuCapacity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCpuCapacity", reflect.TypeOf((*MockUsageSource)(nil).GetCpuCapacity))
}

// GetNodeCount mocks base method.
func (m *MockUsageSource) GetNodeCount() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNodeCount")
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetNodeCount indicates an expected call of GetNodeCount.
func (mr *MockUsageSourceMockRecorder) GetNodeCount() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNodeCount", reflect.TypeOf((*MockUsageSource)(nil).GetNodeCount))
}
