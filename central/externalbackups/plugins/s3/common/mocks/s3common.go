// Code generated by MockGen. DO NOT EDIT.
// Source: s3common.go
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/s3common.go -source s3common.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	io "io"
	reflect "reflect"

	s3 "github.com/aws/aws-sdk-go-v2/service/s3"
	storage "github.com/stackrox/rox/generated/storage"
	gomock "go.uber.org/mock/gomock"
)

// MockConfigWrapper is a mock of ConfigWrapper interface.
type MockConfigWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockConfigWrapperMockRecorder
	isgomock struct{}
}

// MockConfigWrapperMockRecorder is the mock recorder for MockConfigWrapper.
type MockConfigWrapperMockRecorder struct {
	mock *MockConfigWrapper
}

// NewMockConfigWrapper creates a new mock instance.
func NewMockConfigWrapper(ctrl *gomock.Controller) *MockConfigWrapper {
	mock := &MockConfigWrapper{ctrl: ctrl}
	mock.recorder = &MockConfigWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigWrapper) EXPECT() *MockConfigWrapperMockRecorder {
	return m.recorder
}

// GetAccessKeyId mocks base method.
func (m *MockConfigWrapper) GetAccessKeyId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccessKeyId")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAccessKeyId indicates an expected call of GetAccessKeyId.
func (mr *MockConfigWrapperMockRecorder) GetAccessKeyId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccessKeyId", reflect.TypeOf((*MockConfigWrapper)(nil).GetAccessKeyId))
}

// GetBackupsToKeep mocks base method.
func (m *MockConfigWrapper) GetBackupsToKeep() int32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBackupsToKeep")
	ret0, _ := ret[0].(int32)
	return ret0
}

// GetBackupsToKeep indicates an expected call of GetBackupsToKeep.
func (mr *MockConfigWrapperMockRecorder) GetBackupsToKeep() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBackupsToKeep", reflect.TypeOf((*MockConfigWrapper)(nil).GetBackupsToKeep))
}

// GetBucket mocks base method.
func (m *MockConfigWrapper) GetBucket() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBucket")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBucket indicates an expected call of GetBucket.
func (mr *MockConfigWrapperMockRecorder) GetBucket() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBucket", reflect.TypeOf((*MockConfigWrapper)(nil).GetBucket))
}

// GetEndpoint mocks base method.
func (m *MockConfigWrapper) GetEndpoint() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEndpoint")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetEndpoint indicates an expected call of GetEndpoint.
func (mr *MockConfigWrapperMockRecorder) GetEndpoint() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEndpoint", reflect.TypeOf((*MockConfigWrapper)(nil).GetEndpoint))
}

// GetName mocks base method.
func (m *MockConfigWrapper) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockConfigWrapperMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockConfigWrapper)(nil).GetName))
}

// GetObjectPrefix mocks base method.
func (m *MockConfigWrapper) GetObjectPrefix() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetObjectPrefix")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetObjectPrefix indicates an expected call of GetObjectPrefix.
func (mr *MockConfigWrapperMockRecorder) GetObjectPrefix() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetObjectPrefix", reflect.TypeOf((*MockConfigWrapper)(nil).GetObjectPrefix))
}

// GetPluginType mocks base method.
func (m *MockConfigWrapper) GetPluginType() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPluginType")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPluginType indicates an expected call of GetPluginType.
func (mr *MockConfigWrapperMockRecorder) GetPluginType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPluginType", reflect.TypeOf((*MockConfigWrapper)(nil).GetPluginType))
}

// GetRegion mocks base method.
func (m *MockConfigWrapper) GetRegion() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRegion")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRegion indicates an expected call of GetRegion.
func (mr *MockConfigWrapperMockRecorder) GetRegion() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRegion", reflect.TypeOf((*MockConfigWrapper)(nil).GetRegion))
}

// GetSecretAccessKey mocks base method.
func (m *MockConfigWrapper) GetSecretAccessKey() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecretAccessKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSecretAccessKey indicates an expected call of GetSecretAccessKey.
func (mr *MockConfigWrapperMockRecorder) GetSecretAccessKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecretAccessKey", reflect.TypeOf((*MockConfigWrapper)(nil).GetSecretAccessKey))
}

// GetUrlStyle mocks base method.
func (m *MockConfigWrapper) GetUrlStyle() storage.S3URLStyle {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrlStyle")
	ret0, _ := ret[0].(storage.S3URLStyle)
	return ret0
}

// GetUrlStyle indicates an expected call of GetUrlStyle.
func (mr *MockConfigWrapperMockRecorder) GetUrlStyle() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrlStyle", reflect.TypeOf((*MockConfigWrapper)(nil).GetUrlStyle))
}

// GetUseIam mocks base method.
func (m *MockConfigWrapper) GetUseIam() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUseIam")
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetUseIam indicates an expected call of GetUseIam.
func (mr *MockConfigWrapperMockRecorder) GetUseIam() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUseIam", reflect.TypeOf((*MockConfigWrapper)(nil).GetUseIam))
}

// Validate mocks base method.
func (m *MockConfigWrapper) Validate() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate")
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockConfigWrapperMockRecorder) Validate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockConfigWrapper)(nil).Validate))
}

// Mocks3Wrapper is a mock of s3Wrapper interface.
type Mocks3Wrapper struct {
	ctrl     *gomock.Controller
	recorder *Mocks3WrapperMockRecorder
	isgomock struct{}
}

// Mocks3WrapperMockRecorder is the mock recorder for Mocks3Wrapper.
type Mocks3WrapperMockRecorder struct {
	mock *Mocks3Wrapper
}

// NewMocks3Wrapper creates a new mock instance.
func NewMocks3Wrapper(ctrl *gomock.Controller) *Mocks3Wrapper {
	mock := &Mocks3Wrapper{ctrl: ctrl}
	mock.recorder = &Mocks3WrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mocks3Wrapper) EXPECT() *Mocks3WrapperMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *Mocks3Wrapper) Delete(ctx context.Context, key string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, key)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *Mocks3WrapperMockRecorder) Delete(ctx, key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*Mocks3Wrapper)(nil).Delete), ctx, key)
}

// ListObjects mocks base method.
func (m *Mocks3Wrapper) ListObjects(ctx context.Context, keyPrefix string) (*s3.ListObjectsV2Output, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListObjects", ctx, keyPrefix)
	ret0, _ := ret[0].(*s3.ListObjectsV2Output)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListObjects indicates an expected call of ListObjects.
func (mr *Mocks3WrapperMockRecorder) ListObjects(ctx, keyPrefix any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListObjects", reflect.TypeOf((*Mocks3Wrapper)(nil).ListObjects), ctx, keyPrefix)
}

// Upload mocks base method.
func (m *Mocks3Wrapper) Upload(ctx context.Context, key string, data io.Reader) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Upload", ctx, key, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// Upload indicates an expected call of Upload.
func (mr *Mocks3WrapperMockRecorder) Upload(ctx, key, data any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Upload", reflect.TypeOf((*Mocks3Wrapper)(nil).Upload), ctx, key, data)
}
