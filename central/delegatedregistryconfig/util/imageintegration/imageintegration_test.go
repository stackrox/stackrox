package imageintegration

import (
	"fmt"
	"testing"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stretchr/testify/assert"
)

func TestValidForSync(t *testing.T) {
	catsWithReg := []storage.ImageIntegrationCategory{storage.ImageIntegrationCategory_REGISTRY}
	catsWithoutReg := []storage.ImageIntegrationCategory{storage.ImageIntegrationCategory_SCANNER}
	catsMultiWithReg := []storage.ImageIntegrationCategory{storage.ImageIntegrationCategory_SCANNER, storage.ImageIntegrationCategory_REGISTRY}

	tt := []struct {
		ii       *storage.ImageIntegration
		expected bool
	}{
		{nil, false},
		{storage.ImageIntegration_builder{Autogenerated: true}.Build(), false},
		{storage.ImageIntegration_builder{Autogenerated: true, Categories: catsWithoutReg}.Build(), false},
		{storage.ImageIntegration_builder{Autogenerated: true, Categories: catsWithReg}.Build(), false},
		{storage.ImageIntegration_builder{Autogenerated: true, Categories: catsMultiWithReg}.Build(), false},
		{storage.ImageIntegration_builder{Autogenerated: false, Categories: catsWithoutReg}.Build(), false},
		{storage.ImageIntegration_builder{Autogenerated: false, Categories: catsWithReg}.Build(), true},
		{storage.ImageIntegration_builder{Autogenerated: false, Categories: catsMultiWithReg}.Build(), true},
	}

	for i, test := range tt {
		t.Run(fmt.Sprintf("%v", i), func(t *testing.T) {
			actual := ValidForSync(test.ii)
			assert.Equal(t, test.expected, actual)
		})
	}
}
