// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"github.com/stackrox/rox/pkg/postgres"
)

var (
	// CreateTableVulnreqStmt holds the create statement for table `Vulnreq`.
	CreateTableVulnreqStmt = &postgres.CreateStmts{
		Table: `
               create table if not exists vulnreq (
                   Id varchar,
                   TargetState integer,
                   Status integer,
                   Expired bool,
                   Requestor_Name varchar,
                   CreatedAt timestamp,
                   LastUpdated timestamp,
                   DeferralReq_Expiry_ExpiresWhenFixed bool,
                   DeferralReq_Expiry_ExpiresOn timestamp,
                   Cves_Ids text[],
                   serialized bytea,
                   PRIMARY KEY(Id)
               )
               `,
		Indexes: []string{},
		Children: []*postgres.CreateStmts{
			&postgres.CreateStmts{
				Table: `
               create table if not exists vulnreq_Approvers (
                   vulnreq_Id varchar,
                   idx integer,
                   Name varchar,
                   PRIMARY KEY(vulnreq_Id, idx),
                   CONSTRAINT fk_parent_table_0 FOREIGN KEY (vulnreq_Id) REFERENCES vulnreq(Id) ON DELETE CASCADE
               )
               `,
				Indexes: []string{
					"create index if not exists vulnreqApprovers_idx on vulnreq_Approvers using btree(idx)",
				},
				Children: []*postgres.CreateStmts{},
			},
			&postgres.CreateStmts{
				Table: `
               create table if not exists vulnreq_Comments (
                   vulnreq_Id varchar,
                   idx integer,
                   User_Name varchar,
                   PRIMARY KEY(vulnreq_Id, idx),
                   CONSTRAINT fk_parent_table_0 FOREIGN KEY (vulnreq_Id) REFERENCES vulnreq(Id) ON DELETE CASCADE
               )
               `,
				Indexes: []string{
					"create index if not exists vulnreqComments_idx on vulnreq_Comments using btree(idx)",
				},
				Children: []*postgres.CreateStmts{},
			},
		},
	}
)
