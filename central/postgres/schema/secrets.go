// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"github.com/stackrox/rox/pkg/postgres"
)

var (
	// CreateTableSecretsStmt holds the create statement for table `Secrets`.
	CreateTableSecretsStmt = &postgres.CreateStmts{
		Table: `
               create table if not exists secrets (
                   Id varchar,
                   Name varchar,
                   ClusterId varchar,
                   ClusterName varchar,
                   Namespace varchar,
                   CreatedAt timestamp,
                   serialized bytea,
                   PRIMARY KEY(Id)
               )
               `,
		Indexes: []string{},
		Children: []*postgres.CreateStmts{
			&postgres.CreateStmts{
				Table: `
               create table if not exists secrets_Files (
                   secrets_Id varchar,
                   idx integer,
                   Type integer,
                   Cert_EndDate timestamp,
                   PRIMARY KEY(secrets_Id, idx),
                   CONSTRAINT fk_parent_table_0 FOREIGN KEY (secrets_Id) REFERENCES secrets(Id) ON DELETE CASCADE
               )
               `,
				Indexes: []string{
					"create index if not exists secretsFiles_idx on secrets_Files using btree(idx)",
				},
				Children: []*postgres.CreateStmts{
					&postgres.CreateStmts{
						Table: `
               create table if not exists secrets_Files_Registries (
                   secrets_Id varchar,
                   secrets_Files_idx integer,
                   idx integer,
                   Name varchar,
                   PRIMARY KEY(secrets_Id, secrets_Files_idx, idx),
                   CONSTRAINT fk_parent_table_0 FOREIGN KEY (secrets_Id, secrets_Files_idx) REFERENCES secrets_Files(secrets_Id, idx) ON DELETE CASCADE
               )
               `,
						Indexes: []string{
							"create index if not exists secretsFilesRegistries_idx on secrets_Files_Registries using btree(idx)",
						},
						Children: []*postgres.CreateStmts{},
					},
				},
			},
		},
	}
)
