// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"reflect"

	"github.com/stackrox/rox/central/globaldb"
	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
)

var (
	// CreateTableTestg3granchild1Stmt holds the create statement for table `testg3granchild1`.
	CreateTableTestg3granchild1Stmt = &postgres.CreateStmts{
		Table: `
               create table if not exists testg3granchild1 (
                   Id varchar,
                   Val varchar,
                   serialized bytea,
                   PRIMARY KEY(Id)
               )
               `,
		Indexes:  []string{},
		Children: []*postgres.CreateStmts{},
	}

	// Testg3granchild1Schema is the go schema for table `testg3granchild1`.
	Testg3granchild1Schema = func() *walker.Schema {
		schema := globaldb.GetSchemaForTable("testg3granchild1")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.TestG3GrandChild1)(nil)), "testg3granchild1")
		globaldb.RegisterTable(schema)
		return schema
	}()
)
