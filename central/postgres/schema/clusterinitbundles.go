// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"reflect"

	"github.com/stackrox/rox/central/globaldb"
	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
)

var (
	// CreateTableClusterinitbundlesStmt holds the create statement for table `clusterinitbundles`.
	CreateTableClusterinitbundlesStmt = &postgres.CreateStmts{
		Table: `
               create table if not exists clusterinitbundles (
                   Id varchar,
                   serialized bytea,
                   PRIMARY KEY(Id)
               )
               `,
		Indexes:  []string{},
		Children: []*postgres.CreateStmts{},
	}

	// ClusterinitbundlesSchema is the go schema for table `clusterinitbundles`.
	ClusterinitbundlesSchema = func() *walker.Schema {
		schema := globaldb.GetSchemaForTable("clusterinitbundles")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.InitBundleMeta)(nil)), "clusterinitbundles")
		globaldb.RegisterTable(schema)
		return schema
	}()
)

const (
	ClusterinitbundlesTableName = "clusterinitbundles"
	/*
		ClusterinitbundlesTableName = "clusterinitbundles"
	*/
)

// InitBundleMeta holds the Gorm model for Postgres table `clusterinitbundles`.
type Clusterinitbundles struct {
	Id         string `gorm:"column:id;type:varchar;primaryKey"`
	Serialized []byte `gorm:"column:serialized;type:bytea"`
}
