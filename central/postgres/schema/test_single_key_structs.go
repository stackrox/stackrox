// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"reflect"

	"github.com/stackrox/rox/central/globaldb"
	v1 "github.com/stackrox/rox/generated/api/v1"
	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
	"github.com/stackrox/rox/pkg/search"
)

var (
	// CreateTableTestSingleKeyStructsStmt holds the create statement for table `test_single_key_structs`.
	CreateTableTestSingleKeyStructsStmt = &postgres.CreateStmts{
		Table: `
               create table if not exists test_single_key_structs (
                   Key varchar,
                   Name varchar UNIQUE,
                   StringSlice text[],
                   Bool bool,
                   Uint64 integer,
                   Int64 integer,
                   Float numeric,
                   Labels jsonb,
                   Timestamp timestamp,
                   Enum integer,
                   Enums int[],
                   serialized bytea,
                   PRIMARY KEY(Key)
               )
               `,
		Indexes: []string{
			"create index if not exists testSingleKeyStructs_Key on test_single_key_structs using hash(Key)",
		},
		Children: []*postgres.CreateStmts{},
	}

	// TestSingleKeyStructsSchema is the go schema for table `test_single_key_structs`.
	TestSingleKeyStructsSchema = func() *walker.Schema {
		schema := globaldb.GetSchemaForTable("test_single_key_structs")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.TestSingleKeyStruct)(nil)), "test_single_key_structs")
		schema.SetOptionsMap(search.Walk(v1.SearchCategory_SEARCH_UNSET, "testsinglekeystruct", (*storage.TestSingleKeyStruct)(nil)))
		globaldb.RegisterTable(schema)
		return schema
	}()
)
