// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"reflect"

	"github.com/stackrox/rox/central/globaldb"
	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
)

var (
	// CreateTableComplianceoperatorcheckresultsStmt holds the create statement for table `complianceoperatorcheckresults`.
	CreateTableComplianceoperatorcheckresultsStmt = &postgres.CreateStmts{
		Table: `
               create table if not exists complianceoperatorcheckresults (
                   Id varchar,
                   serialized bytea,
                   PRIMARY KEY(Id)
               )
               `,
		Indexes:  []string{},
		Children: []*postgres.CreateStmts{},
	}

	// ComplianceoperatorcheckresultsSchema is the go schema for table `complianceoperatorcheckresults`.
	ComplianceoperatorcheckresultsSchema = func() *walker.Schema {
		schema := globaldb.GetSchemaForTable("complianceoperatorcheckresults")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.ComplianceOperatorCheckResult)(nil)), "complianceoperatorcheckresults")
		globaldb.RegisterTable(schema)
		return schema
	}()
)
