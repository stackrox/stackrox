// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"reflect"

	"github.com/stackrox/rox/central/globaldb"
	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres"
	"github.com/stackrox/rox/pkg/postgres/walker"
)

var (
	// CreateTableClusterHealthStatusStmt holds the create statement for table `cluster_health_status`.
	CreateTableClusterHealthStatusStmt = &postgres.CreateStmts{
		Table: `
               create table if not exists cluster_health_status (
                   Id varchar,
                   SensorHealthStatus integer,
                   CollectorHealthStatus integer,
                   OverallHealthStatus integer,
                   AdmissionControlHealthStatus integer,
                   ScannerHealthStatus integer,
                   serialized bytea,
                   PRIMARY KEY(Id)
               )
               `,
		Indexes:  []string{},
		Children: []*postgres.CreateStmts{},
	}

	// ClusterHealthStatusSchema is the go schema for table `cluster_health_status`.
	ClusterHealthStatusSchema = func() *walker.Schema {
		schema := globaldb.GetSchemaForTable("cluster_health_status")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.ClusterHealthStatus)(nil)), "cluster_health_status")
		globaldb.RegisterTable(schema)
		return schema
	}()
)

const (
	ClusterHealthStatusTableName = "cluster_health_status"
)

// ClusterHealthStatus holds the Gorm model for Postgres table `cluster_health_status`.
type ClusterHealthStatus struct {
	Id                           string                                        `gorm:"column:id;type:varchar;primaryKey"`
	SensorHealthStatus           storage.ClusterHealthStatus_HealthStatusLabel `gorm:"column:sensorhealthstatus;type:integer"`
	CollectorHealthStatus        storage.ClusterHealthStatus_HealthStatusLabel `gorm:"column:collectorhealthstatus;type:integer"`
	OverallHealthStatus          storage.ClusterHealthStatus_HealthStatusLabel `gorm:"column:overallhealthstatus;type:integer"`
	AdmissionControlHealthStatus storage.ClusterHealthStatus_HealthStatusLabel `gorm:"column:admissioncontrolhealthstatus;type:integer"`
	ScannerHealthStatus          storage.ClusterHealthStatus_HealthStatusLabel `gorm:"column:scannerhealthstatus;type:integer"`
	serialized                   []byte                                        `gorm:"column:serialized;type:bytea"`
}
