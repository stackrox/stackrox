// Code generated by MockGen. DO NOT EDIT.
// Source: pruner.go
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/pruner.go -source pruner.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockPruner is a mock of Pruner interface.
type MockPruner struct {
	ctrl     *gomock.Controller
	recorder *MockPrunerMockRecorder
}

// MockPrunerMockRecorder is the mock recorder for MockPruner.
type MockPrunerMockRecorder struct {
	mock *MockPruner
}

// NewMockPruner creates a new mock instance.
func NewMockPruner(ctrl *gomock.Controller) *MockPruner {
	mock := &MockPruner{ctrl: ctrl}
	mock.recorder = &MockPrunerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPruner) EXPECT() *MockPrunerMockRecorder {
	return m.recorder
}

// RemoveComplianceResourcesByCluster mocks base method.
func (m *MockPruner) RemoveComplianceResourcesByCluster(ctx context.Context, clusterID string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RemoveComplianceResourcesByCluster", ctx, clusterID)
}

// RemoveComplianceResourcesByCluster indicates an expected call of RemoveComplianceResourcesByCluster.
func (mr *MockPrunerMockRecorder) RemoveComplianceResourcesByCluster(ctx, clusterID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveComplianceResourcesByCluster", reflect.TypeOf((*MockPruner)(nil).RemoveComplianceResourcesByCluster), ctx, clusterID)
}
