// Code generated by pg-bindings generator. DO NOT EDIT.

//go:build sql_integration

package postgres

import (
	"context"
	"testing"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/features"
	"github.com/stackrox/rox/pkg/postgres/pgtest"
	"github.com/stackrox/rox/pkg/sac"
	"github.com/stackrox/rox/pkg/testutils"
	"github.com/stretchr/testify/suite"
)

type ComplianceOperatorProfileClusterEdgesStoreSuite struct {
	suite.Suite
	store  Store
	testDB *pgtest.TestPostgres
}

func TestComplianceOperatorProfileClusterEdgesStore(t *testing.T) {
	suite.Run(t, new(ComplianceOperatorProfileClusterEdgesStoreSuite))
}

func (s *ComplianceOperatorProfileClusterEdgesStoreSuite) SetupSuite() {

	s.T().Setenv(features.ComplianceEnhancements.EnvVar(), "true")
	if !features.ComplianceEnhancements.Enabled() {
		s.T().Skip("Skip postgres store tests because feature flag is off")
		s.T().SkipNow()
	}

	s.testDB = pgtest.ForT(s.T())
	s.store = New(s.testDB.DB)
}

func (s *ComplianceOperatorProfileClusterEdgesStoreSuite) SetupTest() {
	ctx := sac.WithAllAccess(context.Background())
	tag, err := s.testDB.Exec(ctx, "TRUNCATE compliance_operator_profile_cluster_edges CASCADE")
	s.T().Log("compliance_operator_profile_cluster_edges", tag)
	s.NoError(err)
}

func (s *ComplianceOperatorProfileClusterEdgesStoreSuite) TearDownSuite() {
	s.testDB.Teardown(s.T())
}

func (s *ComplianceOperatorProfileClusterEdgesStoreSuite) TestStore() {
	ctx := sac.WithAllAccess(context.Background())

	store := s.store

	complianceOperatorProfileClusterEdge := &storage.ComplianceOperatorProfileClusterEdge{}
	s.NoError(testutils.FullInit(complianceOperatorProfileClusterEdge, testutils.SimpleInitializer(), testutils.JSONFieldsFilter))

	foundComplianceOperatorProfileClusterEdge, exists, err := store.Get(ctx, complianceOperatorProfileClusterEdge.GetId())
	s.NoError(err)
	s.False(exists)
	s.Nil(foundComplianceOperatorProfileClusterEdge)

}
