// Code generated by MockGen. DO NOT EDIT.
// Source: set.go
//
// Generated by this command:
//
//	mockgen -package mocks -destination mocks/set.go -source set.go
//
// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	storage "github.com/stackrox/rox/generated/storage"
	gomock "go.uber.org/mock/gomock"
)

// MockTokenExchangerSet is a mock of TokenExchangerSet interface.
type MockTokenExchangerSet struct {
	ctrl     *gomock.Controller
	recorder *MockTokenExchangerSetMockRecorder
}

// MockTokenExchangerSetMockRecorder is the mock recorder for MockTokenExchangerSet.
type MockTokenExchangerSetMockRecorder struct {
	mock *MockTokenExchangerSet
}

// NewMockTokenExchangerSet creates a new mock instance.
func NewMockTokenExchangerSet(ctrl *gomock.Controller) *MockTokenExchangerSet {
	mock := &MockTokenExchangerSet{ctrl: ctrl}
	mock.recorder = &MockTokenExchangerSetMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenExchangerSet) EXPECT() *MockTokenExchangerSetMockRecorder {
	return m.recorder
}

// ExchangeToken mocks base method.
func (m *MockTokenExchangerSet) ExchangeToken(ctx context.Context, rawIDToken string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExchangeToken", ctx, rawIDToken)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExchangeToken indicates an expected call of ExchangeToken.
func (mr *MockTokenExchangerSetMockRecorder) ExchangeToken(ctx, rawIDToken any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExchangeToken", reflect.TypeOf((*MockTokenExchangerSet)(nil).ExchangeToken), ctx, rawIDToken)
}

// RemoveTokenExchanger mocks base method.
func (m *MockTokenExchangerSet) RemoveTokenExchanger(id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveTokenExchanger", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveTokenExchanger indicates an expected call of RemoveTokenExchanger.
func (mr *MockTokenExchangerSetMockRecorder) RemoveTokenExchanger(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveTokenExchanger", reflect.TypeOf((*MockTokenExchangerSet)(nil).RemoveTokenExchanger), id)
}

// UpsertTokenExchanger mocks base method.
func (m *MockTokenExchangerSet) UpsertTokenExchanger(config *storage.AuthMachineToMachineConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpsertTokenExchanger", config)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpsertTokenExchanger indicates an expected call of UpsertTokenExchanger.
func (mr *MockTokenExchangerSetMockRecorder) UpsertTokenExchanger(config any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpsertTokenExchanger", reflect.TypeOf((*MockTokenExchangerSet)(nil).UpsertTokenExchanger), config)
}
