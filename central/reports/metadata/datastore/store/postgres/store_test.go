// Code generated by pg-bindings generator. DO NOT EDIT.

//go:build sql_integration

package postgres

import (
	"context"
	"testing"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres/pgtest"
	"github.com/stackrox/rox/pkg/sac"
	"github.com/stackrox/rox/pkg/testutils"
	"github.com/stretchr/testify/suite"
)

type ReportMetadatasStoreSuite struct {
	suite.Suite
	store  Store
	testDB *pgtest.TestPostgres
}

func TestReportMetadatasStore(t *testing.T) {
	suite.Run(t, new(ReportMetadatasStoreSuite))
}

func (s *ReportMetadatasStoreSuite) SetupSuite() {

	s.testDB = pgtest.ForT(s.T())
	s.store = New(s.testDB.DB)
}

func (s *ReportMetadatasStoreSuite) SetupTest() {
	ctx := sac.WithAllAccess(context.Background())
	tag, err := s.testDB.Exec(ctx, "TRUNCATE report_metadatas CASCADE")
	s.T().Log("report_metadatas", tag)
	s.NoError(err)
}

func (s *ReportMetadatasStoreSuite) TearDownSuite() {
	s.testDB.Teardown(s.T())
}

func (s *ReportMetadatasStoreSuite) TestStore() {
	ctx := sac.WithAllAccess(context.Background())

	store := s.store

	reportMetadata := &storage.ReportMetadata{}
	s.NoError(testutils.FullInit(reportMetadata, testutils.SimpleInitializer(), testutils.JSONFieldsFilter))

	foundReportMetadata, exists, err := store.Get(ctx, reportMetadata.GetReportId())
	s.NoError(err)
	s.False(exists)
	s.Nil(foundReportMetadata)

	withNoAccessCtx := sac.WithNoAccess(ctx)

	s.NoError(store.Upsert(ctx, reportMetadata))
	foundReportMetadata, exists, err = store.Get(ctx, reportMetadata.GetReportId())
	s.NoError(err)
	s.True(exists)
	s.Equal(reportMetadata, foundReportMetadata)

	reportMetadataCount, err := store.Count(ctx)
	s.NoError(err)
	s.Equal(1, reportMetadataCount)
	reportMetadataCount, err = store.Count(withNoAccessCtx)
	s.NoError(err)
	s.Zero(reportMetadataCount)

	reportMetadataExists, err := store.Exists(ctx, reportMetadata.GetReportId())
	s.NoError(err)
	s.True(reportMetadataExists)
	s.NoError(store.Upsert(ctx, reportMetadata))
	s.ErrorIs(store.Upsert(withNoAccessCtx, reportMetadata), sac.ErrResourceAccessDenied)

	foundReportMetadata, exists, err = store.Get(ctx, reportMetadata.GetReportId())
	s.NoError(err)
	s.True(exists)
	s.Equal(reportMetadata, foundReportMetadata)

	s.NoError(store.Delete(ctx, reportMetadata.GetReportId()))
	foundReportMetadata, exists, err = store.Get(ctx, reportMetadata.GetReportId())
	s.NoError(err)
	s.False(exists)
	s.Nil(foundReportMetadata)
	s.ErrorIs(store.Delete(withNoAccessCtx, reportMetadata.GetReportId()), sac.ErrResourceAccessDenied)

	var reportMetadatas []*storage.ReportMetadata
	var reportMetadataIDs []string
	for i := 0; i < 200; i++ {
		reportMetadata := &storage.ReportMetadata{}
		s.NoError(testutils.FullInit(reportMetadata, testutils.UniqueInitializer(), testutils.JSONFieldsFilter))
		reportMetadatas = append(reportMetadatas, reportMetadata)
		reportMetadataIDs = append(reportMetadataIDs, reportMetadata.GetReportId())
	}

	s.NoError(store.UpsertMany(ctx, reportMetadatas))

	reportMetadataCount, err = store.Count(ctx)
	s.NoError(err)
	s.Equal(200, reportMetadataCount)

	s.NoError(store.DeleteMany(ctx, reportMetadataIDs))

	reportMetadataCount, err = store.Count(ctx)
	s.NoError(err)
	s.Equal(0, reportMetadataCount)
}
